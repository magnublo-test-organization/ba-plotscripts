<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.2 (Python 3.7.3 on linux)" generated="20201030 11:50:32.917" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.148" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:34.164" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:35.978" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:34.144" endtime="20201030 11:50:35.979"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.984" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:35.981" endtime="20201030 11:50:35.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.141" endtime="20201030 11:50:35.987"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.991" endtime="20201030 11:50:36.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.989" endtime="20201030 11:50:36.322"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.353" endtime="20201030 11:50:36.387"></status>
</kw>
<msg timestamp="20201030 11:50:36.388" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201030 11:50:36.350" endtime="20201030 11:50:36.388"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.394" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb', ...</msg>
<status status="PASS" starttime="20201030 11:50:36.390" endtime="20201030 11:50:36.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.401" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:36.397" endtime="20201030 11:50:36.402"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.344" endtime="20201030 11:50:36.404"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.337" endtime="20201030 11:50:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.334" endtime="20201030 11:50:36.406"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:36.414" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:36.413" endtime="20201030 11:50:36.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.408" endtime="20201030 11:50:36.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.333" endtime="20201030 11:50:36.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.331" endtime="20201030 11:50:36.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.418" endtime="20201030 11:50:36.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.327" endtime="20201030 11:50:36.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.424" endtime="20201030 11:50:36.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.324" endtime="20201030 11:50:36.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.137" endtime="20201030 11:50:36.430"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.445" endtime="20201030 11:50:36.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.441" endtime="20201030 11:50:36.469"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.504" endtime="20201030 11:50:36.528"></status>
</kw>
<msg timestamp="20201030 11:50:36.529" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.500" endtime="20201030 11:50:36.529"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.536" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.531" endtime="20201030 11:50:36.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.542" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:36.538" endtime="20201030 11:50:36.543"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.493" endtime="20201030 11:50:36.545"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:36.487" endtime="20201030 11:50:36.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.483" endtime="20201030 11:50:36.547"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:36.554" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:36.553" endtime="20201030 11:50:36.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.549" endtime="20201030 11:50:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.481" endtime="20201030 11:50:36.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.478" endtime="20201030 11:50:36.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.558" endtime="20201030 11:50:36.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.474" endtime="20201030 11:50:36.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.470" endtime="20201030 11:50:36.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.439" endtime="20201030 11:50:36.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.583" endtime="20201030 11:50:36.596"></status>
</kw>
<msg timestamp="20201030 11:50:36.597" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.580" endtime="20201030 11:50:36.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.603" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.599" endtime="20201030 11:50:36.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.605" endtime="20201030 11:50:36.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.573" endtime="20201030 11:50:36.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.568" endtime="20201030 11:50:36.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.623" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:50:36.621" endtime="20201030 11:50:36.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.628" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:50:36.625" endtime="20201030 11:50:36.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.614" endtime="20201030 11:50:36.630"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:36.431" endtime="20201030 11:50:36.632" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:33.179" endtime="20201030 11:50:36.640"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.774" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:36.790" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:38.737" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:36.770" endtime="20201030 11:50:38.738"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.743" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:38.740" endtime="20201030 11:50:38.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.768" endtime="20201030 11:50:38.746"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.750" endtime="20201030 11:50:39.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.747" endtime="20201030 11:50:39.081"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.110" endtime="20201030 11:50:39.143"></status>
</kw>
<msg timestamp="20201030 11:50:39.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb',...</msg>
<status status="PASS" starttime="20201030 11:50:39.106" endtime="20201030 11:50:39.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.150" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb',...</msg>
<status status="PASS" starttime="20201030 11:50:39.146" endtime="20201030 11:50:39.151"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.157" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:39.153" endtime="20201030 11:50:39.158"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.100" endtime="20201030 11:50:39.160"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.095" endtime="20201030 11:50:39.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.092" endtime="20201030 11:50:39.162"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:39.170" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:39.168" endtime="20201030 11:50:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.164" endtime="20201030 11:50:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.090" endtime="20201030 11:50:39.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.089" endtime="20201030 11:50:39.172"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.173" endtime="20201030 11:50:39.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.086" endtime="20201030 11:50:39.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.180" endtime="20201030 11:50:39.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.082" endtime="20201030 11:50:39.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.765" endtime="20201030 11:50:39.186"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.200" endtime="20201030 11:50:39.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.196" endtime="20201030 11:50:39.223"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.320" endtime="20201030 11:50:39.344"></status>
</kw>
<msg timestamp="20201030 11:50:39.345" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.315" endtime="20201030 11:50:39.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.352" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.347" endtime="20201030 11:50:39.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.359" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:39.354" endtime="20201030 11:50:39.359"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.308" endtime="20201030 11:50:39.361"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.301" endtime="20201030 11:50:39.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.237" endtime="20201030 11:50:39.364"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:39.372" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:39.371" endtime="20201030 11:50:39.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.366" endtime="20201030 11:50:39.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.235" endtime="20201030 11:50:39.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.233" endtime="20201030 11:50:39.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.376" endtime="20201030 11:50:39.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.229" endtime="20201030 11:50:39.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.224" endtime="20201030 11:50:39.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.193" endtime="20201030 11:50:39.383"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.406" endtime="20201030 11:50:39.420"></status>
</kw>
<msg timestamp="20201030 11:50:39.421" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.403" endtime="20201030 11:50:39.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.423" endtime="20201030 11:50:39.428"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.430" endtime="20201030 11:50:39.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.396" endtime="20201030 11:50:39.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.391" endtime="20201030 11:50:39.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.455" endtime="20201030 11:50:39.762"></status>
</kw>
<msg timestamp="20201030 11:50:39.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197373306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197392653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:39.451" endtime="20201030 11:50:39.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197373306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197392653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:39.769" endtime="20201030 11:50:39.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.781" endtime="20201030 11:50:39.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.444" endtime="20201030 11:50:39.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.438" endtime="20201030 11:50:39.788"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.798" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.356899999999106e-05}, {'diff': 1.377800000001983e-05}, {'diff': 2.481999999998097e-05}, {'diff': 2.7305000000005242e-05}, {'diff': 2.2110999999991332e-05}, {'diff': 2.08339999...</msg>
<status status="PASS" starttime="20201030 11:50:39.790" endtime="20201030 11:50:39.799"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:39.805" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.356899999999106e-05, 1.377800000001983e-05, 2.481999999998097e-05, 2.7305000000005242e-05, 2.2110999999991332e-05, 2.0833999999997355e-05, 1.587499999999853e-05, 1.733300000000826e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:39.800" endtime="20201030 11:50:39.806"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.816" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:39.813" endtime="20201030 11:50:39.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.821" level="INFO">VALUE: [0, 1.356899999999106e-05, 1.377800000001983e-05, 2.481999999998097e-05, 2.7305000000005242e-05, 2.2110999999991332e-05, 2.0833999999997355e-05, 1.587499999999853e-05, 1.733300000000826e-05, 2.6276999999991224e-05, 1.6278000000008452e-05, 2.5055999999995526e-05, 1.4639000000010727e-05, 2.5013999999989878e-05, 6.944000000008721e-06, 2.1070000000011913e-05, 2.5430999999992432e-05, 1.8153000000020736e-05, 1.5236000000001804e-05, 2.688900000000216e-05, 1.7708999999976882e-05, 1.129099999999661e-05, 2.6054999999997053e-05, 1.0221999999976417e-05, 1.502700000000079e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.818" endtime="20201030 11:50:39.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.807" endtime="20201030 11:50:39.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.388" endtime="20201030 11:50:39.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.387" endtime="20201030 11:50:39.825"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.846" endtime="20201030 11:50:39.860"></status>
</kw>
<msg timestamp="20201030 11:50:39.861" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.842" endtime="20201030 11:50:39.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.867" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.863" endtime="20201030 11:50:39.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.869" endtime="20201030 11:50:39.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.835" endtime="20201030 11:50:39.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.830" endtime="20201030 11:50:39.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.894" endtime="20201030 11:50:40.241"></status>
</kw>
<msg timestamp="20201030 11:50:40.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197373306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197392653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:39.890" endtime="20201030 11:50:40.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197373306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197392653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:40.250" endtime="20201030 11:50:40.267"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.269" endtime="20201030 11:50:40.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.882" endtime="20201030 11:50:40.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.878" endtime="20201030 11:50:40.276"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.286" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.356899999999106e-05}, {'diff': 1.377800000001983e-05}, {'diff': 2.481999999998097e-05}, {'diff': 2.7305000000005242e-05}, {'diff': 2.2110999999991332e-05}, {'diff': 2.08339999...</msg>
<status status="PASS" starttime="20201030 11:50:40.277" endtime="20201030 11:50:40.287"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:40.296" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.356899999999106e-05, 1.377800000001983e-05, 2.481999999998097e-05, 2.7305000000005242e-05, 2.2110999999991332e-05, 2.0833999999997355e-05, 1.587499999999853e-05, 1.733300000000826e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:40.288" endtime="20201030 11:50:40.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.306" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:40.304" endtime="20201030 11:50:40.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.312" level="INFO">VALUE: [0, 1.356899999999106e-05, 1.377800000001983e-05, 2.481999999998097e-05, 2.7305000000005242e-05, 2.2110999999991332e-05, 2.0833999999997355e-05, 1.587499999999853e-05, 1.733300000000826e-05, 2.6276999999991224e-05, 1.6278000000008452e-05, 2.5055999999995526e-05, 1.4639000000010727e-05, 2.5013999999989878e-05, 6.944000000008721e-06, 2.1070000000011913e-05, 2.5430999999992432e-05, 1.8153000000020736e-05, 1.5236000000001804e-05, 2.688900000000216e-05, 1.7708999999976882e-05, 1.129099999999661e-05, 2.6054999999997053e-05, 1.0221999999976417e-05, 1.502700000000079e-05, 0.42826255600000007, 1.8347000000029645e-05, 1.420799999996003e-05, 2.105600000001928e-05, 1.6903000000012547e-05, 2.2736000000023182e-05, 2.462500000000034e-05, 2.084800000001774e-05, 2.3401999999950185e-05, 1.545899999999545e-05, 1.7527999999988886e-05, 2.211099999993582e-05, 1.779199999996095e-05, 1.355499999999843e-05, 2.668000000005666e-05, 1.377800000001983e-05, 1.3569000000046572e-05, 2.691700000001518e-05, 2.48339999999736e-05, 1.1290999999968854e-05, 1.2333000000031014e-05, 6.52800000000564e-06, 2.230500000000024e-05, 2.230500000000024e-05, 1.670799999997641e-05]</msg>
<status status="PASS" starttime="20201030 11:50:40.309" endtime="20201030 11:50:40.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.298" endtime="20201030 11:50:40.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.827" endtime="20201030 11:50:40.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.826" endtime="20201030 11:50:40.316"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.338" endtime="20201030 11:50:40.351"></status>
</kw>
<msg timestamp="20201030 11:50:40.352" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.333" endtime="20201030 11:50:40.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.358" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.354" endtime="20201030 11:50:40.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.360" endtime="20201030 11:50:40.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.326" endtime="20201030 11:50:40.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.321" endtime="20201030 11:50:40.367"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.384" endtime="20201030 11:50:40.744"></status>
</kw>
<msg timestamp="20201030 11:50:40.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197772264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197795389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:40.381" endtime="20201030 11:50:40.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.197772264, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.197795389, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:40.755" endtime="20201030 11:50:40.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.777" endtime="20201030 11:50:40.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.373" endtime="20201030 11:50:40.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.369" endtime="20201030 11:50:40.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.795" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4639000000010727e-05}, {'diff': 2.5013999999989878e-05}, {'diff': 6.944000000008721e-06}, {'diff': 2.1070000000011913e-05}, {'diff': 2.5430999999992432e-05}, {'diff': 1.815300...</msg>
<status status="PASS" starttime="20201030 11:50:40.785" endtime="20201030 11:50:40.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:40.807" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4639000000010727e-05, 2.5013999999989878e-05, 6.944000000008721e-06, 2.1070000000011913e-05, 2.5430999999992432e-05, 1.8153000000020736e-05, 1.5236000000001804e-05, 2.688900000000216e-0...</msg>
<status status="PASS" starttime="20201030 11:50:40.797" endtime="20201030 11:50:40.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.817" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:40.815" endtime="20201030 11:50:40.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.823" level="INFO">VALUE: [0, 1.4639000000010727e-05, 2.5013999999989878e-05, 6.944000000008721e-06, 2.1070000000011913e-05, 2.5430999999992432e-05, 1.8153000000020736e-05, 1.5236000000001804e-05, 2.688900000000216e-05, 1.7708999999976882e-05, 1.129099999999661e-05, 2.6054999999997053e-05, 1.0221999999976417e-05, 1.502700000000079e-05, 0.42826255600000007, 1.8347000000029645e-05, 1.420799999996003e-05, 2.105600000001928e-05, 1.6903000000012547e-05, 2.2736000000023182e-05, 2.462500000000034e-05, 2.084800000001774e-05, 2.3401999999950185e-05, 1.545899999999545e-05, 1.7527999999988886e-05, 2.211099999993582e-05, 1.779199999996095e-05, 1.355499999999843e-05, 2.668000000005666e-05, 1.377800000001983e-05, 1.3569000000046572e-05, 2.691700000001518e-05, 2.48339999999736e-05, 1.1290999999968854e-05, 1.2333000000031014e-05, 6.52800000000564e-06, 2.230500000000024e-05, 2.230500000000024e-05, 1.670799999997641e-05, 0.482196917, 1.855599999989188e-05, 6.528000000116663e-06, 2.3153000000109003e-05, 1.251400000001901e-05, 1.7332999999952747e-05, 1.2110999999981331e-05, 1.650000000008589e-05, 2.2151999999886485e-05, 2.820899999989024e-05, 7.124999999996717e-06, 1.95839999999059e-05, 1.1903000000090813e-05, 9.417000000011555e-06, 1.4195000000105651e-05, 1.8999999999991246e-05, 2.227800000009772e-05, 2.587499999995302e-05, 2.7346999999844357e-05, 1.127799999989243e-05, 1.4180999999835464e-05, 1.981899999980996e-05, 2.337499999982562e-05, 8.556000000048414e-06, 1.2528000000067152e-05]</msg>
<status status="PASS" starttime="20201030 11:50:40.820" endtime="20201030 11:50:40.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.808" endtime="20201030 11:50:40.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.318" endtime="20201030 11:50:40.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.317" endtime="20201030 11:50:40.828"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.848" endtime="20201030 11:50:40.862"></status>
</kw>
<msg timestamp="20201030 11:50:40.863" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.845" endtime="20201030 11:50:40.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.870" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.866" endtime="20201030 11:50:40.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.872" endtime="20201030 11:50:40.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.838" endtime="20201030 11:50:40.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.833" endtime="20201030 11:50:40.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.896" endtime="20201030 11:50:41.253"></status>
</kw>
<msg timestamp="20201030 11:50:41.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.626915625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.626926069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:40.893" endtime="20201030 11:50:41.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.626915625, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.626926069, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:41.264" endtime="20201030 11:50:41.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.286" endtime="20201030 11:50:41.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.885" endtime="20201030 11:50:41.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.880" endtime="20201030 11:50:41.293"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.304" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.779199999996095e-05}, {'diff': 1.355499999999843e-05}, {'diff': 2.668000000005666e-05}, {'diff': 1.377800000001983e-05}, {'diff': 1.3569000000046572e-05}, {'diff': 2.691700000...</msg>
<status status="PASS" starttime="20201030 11:50:41.295" endtime="20201030 11:50:41.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:41.316" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.779199999996095e-05, 1.355499999999843e-05, 2.668000000005666e-05, 1.377800000001983e-05, 1.3569000000046572e-05, 2.691700000001518e-05, 2.48339999999736e-05, 1.1290999999968854e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:50:41.306" endtime="20201030 11:50:41.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.327" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:41.325" endtime="20201030 11:50:41.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.332" level="INFO">VALUE: [0, 1.779199999996095e-05, 1.355499999999843e-05, 2.668000000005666e-05, 1.377800000001983e-05, 1.3569000000046572e-05, 2.691700000001518e-05, 2.48339999999736e-05, 1.1290999999968854e-05, 1.2333000000031014e-05, 6.52800000000564e-06, 2.230500000000024e-05, 2.230500000000024e-05, 1.670799999997641e-05, 0.482196917, 1.855599999989188e-05, 6.528000000116663e-06, 2.3153000000109003e-05, 1.251400000001901e-05, 1.7332999999952747e-05, 1.2110999999981331e-05, 1.650000000008589e-05, 2.2151999999886485e-05, 2.820899999989024e-05, 7.124999999996717e-06, 1.95839999999059e-05, 1.1903000000090813e-05, 9.417000000011555e-06, 1.4195000000105651e-05, 1.8999999999991246e-05, 2.227800000009772e-05, 2.587499999995302e-05, 2.7346999999844357e-05, 1.127799999989243e-05, 1.4180999999835464e-05, 1.981899999980996e-05, 2.337499999982562e-05, 8.556000000048414e-06, 1.2528000000067152e-05, 0.4984006379999999, 1.734700000000089e-05, 2.0458000000056487e-05, 7.110999999948575e-06, 1.2721999999909528e-05, 1.9985999999860837e-05, 2.2542000000180806e-05, 1.7527999999877864e-05, 2.0874999999920263e-05, 1.6068999999951927e-05, 1.981899999980996e-05, 1.8139000000028105e-05, 2.3611000000034466e-05, 1.5207999999988786e-05, 9.61099999985393e-06, 1.9403000000028925e-05, 1.9416999999855022e-05, 9.401999999880672e-06, 1.6695000000011007e-05, 2.313900000006086e-05, 2.8528000000083154e-05, 8.013999999834098e-06, 1.587500000010955e-05, 2.1070000000067424e-05, 2.167999999991288e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.329" endtime="20201030 11:50:41.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.319" endtime="20201030 11:50:41.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.830" endtime="20201030 11:50:41.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.829" endtime="20201030 11:50:41.337"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.357" endtime="20201030 11:50:41.370"></status>
</kw>
<msg timestamp="20201030 11:50:41.371" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.354" endtime="20201030 11:50:41.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.374" endtime="20201030 11:50:41.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.380" endtime="20201030 11:50:41.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.347" endtime="20201030 11:50:41.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.342" endtime="20201030 11:50:41.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.403" endtime="20201030 11:50:41.756"></status>
</kw>
<msg timestamp="20201030 11:50:41.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109955667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109979653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:41.400" endtime="20201030 11:50:41.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.109955667, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.109979653, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:41.767" endtime="20201030 11:50:41.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.789" endtime="20201030 11:50:41.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.393" endtime="20201030 11:50:41.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.388" endtime="20201030 11:50:41.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.807" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.1903000000090813e-05}, {'diff': 9.417000000011555e-06}, {'diff': 1.4195000000105651e-05}, {'diff': 1.8999999999991246e-05}, {'diff': 2.227800000009772e-05}, {'diff': 2.5874999...</msg>
<status status="PASS" starttime="20201030 11:50:41.798" endtime="20201030 11:50:41.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:41.818" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.1903000000090813e-05, 9.417000000011555e-06, 1.4195000000105651e-05, 1.8999999999991246e-05, 2.227800000009772e-05, 2.587499999995302e-05, 2.7346999999844357e-05, 1.127799999989243e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:41.809" endtime="20201030 11:50:41.819"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.828" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:41.826" endtime="20201030 11:50:41.829"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.834" level="INFO">VALUE: [0, 1.1903000000090813e-05, 9.417000000011555e-06, 1.4195000000105651e-05, 1.8999999999991246e-05, 2.227800000009772e-05, 2.587499999995302e-05, 2.7346999999844357e-05, 1.127799999989243e-05, 1.4180999999835464e-05, 1.981899999980996e-05, 2.337499999982562e-05, 8.556000000048414e-06, 1.2528000000067152e-05, 0.4984006379999999, 1.734700000000089e-05, 2.0458000000056487e-05, 7.110999999948575e-06, 1.2721999999909528e-05, 1.9985999999860837e-05, 2.2542000000180806e-05, 1.7527999999877864e-05, 2.0874999999920263e-05, 1.6068999999951927e-05, 1.981899999980996e-05, 1.8139000000028105e-05, 2.3611000000034466e-05, 1.5207999999988786e-05, 9.61099999985393e-06, 1.9403000000028925e-05, 1.9416999999855022e-05, 9.401999999880672e-06, 1.6695000000011007e-05, 2.313900000006086e-05, 2.8528000000083154e-05, 8.013999999834098e-06, 1.587500000010955e-05, 2.1070000000067424e-05, 2.167999999991288e-05, 0.4974188749999999, 1.6931000000219854e-05, 2.7527999999943376e-05, 1.3152999999821446e-05, 1.794500000018573e-05, 2.1693999999961022e-05, 1.0666999999742188e-05, 1.4624999999934829e-05, 2.794500000025124e-05, 6.8890000002319596e-06, 7.722000000320861e-06, 1.0666000000103537e-05, 1.9401999999946185e-05, 1.1278000000114474e-05, 1.4624999999934829e-05, 2.4402999999839636e-05, 1.2305000000267796e-05, 1.209800000001593e-05, 1.6471999999989606e-05, 1.6277999999925186e-05, 1.0028000000161796e-05, 1.586200000014415e-05, 1.254199999989325e-05, 1.273599999995767e-05, 2.6486000000325305e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.830" endtime="20201030 11:50:41.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.820" endtime="20201030 11:50:41.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.339" endtime="20201030 11:50:41.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.338" endtime="20201030 11:50:41.838"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.859" endtime="20201030 11:50:41.875"></status>
</kw>
<msg timestamp="20201030 11:50:41.876" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.855" endtime="20201030 11:50:41.877"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.878" endtime="20201030 11:50:41.883"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.885" endtime="20201030 11:50:41.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.848" endtime="20201030 11:50:41.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.843" endtime="20201030 11:50:41.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.910" endtime="20201030 11:50:42.297"></status>
</kw>
<msg timestamp="20201030 11:50:42.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.609180903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.609191958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:41.906" endtime="20201030 11:50:42.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.609180903, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 1.609191958, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:42.309" endtime="20201030 11:50:42.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.332" endtime="20201030 11:50:42.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.899" endtime="20201030 11:50:42.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.894" endtime="20201030 11:50:42.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.351" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.3611000000034466e-05}, {'diff': 1.5207999999988786e-05}, {'diff': 9.61099999985393e-06}, {'diff': 1.9403000000028925e-05}, {'diff': 1.9416999999855022e-05}, {'diff': 9.4019999...</msg>
<status status="PASS" starttime="20201030 11:50:42.341" endtime="20201030 11:50:42.352"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:42.364" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.3611000000034466e-05, 1.5207999999988786e-05, 9.61099999985393e-06, 1.9403000000028925e-05, 1.9416999999855022e-05, 9.401999999880672e-06, 1.6695000000011007e-05, 2.313900000006086e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:42.354" endtime="20201030 11:50:42.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.375" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:42.373" endtime="20201030 11:50:42.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.381" level="INFO">VALUE: [0, 2.3611000000034466e-05, 1.5207999999988786e-05, 9.61099999985393e-06, 1.9403000000028925e-05, 1.9416999999855022e-05, 9.401999999880672e-06, 1.6695000000011007e-05, 2.313900000006086e-05, 2.8528000000083154e-05, 8.013999999834098e-06, 1.587500000010955e-05, 2.1070000000067424e-05, 2.167999999991288e-05, 0.4974188749999999, 1.6931000000219854e-05, 2.7527999999943376e-05, 1.3152999999821446e-05, 1.794500000018573e-05, 2.1693999999961022e-05, 1.0666999999742188e-05, 1.4624999999934829e-05, 2.794500000025124e-05, 6.8890000002319596e-06, 7.722000000320861e-06, 1.0666000000103537e-05, 1.9401999999946185e-05, 1.1278000000114474e-05, 1.4624999999934829e-05, 2.4402999999839636e-05, 1.2305000000267796e-05, 1.209800000001593e-05, 1.6471999999989606e-05, 1.6277999999925186e-05, 1.0028000000161796e-05, 1.586200000014415e-05, 1.254199999989325e-05, 1.273599999995767e-05, 2.6486000000325305e-05, 0.49298630500000007, 8.56900000023586e-06, 2.705499999988703e-05, 1.7125000000284274e-05, 9.61200000038076e-06, 1.709700000018799e-05, 1.6276999999842445e-05, 1.858300000012747e-05, 1.9347000000280445e-05, 8.986000000099637e-06, 1.5625000000074607e-05, 1.2958000000118375e-05, 1.4611000000108731e-05, 2.1693999999961022e-05, 2.1083000000032825e-05, 2.0430999999820898e-05, 2.89870000003134e-05, 1.1070000000223956e-05, 1.8374999999792863e-05, 1.5222000000036928e-05, 1.6277999999925186e-05, 9.389000000137315e-06, 1.566599999991425e-05, 1.5444999999836284e-05, 2.106999999984538e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.378" endtime="20201030 11:50:42.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.366" endtime="20201030 11:50:42.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.840" endtime="20201030 11:50:42.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.839" endtime="20201030 11:50:42.386"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.408" endtime="20201030 11:50:42.422"></status>
</kw>
<msg timestamp="20201030 11:50:42.423" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.404" endtime="20201030 11:50:42.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.430" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.426" endtime="20201030 11:50:42.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.432" endtime="20201030 11:50:42.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.397" endtime="20201030 11:50:42.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.392" endtime="20201030 11:50:42.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.458" endtime="20201030 11:50:42.823"></status>
</kw>
<msg timestamp="20201030 11:50:42.827" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.107432472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.107446667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:42.454" endtime="20201030 11:50:42.827"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.837" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.107432472, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.107446667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:42.828" endtime="20201030 11:50:42.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.838" endtime="20201030 11:50:42.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.446" endtime="20201030 11:50:42.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.441" endtime="20201030 11:50:42.841"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.847" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.9401999999946185e-05}, {'diff': 1.1278000000114474e-05}, {'diff': 1.4624999999934829e-05}, {'diff': 2.4402999999839636e-05}, {'diff': 1.2305000000267796e-05}, {'diff': 1.20980...</msg>
<status status="PASS" starttime="20201030 11:50:42.842" endtime="20201030 11:50:42.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:42.853" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.9401999999946185e-05, 1.1278000000114474e-05, 1.4624999999934829e-05, 2.4402999999839636e-05, 1.2305000000267796e-05, 1.209800000001593e-05, 1.6471999999989606e-05, 1.6277999999925186e-...</msg>
<status status="PASS" starttime="20201030 11:50:42.848" endtime="20201030 11:50:42.853"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.858" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:42.857" endtime="20201030 11:50:42.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.861" level="INFO">VALUE: [0, 1.9401999999946185e-05, 1.1278000000114474e-05, 1.4624999999934829e-05, 2.4402999999839636e-05, 1.2305000000267796e-05, 1.209800000001593e-05, 1.6471999999989606e-05, 1.6277999999925186e-05, 1.0028000000161796e-05, 1.586200000014415e-05, 1.254199999989325e-05, 1.273599999995767e-05, 2.6486000000325305e-05, 0.49298630500000007, 8.56900000023586e-06, 2.705499999988703e-05, 1.7125000000284274e-05, 9.61200000038076e-06, 1.709700000018799e-05, 1.6276999999842445e-05, 1.858300000012747e-05, 1.9347000000280445e-05, 8.986000000099637e-06, 1.5625000000074607e-05, 1.2958000000118375e-05, 1.4611000000108731e-05, 2.1693999999961022e-05, 2.1083000000032825e-05, 2.0430999999820898e-05, 2.89870000003134e-05, 1.1070000000223956e-05, 1.8374999999792863e-05, 1.5222000000036928e-05, 1.6277999999925186e-05, 9.389000000137315e-06, 1.566599999991425e-05, 1.5444999999836284e-05, 2.106999999984538e-05, 0.5354300840000001, 1.273599999995767e-05, 7.110999999948575e-06, 2.3999999999801958e-05, 2.0236000000117826e-05, 1.565300000017089e-05, 1.7582999999987692e-05, 8.360999999901253e-06, 1.819499999999863e-05, 2.0445000000091085e-05, 2.5889000000223206e-05, 1.5056000000068792e-05, 2.522200000010244e-05, 1.917999999978548e-05, 2.5443999999819056e-05, 1.773599999976838e-05, 1.9152999999771936e-05, 1.8999999999991246e-05, 1.0861999999889349e-05, 9.209000000343082e-06, 2.462500000000034e-05, 2.358299999993818e-05, 2.230499999988922e-05, 2.7722999999646447e-05, 2.7542000000213562e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.859" endtime="20201030 11:50:42.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.854" endtime="20201030 11:50:42.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.388" endtime="20201030 11:50:42.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.387" endtime="20201030 11:50:42.863"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.873" endtime="20201030 11:50:42.884"></status>
</kw>
<msg timestamp="20201030 11:50:42.884" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.871" endtime="20201030 11:50:42.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.887" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.886" endtime="20201030 11:50:42.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.889" endtime="20201030 11:50:42.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.868" endtime="20201030 11:50:42.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.866" endtime="20201030 11:50:42.892"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.900" endtime="20201030 11:50:43.292"></status>
</kw>
<msg timestamp="20201030 11:50:43.301" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.601207944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.601233181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:42.898" endtime="20201030 11:50:43.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.601207944, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 2.601233181, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:43.303" endtime="20201030 11:50:43.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.327" endtime="20201030 11:50:43.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.895" endtime="20201030 11:50:43.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.893" endtime="20201030 11:50:43.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.346" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4611000000108731e-05}, {'diff': 2.1693999999961022e-05}, {'diff': 2.1083000000032825e-05}, {'diff': 2.0430999999820898e-05}, {'diff': 2.89870000003134e-05}, {'diff': 1.1070000...</msg>
<status status="PASS" starttime="20201030 11:50:43.336" endtime="20201030 11:50:43.346"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:43.357" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4611000000108731e-05, 2.1693999999961022e-05, 2.1083000000032825e-05, 2.0430999999820898e-05, 2.89870000003134e-05, 1.1070000000223956e-05, 1.8374999999792863e-05, 1.5222000000036928e-0...</msg>
<status status="PASS" starttime="20201030 11:50:43.348" endtime="20201030 11:50:43.358"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.369" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:43.366" endtime="20201030 11:50:43.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.375" level="INFO">VALUE: [0, 1.4611000000108731e-05, 2.1693999999961022e-05, 2.1083000000032825e-05, 2.0430999999820898e-05, 2.89870000003134e-05, 1.1070000000223956e-05, 1.8374999999792863e-05, 1.5222000000036928e-05, 1.6277999999925186e-05, 9.389000000137315e-06, 1.566599999991425e-05, 1.5444999999836284e-05, 2.106999999984538e-05, 0.5354300840000001, 1.273599999995767e-05, 7.110999999948575e-06, 2.3999999999801958e-05, 2.0236000000117826e-05, 1.565300000017089e-05, 1.7582999999987692e-05, 8.360999999901253e-06, 1.819499999999863e-05, 2.0445000000091085e-05, 2.5889000000223206e-05, 1.5056000000068792e-05, 2.522200000010244e-05, 1.917999999978548e-05, 2.5443999999819056e-05, 1.773599999976838e-05, 1.9152999999771936e-05, 1.8999999999991246e-05, 1.0861999999889349e-05, 9.209000000343082e-06, 2.462500000000034e-05, 2.358299999993818e-05, 2.230499999988922e-05, 2.7722999999646447e-05, 2.7542000000213562e-05, 0.45391099999999973, 1.0666000000103537e-05, 2.383300000019517e-05, 1.962500000018963e-05, 1.6486999999898444e-05, 2.3971999999705673e-05, 1.8347000000140667e-05, 6.625000000148873e-06, 2.4611000000174243e-05, 8.52799999995213e-06, 2.2097999999637352e-05, 1.0000000000065512e-05, 1.105599999995377e-05, 1.1707999999721608e-05, 1.8347000000140667e-05, 1.98199999998927e-05, 1.3568999999602482e-05, 1.149999999983109e-05, 1.3319999999872323e-05, 2.334699999995138e-05, 1.3555999999859125e-05, 1.6026999999585456e-05, 1.8791000000017988e-05, 1.422299999997989e-05, 2.413900000020064e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.371" endtime="20201030 11:50:43.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.360" endtime="20201030 11:50:43.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.864" endtime="20201030 11:50:43.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.863" endtime="20201030 11:50:43.379"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.401" endtime="20201030 11:50:43.417"></status>
</kw>
<msg timestamp="20201030 11:50:43.418" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.397" endtime="20201030 11:50:43.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.425" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.420" endtime="20201030 11:50:43.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.427" endtime="20201030 11:50:43.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.390" endtime="20201030 11:50:43.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.385" endtime="20201030 11:50:43.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.452" endtime="20201030 11:50:43.838"></status>
</kw>
<msg timestamp="20201030 11:50:43.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.137487417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.137503264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:43.448" endtime="20201030 11:50:43.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.137487417, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.137503264, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:43.850" endtime="20201030 11:50:43.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.872" endtime="20201030 11:50:43.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.441" endtime="20201030 11:50:43.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.436" endtime="20201030 11:50:43.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.890" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.522200000010244e-05}, {'diff': 1.917999999978548e-05}, {'diff': 2.5443999999819056e-05}, {'diff': 1.773599999976838e-05}, {'diff': 1.9152999999771936e-05}, {'diff': 1.89999999...</msg>
<status status="PASS" starttime="20201030 11:50:43.880" endtime="20201030 11:50:43.890"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:43.906" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.522200000010244e-05, 1.917999999978548e-05, 2.5443999999819056e-05, 1.773599999976838e-05, 1.9152999999771936e-05, 1.8999999999991246e-05, 1.0861999999889349e-05, 9.209000000343082e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:43.892" endtime="20201030 11:50:43.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.917" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:43.914" endtime="20201030 11:50:43.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.922" level="INFO">VALUE: [0, 2.522200000010244e-05, 1.917999999978548e-05, 2.5443999999819056e-05, 1.773599999976838e-05, 1.9152999999771936e-05, 1.8999999999991246e-05, 1.0861999999889349e-05, 9.209000000343082e-06, 2.462500000000034e-05, 2.358299999993818e-05, 2.230499999988922e-05, 2.7722999999646447e-05, 2.7542000000213562e-05, 0.45391099999999973, 1.0666000000103537e-05, 2.383300000019517e-05, 1.962500000018963e-05, 1.6486999999898444e-05, 2.3971999999705673e-05, 1.8347000000140667e-05, 6.625000000148873e-06, 2.4611000000174243e-05, 8.52799999995213e-06, 2.2097999999637352e-05, 1.0000000000065512e-05, 1.105599999995377e-05, 1.1707999999721608e-05, 1.8347000000140667e-05, 1.98199999998927e-05, 1.3568999999602482e-05, 1.149999999983109e-05, 1.3319999999872323e-05, 2.334699999995138e-05, 1.3555999999859125e-05, 1.6026999999585456e-05, 1.8791000000017988e-05, 1.422299999997989e-05, 2.413900000020064e-05, 0.5204310410000001, 1.6528000000626264e-05, 1.754200000014805e-05, 2.3306000000111737e-05, 2.1221999999987418e-05, 2.0042000000053406e-05, 2.022199999984764e-05, 2.106899999976264e-05, 1.7721999999942284e-05, 2.224999999977939e-05, 1.1527999999927374e-05, 1.5027999999972508e-05, 2.5888999999779116e-05, 1.5792000000125483e-05, 2.2527999999688575e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106999999984538e-05, 2.1693999999961022e-05, 1.1472000000622984e-05, 6.5000000004644676e-06, 2.4402999999395547e-05, 2.250000000003638e-05, 9.402999999963413e-06, 4.818999999933737e-06]</msg>
<status status="PASS" starttime="20201030 11:50:43.919" endtime="20201030 11:50:43.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.908" endtime="20201030 11:50:43.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.381" endtime="20201030 11:50:43.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.380" endtime="20201030 11:50:43.927"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.947" endtime="20201030 11:50:43.961"></status>
</kw>
<msg timestamp="20201030 11:50:43.962" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.944" endtime="20201030 11:50:43.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.968" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.964" endtime="20201030 11:50:43.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.971" endtime="20201030 11:50:43.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.937" endtime="20201030 11:50:43.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.932" endtime="20201030 11:50:43.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.994" endtime="20201030 11:50:44.369"></status>
</kw>
<msg timestamp="20201030 11:50:44.378" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.592306931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.592327194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:43.991" endtime="20201030 11:50:44.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.592306931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 3.592327194, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:44.381" endtime="20201030 11:50:44.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.403" endtime="20201030 11:50:44.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.983" endtime="20201030 11:50:44.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.979" endtime="20201030 11:50:44.410"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.421" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.105599999995377e-05}, {'diff': 1.1707999999721608e-05}, {'diff': 1.8347000000140667e-05}, {'diff': 1.98199999998927e-05}, {'diff': 1.3568999999602482e-05}, {'diff': 1.14999999...</msg>
<status status="PASS" starttime="20201030 11:50:44.411" endtime="20201030 11:50:44.421"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:44.433" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.105599999995377e-05, 1.1707999999721608e-05, 1.8347000000140667e-05, 1.98199999998927e-05, 1.3568999999602482e-05, 1.149999999983109e-05, 1.3319999999872323e-05, 2.334699999995138e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:44.423" endtime="20201030 11:50:44.434"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.445" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:44.442" endtime="20201030 11:50:44.446"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.451" level="INFO">VALUE: [0, 1.105599999995377e-05, 1.1707999999721608e-05, 1.8347000000140667e-05, 1.98199999998927e-05, 1.3568999999602482e-05, 1.149999999983109e-05, 1.3319999999872323e-05, 2.334699999995138e-05, 1.3555999999859125e-05, 1.6026999999585456e-05, 1.8791000000017988e-05, 1.422299999997989e-05, 2.413900000020064e-05, 0.5204310410000001, 1.6528000000626264e-05, 1.754200000014805e-05, 2.3306000000111737e-05, 2.1221999999987418e-05, 2.0042000000053406e-05, 2.022199999984764e-05, 2.106899999976264e-05, 1.7721999999942284e-05, 2.224999999977939e-05, 1.1527999999927374e-05, 1.5027999999972508e-05, 2.5888999999779116e-05, 1.5792000000125483e-05, 2.2527999999688575e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106999999984538e-05, 2.1693999999961022e-05, 1.1472000000622984e-05, 6.5000000004644676e-06, 2.4402999999395547e-05, 2.250000000003638e-05, 9.402999999963413e-06, 4.818999999933737e-06, 0.5336004719999998, 2.4208000000136565e-05, 1.4417000000044311e-05, 1.2972000000388562e-05, 1.3735999999653359e-05, 3.004199999967483e-05, 1.5652999999282713e-05, 2.4403000000283726e-05, 1.690299999967948e-05, 4.485999999914725e-06, 2.0638999999711416e-05, 1.1708000000609786e-05, 2.1471999999356228e-05, 2.3999999999801958e-05, 1.9402999999584836e-05, 6.708000000799075e-06, 2.0153000000355803e-05, 9.458000000073241e-06, 1.688900000029747e-05, 1.6708000000420498e-05, 1.669500000023305e-05, 1.3570000000129312e-05, 1.2707999999861386e-05, 1.7125000000284274e-05, 1.5070000000783068e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.447" endtime="20201030 11:50:44.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.436" endtime="20201030 11:50:44.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.929" endtime="20201030 11:50:44.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.928" endtime="20201030 11:50:44.455"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.475" endtime="20201030 11:50:44.490"></status>
</kw>
<msg timestamp="20201030 11:50:44.491" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.472" endtime="20201030 11:50:44.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.497" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.493" endtime="20201030 11:50:44.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.499" endtime="20201030 11:50:44.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.465" endtime="20201030 11:50:44.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.460" endtime="20201030 11:50:44.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.524" endtime="20201030 11:50:44.897"></status>
</kw>
<msg timestamp="20201030 11:50:44.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.113574431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.113584458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:44.520" endtime="20201030 11:50:44.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.113574431, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.113584458, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:44.908" endtime="20201030 11:50:44.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.930" endtime="20201030 11:50:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.512" endtime="20201030 11:50:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.508" endtime="20201030 11:50:44.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.948" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.5888999999779116e-05}, {'diff': 1.5792000000125483e-05}, {'diff': 2.2527999999688575e-05}, {'diff': 1.8153000000076247e-05}, {'diff': 1.3985999999910348e-05}, {'diff': 2.10699...</msg>
<status status="PASS" starttime="20201030 11:50:44.939" endtime="20201030 11:50:44.949"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:44.959" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.5888999999779116e-05, 1.5792000000125483e-05, 2.2527999999688575e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106999999984538e-05, 2.1693999999961022e-05, 1.1472000000622984e-...</msg>
<status status="PASS" starttime="20201030 11:50:44.950" endtime="20201030 11:50:44.960"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.970" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:44.968" endtime="20201030 11:50:44.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.975" level="INFO">VALUE: [0, 2.5888999999779116e-05, 1.5792000000125483e-05, 2.2527999999688575e-05, 1.8153000000076247e-05, 1.3985999999910348e-05, 2.106999999984538e-05, 2.1693999999961022e-05, 1.1472000000622984e-05, 6.5000000004644676e-06, 2.4402999999395547e-05, 2.250000000003638e-05, 9.402999999963413e-06, 4.818999999933737e-06, 0.5336004719999998, 2.4208000000136565e-05, 1.4417000000044311e-05, 1.2972000000388562e-05, 1.3735999999653359e-05, 3.004199999967483e-05, 1.5652999999282713e-05, 2.4403000000283726e-05, 1.690299999967948e-05, 4.485999999914725e-06, 2.0638999999711416e-05, 1.1708000000609786e-05, 2.1471999999356228e-05, 2.3999999999801958e-05, 1.9402999999584836e-05, 6.708000000799075e-06, 2.0153000000355803e-05, 9.458000000073241e-06, 1.688900000029747e-05, 1.6708000000420498e-05, 1.669500000023305e-05, 1.3570000000129312e-05, 1.2707999999861386e-05, 1.7125000000284274e-05, 1.5070000000783068e-05, 0.5173126950000002, 1.0860999999806609e-05, 2.502700000039937e-05, 1.9638999999571638e-05, 1.1901999999786028e-05, 1.650000000008589e-05, 2.111099999968502e-05, 2.0249999999499835e-05, 1.3166999999647544e-05, 1.3790999999763187e-05, 1.0443999999942832e-05, 2.3778000000085342e-05, 1.4403000000662303e-05, 1.5235999999418937e-05, 2.2958000000627976e-05, 1.709800000071482e-05, 1.6721999999802506e-05, 1.5235999999418937e-05, 1.0861000000694787e-05, 2.001400000040121e-05, 1.8167000000346434e-05, 1.5639000000788883e-05, 1.0445000000025573e-05, 2.2319000000159406e-05, 1.4430000000231757e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.972" endtime="20201030 11:50:44.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.961" endtime="20201030 11:50:44.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.457" endtime="20201030 11:50:44.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.456" endtime="20201030 11:50:44.980"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.001" endtime="20201030 11:50:45.016"></status>
</kw>
<msg timestamp="20201030 11:50:45.017" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.997" endtime="20201030 11:50:45.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.023" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.019" endtime="20201030 11:50:45.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.026" endtime="20201030 11:50:45.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.990" endtime="20201030 11:50:45.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.985" endtime="20201030 11:50:45.032"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.049" endtime="20201030 11:50:45.416"></status>
</kw>
<msg timestamp="20201030 11:50:45.425" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.648008875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.64802475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 11:50:45.046" endtime="20201030 11:50:45.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.648008875, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 4.64802475, 'source': 'DUT_IC', 'event': 'RIS...</msg>
<status status="PASS" starttime="20201030 11:50:45.427" endtime="20201030 11:50:45.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.450" endtime="20201030 11:50:45.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.038" endtime="20201030 11:50:45.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.034" endtime="20201030 11:50:45.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.468" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.1471999999356228e-05}, {'diff': 2.3999999999801958e-05}, {'diff': 1.9402999999584836e-05}, {'diff': 6.708000000799075e-06}, {'diff': 2.0153000000355803e-05}, {'diff': 9.458000...</msg>
<status status="PASS" starttime="20201030 11:50:45.458" endtime="20201030 11:50:45.468"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:45.480" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.1471999999356228e-05, 2.3999999999801958e-05, 1.9402999999584836e-05, 6.708000000799075e-06, 2.0153000000355803e-05, 9.458000000073241e-06, 1.688900000029747e-05, 1.6708000000420498e-05...</msg>
<status status="PASS" starttime="20201030 11:50:45.470" endtime="20201030 11:50:45.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.491" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:45.488" endtime="20201030 11:50:45.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.496" level="INFO">VALUE: [0, 2.1471999999356228e-05, 2.3999999999801958e-05, 1.9402999999584836e-05, 6.708000000799075e-06, 2.0153000000355803e-05, 9.458000000073241e-06, 1.688900000029747e-05, 1.6708000000420498e-05, 1.669500000023305e-05, 1.3570000000129312e-05, 1.2707999999861386e-05, 1.7125000000284274e-05, 1.5070000000783068e-05, 0.5173126950000002, 1.0860999999806609e-05, 2.502700000039937e-05, 1.9638999999571638e-05, 1.1901999999786028e-05, 1.650000000008589e-05, 2.111099999968502e-05, 2.0249999999499835e-05, 1.3166999999647544e-05, 1.3790999999763187e-05, 1.0443999999942832e-05, 2.3778000000085342e-05, 1.4403000000662303e-05, 1.5235999999418937e-05, 2.2958000000627976e-05, 1.709800000071482e-05, 1.6721999999802506e-05, 1.5235999999418937e-05, 1.0861000000694787e-05, 2.001400000040121e-05, 1.8167000000346434e-05, 1.5639000000788883e-05, 1.0445000000025573e-05, 2.2319000000159406e-05, 1.4430000000231757e-05, 0.5162282080000002, 1.065200000027744e-05, 2.502799999959393e-05, 1.0860999999806609e-05, 1.6527999999738086e-05, 9.833000000014636e-06, 1.729199999989106e-05, 1.545800000002373e-05, 1.962500000018963e-05, 1.3362000000682883e-05, 2.334800000003412e-05, 2.086100000031621e-05, 1.6068999999951927e-05, 4.416000000340148e-06, 1.441599999996157e-05, 2.4833000000334948e-05, 1.773600000021247e-05, 1.9416999999855022e-05, 2.502800000048211e-05, 1.750000000022567e-05, 1.1915999999168037e-05, 2.1292000000450173e-05, 1.6485999999815704e-05, 2.3972000000149762e-05, 1.6264000000099088e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.493" endtime="20201030 11:50:45.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.482" endtime="20201030 11:50:45.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.982" endtime="20201030 11:50:45.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.981" endtime="20201030 11:50:45.501"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.521" endtime="20201030 11:50:45.535"></status>
</kw>
<msg timestamp="20201030 11:50:45.536" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.518" endtime="20201030 11:50:45.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.542" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.538" endtime="20201030 11:50:45.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.545" endtime="20201030 11:50:45.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.510" endtime="20201030 11:50:45.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.506" endtime="20201030 11:50:45.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.569" endtime="20201030 11:50:45.937"></status>
</kw>
<msg timestamp="20201030 11:50:45.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.166131486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.166156319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:45.566" endtime="20201030 11:50:45.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.166131486, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.166156319, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:45.949" endtime="20201030 11:50:45.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.963" endtime="20201030 11:50:45.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.558" endtime="20201030 11:50:45.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.553" endtime="20201030 11:50:45.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.971" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.4403000000662303e-05}, {'diff': 1.5235999999418937e-05}, {'diff': 2.2958000000627976e-05}, {'diff': 1.709800000071482e-05}, {'diff': 1.6721999999802506e-05}, {'diff': 1.523599...</msg>
<status status="PASS" starttime="20201030 11:50:45.967" endtime="20201030 11:50:45.971"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:45.977" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.4403000000662303e-05, 1.5235999999418937e-05, 2.2958000000627976e-05, 1.709800000071482e-05, 1.6721999999802506e-05, 1.5235999999418937e-05, 1.0861000000694787e-05, 2.001400000040121e-0...</msg>
<status status="PASS" starttime="20201030 11:50:45.972" endtime="20201030 11:50:45.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.982" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:45.981" endtime="20201030 11:50:45.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.985" level="INFO">VALUE: [0, 1.4403000000662303e-05, 1.5235999999418937e-05, 2.2958000000627976e-05, 1.709800000071482e-05, 1.6721999999802506e-05, 1.5235999999418937e-05, 1.0861000000694787e-05, 2.001400000040121e-05, 1.8167000000346434e-05, 1.5639000000788883e-05, 1.0445000000025573e-05, 2.2319000000159406e-05, 1.4430000000231757e-05, 0.5162282080000002, 1.065200000027744e-05, 2.502799999959393e-05, 1.0860999999806609e-05, 1.6527999999738086e-05, 9.833000000014636e-06, 1.729199999989106e-05, 1.545800000002373e-05, 1.962500000018963e-05, 1.3362000000682883e-05, 2.334800000003412e-05, 2.086100000031621e-05, 1.6068999999951927e-05, 4.416000000340148e-06, 1.441599999996157e-05, 2.4833000000334948e-05, 1.773600000021247e-05, 1.9416999999855022e-05, 2.502800000048211e-05, 1.750000000022567e-05, 1.1915999999168037e-05, 2.1292000000450173e-05, 1.6485999999815704e-05, 2.3972000000149762e-05, 1.6264000000099088e-05, 0.5088497219999999, 2.6917000000459268e-05, 1.5235999999418937e-05, 2.5847999999939475e-05, 1.8374999999792863e-05, 2.3513999999558166e-05, 1.8361999999605416e-05, 1.8569999999940023e-05, 5.6530000005494685e-06, 2.4541000000155577e-05, 1.70969999997439e-05, 6.903000000058057e-06, 1.9597000000537435e-05, 2.6055999999385904e-05, 1.983299999963606e-05, 2.1695000000043763e-05, 9.874999999937017e-06, 2.2736000000023182e-05, 8.56900000023586e-06, 1.5443999999753544e-05, 1.105599999995377e-05, 2.0042000000053406e-05, 2.0681000000521976e-05, 1.9861000000176432e-05, 2.487500000025733e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.983" endtime="20201030 11:50:45.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.978" endtime="20201030 11:50:45.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.502" endtime="20201030 11:50:45.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.501" endtime="20201030 11:50:45.987"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.997" endtime="20201030 11:50:46.008"></status>
</kw>
<msg timestamp="20201030 11:50:46.008" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.995" endtime="20201030 11:50:46.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.011" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.009" endtime="20201030 11:50:46.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.012" endtime="20201030 11:50:46.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.992" endtime="20201030 11:50:46.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.990" endtime="20201030 11:50:46.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.023" endtime="20201030 11:50:46.391"></status>
</kw>
<msg timestamp="20201030 11:50:46.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.683175708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.683186153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:46.022" endtime="20201030 11:50:46.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.683175708, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 5.683186153, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:46.402" endtime="20201030 11:50:46.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.425" endtime="20201030 11:50:46.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.019" endtime="20201030 11:50:46.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.016" endtime="20201030 11:50:46.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.443" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6068999999951927e-05}, {'diff': 4.416000000340148e-06}, {'diff': 1.441599999996157e-05}, {'diff': 2.4833000000334948e-05}, {'diff': 1.773600000021247e-05}, {'diff': 1.94169999...</msg>
<status status="PASS" starttime="20201030 11:50:46.433" endtime="20201030 11:50:46.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:46.454" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6068999999951927e-05, 4.416000000340148e-06, 1.441599999996157e-05, 2.4833000000334948e-05, 1.773600000021247e-05, 1.9416999999855022e-05, 2.502800000048211e-05, 1.750000000022567e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:46.445" endtime="20201030 11:50:46.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.464" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:46.462" endtime="20201030 11:50:46.465"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.470" level="INFO">VALUE: [0, 1.6068999999951927e-05, 4.416000000340148e-06, 1.441599999996157e-05, 2.4833000000334948e-05, 1.773600000021247e-05, 1.9416999999855022e-05, 2.502800000048211e-05, 1.750000000022567e-05, 1.1915999999168037e-05, 2.1292000000450173e-05, 1.6485999999815704e-05, 2.3972000000149762e-05, 1.6264000000099088e-05, 0.5088497219999999, 2.6917000000459268e-05, 1.5235999999418937e-05, 2.5847999999939475e-05, 1.8374999999792863e-05, 2.3513999999558166e-05, 1.8361999999605416e-05, 1.8569999999940023e-05, 5.6530000005494685e-06, 2.4541000000155577e-05, 1.70969999997439e-05, 6.903000000058057e-06, 1.9597000000537435e-05, 2.6055999999385904e-05, 1.983299999963606e-05, 2.1695000000043763e-05, 9.874999999937017e-06, 2.2736000000023182e-05, 8.56900000023586e-06, 1.5443999999753544e-05, 1.105599999995377e-05, 2.0042000000053406e-05, 2.0681000000521976e-05, 1.9861000000176432e-05, 2.487500000025733e-05, 0.46441291600000056, 1.3360999999711964e-05, 8.166999999836833e-06, 1.898599999972106e-05, 2.086100000031621e-05, 6.6939999996407096e-06, 1.9415999999772282e-05, 2.5444000000263145e-05, 2.315299999988696e-05, 1.650000000008589e-05, 2.294399999946961e-05, 9.625000000568207e-06, 1.6485999999815704e-05, 1.184799999975894e-05, 1.877700000019189e-05, 1.0028000000161796e-05, 1.5055999999624703e-05, 1.7944000000547078e-05, 1.8554999999587096e-05, 1.8166000000263693e-05, 2.3569000000556173e-05, 2.294399999946961e-05, 1.7944000000547078e-05, 2.026300000057546e-05, 2.4208000000136565e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.467" endtime="20201030 11:50:46.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.456" endtime="20201030 11:50:46.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.988" endtime="20201030 11:50:46.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.988" endtime="20201030 11:50:46.474"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.495" endtime="20201030 11:50:46.510"></status>
</kw>
<msg timestamp="20201030 11:50:46.511" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.492" endtime="20201030 11:50:46.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.517" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.513" endtime="20201030 11:50:46.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.519" endtime="20201030 11:50:46.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.484" endtime="20201030 11:50:46.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.480" endtime="20201030 11:50:46.526"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.543" endtime="20201030 11:50:46.917"></status>
</kw>
<msg timestamp="20201030 11:50:46.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.192902306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.192918611, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:46.540" endtime="20201030 11:50:46.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.192902306, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.192918611, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:46.928" endtime="20201030 11:50:46.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.951" endtime="20201030 11:50:46.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.532" endtime="20201030 11:50:46.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.528" endtime="20201030 11:50:46.958"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.969" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.9597000000537435e-05}, {'diff': 2.6055999999385904e-05}, {'diff': 1.983299999963606e-05}, {'diff': 2.1695000000043763e-05}, {'diff': 9.874999999937017e-06}, {'diff': 2.2736000...</msg>
<status status="PASS" starttime="20201030 11:50:46.959" endtime="20201030 11:50:46.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:46.982" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.9597000000537435e-05, 2.6055999999385904e-05, 1.983299999963606e-05, 2.1695000000043763e-05, 9.874999999937017e-06, 2.2736000000023182e-05, 8.56900000023586e-06, 1.5443999999753544e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:46.972" endtime="20201030 11:50:46.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.992" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:46.990" endtime="20201030 11:50:46.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.998" level="INFO">VALUE: [0, 1.9597000000537435e-05, 2.6055999999385904e-05, 1.983299999963606e-05, 2.1695000000043763e-05, 9.874999999937017e-06, 2.2736000000023182e-05, 8.56900000023586e-06, 1.5443999999753544e-05, 1.105599999995377e-05, 2.0042000000053406e-05, 2.0681000000521976e-05, 1.9861000000176432e-05, 2.487500000025733e-05, 0.46441291600000056, 1.3360999999711964e-05, 8.166999999836833e-06, 1.898599999972106e-05, 2.086100000031621e-05, 6.6939999996407096e-06, 1.9415999999772282e-05, 2.5444000000263145e-05, 2.315299999988696e-05, 1.650000000008589e-05, 2.294399999946961e-05, 9.625000000568207e-06, 1.6485999999815704e-05, 1.184799999975894e-05, 1.877700000019189e-05, 1.0028000000161796e-05, 1.5055999999624703e-05, 1.7944000000547078e-05, 1.8554999999587096e-05, 1.8166000000263693e-05, 2.3569000000556173e-05, 2.294399999946961e-05, 1.7944000000547078e-05, 2.026300000057546e-05, 2.4208000000136565e-05, 0.4902843749999999, 1.3584000000399499e-05, 1.730499999919033e-05, 1.3068999999532593e-05, 1.9596999999649256e-05, 2.1889000000108183e-05, 1.6068999999951927e-05, 1.1124999999445606e-05, 2.170800000023121e-05, 2.651299999989476e-05, 1.6471999999545517e-05, 1.943099999923703e-05, 1.5249999999689123e-05, 1.3792000000734106e-05, 2.5235999999928538e-05, 2.3167000000157145e-05, 2.4597000000348146e-05, 9.194999999628806e-06, 1.0860999999806609e-05, 1.0846999999536422e-05, 2.254199999995876e-05, 2.315299999988696e-05, 1.1277999999670385e-05, 2.1722000000501396e-05, 1.3347999999524518e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.994" endtime="20201030 11:50:46.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.983" endtime="20201030 11:50:47.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.476" endtime="20201030 11:50:47.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.475" endtime="20201030 11:50:47.002"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.023" endtime="20201030 11:50:47.036"></status>
</kw>
<msg timestamp="20201030 11:50:47.038" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.019" endtime="20201030 11:50:47.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.044" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.040" endtime="20201030 11:50:47.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.046" endtime="20201030 11:50:47.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.012" endtime="20201030 11:50:47.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.007" endtime="20201030 11:50:47.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.070" endtime="20201030 11:50:47.441"></status>
</kw>
<msg timestamp="20201030 11:50:47.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.658191931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.658201528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:47.067" endtime="20201030 11:50:47.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.658191931, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 6.658201528, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:47.453" endtime="20201030 11:50:47.473"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.475" endtime="20201030 11:50:47.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.059" endtime="20201030 11:50:47.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.054" endtime="20201030 11:50:47.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.493" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.6485999999815704e-05}, {'diff': 1.184799999975894e-05}, {'diff': 1.877700000019189e-05}, {'diff': 1.0028000000161796e-05}, {'diff': 1.5055999999624703e-05}, {'diff': 1.7944000...</msg>
<status status="PASS" starttime="20201030 11:50:47.483" endtime="20201030 11:50:47.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:47.506" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.6485999999815704e-05, 1.184799999975894e-05, 1.877700000019189e-05, 1.0028000000161796e-05, 1.5055999999624703e-05, 1.7944000000547078e-05, 1.8554999999587096e-05, 1.8166000000263693e-0...</msg>
<status status="PASS" starttime="20201030 11:50:47.495" endtime="20201030 11:50:47.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.516" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:47.514" endtime="20201030 11:50:47.517"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.522" level="INFO">VALUE: [0, 1.6485999999815704e-05, 1.184799999975894e-05, 1.877700000019189e-05, 1.0028000000161796e-05, 1.5055999999624703e-05, 1.7944000000547078e-05, 1.8554999999587096e-05, 1.8166000000263693e-05, 2.3569000000556173e-05, 2.294399999946961e-05, 1.7944000000547078e-05, 2.026300000057546e-05, 2.4208000000136565e-05, 0.4902843749999999, 1.3584000000399499e-05, 1.730499999919033e-05, 1.3068999999532593e-05, 1.9596999999649256e-05, 2.1889000000108183e-05, 1.6068999999951927e-05, 1.1124999999445606e-05, 2.170800000023121e-05, 2.651299999989476e-05, 1.6471999999545517e-05, 1.943099999923703e-05, 1.5249999999689123e-05, 1.3792000000734106e-05, 2.5235999999928538e-05, 2.3167000000157145e-05, 2.4597000000348146e-05, 9.194999999628806e-06, 1.0860999999806609e-05, 1.0846999999536422e-05, 2.254199999995876e-05, 2.315299999988696e-05, 1.1277999999670385e-05, 2.1722000000501396e-05, 1.3347999999524518e-05, 0.5162691109999997, 2.2138000000282432e-05, 2.190300000037837e-05, 2.334800000003412e-05, 1.7332999999730703e-05, 1.1930000000326402e-05, 1.1291999999940572e-05, 1.9610999999919443e-05, 1.9402999999584836e-05, 2.4860999999987143e-05, 2.404199999972434e-05, 1.0445000000025573e-05, 1.9610999999919443e-05, 2.2318999999271227e-05, 1.7319000000348694e-05, 1.8208000000186075e-05, 1.713900000055446e-05, 1.9792000000684595e-05, 1.6083000000222114e-05, 1.5695000000093273e-05, 1.3778000000463919e-05, 1.2528000000067152e-05, 1.2305999999462358e-05, 1.650000000008589e-05, 1.1291999999940572e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.518" endtime="20201030 11:50:47.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.508" endtime="20201030 11:50:47.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.004" endtime="20201030 11:50:47.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.003" endtime="20201030 11:50:47.526"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.547" endtime="20201030 11:50:47.560"></status>
</kw>
<msg timestamp="20201030 11:50:47.562" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.543" endtime="20201030 11:50:47.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.568" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.564" endtime="20201030 11:50:47.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.570" endtime="20201030 11:50:47.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.536" endtime="20201030 11:50:47.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.531" endtime="20201030 11:50:47.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.594" endtime="20201030 11:50:47.966"></status>
</kw>
<msg timestamp="20201030 11:50:47.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.149316514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.149329861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:47.590" endtime="20201030 11:50:47.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.149316514, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.149329861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:47.977" endtime="20201030 11:50:47.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.000" endtime="20201030 11:50:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.583" endtime="20201030 11:50:48.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.578" endtime="20201030 11:50:48.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.019" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.5249999999689123e-05}, {'diff': 1.3792000000734106e-05}, {'diff': 2.5235999999928538e-05}, {'diff': 2.3167000000157145e-05}, {'diff': 2.4597000000348146e-05}, {'diff': 9.19499...</msg>
<status status="PASS" starttime="20201030 11:50:48.009" endtime="20201030 11:50:48.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:48.030" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.5249999999689123e-05, 1.3792000000734106e-05, 2.5235999999928538e-05, 2.3167000000157145e-05, 2.4597000000348146e-05, 9.194999999628806e-06, 1.0860999999806609e-05, 1.0846999999536422e-...</msg>
<status status="PASS" starttime="20201030 11:50:48.021" endtime="20201030 11:50:48.030"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.040" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:48.038" endtime="20201030 11:50:48.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.045" level="INFO">VALUE: [0, 1.5249999999689123e-05, 1.3792000000734106e-05, 2.5235999999928538e-05, 2.3167000000157145e-05, 2.4597000000348146e-05, 9.194999999628806e-06, 1.0860999999806609e-05, 1.0846999999536422e-05, 2.254199999995876e-05, 2.315299999988696e-05, 1.1277999999670385e-05, 2.1722000000501396e-05, 1.3347999999524518e-05, 0.5162691109999997, 2.2138000000282432e-05, 2.190300000037837e-05, 2.334800000003412e-05, 1.7332999999730703e-05, 1.1930000000326402e-05, 1.1291999999940572e-05, 1.9610999999919443e-05, 1.9402999999584836e-05, 2.4860999999987143e-05, 2.404199999972434e-05, 1.0445000000025573e-05, 1.9610999999919443e-05, 2.2318999999271227e-05, 1.7319000000348694e-05, 1.8208000000186075e-05, 1.713900000055446e-05, 1.9792000000684595e-05, 1.6083000000222114e-05, 1.5695000000093273e-05, 1.3778000000463919e-05, 1.2528000000067152e-05, 1.2305999999462358e-05, 1.650000000008589e-05, 1.1291999999940572e-05, 0.5139566120000003, 1.2124999999585384e-05, 2.3362000000304306e-05, 2.379200000035553e-05, 1.2360999999572186e-05, 1.3194999999299739e-05, 2.2930999998393986e-05, 2.0458999999917182e-05, 1.6278000000369275e-05, 2.0444999998758817e-05, 2.0652999999981603e-05, 1.258400000025972e-05, 1.774999999959448e-05, 7.347000000379467e-06, 1.6278000000369275e-05, 8.388999999553448e-06, 1.5041000001048133e-05, 1.2347000000190178e-05, 1.2721999999243394e-05, 1.5444999998948106e-05, 2.5444000000263145e-05, 1.813899999980606e-05, 1.759799999945244e-05, 1.1917000000138955e-05, 1.3151999999294617e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.042" endtime="20201030 11:50:48.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.031" endtime="20201030 11:50:48.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.528" endtime="20201030 11:50:48.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.527" endtime="20201030 11:50:48.050"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.070" endtime="20201030 11:50:48.086"></status>
</kw>
<msg timestamp="20201030 11:50:48.087" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.067" endtime="20201030 11:50:48.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.093" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.089" endtime="20201030 11:50:48.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.095" endtime="20201030 11:50:48.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.060" endtime="20201030 11:50:48.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.055" endtime="20201030 11:50:48.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.119" endtime="20201030 11:50:48.483"></status>
</kw>
<msg timestamp="20201030 11:50:48.492" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.666407056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.666427097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:48.116" endtime="20201030 11:50:48.493"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.666407056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 7.666427097, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:48.494" endtime="20201030 11:50:48.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.517" endtime="20201030 11:50:48.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.108" endtime="20201030 11:50:48.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.104" endtime="20201030 11:50:48.524"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.535" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.9610999999919443e-05}, {'diff': 2.2318999999271227e-05}, {'diff': 1.7319000000348694e-05}, {'diff': 1.8208000000186075e-05}, {'diff': 1.713900000055446e-05}, {'diff': 1.979200...</msg>
<status status="PASS" starttime="20201030 11:50:48.526" endtime="20201030 11:50:48.536"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:48.551" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.9610999999919443e-05, 2.2318999999271227e-05, 1.7319000000348694e-05, 1.8208000000186075e-05, 1.713900000055446e-05, 1.9792000000684595e-05, 1.6083000000222114e-05, 1.5695000000093273e-...</msg>
<status status="PASS" starttime="20201030 11:50:48.537" endtime="20201030 11:50:48.552"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.562" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:48.559" endtime="20201030 11:50:48.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.567" level="INFO">VALUE: [0, 1.9610999999919443e-05, 2.2318999999271227e-05, 1.7319000000348694e-05, 1.8208000000186075e-05, 1.713900000055446e-05, 1.9792000000684595e-05, 1.6083000000222114e-05, 1.5695000000093273e-05, 1.3778000000463919e-05, 1.2528000000067152e-05, 1.2305999999462358e-05, 1.650000000008589e-05, 1.1291999999940572e-05, 0.5139566120000003, 1.2124999999585384e-05, 2.3362000000304306e-05, 2.379200000035553e-05, 1.2360999999572186e-05, 1.3194999999299739e-05, 2.2930999998393986e-05, 2.0458999999917182e-05, 1.6278000000369275e-05, 2.0444999998758817e-05, 2.0652999999981603e-05, 1.258400000025972e-05, 1.774999999959448e-05, 7.347000000379467e-06, 1.6278000000369275e-05, 8.388999999553448e-06, 1.5041000001048133e-05, 1.2347000000190178e-05, 1.2721999999243394e-05, 1.5444999998948106e-05, 2.5444000000263145e-05, 1.813899999980606e-05, 1.759799999945244e-05, 1.1917000000138955e-05, 1.3151999999294617e-05, 0.5154804999999989, 2.190200000029563e-05, 2.2333000000429593e-05, 1.690300000056766e-05, 1.3194999999299739e-05, 1.0458000000213019e-05, 1.79439999996589e-05, 2.1278000000179986e-05, 2.87910000000835e-05, 5.63900000116746e-06, 1.5862000001476417e-05, 9.805000001250619e-06, 2.711099999963551e-05, 1.754200000014805e-05, 2.1901999998519273e-05, 7.596999999748277e-06, 8.152000001260262e-06, 1.7319999999543256e-05, 1.79439999996589e-05, 2.5000000000829914e-05, 1.0875000000964974e-05, 1.734700000000089e-05, 2.3374999999603574e-05, 2.0235999999229648e-05, 2.1096999999414834e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.564" endtime="20201030 11:50:48.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.553" endtime="20201030 11:50:48.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.052" endtime="20201030 11:50:48.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.051" endtime="20201030 11:50:48.572"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.592" endtime="20201030 11:50:48.606"></status>
</kw>
<msg timestamp="20201030 11:50:48.607" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.589" endtime="20201030 11:50:48.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.613" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.609" endtime="20201030 11:50:48.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.616" endtime="20201030 11:50:48.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.582" endtime="20201030 11:50:48.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.577" endtime="20201030 11:50:48.623"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.640" endtime="20201030 11:50:49.006"></status>
</kw>
<msg timestamp="20201030 11:50:49.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.181217056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.181237861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:48.636" endtime="20201030 11:50:49.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.181217056, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.181237861, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:49.018" endtime="20201030 11:50:49.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.040" endtime="20201030 11:50:49.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.629" endtime="20201030 11:50:49.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.624" endtime="20201030 11:50:49.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.059" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 1.774999999959448e-05}, {'diff': 7.347000000379467e-06}, {'diff': 1.6278000000369275e-05}, {'diff': 8.388999999553448e-06}, {'diff': 1.5041000001048133e-05}, {'diff': 1.23470000...</msg>
<status status="PASS" starttime="20201030 11:50:49.049" endtime="20201030 11:50:49.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:49.071" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 1.774999999959448e-05, 7.347000000379467e-06, 1.6278000000369275e-05, 8.388999999553448e-06, 1.5041000001048133e-05, 1.2347000000190178e-05, 1.2721999999243394e-05, 1.5444999998948106e-05...</msg>
<status status="PASS" starttime="20201030 11:50:49.061" endtime="20201030 11:50:49.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.082" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:49.079" endtime="20201030 11:50:49.082"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.087" level="INFO">VALUE: [0, 1.774999999959448e-05, 7.347000000379467e-06, 1.6278000000369275e-05, 8.388999999553448e-06, 1.5041000001048133e-05, 1.2347000000190178e-05, 1.2721999999243394e-05, 1.5444999998948106e-05, 2.5444000000263145e-05, 1.813899999980606e-05, 1.759799999945244e-05, 1.1917000000138955e-05, 1.3151999999294617e-05, 0.5154804999999989, 2.190200000029563e-05, 2.2333000000429593e-05, 1.690300000056766e-05, 1.3194999999299739e-05, 1.0458000000213019e-05, 1.79439999996589e-05, 2.1278000000179986e-05, 2.87910000000835e-05, 5.63900000116746e-06, 1.5862000001476417e-05, 9.805000001250619e-06, 2.711099999963551e-05, 1.754200000014805e-05, 2.1901999998519273e-05, 7.596999999748277e-06, 8.152000001260262e-06, 1.7319999999543256e-05, 1.79439999996589e-05, 2.5000000000829914e-05, 1.0875000000964974e-05, 1.734700000000089e-05, 2.3374999999603574e-05, 2.0235999999229648e-05, 2.1096999999414834e-05, 0.5095742639999994, 1.5250000000577302e-05, 1.6916999999949667e-05, 1.9056000001071993e-05, 1.961100000080762e-05, 1.6264000000987267e-05, 1.981900000025405e-05, 1.3112000001314073e-05, 1.7513999999607677e-05, 1.7111000000014087e-05, 2.2319999999353968e-05, 1.480600000114407e-05, 1.60139999998421e-05, 1.733300000061888e-05, 2.462500000000034e-05, 1.8986000000609238e-05, 1.745899999860967e-05, 2.7735999999833894e-05, 8.999999998593466e-06, 2.2750000001181547e-05, 1.6278000000369275e-05, 1.7319999999543256e-05, 2.0444000000452434e-05, 1.5458999998330114e-05, 1.190299999898059e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.084" endtime="20201030 11:50:49.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.073" endtime="20201030 11:50:49.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.573" endtime="20201030 11:50:49.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.573" endtime="20201030 11:50:49.092"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.112" endtime="20201030 11:50:49.126"></status>
</kw>
<msg timestamp="20201030 11:50:49.127" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.109" endtime="20201030 11:50:49.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.133" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.129" endtime="20201030 11:50:49.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.136" endtime="20201030 11:50:49.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.101" endtime="20201030 11:50:49.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.097" endtime="20201030 11:50:49.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.159" endtime="20201030 11:50:49.496"></status>
</kw>
<msg timestamp="20201030 11:50:49.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.697544986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.697551472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:49.156" endtime="20201030 11:50:49.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.697544986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 8.697551472, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:50:49.501" endtime="20201030 11:50:49.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.517" endtime="20201030 11:50:49.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.149" endtime="20201030 11:50:49.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.144" endtime="20201030 11:50:49.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.526" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.711099999963551e-05}, {'diff': 1.754200000014805e-05}, {'diff': 2.1901999998519273e-05}, {'diff': 7.596999999748277e-06}, {'diff': 8.152000001260262e-06}, {'diff': 1.731999999...</msg>
<status status="PASS" starttime="20201030 11:50:49.521" endtime="20201030 11:50:49.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:49.531" level="INFO">${GPIO_OVERHEAD} = {'diff': [0, 2.711099999963551e-05, 1.754200000014805e-05, 2.1901999998519273e-05, 7.596999999748277e-06, 8.152000001260262e-06, 1.7319999999543256e-05, 1.79439999996589e-05, 2.5000000000829914e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:50:49.527" endtime="20201030 11:50:49.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.536" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:49.535" endtime="20201030 11:50:49.536"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.538" level="INFO">VALUE: [0, 2.711099999963551e-05, 1.754200000014805e-05, 2.1901999998519273e-05, 7.596999999748277e-06, 8.152000001260262e-06, 1.7319999999543256e-05, 1.79439999996589e-05, 2.5000000000829914e-05, 1.0875000000964974e-05, 1.734700000000089e-05, 2.3374999999603574e-05, 2.0235999999229648e-05, 2.1096999999414834e-05, 0.5095742639999994, 1.5250000000577302e-05, 1.6916999999949667e-05, 1.9056000001071993e-05, 1.961100000080762e-05, 1.6264000000987267e-05, 1.981900000025405e-05, 1.3112000001314073e-05, 1.7513999999607677e-05, 1.7111000000014087e-05, 2.2319999999353968e-05, 1.480600000114407e-05, 1.60139999998421e-05, 1.733300000061888e-05, 2.462500000000034e-05, 1.8986000000609238e-05, 1.745899999860967e-05, 2.7735999999833894e-05, 8.999999998593466e-06, 2.2750000001181547e-05, 1.6278000000369275e-05, 1.7319999999543256e-05, 2.0444000000452434e-05, 1.5458999998330114e-05, 1.190299999898059e-05, 0.5080085830000005, 1.833399999995322e-05, 2.3777999999197164e-05, 1.6082999998445757e-05, 1.5027999999972508e-05, 2.066599999928087e-05, 2.5041000000669555e-05, 2.754200000154583e-05, 8.77799999976503e-06, 1.815299999918807e-05, 2.4208000001024743e-05, 1.794499999974164e-05, 5.041999999733093e-06, 1.5236000001195293e-05, 2.2361000000969966e-05, 1.2111000000203376e-05, 1.8568999999857283e-05, 1.941600000066046e-05, 1.8764000000004444e-05, 1.88340000004672e-05, 8.985999999211458e-06, 1.962500000018963e-05, 1.0028000000161796e-05, 9.181000001134976e-06, 1.669500000112123e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.537" endtime="20201030 11:50:49.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.532" endtime="20201030 11:50:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.093" endtime="20201030 11:50:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.092" endtime="20201030 11:50:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.385" endtime="20201030 11:50:49.541"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:39.187" endtime="20201030 11:50:49.542" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.551" endtime="20201030 11:50:49.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.549" endtime="20201030 11:50:49.571"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.588" endtime="20201030 11:50:49.609"></status>
</kw>
<msg timestamp="20201030 11:50:49.610" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.586" endtime="20201030 11:50:49.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.617" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.612" endtime="20201030 11:50:49.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.623" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:49.619" endtime="20201030 11:50:49.625"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:49.582" endtime="20201030 11:50:49.627"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:49.580" endtime="20201030 11:50:49.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.578" endtime="20201030 11:50:49.629"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:49.637" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:49.636" endtime="20201030 11:50:49.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.631" endtime="20201030 11:50:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.577" endtime="20201030 11:50:49.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.576" endtime="20201030 11:50:49.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.641" endtime="20201030 11:50:49.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.574" endtime="20201030 11:50:49.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.572" endtime="20201030 11:50:49.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.547" endtime="20201030 11:50:49.648"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.671" endtime="20201030 11:50:49.687"></status>
</kw>
<msg timestamp="20201030 11:50:49.688" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.668" endtime="20201030 11:50:49.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.694" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.690" endtime="20201030 11:50:49.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.697" endtime="20201030 11:50:49.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.661" endtime="20201030 11:50:49.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.656" endtime="20201030 11:50:49.704"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.722" endtime="20201030 11:50:50.072"></status>
</kw>
<msg timestamp="20201030 11:50:50.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113379264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113380833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.718" endtime="20201030 11:50:50.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113379264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113380833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.082" endtime="20201030 11:50:50.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.101" endtime="20201030 11:50:50.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.711" endtime="20201030 11:50:50.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.705" endtime="20201030 11:50:50.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.118" level="INFO">${RESULT} = [{'diff': 1.569000000006815e-06}, {'diff': 1.5689999999929372e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5550000000003061e-0...</msg>
<status status="PASS" starttime="20201030 11:50:50.110" endtime="20201030 11:50:50.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:50.128" level="INFO">${OVERHEAD} = {'diff': [1.569000000006815e-06, 1.5689999999929372e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5689999999929372e-06, 1.5559999999997798e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:50.120" endtime="20201030 11:50:50.128"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.138" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:50.136" endtime="20201030 11:50:50.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.144" level="INFO">VALUE: [1.569000000006815e-06, 1.5689999999929372e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5689999999929372e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.582999999999446e-06, 1.582999999999446e-06, 1.5550000000003061e-06, 1.5700000000062886e-06, 1.569000000006815e-06, 1.5699999999924108e-06, 1.5830000000133237e-06, 1.5550000000003061e-06, 1.541999999993271e-06, 1.569000000006815e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.514000000008009e-06, 1.5559999999997798e-06, 1.5550000000003061e-06, 1.6109999999985858e-06, 1.541999999993271e-06, 1.5839999999989196e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.5410000000076751e-06, 1.5550000000003061e-06, 1.5839999999989196e-06, 1.5559999999997798e-06, 1.5409999999937973e-06, 1.5550000000003061e-06, 1.5550000000003061e-06, 1.5699999999924108e-06, 1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5699999999924108e-06, 1.4999999999876223e-06, 1.582999999999446e-06, 1.5689999999929372e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.569000000006815e-06, 1.5559999999997798e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.141" endtime="20201030 11:50:50.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.130" endtime="20201030 11:50:50.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.652" endtime="20201030 11:50:50.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.651" endtime="20201030 11:50:50.149"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.169" endtime="20201030 11:50:50.184"></status>
</kw>
<msg timestamp="20201030 11:50:50.185" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.166" endtime="20201030 11:50:50.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.192" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.188" endtime="20201030 11:50:50.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.194" endtime="20201030 11:50:50.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.159" endtime="20201030 11:50:50.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.154" endtime="20201030 11:50:50.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.219" endtime="20201030 11:50:50.579"></status>
</kw>
<msg timestamp="20201030 11:50:50.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113738236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113739806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.216" endtime="20201030 11:50:50.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.113738236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.113739806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.591" endtime="20201030 11:50:50.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.613" endtime="20201030 11:50:50.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.207" endtime="20201030 11:50:50.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.202" endtime="20201030 11:50:50.620"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.631" level="INFO">${RESULT} = [{'diff': 1.5699999999924108e-06}, {'diff': 1.5700000000062886e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.5559999999997798e-06}, {'diff': 1.569000000006815e-0...</msg>
<status status="PASS" starttime="20201030 11:50:50.622" endtime="20201030 11:50:50.632"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:50.642" level="INFO">${OVERHEAD} = {'diff': [1.5699999999924108e-06, 1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5699999999924108e-06, 1.4999999999876223e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:50.634" endtime="20201030 11:50:50.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.652" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:50.650" endtime="20201030 11:50:50.653"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.660" level="INFO">VALUE: [1.5699999999924108e-06, 1.5700000000062886e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.569000000006815e-06, 1.5699999999924108e-06, 1.4999999999876223e-06, 1.582999999999446e-06, 1.5689999999929372e-06, 1.5000000000015001e-06, 1.5420000000071488e-06, 1.569000000006815e-06, 1.5559999999997798e-06, 1.5690000000345705e-06, 1.5700000000062886e-06, 1.5420000000210266e-06, 1.5700000000062886e-06, 1.5560000000691687e-06, 1.5690000000345705e-06, 1.5549999999864283e-06, 1.5549999999864283e-06, 1.5689999999235482e-06, 1.5700000000062886e-06, 1.5559999999581464e-06, 1.5409999999382862e-06, 1.5559999999581464e-06, 1.5690000000345705e-06, 1.5550000000974507e-06, 1.5549999999864283e-06, 1.5560000000691687e-06, 1.6250000000050946e-06, 1.5560000000691687e-06, 1.5129999999530241e-06, 1.5140000000357645e-06, 1.5690000000345705e-06, 1.5420000000210266e-06, 1.5700000000062886e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.5549999999864283e-06, 1.5420000000210266e-06, 1.5559999999581464e-06, 1.5839999999434085e-06, 1.5700000000062886e-06, 1.5549999999864283e-06, 1.5549999999864283e-06, 1.5970000000198326e-06, 1.5700000000062886e-06, 1.5409999999382862e-06, 1.5700000000062886e-06, 1.5830000000827127e-06, 1.5549999999864283e-06, 1.5690000000345705e-06, 1.5690000000345705e-06, 1.5419999999100042e-06, 1.5969999999088103e-06, 1.5689999999235482e-06, 1.5970000000198326e-06, 1.5549999999864283e-06, 1.5549999999864283e-06, 1.5690000000345705e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.655" endtime="20201030 11:50:50.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.644" endtime="20201030 11:50:50.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.150" endtime="20201030 11:50:50.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.150" endtime="20201030 11:50:50.665"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.685" endtime="20201030 11:50:50.700"></status>
</kw>
<msg timestamp="20201030 11:50:50.701" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.682" endtime="20201030 11:50:50.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.707" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.703" endtime="20201030 11:50:50.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.709" endtime="20201030 11:50:50.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.674" endtime="20201030 11:50:50.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.670" endtime="20201030 11:50:50.716"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.734" endtime="20201030 11:50:51.098"></status>
</kw>
<msg timestamp="20201030 11:50:51.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.601666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.601668139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.730" endtime="20201030 11:50:51.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.129" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.601666569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.601668139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.110" endtime="20201030 11:50:51.130"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.132" endtime="20201030 11:50:51.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.723" endtime="20201030 11:50:51.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.718" endtime="20201030 11:50:51.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.150" level="INFO">${RESULT} = [{'diff': 1.5700000000062886e-06}, {'diff': 1.5409999999382862e-06}, {'diff': 1.5700000000062886e-06}, {'diff': 1.5830000000827127e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.5690000000345705e-...</msg>
<status status="PASS" starttime="20201030 11:50:51.140" endtime="20201030 11:50:51.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:51.162" level="INFO">${OVERHEAD} = {'diff': [1.5700000000062886e-06, 1.5409999999382862e-06, 1.5700000000062886e-06, 1.5830000000827127e-06, 1.5549999999864283e-06, 1.5690000000345705e-06, 1.5690000000345705e-06, 1.5419999999100042e-06...</msg>
<status status="PASS" starttime="20201030 11:50:51.152" endtime="20201030 11:50:51.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.173" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:51.170" endtime="20201030 11:50:51.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.179" level="INFO">VALUE: [1.5700000000062886e-06, 1.5409999999382862e-06, 1.5700000000062886e-06, 1.5830000000827127e-06, 1.5549999999864283e-06, 1.5690000000345705e-06, 1.5690000000345705e-06, 1.5419999999100042e-06, 1.5969999999088103e-06, 1.5689999999235482e-06, 1.5970000000198326e-06, 1.5549999999864283e-06, 1.5549999999864283e-06, 1.5690000000345705e-06, 1.527999999861862e-06, 1.5419999999100042e-06, 1.5840000000544308e-06, 1.5690000001455928e-06, 1.5689999999235482e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5419999999100042e-06, 1.5700000000062886e-06, 1.5550000000974507e-06, 1.5700000000062886e-06, 1.5420000001320489e-06, 1.5829999999716904e-06, 1.5690000001455928e-06, 1.5970000000198326e-06, 1.569999999784244e-06, 1.569999999784244e-06, 1.5550000000974507e-06, 1.554999999875406e-06, 1.5700000000062886e-06, 1.5690000001455928e-06, 1.5700000000062886e-06, 1.5839999998323862e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.5829999999716904e-06, 1.5700000000062886e-06, 1.5829999999716904e-06, 1.5689999999235482e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5689999999235482e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5700000000062886e-06, 1.527999999861862e-06, 1.4999999999876223e-06, 1.5270000000011663e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5689999999235482e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5700000000062886e-06, 1.5419999999100042e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.175" endtime="20201030 11:50:51.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.164" endtime="20201030 11:50:51.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.666" endtime="20201030 11:50:51.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.665" endtime="20201030 11:50:51.183"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.203" endtime="20201030 11:50:51.218"></status>
</kw>
<msg timestamp="20201030 11:50:51.219" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.200" endtime="20201030 11:50:51.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.225" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.221" endtime="20201030 11:50:51.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.227" endtime="20201030 11:50:51.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.193" endtime="20201030 11:50:51.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.188" endtime="20201030 11:50:51.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.251" endtime="20201030 11:50:51.611"></status>
</kw>
<msg timestamp="20201030 11:50:51.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.107509847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.107511417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.248" endtime="20201030 11:50:51.620"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.107509847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.107511417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.622" endtime="20201030 11:50:51.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.645" endtime="20201030 11:50:51.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.240" endtime="20201030 11:50:51.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.236" endtime="20201030 11:50:51.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.665" level="INFO">${RESULT} = [{'diff': 1.5700000000062886e-06}, {'diff': 1.527999999861862e-06}, {'diff': 1.4999999999876223e-06}, {'diff': 1.5270000000011663e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5550000000974507e-0...</msg>
<status status="PASS" starttime="20201030 11:50:51.653" endtime="20201030 11:50:51.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:51.675" level="INFO">${OVERHEAD} = {'diff': [1.5700000000062886e-06, 1.527999999861862e-06, 1.4999999999876223e-06, 1.5270000000011663e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5689999999235482e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:51.667" endtime="20201030 11:50:51.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.686" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:51.684" endtime="20201030 11:50:51.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.692" level="INFO">VALUE: [1.5700000000062886e-06, 1.527999999861862e-06, 1.4999999999876223e-06, 1.5270000000011663e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5689999999235482e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5700000000062886e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5700000000062886e-06, 1.5700000000062886e-06, 1.6110000000679747e-06, 1.5550000000974507e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5689999999235482e-06, 1.5700000000062886e-06, 1.5689999999235482e-06, 1.5280000000839067e-06, 1.5420000001320489e-06, 1.556000000180191e-06, 1.5419999999100042e-06, 1.5689999999235482e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999999235482e-06, 1.554999999875406e-06, 1.556000000180191e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5690000001455928e-06, 1.4729999999740784e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.4729999999740784e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.556000000180191e-06, 1.5700000000062886e-06, 1.5689999999235482e-06, 1.5839999998323862e-06, 1.5559999999581464e-06, 1.4999999999876223e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.527999999861862e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:51.689" endtime="20201030 11:50:51.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.678" endtime="20201030 11:50:51.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.185" endtime="20201030 11:50:51.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.184" endtime="20201030 11:50:51.696"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.717" endtime="20201030 11:50:51.732"></status>
</kw>
<msg timestamp="20201030 11:50:51.733" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.713" endtime="20201030 11:50:51.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.739" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.735" endtime="20201030 11:50:51.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.742" endtime="20201030 11:50:51.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.706" endtime="20201030 11:50:51.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.701" endtime="20201030 11:50:51.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.768" endtime="20201030 11:50:52.121"></status>
</kw>
<msg timestamp="20201030 11:50:52.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.615080486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.615082042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.764" endtime="20201030 11:50:52.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.615080486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.615082042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.132" endtime="20201030 11:50:52.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.154" endtime="20201030 11:50:52.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.755" endtime="20201030 11:50:52.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.750" endtime="20201030 11:50:52.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.172" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.5419999999100042e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201030 11:50:52.163" endtime="20201030 11:50:52.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:52.183" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000000974507e-06...</msg>
<status status="PASS" starttime="20201030 11:50:52.174" endtime="20201030 11:50:52.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.194" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:52.192" endtime="20201030 11:50:52.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.200" level="INFO">VALUE: [1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5419999999100042e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5550000000974507e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.527999999861862e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5700000002283332e-06, 1.5829999999716904e-06, 1.596999999797788e-06, 1.5689999997015036e-06, 1.5980000003246175e-06, 1.5690000001455928e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5410000000493085e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5410000000493085e-06, 1.5700000002283332e-06, 1.5550000003194953e-06, 1.527999999861862e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.4860000003835694e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.4859999999394802e-06, 1.5700000002283332e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.196" endtime="20201030 11:50:52.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.186" endtime="20201030 11:50:52.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.698" endtime="20201030 11:50:52.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.697" endtime="20201030 11:50:52.204"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.226" endtime="20201030 11:50:52.241"></status>
</kw>
<msg timestamp="20201030 11:50:52.242" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.223" endtime="20201030 11:50:52.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.249" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.244" endtime="20201030 11:50:52.249"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.251" endtime="20201030 11:50:52.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.215" endtime="20201030 11:50:52.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.209" endtime="20201030 11:50:52.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.274" endtime="20201030 11:50:52.638"></status>
</kw>
<msg timestamp="20201030 11:50:52.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.119526375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.119527917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.271" endtime="20201030 11:50:52.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.119526375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.119527917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.649" endtime="20201030 11:50:52.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.672" endtime="20201030 11:50:52.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.264" endtime="20201030 11:50:52.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.259" endtime="20201030 11:50:52.679"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.690" level="INFO">${RESULT} = [{'diff': 1.5420000001320489e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.554999999875406e-06...</msg>
<status status="PASS" starttime="20201030 11:50:52.680" endtime="20201030 11:50:52.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:52.703" level="INFO">${OVERHEAD} = {'diff': [1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:52.692" endtime="20201030 11:50:52.703"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.713" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:52.711" endtime="20201030 11:50:52.714"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.719" level="INFO">VALUE: [1.5420000001320489e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.4859999999394802e-06, 1.5700000002283332e-06, 1.596999999797788e-06, 1.5420000001320489e-06, 1.5700000002283332e-06, 1.5410000000493085e-06, 1.569999999784244e-06, 1.5559999999581464e-06, 1.5970000002418772e-06, 1.5690000001455928e-06, 1.527999999861862e-06, 1.5970000002418772e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5410000000493085e-06, 1.5700000002283332e-06, 1.5550000003194953e-06, 1.5700000002283332e-06, 1.5689999997015036e-06, 1.5979999998805283e-06, 1.569999999784244e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.569999999784244e-06, 1.5410000000493085e-06, 1.569999999784244e-06, 1.5410000000493085e-06, 1.5829999999716904e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5840000000544308e-06]</msg>
<status status="PASS" starttime="20201030 11:50:52.715" endtime="20201030 11:50:52.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.705" endtime="20201030 11:50:52.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.206" endtime="20201030 11:50:52.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.205" endtime="20201030 11:50:52.723"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.743" endtime="20201030 11:50:52.758"></status>
</kw>
<msg timestamp="20201030 11:50:52.759" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.740" endtime="20201030 11:50:52.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.765" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.761" endtime="20201030 11:50:52.766"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.768" endtime="20201030 11:50:52.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.733" endtime="20201030 11:50:52.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.728" endtime="20201030 11:50:52.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.792" endtime="20201030 11:50:53.144"></status>
</kw>
<msg timestamp="20201030 11:50:53.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.618529264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.618530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.788" endtime="20201030 11:50:53.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.618529264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.618530833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.155" endtime="20201030 11:50:53.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.177" endtime="20201030 11:50:53.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.781" endtime="20201030 11:50:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.776" endtime="20201030 11:50:53.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.196" level="INFO">${RESULT} = [{'diff': 1.5689999997015036e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5689999997015036e-06}, {'diff': 1.596999999797788e-06}, {'diff': 1.5559999999581464e-0...</msg>
<status status="PASS" starttime="20201030 11:50:53.186" endtime="20201030 11:50:53.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:53.212" level="INFO">${OVERHEAD} = {'diff': [1.5689999997015036e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:53.198" endtime="20201030 11:50:53.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.223" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:53.220" endtime="20201030 11:50:53.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.228" level="INFO">VALUE: [1.5689999997015036e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.527999999861862e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5840000000544308e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5840000000544308e-06, 1.5829999999716904e-06, 1.500000000209667e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5140000000357645e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5550000003194953e-06, 1.5419999996879596e-06, 1.527999999861862e-06, 1.5420000001320489e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.569999999784244e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.6249999998940723e-06, 1.554999999875406e-06, 1.5829999999716904e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5550000003194953e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:53.225" endtime="20201030 11:50:53.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.214" endtime="20201030 11:50:53.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.725" endtime="20201030 11:50:53.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.724" endtime="20201030 11:50:53.233"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.253" endtime="20201030 11:50:53.268"></status>
</kw>
<msg timestamp="20201030 11:50:53.269" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.250" endtime="20201030 11:50:53.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.275" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.271" endtime="20201030 11:50:53.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.278" endtime="20201030 11:50:53.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.242" endtime="20201030 11:50:53.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.238" endtime="20201030 11:50:53.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.301" endtime="20201030 11:50:53.675"></status>
</kw>
<msg timestamp="20201030 11:50:53.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126973806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.298" endtime="20201030 11:50:53.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.706" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.126972181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.126973806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.686" endtime="20201030 11:50:53.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.708" endtime="20201030 11:50:53.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.290" endtime="20201030 11:50:53.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.286" endtime="20201030 11:50:53.715"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.727" level="INFO">${RESULT} = [{'diff': 1.6249999998940723e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.569999999784244e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06...</msg>
<status status="PASS" starttime="20201030 11:50:53.717" endtime="20201030 11:50:53.727"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:53.737" level="INFO">${OVERHEAD} = {'diff': [1.6249999998940723e-06, 1.554999999875406e-06, 1.5829999999716904e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5689999997015036e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:53.729" endtime="20201030 11:50:53.738"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.747" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:53.745" endtime="20201030 11:50:53.748"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.753" level="INFO">VALUE: [1.6249999998940723e-06, 1.554999999875406e-06, 1.5829999999716904e-06, 1.569999999784244e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5689999997015036e-06, 1.5559999999581464e-06, 1.5840000000544308e-06, 1.5559999999581464e-06, 1.569999999784244e-06, 1.5550000003194953e-06, 1.5559999999581464e-06, 1.5829999999716904e-06, 1.5550000003194953e-06, 1.5410000000493085e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5410000000493085e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5829999999716904e-06, 1.500000000209667e-06, 1.5420000001320489e-06, 1.569999999784244e-06, 1.554999999875406e-06, 1.6110000000679747e-06, 1.5420000001320489e-06, 1.5420000001320489e-06, 1.554999999875406e-06, 1.5420000001320489e-06, 1.5689999997015036e-06, 1.5840000000544308e-06, 1.5690000001455928e-06, 1.5420000001320489e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5410000000493085e-06, 1.554999999875406e-06, 1.6109999996238855e-06, 1.6110000000679747e-06, 1.5559999999581464e-06, 1.5689999997015036e-06, 1.5690000001455928e-06, 1.5560000004022356e-06, 1.5829999999716904e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5840000000544308e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:53.749" endtime="20201030 11:50:53.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.739" endtime="20201030 11:50:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.234" endtime="20201030 11:50:53.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.233" endtime="20201030 11:50:53.757"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.779" endtime="20201030 11:50:53.795"></status>
</kw>
<msg timestamp="20201030 11:50:53.796" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.774" endtime="20201030 11:50:53.797"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.802" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.798" endtime="20201030 11:50:53.803"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.804" endtime="20201030 11:50:53.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.767" endtime="20201030 11:50:53.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.762" endtime="20201030 11:50:53.811"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.832" endtime="20201030 11:50:54.234"></status>
</kw>
<msg timestamp="20201030 11:50:54.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.625714917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.625716486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.828" endtime="20201030 11:50:54.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.267" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.625714917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.625716486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.246" endtime="20201030 11:50:54.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.270" endtime="20201030 11:50:54.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.817" endtime="20201030 11:50:54.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.812" endtime="20201030 11:50:54.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.292" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5560000004022356e-06}, {'diff': 1.5829999999716904e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.5420000001320489e-06}, {'diff': 1.5560000004022356e-...</msg>
<status status="PASS" starttime="20201030 11:50:54.281" endtime="20201030 11:50:54.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:54.305" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5560000004022356e-06, 1.5829999999716904e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5840000000544308e-06, 1.5420000001320489e-06...</msg>
<status status="PASS" starttime="20201030 11:50:54.295" endtime="20201030 11:50:54.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.316" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:54.313" endtime="20201030 11:50:54.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.322" level="INFO">VALUE: [1.5690000001455928e-06, 1.5560000004022356e-06, 1.5829999999716904e-06, 1.4859999999394802e-06, 1.5420000001320489e-06, 1.5560000004022356e-06, 1.5840000000544308e-06, 1.5420000001320489e-06, 1.5840000000544308e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5000000006537562e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.554999999875406e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5699999993401548e-06, 1.5689999992574144e-06, 1.5409999996052193e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.58400000049852e-06, 1.5839999996103415e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:54.318" endtime="20201030 11:50:54.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.307" endtime="20201030 11:50:54.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.759" endtime="20201030 11:50:54.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.758" endtime="20201030 11:50:54.326"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.348" endtime="20201030 11:50:54.363"></status>
</kw>
<msg timestamp="20201030 11:50:54.364" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.344" endtime="20201030 11:50:54.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.371" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.367" endtime="20201030 11:50:54.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.373" endtime="20201030 11:50:54.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.337" endtime="20201030 11:50:54.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.332" endtime="20201030 11:50:54.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.399" endtime="20201030 11:50:54.783"></status>
</kw>
<msg timestamp="20201030 11:50:54.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.141639333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.141640903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.395" endtime="20201030 11:50:54.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.141639333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.141640903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.795" endtime="20201030 11:50:54.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.818" endtime="20201030 11:50:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.387" endtime="20201030 11:50:54.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.382" endtime="20201030 11:50:54.833"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.845" level="INFO">${RESULT} = [{'diff': 1.5700000002283332e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201030 11:50:54.834" endtime="20201030 11:50:54.845"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:54.858" level="INFO">${OVERHEAD} = {'diff': [1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5419999996879596e-06...</msg>
<status status="PASS" starttime="20201030 11:50:54.847" endtime="20201030 11:50:54.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.870" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:54.867" endtime="20201030 11:50:54.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.876" level="INFO">VALUE: [1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.58400000049852e-06, 1.5839999996103415e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5279999994177729e-06, 1.5700000002283332e-06, 1.4720000001133826e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5280000003059513e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5979999998805283e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.6110000000679747e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5699999993401548e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.6110000000679747e-06, 1.58400000049852e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201030 11:50:54.872" endtime="20201030 11:50:54.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.860" endtime="20201030 11:50:54.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.328" endtime="20201030 11:50:54.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.327" endtime="20201030 11:50:54.881"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.904" endtime="20201030 11:50:54.919"></status>
</kw>
<msg timestamp="20201030 11:50:54.921" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.900" endtime="20201030 11:50:54.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.927" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.923" endtime="20201030 11:50:54.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.930" endtime="20201030 11:50:54.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.892" endtime="20201030 11:50:54.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.887" endtime="20201030 11:50:54.937"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.954" endtime="20201030 11:50:55.348"></status>
</kw>
<msg timestamp="20201030 11:50:55.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.701698139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.70169975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:54.951" endtime="20201030 11:50:55.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.381" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.701698139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.70169975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:55.360" endtime="20201030 11:50:55.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.384" endtime="20201030 11:50:55.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.943" endtime="20201030 11:50:55.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.938" endtime="20201030 11:50:55.392"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.403" level="INFO">${RESULT} = [{'diff': 1.6110000000679747e-06}, {'diff': 1.58400000049852e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5829999995276012e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:55.393" endtime="20201030 11:50:55.404"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:55.415" level="INFO">${OVERHEAD} = {'diff': [1.6110000000679747e-06, 1.58400000049852e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:55.406" endtime="20201030 11:50:55.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.425" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:55.423" endtime="20201030 11:50:55.426"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.431" level="INFO">VALUE: [1.6110000000679747e-06, 1.58400000049852e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.6389999997201699e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5269999993350325e-06, 1.554999999875406e-06, 1.6250000003381615e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.4720000001133826e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5000000006537562e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201030 11:50:55.428" endtime="20201030 11:50:55.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.417" endtime="20201030 11:50:55.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.883" endtime="20201030 11:50:55.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.882" endtime="20201030 11:50:55.436"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.458" endtime="20201030 11:50:55.475"></status>
</kw>
<msg timestamp="20201030 11:50:55.476" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.454" endtime="20201030 11:50:55.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.482" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.478" endtime="20201030 11:50:55.483"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.485" endtime="20201030 11:50:55.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.447" endtime="20201030 11:50:55.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.441" endtime="20201030 11:50:55.492"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.510" endtime="20201030 11:50:55.908"></status>
</kw>
<msg timestamp="20201030 11:50:55.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.247618361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.247619917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.506" endtime="20201030 11:50:55.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.247618361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.247619917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.921" endtime="20201030 11:50:55.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.945" endtime="20201030 11:50:55.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.499" endtime="20201030 11:50:55.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.493" endtime="20201030 11:50:55.952"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.964" level="INFO">${RESULT} = [{'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.542000000576138e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5690000001455928e-0...</msg>
<status status="PASS" starttime="20201030 11:50:55.954" endtime="20201030 11:50:55.965"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:55.977" level="INFO">${OVERHEAD} = {'diff': [1.5559999999581464e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:55.967" endtime="20201030 11:50:55.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.988" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:55.985" endtime="20201030 11:50:55.989"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.994" level="INFO">VALUE: [1.5559999999581464e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5000000006537562e-06, 1.5690000001455928e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5830000004157796e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5550000007635845e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.6250000003381615e-06, 1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5830000004157796e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.596999999797788e-06]</msg>
<status status="PASS" starttime="20201030 11:50:55.990" endtime="20201030 11:50:55.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.979" endtime="20201030 11:50:55.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.438" endtime="20201030 11:50:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.437" endtime="20201030 11:50:55.998"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.020" endtime="20201030 11:50:56.035"></status>
</kw>
<msg timestamp="20201030 11:50:56.037" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.017" endtime="20201030 11:50:56.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.043" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.039" endtime="20201030 11:50:56.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.046" endtime="20201030 11:50:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.009" endtime="20201030 11:50:56.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.004" endtime="20201030 11:50:56.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.071" endtime="20201030 11:50:56.464"></status>
</kw>
<msg timestamp="20201030 11:50:56.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.792378528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.792380097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.067" endtime="20201030 11:50:56.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.792378528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.792380097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.475" endtime="20201030 11:50:56.498"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.500" endtime="20201030 11:50:56.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.060" endtime="20201030 11:50:56.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.055" endtime="20201030 11:50:56.507"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.519" level="INFO">${RESULT} = [{'diff': 1.5689999992574144e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-0...</msg>
<status status="PASS" starttime="20201030 11:50:56.509" endtime="20201030 11:50:56.519"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:56.532" level="INFO">${OVERHEAD} = {'diff': [1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5690000001455928e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:56.521" endtime="20201030 11:50:56.532"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.542" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:56.540" endtime="20201030 11:50:56.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.549" level="INFO">VALUE: [1.5689999992574144e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5830000004157796e-06, 1.5829999995276012e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.542000000576138e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5970000006859664e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.596999999797788e-06, 1.58400000049852e-06, 1.5699999993401548e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5980000007687067e-06, 1.5140000000357645e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5979999998805283e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:56.545" endtime="20201030 11:50:56.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.534" endtime="20201030 11:50:56.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.000" endtime="20201030 11:50:56.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.999" endtime="20201030 11:50:56.553"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.575" endtime="20201030 11:50:56.590"></status>
</kw>
<msg timestamp="20201030 11:50:56.591" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.571" endtime="20201030 11:50:56.591"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.598" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.593" endtime="20201030 11:50:56.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.600" endtime="20201030 11:50:56.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.564" endtime="20201030 11:50:56.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.559" endtime="20201030 11:50:56.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.625" endtime="20201030 11:50:57.020"></status>
</kw>
<msg timestamp="20201030 11:50:57.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.342188167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.34218975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:56.621" endtime="20201030 11:50:57.031"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.342188167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.34218975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:57.033" endtime="20201030 11:50:57.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.057" endtime="20201030 11:50:57.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.613" endtime="20201030 11:50:57.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.608" endtime="20201030 11:50:57.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.076" level="INFO">${RESULT} = [{'diff': 1.5830000004157796e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5699999993401548e-0...</msg>
<status status="PASS" starttime="20201030 11:50:57.066" endtime="20201030 11:50:57.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:57.087" level="INFO">${OVERHEAD} = {'diff': [1.5830000004157796e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5980000007687067e-06, 1.5140000000357645e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:57.078" endtime="20201030 11:50:57.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.098" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:57.095" endtime="20201030 11:50:57.099"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.104" level="INFO">VALUE: [1.5830000004157796e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5699999993401548e-06, 1.5980000007687067e-06, 1.5140000000357645e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.554999999875406e-06, 1.5979999998805283e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5689999992574144e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.485999999495391e-06, 1.554999999875406e-06, 1.542000000576138e-06, 1.554999999875406e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.5279999994177729e-06, 1.5699999993401548e-06, 1.596999999797788e-06, 1.5700000002283332e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5559999999581464e-06, 1.554999999875406e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.624999999449983e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5830000004157796e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201030 11:50:57.100" endtime="20201030 11:50:57.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.089" endtime="20201030 11:50:57.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.555" endtime="20201030 11:50:57.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.554" endtime="20201030 11:50:57.108"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.130" endtime="20201030 11:50:57.147"></status>
</kw>
<msg timestamp="20201030 11:50:57.148" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.127" endtime="20201030 11:50:57.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.155" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.151" endtime="20201030 11:50:57.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.157" endtime="20201030 11:50:57.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.119" endtime="20201030 11:50:57.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.114" endtime="20201030 11:50:57.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.182" endtime="20201030 11:50:57.574"></status>
</kw>
<msg timestamp="20201030 11:50:57.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.885987361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.885988944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.179" endtime="20201030 11:50:57.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.885987361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.885988944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.587" endtime="20201030 11:50:57.609"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.610" endtime="20201030 11:50:57.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.171" endtime="20201030 11:50:57.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.166" endtime="20201030 11:50:57.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.629" level="INFO">${RESULT} = [{'diff': 1.5830000004157796e-06}, {'diff': 1.554999999875406e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.6110000000679747e-06}, {'diff': 1.5970000006859664e-0...</msg>
<status status="PASS" starttime="20201030 11:50:57.619" endtime="20201030 11:50:57.630"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:57.642" level="INFO">${OVERHEAD} = {'diff': [1.5830000004157796e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5690000001455928e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:57.632" endtime="20201030 11:50:57.643"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.653" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:57.651" endtime="20201030 11:50:57.654"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.659" level="INFO">VALUE: [1.5830000004157796e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.6110000000679747e-06, 1.5970000006859664e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5000000006537562e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5829999995276012e-06, 1.5559999999581464e-06, 1.542000000576138e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5559999999581464e-06, 1.5410000004933977e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5689999992574144e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5699999993401548e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5830000004157796e-06, 1.6379999996374295e-06, 1.5690000001455928e-06, 1.5140000000357645e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.6250000003381615e-06, 1.5689999992574144e-06, 1.554999999875406e-06, 1.554999999875406e-06, 1.5559999999581464e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1.6529999999903566e-06, 1.5830000004157796e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5550000007635845e-06]</msg>
<status status="PASS" starttime="20201030 11:50:57.655" endtime="20201030 11:50:57.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.644" endtime="20201030 11:50:57.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.110" endtime="20201030 11:50:57.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.109" endtime="20201030 11:50:57.664"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.685" endtime="20201030 11:50:57.701"></status>
</kw>
<msg timestamp="20201030 11:50:57.702" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.682" endtime="20201030 11:50:57.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.709" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.704" endtime="20201030 11:50:57.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.711" endtime="20201030 11:50:57.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.674" endtime="20201030 11:50:57.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.669" endtime="20201030 11:50:57.718"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.737" endtime="20201030 11:50:58.066"></status>
</kw>
<msg timestamp="20201030 11:50:58.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.432987403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.432988972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.732" endtime="20201030 11:50:58.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.432987403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.432988972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.078" endtime="20201030 11:50:58.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.101" endtime="20201030 11:50:58.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.725" endtime="20201030 11:50:58.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.720" endtime="20201030 11:50:58.108"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.120" level="INFO">${RESULT} = [{'diff': 1.5690000001455928e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5700000002283332e-06}, {'diff': 1.5699999993401548e-06}, {'diff': 1.5559999999581464e-...</msg>
<status status="PASS" starttime="20201030 11:50:58.110" endtime="20201030 11:50:58.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:58.137" level="INFO">${OVERHEAD} = {'diff': [1.5690000001455928e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:58.122" endtime="20201030 11:50:58.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.148" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:58.145" endtime="20201030 11:50:58.148"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.153" level="INFO">VALUE: [1.5690000001455928e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5699999993401548e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.542000000576138e-06, 1.6529999999903566e-06, 1.5830000004157796e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.527000000223211e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5699999993401548e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.554999999875406e-06, 1.5690000001455928e-06, 1.542000000576138e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.5829999995276012e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5830000004157796e-06, 1.5700000002283332e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5559999999581464e-06, 1.6390000006083483e-06, 1.6250000003381615e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.58400000049852e-06, 1.5559999999581464e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.596999999797788e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.150" endtime="20201030 11:50:58.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.139" endtime="20201030 11:50:58.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.666" endtime="20201030 11:50:58.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.665" endtime="20201030 11:50:58.158"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.180" endtime="20201030 11:50:58.195"></status>
</kw>
<msg timestamp="20201030 11:50:58.196" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.176" endtime="20201030 11:50:58.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.203" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.199" endtime="20201030 11:50:58.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.205" endtime="20201030 11:50:58.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.168" endtime="20201030 11:50:58.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.163" endtime="20201030 11:50:58.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.231" endtime="20201030 11:50:58.613"></status>
</kw>
<msg timestamp="20201030 11:50:58.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.976682278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.976683833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.227" endtime="20201030 11:50:58.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.976682278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.976683833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.625" endtime="20201030 11:50:58.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.648" endtime="20201030 11:50:58.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.219" endtime="20201030 11:50:58.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.214" endtime="20201030 11:50:58.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.668" level="INFO">${RESULT} = [{'diff': 1.554999999875406e-06}, {'diff': 1.5830000004157796e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5559999999581464e-06}, {'diff': 1.5689999992574144e-06}, {'diff': 1.5699999993401548e-0...</msg>
<status status="PASS" starttime="20201030 11:50:58.658" endtime="20201030 11:50:58.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:58.680" level="INFO">${OVERHEAD} = {'diff': [1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:58.670" endtime="20201030 11:50:58.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.690" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:58.688" endtime="20201030 11:50:58.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.696" level="INFO">VALUE: [1.554999999875406e-06, 1.5830000004157796e-06, 1.5559999999581464e-06, 1.5559999999581464e-06, 1.5689999992574144e-06, 1.5699999993401548e-06, 1.5690000001455928e-06, 1.554999999875406e-06, 1.5419999996879596e-06, 1.5410000004933977e-06, 1.542000000576138e-06, 1.596999999797788e-06, 1.5559999999581464e-06, 1.596999999797788e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.62500000122634e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5550000007635845e-06, 1.5839999996103415e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.59799999899235e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.513999999147586e-06, 1.5550000007635845e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5279999985295944e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.624999999449983e-06, 1.5560000008463248e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.4860000003835694e-06, 1.5549999989872276e-06, 1.5690000001455928e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.693" endtime="20201030 11:50:58.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.682" endtime="20201030 11:50:58.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.160" endtime="20201030 11:50:58.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.159" endtime="20201030 11:50:58.701"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.723" endtime="20201030 11:50:58.739"></status>
</kw>
<msg timestamp="20201030 11:50:58.740" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.719" endtime="20201030 11:50:58.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.743" endtime="20201030 11:50:58.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.749" endtime="20201030 11:50:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.711" endtime="20201030 11:50:58.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.706" endtime="20201030 11:50:58.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.775" endtime="20201030 11:50:59.175"></status>
</kw>
<msg timestamp="20201030 11:50:59.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.461785069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.461786625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.772" endtime="20201030 11:50:59.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.208" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.461785069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.461786625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.187" endtime="20201030 11:50:59.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.210" endtime="20201030 11:50:59.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.764" endtime="20201030 11:50:59.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.758" endtime="20201030 11:50:59.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.229" level="INFO">${RESULT} = [{'diff': 1.5560000008463248e-06}, {'diff': 1.5280000003059513e-06}, {'diff': 1.5690000001455928e-06}, {'diff': 1.5969999989096095e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5560000008463248e-...</msg>
<status status="PASS" starttime="20201030 11:50:59.219" endtime="20201030 11:50:59.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:59.242" level="INFO">${OVERHEAD} = {'diff': [1.5560000008463248e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5280000003059513e-06...</msg>
<status status="PASS" starttime="20201030 11:50:59.232" endtime="20201030 11:50:59.242"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.253" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:59.250" endtime="20201030 11:50:59.253"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.259" level="INFO">VALUE: [1.5560000008463248e-06, 1.5280000003059513e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5419999996879596e-06, 1.5560000008463248e-06, 1.5839999996103415e-06, 1.5280000003059513e-06, 1.5420000014643165e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.4860000003835694e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.568999998369236e-06, 1.583000001303958e-06, 1.5549999989872276e-06, 1.5549999989872276e-06, 1.4859999986072125e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.514000000923943e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5970000006859664e-06, 1.555999999069968e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5560000008463248e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5980000007687067e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.568999998369236e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.583000001303958e-06, 1.5280000003059513e-06, 1.555999999069968e-06]</msg>
<status status="PASS" starttime="20201030 11:50:59.255" endtime="20201030 11:50:59.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.244" endtime="20201030 11:50:59.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.703" endtime="20201030 11:50:59.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.702" endtime="20201030 11:50:59.263"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.285" endtime="20201030 11:50:59.301"></status>
</kw>
<msg timestamp="20201030 11:50:59.302" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.281" endtime="20201030 11:50:59.302"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.309" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.304" endtime="20201030 11:50:59.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.311" endtime="20201030 11:50:59.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.274" endtime="20201030 11:50:59.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.269" endtime="20201030 11:50:59.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.337" endtime="20201030 11:50:59.734"></status>
</kw>
<msg timestamp="20201030 11:50:59.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.996510319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.996511875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.333" endtime="20201030 11:50:59.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.996510319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.996511875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.746" endtime="20201030 11:50:59.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.769" endtime="20201030 11:50:59.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.325" endtime="20201030 11:50:59.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.320" endtime="20201030 11:50:59.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.788" level="INFO">${RESULT} = [{'diff': 1.555999999069968e-06}, {'diff': 1.5560000008463248e-06}, {'diff': 1.5980000007687067e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.5980000007687067e-06}, {'diff': 1.5839999996103415e-0...</msg>
<status status="PASS" starttime="20201030 11:50:59.778" endtime="20201030 11:50:59.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:59.801" level="INFO">${OVERHEAD} = {'diff': [1.555999999069968e-06, 1.5560000008463248e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5980000007687067e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.5419999996879596e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:59.791" endtime="20201030 11:50:59.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.812" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:59.810" endtime="20201030 11:50:59.813"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.818" level="INFO">VALUE: [1.555999999069968e-06, 1.5560000008463248e-06, 1.5980000007687067e-06, 1.5419999996879596e-06, 1.5980000007687067e-06, 1.5839999996103415e-06, 1.5560000008463248e-06, 1.5419999996879596e-06, 1.568999998369236e-06, 1.5550000007635845e-06, 1.5700000002283332e-06, 1.583000001303958e-06, 1.5280000003059513e-06, 1.555999999069968e-06, 1.513999999147586e-06, 1.5409999996052193e-06, 1.5690000001455928e-06, 1.514000000923943e-06, 1.5700000002283332e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.6390000006083483e-06, 1.5829999995276012e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5410000013815761e-06, 1.5829999995276012e-06, 1.5550000007635845e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5700000002283332e-06, 1.5420000014643165e-06, 1.5700000002283332e-06, 1.624999999449983e-06, 1.5700000002283332e-06, 1.555999999069968e-06, 1.5000000015419346e-06, 1.5690000001455928e-06, 1.555999999069968e-06, 1.5419999996879596e-06, 1.5980000007687067e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5549999989872276e-06, 1.5829999995276012e-06, 1.5000000015419346e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5829999995276012e-06]</msg>
<status status="PASS" starttime="20201030 11:50:59.814" endtime="20201030 11:50:59.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.803" endtime="20201030 11:50:59.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.265" endtime="20201030 11:50:59.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.264" endtime="20201030 11:50:59.823"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.844" endtime="20201030 11:50:59.860"></status>
</kw>
<msg timestamp="20201030 11:50:59.861" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.841" endtime="20201030 11:50:59.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.868" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.863" endtime="20201030 11:50:59.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.877" endtime="20201030 11:50:59.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.833" endtime="20201030 11:50:59.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.828" endtime="20201030 11:50:59.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.903" endtime="20201030 11:51:00.297"></status>
</kw>
<msg timestamp="20201030 11:51:00.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.547675903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.547677486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.899" endtime="20201030 11:51:00.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.547675903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.547677486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.309" endtime="20201030 11:51:00.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.333" endtime="20201030 11:51:00.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.892" endtime="20201030 11:51:00.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.887" endtime="20201030 11:51:00.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.352" level="INFO">${RESULT} = [{'diff': 1.5829999995276012e-06}, {'diff': 1.5000000015419346e-06}, {'diff': 1.5549999989872276e-06}, {'diff': 1.5550000007635845e-06}, {'diff': 1.555999999069968e-06}, {'diff': 1.5550000007635845e-0...</msg>
<status status="PASS" starttime="20201030 11:51:00.342" endtime="20201030 11:51:00.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:00.364" level="INFO">${OVERHEAD} = {'diff': [1.5829999995276012e-06, 1.5000000015419346e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06,...</msg>
<status status="PASS" starttime="20201030 11:51:00.354" endtime="20201030 11:51:00.364"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.374" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:51:00.372" endtime="20201030 11:51:00.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.380" level="INFO">VALUE: [1.5829999995276012e-06, 1.5000000015419346e-06, 1.5549999989872276e-06, 1.5550000007635845e-06, 1.555999999069968e-06, 1.5550000007635845e-06, 1.5409999996052193e-06, 1.5409999996052193e-06, 1.555999999069968e-06, 1.5699999984519764e-06, 1.5690000001455928e-06, 1.5409999996052193e-06, 1.5700000002283332e-06, 1.5829999995276012e-06, 1.5419999996879596e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5969999989096095e-06, 1.5690000001455928e-06, 1.5549999989872276e-06, 1.5560000008463248e-06, 1.5969999989096095e-06, 1.5700000002283332e-06, 1.5409999996052193e-06, 1.5420000014643165e-06, 1.5829999995276012e-06, 1.5560000008463248e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.5700000002283332e-06, 1.5419999996879596e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.5419999996879596e-06, 1.5549999989872276e-06, 1.555999999069968e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5419999996879596e-06, 1.5690000001455928e-06, 1.5560000008463248e-06, 1.5560000008463248e-06, 1.555999999069968e-06, 1.5700000002283332e-06, 1.5690000001455928e-06, 1.5280000003059513e-06, 1.583000001303958e-06, 1.5690000001455928e-06, 1.5420000014643165e-06, 1.5829999995276012e-06, 1.5549999989872276e-06, 1.5690000001455928e-06, 1.5690000001455928e-06, 1.5969999989096095e-06, 1.5280000003059513e-06, 1.4870000004663098e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.5700000002283332e-06, 1.624999999449983e-06]</msg>
<status status="PASS" starttime="20201030 11:51:00.377" endtime="20201030 11:51:00.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.365" endtime="20201030 11:51:00.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.824" endtime="20201030 11:51:00.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.823" endtime="20201030 11:51:00.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.649" endtime="20201030 11:51:00.385"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:49.544" endtime="20201030 11:51:00.388" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.408" endtime="20201030 11:51:00.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.404" endtime="20201030 11:51:00.432"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.469" endtime="20201030 11:51:00.495"></status>
</kw>
<msg timestamp="20201030 11:51:00.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.466" endtime="20201030 11:51:00.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.503" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.498" endtime="20201030 11:51:00.504"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.510" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:00.505" endtime="20201030 11:51:00.511"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.458" endtime="20201030 11:51:00.513"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:00.451" endtime="20201030 11:51:00.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.448" endtime="20201030 11:51:00.515"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:00.523" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:00.522" endtime="20201030 11:51:00.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.517" endtime="20201030 11:51:00.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.444" endtime="20201030 11:51:00.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.442" endtime="20201030 11:51:00.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.527" endtime="20201030 11:51:00.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.438" endtime="20201030 11:51:00.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.433" endtime="20201030 11:51:00.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.401" endtime="20201030 11:51:00.535"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.560" endtime="20201030 11:51:00.583"></status>
</kw>
<msg timestamp="20201030 11:51:00.585" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.556" endtime="20201030 11:51:00.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.591" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.587" endtime="20201030 11:51:00.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.594" endtime="20201030 11:51:00.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.548" endtime="20201030 11:51:00.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.542" endtime="20201030 11:51:00.601"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.606" endtime="20201030 11:51:00.611"></status>
</kw>
<msg timestamp="20201030 11:51:00.612" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:00.603" endtime="20201030 11:51:00.612"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.622" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:00.620" endtime="20201030 11:51:00.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.627" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:00.625" endtime="20201030 11:51:00.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.613" endtime="20201030 11:51:00.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.641" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:00.638" endtime="20201030 11:51:00.641"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.645" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:00.643" endtime="20201030 11:51:00.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.632" endtime="20201030 11:51:00.650"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.667" endtime="20201030 11:51:01.034"></status>
</kw>
<msg timestamp="20201030 11:51:01.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.664" endtime="20201030 11:51:01.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.145181542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.145185236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.044" endtime="20201030 11:51:01.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.064" endtime="20201030 11:51:01.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.656" endtime="20201030 11:51:01.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.651" endtime="20201030 11:51:01.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.084" level="INFO">${RESULT} = [{'diff': 3.693999999998532e-06}, {'diff': 3.7360000000041804e-06}, {'diff': 3.7639999999894425e-06}, {'diff': 3.7220000000115494e-06}, {'diff': 3.7499999999968114e-06}, {'diff': 3.7499999999968114e-0...</msg>
<status status="PASS" starttime="20201030 11:51:01.074" endtime="20201030 11:51:01.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:01.094" level="INFO">${OVERHEAD} = {'diff': [3.693999999998532e-06, 3.7360000000041804e-06, 3.7639999999894425e-06, 3.7220000000115494e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.737000000003654e-06, 3.7360000000041804e-06, ...</msg>
<status status="PASS" starttime="20201030 11:51:01.086" endtime="20201030 11:51:01.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.106" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:51:01.104" endtime="20201030 11:51:01.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.112" level="INFO">VALUE: [3.693999999998532e-06, 3.7360000000041804e-06, 3.7639999999894425e-06, 3.7220000000115494e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.737000000003654e-06, 3.7360000000041804e-06, 3.737000000003654e-06, 3.7220000000115494e-06, 3.7499999999968114e-06, 3.735999999976425e-06, 3.762999999989969e-06, 3.7499999999968114e-06, 3.666999999984988e-06, 3.79200000000246e-06, 3.7220000000115494e-06, 3.7639999999894425e-06, 3.7499999999968114e-06, 3.709000000018392e-06, 3.764000000017198e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7089999999906365e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.79200000000246e-06, 3.693999999998532e-06, 3.750000000024567e-06, 3.7360000000041804e-06, 3.6670000000127434e-06, 3.693999999998532e-06, 3.7360000000041804e-06, 3.778000000009829e-06, 3.7499999999968114e-06, 3.778000000009829e-06, 3.7360000000041804e-06, 3.7499999999968114e-06, 3.7639999999894425e-06, 3.7360000000041804e-06, 3.709000000018392e-06, 3.7499999999968114e-06, 3.7360000000041804e-06, 3.7360000000041804e-06]</msg>
<status status="PASS" starttime="20201030 11:51:01.109" endtime="20201030 11:51:01.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.096" endtime="20201030 11:51:01.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.537" endtime="20201030 11:51:01.117"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:00.394" endtime="20201030 11:51:01.119" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.141" endtime="20201030 11:51:01.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.135" endtime="20201030 11:51:01.165"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.201" endtime="20201030 11:51:01.227"></status>
</kw>
<msg timestamp="20201030 11:51:01.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.198" endtime="20201030 11:51:01.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.236" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.231" endtime="20201030 11:51:01.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.243" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:01.238" endtime="20201030 11:51:01.244"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:01.190" endtime="20201030 11:51:01.246"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:01.183" endtime="20201030 11:51:01.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.179" endtime="20201030 11:51:01.248"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:01.257" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:01.255" endtime="20201030 11:51:01.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.250" endtime="20201030 11:51:01.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.178" endtime="20201030 11:51:01.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.176" endtime="20201030 11:51:01.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.261" endtime="20201030 11:51:01.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.171" endtime="20201030 11:51:01.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.167" endtime="20201030 11:51:01.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.132" endtime="20201030 11:51:01.268"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.293" endtime="20201030 11:51:01.360"></status>
</kw>
<msg timestamp="20201030 11:51:01.362" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.289" endtime="20201030 11:51:01.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.368" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.364" endtime="20201030 11:51:01.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.371" endtime="20201030 11:51:01.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.282" endtime="20201030 11:51:01.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.275" endtime="20201030 11:51:01.378"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.383" endtime="20201030 11:51:01.388"></status>
</kw>
<msg timestamp="20201030 11:51:01.389" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:01.380" endtime="20201030 11:51:01.389"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.402" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:01.397" endtime="20201030 11:51:01.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.406" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:01.404" endtime="20201030 11:51:01.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.391" endtime="20201030 11:51:01.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.420" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:01.418" endtime="20201030 11:51:01.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.425" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:01.422" endtime="20201030 11:51:01.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.411" endtime="20201030 11:51:01.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.446" endtime="20201030 11:51:01.826"></status>
</kw>
<msg timestamp="20201030 11:51:01.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146080806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146111722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.441" endtime="20201030 11:51:01.833"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146080806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146111722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.835" endtime="20201030 11:51:01.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.855" endtime="20201030 11:51:01.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.433" endtime="20201030 11:51:01.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.428" endtime="20201030 11:51:01.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.873" level="INFO">${RESULT} = [{'diff': 3.091599999999195e-05}, {'diff': 3.0930000000012337e-05}, {'diff': 3.100000000000325e-05}, {'diff': 3.094500000000444e-05}, {'diff': 3.0930999999984055e-05}, {'diff': 3.093100000001181e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:01.864" endtime="20201030 11:51:01.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:01.883" level="INFO">${OVERHEAD} = {'diff': [3.091599999999195e-05, 3.0930000000012337e-05, 3.100000000000325e-05, 3.094500000000444e-05, 3.0930999999984055e-05, 3.093100000001181e-05, 3.09579999999976e-05, 3.094400000000497e-05, 3.091...</msg>
<status status="PASS" starttime="20201030 11:51:01.875" endtime="20201030 11:51:01.884"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.897" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:51:01.893" endtime="20201030 11:51:01.897"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.902" level="INFO">VALUE: [3.091599999999195e-05, 3.0930000000012337e-05, 3.100000000000325e-05, 3.094500000000444e-05, 3.0930999999984055e-05, 3.093100000001181e-05, 3.09579999999976e-05, 3.094400000000497e-05, 3.091599999999195e-05, 3.09579999999976e-05, 3.093100000001181e-05, 3.093100000001181e-05, 3.095899999999707e-05, 3.094400000000497e-05, 3.100000000000325e-05, 3.0986000000010616e-05, 3.088900000000616e-05, 3.09579999999976e-05, 3.0930000000012337e-05, 3.098599999998286e-05, 3.0930000000012337e-05, 3.094400000000497e-05, 3.094400000000497e-05, 3.0916999999991424e-05, 3.094400000000497e-05, 3.094400000000497e-05, 3.0930000000012337e-05, 3.093100000001181e-05, 3.090299999999879e-05, 3.093100000001181e-05, 3.092999999998458e-05, 3.094399999997721e-05, 3.094400000000497e-05, 3.094399999997721e-05, 3.0930999999984055e-05, 3.093100000001181e-05, 3.094400000000497e-05, 3.093100000001181e-05, 3.0930000000012337e-05, 3.0930000000012337e-05, 3.092999999998458e-05, 3.090299999999879e-05, 3.0916999999991424e-05, 3.098599999998286e-05, 3.094400000000497e-05, 3.09579999999976e-05, 3.093100000001181e-05, 3.094500000000444e-05, 3.0916999999991424e-05, 3.088900000000616e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.899" endtime="20201030 11:51:01.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.885" endtime="20201030 11:51:01.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.270" endtime="20201030 11:51:01.907"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:01.125" endtime="20201030 11:51:01.909" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.929" endtime="20201030 11:51:01.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.925" endtime="20201030 11:51:01.953"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.989" endtime="20201030 11:51:02.015"></status>
</kw>
<msg timestamp="20201030 11:51:02.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.985" endtime="20201030 11:51:02.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.023" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.019" endtime="20201030 11:51:02.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.030" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:02.026" endtime="20201030 11:51:02.031"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:01.978" endtime="20201030 11:51:02.033"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:01.971" endtime="20201030 11:51:02.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.967" endtime="20201030 11:51:02.036"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:02.044" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:02.042" endtime="20201030 11:51:02.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.037" endtime="20201030 11:51:02.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.965" endtime="20201030 11:51:02.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.964" endtime="20201030 11:51:02.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.047" endtime="20201030 11:51:02.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.959" endtime="20201030 11:51:02.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.954" endtime="20201030 11:51:02.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.922" endtime="20201030 11:51:02.055"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.082" endtime="20201030 11:51:02.265"></status>
</kw>
<msg timestamp="20201030 11:51:02.266" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.076" endtime="20201030 11:51:02.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.273" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.269" endtime="20201030 11:51:02.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.275" endtime="20201030 11:51:02.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.069" endtime="20201030 11:51:02.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.062" endtime="20201030 11:51:02.283"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.287" endtime="20201030 11:51:02.292"></status>
</kw>
<msg timestamp="20201030 11:51:02.293" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:02.284" endtime="20201030 11:51:02.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.304" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:02.302" endtime="20201030 11:51:02.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.309" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:02.306" endtime="20201030 11:51:02.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.295" endtime="20201030 11:51:02.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.322" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:02.320" endtime="20201030 11:51:02.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.327" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:02.324" endtime="20201030 11:51:02.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.312" endtime="20201030 11:51:02.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.347" endtime="20201030 11:51:02.708"></status>
</kw>
<msg timestamp="20201030 11:51:02.715" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.149308764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149368167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.343" endtime="20201030 11:51:02.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.734" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.149308764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.149368167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.718" endtime="20201030 11:51:02.735"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.736" endtime="20201030 11:51:02.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.336" endtime="20201030 11:51:02.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.331" endtime="20201030 11:51:02.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.755" level="INFO">${RESULT} = [{'diff': 5.940299999998566e-05}, {'diff': 5.877700000000985e-05}, {'diff': 5.877800000000932e-05}, {'diff': 5.8792000000001954e-05}, {'diff': 5.883299999998037e-05}, {'diff': 5.876400000001669e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:02.745" endtime="20201030 11:51:02.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:02.770" level="INFO">${OVERHEAD} = {'diff': [5.940299999998566e-05, 5.877700000000985e-05, 5.877800000000932e-05, 5.8792000000001954e-05, 5.883299999998037e-05, 5.876400000001669e-05, 5.8805999999994585e-05, 5.8792000000001954e-05, 5.8...</msg>
<status status="PASS" starttime="20201030 11:51:02.757" endtime="20201030 11:51:02.771"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.782" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:51:02.780" endtime="20201030 11:51:02.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.788" level="INFO">VALUE: [5.940299999998566e-05, 5.877700000000985e-05, 5.877800000000932e-05, 5.8792000000001954e-05, 5.883299999998037e-05, 5.876400000001669e-05, 5.8805999999994585e-05, 5.8792000000001954e-05, 5.8792000000001954e-05, 5.879100000000248e-05, 5.8792000000001954e-05, 5.886099999999339e-05, 5.8792000000001954e-05, 5.8763999999988936e-05, 5.879100000000248e-05, 5.876400000001669e-05, 5.876299999998946e-05, 5.877800000000932e-05, 5.877800000000932e-05, 5.8749999999996305e-05, 5.877800000000932e-05, 5.877799999998157e-05, 5.876400000001669e-05, 5.877799999998157e-05, 5.8749999999996305e-05, 5.8792000000001954e-05, 5.8792000000001954e-05, 5.879100000000248e-05, 5.8736000000003674e-05, 5.879100000000248e-05, 5.8792000000001954e-05, 5.877800000000932e-05, 5.880499999999511e-05, 5.877700000000985e-05, 5.877799999998157e-05, 5.877700000000985e-05, 5.877799999998157e-05, 5.877800000003708e-05, 5.87919999999742e-05, 5.879200000002971e-05, 5.872200000001104e-05, 5.8763999999988936e-05, 5.879200000002971e-05, 5.877799999998157e-05, 5.881899999998774e-05, 5.879200000002971e-05, 5.877800000003708e-05, 5.8860999999965635e-05, 5.8763999999988936e-05, 5.879100000000248e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.785" endtime="20201030 11:51:02.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.772" endtime="20201030 11:51:02.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.057" endtime="20201030 11:51:02.792"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:01.915" endtime="20201030 11:51:02.794" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.813" endtime="20201030 11:51:02.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.810" endtime="20201030 11:51:02.838"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.874" endtime="20201030 11:51:02.900"></status>
</kw>
<msg timestamp="20201030 11:51:02.901" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.870" endtime="20201030 11:51:02.901"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.908" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.903" endtime="20201030 11:51:02.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.915" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:02.910" endtime="20201030 11:51:02.915"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:02.863" endtime="20201030 11:51:02.917"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:02.855" endtime="20201030 11:51:02.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.852" endtime="20201030 11:51:02.920"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:02.928" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:02.927" endtime="20201030 11:51:02.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.922" endtime="20201030 11:51:02.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.850" endtime="20201030 11:51:02.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.848" endtime="20201030 11:51:02.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.932" endtime="20201030 11:51:02.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.844" endtime="20201030 11:51:02.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.839" endtime="20201030 11:51:02.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.807" endtime="20201030 11:51:02.939"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.966" endtime="20201030 11:51:02.991"></status>
</kw>
<msg timestamp="20201030 11:51:02.992" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.963" endtime="20201030 11:51:02.993"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.999" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.995" endtime="20201030 11:51:03.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.002" endtime="20201030 11:51:03.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.953" endtime="20201030 11:51:03.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.947" endtime="20201030 11:51:03.009"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.014" endtime="20201030 11:51:03.019"></status>
</kw>
<msg timestamp="20201030 11:51:03.020" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:03.011" endtime="20201030 11:51:03.020"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.030" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:03.028" endtime="20201030 11:51:03.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.035" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:03.033" endtime="20201030 11:51:03.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.022" endtime="20201030 11:51:03.037"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.048" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:03.046" endtime="20201030 11:51:03.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.053" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:03.051" endtime="20201030 11:51:03.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.039" endtime="20201030 11:51:03.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.073" endtime="20201030 11:51:03.440"></status>
</kw>
<msg timestamp="20201030 11:51:03.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146187194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146188083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.070" endtime="20201030 11:51:03.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.146187194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.146188083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.450" endtime="20201030 11:51:03.468"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.470" endtime="20201030 11:51:03.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.062" endtime="20201030 11:51:03.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.057" endtime="20201030 11:51:03.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.488" level="INFO">${RESULT} = [{'diff': 8.890000000039144e-07}, {'diff': 8.750000000112834e-07}, {'diff': 8.609999999908968e-07}, {'diff': 8.609999999908968e-07}, {'diff': 8.610000000186524e-07}, {'diff': 8.750000000112834e-07}, {...</msg>
<status status="PASS" starttime="20201030 11:51:03.478" endtime="20201030 11:51:03.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:03.500" level="INFO">${OVERHEAD} = {'diff': [8.890000000039144e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.749999999835278e-07, 8.1999...</msg>
<status status="PASS" starttime="20201030 11:51:03.490" endtime="20201030 11:51:03.500"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.511" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:51:03.509" endtime="20201030 11:51:03.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.517" level="INFO">VALUE: [8.890000000039144e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.610000000186524e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.749999999835278e-07, 8.199999999847218e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.889999999761589e-07, 8.749999999835278e-07, 8.749999999835278e-07, 9.029999999965455e-07, 8.749999999835278e-07, 8.750000000112834e-07, 8.610000000186524e-07, 8.890000000039144e-07, 9.440000000027204e-07, 9.029999999965455e-07, 8.750000000112834e-07, 9.450000000021941e-07, 9.029999999965455e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.750000000112834e-07, 8.890000000039144e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.750000000112834e-07, 8.749999999835278e-07, 8.609999999908968e-07, 8.749999999835278e-07, 8.749999999835278e-07, 8.750000000112834e-07, 8.609999999908968e-07, 8.750000000112834e-07, 8.610000000186524e-07, 8.890000000039144e-07, 8.340000000051084e-07, 8.609999999908968e-07, 8.609999999908968e-07, 8.750000000112834e-07, 8.610000000186524e-07, 8.610000000186524e-07, 8.749999999835278e-07, 8.880000000044408e-07, 8.479999999977395e-07]</msg>
<status status="PASS" starttime="20201030 11:51:03.514" endtime="20201030 11:51:03.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.501" endtime="20201030 11:51:03.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.941" endtime="20201030 11:51:03.521"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:02.800" endtime="20201030 11:51:03.524" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.544" endtime="20201030 11:51:03.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.540" endtime="20201030 11:51:03.568"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.604" endtime="20201030 11:51:03.630"></status>
</kw>
<msg timestamp="20201030 11:51:03.631" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.600" endtime="20201030 11:51:03.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.638" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.634" endtime="20201030 11:51:03.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.645" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:03.641" endtime="20201030 11:51:03.646"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.593" endtime="20201030 11:51:03.648"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:03.585" endtime="20201030 11:51:03.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.582" endtime="20201030 11:51:03.651"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:03.659" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:03.657" endtime="20201030 11:51:03.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.652" endtime="20201030 11:51:03.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.580" endtime="20201030 11:51:03.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.579" endtime="20201030 11:51:03.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.663" endtime="20201030 11:51:03.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.574" endtime="20201030 11:51:03.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.569" endtime="20201030 11:51:03.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.537" endtime="20201030 11:51:03.670"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.697" endtime="20201030 11:51:03.766"></status>
</kw>
<msg timestamp="20201030 11:51:03.767" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.694" endtime="20201030 11:51:03.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.773" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.769" endtime="20201030 11:51:03.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.776" endtime="20201030 11:51:03.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.686" endtime="20201030 11:51:03.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.678" endtime="20201030 11:51:03.783"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.788" endtime="20201030 11:51:03.793"></status>
</kw>
<msg timestamp="20201030 11:51:03.794" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:03.785" endtime="20201030 11:51:03.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.805" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:03.802" endtime="20201030 11:51:03.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.810" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:03.807" endtime="20201030 11:51:03.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.796" endtime="20201030 11:51:03.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.823" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:03.821" endtime="20201030 11:51:03.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.828" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:03.825" endtime="20201030 11:51:03.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.813" endtime="20201030 11:51:03.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.848" endtime="20201030 11:51:04.215"></status>
</kw>
<msg timestamp="20201030 11:51:04.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148069528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148080611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.844" endtime="20201030 11:51:04.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148069528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148080611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.224" endtime="20201030 11:51:04.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.243" endtime="20201030 11:51:04.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.837" endtime="20201030 11:51:04.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.832" endtime="20201030 11:51:04.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.262" level="INFO">${RESULT} = [{'diff': 1.1082999999995069e-05}, {'diff': 1.10969999999877e-05}, {'diff': 1.1070000000001912e-05}, {'diff': 1.1082999999995069e-05}, {'diff': 1.1070000000001912e-05}, {'diff': 1.1111999999979805e-05...</msg>
<status status="PASS" starttime="20201030 11:51:04.252" endtime="20201030 11:51:04.262"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:04.273" level="INFO">${OVERHEAD} = {'diff': [1.1082999999995069e-05, 1.10969999999877e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1111999999979805e-05, 1.1167000000006366e-05, 1.1069000000002438e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.264" endtime="20201030 11:51:04.274"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.285" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:51:04.283" endtime="20201030 11:51:04.286"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.291" level="INFO">VALUE: [1.1082999999995069e-05, 1.10969999999877e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1111999999979805e-05, 1.1167000000006366e-05, 1.1069000000002438e-05, 1.1070000000001912e-05, 1.10969999999877e-05, 1.1069000000002438e-05, 1.1070000000001912e-05, 1.1152000000014262e-05, 1.1070000000001912e-05, 1.1054999999982051e-05, 1.10969999999877e-05, 1.1083000000022825e-05, 1.1070000000001912e-05, 1.1027999999996263e-05, 1.1083999999994543e-05, 1.1152000000014262e-05, 1.1027000000024545e-05, 1.10969999999877e-05, 1.1069000000002438e-05, 1.1097999999987174e-05, 1.1083999999994543e-05, 1.1082999999995069e-05, 1.1070000000001912e-05, 1.1110999999980331e-05, 1.1082999999995069e-05, 1.1083999999994543e-05, 1.104200000001665e-05, 1.1070000000001912e-05, 1.1082999999995069e-05, 1.1083999999994543e-05, 1.1082999999995069e-05, 1.10969999999877e-05, 1.1111000000008087e-05, 1.1097000000015456e-05, 1.1097999999987174e-05, 1.10969999999877e-05, 1.1082999999995069e-05, 1.1014000000003632e-05, 1.1082999999995069e-05, 1.1083999999994543e-05, 1.1082999999995069e-05, 1.1167000000006366e-05, 1.1084000000022298e-05, 1.1083000000022825e-05, 1.1055000000009807e-05]</msg>
<status status="PASS" starttime="20201030 11:51:04.288" endtime="20201030 11:51:04.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.275" endtime="20201030 11:51:04.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.672" endtime="20201030 11:51:04.295"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:03.530" endtime="20201030 11:51:04.298" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.318" endtime="20201030 11:51:04.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.314" endtime="20201030 11:51:04.341"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.377" endtime="20201030 11:51:04.403"></status>
</kw>
<msg timestamp="20201030 11:51:04.404" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.374" endtime="20201030 11:51:04.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.411" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.406" endtime="20201030 11:51:04.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.418" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:04.413" endtime="20201030 11:51:04.419"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:04.366" endtime="20201030 11:51:04.421"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:04.359" endtime="20201030 11:51:04.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.356" endtime="20201030 11:51:04.423"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:04.431" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:04.430" endtime="20201030 11:51:04.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.425" endtime="20201030 11:51:04.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.354" endtime="20201030 11:51:04.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.352" endtime="20201030 11:51:04.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.437" endtime="20201030 11:51:04.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.348" endtime="20201030 11:51:04.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.343" endtime="20201030 11:51:04.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.311" endtime="20201030 11:51:04.444"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.469" endtime="20201030 11:51:04.654"></status>
</kw>
<msg timestamp="20201030 11:51:04.656" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.466" endtime="20201030 11:51:04.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.662" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.658" endtime="20201030 11:51:04.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.665" endtime="20201030 11:51:04.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.458" endtime="20201030 11:51:04.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.452" endtime="20201030 11:51:04.672"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.677" endtime="20201030 11:51:04.682"></status>
</kw>
<msg timestamp="20201030 11:51:04.683" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:51:04.674" endtime="20201030 11:51:04.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.693" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:51:04.691" endtime="20201030 11:51:04.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.698" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:51:04.696" endtime="20201030 11:51:04.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.684" endtime="20201030 11:51:04.701"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.711" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:51:04.709" endtime="20201030 11:51:04.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.716" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:51:04.714" endtime="20201030 11:51:04.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.702" endtime="20201030 11:51:04.719"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.736" endtime="20201030 11:51:05.097"></status>
</kw>
<msg timestamp="20201030 11:51:05.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148295694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148317194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.733" endtime="20201030 11:51:05.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148295694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.148317194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.106" endtime="20201030 11:51:05.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.125" endtime="20201030 11:51:05.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.725" endtime="20201030 11:51:05.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.720" endtime="20201030 11:51:05.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.143" level="INFO">${RESULT} = [{'diff': 2.1500000000007624e-05}, {'diff': 2.1514000000000255e-05}, {'diff': 2.1500000000007624e-05}, {'diff': 2.1541999999985517e-05}, {'diff': 2.149999999997987e-05}, {'diff': 2.1500000000007624e-0...</msg>
<status status="PASS" starttime="20201030 11:51:05.134" endtime="20201030 11:51:05.144"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:51:05.157" level="INFO">${OVERHEAD} = {'diff': [2.1500000000007624e-05, 2.1514000000000255e-05, 2.1500000000007624e-05, 2.1541999999985517e-05, 2.149999999997987e-05, 2.1500000000007624e-05, 2.1514000000000255e-05, 2.147299999999408e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.146" endtime="20201030 11:51:05.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.169" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:51:05.166" endtime="20201030 11:51:05.169"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.174" level="INFO">VALUE: [2.1500000000007624e-05, 2.1514000000000255e-05, 2.1500000000007624e-05, 2.1541999999985517e-05, 2.149999999997987e-05, 2.1500000000007624e-05, 2.1514000000000255e-05, 2.147299999999408e-05, 2.1514000000000255e-05, 2.1527999999992886e-05, 2.1514000000000255e-05, 2.1528000000020642e-05, 2.1514000000000255e-05, 2.1526999999993413e-05, 2.1500000000007624e-05, 2.1556000000005904e-05, 2.149999999997987e-05, 2.149999999997987e-05, 2.1500000000007624e-05, 2.1500000000007624e-05, 2.1485999999987238e-05, 2.1485999999987238e-05, 2.156899999999906e-05, 2.1500000000007624e-05, 2.1500000000007624e-05, 2.1514000000000255e-05, 2.158400000001892e-05, 2.1500000000007624e-05, 2.1527000000021168e-05, 2.1486000000014993e-05, 2.149999999997987e-05, 2.1500000000007624e-05, 2.1486000000014993e-05, 2.14440000000371e-05, 2.1500000000007624e-05, 2.1527999999992886e-05, 2.156899999999906e-05, 2.1527999999992886e-05, 2.1500000000007624e-05, 2.1500000000007624e-05, 2.1472000000022362e-05, 2.1500000000007624e-05, 2.1500000000007624e-05, 2.1514000000000255e-05, 2.1555999999978148e-05, 2.1500000000007624e-05, 2.1500000000007624e-05, 2.156899999999906e-05, 2.154200000004103e-05, 2.147199999996685e-05]</msg>
<status status="PASS" starttime="20201030 11:51:05.171" endtime="20201030 11:51:05.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.159" endtime="20201030 11:51:05.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.446" endtime="20201030 11:51:05.179"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:04.304" endtime="20201030 11:51:05.182" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.202" endtime="20201030 11:51:05.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.198" endtime="20201030 11:51:05.226"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.262" endtime="20201030 11:51:05.289"></status>
</kw>
<msg timestamp="20201030 11:51:05.290" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.259" endtime="20201030 11:51:05.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.297" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.293" endtime="20201030 11:51:05.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.304" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:05.300" endtime="20201030 11:51:05.305"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:05.251" endtime="20201030 11:51:05.307"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:05.243" endtime="20201030 11:51:05.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.241" endtime="20201030 11:51:05.310"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:05.318" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:05.316" endtime="20201030 11:51:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.311" endtime="20201030 11:51:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.239" endtime="20201030 11:51:05.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.237" endtime="20201030 11:51:05.320"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.321" endtime="20201030 11:51:05.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.233" endtime="20201030 11:51:05.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.228" endtime="20201030 11:51:05.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.195" endtime="20201030 11:51:05.329"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.340" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:05.356" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:07.295" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:05.336" endtime="20201030 11:51:07.297"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.302" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:07.299" endtime="20201030 11:51:07.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.331" endtime="20201030 11:51:07.305"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.315" endtime="20201030 11:51:07.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.311" endtime="20201030 11:51:07.339"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.362" endtime="20201030 11:51:07.373"></status>
</kw>
<msg timestamp="20201030 11:51:07.374" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.359" endtime="20201030 11:51:07.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.381" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.377" endtime="20201030 11:51:07.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.384" endtime="20201030 11:51:07.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.351" endtime="20201030 11:51:07.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.345" endtime="20201030 11:51:07.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.410" endtime="20201030 11:51:07.773"></status>
</kw>
<msg timestamp="20201030 11:51:07.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037754639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037755667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:07.405" endtime="20201030 11:51:07.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037754639, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.037755667, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:07.783" endtime="20201030 11:51:07.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.803" endtime="20201030 11:51:07.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.397" endtime="20201030 11:51:07.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.392" endtime="20201030 11:51:07.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:07.820" level="INFO">${PHILIP_RES} = [{'diff': 0}, {'diff': 3.7910000000029864e-06}, {'diff': 3.7779999999959513e-06}, {'diff': 3.79200000000246e-06}, {'diff': 3.819000000002126e-06}, {'diff': 3.791999999995521e-06}, {'diff': 3.792000000...</msg>
<status status="PASS" starttime="20201030 11:51:07.812" endtime="20201030 11:51:07.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.830" level="INFO">${RESULT} = {'diff': [0, 3.7910000000029864e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.819000000002126e-06, 3.791999999995521e-06, 3.79200000000246e-06, 3.7769999999964776e-06, 3.80600000000203e-06, 3.7...</msg>
<status status="PASS" starttime="20201030 11:51:07.822" endtime="20201030 11:51:07.831"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.841" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:07.839" endtime="20201030 11:51:07.842"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.848" level="INFO">VALUE: [0, 3.7910000000029864e-06, 3.7779999999959513e-06, 3.79200000000246e-06, 3.819000000002126e-06, 3.791999999995521e-06, 3.79200000000246e-06, 3.7769999999964776e-06, 3.80600000000203e-06, 3.77800000000289e-06, 3.7769999999964776e-06, 3.79200000000246e-06, 3.7640000000033202e-06, 3.7909999999960475e-06, 3.8050000000025563e-06, 3.79200000000246e-06, 3.7909999999960475e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.833999999994231e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.8050000000025563e-06, 3.77800000000289e-06, 3.7779999999959513e-06, 3.7910000000029864e-06, 3.8050000000025563e-06, 3.805999999995091e-06, 3.7910000000029864e-06, 3.79200000000246e-06, 3.791999999995521e-06, 3.7910000000029864e-06, 3.791999999995521e-06, 3.79200000000246e-06, 3.7910000000029864e-06, 3.791999999995521e-06, 3.847000000001266e-06, 3.77800000000289e-06, 3.7229999999971453e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.7909999999960475e-06, 3.79200000000246e-06, 3.79200000000246e-06, 3.7909999999960475e-06, 3.79200000000246e-06, 3.7779999999959513e-06, 3.7499999999968114e-06, 3.77800000000289e-06, 3.791999999995521e-06]</msg>
<status status="PASS" starttime="20201030 11:51:07.844" endtime="20201030 11:51:07.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.832" endtime="20201030 11:51:07.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.340" endtime="20201030 11:51:07.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.309" endtime="20201030 11:51:07.852"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.858" endtime="20201030 11:51:07.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.854" endtime="20201030 11:51:07.882"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.904" endtime="20201030 11:51:07.915"></status>
</kw>
<msg timestamp="20201030 11:51:07.916" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.901" endtime="20201030 11:51:07.917"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.923" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.919" endtime="20201030 11:51:07.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.925" endtime="20201030 11:51:07.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.893" endtime="20201030 11:51:07.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.888" endtime="20201030 11:51:07.932"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.952" endtime="20201030 11:51:08.272"></status>
</kw>
<msg timestamp="20201030 11:51:08.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.949" endtime="20201030 11:51:08.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036642417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036649708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.276" endtime="20201030 11:51:08.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.285" endtime="20201030 11:51:08.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.939" endtime="20201030 11:51:08.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.934" endtime="20201030 11:51:08.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:08.293" level="INFO">${PHILIP_RES} = [{'diff': 7.291000000006487e-06}, {'diff': 7.2780000000063905e-06}, {'diff': 7.276999999999978e-06}, {'diff': 7.2779999999994516e-06}, {'diff': 7.276999999999978e-06}, {'diff': 7.263999999999882e-06},...</msg>
<status status="PASS" starttime="20201030 11:51:08.289" endtime="20201030 11:51:08.294"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.299" level="INFO">${RESULT} = {'diff': [7.291000000006487e-06, 7.2780000000063905e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.2779999999994516e-06, 7.2...</msg>
<status status="PASS" starttime="20201030 11:51:08.295" endtime="20201030 11:51:08.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.304" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:08.303" endtime="20201030 11:51:08.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.307" level="INFO">VALUE: [7.291000000006487e-06, 7.2780000000063905e-06, 7.276999999999978e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.304999999999118e-06, 7.2779999999994516e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.236000000000742e-06, 7.2780000000063905e-06, 7.2779999999994516e-06, 7.305000000006057e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06, 7.222000000001172e-06, 7.2779999999994516e-06, 7.263000000000408e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.236000000000742e-06, 7.2640000000068206e-06, 7.221999999994233e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.276999999999978e-06, 7.263999999999882e-06, 7.276999999999978e-06, 7.2919999999990215e-06, 7.263999999999882e-06, 7.2919999999990215e-06, 7.2779999999994516e-06, 7.29200000000596e-06, 7.29200000000596e-06, 7.290999999999548e-06, 7.305999999998591e-06, 7.290999999999548e-06, 7.263999999999882e-06, 7.290999999999548e-06, 7.305999999998591e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.263999999999882e-06]</msg>
<status status="PASS" starttime="20201030 11:51:08.305" endtime="20201030 11:51:08.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.300" endtime="20201030 11:51:08.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.884" endtime="20201030 11:51:08.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.853" endtime="20201030 11:51:08.309"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.311" endtime="20201030 11:51:08.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.310" endtime="20201030 11:51:08.334"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.358" endtime="20201030 11:51:08.370"></status>
</kw>
<msg timestamp="20201030 11:51:08.371" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.355" endtime="20201030 11:51:08.371"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.377" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.373" endtime="20201030 11:51:08.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.380" endtime="20201030 11:51:08.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.346" endtime="20201030 11:51:08.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.340" endtime="20201030 11:51:08.387"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.405" endtime="20201030 11:51:08.762"></status>
</kw>
<msg timestamp="20201030 11:51:08.770" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038252194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038263542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.402" endtime="20201030 11:51:08.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038252194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038263542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.772" endtime="20201030 11:51:08.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.792" endtime="20201030 11:51:08.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.394" endtime="20201030 11:51:08.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.388" endtime="20201030 11:51:08.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:08.809" level="INFO">${PHILIP_RES} = [{'diff': 1.1347999999994363e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1375000000000968e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1347000000001828e-05}, {'diff': 1.1347000000001828e-...</msg>
<status status="PASS" starttime="20201030 11:51:08.801" endtime="20201030 11:51:08.810"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.819" level="INFO">${RESULT} = {'diff': [1.1347999999994363e-05, 1.1347000000001828e-05, 1.1375000000000968e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1346999999994889e-05...</msg>
<status status="PASS" starttime="20201030 11:51:08.811" endtime="20201030 11:51:08.820"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.832" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:08.828" endtime="20201030 11:51:08.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.838" level="INFO">VALUE: [1.1347999999994363e-05, 1.1347000000001828e-05, 1.1375000000000968e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1346999999994889e-05, 1.1277000000003978e-05, 1.1333999999994793e-05, 1.1388000000001064e-05, 1.1346999999994889e-05, 1.1375000000000968e-05, 1.1347000000001828e-05, 1.1319000000002688e-05, 1.1347000000001828e-05, 1.1332999999995319e-05, 1.1361000000001398e-05, 1.1346999999994889e-05, 1.1306000000002592e-05, 1.1347999999994363e-05, 1.1361000000001398e-05, 1.1332999999995319e-05, 1.1347000000001828e-05, 1.1375000000000968e-05, 1.1305000000003118e-05, 1.1375000000000968e-05, 1.1389000000000538e-05, 1.1361000000001398e-05, 1.1333999999994793e-05, 1.1361000000001398e-05, 1.1346999999994889e-05, 1.1347000000001828e-05, 1.1332999999995319e-05, 1.1347000000001828e-05, 1.1403000000000107e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1362000000000871e-05, 1.1347999999994363e-05, 1.1375000000000968e-05, 1.1346999999994889e-05, 1.1347000000001828e-05, 1.1347000000001828e-05, 1.1333000000002258e-05, 1.1333000000002258e-05, 1.1346999999994889e-05, 1.1319000000002688e-05, 1.1348000000001301e-05]</msg>
<status status="PASS" starttime="20201030 11:51:08.834" endtime="20201030 11:51:08.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.821" endtime="20201030 11:51:08.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.336" endtime="20201030 11:51:08.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.309" endtime="20201030 11:51:08.842"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.849" endtime="20201030 11:51:08.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.845" endtime="20201030 11:51:08.873"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.895" endtime="20201030 11:51:08.906"></status>
</kw>
<msg timestamp="20201030 11:51:08.907" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.891" endtime="20201030 11:51:08.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.914" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.909" endtime="20201030 11:51:08.914"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.916" endtime="20201030 11:51:08.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.884" endtime="20201030 11:51:08.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.878" endtime="20201030 11:51:08.924"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.942" endtime="20201030 11:51:09.300"></status>
</kw>
<msg timestamp="20201030 11:51:09.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.938" endtime="20201030 11:51:09.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036447667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036463597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.310" endtime="20201030 11:51:09.329"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.331" endtime="20201030 11:51:09.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.930" endtime="20201030 11:51:09.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.925" endtime="20201030 11:51:09.338"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:09.348" level="INFO">${PHILIP_RES} = [{'diff': 1.5929999999997335e-05}, {'diff': 1.5971999999996045e-05}, {'diff': 1.5985999999995615e-05}, {'diff': 1.5985999999995615e-05}, {'diff': 1.5971999999996045e-05}, {'diff': 1.5944000000003844e-...</msg>
<status status="PASS" starttime="20201030 11:51:09.340" endtime="20201030 11:51:09.348"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.365" level="INFO">${RESULT} = {'diff': [1.5929999999997335e-05, 1.5971999999996045e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5971999999996045e-05, 1.5944000000003844e-05, 1.5958000000003414e-05, 1.5973000000002457e-05...</msg>
<status status="PASS" starttime="20201030 11:51:09.350" endtime="20201030 11:51:09.366"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.376" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:09.374" endtime="20201030 11:51:09.377"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.382" level="INFO">VALUE: [1.5929999999997335e-05, 1.5971999999996045e-05, 1.5985999999995615e-05, 1.5985999999995615e-05, 1.5971999999996045e-05, 1.5944000000003844e-05, 1.5958000000003414e-05, 1.5973000000002457e-05, 1.5986000000002554e-05, 1.604099999999442e-05, 1.6028000000001263e-05, 1.5929999999997335e-05, 1.6042000000000833e-05, 1.602700000000179e-05, 1.5944000000003844e-05, 1.6014000000001694e-05, 1.6028000000001263e-05, 1.594499999999638e-05, 1.601299999999528e-05, 1.6028000000001263e-05, 1.5958000000003414e-05, 1.5986000000002554e-05, 1.5987000000002027e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5985999999995615e-05, 1.6027999999994325e-05, 1.5959000000002888e-05, 1.5972000000002984e-05, 1.5958000000003414e-05, 1.5930000000004274e-05, 1.6000000000002124e-05, 1.601300000000222e-05, 1.5971999999996045e-05, 1.5971999999996045e-05, 1.5971999999996045e-05, 1.5986000000002554e-05, 1.5986000000002554e-05, 1.6000000000002124e-05, 1.5972000000002984e-05, 1.5986000000002554e-05, 1.595899999999595e-05, 1.593099999999681e-05, 1.6000000000002124e-05, 1.6014000000001694e-05, 1.5958000000003414e-05, 1.5973000000002457e-05, 1.5986000000002554e-05, 1.5971999999996045e-05, 1.5957999999996475e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.379" endtime="20201030 11:51:09.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.367" endtime="20201030 11:51:09.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.874" endtime="20201030 11:51:09.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.843" endtime="20201030 11:51:09.387"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.393" endtime="20201030 11:51:09.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.389" endtime="20201030 11:51:09.417"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.439" endtime="20201030 11:51:09.450"></status>
</kw>
<msg timestamp="20201030 11:51:09.451" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.435" endtime="20201030 11:51:09.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.458" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.454" endtime="20201030 11:51:09.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.461" endtime="20201030 11:51:09.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.428" endtime="20201030 11:51:09.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.422" endtime="20201030 11:51:09.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.486" endtime="20201030 11:51:09.842"></status>
</kw>
<msg timestamp="20201030 11:51:09.849" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03642725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036448417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:09.483" endtime="20201030 11:51:09.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.03642725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036448417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:09.852" endtime="20201030 11:51:09.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.872" endtime="20201030 11:51:09.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.475" endtime="20201030 11:51:09.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.470" endtime="20201030 11:51:09.879"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:09.889" level="INFO">${PHILIP_RES} = [{'diff': 2.116699999999555e-05}, {'diff': 2.1179999999995647e-05}, {'diff': 2.118100000000206e-05}, {'diff': 2.116700000000249e-05}, {'diff': 2.1180000000002586e-05}, {'diff': 2.1250000000000435e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:09.881" endtime="20201030 11:51:09.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.901" level="INFO">${RESULT} = {'diff': [2.116699999999555e-05, 2.1179999999995647e-05, 2.118100000000206e-05, 2.116700000000249e-05, 2.1180000000002586e-05, 2.1250000000000435e-05, 2.116700000000249e-05, 2.1194000000002156e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:09.891" endtime="20201030 11:51:09.901"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.912" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:09.909" endtime="20201030 11:51:09.913"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.918" level="INFO">VALUE: [2.116699999999555e-05, 2.1179999999995647e-05, 2.118100000000206e-05, 2.116700000000249e-05, 2.1180000000002586e-05, 2.1250000000000435e-05, 2.116700000000249e-05, 2.1194000000002156e-05, 2.118100000000206e-05, 2.118100000000206e-05, 2.1166000000003016e-05, 2.113900000000335e-05, 2.116700000000249e-05, 2.1180000000002586e-05, 2.1250000000000435e-05, 2.1221999999994356e-05, 2.122299999999383e-05, 2.1221999999994356e-05, 2.1179999999995647e-05, 2.1179999999995647e-05, 2.112499999999684e-05, 2.1179999999995647e-05, 2.118099999999512e-05, 2.1222000000001295e-05, 2.1194000000002156e-05, 2.119500000000163e-05, 2.1236000000000865e-05, 2.1180000000002586e-05, 2.119500000000163e-05, 2.1208000000001725e-05, 2.1180000000002586e-05, 2.118100000000206e-05, 2.1180000000002586e-05, 2.118100000000206e-05, 2.10969999999977e-05, 2.1208000000001725e-05, 2.118100000000206e-05, 2.116699999999555e-05, 2.113899999999641e-05, 2.118099999999512e-05, 2.119499999999469e-05, 2.113899999999641e-05, 2.116699999999555e-05, 2.118100000000206e-05, 2.1180000000002586e-05, 2.122300000000077e-05, 2.1166000000003016e-05, 2.116700000000249e-05, 2.118100000000206e-05, 2.113900000000335e-05]</msg>
<status status="PASS" starttime="20201030 11:51:09.914" endtime="20201030 11:51:09.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.903" endtime="20201030 11:51:09.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.418" endtime="20201030 11:51:09.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.388" endtime="20201030 11:51:09.922"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.928" endtime="20201030 11:51:09.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.924" endtime="20201030 11:51:09.952"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.974" endtime="20201030 11:51:09.986"></status>
</kw>
<msg timestamp="20201030 11:51:09.988" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.971" endtime="20201030 11:51:09.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.995" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.990" endtime="20201030 11:51:09.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.997" endtime="20201030 11:51:10.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.963" endtime="20201030 11:51:10.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.958" endtime="20201030 11:51:10.005"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.022" endtime="20201030 11:51:10.384"></status>
</kw>
<msg timestamp="20201030 11:51:10.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036645222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036672139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.019" endtime="20201030 11:51:10.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036645222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036672139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.394" endtime="20201030 11:51:10.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.414" endtime="20201030 11:51:10.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.011" endtime="20201030 11:51:10.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.006" endtime="20201030 11:51:10.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:10.431" level="INFO">${PHILIP_RES} = [{'diff': 2.69170000000013e-05}, {'diff': 2.694500000000044e-05}, {'diff': 2.6943999999994028e-05}, {'diff': 2.695900000000001e-05}, {'diff': 2.6958000000000537e-05}, {'diff': 2.6944000000000967e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:10.423" endtime="20201030 11:51:10.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.441" level="INFO">${RESULT} = {'diff': [2.69170000000013e-05, 2.694500000000044e-05, 2.6943999999994028e-05, 2.695900000000001e-05, 2.6958000000000537e-05, 2.6944000000000967e-05, 2.694500000000044e-05, 2.6972000000000107e-05, 2.6...</msg>
<status status="PASS" starttime="20201030 11:51:10.433" endtime="20201030 11:51:10.442"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.452" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:10.450" endtime="20201030 11:51:10.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.458" level="INFO">VALUE: [2.69170000000013e-05, 2.694500000000044e-05, 2.6943999999994028e-05, 2.695900000000001e-05, 2.6958000000000537e-05, 2.6944000000000967e-05, 2.694500000000044e-05, 2.6972000000000107e-05, 2.694500000000044e-05, 2.694500000000044e-05, 2.6972000000000107e-05, 2.697299999999958e-05, 2.6944999999993502e-05, 2.6958000000000537e-05, 2.69170000000013e-05, 2.6930000000001397e-05, 2.6944000000000967e-05, 2.694500000000044e-05, 2.6944000000000967e-05, 2.7000000000006186e-05, 2.695900000000001e-05, 2.6943999999994028e-05, 2.694500000000044e-05, 2.6958000000000537e-05, 2.6958000000000537e-05, 2.695900000000001e-05, 2.6944000000000967e-05, 2.6985999999999677e-05, 2.693100000000087e-05, 2.6943999999994028e-05, 2.695900000000001e-05, 2.695900000000001e-05, 2.6958000000000537e-05, 2.6972000000000107e-05, 2.6972000000000107e-05, 2.6944000000000967e-05, 2.6888999999995222e-05, 2.6916999999994362e-05, 2.6985999999999677e-05, 2.694500000000044e-05, 2.6944000000000967e-05, 2.69170000000013e-05, 2.695900000000001e-05, 2.6958000000000537e-05, 2.693100000000087e-05, 2.693100000000087e-05, 2.6958000000000537e-05, 2.695900000000001e-05, 2.6972000000000107e-05, 2.6958000000000537e-05]</msg>
<status status="PASS" starttime="20201030 11:51:10.455" endtime="20201030 11:51:10.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.443" endtime="20201030 11:51:10.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.953" endtime="20201030 11:51:10.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.923" endtime="20201030 11:51:10.463"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.469" endtime="20201030 11:51:10.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.465" endtime="20201030 11:51:10.493"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.515" endtime="20201030 11:51:10.529"></status>
</kw>
<msg timestamp="20201030 11:51:10.530" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.511" endtime="20201030 11:51:10.537"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.544" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.539" endtime="20201030 11:51:10.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.546" endtime="20201030 11:51:10.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.504" endtime="20201030 11:51:10.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.498" endtime="20201030 11:51:10.553"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.571" endtime="20201030 11:51:10.931"></status>
</kw>
<msg timestamp="20201030 11:51:10.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038101125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038134403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.568" endtime="20201030 11:51:10.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038101125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038134403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.941" endtime="20201030 11:51:10.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.961" endtime="20201030 11:51:10.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.560" endtime="20201030 11:51:10.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.555" endtime="20201030 11:51:10.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:10.978" level="INFO">${PHILIP_RES} = [{'diff': 3.32779999999977e-05}, {'diff': 3.324999999999856e-05}, {'diff': 3.329199999999727e-05}, {'diff': 3.327800000000464e-05}, {'diff': 3.329199999999727e-05}, {'diff': 3.329200000000421e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:10.970" endtime="20201030 11:51:10.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.988" level="INFO">${RESULT} = {'diff': [3.32779999999977e-05, 3.324999999999856e-05, 3.329199999999727e-05, 3.327800000000464e-05, 3.329199999999727e-05, 3.329200000000421e-05, 3.3304999999997364e-05, 3.329199999999727e-05, 3.3222...</msg>
<status status="PASS" starttime="20201030 11:51:10.980" endtime="20201030 11:51:10.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.999" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:10.997" endtime="20201030 11:51:11.000"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.005" level="INFO">VALUE: [3.32779999999977e-05, 3.324999999999856e-05, 3.329199999999727e-05, 3.327800000000464e-05, 3.329199999999727e-05, 3.329200000000421e-05, 3.3304999999997364e-05, 3.329199999999727e-05, 3.322299999999889e-05, 3.3290999999997795e-05, 3.3291000000004733e-05, 3.3276999999998225e-05, 3.3291000000004733e-05, 3.3304999999997364e-05, 3.331900000000387e-05, 3.3290999999997795e-05, 3.3304999999997364e-05, 3.33050000000043e-05, 3.330599999999684e-05, 3.322200000000636e-05, 3.330599999999684e-05, 3.329199999999727e-05, 3.330600000000378e-05, 3.329199999999727e-05, 3.326400000000507e-05, 3.32779999999977e-05, 3.323600000000593e-05, 3.329199999999727e-05, 3.336100000000258e-05, 3.329199999999727e-05, 3.329199999999727e-05, 3.329200000000421e-05, 3.330599999999684e-05, 3.327800000000464e-05, 3.3290999999997795e-05, 3.330600000000378e-05, 3.32779999999977e-05, 3.3304999999997364e-05, 3.33050000000043e-05, 3.3290999999997795e-05, 3.3291000000004733e-05, 3.3276999999998225e-05, 3.3276999999998225e-05, 3.3304999999997364e-05, 3.3290999999997795e-05, 3.33050000000043e-05, 3.3290999999997795e-05, 3.3291000000004733e-05, 3.3304999999997364e-05, 3.329200000000421e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.002" endtime="20201030 11:51:11.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.990" endtime="20201030 11:51:11.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.494" endtime="20201030 11:51:11.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.464" endtime="20201030 11:51:11.010"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.016" endtime="20201030 11:51:11.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.012" endtime="20201030 11:51:11.040"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.064" endtime="20201030 11:51:11.077"></status>
</kw>
<msg timestamp="20201030 11:51:11.078" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.060" endtime="20201030 11:51:11.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.084" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.080" endtime="20201030 11:51:11.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.087" endtime="20201030 11:51:11.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.052" endtime="20201030 11:51:11.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.047" endtime="20201030 11:51:11.094"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.112" endtime="20201030 11:51:11.471"></status>
</kw>
<msg timestamp="20201030 11:51:11.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039430292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.108" endtime="20201030 11:51:11.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039390083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039430292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.481" endtime="20201030 11:51:11.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.501" endtime="20201030 11:51:11.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.101" endtime="20201030 11:51:11.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.096" endtime="20201030 11:51:11.508"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:11.518" level="INFO">${PHILIP_RES} = [{'diff': 4.0208999999999384e-05}, {'diff': 4.0194999999999814e-05}, {'diff': 4.019400000000034e-05}, {'diff': 4.019400000000034e-05}, {'diff': 4.027799999999776e-05}, {'diff': 4.01939999999934e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:11.510" endtime="20201030 11:51:11.518"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.528" level="INFO">${RESULT} = {'diff': [4.0208999999999384e-05, 4.0194999999999814e-05, 4.019400000000034e-05, 4.019400000000034e-05, 4.027799999999776e-05, 4.01939999999934e-05, 4.0181000000000244e-05, 4.0181000000000244e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 11:51:11.520" endtime="20201030 11:51:11.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.539" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:11.536" endtime="20201030 11:51:11.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.547" level="INFO">VALUE: [4.0208999999999384e-05, 4.0194999999999814e-05, 4.019400000000034e-05, 4.019400000000034e-05, 4.027799999999776e-05, 4.01939999999934e-05, 4.0181000000000244e-05, 4.0181000000000244e-05, 4.0208999999999384e-05, 4.018000000000077e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.019400000000034e-05, 4.0181000000000244e-05, 4.0194999999999814e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.018000000000077e-05, 4.0194999999999814e-05, 4.0194999999999814e-05, 4.0194999999999814e-05, 4.019400000000034e-05, 4.018000000000077e-05, 4.019400000000034e-05, 4.022199999999948e-05, 4.0194999999999814e-05, 4.0208999999999384e-05, 4.0194999999999814e-05, 4.020799999999991e-05, 4.020799999999991e-05, 4.0167000000000674e-05, 4.019400000000034e-05, 4.0208999999999384e-05, 4.0208999999999384e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.019400000000034e-05, 4.019400000000034e-05, 4.0181000000000244e-05, 4.0181000000000244e-05, 4.022199999999948e-05, 4.020799999999991e-05, 4.022199999999948e-05, 4.022199999999948e-05, 4.019400000000034e-05, 4.0194999999999814e-05, 4.0208999999999384e-05, 4.0194999999999814e-05, 4.0181000000000244e-05]</msg>
<status status="PASS" starttime="20201030 11:51:11.541" endtime="20201030 11:51:11.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.530" endtime="20201030 11:51:11.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.041" endtime="20201030 11:51:11.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.010" endtime="20201030 11:51:11.551"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.557" endtime="20201030 11:51:11.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.553" endtime="20201030 11:51:11.578"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.589" endtime="20201030 11:51:11.600"></status>
</kw>
<msg timestamp="20201030 11:51:11.600" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.587" endtime="20201030 11:51:11.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.603" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.601" endtime="20201030 11:51:11.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.604" endtime="20201030 11:51:11.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.583" endtime="20201030 11:51:11.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.581" endtime="20201030 11:51:11.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.616" endtime="20201030 11:51:11.939"></status>
</kw>
<msg timestamp="20201030 11:51:11.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020770264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.614" endtime="20201030 11:51:11.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020722597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020770264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.949" endtime="20201030 11:51:11.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.968" endtime="20201030 11:51:11.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.611" endtime="20201030 11:51:11.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.608" endtime="20201030 11:51:11.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:11.985" level="INFO">${PHILIP_RES} = [{'diff': 4.7667000000001236e-05}, {'diff': 4.7695000000000376e-05}, {'diff': 4.762499999999906e-05}, {'diff': 4.767999999999786e-05}, {'diff': 4.76940000000009e-05}, {'diff': 4.766600000000176e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:11.977" endtime="20201030 11:51:11.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.997" level="INFO">${RESULT} = {'diff': [4.7667000000001236e-05, 4.7695000000000376e-05, 4.762499999999906e-05, 4.767999999999786e-05, 4.76940000000009e-05, 4.766600000000176e-05, 4.76940000000009e-05, 4.770800000000047e-05, 4.7694...</msg>
<status status="PASS" starttime="20201030 11:51:11.988" endtime="20201030 11:51:11.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.008" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:12.006" endtime="20201030 11:51:12.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.014" level="INFO">VALUE: [4.7667000000001236e-05, 4.7695000000000376e-05, 4.762499999999906e-05, 4.767999999999786e-05, 4.76940000000009e-05, 4.766600000000176e-05, 4.76940000000009e-05, 4.770800000000047e-05, 4.76940000000009e-05, 4.768000000000133e-05, 4.770800000000047e-05, 4.770800000000047e-05, 4.768099999999734e-05, 4.7708999999999946e-05, 4.7681000000000806e-05, 4.7667000000001236e-05, 4.7681000000000806e-05, 4.7681000000000806e-05, 4.769399999999743e-05, 4.76940000000009e-05, 4.768000000000133e-05, 4.766600000000176e-05, 4.767999999999786e-05, 4.759699999999992e-05, 4.767999999999786e-05, 4.770800000000047e-05, 4.7681000000000806e-05, 4.7695000000000376e-05, 4.768099999999734e-05, 4.7695000000000376e-05, 4.7681000000000806e-05, 4.773599999999961e-05, 4.7737000000002555e-05, 4.7722999999999516e-05, 4.7681000000000806e-05, 4.7667000000001236e-05, 4.768000000000133e-05, 4.768000000000133e-05, 4.766599999999829e-05, 4.770800000000047e-05, 4.773599999999961e-05, 4.772200000000004e-05, 4.76940000000009e-05, 4.7681000000000806e-05, 4.7681000000000806e-05, 4.7708999999999946e-05, 4.7695000000000376e-05, 4.772200000000004e-05, 4.7708999999999946e-05, 4.7695000000000376e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.011" endtime="20201030 11:51:12.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.999" endtime="20201030 11:51:12.017"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.579" endtime="20201030 11:51:12.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.552" endtime="20201030 11:51:12.019"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.025" endtime="20201030 11:51:12.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.021" endtime="20201030 11:51:12.049"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.072" endtime="20201030 11:51:12.086"></status>
</kw>
<msg timestamp="20201030 11:51:12.088" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.069" endtime="20201030 11:51:12.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.094" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.090" endtime="20201030 11:51:12.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.097" endtime="20201030 11:51:12.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.060" endtime="20201030 11:51:12.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.054" endtime="20201030 11:51:12.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.122" endtime="20201030 11:51:12.481"></status>
</kw>
<msg timestamp="20201030 11:51:12.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037663917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037719667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.118" endtime="20201030 11:51:12.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037663917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037719667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.490" endtime="20201030 11:51:12.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.510" endtime="20201030 11:51:12.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.111" endtime="20201030 11:51:12.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.106" endtime="20201030 11:51:12.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:12.527" level="INFO">${PHILIP_RES} = [{'diff': 5.5750000000000244e-05}, {'diff': 5.573700000000015e-05}, {'diff': 5.5680000000002394e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5722000000001104e-05}, {'diff': 5.5749999999993305e-0...</msg>
<status status="PASS" starttime="20201030 11:51:12.519" endtime="20201030 11:51:12.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.539" level="INFO">${RESULT} = {'diff': [5.5750000000000244e-05, 5.573700000000015e-05, 5.5680000000002394e-05, 5.5722000000001104e-05, 5.5722000000001104e-05, 5.5749999999993305e-05, 5.569500000000144e-05, 5.5750000000000244e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:12.530" endtime="20201030 11:51:12.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.550" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:12.548" endtime="20201030 11:51:12.551"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.556" level="INFO">VALUE: [5.5750000000000244e-05, 5.573700000000015e-05, 5.5680000000002394e-05, 5.5722000000001104e-05, 5.5722000000001104e-05, 5.5749999999993305e-05, 5.569500000000144e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5665999999995885e-05, 5.5708000000001534e-05, 5.5777999999999384e-05, 5.5736000000000674e-05, 5.5777999999999384e-05, 5.5707999999994595e-05, 5.5722000000001104e-05, 5.5707999999994595e-05, 5.5708000000001534e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.5722000000001104e-05, 5.5805999999998523e-05, 5.563900000000316e-05, 5.5735999999993735e-05, 5.5736000000000674e-05, 5.573700000000015e-05, 5.5722000000001104e-05, 5.5777999999999384e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.580499999999905e-05, 5.573700000000015e-05, 5.5721999999994165e-05, 5.5750000000000244e-05, 5.5707999999994595e-05, 5.5722000000001104e-05, 5.568099999999493e-05, 5.573700000000015e-05, 5.5722000000001104e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.566699999999536e-05, 5.5722000000001104e-05, 5.5736000000000674e-05, 5.5708000000001534e-05, 5.5736000000000674e-05, 5.5694000000001964e-05, 5.5750000000000244e-05, 5.5736000000000674e-05, 5.5736000000000674e-05]</msg>
<status status="PASS" starttime="20201030 11:51:12.553" endtime="20201030 11:51:12.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.541" endtime="20201030 11:51:12.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.050" endtime="20201030 11:51:12.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.020" endtime="20201030 11:51:12.561"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.567" endtime="20201030 11:51:12.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.563" endtime="20201030 11:51:12.591"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.614" endtime="20201030 11:51:12.628"></status>
</kw>
<msg timestamp="20201030 11:51:12.629" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.610" endtime="20201030 11:51:12.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.636" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.631" endtime="20201030 11:51:12.636"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.638" endtime="20201030 11:51:12.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.603" endtime="20201030 11:51:12.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.596" endtime="20201030 11:51:12.645"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.663" endtime="20201030 11:51:13.021"></status>
</kw>
<msg timestamp="20201030 11:51:13.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037708681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037773014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.659" endtime="20201030 11:51:13.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037708681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037773014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.031" endtime="20201030 11:51:13.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.051" endtime="20201030 11:51:13.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.652" endtime="20201030 11:51:13.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.647" endtime="20201030 11:51:13.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:13.068" level="INFO">${PHILIP_RES} = [{'diff': 6.433299999999975e-05}, {'diff': 6.436099999999889e-05}, {'diff': 6.434699999999932e-05}, {'diff': 6.436100000000583e-05}, {'diff': 6.436199999999836e-05}, {'diff': 6.43750000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:13.060" endtime="20201030 11:51:13.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.078" level="INFO">${RESULT} = {'diff': [6.433299999999975e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.436100000000583e-05, 6.436199999999836e-05, 6.43750000000054e-05, 6.43479999999988e-05, 6.433299999999975e-05, 6.434699...</msg>
<status status="PASS" starttime="20201030 11:51:13.071" endtime="20201030 11:51:13.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.090" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:13.087" endtime="20201030 11:51:13.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.095" level="INFO">VALUE: [6.433299999999975e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.436100000000583e-05, 6.436199999999836e-05, 6.43750000000054e-05, 6.43479999999988e-05, 6.433299999999975e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.437499999999846e-05, 6.43750000000054e-05, 6.436099999999889e-05, 6.436100000000583e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.436099999999889e-05, 6.433399999999923e-05, 6.43479999999988e-05, 6.436099999999889e-05, 6.433299999999975e-05, 6.434699999999932e-05, 6.427699999999453e-05, 6.436099999999889e-05, 6.434700000000626e-05, 6.436099999999889e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.434699999999932e-05, 6.442999999999727e-05, 6.434699999999932e-05, 6.436099999999889e-05, 6.434800000000573e-05, 6.429200000000052e-05, 6.436100000000583e-05, 6.436099999999889e-05, 7.524999999999893e-05, 6.436199999999836e-05, 6.43620000000053e-05, 6.436099999999889e-05, 6.433299999999975e-05, 6.437499999999846e-05, 6.433299999999975e-05, 6.437499999999846e-05, 6.434699999999932e-05, 6.433299999999975e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.092" endtime="20201030 11:51:13.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.080" endtime="20201030 11:51:13.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.592" endtime="20201030 11:51:13.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.562" endtime="20201030 11:51:13.100"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.106" endtime="20201030 11:51:13.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.102" endtime="20201030 11:51:13.130"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.153" endtime="20201030 11:51:13.168"></status>
</kw>
<msg timestamp="20201030 11:51:13.169" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.149" endtime="20201030 11:51:13.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.176" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.172" endtime="20201030 11:51:13.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.178" endtime="20201030 11:51:13.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.141" endtime="20201030 11:51:13.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.136" endtime="20201030 11:51:13.187"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.205" endtime="20201030 11:51:13.564"></status>
</kw>
<msg timestamp="20201030 11:51:13.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037554319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.201" endtime="20201030 11:51:13.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037554319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037627861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.574" endtime="20201030 11:51:13.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.594" endtime="20201030 11:51:13.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.194" endtime="20201030 11:51:13.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.189" endtime="20201030 11:51:13.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:13.611" level="INFO">${PHILIP_RES} = [{'diff': 7.354199999999589e-05}, {'diff': 7.352799999999632e-05}, {'diff': 7.354100000000335e-05}, {'diff': 7.354200000000283e-05}, {'diff': 7.347199999999804e-05}, {'diff': 7.355599999999546e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:13.603" endtime="20201030 11:51:13.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.621" level="INFO">${RESULT} = {'diff': [7.354199999999589e-05, 7.352799999999632e-05, 7.354100000000335e-05, 7.354200000000283e-05, 7.347199999999804e-05, 7.355599999999546e-05, 7.352800000000326e-05, 7.352800000000326e-05, 7.3528...</msg>
<status status="PASS" starttime="20201030 11:51:13.613" endtime="20201030 11:51:13.622"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.633" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:13.630" endtime="20201030 11:51:13.633"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.638" level="INFO">VALUE: [7.354199999999589e-05, 7.352799999999632e-05, 7.354100000000335e-05, 7.354200000000283e-05, 7.347199999999804e-05, 7.355599999999546e-05, 7.352800000000326e-05, 7.352800000000326e-05, 7.352800000000326e-05, 7.351299999999727e-05, 7.354199999999589e-05, 7.36110000000012e-05, 7.351400000000369e-05, 7.35560000000024e-05, 7.351299999999727e-05, 7.354199999999589e-05, 7.354200000000283e-05, 7.352800000000326e-05, 7.351399999999675e-05, 7.352699999999684e-05, 7.352800000000326e-05, 7.354200000000283e-05, 7.354200000000283e-05, 7.355599999999546e-05, 7.354099999999641e-05, 7.35560000000024e-05, 7.352800000000326e-05, 7.354199999999589e-05, 7.354199999999589e-05, 7.352699999999684e-05, 7.351400000000369e-05, 7.350000000000412e-05, 7.354199999999589e-05, 7.361099999999426e-05, 7.352700000000378e-05, 7.354200000000283e-05, 7.355500000000292e-05, 7.352799999999632e-05, 7.352799999999632e-05, 7.349999999999718e-05, 7.352800000000326e-05, 7.359700000000163e-05, 7.355599999999546e-05, 7.354099999999641e-05, 7.354100000000335e-05, 7.350000000000412e-05, 7.355500000000292e-05, 7.354199999999589e-05, 7.352800000000326e-05, 7.351400000000369e-05]</msg>
<status status="PASS" starttime="20201030 11:51:13.635" endtime="20201030 11:51:13.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.623" endtime="20201030 11:51:13.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.132" endtime="20201030 11:51:13.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.101" endtime="20201030 11:51:13.643"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.650" endtime="20201030 11:51:13.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.646" endtime="20201030 11:51:13.674"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.698" endtime="20201030 11:51:13.712"></status>
</kw>
<msg timestamp="20201030 11:51:13.713" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.694" endtime="20201030 11:51:13.714"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.720" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.716" endtime="20201030 11:51:13.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.722" endtime="20201030 11:51:13.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.686" endtime="20201030 11:51:13.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.681" endtime="20201030 11:51:13.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.747" endtime="20201030 11:51:14.107"></status>
</kw>
<msg timestamp="20201030 11:51:14.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.744" endtime="20201030 11:51:14.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038240667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038323944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.117" endtime="20201030 11:51:14.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.136" endtime="20201030 11:51:14.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.736" endtime="20201030 11:51:14.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.731" endtime="20201030 11:51:14.144"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:14.154" level="INFO">${PHILIP_RES} = [{'diff': 8.327699999999966e-05}, {'diff': 8.33049999999988e-05}, {'diff': 8.32919999999987e-05}, {'diff': 8.329099999999923e-05}, {'diff': 8.330599999999827e-05}, {'diff': 8.330500000000574e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:14.145" endtime="20201030 11:51:14.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.164" level="INFO">${RESULT} = {'diff': [8.327699999999966e-05, 8.33049999999988e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.330599999999827e-05, 8.330500000000574e-05, 8.32919999999987e-05, 8.330599999999827e-05, 8.3290999...</msg>
<status status="PASS" starttime="20201030 11:51:14.156" endtime="20201030 11:51:14.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.175" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:14.172" endtime="20201030 11:51:14.176"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.182" level="INFO">VALUE: [8.327699999999966e-05, 8.33049999999988e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.330599999999827e-05, 8.330500000000574e-05, 8.32919999999987e-05, 8.330599999999827e-05, 8.329099999999923e-05, 8.330600000000521e-05, 9.462500000000096e-05, 8.33049999999988e-05, 8.330599999999827e-05, 8.33049999999988e-05, 8.32919999999987e-05, 8.330599999999827e-05, 8.33049999999988e-05, 8.330600000000521e-05, 8.33049999999988e-05, 8.330599999999827e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.326399999999956e-05, 8.329099999999923e-05, 8.329200000000564e-05, 8.33049999999988e-05, 8.33049999999988e-05, 8.331999999999784e-05, 8.323600000000042e-05, 8.330599999999827e-05, 8.327699999999966e-05, 8.330600000000521e-05, 8.327799999999913e-05, 8.33049999999988e-05, 8.330599999999827e-05, 8.329100000000617e-05, 8.323600000000042e-05, 8.331899999999837e-05, 8.332000000000478e-05, 8.32919999999987e-05, 8.329099999999923e-05, 8.32919999999987e-05, 8.33190000000053e-05, 8.327799999999913e-05, 8.331999999999784e-05, 8.33049999999988e-05, 8.329200000000564e-05, 8.329099999999923e-05, 8.330599999999827e-05, 8.329200000000564e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.177" endtime="20201030 11:51:14.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.166" endtime="20201030 11:51:14.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.675" endtime="20201030 11:51:14.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.644" endtime="20201030 11:51:14.188"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.194" endtime="20201030 11:51:14.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.190" endtime="20201030 11:51:14.218"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.242" endtime="20201030 11:51:14.259"></status>
</kw>
<msg timestamp="20201030 11:51:14.261" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.238" endtime="20201030 11:51:14.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.267" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.263" endtime="20201030 11:51:14.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.270" endtime="20201030 11:51:14.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.229" endtime="20201030 11:51:14.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.223" endtime="20201030 11:51:14.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.294" endtime="20201030 11:51:14.654"></status>
</kw>
<msg timestamp="20201030 11:51:14.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039001861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0390955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:14.291" endtime="20201030 11:51:14.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.681" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039001861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0390955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:14.664" endtime="20201030 11:51:14.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.684" endtime="20201030 11:51:14.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.283" endtime="20201030 11:51:14.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.278" endtime="20201030 11:51:14.691"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:14.701" level="INFO">${PHILIP_RES} = [{'diff': 9.363899999999953e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.363899999999953e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.362499999999996e-05}, {'diff': 9.359800000000029e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:14.693" endtime="20201030 11:51:14.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.716" level="INFO">${RESULT} = {'diff': [9.363899999999953e-05, 9.363899999999953e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.362499999999996e-05, 9.359800000000029e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.3652...</msg>
<status status="PASS" starttime="20201030 11:51:14.703" endtime="20201030 11:51:14.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.727" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:14.725" endtime="20201030 11:51:14.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.733" level="INFO">VALUE: [9.363899999999953e-05, 9.363899999999953e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.362499999999996e-05, 9.359800000000029e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.36529999999991e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.363899999999953e-05, 9.362499999999996e-05, 9.365199999999962e-05, 9.354200000000201e-05, 9.363899999999953e-05, 9.363899999999953e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.359800000000029e-05, 9.361099999999345e-05, 9.358400000000072e-05, 9.362499999999996e-05, 9.362499999999996e-05, 9.363899999999953e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.367999999999876e-05, 9.362499999999996e-05, 9.362499999999996e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.361100000000039e-05, 9.361100000000039e-05, 9.36529999999991e-05, 9.361199999999986e-05, 9.361100000000039e-05, 9.362499999999996e-05, 9.363899999999953e-05, 9.36529999999991e-05, 9.358300000000125e-05, 9.361100000000039e-05, 9.359800000000029e-05, 9.363900000000647e-05, 9.363899999999953e-05, 9.358400000000072e-05, 9.366699999999867e-05, 9.359700000000082e-05, 9.362499999999996e-05, 9.361100000000039e-05]</msg>
<status status="PASS" starttime="20201030 11:51:14.730" endtime="20201030 11:51:14.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.718" endtime="20201030 11:51:14.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.219" endtime="20201030 11:51:14.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.189" endtime="20201030 11:51:14.738"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.744" endtime="20201030 11:51:14.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.741" endtime="20201030 11:51:14.769"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.791" endtime="20201030 11:51:14.806"></status>
</kw>
<msg timestamp="20201030 11:51:14.807" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.787" endtime="20201030 11:51:14.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.814" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.809" endtime="20201030 11:51:14.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.816" endtime="20201030 11:51:14.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.779" endtime="20201030 11:51:14.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.774" endtime="20201030 11:51:14.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.841" endtime="20201030 11:51:15.159"></status>
</kw>
<msg timestamp="20201030 11:51:15.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036430403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036534931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.838" endtime="20201030 11:51:15.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036430403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036534931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.163" endtime="20201030 11:51:15.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.171" endtime="20201030 11:51:15.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.830" endtime="20201030 11:51:15.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.825" endtime="20201030 11:51:15.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:15.179" level="INFO">${PHILIP_RES} = [{'diff': 0.00010452799999999957}, {'diff': 0.000104514}, {'diff': 0.000104514}, {'diff': 0.00010450000000000043}, {'diff': 0.0001045689999999988}, {'diff': 0.00010452799999999957}, {'diff': 0.0001045...</msg>
<status status="PASS" starttime="20201030 11:51:15.175" endtime="20201030 11:51:15.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.184" level="INFO">${RESULT} = {'diff': [0.00010452799999999957, 0.000104514, 0.000104514, 0.00010450000000000043, 0.0001045689999999988, 0.00010452799999999957, 0.00010452799999999957, 0.00010452799999999957, 0.0001045419999999991...</msg>
<status status="PASS" starttime="20201030 11:51:15.180" endtime="20201030 11:51:15.184"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.190" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:15.188" endtime="20201030 11:51:15.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.192" level="INFO">VALUE: [0.00010452799999999957, 0.000104514, 0.000104514, 0.00010450000000000043, 0.0001045689999999988, 0.00010452799999999957, 0.00010452799999999957, 0.00010452799999999957, 0.00010454199999999914, 0.00010445900000000119, 0.00010454199999999914, 0.00010452799999999957, 0.00010452799999999957, 0.00010455499999999923, 0.000104514, 0.000104514, 0.00010452799999999957, 0.00010458300000000531, 0.000104514, 0.00010452700000000009, 0.00010447300000000076, 0.0001045689999999988, 0.0001045280000000065, 0.00010452799999999957, 0.000104514, 0.000104514, 0.00010452799999999957, 0.00010452799999999957, 0.00010450000000000043, 0.00010452799999999957, 0.00010452799999999957, 0.00010452799999999957, 0.00010452799999999957, 0.000104514, 0.000104514, 0.000104514, 0.000104514, 0.00010454199999999914, 0.00010452799999999957, 0.00010452799999999957, 0.00010454199999999914, 0.00010452799999999957, 0.0001045559999999987, 0.00010450000000000043, 0.00010454199999999914, 0.00010448600000000086, 0.000104514, 0.00010450000000000043, 0.00010444400000000215, 0.00010452799999999957]</msg>
<status status="PASS" starttime="20201030 11:51:15.191" endtime="20201030 11:51:15.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.185" endtime="20201030 11:51:15.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.770" endtime="20201030 11:51:15.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.739" endtime="20201030 11:51:15.195"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.197" endtime="20201030 11:51:15.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.196" endtime="20201030 11:51:15.218"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.228" endtime="20201030 11:51:15.242"></status>
</kw>
<msg timestamp="20201030 11:51:15.243" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.226" endtime="20201030 11:51:15.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.246" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.244" endtime="20201030 11:51:15.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.247" endtime="20201030 11:51:15.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.223" endtime="20201030 11:51:15.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.220" endtime="20201030 11:51:15.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.258" endtime="20201030 11:51:15.607"></status>
</kw>
<msg timestamp="20201030 11:51:15.615" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.257" endtime="20201030 11:51:15.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.634" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020298139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.617" endtime="20201030 11:51:15.635"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.637" endtime="20201030 11:51:15.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.253" endtime="20201030 11:51:15.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.251" endtime="20201030 11:51:15.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:15.654" level="INFO">${PHILIP_RES} = [{'diff': 0.00011601400000000109}, {'diff': 0.00011600000000000152}, {'diff': 0.00011599999999999805}, {'diff': 0.00011591600000000063}, {'diff': 0.00011598600000000195}, {'diff': 0.000116055999999999...</msg>
<status status="PASS" starttime="20201030 11:51:15.646" endtime="20201030 11:51:15.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.663" level="INFO">${RESULT} = {'diff': [0.00011601400000000109, 0.00011600000000000152, 0.00011599999999999805, 0.00011591600000000063, 0.00011598600000000195, 0.0001160559999999998, 0.00011600000000000152, 0.00011597199999999891,...</msg>
<status status="PASS" starttime="20201030 11:51:15.656" endtime="20201030 11:51:15.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.674" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:15.672" endtime="20201030 11:51:15.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.680" level="INFO">VALUE: [0.00011601400000000109, 0.00011600000000000152, 0.00011599999999999805, 0.00011591600000000063, 0.00011598600000000195, 0.0001160559999999998, 0.00011600000000000152, 0.00011597199999999891, 0.00011599999999999805, 0.00011593099999999967, 0.00011598599999999848, 0.00011605499999999686, 0.00011594399999999977, 0.00011599999999999805, 0.00011598600000000195, 0.00011597300000000185, 0.00011597199999999891, 0.00011598700000000142, 0.00011590299999999706, 0.00011598599999999848, 0.00011598600000000195, 0.00011598599999999848, 0.00011599999999999805, 0.00011600000000000152, 0.00011598599999999848, 0.00011598600000000195, 0.00011601400000000109, 0.00011599999999999805, 0.00011598600000000195, 0.00011597199999999891, 0.0001160559999999998, 0.00011598600000000195, 0.00011595799999999934, 0.00011597299999999838, 0.00011604200000000023, 0.00011604200000000023, 0.00011602799999999719, 0.00011597200000000238, 0.00011594499999999924, 0.00011598600000000195, 0.0001160689999999999, 0.0001159300000000002, 0.00011600000000000152, 0.00011601400000000109, 0.00011594399999999977, 0.00011597200000000238, 0.00011599999999999805, 0.00011597199999999891, 0.00011597200000000238, 0.00011599999999999805]</msg>
<status status="PASS" starttime="20201030 11:51:15.677" endtime="20201030 11:51:15.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.665" endtime="20201030 11:51:15.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.218" endtime="20201030 11:51:15.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.195" endtime="20201030 11:51:15.691"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.697" endtime="20201030 11:51:15.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.693" endtime="20201030 11:51:15.721"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.743" endtime="20201030 11:51:15.761"></status>
</kw>
<msg timestamp="20201030 11:51:15.763" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.740" endtime="20201030 11:51:15.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.769" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.765" endtime="20201030 11:51:15.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.772" endtime="20201030 11:51:15.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.732" endtime="20201030 11:51:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.727" endtime="20201030 11:51:15.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.796" endtime="20201030 11:51:16.153"></status>
</kw>
<msg timestamp="20201030 11:51:16.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036682875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036810903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.793" endtime="20201030 11:51:16.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036682875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036810903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.163" endtime="20201030 11:51:16.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.182" endtime="20201030 11:51:16.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.785" endtime="20201030 11:51:16.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.780" endtime="20201030 11:51:16.190"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:16.200" level="INFO">${PHILIP_RES} = [{'diff': 0.00012802800000000225}, {'diff': 0.0001280279999999953}, {'diff': 0.00012806999999999402}, {'diff': 0.0001280409999999954}, {'diff': 0.00012802800000000225}, {'diff': 0.00012804200000000182...</msg>
<status status="PASS" starttime="20201030 11:51:16.192" endtime="20201030 11:51:16.201"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.211" level="INFO">${RESULT} = {'diff': [0.00012802800000000225, 0.0001280279999999953, 0.00012806999999999402, 0.0001280409999999954, 0.00012802800000000225, 0.00012804200000000182, 0.00012798600000000354, 0.00012802800000000225, ...</msg>
<status status="PASS" starttime="20201030 11:51:16.203" endtime="20201030 11:51:16.212"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.222" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:16.220" endtime="20201030 11:51:16.223"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.228" level="INFO">VALUE: [0.00012802800000000225, 0.0001280279999999953, 0.00012806999999999402, 0.0001280409999999954, 0.00012802800000000225, 0.00012804200000000182, 0.00012798600000000354, 0.00012802800000000225, 0.0001280000000000031, 0.00012802800000000225, 0.00012802800000000225, 0.00012804200000000182, 0.00012804199999999488, 0.0001280279999999953, 0.0001280000000000031, 0.00012802800000000225, 0.00012802800000000225, 0.00012807000000000096, 0.00012802800000000225, 0.00012804200000000182, 0.00012801400000000268, 0.00012799999999999617, 0.00012801299999999627, 0.00012804199999999488, 0.00012801399999999574, 0.00012802800000000225, 0.00012804200000000182, 0.00012802700000000278, 0.00012802800000000225, 0.00012798600000000354, 0.00012802800000000225, 0.00012804100000000235, 0.00012801299999999627, 0.0001280279999999953, 0.00012801399999999574, 0.00012807000000000096, 0.00012802700000000278, 0.00012802700000000278, 0.00012809700000000063, 0.00012802800000000225, 0.00012802800000000225, 0.0001280000000000031, 0.00012802800000000225, 0.00012805499999999498, 0.00012804199999999488, 0.0001280279999999953, 0.00012802699999999584, 0.00012802800000000225, 0.00012802800000000225, 0.00012804200000000182]</msg>
<status status="PASS" starttime="20201030 11:51:16.225" endtime="20201030 11:51:16.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.213" endtime="20201030 11:51:16.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.722" endtime="20201030 11:51:16.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.692" endtime="20201030 11:51:16.233"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.239" endtime="20201030 11:51:16.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.236" endtime="20201030 11:51:16.264"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.288" endtime="20201030 11:51:16.306"></status>
</kw>
<msg timestamp="20201030 11:51:16.307" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.284" endtime="20201030 11:51:16.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.314" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.309" endtime="20201030 11:51:16.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.316" endtime="20201030 11:51:16.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.277" endtime="20201030 11:51:16.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.271" endtime="20201030 11:51:16.323"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.341" endtime="20201030 11:51:16.698"></status>
</kw>
<msg timestamp="20201030 11:51:16.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039078611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03921925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:16.337" endtime="20201030 11:51:16.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039078611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03921925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:16.708" endtime="20201030 11:51:16.725"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.727" endtime="20201030 11:51:16.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.330" endtime="20201030 11:51:16.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.325" endtime="20201030 11:51:16.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:16.744" level="INFO">${PHILIP_RES} = [{'diff': 0.00014063899999999796}, {'diff': 0.0001406119999999983}, {'diff': 0.00014057000000000652}, {'diff': 0.0001406119999999983}, {'diff': 0.0001406390000000049}, {'diff': 0.00014069399999999677}...</msg>
<status status="PASS" starttime="20201030 11:51:16.736" endtime="20201030 11:51:16.744"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.754" level="INFO">${RESULT} = {'diff': [0.00014063899999999796, 0.0001406119999999983, 0.00014057000000000652, 0.0001406119999999983, 0.0001406390000000049, 0.00014069399999999677, 0.0001406249999999984, 0.0001406249999999984, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:16.746" endtime="20201030 11:51:16.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.765" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:16.762" endtime="20201030 11:51:16.766"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.772" level="INFO">VALUE: [0.00014063899999999796, 0.0001406119999999983, 0.00014057000000000652, 0.0001406119999999983, 0.0001406390000000049, 0.00014069399999999677, 0.0001406249999999984, 0.0001406249999999984, 0.00014062500000000533, 0.00014065299999999753, 0.0001406249999999984, 0.0001406249999999984, 0.00014061100000000576, 0.0001406249999999984, 0.00014062500000000533, 0.0001406249999999984, 0.00014061100000000576, 0.0001406249999999984, 0.00014061200000000523, 0.0001406249999999984, 0.00014061100000000576, 0.0001406249999999984, 0.0001406669999999971, 0.00014063899999999796, 0.00014062500000000533, 0.0001406249999999984, 0.00014059699999999925, 0.00014061099999999882, 0.0001406249999999984, 0.0001406249999999984, 0.00014061099999999882, 0.0001406249999999984, 0.0001406249999999984, 0.0001406810000000036, 0.00014063899999999796, 0.00014065199999999806, 0.00014061099999999882, 0.0001406249999999984, 0.0001405690000000001, 0.00014061099999999882, 0.00014065299999999753, 0.00014056999999999958, 0.00014061099999999882, 0.0001406249999999984, 0.00014065299999999753, 0.00014063899999999796, 0.00014068099999999667, 0.00014062500000000533, 0.0001406249999999984, 0.0001406390000000049]</msg>
<status status="PASS" starttime="20201030 11:51:16.767" endtime="20201030 11:51:16.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.756" endtime="20201030 11:51:16.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.265" endtime="20201030 11:51:16.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.234" endtime="20201030 11:51:16.778"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.784" endtime="20201030 11:51:16.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.780" endtime="20201030 11:51:16.807"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.830" endtime="20201030 11:51:16.849"></status>
</kw>
<msg timestamp="20201030 11:51:16.850" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.826" endtime="20201030 11:51:16.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.857" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.852" endtime="20201030 11:51:16.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.859" endtime="20201030 11:51:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.818" endtime="20201030 11:51:16.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.813" endtime="20201030 11:51:16.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.884" endtime="20201030 11:51:17.241"></status>
</kw>
<msg timestamp="20201030 11:51:17.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036453208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036606972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.880" endtime="20201030 11:51:17.249"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036453208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036606972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.251" endtime="20201030 11:51:17.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.270" endtime="20201030 11:51:17.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.873" endtime="20201030 11:51:17.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.868" endtime="20201030 11:51:17.278"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:17.287" level="INFO">${PHILIP_RES} = [{'diff': 0.00015376400000000068}, {'diff': 0.00015381899999999948}, {'diff': 0.00015381999999999896}, {'diff': 0.0001538059999999994}, {'diff': 0.00015380499999999991}, {'diff': 0.0001538049999999999...</msg>
<status status="PASS" starttime="20201030 11:51:17.279" endtime="20201030 11:51:17.288"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.299" level="INFO">${RESULT} = {'diff': [0.00015376400000000068, 0.00015381899999999948, 0.00015381999999999896, 0.0001538059999999994, 0.00015380499999999991, 0.00015380499999999991, 0.00015380499999999991, 0.00015379199999999982,...</msg>
<status status="PASS" starttime="20201030 11:51:17.289" endtime="20201030 11:51:17.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.310" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:17.307" endtime="20201030 11:51:17.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.315" level="INFO">VALUE: [0.00015376400000000068, 0.00015381899999999948, 0.00015381999999999896, 0.0001538059999999994, 0.00015380499999999991, 0.00015380499999999991, 0.00015380499999999991, 0.00015379199999999982, 0.0001538059999999994, 0.0001538059999999994, 0.00015380500000000685, 0.00015380499999999991, 0.00015384699999999862, 0.00015381999999999896, 0.00015381999999999896, 0.00015381899999999948, 0.00015379100000000034, 0.0001538059999999994, 0.00015379199999999982, 0.00015379199999999982, 0.0001537359999999946, 0.00015379100000000034, 0.00015381899999999948, 0.0001538059999999994, 0.0001538059999999994, 0.00015381999999999896, 0.00015380499999999991, 0.00015380499999999991, 0.0001538059999999994, 0.0001538059999999994, 0.0001538059999999994, 0.00015381899999999948, 0.00015380499999999991, 0.0001538059999999994, 0.0001538059999999994, 0.00015381999999999896, 0.00015380499999999991, 0.00015380499999999991, 0.00015377699999999384, 0.00015381999999999896, 0.0001538059999999994, 0.00015381999999999896, 0.00015379100000000034, 0.00015380499999999991, 0.00015381899999999948, 0.00015379199999999982, 0.00015377800000000025, 0.00015381899999999948, 0.00015380499999999991, 0.00015379199999999982]</msg>
<status status="PASS" starttime="20201030 11:51:17.312" endtime="20201030 11:51:17.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.300" endtime="20201030 11:51:17.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.809" endtime="20201030 11:51:17.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.778" endtime="20201030 11:51:17.321"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.327" endtime="20201030 11:51:17.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.323" endtime="20201030 11:51:17.351"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.373" endtime="20201030 11:51:17.392"></status>
</kw>
<msg timestamp="20201030 11:51:17.393" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.369" endtime="20201030 11:51:17.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.400" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.395" endtime="20201030 11:51:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.402" endtime="20201030 11:51:17.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.362" endtime="20201030 11:51:17.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.356" endtime="20201030 11:51:17.409"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.427" endtime="20201030 11:51:17.785"></status>
</kw>
<msg timestamp="20201030 11:51:17.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037003931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.423" endtime="20201030 11:51:17.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036836375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037003931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.795" endtime="20201030 11:51:17.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.814" endtime="20201030 11:51:17.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.416" endtime="20201030 11:51:17.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.411" endtime="20201030 11:51:17.821"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:17.831" level="INFO">${PHILIP_RES} = [{'diff': 0.00016755599999999926}, {'diff': 0.00016749999999999404}, {'diff': 0.00016758300000000587}, {'diff': 0.00016751400000000055}, {'diff': 0.00016754100000000022}, {'diff': 0.000167471999999994...</msg>
<status status="PASS" starttime="20201030 11:51:17.823" endtime="20201030 11:51:17.832"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.843" level="INFO">${RESULT} = {'diff': [0.00016755599999999926, 0.00016749999999999404, 0.00016758300000000587, 0.00016751400000000055, 0.00016754100000000022, 0.0001674719999999949, 0.0001675419999999997, 0.00016752700000000065, ...</msg>
<status status="PASS" starttime="20201030 11:51:17.833" endtime="20201030 11:51:17.843"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.854" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:17.852" endtime="20201030 11:51:17.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.860" level="INFO">VALUE: [0.00016755599999999926, 0.00016749999999999404, 0.00016758300000000587, 0.00016751400000000055, 0.00016754100000000022, 0.0001674719999999949, 0.0001675419999999997, 0.00016752700000000065, 0.00016752800000000012, 0.00016756899999999936, 0.00016752800000000012, 0.0001675419999999997, 0.00016754100000000022, 0.00016752800000000012, 0.00016750000000000098, 0.00016752800000000012, 0.00016755599999999926, 0.00016747200000000184, 0.0001675969999999985, 0.00016759799999999797, 0.0001675549999999998, 0.00016756999999999883, 0.0001675549999999998, 0.00016755599999999926, 0.00016755599999999926, 0.00016756899999999936, 0.0001675419999999997, 0.00016752700000000065, 0.0001674860000000014, 0.00016755599999999926, 0.00016756899999999936, 0.0001675419999999997, 0.00016754100000000022, 0.0001675419999999997, 0.00016752800000000012, 0.00016758299999999893, 0.00016755599999999926, 0.00016756899999999936, 0.00016752800000000012, 0.00016755599999999926, 0.00016754100000000022, 0.00016752800000000012, 0.00016751400000000055, 0.0001675419999999997, 0.00016759799999999797, 0.00016754100000000022, 0.0001675419999999997, 0.00016754100000000022, 0.0001675419999999997, 0.00016756999999999883]</msg>
<status status="PASS" starttime="20201030 11:51:17.856" endtime="20201030 11:51:17.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.845" endtime="20201030 11:51:17.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.352" endtime="20201030 11:51:17.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.322" endtime="20201030 11:51:17.865"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.871" endtime="20201030 11:51:17.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.867" endtime="20201030 11:51:17.895"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.917" endtime="20201030 11:51:17.937"></status>
</kw>
<msg timestamp="20201030 11:51:17.939" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.914" endtime="20201030 11:51:17.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.945" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.941" endtime="20201030 11:51:17.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.948" endtime="20201030 11:51:17.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.906" endtime="20201030 11:51:17.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.900" endtime="20201030 11:51:17.955"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.973" endtime="20201030 11:51:18.333"></status>
</kw>
<msg timestamp="20201030 11:51:18.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036623556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036805417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.969" endtime="20201030 11:51:18.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036623556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036805417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.343" endtime="20201030 11:51:18.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.363" endtime="20201030 11:51:18.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.961" endtime="20201030 11:51:18.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.956" endtime="20201030 11:51:18.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:18.380" level="INFO">${PHILIP_RES} = [{'diff': 0.00018186099999999844}, {'diff': 0.00018186199999999791}, {'diff': 0.000181874999999998}, {'diff': 0.00018177700000000102}, {'diff': 0.000181874999999998}, {'diff': 0.00018184699999999887},...</msg>
<status status="PASS" starttime="20201030 11:51:18.372" endtime="20201030 11:51:18.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.390" level="INFO">${RESULT} = {'diff': [0.00018186099999999844, 0.00018186199999999791, 0.000181874999999998, 0.00018177700000000102, 0.000181874999999998, 0.00018184699999999887, 0.000181874999999998, 0.00018184699999999887, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:18.382" endtime="20201030 11:51:18.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.401" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:18.398" endtime="20201030 11:51:18.401"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.407" level="INFO">VALUE: [0.00018186099999999844, 0.00018186199999999791, 0.000181874999999998, 0.00018177700000000102, 0.000181874999999998, 0.00018184699999999887, 0.000181874999999998, 0.00018184699999999887, 0.000181874999999998, 0.00018181899999999973, 0.0001819030000000041, 0.0001818329999999993, 0.00018186100000000538, 0.00018187500000000495, 0.00018186100000000538, 0.00018188900000000452, 0.00018186199999999791, 0.000181874999999998, 0.00018186199999999791, 0.000181874999999998, 0.00018184699999999887, 0.00018184699999999887, 0.00018186099999999844, 0.00018186099999999844, 0.00018186099999999844, 0.00018188899999999758, 0.00018184699999999887, 0.00018186099999999844, 0.00018186099999999844, 0.00018184699999999887, 0.000181874999999998, 0.000181874999999998, 0.00018186099999999844, 0.00018186100000000538, 0.00018186200000000485, 0.00018184800000000528, 0.0001818470000000058, 0.00018191700000000366, 0.0001818329999999993, 0.00018184699999999887, 0.00018186099999999844, 0.00018186099999999844, 0.000181874999999998, 0.00019268000000000063, 0.00018186099999999844, 0.00018181899999999973, 0.00018191699999999672, 0.00018186099999999844, 0.000181874999999998, 0.00018186099999999844]</msg>
<status status="PASS" starttime="20201030 11:51:18.403" endtime="20201030 11:51:18.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.392" endtime="20201030 11:51:18.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.896" endtime="20201030 11:51:18.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.866" endtime="20201030 11:51:18.412"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.418" endtime="20201030 11:51:18.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.414" endtime="20201030 11:51:18.442"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.464" endtime="20201030 11:51:18.487"></status>
</kw>
<msg timestamp="20201030 11:51:18.489" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.461" endtime="20201030 11:51:18.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.495" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.491" endtime="20201030 11:51:18.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.498" endtime="20201030 11:51:18.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.453" endtime="20201030 11:51:18.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.447" endtime="20201030 11:51:18.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.522" endtime="20201030 11:51:18.856"></status>
</kw>
<msg timestamp="20201030 11:51:18.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038490639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.519" endtime="20201030 11:51:18.864"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.883" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038293875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038490639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.866" endtime="20201030 11:51:18.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.885" endtime="20201030 11:51:18.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.511" endtime="20201030 11:51:18.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.506" endtime="20201030 11:51:18.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:18.902" level="INFO">${PHILIP_RES} = [{'diff': 0.00019676400000000205}, {'diff': 0.00019676299999999564}, {'diff': 0.00019681900000000085}, {'diff': 0.0001967360000000029}, {'diff': 0.0001967920000000012}, {'diff': 0.0001967639999999951}...</msg>
<status status="PASS" starttime="20201030 11:51:18.894" endtime="20201030 11:51:18.903"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.912" level="INFO">${RESULT} = {'diff': [0.00019676400000000205, 0.00019676299999999564, 0.00019681900000000085, 0.0001967360000000029, 0.0001967920000000012, 0.0001967639999999951, 0.00019673599999999597, 0.0001967360000000029, 0....</msg>
<status status="PASS" starttime="20201030 11:51:18.904" endtime="20201030 11:51:18.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.923" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:18.921" endtime="20201030 11:51:18.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.929" level="INFO">VALUE: [0.00019676400000000205, 0.00019676299999999564, 0.00019681900000000085, 0.0001967360000000029, 0.0001967920000000012, 0.0001967639999999951, 0.00019673599999999597, 0.0001967360000000029, 0.0001967920000000012, 0.00019674999999999554, 0.00019673599999999597, 0.00019675000000000248, 0.0001966799999999977, 0.00019673599999999597, 0.0001967639999999951, 0.00019675000000000248, 0.00019675000000000248, 0.00019674999999999554, 0.00019674999999999554, 0.0001967230000000028, 0.00019675000000000248, 0.0001967219999999964, 0.00019673599999999597, 0.00019670900000000324, 0.00019675000000000248, 0.00019673599999999597, 0.0001967639999999951, 0.0001967360000000029, 0.00019672200000000334, 0.00019677800000000162, 0.00019677800000000162, 0.00019675000000000248, 0.00019675000000000248, 0.0001967360000000029, 0.00019673599999999597, 0.0001967360000000029, 0.00019675000000000248, 0.00019677800000000162, 0.00019673599999999597, 0.00019675000000000248, 0.0001967360000000029, 0.00019675000000000248, 0.0001967920000000012, 0.00019673700000000238, 0.00019673700000000238, 0.00019677799999999468, 0.00019673599999999597, 0.00019666700000000453, 0.00019675000000000248, 0.00019675000000000248]</msg>
<status status="PASS" starttime="20201030 11:51:18.925" endtime="20201030 11:51:18.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.914" endtime="20201030 11:51:18.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.443" endtime="20201030 11:51:18.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.413" endtime="20201030 11:51:18.934"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.940" endtime="20201030 11:51:18.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.936" endtime="20201030 11:51:18.964"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.988" endtime="20201030 11:51:19.009"></status>
</kw>
<msg timestamp="20201030 11:51:19.011" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.984" endtime="20201030 11:51:19.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.017" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.013" endtime="20201030 11:51:19.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.020" endtime="20201030 11:51:19.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.977" endtime="20201030 11:51:19.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.971" endtime="20201030 11:51:19.027"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.045" endtime="20201030 11:51:19.402"></status>
</kw>
<msg timestamp="20201030 11:51:19.410" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038322931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038535125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.041" endtime="20201030 11:51:19.410"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.429" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038322931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038535125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.412" endtime="20201030 11:51:19.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.431" endtime="20201030 11:51:19.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.033" endtime="20201030 11:51:19.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.028" endtime="20201030 11:51:19.439"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:19.448" level="INFO">${PHILIP_RES} = [{'diff': 0.00021219400000000582}, {'diff': 0.00021222199999999802}, {'diff': 0.00021220799999999845}, {'diff': 0.00021216599999999974}, {'diff': 0.00021222199999999802}, {'diff': 0.000212207999999998...</msg>
<status status="PASS" starttime="20201030 11:51:19.440" endtime="20201030 11:51:19.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.458" level="INFO">${RESULT} = {'diff': [0.00021219400000000582, 0.00021222199999999802, 0.00021220799999999845, 0.00021216599999999974, 0.00021222199999999802, 0.00021220799999999845, 0.00021220900000000487, 0.00021220799999999845...</msg>
<status status="PASS" starttime="20201030 11:51:19.450" endtime="20201030 11:51:19.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.469" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:19.467" endtime="20201030 11:51:19.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.477" level="INFO">VALUE: [0.00021219400000000582, 0.00021222199999999802, 0.00021220799999999845, 0.00021216599999999974, 0.00021222199999999802, 0.00021220799999999845, 0.00021220900000000487, 0.00021220799999999845, 0.00021219499999999836, 0.00021220799999999845, 0.00021223600000000453, 0.00021219399999999888, 0.0002121809999999988, 0.00021219400000000582, 0.00021220799999999845, 0.00021220799999999845, 0.0002121950000000053, 0.00021227700000000377, 0.00021219399999999888, 0.00021220799999999845, 0.00021219399999999888, 0.00021220899999999793, 0.00021216599999999974, 0.00021220900000000487, 0.00021220799999999845, 0.00021219499999999836, 0.00021219400000000582, 0.0002122359999999976, 0.00021222199999999802, 0.00021222200000000496, 0.00021219399999999888, 0.00021219499999999836, 0.00021226399999999673, 0.0002122500000000041, 0.00021222199999999802, 0.00021217999999999931, 0.00021220900000000487, 0.00021220799999999845, 0.0002122229999999975, 0.00021222200000000496, 0.00021226400000000367, 0.00021219399999999888, 0.00021220899999999793, 0.00021222200000000496, 0.00021219499999999836, 0.00021217999999999931, 0.00021222200000000496, 0.00021219399999999888, 0.00021216599999999974, 0.00021219400000000582]</msg>
<status status="PASS" starttime="20201030 11:51:19.472" endtime="20201030 11:51:19.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.460" endtime="20201030 11:51:19.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.965" endtime="20201030 11:51:19.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.935" endtime="20201030 11:51:19.482"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.488" endtime="20201030 11:51:19.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.484" endtime="20201030 11:51:19.512"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.534" endtime="20201030 11:51:19.556"></status>
</kw>
<msg timestamp="20201030 11:51:19.558" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.531" endtime="20201030 11:51:19.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.564" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.560" endtime="20201030 11:51:19.565"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.567" endtime="20201030 11:51:19.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.523" endtime="20201030 11:51:19.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.517" endtime="20201030 11:51:19.574"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.591" endtime="20201030 11:51:19.949"></status>
</kw>
<msg timestamp="20201030 11:51:19.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036898889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.588" endtime="20201030 11:51:19.957"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036670653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036898889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.959" endtime="20201030 11:51:19.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.978" endtime="20201030 11:51:19.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.580" endtime="20201030 11:51:19.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.575" endtime="20201030 11:51:19.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:19.995" level="INFO">${PHILIP_RES} = [{'diff': 0.00022823599999999972}, {'diff': 0.00022822200000000015}, {'diff': 0.00022816700000000134}, {'diff': 0.00022822200000000015}, {'diff': 0.00022822200000000015}, {'diff': 0.000228263999999998...</msg>
<status status="PASS" starttime="20201030 11:51:19.987" endtime="20201030 11:51:19.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.010" level="INFO">${RESULT} = {'diff': [0.00022823599999999972, 0.00022822200000000015, 0.00022816700000000134, 0.00022822200000000015, 0.00022822200000000015, 0.00022826399999999886, 0.0002282369999999992, 0.00022822200000000015,...</msg>
<status status="PASS" starttime="20201030 11:51:19.997" endtime="20201030 11:51:20.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.021" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:20.019" endtime="20201030 11:51:20.022"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.027" level="INFO">VALUE: [0.00022823599999999972, 0.00022822200000000015, 0.00022816700000000134, 0.00022822200000000015, 0.00022822200000000015, 0.00022826399999999886, 0.0002282369999999992, 0.00022822200000000015, 0.00022822299999999962, 0.00022820800000000058, 0.00022820900000000005, 0.00022820800000000058, 0.000228194000000001, 0.00022823599999999972, 0.00022822200000000015, 0.00022819500000000048, 0.0002282499999999993, 0.0002282499999999993, 0.0002282499999999993, 0.00022822299999999962, 0.00022820800000000058, 0.00022822200000000015, 0.00022820800000000058, 0.00022820800000000058, 0.00022820800000000058, 0.00022820800000000058, 0.00022815300000000177, 0.00022823599999999972, 0.0002282089999999931, 0.00022820800000000058, 0.00022822299999999962, 0.00022820800000000058, 0.00022820800000000058, 0.00022819500000000048, 0.00022823599999999972, 0.00022823599999999972, 0.00022820800000000058, 0.00022819500000000048, 0.00022819399999999407, 0.00022815300000000177, 0.00022820800000000058, 0.0002282499999999993, 0.000228194000000001, 0.00022822200000000015, 0.00022823599999999972, 0.00022822200000000015, 0.00022820900000000005, 0.000228194000000001, 0.00022822299999999962, 0.000228194000000001]</msg>
<status status="PASS" starttime="20201030 11:51:20.024" endtime="20201030 11:51:20.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.012" endtime="20201030 11:51:20.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.513" endtime="20201030 11:51:20.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.483" endtime="20201030 11:51:20.033"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.039" endtime="20201030 11:51:20.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.035" endtime="20201030 11:51:20.063"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.085" endtime="20201030 11:51:20.109"></status>
</kw>
<msg timestamp="20201030 11:51:20.110" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.082" endtime="20201030 11:51:20.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.116" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.112" endtime="20201030 11:51:20.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.119" endtime="20201030 11:51:20.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.074" endtime="20201030 11:51:20.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.068" endtime="20201030 11:51:20.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.144" endtime="20201030 11:51:20.500"></status>
</kw>
<msg timestamp="20201030 11:51:20.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037517167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037761972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.140" endtime="20201030 11:51:20.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037517167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037761972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.510" endtime="20201030 11:51:20.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.529" endtime="20201030 11:51:20.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.132" endtime="20201030 11:51:20.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.128" endtime="20201030 11:51:20.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:20.546" level="INFO">${PHILIP_RES} = [{'diff': 0.0002448050000000007}, {'diff': 0.00024481899999999335}, {'diff': 0.00024481999999999976}, {'diff': 0.00024481999999999976}, {'diff': 0.0002448190000000003}, {'diff': 0.0002448050000000007}...</msg>
<status status="PASS" starttime="20201030 11:51:20.538" endtime="20201030 11:51:20.547"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.558" level="INFO">${RESULT} = {'diff': [0.0002448050000000007, 0.00024481899999999335, 0.00024481999999999976, 0.00024481999999999976, 0.0002448190000000003, 0.0002448050000000007, 0.00024483399999999933, 0.00024481999999999976, 0...</msg>
<status status="PASS" starttime="20201030 11:51:20.549" endtime="20201030 11:51:20.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.569" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:20.567" endtime="20201030 11:51:20.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.575" level="INFO">VALUE: [0.0002448050000000007, 0.00024481899999999335, 0.00024481999999999976, 0.00024481999999999976, 0.0002448190000000003, 0.0002448050000000007, 0.00024483399999999933, 0.00024481999999999976, 0.0002448050000000007, 0.0002448190000000003, 0.00024483399999999933, 0.00025666699999999515, 0.0002448060000000002, 0.00024481999999999976, 0.0002448190000000003, 0.0002448190000000003, 0.0002448060000000002, 0.0002448060000000002, 0.0002448190000000003, 0.00024483299999999986, 0.00024483299999999986, 0.0002448060000000002, 0.00024487499999999857, 0.0002448050000000007, 0.00024483299999999986, 0.00024483399999999933, 0.00024483299999999986, 0.0002448190000000003, 0.0002448469999999994, 0.00024483399999999933, 0.00024481999999999976, 0.0002448050000000007, 0.0002448050000000007, 0.0002448190000000003, 0.00024480599999999325, 0.00024481999999999976, 0.0002448050000000007, 0.00024483299999999986, 0.00024481999999999976, 0.0002448060000000002, 0.000244860999999999, 0.00024481899999999335, 0.00024481999999999976, 0.0002448060000000002, 0.0002448190000000003, 0.0002448190000000003, 0.0002447500000000019, 0.00024481999999999976, 0.00024486100000000594, 0.00024481899999999335]</msg>
<status status="PASS" starttime="20201030 11:51:20.571" endtime="20201030 11:51:20.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.560" endtime="20201030 11:51:20.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.064" endtime="20201030 11:51:20.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.033" endtime="20201030 11:51:20.580"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.586" endtime="20201030 11:51:20.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.582" endtime="20201030 11:51:20.610"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.632" endtime="20201030 11:51:20.657"></status>
</kw>
<msg timestamp="20201030 11:51:20.658" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.629" endtime="20201030 11:51:20.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.665" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.661" endtime="20201030 11:51:20.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.668" endtime="20201030 11:51:20.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.621" endtime="20201030 11:51:20.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.616" endtime="20201030 11:51:20.676"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.694" endtime="20201030 11:51:21.053"></status>
</kw>
<msg timestamp="20201030 11:51:21.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036786194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.691" endtime="20201030 11:51:21.061"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036786194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037048181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.063" endtime="20201030 11:51:21.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.082" endtime="20201030 11:51:21.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.682" endtime="20201030 11:51:21.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.677" endtime="20201030 11:51:21.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:21.099" level="INFO">${PHILIP_RES} = [{'diff': 0.00026198699999999825}, {'diff': 0.0002619859999999988}, {'diff': 0.0002619859999999988}, {'diff': 0.0002619859999999988}, {'diff': 0.000262042000000004}, {'diff': 0.0002619719999999992}, {...</msg>
<status status="PASS" starttime="20201030 11:51:21.091" endtime="20201030 11:51:21.100"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.109" level="INFO">${RESULT} = {'diff': [0.00026198699999999825, 0.0002619859999999988, 0.0002619859999999988, 0.0002619859999999988, 0.000262042000000004, 0.0002619719999999992, 0.0002619719999999992, 0.0002619719999999992, 0.0002...</msg>
<status status="PASS" starttime="20201030 11:51:21.102" endtime="20201030 11:51:21.110"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.120" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:21.118" endtime="20201030 11:51:21.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.126" level="INFO">VALUE: [0.00026198699999999825, 0.0002619859999999988, 0.0002619859999999988, 0.0002619859999999988, 0.000262042000000004, 0.0002619719999999992, 0.0002619719999999992, 0.0002619719999999992, 0.0002619719999999992, 0.0002619719999999992, 0.00026194400000000007, 0.00026198699999999825, 0.0002619859999999988, 0.00026197200000000614, 0.0002619870000000052, 0.0002619859999999988, 0.0002619719999999992, 0.00026194400000000007, 0.00026195799999999964, 0.0002619859999999988, 0.0002619719999999992, 0.0002619860000000057, 0.0002619719999999992, 0.0002619300000000005, 0.0002619719999999992, 0.0002619729999999987, 0.0002620559999999966, 0.00026193099999999997, 0.00026198699999999825, 0.0002619719999999992, 0.0002620550000000041, 0.0002619729999999987, 0.0002619719999999992, 0.0002619859999999988, 0.0002619589999999991, 0.0002619719999999992, 0.0002619859999999988, 0.00026199999999999835, 0.0002619860000000057, 0.00026197200000000614, 0.00026195799999999964, 0.0002619719999999992, 0.0002619729999999987, 0.0002619719999999992, 0.0002619719999999992, 0.0002619729999999987, 0.0002803190000000011, 0.0002619719999999992, 0.00026195799999999964, 0.00026197200000000614]</msg>
<status status="PASS" starttime="20201030 11:51:21.123" endtime="20201030 11:51:21.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.111" endtime="20201030 11:51:21.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.611" endtime="20201030 11:51:21.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.581" endtime="20201030 11:51:21.136"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.142" endtime="20201030 11:51:21.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.138" endtime="20201030 11:51:21.166"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.188" endtime="20201030 11:51:21.215"></status>
</kw>
<msg timestamp="20201030 11:51:21.216" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.185" endtime="20201030 11:51:21.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.223" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.218" endtime="20201030 11:51:21.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.225" endtime="20201030 11:51:21.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.177" endtime="20201030 11:51:21.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.171" endtime="20201030 11:51:21.233"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.250" endtime="20201030 11:51:21.605"></status>
</kw>
<msg timestamp="20201030 11:51:21.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038320958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038600653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.247" endtime="20201030 11:51:21.613"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038320958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038600653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.615" endtime="20201030 11:51:21.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.634" endtime="20201030 11:51:21.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.239" endtime="20201030 11:51:21.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.234" endtime="20201030 11:51:21.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:21.651" level="INFO">${PHILIP_RES} = [{'diff': 0.0002796949999999965}, {'diff': 0.00027972199999999614}, {'diff': 0.0002797080000000035}, {'diff': 0.00027979200000000093}, {'diff': 0.00027970899999999604}, {'diff': 0.00027969400000000394...</msg>
<status status="PASS" starttime="20201030 11:51:21.643" endtime="20201030 11:51:21.652"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.661" level="INFO">${RESULT} = {'diff': [0.0002796949999999965, 0.00027972199999999614, 0.0002797080000000035, 0.00027979200000000093, 0.00027970899999999604, 0.00027969400000000394, 0.000279693999999997, 0.00027970799999999657, 0....</msg>
<status status="PASS" starttime="20201030 11:51:21.653" endtime="20201030 11:51:21.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.672" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:21.670" endtime="20201030 11:51:21.673"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.678" level="INFO">VALUE: [0.0002796949999999965, 0.00027972199999999614, 0.0002797080000000035, 0.00027979200000000093, 0.00027970899999999604, 0.00027969400000000394, 0.000279693999999997, 0.00027970799999999657, 0.0002797080000000035, 0.00027970799999999657, 0.0002796530000000047, 0.0002797220000000031, 0.00027970799999999657, 0.00027973600000000265, 0.0002797080000000035, 0.0002796249999999986, 0.0002797220000000031, 0.0002796950000000034, 0.00027970899999999604, 0.0002797220000000031, 0.0002797359999999957, 0.000279693999999997, 0.0002797220000000031, 0.00027970899999999604, 0.0002797500000000022, 0.00027969400000000394, 0.00027970799999999657, 0.00027970799999999657, 0.00027973600000000265, 0.00027970799999999657, 0.000279709000000003, 0.0002797220000000031, 0.0002797359999999957, 0.00027973600000000265, 0.00027969400000000394, 0.0002796389999999982, 0.0002797220000000031, 0.00027973600000000265, 0.00027970899999999604, 0.0002797500000000022, 0.00027972199999999614, 0.00027972199999999614, 0.0002797220000000031, 0.00029399999999999565, 0.0002797080000000035, 0.00027970899999999604, 0.00027970899999999604, 0.000279709000000003, 0.0002796519999999983, 0.0002797220000000031]</msg>
<status status="PASS" starttime="20201030 11:51:21.674" endtime="20201030 11:51:21.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.663" endtime="20201030 11:51:21.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.167" endtime="20201030 11:51:21.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.137" endtime="20201030 11:51:21.683"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.689" endtime="20201030 11:51:21.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.685" endtime="20201030 11:51:21.714"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.738" endtime="20201030 11:51:21.764"></status>
</kw>
<msg timestamp="20201030 11:51:21.765" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.735" endtime="20201030 11:51:21.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.772" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.767" endtime="20201030 11:51:21.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.774" endtime="20201030 11:51:21.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.727" endtime="20201030 11:51:21.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.721" endtime="20201030 11:51:21.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.799" endtime="20201030 11:51:22.097"></status>
</kw>
<msg timestamp="20201030 11:51:22.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039158375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.796" endtime="20201030 11:51:22.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.039158375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039456417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.106" endtime="20201030 11:51:22.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.126" endtime="20201030 11:51:22.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.788" endtime="20201030 11:51:22.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.783" endtime="20201030 11:51:22.133"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:22.142" level="INFO">${PHILIP_RES} = [{'diff': 0.00029804199999999836}, {'diff': 0.0002980000000000066}, {'diff': 0.0002980139999999992}, {'diff': 0.0002979860000000001}, {'diff': 0.00029799999999999965}, {'diff': 0.0002980139999999992},...</msg>
<status status="PASS" starttime="20201030 11:51:22.134" endtime="20201030 11:51:22.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.152" level="INFO">${RESULT} = {'diff': [0.00029804199999999836, 0.0002980000000000066, 0.0002980139999999992, 0.0002979860000000001, 0.00029799999999999965, 0.0002980139999999992, 0.0002980139999999992, 0.0002980699999999975, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:22.144" endtime="20201030 11:51:22.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.163" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:22.161" endtime="20201030 11:51:22.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.170" level="INFO">VALUE: [0.00029804199999999836, 0.0002980000000000066, 0.0002980139999999992, 0.0002979860000000001, 0.00029799999999999965, 0.0002980139999999992, 0.0002980139999999992, 0.0002980699999999975, 0.0002980139999999992, 0.0002979860000000001, 0.00029805599999999793, 0.00029799999999999965, 0.00029802800000000573, 0.0002980279999999988, 0.00029801299999999975, 0.00029799999999999965, 0.0002980000000000066, 0.0002979860000000001, 0.0002980139999999992, 0.00029799999999999965, 0.0002980139999999992, 0.0002979860000000001, 0.0002980279999999988, 0.0002980000000000066, 0.0002980139999999992, 0.0002980139999999992, 0.0002980139999999992, 0.00029799999999999965, 0.0002980139999999992, 0.0002979860000000001, 0.0002980279999999988, 0.0002980139999999992, 0.00029801299999999975, 0.00029799999999999965, 0.0002980409999999989, 0.00029799999999999965, 0.0002980279999999988, 0.0002979590000000004, 0.00029802800000000573, 0.00029799999999999965, 0.00029799999999999965, 0.00029799999999999965, 0.0002980139999999992, 0.00029799999999999965, 0.0002980139999999992, 0.0002980000000000066, 0.00029804199999999836, 0.0002979310000000013, 0.00029799999999999965, 0.00029801400000000616]</msg>
<status status="PASS" starttime="20201030 11:51:22.166" endtime="20201030 11:51:22.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.154" endtime="20201030 11:51:22.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.715" endtime="20201030 11:51:22.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.684" endtime="20201030 11:51:22.176"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.182" endtime="20201030 11:51:22.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.178" endtime="20201030 11:51:22.206"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.228" endtime="20201030 11:51:22.255"></status>
</kw>
<msg timestamp="20201030 11:51:22.256" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.224" endtime="20201030 11:51:22.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.263" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.259" endtime="20201030 11:51:22.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.265" endtime="20201030 11:51:22.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.217" endtime="20201030 11:51:22.271"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.211" endtime="20201030 11:51:22.273"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.290" endtime="20201030 11:51:22.648"></status>
</kw>
<msg timestamp="20201030 11:51:22.655" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.287" endtime="20201030 11:51:22.656"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036701514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037018417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.657" endtime="20201030 11:51:22.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.677" endtime="20201030 11:51:22.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.279" endtime="20201030 11:51:22.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.274" endtime="20201030 11:51:22.684"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:22.694" level="INFO">${PHILIP_RES} = [{'diff': 0.0003169030000000003}, {'diff': 0.0003169030000000003}, {'diff': 0.00031688900000000075}, {'diff': 0.0003168750000000012}, {'diff': 0.00031683400000000195}, {'diff': 0.00031688900000000075}...</msg>
<status status="PASS" starttime="20201030 11:51:22.686" endtime="20201030 11:51:22.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.705" level="INFO">${RESULT} = {'diff': [0.0003169030000000003, 0.0003169030000000003, 0.00031688900000000075, 0.0003168750000000012, 0.00031683400000000195, 0.00031688900000000075, 0.0003168750000000012, 0.0003169030000000003, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:22.696" endtime="20201030 11:51:22.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.716" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:22.714" endtime="20201030 11:51:22.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.722" level="INFO">VALUE: [0.0003169030000000003, 0.0003169030000000003, 0.00031688900000000075, 0.0003168750000000012, 0.00031683400000000195, 0.00031688900000000075, 0.0003168750000000012, 0.0003169030000000003, 0.00031688900000000075, 0.0003168609999999947, 0.00031688900000000075, 0.0003168750000000012, 0.00031687499999999424, 0.00031680500000000333, 0.0003168750000000012, 0.0003168479999999946, 0.0003168750000000012, 0.0003168750000000012, 0.00031688900000000075, 0.00031679100000000376, 0.0003168750000000012, 0.00031688900000000075, 0.0003168620000000011, 0.00031688900000000075, 0.00031688900000000075, 0.0003168610000000016, 0.0003168750000000012, 0.0003168610000000016, 0.0003168750000000012, 0.0003169019999999939, 0.0003168750000000012, 0.0003168750000000012, 0.0003169019999999939, 0.0003168750000000012, 0.00031688900000000075, 0.00031688900000000075, 0.0003168750000000012, 0.0003168750000000012, 0.00031688900000000075, 0.00031688900000000075, 0.00031688900000000075, 0.0003168750000000012, 0.0003168620000000011, 0.0003169169999999999, 0.00031688900000000075, 0.00031688900000000075, 0.00031688799999999434, 0.0003168750000000012, 0.00031688900000000075, 0.00031688900000000075]</msg>
<status status="PASS" starttime="20201030 11:51:22.718" endtime="20201030 11:51:22.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.707" endtime="20201030 11:51:22.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.207" endtime="20201030 11:51:22.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.177" endtime="20201030 11:51:22.728"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.734" endtime="20201030 11:51:22.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.730" endtime="20201030 11:51:22.759"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.781" endtime="20201030 11:51:22.809"></status>
</kw>
<msg timestamp="20201030 11:51:22.811" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.777" endtime="20201030 11:51:22.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.817" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.813" endtime="20201030 11:51:22.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.820" endtime="20201030 11:51:22.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.770" endtime="20201030 11:51:22.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.764" endtime="20201030 11:51:22.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.845" endtime="20201030 11:51:23.202"></status>
</kw>
<msg timestamp="20201030 11:51:23.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037024319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037360681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.841" endtime="20201030 11:51:23.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037024319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037360681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.212" endtime="20201030 11:51:23.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.231" endtime="20201030 11:51:23.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.833" endtime="20201030 11:51:23.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.828" endtime="20201030 11:51:23.239"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:23.248" level="INFO">${PHILIP_RES} = [{'diff': 0.00033636199999999977}, {'diff': 0.00033633300000000116}, {'diff': 0.00033633300000000116}, {'diff': 0.0003363060000000015}, {'diff': 0.0003363049999999951}, {'diff': 0.00033633400000000063...</msg>
<status status="PASS" starttime="20201030 11:51:23.240" endtime="20201030 11:51:23.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.260" level="INFO">${RESULT} = {'diff': [0.00033636199999999977, 0.00033633300000000116, 0.00033633300000000116, 0.0003363060000000015, 0.0003363049999999951, 0.00033633400000000063, 0.0003363190000000016, 0.000336305000000002, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:23.250" endtime="20201030 11:51:23.260"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.271" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:23.269" endtime="20201030 11:51:23.272"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.277" level="INFO">VALUE: [0.00033636199999999977, 0.00033633300000000116, 0.00033633300000000116, 0.0003363060000000015, 0.0003363049999999951, 0.00033633400000000063, 0.0003363190000000016, 0.000336305000000002, 0.00033637499999999987, 0.0003363610000000003, 0.000336305000000002, 0.00033632000000000106, 0.0003363049999999951, 0.00033630599999999455, 0.00033633400000000063, 0.0003363190000000016, 0.00033632000000000106, 0.0003363060000000015, 0.000336305000000002, 0.0003362920000000019, 0.0003363329999999942, 0.0003363049999999951, 0.0003363060000000015, 0.0003363060000000015, 0.000336305000000002, 0.0003362920000000019, 0.00033633300000000116, 0.0003362920000000019, 0.00033632000000000106, 0.0003363049999999951, 0.00033633300000000116, 0.00033632000000000106, 0.0003363190000000016, 0.00033634700000000073, 0.00033632000000000106, 0.00033633300000000116, 0.00033630599999999455, 0.0003362779999999954, 0.0003363610000000003, 0.0003363060000000015, 0.0003363190000000016, 0.0003362770000000029, 0.0003363610000000003, 0.0003363190000000016, 0.00033632000000000106, 0.00033630599999999455, 0.0003363049999999951, 0.00033632000000000106, 0.00033623600000000364, 0.0003363190000000016]</msg>
<status status="PASS" starttime="20201030 11:51:23.273" endtime="20201030 11:51:23.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.262" endtime="20201030 11:51:23.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.760" endtime="20201030 11:51:23.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.729" endtime="20201030 11:51:23.282"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.288" endtime="20201030 11:51:23.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.284" endtime="20201030 11:51:23.312"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.334" endtime="20201030 11:51:23.363"></status>
</kw>
<msg timestamp="20201030 11:51:23.364" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.331" endtime="20201030 11:51:23.365"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.371" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.367" endtime="20201030 11:51:23.372"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.373" endtime="20201030 11:51:23.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.323" endtime="20201030 11:51:23.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.318" endtime="20201030 11:51:23.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.398" endtime="20201030 11:51:23.758"></status>
</kw>
<msg timestamp="20201030 11:51:23.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036941778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037298111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.395" endtime="20201030 11:51:23.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036941778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037298111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.768" endtime="20201030 11:51:23.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.789" endtime="20201030 11:51:23.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.387" endtime="20201030 11:51:23.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.382" endtime="20201030 11:51:23.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:23.806" level="INFO">${PHILIP_RES} = [{'diff': 0.00035633300000000034}, {'diff': 0.00035633300000000034}, {'diff': 0.00035641699999999776}, {'diff': 0.0003562920000000011}, {'diff': 0.0003563469999999999}, {'diff': 0.0003563339999999998}...</msg>
<status status="PASS" starttime="20201030 11:51:23.798" endtime="20201030 11:51:23.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.815" level="INFO">${RESULT} = {'diff': [0.00035633300000000034, 0.00035633300000000034, 0.00035641699999999776, 0.0003562920000000011, 0.0003563469999999999, 0.0003563339999999998, 0.00035633300000000034, 0.00035633300000000034, 0...</msg>
<status status="PASS" starttime="20201030 11:51:23.808" endtime="20201030 11:51:23.816"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.826" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:23.824" endtime="20201030 11:51:23.827"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.832" level="INFO">VALUE: [0.00035633300000000034, 0.00035633300000000034, 0.00035641699999999776, 0.0003562920000000011, 0.0003563469999999999, 0.0003563339999999998, 0.00035633300000000034, 0.00035633300000000034, 0.00035632000000000025, 0.0003563190000000008, 0.00035633300000000034, 0.0003563479999999994, 0.00035633300000000034, 0.0003563609999999995, 0.00035636199999999896, 0.0003563190000000008, 0.00035633300000000034, 0.00035632000000000025, 0.0003563190000000008, 0.00035632000000000025, 0.0003563339999999998, 0.0003563190000000008, 0.0003563060000000007, 0.0003563339999999998, 0.0003563190000000008, 0.0003562909999999947, 0.0003563339999999998, 0.0003563190000000008, 0.0003563609999999995, 0.00035636199999999896, 0.00035633300000000034, 0.0003563469999999999, 0.00035638799999999915, 0.00035633300000000034, 0.0003562920000000011, 0.0003563339999999998, 0.00035633300000000034, 0.0003563889999999986, 0.00035633300000000034, 0.00035633300000000034, 0.0003563339999999998, 0.0003563469999999999, 0.0003563469999999999, 0.00035632000000000025, 0.00035637499999999905, 0.00035633300000000034, 0.0003563339999999998, 0.0003563469999999999, 0.00035633300000000034, 0.0003563339999999998]</msg>
<status status="PASS" starttime="20201030 11:51:23.829" endtime="20201030 11:51:23.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.817" endtime="20201030 11:51:23.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.313" endtime="20201030 11:51:23.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.283" endtime="20201030 11:51:23.837"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.844" endtime="20201030 11:51:23.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.840" endtime="20201030 11:51:23.868"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.890" endtime="20201030 11:51:23.921"></status>
</kw>
<msg timestamp="20201030 11:51:23.923" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.886" endtime="20201030 11:51:23.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.929" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.925" endtime="20201030 11:51:23.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.931" endtime="20201030 11:51:23.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.879" endtime="20201030 11:51:23.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.873" endtime="20201030 11:51:23.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.956" endtime="20201030 11:51:24.314"></status>
</kw>
<msg timestamp="20201030 11:51:24.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038377833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038754736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.953" endtime="20201030 11:51:24.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038377833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038754736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.324" endtime="20201030 11:51:24.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.343" endtime="20201030 11:51:24.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.945" endtime="20201030 11:51:24.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.940" endtime="20201030 11:51:24.350"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:24.360" level="INFO">${PHILIP_RES} = [{'diff': 0.0003769029999999979}, {'diff': 0.00037688900000000525}, {'diff': 0.00037691699999999745}, {'diff': 0.0003768889999999983}, {'diff': 0.0003769030000000048}, {'diff': 0.00037688799999999884}...</msg>
<status status="PASS" starttime="20201030 11:51:24.352" endtime="20201030 11:51:24.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.369" level="INFO">${RESULT} = {'diff': [0.0003769029999999979, 0.00037688900000000525, 0.00037691699999999745, 0.0003768889999999983, 0.0003769030000000048, 0.00037688799999999884, 0.0003768889999999983, 0.0003769170000000044, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:24.362" endtime="20201030 11:51:24.370"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.381" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:24.378" endtime="20201030 11:51:24.381"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.386" level="INFO">VALUE: [0.0003769029999999979, 0.00037688900000000525, 0.00037691699999999745, 0.0003768889999999983, 0.0003769030000000048, 0.00037688799999999884, 0.0003768889999999983, 0.0003769170000000044, 0.0003769030000000048, 0.00037691699999999745, 0.0003769029999999979, 0.0003769030000000048, 0.0003769029999999979, 0.00037688799999999884, 0.0003769170000000044, 0.0003768889999999983, 0.00037691699999999745, 0.0003768889999999983, 0.0003769029999999979, 0.0003769029999999979, 0.00037687499999999874, 0.0003769160000000049, 0.00037691699999999745, 0.0003769029999999979, 0.00037688900000000525, 0.0003769029999999979, 0.0003768889999999983, 0.0003769029999999979, 0.0003769160000000049, 0.0003769019999999984, 0.0003768889999999983, 0.00037688900000000525, 0.0003768889999999983, 0.0003768889999999983, 0.0003769030000000048, 0.0003769029999999979, 0.000376915999999998, 0.0003768610000000061, 0.0003768889999999983, 0.0003768889999999983, 0.00037691699999999745, 0.00037687499999999874, 0.0003768889999999983, 0.0003768889999999983, 0.00037690200000000534, 0.0003769029999999979, 0.0003768889999999983, 0.0003769170000000044, 0.0003768889999999983, 0.0003769029999999979]</msg>
<status status="PASS" starttime="20201030 11:51:24.383" endtime="20201030 11:51:24.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.371" endtime="20201030 11:51:24.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.869" endtime="20201030 11:51:24.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.838" endtime="20201030 11:51:24.392"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.398" endtime="20201030 11:51:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.394" endtime="20201030 11:51:24.422"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.446" endtime="20201030 11:51:24.477"></status>
</kw>
<msg timestamp="20201030 11:51:24.478" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.442" endtime="20201030 11:51:24.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.485" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.480" endtime="20201030 11:51:24.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.487" endtime="20201030 11:51:24.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.435" endtime="20201030 11:51:24.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.429" endtime="20201030 11:51:24.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.512" endtime="20201030 11:51:24.870"></status>
</kw>
<msg timestamp="20201030 11:51:24.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038400458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038798514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.509" endtime="20201030 11:51:24.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038400458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038798514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.880" endtime="20201030 11:51:24.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.899" endtime="20201030 11:51:24.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.501" endtime="20201030 11:51:24.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.496" endtime="20201030 11:51:24.906"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:24.916" level="INFO">${PHILIP_RES} = [{'diff': 0.0003980560000000008}, {'diff': 0.0003980140000000021}, {'diff': 0.00039805599999999386}, {'diff': 0.0003980000000000025}, {'diff': 0.0003980550000000013}, {'diff': 0.00039804100000000175},...</msg>
<status status="PASS" starttime="20201030 11:51:24.908" endtime="20201030 11:51:24.917"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.926" level="INFO">${RESULT} = {'diff': [0.0003980560000000008, 0.0003980140000000021, 0.00039805599999999386, 0.0003980000000000025, 0.0003980550000000013, 0.00039804100000000175, 0.0003981109999999996, 0.00039807000000000037, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:24.918" endtime="20201030 11:51:24.926"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.937" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:24.934" endtime="20201030 11:51:24.938"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.944" level="INFO">VALUE: [0.0003980560000000008, 0.0003980140000000021, 0.00039805599999999386, 0.0003980000000000025, 0.0003980550000000013, 0.00039804100000000175, 0.0003981109999999996, 0.00039807000000000037, 0.0003979999999999956, 0.0003980550000000013, 0.0003980560000000008, 0.00039808399999999994, 0.0003980560000000008, 0.00039804100000000175, 0.0003980560000000008, 0.0003980829999999935, 0.00039808300000000046, 0.0003980560000000008, 0.00039805599999999386, 0.0003980560000000008, 0.0003980690000000009, 0.0003980550000000013, 0.000398112000000006, 0.00039804200000000123, 0.00039804100000000175, 0.00039797199999999644, 0.0003980560000000008, 0.00039804200000000123, 0.0003980550000000013, 0.0003980419999999943, 0.00039807000000000037, 0.0003980560000000008, 0.0003980549999999944, 0.0003980690000000009, 0.0003980560000000008, 0.00039807000000000037, 0.0003980690000000009, 0.00039804200000000123, 0.0003980560000000008, 0.00039806899999999396, 0.0003980550000000013, 0.0003980560000000008, 0.00039807000000000037, 0.00039804200000000123, 0.00039808300000000046, 0.0003980560000000008, 0.0003980419999999943, 0.0003980560000000008, 0.0003980690000000009, 0.00039804200000000123]</msg>
<status status="PASS" starttime="20201030 11:51:24.939" endtime="20201030 11:51:24.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.928" endtime="20201030 11:51:24.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.423" endtime="20201030 11:51:24.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.393" endtime="20201030 11:51:24.950"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.956" endtime="20201030 11:51:24.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.952" endtime="20201030 11:51:24.980"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.002" endtime="20201030 11:51:25.035"></status>
</kw>
<msg timestamp="20201030 11:51:25.036" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.998" endtime="20201030 11:51:25.037"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.043" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.038" endtime="20201030 11:51:25.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.045" endtime="20201030 11:51:25.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.991" endtime="20201030 11:51:25.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.985" endtime="20201030 11:51:25.052"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.070" endtime="20201030 11:51:25.404"></status>
</kw>
<msg timestamp="20201030 11:51:25.407" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036863264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.067" endtime="20201030 11:51:25.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036863264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037283014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.409" endtime="20201030 11:51:25.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.417" endtime="20201030 11:51:25.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.059" endtime="20201030 11:51:25.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.054" endtime="20201030 11:51:25.420"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:25.424" level="INFO">${PHILIP_RES} = [{'diff': 0.00041975000000000345}, {'diff': 0.000419764000000003}, {'diff': 0.0004197780000000026}, {'diff': 0.0004197639999999961}, {'diff': 0.00043902800000000103}, {'diff': 0.0004197639999999961}, ...</msg>
<status status="PASS" starttime="20201030 11:51:25.421" endtime="20201030 11:51:25.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.439" level="INFO">${RESULT} = {'diff': [0.00041975000000000345, 0.000419764000000003, 0.0004197780000000026, 0.0004197639999999961, 0.00043902800000000103, 0.0004197639999999961, 0.0004197079999999978, 0.000419764000000003, 0.0004...</msg>
<status status="PASS" starttime="20201030 11:51:25.426" endtime="20201030 11:51:25.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.450" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:25.448" endtime="20201030 11:51:25.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.456" level="INFO">VALUE: [0.00041975000000000345, 0.000419764000000003, 0.0004197780000000026, 0.0004197639999999961, 0.00043902800000000103, 0.0004197639999999961, 0.0004197079999999978, 0.000419764000000003, 0.000419764000000003, 0.0004197499999999965, 0.00041972299999999685, 0.0004197780000000026, 0.000419764000000003, 0.0004197639999999961, 0.0004197639999999961, 0.0004197220000000043, 0.0004197780000000026, 0.0004197639999999961, 0.000419764000000003, 0.000419764000000003, 0.00041980600000000173, 0.0004197639999999961, 0.0004197910000000027, 0.000419764000000003, 0.0004197639999999961, 0.0004197499999999965, 0.000419764000000003, 0.0004197079999999978, 0.0004197769999999962, 0.0004197089999999973, 0.0004197780000000026, 0.000419764000000003, 0.00041977799999999565, 0.0004197629999999966, 0.0004197780000000026, 0.0004197499999999965, 0.00041977799999999565, 0.0004197780000000026, 0.0004197780000000026, 0.0004197629999999966, 0.0004197499999999965, 0.00041973700000000336, 0.00041979200000000216, 0.0004197639999999961, 0.0004197639999999961, 0.0004197770000000031, 0.0004196949999999977, 0.0004198189999999949, 0.0004197639999999961, 0.0004197780000000026]</msg>
<status status="PASS" starttime="20201030 11:51:25.452" endtime="20201030 11:51:25.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.441" endtime="20201030 11:51:25.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.981" endtime="20201030 11:51:25.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.950" endtime="20201030 11:51:25.461"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.467" endtime="20201030 11:51:25.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.463" endtime="20201030 11:51:25.491"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.513" endtime="20201030 11:51:25.546"></status>
</kw>
<msg timestamp="20201030 11:51:25.547" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.510" endtime="20201030 11:51:25.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.554" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.550" endtime="20201030 11:51:25.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.556" endtime="20201030 11:51:25.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.502" endtime="20201030 11:51:25.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.496" endtime="20201030 11:51:25.564"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.581" endtime="20201030 11:51:25.940"></status>
</kw>
<msg timestamp="20201030 11:51:25.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036613472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037055528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.578" endtime="20201030 11:51:25.947"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036613472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037055528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.949" endtime="20201030 11:51:25.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.969" endtime="20201030 11:51:25.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.570" endtime="20201030 11:51:25.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.565" endtime="20201030 11:51:25.976"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:25.986" level="INFO">${PHILIP_RES} = [{'diff': 0.00044205599999999623}, {'diff': 0.0004420279999999971}, {'diff': 0.00044207000000000274}, {'diff': 0.000442111000000002}, {'diff': 0.0004420550000000037}, {'diff': 0.00044206900000000326},...</msg>
<status status="PASS" starttime="20201030 11:51:25.978" endtime="20201030 11:51:25.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.997" level="INFO">${RESULT} = {'diff': [0.00044205599999999623, 0.0004420279999999971, 0.00044207000000000274, 0.000442111000000002, 0.0004420550000000037, 0.00044206900000000326, 0.00044208300000000283, 0.0004420410000000041, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:25.988" endtime="20201030 11:51:25.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.008" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:26.006" endtime="20201030 11:51:26.009"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.014" level="INFO">VALUE: [0.00044205599999999623, 0.0004420279999999971, 0.00044207000000000274, 0.000442111000000002, 0.0004420550000000037, 0.00044206900000000326, 0.00044208300000000283, 0.0004420410000000041, 0.0004420550000000037, 0.00044206900000000326, 0.00044205599999999623, 0.00044204199999999666, 0.00044208399999999537, 0.0004420829999999959, 0.0004420699999999958, 0.0004420699999999958, 0.00044205599999999623, 0.00044206900000000326, 0.00044206900000000326, 0.0004420550000000037, 0.0004420410000000041, 0.0004420550000000037, 0.00044201400000000446, 0.00044205600000000317, 0.00044207000000000274, 0.00044205599999999623, 0.0004420699999999958, 0.00044205599999999623, 0.00044205599999999623, 0.0004420139999999975, 0.0004420689999999963, 0.00044201299999999805, 0.000457388000000003, 0.00044207000000000274, 0.0004420410000000041, 0.0004420550000000037, 0.00044206900000000326, 0.00044206900000000326, 0.00044205499999999676, 0.0004420829999999959, 0.00044209699999999547, 0.00044205599999999623, 0.00044211200000000145, 0.00044208399999999537, 0.00044207000000000274, 0.00044205600000000317, 0.00044205600000000317, 0.00044205600000000317, 0.00044206900000000326, 0.0004420410000000041]</msg>
<status status="PASS" starttime="20201030 11:51:26.011" endtime="20201030 11:51:26.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.999" endtime="20201030 11:51:26.017"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.492" endtime="20201030 11:51:26.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.462" endtime="20201030 11:51:26.019"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.026" endtime="20201030 11:51:26.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.022" endtime="20201030 11:51:26.050"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.072" endtime="20201030 11:51:26.106"></status>
</kw>
<msg timestamp="20201030 11:51:26.108" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.068" endtime="20201030 11:51:26.108"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.114" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.110" endtime="20201030 11:51:26.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.117" endtime="20201030 11:51:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.061" endtime="20201030 11:51:26.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.055" endtime="20201030 11:51:26.124"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.141" endtime="20201030 11:51:26.502"></status>
</kw>
<msg timestamp="20201030 11:51:26.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036641111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037105986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.138" endtime="20201030 11:51:26.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036641111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037105986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.512" endtime="20201030 11:51:26.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.531" endtime="20201030 11:51:26.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.130" endtime="20201030 11:51:26.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.125" endtime="20201030 11:51:26.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:26.548" level="INFO">${PHILIP_RES} = [{'diff': 0.0004648750000000035}, {'diff': 0.00046493100000000176}, {'diff': 0.0004649030000000026}, {'diff': 0.0004649030000000026}, {'diff': 0.0004649170000000022}, {'diff': 0.0004649300000000023}, ...</msg>
<status status="PASS" starttime="20201030 11:51:26.540" endtime="20201030 11:51:26.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.557" level="INFO">${RESULT} = {'diff': [0.0004648750000000035, 0.00046493100000000176, 0.0004649030000000026, 0.0004649030000000026, 0.0004649170000000022, 0.0004649300000000023, 0.0004649030000000026, 0.0004649170000000022, 0.000...</msg>
<status status="PASS" starttime="20201030 11:51:26.550" endtime="20201030 11:51:26.558"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.568" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:26.566" endtime="20201030 11:51:26.569"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.574" level="INFO">VALUE: [0.0004648750000000035, 0.00046493100000000176, 0.0004649030000000026, 0.0004649030000000026, 0.0004649170000000022, 0.0004649300000000023, 0.0004649030000000026, 0.0004649170000000022, 0.0004649170000000022, 0.000464972000000001, 0.0004649300000000023, 0.0004649170000000022, 0.0004649590000000009, 0.0004649160000000027, 0.00046494400000000186, 0.0004649030000000026, 0.0004649030000000026, 0.0004648889999999961, 0.00046491699999999525, 0.0004649170000000022, 0.0004648889999999961, 0.00046491699999999525, 0.0004649859999999936, 0.0004649029999999957, 0.0004648889999999961, 0.0004649170000000022, 0.00046497199999999406, 0.00048823599999999606, 0.0004649170000000022, 0.00046497199999999406, 0.00046492999999999535, 0.0004649029999999957, 0.0004649029999999957, 0.0004649159999999958, 0.00046488799999999664, 0.00046491699999999525, 0.00046491699999999525, 0.0004648889999999961, 0.0004648469999999974, 0.0004648889999999961, 0.00046491699999999525, 0.0004649029999999957, 0.0004649159999999958, 0.00046491699999999525, 0.00046493100000000176, 0.0004649029999999957, 0.0004649159999999958, 0.00046491699999999525, 0.00046491699999999525, 0.0004649309999999948]</msg>
<status status="PASS" starttime="20201030 11:51:26.571" endtime="20201030 11:51:26.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.559" endtime="20201030 11:51:26.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.051" endtime="20201030 11:51:26.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.020" endtime="20201030 11:51:26.579"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.585" endtime="20201030 11:51:26.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.581" endtime="20201030 11:51:26.609"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.631" endtime="20201030 11:51:26.670"></status>
</kw>
<msg timestamp="20201030 11:51:26.671" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.628" endtime="20201030 11:51:26.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.678" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.674" endtime="20201030 11:51:26.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.680" endtime="20201030 11:51:26.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.620" endtime="20201030 11:51:26.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.615" endtime="20201030 11:51:26.688"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.705" endtime="20201030 11:51:27.064"></status>
</kw>
<msg timestamp="20201030 11:51:27.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038805569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039293917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.702" endtime="20201030 11:51:27.072"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.090" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038805569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039293917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.074" endtime="20201030 11:51:27.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.093" endtime="20201030 11:51:27.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.694" endtime="20201030 11:51:27.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.689" endtime="20201030 11:51:27.100"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:27.110" level="INFO">${PHILIP_RES} = [{'diff': 0.0004883479999999996}, {'diff': 0.0004883470000000001}, {'diff': 0.0004883470000000001}, {'diff': 0.0004883609999999997}, {'diff': 0.0004883470000000001}, {'diff': 0.000488319000000001}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:27.102" endtime="20201030 11:51:27.110"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.120" level="INFO">${RESULT} = {'diff': [0.0004883479999999996, 0.0004883470000000001, 0.0004883470000000001, 0.0004883609999999997, 0.0004883470000000001, 0.000488319000000001, 0.0004883330000000005, 0.0004883200000000004, 0.00048...</msg>
<status status="PASS" starttime="20201030 11:51:27.112" endtime="20201030 11:51:27.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.131" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:27.128" endtime="20201030 11:51:27.131"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.136" level="INFO">VALUE: [0.0004883479999999996, 0.0004883470000000001, 0.0004883470000000001, 0.0004883609999999997, 0.0004883470000000001, 0.000488319000000001, 0.0004883330000000005, 0.0004883200000000004, 0.0004883479999999996, 0.0004883479999999996, 0.000488334, 0.0004883329999999936, 0.0004883470000000001, 0.0004883470000000001, 0.0004883330000000005, 0.0004883470000000001, 0.000488334, 0.0004987229999999995, 0.0004883470000000001, 0.0004883470000000001, 0.0004883619999999991, 0.0004883329999999936, 0.0004883470000000001, 0.0004883749999999992, 0.0004883749999999992, 0.0004883330000000005, 0.000488318999999994, 0.0004883749999999992, 0.000488334, 0.0004883479999999996, 0.0004882909999999949, 0.0004883330000000005, 0.0004883749999999992, 0.0004883609999999997, 0.0004883470000000001, 0.0004883470000000001, 0.0004883470000000001, 0.0004882920000000013, 0.0004883479999999996, 0.0004883470000000001, 0.0004882769999999953, 0.0004883609999999997, 0.0004883470000000001, 0.0004883609999999997, 0.0004883470000000001, 0.0004883480000000065, 0.0004883479999999996, 0.000488333999999993, 0.0004883609999999927, 0.0004883470000000001]</msg>
<status status="PASS" starttime="20201030 11:51:27.133" endtime="20201030 11:51:27.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.121" endtime="20201030 11:51:27.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.611" endtime="20201030 11:51:27.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.580" endtime="20201030 11:51:27.141"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.148" endtime="20201030 11:51:27.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.144" endtime="20201030 11:51:27.171"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.195" endtime="20201030 11:51:27.233"></status>
</kw>
<msg timestamp="20201030 11:51:27.234" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.192" endtime="20201030 11:51:27.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.241" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.237" endtime="20201030 11:51:27.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.243" endtime="20201030 11:51:27.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.184" endtime="20201030 11:51:27.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.179" endtime="20201030 11:51:27.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.268" endtime="20201030 11:51:27.626"></status>
</kw>
<msg timestamp="20201030 11:51:27.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038971736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.265" endtime="20201030 11:51:27.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038459403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.038971736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.635" endtime="20201030 11:51:27.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.655" endtime="20201030 11:51:27.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.257" endtime="20201030 11:51:27.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.252" endtime="20201030 11:51:27.662"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:27.672" level="INFO">${PHILIP_RES} = [{'diff': 0.0005123329999999968}, {'diff': 0.0005123050000000046}, {'diff': 0.0005123049999999976}, {'diff': 0.0005123190000000041}, {'diff': 0.0005123329999999968}, {'diff': 0.0005123340000000032}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.664" endtime="20201030 11:51:27.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.681" level="INFO">${RESULT} = {'diff': [0.0005123329999999968, 0.0005123050000000046, 0.0005123049999999976, 0.0005123190000000041, 0.0005123329999999968, 0.0005123340000000032, 0.0005123339999999962, 0.0005305970000000007, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:51:27.674" endtime="20201030 11:51:27.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.692" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:27.690" endtime="20201030 11:51:27.693"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.700" level="INFO">VALUE: [0.0005123329999999968, 0.0005123050000000046, 0.0005123049999999976, 0.0005123190000000041, 0.0005123329999999968, 0.0005123340000000032, 0.0005123339999999962, 0.0005305970000000007, 0.0005123469999999963, 0.0005123330000000037, 0.0005123189999999972, 0.0005123330000000037, 0.0005123329999999968, 0.0005123610000000028, 0.0005123339999999962, 0.000512277999999998, 0.0005124170000000011, 0.0005123200000000036, 0.0005123329999999968, 0.0005122499999999988, 0.0005123610000000028, 0.0005123329999999968, 0.000512389000000002, 0.0005123189999999972, 0.0005123190000000041, 0.0005123199999999967, 0.0005123200000000036, 0.0005123339999999962, 0.0005123340000000032, 0.0005123329999999968, 0.0005123340000000032, 0.0005123329999999968, 0.0005122639999999984, 0.0005123330000000037, 0.0005123329999999968, 0.0005123470000000033, 0.0005123329999999968, 0.0005123200000000036, 0.0005123339999999962, 0.0005123340000000032, 0.0005123339999999962, 0.0005123330000000037, 0.0005123610000000028, 0.0005123749999999955, 0.000512388999999995, 0.0005123330000000037, 0.0005123329999999898, 0.0005123189999999972, 0.0005123330000000037, 0.0005123340000000032]</msg>
<status status="PASS" starttime="20201030 11:51:27.695" endtime="20201030 11:51:27.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.683" endtime="20201030 11:51:27.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.173" endtime="20201030 11:51:27.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.142" endtime="20201030 11:51:27.705"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.711" endtime="20201030 11:51:27.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.707" endtime="20201030 11:51:27.735"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.757" endtime="20201030 11:51:27.796"></status>
</kw>
<msg timestamp="20201030 11:51:27.798" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.754" endtime="20201030 11:51:27.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.804" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.800" endtime="20201030 11:51:27.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.806" endtime="20201030 11:51:27.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.746" endtime="20201030 11:51:27.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.741" endtime="20201030 11:51:27.814"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.831" endtime="20201030 11:51:28.189"></status>
</kw>
<msg timestamp="20201030 11:51:28.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03721575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:27.828" endtime="20201030 11:51:28.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036678847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03721575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:28.199" endtime="20201030 11:51:28.216"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.218" endtime="20201030 11:51:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.820" endtime="20201030 11:51:28.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.815" endtime="20201030 11:51:28.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:28.235" level="INFO">${PHILIP_RES} = [{'diff': 0.0005369029999999983}, {'diff': 0.0005369169999999979}, {'diff': 0.000536958000000004}, {'diff': 0.0005369030000000052}, {'diff': 0.0005369300000000049}, {'diff': 0.0005369169999999979}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:28.227" endtime="20201030 11:51:28.235"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.246" level="INFO">${RESULT} = {'diff': [0.0005369029999999983, 0.0005369169999999979, 0.000536958000000004, 0.0005369030000000052, 0.0005369300000000049, 0.0005369169999999979, 0.0005369439999999975, 0.0005369159999999984, 0.00053...</msg>
<status status="PASS" starttime="20201030 11:51:28.237" endtime="20201030 11:51:28.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.257" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:28.255" endtime="20201030 11:51:28.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.263" level="INFO">VALUE: [0.0005369029999999983, 0.0005369169999999979, 0.000536958000000004, 0.0005369030000000052, 0.0005369300000000049, 0.0005369169999999979, 0.0005369439999999975, 0.0005369159999999984, 0.0005369169999999979, 0.0005368749999999992, 0.0005368889999999987, 0.0005369030000000052, 0.0005368879999999993, 0.0005369309999999974, 0.0005369579999999971, 0.0005369019999999988, 0.0005368889999999987, 0.0005369159999999984, 0.0005369029999999983, 0.0005369720000000036, 0.0005369160000000053, 0.0005369029999999983, 0.000536929999999998, 0.0005369159999999984, 0.0005369029999999983, 0.0005369029999999983, 0.0005368889999999987, 0.0005368339999999999, 0.0005369300000000049, 0.0005369029999999983, 0.0005369169999999979, 0.0005369029999999983, 0.0005368889999999987, 0.0005368879999999993, 0.0005368609999999996, 0.0005368339999999999, 0.0005369020000000058, 0.0005369169999999979, 0.0005369029999999983, 0.0005369309999999974, 0.0005369029999999983, 0.0005368330000000004, 0.0005369029999999983, 0.0005369030000000052, 0.0005369030000000052, 0.0005369029999999914, 0.0005369860000000032, 0.000536944999999997, 0.0005369030000000052, 0.0005369019999999919]</msg>
<status status="PASS" starttime="20201030 11:51:28.260" endtime="20201030 11:51:28.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.248" endtime="20201030 11:51:28.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.736" endtime="20201030 11:51:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.706" endtime="20201030 11:51:28.268"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.275" endtime="20201030 11:51:28.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.271" endtime="20201030 11:51:28.299"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.321" endtime="20201030 11:51:28.360"></status>
</kw>
<msg timestamp="20201030 11:51:28.361" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.317" endtime="20201030 11:51:28.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.368" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.364" endtime="20201030 11:51:28.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.370" endtime="20201030 11:51:28.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.310" endtime="20201030 11:51:28.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.304" endtime="20201030 11:51:28.378"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.395" endtime="20201030 11:51:28.733"></status>
</kw>
<msg timestamp="20201030 11:51:28.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036558931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037121056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.392" endtime="20201030 11:51:28.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.745" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036558931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037121056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.738" endtime="20201030 11:51:28.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.746" endtime="20201030 11:51:28.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.384" endtime="20201030 11:51:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.379" endtime="20201030 11:51:28.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:28.754" level="INFO">${PHILIP_RES} = [{'diff': 0.0005621249999999967}, {'diff': 0.0005620140000000065}, {'diff': 0.0005620419999999987}, {'diff': 0.0005620409999999992}, {'diff': 0.0005620139999999996}, {'diff': 0.0005620419999999987}, {...</msg>
<status status="PASS" starttime="20201030 11:51:28.750" endtime="20201030 11:51:28.754"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.759" level="INFO">${RESULT} = {'diff': [0.0005621249999999967, 0.0005620140000000065, 0.0005620419999999987, 0.0005620409999999992, 0.0005620139999999996, 0.0005620419999999987, 0.0005620279999999991, 0.0005620279999999991, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:51:28.755" endtime="20201030 11:51:28.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.765" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:28.764" endtime="20201030 11:51:28.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.767" level="INFO">VALUE: [0.0005621249999999967, 0.0005620140000000065, 0.0005620419999999987, 0.0005620409999999992, 0.0005620139999999996, 0.0005620419999999987, 0.0005620279999999991, 0.0005620279999999991, 0.0005620420000000056, 0.000562, 0.0005620279999999991, 0.0005620139999999996, 0.0005620139999999996, 0.0005619860000000004, 0.0005620279999999991, 0.0005620139999999996, 0.0005620279999999991, 0.0005620549999999988, 0.0005620139999999996, 0.0005620279999999991, 0.0005620269999999997, 0.000562, 0.0005620420000000056, 0.0005620409999999992, 0.0005620279999999991, 0.0005620559999999983, 0.0005620139999999996, 0.0005620549999999988, 0.0005620140000000065, 0.0005620550000000057, 0.0005620130000000001, 0.0005620139999999996, 0.0005620139999999996, 0.0005620549999999988, 0.0005620829999999979, 0.0005620280000000061, 0.0005620279999999991, 0.0005620269999999997, 0.0005620419999999987, 0.0005620139999999996, 0.0005620139999999996, 0.0005620279999999991, 0.0005620140000000065, 0.000581375000000002, 0.0005620419999999987, 0.0005620270000000066, 0.0005620419999999987, 0.0005621109999999901, 0.0005620409999999992, 0.0005620280000000061]</msg>
<status status="PASS" starttime="20201030 11:51:28.766" endtime="20201030 11:51:28.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.760" endtime="20201030 11:51:28.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.300" endtime="20201030 11:51:28.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.269" endtime="20201030 11:51:28.770"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.773" endtime="20201030 11:51:28.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.771" endtime="20201030 11:51:28.793"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.803" endtime="20201030 11:51:28.842"></status>
</kw>
<msg timestamp="20201030 11:51:28.843" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.802" endtime="20201030 11:51:28.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.846" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.844" endtime="20201030 11:51:28.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.847" endtime="20201030 11:51:28.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.798" endtime="20201030 11:51:28.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.796" endtime="20201030 11:51:28.851"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.859" endtime="20201030 11:51:29.216"></status>
</kw>
<msg timestamp="20201030 11:51:29.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021043028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.857" endtime="20201030 11:51:29.224"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020455319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021043028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.226" endtime="20201030 11:51:29.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.245" endtime="20201030 11:51:29.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.854" endtime="20201030 11:51:29.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.851" endtime="20201030 11:51:29.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:29.262" level="INFO">${PHILIP_RES} = [{'diff': 0.0005877089999999988}, {'diff': 0.0005877920000000002}, {'diff': 0.0005877500000000015}, {'diff': 0.0005877359999999984}, {'diff': 0.0005877359999999984}, {'diff': 0.0006075700000000017}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.254" endtime="20201030 11:51:29.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.272" level="INFO">${RESULT} = {'diff': [0.0005877089999999988, 0.0005877920000000002, 0.0005877500000000015, 0.0005877359999999984, 0.0005877359999999984, 0.0006075700000000017, 0.0005877359999999984, 0.0005877219999999989, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:51:29.264" endtime="20201030 11:51:29.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.283" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:29.281" endtime="20201030 11:51:29.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.289" level="INFO">VALUE: [0.0005877089999999988, 0.0005877920000000002, 0.0005877500000000015, 0.0005877359999999984, 0.0005877359999999984, 0.0006075700000000017, 0.0005877359999999984, 0.0005877219999999989, 0.0005877360000000019, 0.0005877359999999984, 0.000587764000000001, 0.0005877500000000015, 0.0005877359999999984, 0.0005877360000000019, 0.0005877220000000023, 0.000587749999999998, 0.0005877500000000015, 0.0005877780000000006, 0.0005876949999999992, 0.0005878050000000037, 0.0005877639999999976, 0.0005877639999999976, 0.000587749999999998, 0.0005877359999999984, 0.0005876800000000001, 0.0005877079999999993, 0.0005877229999999983, 0.0005877089999999988, 0.0005877639999999976, 0.0005877909999999972, 0.0005877500000000049, 0.0005877640000000045, 0.0005877359999999984, 0.0005877359999999984, 0.0005877369999999979, 0.0005877359999999984, 0.0005877360000000054, 0.0005877640000000045, 0.0005877359999999984, 0.000587749999999998, 0.0005877359999999984, 0.0005877360000000054, 0.0005877770000000046, 0.000587749999999998, 0.000587749999999998, 0.0005876939999999997, 0.000587749999999998, 0.0005877360000000054, 0.0005877500000000049, 0.0005877359999999984]</msg>
<status status="PASS" starttime="20201030 11:51:29.285" endtime="20201030 11:51:29.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.274" endtime="20201030 11:51:29.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.794" endtime="20201030 11:51:29.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.770" endtime="20201030 11:51:29.294"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.300" endtime="20201030 11:51:29.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.296" endtime="20201030 11:51:29.324"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.346" endtime="20201030 11:51:29.390"></status>
</kw>
<msg timestamp="20201030 11:51:29.392" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.343" endtime="20201030 11:51:29.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.398" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.394" endtime="20201030 11:51:29.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.401" endtime="20201030 11:51:29.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.335" endtime="20201030 11:51:29.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.330" endtime="20201030 11:51:29.408"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.425" endtime="20201030 11:51:29.783"></status>
</kw>
<msg timestamp="20201030 11:51:29.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038428889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039042903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.422" endtime="20201030 11:51:29.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038428889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.039042903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.792" endtime="20201030 11:51:29.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.812" endtime="20201030 11:51:29.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.414" endtime="20201030 11:51:29.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.409" endtime="20201030 11:51:29.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:29.828" level="INFO">${PHILIP_RES} = [{'diff': 0.0006140139999999961}, {'diff': 0.0006140279999999956}, {'diff': 0.0006139999999999965}, {'diff': 0.0006140139999999961}, {'diff': 0.0006140279999999956}, {'diff': 0.0006140549999999953}, {...</msg>
<status status="PASS" starttime="20201030 11:51:29.821" endtime="20201030 11:51:29.829"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.838" level="INFO">${RESULT} = {'diff': [0.0006140139999999961, 0.0006140279999999956, 0.0006139999999999965, 0.0006140139999999961, 0.0006140279999999956, 0.0006140549999999953, 0.0006140129999999966, 0.000614014000000003, 0.00061...</msg>
<status status="PASS" starttime="20201030 11:51:29.831" endtime="20201030 11:51:29.839"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.849" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:29.847" endtime="20201030 11:51:29.850"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.855" level="INFO">VALUE: [0.0006140139999999961, 0.0006140279999999956, 0.0006139999999999965, 0.0006140139999999961, 0.0006140279999999956, 0.0006140549999999953, 0.0006140129999999966, 0.000614014000000003, 0.0006140000000000034, 0.0006140000000000034, 0.0006140000000000034, 0.000614014000000003, 0.0006140280000000026, 0.000614014000000003, 0.000614014000000003, 0.0006140130000000035, 0.0006139870000000033, 0.0006140280000000026, 0.0006140280000000026, 0.0006139999999999965, 0.0006139859999999969, 0.0006140139999999961, 0.0006293339999999953, 0.0006139999999999965, 0.0006140139999999961, 0.0006139999999999965, 0.0006140279999999956, 0.0006140139999999961, 0.0006139999999999965, 0.0006140279999999956, 0.000614014000000003, 0.0006140130000000035, 0.0006140000000000034, 0.000614014000000003, 0.0006140280000000026, 0.0006140000000000034, 0.0006140000000000034, 0.0006140139999999961, 0.0006139720000000043, 0.0006140419999999952, 0.0006140129999999966, 0.0006139859999999969, 0.0006139999999999896, 0.0006139859999999969, 0.0006140550000000022, 0.0006140690000000087, 0.0006140139999999961, 0.0006140420000000091, 0.0006140139999999961, 0.0006140140000000099]</msg>
<status status="PASS" starttime="20201030 11:51:29.852" endtime="20201030 11:51:29.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.840" endtime="20201030 11:51:29.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.325" endtime="20201030 11:51:29.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.295" endtime="20201030 11:51:29.860"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.867" endtime="20201030 11:51:29.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.863" endtime="20201030 11:51:29.890"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.914" endtime="20201030 11:51:29.958"></status>
</kw>
<msg timestamp="20201030 11:51:29.960" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.911" endtime="20201030 11:51:29.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.967" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.962" endtime="20201030 11:51:29.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.969" endtime="20201030 11:51:29.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.903" endtime="20201030 11:51:29.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.898" endtime="20201030 11:51:29.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.996" endtime="20201030 11:51:30.353"></status>
</kw>
<msg timestamp="20201030 11:51:30.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038468889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03910975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:29.992" endtime="20201030 11:51:30.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038468889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.03910975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:30.363" endtime="20201030 11:51:30.380"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.382" endtime="20201030 11:51:30.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.984" endtime="20201030 11:51:30.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.979" endtime="20201030 11:51:30.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:30.399" level="INFO">${PHILIP_RES} = [{'diff': 0.0006408609999999995}, {'diff': 0.0006408469999999999}, {'diff': 0.0006408609999999995}, {'diff': 0.0006408609999999995}, {'diff': 0.0006408479999999994}, {'diff': 0.0006408609999999995}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.391" endtime="20201030 11:51:30.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.409" level="INFO">${RESULT} = {'diff': [0.0006408609999999995, 0.0006408469999999999, 0.0006408609999999995, 0.0006408609999999995, 0.0006408479999999994, 0.0006408609999999995, 0.0006408469999999999, 0.0006587220000000005, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:30.401" endtime="20201030 11:51:30.409"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.420" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:30.418" endtime="20201030 11:51:30.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.427" level="INFO">VALUE: [0.0006408609999999995, 0.0006408469999999999, 0.0006408609999999995, 0.0006408609999999995, 0.0006408479999999994, 0.0006408609999999995, 0.0006408469999999999, 0.0006587220000000005, 0.0006408479999999994, 0.0006408749999999991, 0.0006408469999999999, 0.0006408609999999995, 0.0006408749999999991, 0.0006408339999999998, 0.0006408609999999995, 0.0006408749999999991, 0.0006408330000000004, 0.0006408469999999999, 0.0006408469999999999, 0.0006408889999999987, 0.000640861999999999, 0.0006408889999999987, 0.0006408889999999987, 0.0006408879999999992, 0.0006408050000000012, 0.000640861999999999, 0.0006408749999999991, 0.0006408889999999987, 0.0006408609999999995, 0.0006408469999999999, 0.0006408339999999998, 0.0006408749999999991, 0.0006408200000000003, 0.000640875000000006, 0.0006408609999999995, 0.0006408610000000065, 0.0006408469999999999, 0.0006408880000000061, 0.0006408609999999926, 0.0006408749999999991, 0.0006408469999999999, 0.0006408469999999999, 0.0006408059999999938, 0.0006408469999999999, 0.0006408749999999991, 0.0006408469999999999, 0.0006408609999999926, 0.0006408610000000065, 0.0006408610000000065, 0.0006408620000000059]</msg>
<status status="PASS" starttime="20201030 11:51:30.422" endtime="20201030 11:51:30.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.411" endtime="20201030 11:51:30.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.892" endtime="20201030 11:51:30.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.861" endtime="20201030 11:51:30.433"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.439" endtime="20201030 11:51:30.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.435" endtime="20201030 11:51:30.463"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.485" endtime="20201030 11:51:30.531"></status>
</kw>
<msg timestamp="20201030 11:51:30.532" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.481" endtime="20201030 11:51:30.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.538" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.534" endtime="20201030 11:51:30.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.541" endtime="20201030 11:51:30.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.474" endtime="20201030 11:51:30.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.468" endtime="20201030 11:51:30.548"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.566" endtime="20201030 11:51:30.923"></status>
</kw>
<msg timestamp="20201030 11:51:30.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036888375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037556667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.562" endtime="20201030 11:51:30.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036888375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037556667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.933" endtime="20201030 11:51:30.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.952" endtime="20201030 11:51:30.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.554" endtime="20201030 11:51:30.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.550" endtime="20201030 11:51:30.959"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:30.969" level="INFO">${PHILIP_RES} = [{'diff': 0.0006682920000000009}, {'diff': 0.0006682639999999948}, {'diff': 0.0006682639999999948}, {'diff': 0.0006682640000000017}, {'diff': 0.0006682360000000026}, {'diff': 0.0006682500000000022}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.961" endtime="20201030 11:51:30.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.984" level="INFO">${RESULT} = {'diff': [0.0006682920000000009, 0.0006682639999999948, 0.0006682639999999948, 0.0006682640000000017, 0.0006682360000000026, 0.0006682500000000022, 0.0006682630000000023, 0.0006682359999999957, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:30.971" endtime="20201030 11:51:30.985"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.996" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:30.993" endtime="20201030 11:51:30.997"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.002" level="INFO">VALUE: [0.0006682920000000009, 0.0006682639999999948, 0.0006682639999999948, 0.0006682640000000017, 0.0006682360000000026, 0.0006682500000000022, 0.0006682630000000023, 0.0006682359999999957, 0.0006682639999999948, 0.0006682500000000022, 0.0006682640000000017, 0.0006682640000000017, 0.0006682640000000017, 0.0006682769999999949, 0.0006682779999999944, 0.0006682640000000017, 0.0006682640000000017, 0.0006682630000000023, 0.0006682780000000013, 0.0006682500000000022, 0.0006682769999999949, 0.0006682640000000017, 0.0006682780000000013, 0.0006682640000000017, 0.0006682640000000017, 0.0006682640000000017, 0.0006682920000000009, 0.0006682640000000017, 0.0006682640000000017, 0.0006682640000000017, 0.0006682640000000017, 0.0006682769999999949, 0.0006682640000000017, 0.000668193999999997, 0.0006890979999999991, 0.0006682640000000017, 0.0006682920000000009, 0.0006682499999999952, 0.0006682780000000083, 0.0006682640000000017, 0.0006682920000000009, 0.0006682630000000023, 0.0006683610000000062, 0.0006682499999999952, 0.0006682640000000017, 0.0006682500000000091, 0.0006682640000000017, 0.0006682640000000017, 0.0006682910000000014, 0.0006682639999999879]</msg>
<status status="PASS" starttime="20201030 11:51:30.998" endtime="20201030 11:51:31.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.986" endtime="20201030 11:51:31.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.464" endtime="20201030 11:51:31.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.434" endtime="20201030 11:51:31.008"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.014" endtime="20201030 11:51:31.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.010" endtime="20201030 11:51:31.039"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.061" endtime="20201030 11:51:31.108"></status>
</kw>
<msg timestamp="20201030 11:51:31.109" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.057" endtime="20201030 11:51:31.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.116" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.112" endtime="20201030 11:51:31.117"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.119" endtime="20201030 11:51:31.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.050" endtime="20201030 11:51:31.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.044" endtime="20201030 11:51:31.126"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.143" endtime="20201030 11:51:31.502"></status>
</kw>
<msg timestamp="20201030 11:51:31.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037088972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037785236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.140" endtime="20201030 11:51:31.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037088972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037785236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.511" endtime="20201030 11:51:31.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.530" endtime="20201030 11:51:31.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.132" endtime="20201030 11:51:31.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.127" endtime="20201030 11:51:31.538"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:31.547" level="INFO">${PHILIP_RES} = [{'diff': 0.000696264000000002}, {'diff': 0.0006962500000000024}, {'diff': 0.000696263999999995}, {'diff': 0.0006962770000000021}, {'diff': 0.000696263999999995}, {'diff': 0.0006962500000000024}, {'di...</msg>
<status status="PASS" starttime="20201030 11:51:31.539" endtime="20201030 11:51:31.548"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.559" level="INFO">${RESULT} = {'diff': [0.000696264000000002, 0.0006962500000000024, 0.000696263999999995, 0.0006962770000000021, 0.000696263999999995, 0.0006962500000000024, 0.0006962360000000029, 0.0007115969999999944, 0.0006962...</msg>
<status status="PASS" starttime="20201030 11:51:31.549" endtime="20201030 11:51:31.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.570" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:31.568" endtime="20201030 11:51:31.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.576" level="INFO">VALUE: [0.000696264000000002, 0.0006962500000000024, 0.000696263999999995, 0.0006962770000000021, 0.000696263999999995, 0.0006962500000000024, 0.0006962360000000029, 0.0007115969999999944, 0.0006962500000000024, 0.0006962499999999955, 0.0006962360000000029, 0.0006962500000000024, 0.000696263999999995, 0.000696181000000004, 0.0006962920000000011, 0.000696264000000002, 0.0006962360000000029, 0.0006962499999999955, 0.0006962360000000029, 0.0006962629999999956, 0.0006962500000000024, 0.000696264000000002, 0.0006962779999999946, 0.0006962500000000024, 0.0006962779999999946, 0.0006962780000000016, 0.0006962500000000024, 0.0006962359999999959, 0.0006962780000000016, 0.0006963200000000003, 0.0006962500000000024, 0.000696264000000002, 0.0006962499999999955, 0.0006963060000000007, 0.0006962230000000028, 0.0006962639999999881, 0.0006962500000000094, 0.0006961940000000111, 0.0006962080000000037, 0.0006963060000000076, 0.0006962369999999884, 0.000696264000000002, 0.0006962630000000025, 0.000696264000000002, 0.0006962219999999963, 0.0006962499999999955, 0.0006962779999999946, 0.0006962499999999955, 0.000696264000000002, 0.000696264000000002]</msg>
<status status="PASS" starttime="20201030 11:51:31.572" endtime="20201030 11:51:31.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.561" endtime="20201030 11:51:31.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.040" endtime="20201030 11:51:31.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.009" endtime="20201030 11:51:31.581"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.587" endtime="20201030 11:51:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.583" endtime="20201030 11:51:31.611"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.633" endtime="20201030 11:51:31.682"></status>
</kw>
<msg timestamp="20201030 11:51:31.683" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.629" endtime="20201030 11:51:31.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.690" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.686" endtime="20201030 11:51:31.691"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.692" endtime="20201030 11:51:31.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.622" endtime="20201030 11:51:31.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.616" endtime="20201030 11:51:31.700"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.717" endtime="20201030 11:51:32.077"></status>
</kw>
<msg timestamp="20201030 11:51:32.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037076597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037801417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.714" endtime="20201030 11:51:32.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037076597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037801417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.086" endtime="20201030 11:51:32.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.105" endtime="20201030 11:51:32.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.706" endtime="20201030 11:51:32.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.701" endtime="20201030 11:51:32.109"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:32.113" level="INFO">${PHILIP_RES} = [{'diff': 0.0007248199999999941}, {'diff': 0.0007248060000000014}, {'diff': 0.0007248189999999946}, {'diff': 0.000724805000000002}, {'diff': 0.0007248199999999941}, {'diff': 0.000724820000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:32.110" endtime="20201030 11:51:32.113"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.118" level="INFO">${RESULT} = {'diff': [0.0007248199999999941, 0.0007248060000000014, 0.0007248189999999946, 0.000724805000000002, 0.0007248199999999941, 0.000724820000000001, 0.000724804999999995, 0.0007248190000000015, 0.0007248...</msg>
<status status="PASS" starttime="20201030 11:51:32.114" endtime="20201030 11:51:32.118"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.123" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:32.122" endtime="20201030 11:51:32.123"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.126" level="INFO">VALUE: [0.0007248199999999941, 0.0007248060000000014, 0.0007248189999999946, 0.000724805000000002, 0.0007248199999999941, 0.000724820000000001, 0.000724804999999995, 0.0007248190000000015, 0.0007248059999999945, 0.0007248060000000014, 0.0007248480000000002, 0.0007247910000000024, 0.000724804999999995, 0.0007247920000000019, 0.0007247919999999949, 0.000724805000000002, 0.0007248189999999946, 0.0007247640000000027, 0.0007248059999999945, 0.0007248190000000015, 0.0007247909999999955, 0.0007247640000000027, 0.0007247919999999949, 0.000724820000000001, 0.000724804999999995, 0.000724805000000002, 0.0007247919999999949, 0.0007247780000000023, 0.0007247909999999955, 0.0007248330000000011, 0.0007380830000000005, 0.0007248330000000011, 0.0007247779999999954, 0.0007248610000000003, 0.0007247910000000024, 0.0007248059999999945, 0.0007247920000000019, 0.000724820000000001, 0.000724804999999995, 0.000724804999999995, 0.0007248059999999945, 0.0007248059999999945, 0.000724804999999995, 0.0007247769999999959, 0.0007248060000000084, 0.0007248059999999945, 0.0007247780000000092, 0.0007248190000000015, 0.0007247910000000024, 0.000724791999999988]</msg>
<status status="PASS" starttime="20201030 11:51:32.124" endtime="20201030 11:51:32.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.119" endtime="20201030 11:51:32.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.612" endtime="20201030 11:51:32.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.582" endtime="20201030 11:51:32.128"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.131" endtime="20201030 11:51:32.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.129" endtime="20201030 11:51:32.151"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.161" endtime="20201030 11:51:32.209"></status>
</kw>
<msg timestamp="20201030 11:51:32.210" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.160" endtime="20201030 11:51:32.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.213" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.211" endtime="20201030 11:51:32.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.214" endtime="20201030 11:51:32.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.156" endtime="20201030 11:51:32.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.154" endtime="20201030 11:51:32.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.226" endtime="20201030 11:51:32.512"></status>
</kw>
<msg timestamp="20201030 11:51:32.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.224" endtime="20201030 11:51:32.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.523" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021178167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021932097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.516" endtime="20201030 11:51:32.524"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.524" endtime="20201030 11:51:32.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.221" endtime="20201030 11:51:32.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.218" endtime="20201030 11:51:32.528"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:32.532" level="INFO">${PHILIP_RES} = [{'diff': 0.0007539299999999999}, {'diff': 0.0007539439999999994}, {'diff': 0.0007539309999999994}, {'diff': 0.0007538890000000006}, {'diff': 0.000753957999999999}, {'diff': 0.0007539169999999998}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:32.529" endtime="20201030 11:51:32.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.537" level="INFO">${RESULT} = {'diff': [0.0007539299999999999, 0.0007539439999999994, 0.0007539309999999994, 0.0007538890000000006, 0.000753957999999999, 0.0007539169999999998, 0.0007539440000000029, 0.0007539439999999994, 0.00075...</msg>
<status status="PASS" starttime="20201030 11:51:32.533" endtime="20201030 11:51:32.537"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.542" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:32.541" endtime="20201030 11:51:32.542"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.544" level="INFO">VALUE: [0.0007539299999999999, 0.0007539439999999994, 0.0007539309999999994, 0.0007538890000000006, 0.000753957999999999, 0.0007539169999999998, 0.0007539440000000029, 0.0007539439999999994, 0.0007539580000000025, 0.0007538889999999972, 0.0007539020000000007, 0.0007539449999999989, 0.0007539449999999989, 0.0007539299999999999, 0.0007539309999999994, 0.0007539309999999994, 0.0007539160000000003, 0.0007539169999999998, 0.0007539449999999989, 0.0007539299999999999, 0.0007539309999999994, 0.0007539309999999994, 0.0007539030000000002, 0.0007539439999999994, 0.0007539309999999994, 0.0007717769999999943, 0.0007539169999999998, 0.0007539169999999998, 0.0007539860000000051, 0.0007539309999999994, 0.0007539169999999998, 0.0007539299999999999, 0.0007539169999999998, 0.0007539310000000063, 0.0007539439999999994, 0.0007539309999999994, 0.0007539310000000063, 0.0007539439999999994, 0.0007539309999999994, 0.0007539030000000002, 0.0007538470000000019, 0.0007539299999999999, 0.0007539309999999994, 0.0007539299999999999, 0.0007539439999999994, 0.0007539169999999998, 0.0007539309999999994, 0.0007539299999999999, 0.0007539169999999998, 0.000753957999999999]</msg>
<status status="PASS" starttime="20201030 11:51:32.543" endtime="20201030 11:51:32.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.538" endtime="20201030 11:51:32.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.152" endtime="20201030 11:51:32.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.128" endtime="20201030 11:51:32.547"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.550" endtime="20201030 11:51:32.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.548" endtime="20201030 11:51:32.570"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.581" endtime="20201030 11:51:32.630"></status>
</kw>
<msg timestamp="20201030 11:51:32.631" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.580" endtime="20201030 11:51:32.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.634" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.632" endtime="20201030 11:51:32.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.635" endtime="20201030 11:51:32.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.576" endtime="20201030 11:51:32.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.574" endtime="20201030 11:51:32.638"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.646" endtime="20201030 11:51:32.989"></status>
</kw>
<msg timestamp="20201030 11:51:32.996" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021206014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.645" endtime="20201030 11:51:32.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021206014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.998" endtime="20201030 11:51:33.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.018" endtime="20201030 11:51:33.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.641" endtime="20201030 11:51:33.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.639" endtime="20201030 11:51:33.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:33.035" level="INFO">${PHILIP_RES} = [{'diff': 0.0007836249999999996}, {'diff': 0.0007836249999999996}, {'diff': 0.0007835979999999999}, {'diff': 0.0007835840000000004}, {'diff': 0.0007835559999999978}, {'diff': 0.000783611}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:51:33.027" endtime="20201030 11:51:33.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.044" level="INFO">${RESULT} = {'diff': [0.0007836249999999996, 0.0007836249999999996, 0.0007835979999999999, 0.0007835840000000004, 0.0007835559999999978, 0.000783611, 0.0007836119999999995, 0.0007835979999999999, 0.00078361200000...</msg>
<status status="PASS" starttime="20201030 11:51:33.037" endtime="20201030 11:51:33.045"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.055" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:33.053" endtime="20201030 11:51:33.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.063" level="INFO">VALUE: [0.0007836249999999996, 0.0007836249999999996, 0.0007835979999999999, 0.0007835840000000004, 0.0007835559999999978, 0.000783611, 0.0007836119999999995, 0.0007835979999999999, 0.000783612000000003, 0.000783611, 0.000783611, 0.0007835829999999974, 0.0007836110000000035, 0.000783596999999997, 0.0007836110000000035, 0.000783596999999997, 0.0007836249999999961, 0.0007836109999999966, 0.0007836249999999961, 0.0007836249999999961, 0.000783596999999997, 0.0007836109999999966, 0.000783596999999997, 0.0007836530000000022, 0.0007836110000000035, 0.0007836110000000035, 0.0007835980000000034, 0.0007836110000000035, 0.000783612000000003, 0.000783612000000003, 0.0007835980000000034, 0.0007835970000000039, 0.0008104589999999995, 0.0007836110000000035, 0.0007836110000000035, 0.0007835980000000034, 0.000783612000000003, 0.0007835980000000034, 0.0007836250000000031, 0.0007836250000000031, 0.0007835970000000039, 0.0007836109999999966, 0.0007836109999999966, 0.0007836109999999966, 0.0007836109999999966, 0.0007836109999999966, 0.0007836109999999966, 0.0007836249999999961, 0.0007836529999999953, 0.0007836109999999966]</msg>
<status status="PASS" starttime="20201030 11:51:33.058" endtime="20201030 11:51:33.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.046" endtime="20201030 11:51:33.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.571" endtime="20201030 11:51:33.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.547" endtime="20201030 11:51:33.069"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.075" endtime="20201030 11:51:33.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.071" endtime="20201030 11:51:33.100"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.122" endtime="20201030 11:51:33.175"></status>
</kw>
<msg timestamp="20201030 11:51:33.176" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.118" endtime="20201030 11:51:33.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.182" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.178" endtime="20201030 11:51:33.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.185" endtime="20201030 11:51:33.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.111" endtime="20201030 11:51:33.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.105" endtime="20201030 11:51:33.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.210" endtime="20201030 11:51:33.567"></status>
</kw>
<msg timestamp="20201030 11:51:33.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037166708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037980569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.206" endtime="20201030 11:51:33.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.037166708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037980569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.577" endtime="20201030 11:51:33.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.596" endtime="20201030 11:51:33.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.199" endtime="20201030 11:51:33.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.193" endtime="20201030 11:51:33.603"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:33.613" level="INFO">${PHILIP_RES} = [{'diff': 0.0008138609999999991}, {'diff': 0.0008138750000000056}, {'diff': 0.0008138749999999986}, {'diff': 0.0008138890000000051}, {'diff': 0.0008138749999999986}, {'diff': 0.0008138890000000051}, {...</msg>
<status status="PASS" starttime="20201030 11:51:33.605" endtime="20201030 11:51:33.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.624" level="INFO">${RESULT} = {'diff': [0.0008138609999999991, 0.0008138750000000056, 0.0008138749999999986, 0.0008138890000000051, 0.0008138749999999986, 0.0008138890000000051, 0.0008138749999999986, 0.0008138890000000051, 0.0008...</msg>
<status status="PASS" starttime="20201030 11:51:33.615" endtime="20201030 11:51:33.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.635" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:33.633" endtime="20201030 11:51:33.636"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.641" level="INFO">VALUE: [0.0008138609999999991, 0.0008138750000000056, 0.0008138749999999986, 0.0008138890000000051, 0.0008138749999999986, 0.0008138890000000051, 0.0008138749999999986, 0.0008138890000000051, 0.0008138889999999982, 0.0008138609999999991, 0.000836207999999998, 0.0008138889999999982, 0.0008138889999999982, 0.0008138609999999991, 0.0008138889999999982, 0.0008138609999999991, 0.000813943999999997, 0.0008138609999999991, 0.0008139309999999969, 0.0008139309999999969, 0.0008138609999999991, 0.000813861000000006, 0.0008138889999999982, 0.0008138890000000051, 0.0008138749999999986, 0.0008138890000000051, 0.0008138889999999982, 0.0008138750000000056, 0.0008139159999999979, 0.0008138339999999994, 0.0008138880000000126, 0.0008138750000000056, 0.0008138750000000056, 0.0008138609999999991, 0.0008138889999999982, 0.0008138750000000056, 0.0008138750000000056, 0.0008139169999999973, 0.0008138749999999917, 0.0008138609999999991, 0.0008138889999999982, 0.0008138749999999917, 0.0008139300000000044, 0.0008138889999999982, 0.0008139440000000109, 0.0008138889999999982, 0.0008138889999999982, 0.0008138889999999982, 0.0008139030000000047, 0.0008201809999999893]</msg>
<status status="PASS" starttime="20201030 11:51:33.638" endtime="20201030 11:51:33.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.626" endtime="20201030 11:51:33.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.101" endtime="20201030 11:51:33.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.070" endtime="20201030 11:51:33.646"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.652" endtime="20201030 11:51:33.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.648" endtime="20201030 11:51:33.676"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.698" endtime="20201030 11:51:33.753"></status>
</kw>
<msg timestamp="20201030 11:51:33.754" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.695" endtime="20201030 11:51:33.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.760" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.756" endtime="20201030 11:51:33.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.763" endtime="20201030 11:51:33.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.687" endtime="20201030 11:51:33.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.682" endtime="20201030 11:51:33.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.788" endtime="20201030 11:51:34.148"></status>
</kw>
<msg timestamp="20201030 11:51:34.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036580958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.784" endtime="20201030 11:51:34.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.036580958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.037425708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.158" endtime="20201030 11:51:34.176"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.178" endtime="20201030 11:51:34.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.777" endtime="20201030 11:51:34.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.772" endtime="20201030 11:51:34.185"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:34.194" level="INFO">${PHILIP_RES} = [{'diff': 0.0008447500000000052}, {'diff': 0.0008447079999999996}, {'diff': 0.0008446949999999995}, {'diff': 0.0008447079999999996}, {'diff': 0.0008446949999999995}, {'diff': 0.0008447079999999996}, {...</msg>
<status status="PASS" starttime="20201030 11:51:34.187" endtime="20201030 11:51:34.195"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.206" level="INFO">${RESULT} = {'diff': [0.0008447500000000052, 0.0008447079999999996, 0.0008446949999999995, 0.0008447079999999996, 0.0008446949999999995, 0.0008447079999999996, 0.0008446800000000004, 0.000844776999999998, 0.00084...</msg>
<status status="PASS" starttime="20201030 11:51:34.197" endtime="20201030 11:51:34.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.218" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:34.215" endtime="20201030 11:51:34.219"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.224" level="INFO">VALUE: [0.0008447500000000052, 0.0008447079999999996, 0.0008446949999999995, 0.0008447079999999996, 0.0008446949999999995, 0.0008447079999999996, 0.0008446800000000004, 0.000844776999999998, 0.0008447079999999996, 0.000844708999999999, 0.000844694, 0.0008446950000000064, 0.000844694, 0.0008446809999999999, 0.0008447229999999986, 0.0008447359999999987, 0.0008447079999999996, 0.0008446660000000009, 0.0008446949999999995, 0.0008447079999999996, 0.0008447229999999986, 0.0008446800000000004, 0.000844709000000006, 0.0008446800000000004, 0.000844708999999999, 0.0008685270000000009, 0.0008447629999999984, 0.0008447079999999996, 0.000844708999999999, 0.0008447219999999922, 0.0008446670000000073, 0.0008446939999999931, 0.0008446949999999925, 0.0008446940000000069, 0.0008446949999999925, 0.0008447079999999996, 0.0008446939999999931, 0.0008446530000000008, 0.0008447079999999996, 0.0008446389999999943, 0.0008447219999999922, 0.0008446949999999925, 0.0008446939999999931, 0.0008447639999999978, 0.0008446800000000004, 0.0008446949999999925, 0.0008446530000000008, 0.0008447220000000061, 0.0008447220000000061, 0.0008446940000000069]</msg>
<status status="PASS" starttime="20201030 11:51:34.220" endtime="20201030 11:51:34.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.208" endtime="20201030 11:51:34.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.677" endtime="20201030 11:51:34.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.647" endtime="20201030 11:51:34.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.307" endtime="20201030 11:51:34.229"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:05.188" endtime="20201030 11:51:34.232" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:36.655" endtime="20201030 11:51:34.257"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.447" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:34.463" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:36.394" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:34.443" endtime="20201030 11:51:36.396"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.401" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:36.398" endtime="20201030 11:51:36.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.440" endtime="20201030 11:51:36.404"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.409" endtime="20201030 11:51:36.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.406" endtime="20201030 11:51:36.748"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.778" endtime="20201030 11:51:36.814"></status>
</kw>
<msg timestamp="20201030 11:51:36.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb',...</msg>
<status status="PASS" starttime="20201030 11:51:36.774" endtime="20201030 11:51:36.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.822" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f103rb',...</msg>
<status status="PASS" starttime="20201030 11:51:36.818" endtime="20201030 11:51:36.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.830" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:36.825" endtime="20201030 11:51:36.830"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:36.768" endtime="20201030 11:51:36.832"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:36.762" endtime="20201030 11:51:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.759" endtime="20201030 11:51:36.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:36.845" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:36.844" endtime="20201030 11:51:36.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.837" endtime="20201030 11:51:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.758" endtime="20201030 11:51:36.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.756" endtime="20201030 11:51:36.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.849" endtime="20201030 11:51:36.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.752" endtime="20201030 11:51:36.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.856" endtime="20201030 11:51:36.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.749" endtime="20201030 11:51:36.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.437" endtime="20201030 11:51:36.863"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.878" endtime="20201030 11:51:36.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.874" endtime="20201030 11:51:36.902"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.939" endtime="20201030 11:51:36.964"></status>
</kw>
<msg timestamp="20201030 11:51:36.966" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.935" endtime="20201030 11:51:36.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.973" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.968" endtime="20201030 11:51:36.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.980" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:36.975" endtime="20201030 11:51:36.980"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:36.927" endtime="20201030 11:51:36.982"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:36.920" endtime="20201030 11:51:36.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.918" endtime="20201030 11:51:36.985"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:36.993" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:36.991" endtime="20201030 11:51:36.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.987" endtime="20201030 11:51:36.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.916" endtime="20201030 11:51:36.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.914" endtime="20201030 11:51:36.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.997" endtime="20201030 11:51:37.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.910" endtime="20201030 11:51:37.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.905" endtime="20201030 11:51:37.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.871" endtime="20201030 11:51:37.004"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.034" endtime="20201030 11:51:37.052"></status>
</kw>
<msg timestamp="20201030 11:51:37.053" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.031" endtime="20201030 11:51:37.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.055" endtime="20201030 11:51:37.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.062" endtime="20201030 11:51:37.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.021" endtime="20201030 11:51:37.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.014" endtime="20201030 11:51:37.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.087" endtime="20201030 11:51:37.438"></status>
</kw>
<msg timestamp="20201030 11:51:37.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148981986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.148994486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:37.084" endtime="20201030 11:51:37.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.450" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148981986, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.148994486, 'source': 'DUT_IC', 'event': 'RI...</msg>
<status status="PASS" starttime="20201030 11:51:37.443" endtime="20201030 11:51:37.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.452" endtime="20201030 11:51:37.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.076" endtime="20201030 11:51:37.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.071" endtime="20201030 11:51:37.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.460" level="INFO">${RESULT} = [{'diff': 0}, {'diff': 2.4720000000033604e-06}, {'diff': 2.4720000000033604e-06}, {'diff': 2.9579999999973516e-06}, {'diff': 2.9170000000189322e-06}, {'diff': 2.8890000000059146e-06}, {'diff': 2.45899...</msg>
<status status="PASS" starttime="20201030 11:51:37.456" endtime="20201030 11:51:37.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.465" level="INFO">${ACCURACY} = {'diff': [0, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.9579999999973516e-06, 2.9170000000189322e-06, 2.8890000000059146e-06, 2.4589999999824474e-06, 3.4449999999908165e-06, 3.4720000000043605e...</msg>
<status status="PASS" starttime="20201030 11:51:37.461" endtime="20201030 11:51:37.465"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.473" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.471" endtime="20201030 11:51:37.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.479" level="INFO">VALUE: [0, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.9579999999973516e-06, 2.9170000000189322e-06, 2.8890000000059146e-06, 2.4589999999824474e-06, 3.4449999999908165e-06, 3.4720000000043605e-06, 2.4589999999824474e-06, 2.9579999999973516e-06, 2.4589999999824474e-06, 2.9720000000177382e-06, 2.959000000024581e-06, 2.9589999999968253e-06, 3.4859999999969915e-06, 2.4309999999971854e-06, 2.9579999999973516e-06, 2.4580000000107294e-06, 2.4439999999903428e-06, 2.9719999999899827e-06, 2.4589999999824474e-06, 2.4440000000180984e-06, 2.9579999999973516e-06, 2.4580000000107294e-06, 2.4720000000033604e-06, 2.4720000000033604e-06, 2.9860000000103692e-06, 2.4580000000107294e-06, 2.4440000000180984e-06, 2.4580000000107294e-06, 2.9440000000047206e-06, 3.0139999999956313e-06, 2.457999999982974e-06, 3.0000000000030003e-06, 2.4580000000107294e-06, 2.486000000023747e-06, 2.9589999999968253e-06, 2.9860000000103692e-06, 2.514000000009009e-06, 2.9450000000041943e-06, 2.4589999999824474e-06, 2.9310000000115632e-06, 2.915999999991703e-06, 2.4170000000045544e-06, 2.3749999999989058e-06, 2.4589999999824474e-06, 2.9579999999973516e-06, 2.9720000000177382e-06, 3.4720000000043605e-06]</msg>
<status status="PASS" starttime="20201030 11:51:37.476" endtime="20201030 11:51:37.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.466" endtime="20201030 11:51:37.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.494" endtime="20201030 11:51:37.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.489" endtime="20201030 11:51:37.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.484" endtime="20201030 11:51:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.010" endtime="20201030 11:51:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.008" endtime="20201030 11:51:37.520"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.544" endtime="20201030 11:51:37.562"></status>
</kw>
<msg timestamp="20201030 11:51:37.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.541" endtime="20201030 11:51:37.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.566" endtime="20201030 11:51:37.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.572" endtime="20201030 11:51:37.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.533" endtime="20201030 11:51:37.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.527" endtime="20201030 11:51:37.580"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.598" endtime="20201030 11:51:37.956"></status>
</kw>
<msg timestamp="20201030 11:51:37.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043299514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043303486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.594" endtime="20201030 11:51:37.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.984" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043299514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043303486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.966" endtime="20201030 11:51:37.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.986" endtime="20201030 11:51:37.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.586" endtime="20201030 11:51:37.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.581" endtime="20201030 11:51:37.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.005" level="INFO">${RESULT} = [{'diff': 3.9720000000048605e-06}, {'diff': 3.943999999998782e-06}, {'diff': 3.4859999999969915e-06}, {'diff': 3.943999999998782e-06}, {'diff': 3.4719999999974216e-06}, {'diff': 3.958000000005291e-06}...</msg>
<status status="PASS" starttime="20201030 11:51:37.995" endtime="20201030 11:51:38.005"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.017" level="INFO">${ACCURACY} = {'diff': [3.9720000000048605e-06, 3.943999999998782e-06, 3.4859999999969915e-06, 3.943999999998782e-06, 3.4719999999974216e-06, 3.958000000005291e-06, 3.473000000003834e-06, 3.958000000005291e-06, 3.9...</msg>
<status status="PASS" starttime="20201030 11:51:38.007" endtime="20201030 11:51:38.017"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.028" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.026" endtime="20201030 11:51:38.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.034" level="INFO">VALUE: [3.9720000000048605e-06, 3.943999999998782e-06, 3.4859999999969915e-06, 3.943999999998782e-06, 3.4719999999974216e-06, 3.958000000005291e-06, 3.473000000003834e-06, 3.958000000005291e-06, 3.9720000000048605e-06, 3.971999999997922e-06, 4.471999999998422e-06, 3.972999999997395e-06, 3.4589999999973253e-06, 3.971999999997922e-06, 3.9449999999982555e-06, 4.457999999998852e-06, 3.929999999999212e-06, 3.958999999997825e-06, 3.4449999999977554e-06, 3.4589999999973253e-06, 3.4449999999977554e-06, 3.4859999999969915e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.4720000000043605e-06, 3.4719999999974216e-06, 3.9999999999970615e-06, 3.4579999999978517e-06, 3.4579999999978517e-06, 3.957999999998352e-06, 3.4579999999978517e-06, 3.958000000005291e-06, 3.5000000000035003e-06, 3.4859999999969915e-06, 3.957999999998352e-06, 3.971999999997922e-06, 4.4999999999975615e-06, 3.4859999999969915e-06, 3.4439999999982818e-06, 3.473000000003834e-06, 4.471999999998422e-06, 3.4719999999974216e-06, 3.4450000000046943e-06, 3.971999999997922e-06, 3.915999999999642e-06, 3.971999999997922e-06, 3.4579999999978517e-06, 3.4859999999969915e-06, 3.4720000000043605e-06, 3.4580000000047906e-06]</msg>
<status status="PASS" starttime="20201030 11:51:38.031" endtime="20201030 11:51:38.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.018" endtime="20201030 11:51:38.037"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.047" endtime="20201030 11:51:38.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.042" endtime="20201030 11:51:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.039" endtime="20201030 11:51:38.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.522" endtime="20201030 11:51:38.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.521" endtime="20201030 11:51:38.072"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.097" endtime="20201030 11:51:38.114"></status>
</kw>
<msg timestamp="20201030 11:51:38.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.093" endtime="20201030 11:51:38.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.118" endtime="20201030 11:51:38.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.125" endtime="20201030 11:51:38.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.085" endtime="20201030 11:51:38.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.079" endtime="20201030 11:51:38.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.150" endtime="20201030 11:51:38.511"></status>
</kw>
<msg timestamp="20201030 11:51:38.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043168903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043173875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.147" endtime="20201030 11:51:38.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.539" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043168903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043173875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.521" endtime="20201030 11:51:38.540"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.541" endtime="20201030 11:51:38.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.139" endtime="20201030 11:51:38.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.134" endtime="20201030 11:51:38.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.560" level="INFO">${RESULT} = [{'diff': 4.971999999998922e-06}, {'diff': 4.971999999998922e-06}, {'diff': 5.0139999999976315e-06}, {'diff': 4.943999999999782e-06}, {'diff': 4.943999999999782e-06}, {'diff': 4.471999999998422e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:38.550" endtime="20201030 11:51:38.560"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.572" level="INFO">${ACCURACY} = {'diff': [4.971999999998922e-06, 4.971999999998922e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.471999999998422e-06, 4.9449999999992555e-06, 4.459000000005264e-06, 4.44...</msg>
<status status="PASS" starttime="20201030 11:51:38.562" endtime="20201030 11:51:38.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.584" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.581" endtime="20201030 11:51:38.584"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.590" level="INFO">VALUE: [4.971999999998922e-06, 4.971999999998922e-06, 5.0139999999976315e-06, 4.943999999999782e-06, 4.943999999999782e-06, 4.471999999998422e-06, 4.9449999999992555e-06, 4.459000000005264e-06, 4.4449999999987555e-06, 4.957999999999352e-06, 4.943999999999782e-06, 5.471999999999422e-06, 4.972999999998395e-06, 4.971999999998922e-06, 4.459000000005264e-06, 4.471999999998422e-06, 5.01400000000457e-06, 4.971999999998922e-06, 4.959000000005764e-06, 4.985999999998492e-06, 4.9589999999988255e-06, 4.971999999998922e-06, 5.4589999999993255e-06, 4.943999999999782e-06, 4.458999999998325e-06, 4.471999999998422e-06, 4.443999999999282e-06, 4.9449999999992555e-06, 4.971999999998922e-06, 4.485999999997992e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.457999999998852e-06, 4.943999999999782e-06, 4.471999999998422e-06, 4.957999999999352e-06, 4.957999999999352e-06, 4.917000000000116e-06, 4.457999999998852e-06, 4.971999999998922e-06, 5.027999999997201e-06, 5.0139999999976315e-06, 4.4720000000053606e-06, 4.959000000005764e-06, 5.471999999999422e-06, 4.9999999999980616e-06, 4.985999999998492e-06, 4.472999999997895e-06, 5.0000000000050004e-06, 4.971999999998922e-06]</msg>
<status status="PASS" starttime="20201030 11:51:38.586" endtime="20201030 11:51:38.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.574" endtime="20201030 11:51:38.592"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.602" endtime="20201030 11:51:38.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.597" endtime="20201030 11:51:38.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.595" endtime="20201030 11:51:38.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.074" endtime="20201030 11:51:38.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.073" endtime="20201030 11:51:38.628"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.652" endtime="20201030 11:51:38.670"></status>
</kw>
<msg timestamp="20201030 11:51:38.672" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.648" endtime="20201030 11:51:38.672"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.674" endtime="20201030 11:51:38.680"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.682" endtime="20201030 11:51:38.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.641" endtime="20201030 11:51:38.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.635" endtime="20201030 11:51:38.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.706" endtime="20201030 11:51:39.068"></status>
</kw>
<msg timestamp="20201030 11:51:39.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043228347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.703" endtime="20201030 11:51:39.076"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.095" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043228347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043234319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.078" endtime="20201030 11:51:39.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.098" endtime="20201030 11:51:39.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.695" endtime="20201030 11:51:39.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.690" endtime="20201030 11:51:39.105"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.116" level="INFO">${RESULT} = [{'diff': 5.971999999999922e-06}, {'diff': 5.889000000001976e-06}, {'diff': 5.9589999999998255e-06}, {'diff': 5.986000000006431e-06}, {'diff': 5.958000000000352e-06}, {'diff': 5.985999999999492e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.107" endtime="20201030 11:51:39.117"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.126" level="INFO">${ACCURACY} = {'diff': [5.971999999999922e-06, 5.889000000001976e-06, 5.9589999999998255e-06, 5.986000000006431e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.958...</msg>
<status status="PASS" starttime="20201030 11:51:39.118" endtime="20201030 11:51:39.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.138" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.135" endtime="20201030 11:51:39.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.144" level="INFO">VALUE: [5.971999999999922e-06, 5.889000000001976e-06, 5.9589999999998255e-06, 5.986000000006431e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.944000000000782e-06, 5.999999999999062e-06, 5.958000000000352e-06, 5.459000000006264e-06, 5.9729999999993955e-06, 5.471999999999422e-06, 5.472999999998895e-06, 5.944000000000782e-06, 5.958000000000352e-06, 5.471999999999422e-06, 5.958000000000352e-06, 5.930000000001212e-06, 5.4589999999993255e-06, 5.457999999999852e-06, 5.527999999997701e-06, 5.457999999999852e-06, 5.958000000000352e-06, 5.985999999999492e-06, 5.9589999999998255e-06, 5.51400000000507e-06, 5.457999999999852e-06, 6.471999999993483e-06, 5.9589999999998255e-06, 5.471999999999422e-06, 5.9589999999998255e-06, 5.9589999999998255e-06, 6.041999999997771e-06, 5.472000000006361e-06, 5.471999999999422e-06, 5.457999999999852e-06, 5.444000000000282e-06, 5.971999999999922e-06, 6.5279999999987015e-06, 5.944000000000782e-06, 5.444999999999756e-06, 5.971999999999922e-06, 5.971999999999922e-06, 5.471999999999422e-06, 5.916000000001642e-06, 5.958000000000352e-06, 5.9589999999998255e-06, 6.472000000000422e-06, 5.958000000000352e-06, 5.971999999999922e-06]</msg>
<status status="PASS" starttime="20201030 11:51:39.140" endtime="20201030 11:51:39.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.128" endtime="20201030 11:51:39.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.156" endtime="20201030 11:51:39.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.152" endtime="20201030 11:51:39.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.149" endtime="20201030 11:51:39.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.630" endtime="20201030 11:51:39.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.629" endtime="20201030 11:51:39.182"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.207" endtime="20201030 11:51:39.226"></status>
</kw>
<msg timestamp="20201030 11:51:39.227" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.203" endtime="20201030 11:51:39.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.234" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.230" endtime="20201030 11:51:39.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.236" endtime="20201030 11:51:39.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.195" endtime="20201030 11:51:39.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.189" endtime="20201030 11:51:39.245"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.263" endtime="20201030 11:51:39.624"></status>
</kw>
<msg timestamp="20201030 11:51:39.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044106069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044113042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.259" endtime="20201030 11:51:39.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044106069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044113042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.634" endtime="20201030 11:51:39.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.654" endtime="20201030 11:51:39.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.252" endtime="20201030 11:51:39.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.247" endtime="20201030 11:51:39.661"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.672" level="INFO">${RESULT} = [{'diff': 6.9730000000003955e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.958000000001352e-06}, {'diff': 6.945000000001256e-06}, {'diff': 6.958000000001352e-06}, {'diff': 6.499999999999562e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.663" endtime="20201030 11:51:39.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.683" level="INFO">${ACCURACY} = {'diff': [6.9730000000003955e-06, 6.458000000000852e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.472...</msg>
<status status="PASS" starttime="20201030 11:51:39.674" endtime="20201030 11:51:39.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.694" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.692" endtime="20201030 11:51:39.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.700" level="INFO">VALUE: [6.9730000000003955e-06, 6.458000000000852e-06, 6.958000000001352e-06, 6.945000000001256e-06, 6.958000000001352e-06, 6.499999999999562e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.4729999999998955e-06, 7.444000000002282e-06, 7.472000000001422e-06, 7.471999999994483e-06, 6.459000000000326e-06, 7.013999999999632e-06, 6.986000000000492e-06, 6.959000000000826e-06, 6.4729999999998955e-06, 6.972000000000922e-06, 6.4729999999998955e-06, 6.972000000000922e-06, 6.499999999999562e-06, 6.444000000001282e-06, 6.986000000000492e-06, 6.958000000001352e-06, 6.986000000000492e-06, 7.0140000000065705e-06, 6.944000000001782e-06, 6.472000000000422e-06, 6.389000000002476e-06, 6.459000000000326e-06, 7.000000000000062e-06, 7.458000000001852e-06, 6.458000000000852e-06, 6.416000000002142e-06, 6.472000000000422e-06, 6.403000000002046e-06, 6.957999999994413e-06, 6.971999999993983e-06, 6.472000000000422e-06, 6.485999999999992e-06, 6.972000000000922e-06, 6.9869999999999655e-06, 6.9730000000003955e-06, 6.459000000000326e-06, 6.485999999999992e-06, 7.471999999994483e-06, 6.916000000002642e-06, 6.472000000000422e-06, 6.972000000000922e-06, 6.972000000000922e-06]</msg>
<status status="PASS" starttime="20201030 11:51:39.697" endtime="20201030 11:51:39.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.684" endtime="20201030 11:51:39.703"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.714" endtime="20201030 11:51:39.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.708" endtime="20201030 11:51:39.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.705" endtime="20201030 11:51:39.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.184" endtime="20201030 11:51:39.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.183" endtime="20201030 11:51:39.740"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.765" endtime="20201030 11:51:39.783"></status>
</kw>
<msg timestamp="20201030 11:51:39.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.761" endtime="20201030 11:51:39.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.787" endtime="20201030 11:51:39.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.793" endtime="20201030 11:51:39.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.753" endtime="20201030 11:51:39.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.747" endtime="20201030 11:51:39.801"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.818" endtime="20201030 11:51:40.178"></status>
</kw>
<msg timestamp="20201030 11:51:40.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043868069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043875528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.815" endtime="20201030 11:51:40.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.206" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043868069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043875528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.189" endtime="20201030 11:51:40.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.208" endtime="20201030 11:51:40.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.807" endtime="20201030 11:51:40.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.802" endtime="20201030 11:51:40.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.227" level="INFO">${RESULT} = [{'diff': 7.458999999994387e-06}, {'diff': 7.943999999995843e-06}, {'diff': 7.957999999995413e-06}, {'diff': 7.972000000001922e-06}, {'diff': 7.472000000001422e-06}, {'diff': 7.4870000000004655e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:40.217" endtime="20201030 11:51:40.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.238" level="INFO">${ACCURACY} = {'diff': [7.458999999994387e-06, 7.943999999995843e-06, 7.957999999995413e-06, 7.972000000001922e-06, 7.472000000001422e-06, 7.4870000000004655e-06, 7.458000000001852e-06, 8.472000000002422e-06, 7.458...</msg>
<status status="PASS" starttime="20201030 11:51:40.229" endtime="20201030 11:51:40.239"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.250" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.248" endtime="20201030 11:51:40.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.256" level="INFO">VALUE: [7.458999999994387e-06, 7.943999999995843e-06, 7.957999999995413e-06, 7.972000000001922e-06, 7.472000000001422e-06, 7.4870000000004655e-06, 7.458000000001852e-06, 8.472000000002422e-06, 7.458999999994387e-06, 7.472000000001422e-06, 7.972999999994457e-06, 7.958999999994887e-06, 7.486000000000992e-06, 7.958000000002352e-06, 7.527999999999702e-06, 7.957999999995413e-06, 8.403000000004046e-06, 8.471999999995483e-06, 7.944000000002782e-06, 7.944000000002782e-06, 7.944000000002782e-06, 7.444000000002282e-06, 7.459000000001326e-06, 7.388999999996537e-06, 7.959000000001826e-06, 7.930000000003212e-06, 7.958000000002352e-06, 7.458000000001852e-06, 7.944000000002782e-06, 8.473000000001896e-06, 7.972000000001922e-06, 7.459000000001326e-06, 7.972000000001922e-06, 7.416999999995677e-06, 8.458000000002852e-06, 7.458000000001852e-06, 7.458000000001852e-06, 7.958999999994887e-06, 8.486000000001992e-06, 7.972000000001922e-06, 7.973000000001396e-06, 7.944000000002782e-06, 7.971999999994983e-06, 7.972000000001922e-06, 8.000000000001062e-06, 7.472000000001422e-06, 7.459000000001326e-06, 7.986000000001492e-06, 7.429999999995773e-06, 7.458000000001852e-06]</msg>
<status status="PASS" starttime="20201030 11:51:40.252" endtime="20201030 11:51:40.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.240" endtime="20201030 11:51:40.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.268" endtime="20201030 11:51:40.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.264" endtime="20201030 11:51:40.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.261" endtime="20201030 11:51:40.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.742" endtime="20201030 11:51:40.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.741" endtime="20201030 11:51:40.295"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.320" endtime="20201030 11:51:40.339"></status>
</kw>
<msg timestamp="20201030 11:51:40.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.316" endtime="20201030 11:51:40.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.343" endtime="20201030 11:51:40.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.350" endtime="20201030 11:51:40.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.308" endtime="20201030 11:51:40.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.302" endtime="20201030 11:51:40.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.375" endtime="20201030 11:51:40.726"></status>
</kw>
<msg timestamp="20201030 11:51:40.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045368792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04537725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:40.371" endtime="20201030 11:51:40.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045368792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04537725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:40.730" endtime="20201030 11:51:40.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.739" endtime="20201030 11:51:40.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.363" endtime="20201030 11:51:40.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.358" endtime="20201030 11:51:40.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.748" level="INFO">${RESULT} = [{'diff': 8.458000000002852e-06}, {'diff': 8.472000000002422e-06}, {'diff': 8.972999999995457e-06}, {'diff': 8.958000000003352e-06}, {'diff': 8.541000000000798e-06}, {'diff': 8.957999999996413e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:40.743" endtime="20201030 11:51:40.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.753" level="INFO">${ACCURACY} = {'diff': [8.458000000002852e-06, 8.472000000002422e-06, 8.972999999995457e-06, 8.958000000003352e-06, 8.541000000000798e-06, 8.957999999996413e-06, 8.445000000002756e-06, 9.457999999996913e-06, 8.4579...</msg>
<status status="PASS" starttime="20201030 11:51:40.749" endtime="20201030 11:51:40.753"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.759" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.757" endtime="20201030 11:51:40.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.761" level="INFO">VALUE: [8.458000000002852e-06, 8.472000000002422e-06, 8.972999999995457e-06, 8.958000000003352e-06, 8.541000000000798e-06, 8.957999999996413e-06, 8.445000000002756e-06, 9.457999999996913e-06, 8.457999999995913e-06, 8.958000000003352e-06, 8.985999999995553e-06, 8.972999999995457e-06, 9.457999999996913e-06, 8.486000000001992e-06, 8.444999999995817e-06, 9.042000000000772e-06, 8.445000000002756e-06, 8.971999999995983e-06, 8.958999999995887e-06, 8.458000000002852e-06, 8.959000000002826e-06, 8.473000000001896e-06, 8.971999999995983e-06, 8.944999999996317e-06, 8.959000000002826e-06, 8.972000000002922e-06, 8.945000000003256e-06, 8.458999999995387e-06, 9.443999999997343e-06, 8.472000000002422e-06, 8.443999999996343e-06, 8.972000000002922e-06, 8.930999999996747e-06, 8.945000000003256e-06, 8.958999999995887e-06, 9.431000000004186e-06, 8.973000000002396e-06, 9.471999999996483e-06, 8.957999999996413e-06, 8.415999999997203e-06, 9.458999999996387e-06, 8.485999999995053e-06, 8.972000000002922e-06, 8.972000000002922e-06, 8.458000000002852e-06, 9.444999999996817e-06, 8.971999999995983e-06, 8.958000000003352e-06, 8.958999999995887e-06, 9.471999999996483e-06]</msg>
<status status="PASS" starttime="20201030 11:51:40.760" endtime="20201030 11:51:40.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.754" endtime="20201030 11:51:40.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.767" endtime="20201030 11:51:40.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.765" endtime="20201030 11:51:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.764" endtime="20201030 11:51:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.297" endtime="20201030 11:51:40.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.296" endtime="20201030 11:51:40.789"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.800" endtime="20201030 11:51:40.815"></status>
</kw>
<msg timestamp="20201030 11:51:40.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.798" endtime="20201030 11:51:40.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.819" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.817" endtime="20201030 11:51:40.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.820" endtime="20201030 11:51:40.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.795" endtime="20201030 11:51:40.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.792" endtime="20201030 11:51:40.823"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.831" endtime="20201030 11:51:41.173"></status>
</kw>
<msg timestamp="20201030 11:51:41.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024920292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.830" endtime="20201030 11:51:41.181"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024910847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024920292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.183" endtime="20201030 11:51:41.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.203" endtime="20201030 11:51:41.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.826" endtime="20201030 11:51:41.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.824" endtime="20201030 11:51:41.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.221" level="INFO">${RESULT} = [{'diff': 9.445000000000286e-06}, {'diff': 9.458999999999856e-06}, {'diff': 9.458999999999856e-06}, {'diff': 9.972000000000453e-06}, {'diff': 9.972000000000453e-06}, {'diff': 9.457999999996913e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:41.212" endtime="20201030 11:51:41.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.232" level="INFO">${ACCURACY} = {'diff': [9.445000000000286e-06, 9.458999999999856e-06, 9.458999999999856e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.457999999996913e-06, 9.931000000001217e-06, 9.972000000000453e-06, 9.9580...</msg>
<status status="PASS" starttime="20201030 11:51:41.223" endtime="20201030 11:51:41.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.243" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.241" endtime="20201030 11:51:41.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.249" level="INFO">VALUE: [9.445000000000286e-06, 9.458999999999856e-06, 9.458999999999856e-06, 9.972000000000453e-06, 9.972000000000453e-06, 9.457999999996913e-06, 9.931000000001217e-06, 9.972000000000453e-06, 9.958000000000883e-06, 9.458999999999856e-06, 9.471999999999953e-06, 9.957999999997413e-06, 9.458999999999856e-06, 1.0000000000003062e-05, 9.944000000001313e-06, 9.458000000000383e-06, 1.0444999999997817e-05, 9.902000000002603e-06, 9.972000000000453e-06, 9.472000000003422e-06, 9.971999999996983e-06, 9.959000000000356e-06, 9.972999999999926e-06, 9.444000000000813e-06, 9.917000000001647e-06, 9.458000000000383e-06, 9.943999999997843e-06, 9.444000000000813e-06, 9.958000000000883e-06, 9.943999999997843e-06, 9.958000000000883e-06, 9.972000000000453e-06, 9.958000000000883e-06, 9.958000000000883e-06, 9.471999999999953e-06, 9.972000000000453e-06, 9.943999999997843e-06, 1.0458999999997387e-05, 9.471999999999953e-06, 9.444000000000813e-06, 9.945000000000787e-06, 9.986000000000023e-06, 1.0473000000000426e-05, 9.458000000000383e-06, 9.958000000000883e-06, 9.445000000000286e-06, 9.472000000003422e-06, 9.972999999999926e-06, 9.958000000000883e-06, 9.472999999999426e-06]</msg>
<status status="PASS" starttime="20201030 11:51:41.246" endtime="20201030 11:51:41.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.234" endtime="20201030 11:51:41.252"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.263" endtime="20201030 11:51:41.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.258" endtime="20201030 11:51:41.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.255" endtime="20201030 11:51:41.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.790" endtime="20201030 11:51:41.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.789" endtime="20201030 11:51:41.288"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.312" endtime="20201030 11:51:41.331"></status>
</kw>
<msg timestamp="20201030 11:51:41.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.309" endtime="20201030 11:51:41.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.339" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.335" endtime="20201030 11:51:41.340"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.342" endtime="20201030 11:51:41.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.301" endtime="20201030 11:51:41.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.295" endtime="20201030 11:51:41.350"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.369" endtime="20201030 11:51:41.731"></status>
</kw>
<msg timestamp="20201030 11:51:41.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.365" endtime="20201030 11:51:41.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043235458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043245917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.741" endtime="20201030 11:51:41.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.761" endtime="20201030 11:51:41.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.357" endtime="20201030 11:51:41.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.351" endtime="20201030 11:51:41.768"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.779" level="INFO">${RESULT} = [{'diff': 1.0459000000004326e-05}, {'diff': 1.0958999999997887e-05}, {'diff': 1.0459000000004326e-05}, {'diff': 1.0458000000004852e-05}, {'diff': 1.0958000000005352e-05}, {'diff': 1.0444999999997817e-...</msg>
<status status="PASS" starttime="20201030 11:51:41.770" endtime="20201030 11:51:41.780"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.790" level="INFO">${ACCURACY} = {'diff': [1.0459000000004326e-05, 1.0958999999997887e-05, 1.0459000000004326e-05, 1.0458000000004852e-05, 1.0958000000005352e-05, 1.0444999999997817e-05, 1.1013999999996693e-05, 1.0444999999997817e-05...</msg>
<status status="PASS" starttime="20201030 11:51:41.781" endtime="20201030 11:51:41.790"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.801" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.799" endtime="20201030 11:51:41.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.807" level="INFO">VALUE: [1.0459000000004326e-05, 1.0958999999997887e-05, 1.0459000000004326e-05, 1.0458000000004852e-05, 1.0958000000005352e-05, 1.0444999999997817e-05, 1.1013999999996693e-05, 1.0444999999997817e-05, 1.0485999999997053e-05, 1.0500000000003562e-05, 1.0958999999997887e-05, 1.0472999999996957e-05, 1.0971999999997983e-05, 1.0444999999997817e-05, 1.0999999999997123e-05, 1.0971999999997983e-05, 1.0527999999995763e-05, 1.0943999999998844e-05, 1.0514000000003132e-05, 1.0972000000004922e-05, 1.0542000000002272e-05, 1.0987000000003966e-05, 1.0971999999997983e-05, 1.0972000000004922e-05, 1.0985999999997553e-05, 1.0472000000004422e-05, 1.0444000000005282e-05, 1.0472000000004422e-05, 1.1471999999998483e-05, 1.1429999999999774e-05, 1.0471999999997483e-05, 1.0958999999997887e-05, 1.0472999999996957e-05, 1.0443999999998343e-05, 1.0443999999998343e-05, 1.0930999999998747e-05, 1.0459000000004326e-05, 1.0972000000004922e-05, 1.0458000000004852e-05, 1.0457999999997913e-05, 1.0972999999997457e-05, 1.0486000000003992e-05, 1.1471999999998483e-05, 1.0443999999998343e-05, 1.0972999999997457e-05, 1.0444999999997817e-05, 1.1014000000003632e-05, 1.0986000000004492e-05, 1.0957999999998413e-05, 1.0473000000003896e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.804" endtime="20201030 11:51:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.791" endtime="20201030 11:51:41.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.822" endtime="20201030 11:51:41.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.816" endtime="20201030 11:51:41.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.813" endtime="20201030 11:51:41.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.290" endtime="20201030 11:51:41.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.289" endtime="20201030 11:51:41.847"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.872" endtime="20201030 11:51:41.891"></status>
</kw>
<msg timestamp="20201030 11:51:41.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.868" endtime="20201030 11:51:41.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.899" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.894" endtime="20201030 11:51:41.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.901" endtime="20201030 11:51:41.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.861" endtime="20201030 11:51:41.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.854" endtime="20201030 11:51:41.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.926" endtime="20201030 11:51:42.285"></status>
</kw>
<msg timestamp="20201030 11:51:42.293" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.923" endtime="20201030 11:51:42.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.313" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.296" endtime="20201030 11:51:42.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.315" endtime="20201030 11:51:42.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.915" endtime="20201030 11:51:42.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.910" endtime="20201030 11:51:42.323"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.334" level="INFO">${RESULT} = [{'diff': 1.1958999999998887e-05}, {'diff': 1.1986999999998027e-05}, {'diff': 1.1443999999999344e-05}, {'diff': 1.1959000000005826e-05}, {'diff': 1.1957999999999414e-05}, {'diff': 1.2472000000006422e-...</msg>
<status status="PASS" starttime="20201030 11:51:42.324" endtime="20201030 11:51:42.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.345" level="INFO">${ACCURACY} = {'diff': [1.1958999999998887e-05, 1.1986999999998027e-05, 1.1443999999999344e-05, 1.1959000000005826e-05, 1.1957999999999414e-05, 1.2472000000006422e-05, 1.1403000000000107e-05, 1.1471999999998483e-05...</msg>
<status status="PASS" starttime="20201030 11:51:42.336" endtime="20201030 11:51:42.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.357" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.355" endtime="20201030 11:51:42.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.363" level="INFO">VALUE: [1.1958999999998887e-05, 1.1986999999998027e-05, 1.1443999999999344e-05, 1.1959000000005826e-05, 1.1957999999999414e-05, 1.2472000000006422e-05, 1.1403000000000107e-05, 1.1471999999998483e-05, 1.1971999999998983e-05, 1.1485999999998053e-05, 1.1389000000000538e-05, 1.1472000000005422e-05, 1.2444000000000344e-05, 1.1971999999998983e-05, 1.1958000000006352e-05, 1.1528000000003702e-05, 1.1999999999998123e-05, 1.1971999999998983e-05, 1.2485999999999053e-05, 1.1985999999998553e-05, 1.1971999999998983e-05, 1.1944999999999317e-05, 1.1943999999999844e-05, 1.1929999999993335e-05, 1.1429999999999774e-05, 1.1485999999998053e-05, 1.1985999999998553e-05, 1.1487000000004466e-05, 1.1958999999998887e-05, 1.1944999999999317e-05, 1.1443999999999344e-05, 1.1472999999997957e-05, 1.1917000000000177e-05, 1.1985999999998553e-05, 1.1957999999999414e-05, 1.1472000000005422e-05, 1.1957999999999414e-05, 1.1971999999998983e-05, 1.1972999999998457e-05, 1.1985999999998553e-05, 1.1443999999999344e-05, 1.1957999999999414e-05, 1.1943999999999844e-05, 1.1472000000005422e-05, 1.1957999999999414e-05, 1.2472999999998957e-05, 1.1471999999998483e-05, 1.1471999999998483e-05, 1.1930999999999747e-05, 1.1429999999999774e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.360" endtime="20201030 11:51:42.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.347" endtime="20201030 11:51:42.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.377" endtime="20201030 11:51:42.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.372" endtime="20201030 11:51:42.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.369" endtime="20201030 11:51:42.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.850" endtime="20201030 11:51:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.849" endtime="20201030 11:51:42.403"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.427" endtime="20201030 11:51:42.446"></status>
</kw>
<msg timestamp="20201030 11:51:42.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.424" endtime="20201030 11:51:42.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.449" endtime="20201030 11:51:42.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.456" endtime="20201030 11:51:42.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.416" endtime="20201030 11:51:42.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.410" endtime="20201030 11:51:42.463"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.481" endtime="20201030 11:51:42.840"></status>
</kw>
<msg timestamp="20201030 11:51:42.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0438955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:42.478" endtime="20201030 11:51:42.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.868" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043882556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0438955, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:42.851" endtime="20201030 11:51:42.869"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.870" endtime="20201030 11:51:42.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.470" endtime="20201030 11:51:42.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.465" endtime="20201030 11:51:42.878"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.889" level="INFO">${RESULT} = [{'diff': 1.2943999999993905e-05}, {'diff': 1.3444000000001344e-05}, {'diff': 1.2971999999999984e-05}, {'diff': 1.2471999999999483e-05}, {'diff': 1.2485999999999053e-05}, {'diff': 1.2958000000000414e-...</msg>
<status status="PASS" starttime="20201030 11:51:42.879" endtime="20201030 11:51:42.889"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.905" level="INFO">${ACCURACY} = {'diff': [1.2943999999993905e-05, 1.3444000000001344e-05, 1.2971999999999984e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2958000000000414e-05, 1.2471999999999483e-05, 1.2944000000000844e-05...</msg>
<status status="PASS" starttime="20201030 11:51:42.891" endtime="20201030 11:51:42.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.916" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.914" endtime="20201030 11:51:42.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.922" level="INFO">VALUE: [1.2943999999993905e-05, 1.3444000000001344e-05, 1.2971999999999984e-05, 1.2471999999999483e-05, 1.2485999999999053e-05, 1.2958000000000414e-05, 1.2471999999999483e-05, 1.2944000000000844e-05, 1.3445000000000817e-05, 1.2945000000000317e-05, 1.2457999999999914e-05, 1.2486999999998527e-05, 1.2943999999993905e-05, 1.2458999999999387e-05, 1.2985999999999553e-05, 1.2916000000001704e-05, 1.2971999999999984e-05, 1.302699999999879e-05, 1.3013000000006159e-05, 1.2958999999999887e-05, 1.3459000000000387e-05, 1.254099999999786e-05, 1.2444000000000344e-05, 1.2457999999999914e-05, 1.2417000000000677e-05, 1.2999999999999123e-05, 1.2971999999999984e-05, 1.2471999999999483e-05, 1.2499999999998623e-05, 1.2471999999999483e-05, 1.2971999999999984e-05, 1.2444999999999817e-05, 1.2471999999999483e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2944000000000844e-05, 1.2471999999999483e-05, 1.2457999999999914e-05, 1.2458999999999387e-05, 1.2958000000000414e-05, 1.2944000000000844e-05, 1.2444999999999817e-05, 1.2444999999999817e-05, 1.2917000000001178e-05, 1.2431000000000247e-05, 1.2958000000000414e-05, 1.2457999999999914e-05, 1.2916000000001704e-05, 1.2471999999999483e-05, 1.2985999999999553e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.919" endtime="20201030 11:51:42.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.907" endtime="20201030 11:51:42.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.935" endtime="20201030 11:51:42.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.931" endtime="20201030 11:51:42.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.928" endtime="20201030 11:51:42.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.405" endtime="20201030 11:51:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.404" endtime="20201030 11:51:42.961"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.985" endtime="20201030 11:51:43.005"></status>
</kw>
<msg timestamp="20201030 11:51:43.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.982" endtime="20201030 11:51:43.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.008" endtime="20201030 11:51:43.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.015" endtime="20201030 11:51:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.974" endtime="20201030 11:51:43.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.968" endtime="20201030 11:51:43.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.040" endtime="20201030 11:51:43.398"></status>
</kw>
<msg timestamp="20201030 11:51:43.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043785583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.036" endtime="20201030 11:51:43.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043785583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043799556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.408" endtime="20201030 11:51:43.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.429" endtime="20201030 11:51:43.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.028" endtime="20201030 11:51:43.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.023" endtime="20201030 11:51:43.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.448" level="INFO">${RESULT} = [{'diff': 1.3973000000000457e-05}, {'diff': 1.3973000000000457e-05}, {'diff': 1.3903000000002608e-05}, {'diff': 1.3458000000000914e-05}, {'diff': 1.3527999999998763e-05}, {'diff': 1.3986000000000554e-...</msg>
<status status="PASS" starttime="20201030 11:51:43.438" endtime="20201030 11:51:43.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.458" level="INFO">${ACCURACY} = {'diff': [1.3973000000000457e-05, 1.3973000000000457e-05, 1.3903000000002608e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3986000000000554e-05, 1.3486000000000054e-05, 1.3472000000000484e-05...</msg>
<status status="PASS" starttime="20201030 11:51:43.450" endtime="20201030 11:51:43.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.470" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.467" endtime="20201030 11:51:43.470"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.475" level="INFO">VALUE: [1.3973000000000457e-05, 1.3973000000000457e-05, 1.3903000000002608e-05, 1.3458000000000914e-05, 1.3527999999998763e-05, 1.3986000000000554e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3986000000000554e-05, 1.3444000000001344e-05, 1.3499999999999623e-05, 1.3527999999998763e-05, 1.3973000000000457e-05, 1.3972000000000984e-05, 1.3430000000001774e-05, 1.3959000000000887e-05, 1.4000000000000123e-05, 1.3458000000000914e-05, 1.3430999999994309e-05, 1.3486000000000054e-05, 1.3472000000000484e-05, 1.3472000000000484e-05, 1.3458000000000914e-05, 1.3472000000000484e-05, 1.3486000000000054e-05, 1.4473000000000957e-05, 1.3959000000000887e-05, 1.3972000000000984e-05, 1.3944000000001844e-05, 1.3486000000000054e-05, 1.3459000000000387e-05, 1.3972000000000984e-05, 1.3972000000000984e-05, 1.3973000000000457e-05, 1.3973000000000457e-05, 1.3486000000000054e-05, 1.3973000000000457e-05, 1.3458000000000914e-05, 1.4500000000000624e-05, 1.3457999999993975e-05, 1.3472000000000484e-05, 1.3972000000000984e-05, 1.4027999999999263e-05, 1.3402999999995169e-05, 1.3472000000000484e-05, 1.3973000000000457e-05, 1.3486000000000054e-05, 1.4000000000000123e-05, 1.3499999999999623e-05, 1.3987000000000027e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.472" endtime="20201030 11:51:43.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.460" endtime="20201030 11:51:43.479"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.489" endtime="20201030 11:51:43.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.484" endtime="20201030 11:51:43.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.481" endtime="20201030 11:51:43.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.963" endtime="20201030 11:51:43.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.962" endtime="20201030 11:51:43.515"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.539" endtime="20201030 11:51:43.559"></status>
</kw>
<msg timestamp="20201030 11:51:43.560" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.535" endtime="20201030 11:51:43.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.562" endtime="20201030 11:51:43.568"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.569" endtime="20201030 11:51:43.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.527" endtime="20201030 11:51:43.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.521" endtime="20201030 11:51:43.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.594" endtime="20201030 11:51:43.953"></status>
</kw>
<msg timestamp="20201030 11:51:43.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044914167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.591" endtime="20201030 11:51:43.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044899194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044914167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.963" endtime="20201030 11:51:43.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.983" endtime="20201030 11:51:43.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.583" endtime="20201030 11:51:43.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.578" endtime="20201030 11:51:43.990"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.001" level="INFO">${RESULT} = [{'diff': 1.4972999999994518e-05}, {'diff': 1.4473000000000957e-05}, {'diff': 1.4973000000001457e-05}, {'diff': 1.4459000000001387e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.4500000000000624e-...</msg>
<status status="PASS" starttime="20201030 11:51:43.992" endtime="20201030 11:51:44.002"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.011" level="INFO">${ACCURACY} = {'diff': [1.4972999999994518e-05, 1.4473000000000957e-05, 1.4973000000001457e-05, 1.4459000000001387e-05, 1.4958000000002414e-05, 1.4500000000000624e-05, 1.5014000000000693e-05, 1.4472000000001484e-05...</msg>
<status status="PASS" starttime="20201030 11:51:44.003" endtime="20201030 11:51:44.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.023" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.020" endtime="20201030 11:51:44.024"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.029" level="INFO">VALUE: [1.4972999999994518e-05, 1.4473000000000957e-05, 1.4973000000001457e-05, 1.4459000000001387e-05, 1.4958000000002414e-05, 1.4500000000000624e-05, 1.5014000000000693e-05, 1.4472000000001484e-05, 1.4986000000001554e-05, 1.4486000000001054e-05, 1.5457999999995975e-05, 1.4472000000001484e-05, 1.4957999999995475e-05, 1.5458000000002914e-05, 1.4972000000001984e-05, 1.4444000000002344e-05, 1.4458000000001914e-05, 1.4514000000000193e-05, 1.4972000000001984e-05, 1.4472000000001484e-05, 1.4972000000001984e-05, 1.4527999999999763e-05, 1.551300000000172e-05, 1.504100000000036e-05, 1.4472000000001484e-05, 1.4443999999995405e-05, 1.5458000000002914e-05, 1.4443999999995405e-05, 1.4514000000000193e-05, 1.4972000000001984e-05, 1.547299999999502e-05, 1.4958000000002414e-05, 1.4901999999997195e-05, 1.4473000000000957e-05, 1.4471999999994545e-05, 1.5472000000002484e-05, 1.4472000000001484e-05, 1.4971999999995045e-05, 1.543099999999631e-05, 1.4971999999995045e-05, 1.4445000000001817e-05, 1.4972000000001984e-05, 1.4472000000001484e-05, 1.4972000000001984e-05, 1.4472000000001484e-05, 1.4472000000001484e-05, 1.5472000000002484e-05, 1.4971999999995045e-05, 1.4986000000001554e-05, 1.4958000000002414e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.025" endtime="20201030 11:51:44.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.013" endtime="20201030 11:51:44.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.044" endtime="20201030 11:51:44.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.038" endtime="20201030 11:51:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.035" endtime="20201030 11:51:44.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.517" endtime="20201030 11:51:44.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.516" endtime="20201030 11:51:44.070"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.094" endtime="20201030 11:51:44.113"></status>
</kw>
<msg timestamp="20201030 11:51:44.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.090" endtime="20201030 11:51:44.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.120" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.116" endtime="20201030 11:51:44.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.123" endtime="20201030 11:51:44.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.082" endtime="20201030 11:51:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.076" endtime="20201030 11:51:44.130"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.148" endtime="20201030 11:51:44.435"></status>
</kw>
<msg timestamp="20201030 11:51:44.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.144" endtime="20201030 11:51:44.438"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043440819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043456833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.439" endtime="20201030 11:51:44.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.449" endtime="20201030 11:51:44.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.136" endtime="20201030 11:51:44.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.131" endtime="20201030 11:51:44.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.466" level="INFO">${RESULT} = [{'diff': 1.6014000000001694e-05}, {'diff': 1.5959000000002888e-05}, {'diff': 1.5499999999994685e-05}, {'diff': 1.5943999999996905e-05}, {'diff': 1.5458000000002914e-05}, {'diff': 1.5971999999996045e-...</msg>
<status status="PASS" starttime="20201030 11:51:44.456" endtime="20201030 11:51:44.466"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.477" level="INFO">${ACCURACY} = {'diff': [1.6014000000001694e-05, 1.5959000000002888e-05, 1.5499999999994685e-05, 1.5943999999996905e-05, 1.5458000000002914e-05, 1.5971999999996045e-05, 1.595899999999595e-05, 1.5945000000003318e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:44.468" endtime="20201030 11:51:44.478"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.489" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.487" endtime="20201030 11:51:44.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.495" level="INFO">VALUE: [1.6014000000001694e-05, 1.5959000000002888e-05, 1.5499999999994685e-05, 1.5943999999996905e-05, 1.5458000000002914e-05, 1.5971999999996045e-05, 1.595899999999595e-05, 1.5945000000003318e-05, 1.5457999999995975e-05, 1.554100000000086e-05, 1.5457999999995975e-05, 1.5971999999996045e-05, 1.5485999999995115e-05, 1.548699999999459e-05, 1.5444000000003344e-05, 1.6000000000002124e-05, 1.5472000000002484e-05, 1.5459000000002387e-05, 1.5958000000003414e-05, 1.5959000000002888e-05, 1.5973000000002457e-05, 1.5971999999996045e-05, 1.5459000000002387e-05, 1.5472000000002484e-05, 1.5458000000002914e-05, 1.5957999999996475e-05, 1.5472000000002484e-05, 1.647299999999602e-05, 1.5971999999996045e-05, 1.5999999999995185e-05, 1.5472000000002484e-05, 1.6458000000003914e-05, 1.547299999999502e-05, 1.5915999999997765e-05, 1.5945000000003318e-05, 1.5972000000002984e-05, 1.6458000000003914e-05, 1.5458000000002914e-05, 1.5473000000001957e-05, 1.6458000000003914e-05, 1.597299999999552e-05, 1.5957999999996475e-05, 1.5959000000002888e-05, 1.5471999999995545e-05, 1.5958000000003414e-05, 1.5457999999995975e-05, 1.5971999999996045e-05, 1.5542000000000333e-05, 1.5971999999996045e-05, 1.5985999999995615e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.491" endtime="20201030 11:51:44.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.479" endtime="20201030 11:51:44.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.508" endtime="20201030 11:51:44.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.504" endtime="20201030 11:51:44.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.501" endtime="20201030 11:51:44.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.072" endtime="20201030 11:51:44.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.070" endtime="20201030 11:51:44.534"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.558" endtime="20201030 11:51:44.577"></status>
</kw>
<msg timestamp="20201030 11:51:44.578" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.555" endtime="20201030 11:51:44.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.580" endtime="20201030 11:51:44.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.587" endtime="20201030 11:51:44.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.547" endtime="20201030 11:51:44.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.541" endtime="20201030 11:51:44.595"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.612" endtime="20201030 11:51:44.983"></status>
</kw>
<msg timestamp="20201030 11:51:44.991" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043327528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.609" endtime="20201030 11:51:44.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043327528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.993" endtime="20201030 11:51:45.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.013" endtime="20201030 11:51:45.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.601" endtime="20201030 11:51:45.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.596" endtime="20201030 11:51:45.021"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.032" level="INFO">${RESULT} = [{'diff': 1.645899999999645e-05}, {'diff': 1.6971999999997045e-05}, {'diff': 1.6971999999997045e-05}, {'diff': 1.6471999999996545e-05}, {'diff': 1.6999999999996185e-05}, {'diff': 1.6972000000003984e-0...</msg>
<status status="PASS" starttime="20201030 11:51:45.022" endtime="20201030 11:51:45.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.044" level="INFO">${ACCURACY} = {'diff': [1.645899999999645e-05, 1.6971999999997045e-05, 1.6971999999997045e-05, 1.6471999999996545e-05, 1.6999999999996185e-05, 1.6972000000003984e-05, 1.6957999999997475e-05, 1.6985999999996615e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:45.034" endtime="20201030 11:51:45.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.056" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.053" endtime="20201030 11:51:45.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.061" level="INFO">VALUE: [1.645899999999645e-05, 1.6971999999997045e-05, 1.6971999999997045e-05, 1.6471999999996545e-05, 1.6999999999996185e-05, 1.6972000000003984e-05, 1.6957999999997475e-05, 1.6985999999996615e-05, 1.645899999999645e-05, 1.645899999999645e-05, 1.6889000000006038e-05, 1.695899999999695e-05, 1.6971999999997045e-05, 1.6429999999997835e-05, 1.6959000000003888e-05, 1.7000000000003124e-05, 1.6973000000003458e-05, 1.697299999999652e-05, 1.6500000000002624e-05, 1.6457999999996975e-05, 1.6957999999997475e-05, 1.6957999999997475e-05, 1.6444000000004344e-05, 1.6971999999997045e-05, 1.6457999999996975e-05, 1.6943999999997905e-05, 1.6471999999996545e-05, 1.6415999999998265e-05, 1.697299999999652e-05, 1.6957999999997475e-05, 1.6487000000002527e-05, 1.640299999999817e-05, 1.7445000000004818e-05, 1.695899999999695e-05, 1.6957999999997475e-05, 1.6457999999996975e-05, 1.6486000000003054e-05, 1.6429999999997835e-05, 1.697299999999652e-05, 1.645899999999645e-05, 1.6973000000003458e-05, 1.6958000000004414e-05, 1.6943999999997905e-05, 1.6471999999996545e-05, 1.6957999999997475e-05, 1.6972000000003984e-05, 1.745899999999745e-05, 1.6958000000004414e-05, 1.6986000000003554e-05, 1.6944000000004844e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.058" endtime="20201030 11:51:45.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.046" endtime="20201030 11:51:45.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.075" endtime="20201030 11:51:45.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.070" endtime="20201030 11:51:45.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.068" endtime="20201030 11:51:45.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.536" endtime="20201030 11:51:45.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.535" endtime="20201030 11:51:45.101"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.125" endtime="20201030 11:51:45.144"></status>
</kw>
<msg timestamp="20201030 11:51:45.146" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.121" endtime="20201030 11:51:45.146"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.148" endtime="20201030 11:51:45.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.155" endtime="20201030 11:51:45.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.114" endtime="20201030 11:51:45.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.108" endtime="20201030 11:51:45.162"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.179" endtime="20201030 11:51:45.548"></status>
</kw>
<msg timestamp="20201030 11:51:45.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0436485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:45.176" endtime="20201030 11:51:45.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0436485, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:45.558" endtime="20201030 11:51:45.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.578" endtime="20201030 11:51:45.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.168" endtime="20201030 11:51:45.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.163" endtime="20201030 11:51:45.585"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.596" level="INFO">${RESULT} = [{'diff': 1.7971999999998045e-05}, {'diff': 1.7943999999998905e-05}, {'diff': 1.7971999999998045e-05}, {'diff': 1.7971999999998045e-05}, {'diff': 1.7459000000004388e-05}, {'diff': 1.7985999999997615e-...</msg>
<status status="PASS" starttime="20201030 11:51:45.587" endtime="20201030 11:51:45.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.606" level="INFO">${ACCURACY} = {'diff': [1.7971999999998045e-05, 1.7943999999998905e-05, 1.7971999999998045e-05, 1.7971999999998045e-05, 1.7459000000004388e-05, 1.7985999999997615e-05, 1.7971999999998045e-05, 1.7972000000004984e-05...</msg>
<status status="PASS" starttime="20201030 11:51:45.598" endtime="20201030 11:51:45.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.618" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.615" endtime="20201030 11:51:45.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.623" level="INFO">VALUE: [1.7971999999998045e-05, 1.7943999999998905e-05, 1.7971999999998045e-05, 1.7971999999998045e-05, 1.7459000000004388e-05, 1.7985999999997615e-05, 1.7971999999998045e-05, 1.7972000000004984e-05, 1.745899999999745e-05, 1.8028000000003264e-05, 1.7457999999997975e-05, 1.7457999999997975e-05, 1.8471999999998545e-05, 1.7957999999998475e-05, 1.7457999999997975e-05, 1.8013999999996755e-05, 1.7486000000004054e-05, 1.744499999999788e-05, 1.7485999999997115e-05, 1.795899999999795e-05, 1.790299999999967e-05, 1.794499999999838e-05, 1.7986000000004554e-05, 1.7972000000004984e-05, 1.7458000000004914e-05, 1.747299999999702e-05, 1.7985999999997615e-05, 1.7957999999998475e-05, 1.7472000000004484e-05, 1.7472000000004484e-05, 1.7443999999998405e-05, 1.7471999999997545e-05, 1.7959000000004888e-05, 1.795899999999795e-05, 1.7971999999998045e-05, 1.7459000000004388e-05, 1.7487000000003528e-05, 1.8457999999998975e-05, 1.7957999999998475e-05, 1.7957999999998475e-05, 1.7971999999998045e-05, 1.7957999999998475e-05, 1.7985999999997615e-05, 1.7443999999998405e-05, 1.847299999999802e-05, 1.7985999999997615e-05, 1.8000000000004124e-05, 1.7457999999997975e-05, 1.8471999999998545e-05, 1.7457999999997975e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.620" endtime="20201030 11:51:45.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.608" endtime="20201030 11:51:45.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.637" endtime="20201030 11:51:45.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.632" endtime="20201030 11:51:45.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.629" endtime="20201030 11:51:45.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.103" endtime="20201030 11:51:45.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.102" endtime="20201030 11:51:45.663"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.687" endtime="20201030 11:51:45.707"></status>
</kw>
<msg timestamp="20201030 11:51:45.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.683" endtime="20201030 11:51:45.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.715" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.711" endtime="20201030 11:51:45.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.718" endtime="20201030 11:51:45.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.676" endtime="20201030 11:51:45.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.670" endtime="20201030 11:51:45.725"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.742" endtime="20201030 11:51:46.114"></status>
</kw>
<msg timestamp="20201030 11:51:46.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044960542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.739" endtime="20201030 11:51:46.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044960542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044979514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.124" endtime="20201030 11:51:46.142"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.144" endtime="20201030 11:51:46.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.731" endtime="20201030 11:51:46.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.726" endtime="20201030 11:51:46.151"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.162" level="INFO">${RESULT} = [{'diff': 1.8971999999999045e-05}, {'diff': 1.8957999999999475e-05}, {'diff': 1.9000000000005124e-05}, {'diff': 1.9471999999999545e-05}, {'diff': 1.8499999999997685e-05}, {'diff': 1.891700000000024e-0...</msg>
<status status="PASS" starttime="20201030 11:51:46.153" endtime="20201030 11:51:46.163"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.172" level="INFO">${ACCURACY} = {'diff': [1.8971999999999045e-05, 1.8957999999999475e-05, 1.9000000000005124e-05, 1.9471999999999545e-05, 1.8499999999997685e-05, 1.891700000000024e-05, 1.895899999999895e-05, 1.8957999999999475e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:46.165" endtime="20201030 11:51:46.173"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.184" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.182" endtime="20201030 11:51:46.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.190" level="INFO">VALUE: [1.8971999999999045e-05, 1.8957999999999475e-05, 1.9000000000005124e-05, 1.9471999999999545e-05, 1.8499999999997685e-05, 1.891700000000024e-05, 1.895899999999895e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.8471999999998545e-05, 1.844499999999888e-05, 1.8486000000005054e-05, 1.845899999999845e-05, 1.8443999999999405e-05, 1.8471999999998545e-05, 1.847299999999802e-05, 1.8971999999999045e-05, 1.8971999999999045e-05, 1.8957999999999475e-05, 1.955500000000443e-05, 1.8957999999999475e-05, 1.8985999999998615e-05, 1.895899999999895e-05, 1.945899999999945e-05, 1.848699999999759e-05, 1.9471999999999545e-05, 1.8971999999999045e-05, 1.8471999999998545e-05, 1.8971999999999045e-05, 1.9471999999999545e-05, 1.8459000000005388e-05, 1.8458000000005914e-05, 1.8445000000005818e-05, 1.8471999999998545e-05, 1.9471999999999545e-05, 1.895899999999895e-05, 1.8943999999999905e-05, 1.8958000000006414e-05, 1.8957999999999475e-05, 1.8486000000005054e-05, 1.8486000000005054e-05, 1.9541999999997395e-05, 1.945899999999945e-05, 1.8971999999999045e-05, 1.9457999999999975e-05, 1.8457999999998975e-05, 1.8485999999998115e-05, 1.847299999999802e-05, 1.947299999999902e-05, 1.8471999999998545e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.187" endtime="20201030 11:51:46.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.174" endtime="20201030 11:51:46.193"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.205" endtime="20201030 11:51:46.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.199" endtime="20201030 11:51:46.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.196" endtime="20201030 11:51:46.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.665" endtime="20201030 11:51:46.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.664" endtime="20201030 11:51:46.231"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.255" endtime="20201030 11:51:46.273"></status>
</kw>
<msg timestamp="20201030 11:51:46.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.251" endtime="20201030 11:51:46.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.277" endtime="20201030 11:51:46.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.283" endtime="20201030 11:51:46.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.244" endtime="20201030 11:51:46.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.237" endtime="20201030 11:51:46.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.308" endtime="20201030 11:51:46.669"></status>
</kw>
<msg timestamp="20201030 11:51:46.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043445917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043465875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.305" endtime="20201030 11:51:46.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043445917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043465875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.679" endtime="20201030 11:51:46.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.699" endtime="20201030 11:51:46.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.297" endtime="20201030 11:51:46.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.292" endtime="20201030 11:51:46.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.717" level="INFO">${RESULT} = [{'diff': 1.9958000000000475e-05}, {'diff': 1.9944000000000905e-05}, {'diff': 1.9457999999999975e-05}, {'diff': 1.9944000000000905e-05}, {'diff': 1.945899999999945e-05}, {'diff': 1.9958000000000475e-0...</msg>
<status status="PASS" starttime="20201030 11:51:46.708" endtime="20201030 11:51:46.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.728" level="INFO">${ACCURACY} = {'diff': [1.9958000000000475e-05, 1.9944000000000905e-05, 1.9457999999999975e-05, 1.9944000000000905e-05, 1.945899999999945e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 2.0458000000000975e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:46.719" endtime="20201030 11:51:46.729"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.740" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.738" endtime="20201030 11:51:46.741"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.746" level="INFO">VALUE: [1.9958000000000475e-05, 1.9944000000000905e-05, 1.9457999999999975e-05, 1.9944000000000905e-05, 1.945899999999945e-05, 1.9958000000000475e-05, 1.9972000000000045e-05, 2.0458000000000975e-05, 1.9957999999993536e-05, 1.995899999999995e-05, 1.9444000000000405e-05, 2.0041999999997895e-05, 1.9972000000000045e-05, 2.0027999999998325e-05, 1.9485999999999115e-05, 1.9999999999999185e-05, 1.991700000000124e-05, 1.943100000000031e-05, 1.993100000000081e-05, 2.0472000000000545e-05, 1.945899999999945e-05, 1.991700000000124e-05, 1.945899999999945e-05, 1.943100000000031e-05, 1.9471999999999545e-05, 2.0458000000000975e-05, 1.9471999999999545e-05, 1.944499999999988e-05, 1.9457999999999975e-05, 1.9457999999999975e-05, 1.947299999999902e-05, 1.9457999999999975e-05, 1.995899999999995e-05, 1.9958000000000475e-05, 1.9958000000000475e-05, 2.0486000000000115e-05, 1.9972000000000045e-05, 1.9958000000000475e-05, 1.994500000000038e-05, 2.0472000000000545e-05, 1.9972000000000045e-05, 1.9457999999999975e-05, 1.9459000000006388e-05, 2.0472000000000545e-05, 2.0486000000000115e-05, 2.0458000000000975e-05, 1.991700000000124e-05, 1.9958000000000475e-05, 1.9471999999999545e-05, 1.9471999999999545e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.742" endtime="20201030 11:51:46.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.730" endtime="20201030 11:51:46.749"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.759" endtime="20201030 11:51:46.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.754" endtime="20201030 11:51:46.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.752" endtime="20201030 11:51:46.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.233" endtime="20201030 11:51:46.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.232" endtime="20201030 11:51:46.785"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.809" endtime="20201030 11:51:46.829"></status>
</kw>
<msg timestamp="20201030 11:51:46.830" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.805" endtime="20201030 11:51:46.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.832" endtime="20201030 11:51:46.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.839" endtime="20201030 11:51:46.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.798" endtime="20201030 11:51:46.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.792" endtime="20201030 11:51:46.846"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.864" endtime="20201030 11:51:47.221"></status>
</kw>
<msg timestamp="20201030 11:51:47.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043105514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.861" endtime="20201030 11:51:47.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043105514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.231" endtime="20201030 11:51:47.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.250" endtime="20201030 11:51:47.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.853" endtime="20201030 11:51:47.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.848" endtime="20201030 11:51:47.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.269" level="INFO">${RESULT} = [{'diff': 2.4722000000004796e-05}, {'diff': 2.4360999999993582e-05}, {'diff': 2.493099999999887e-05}, {'diff': 2.5055999999995526e-05}, {'diff': 2.4971999999998107e-05}, {'diff': 2.49169999999993e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:47.259" endtime="20201030 11:51:47.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.281" level="INFO">${ACCURACY} = {'diff': [2.4722000000004796e-05, 2.4360999999993582e-05, 2.493099999999887e-05, 2.5055999999995526e-05, 2.4971999999998107e-05, 2.49169999999993e-05, 2.4249999999996497e-05, 2.486100000000102e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:47.271" endtime="20201030 11:51:47.281"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.292" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.290" endtime="20201030 11:51:47.293"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.298" level="INFO">VALUE: [2.4722000000004796e-05, 2.4360999999993582e-05, 2.493099999999887e-05, 2.5055999999995526e-05, 2.4971999999998107e-05, 2.49169999999993e-05, 2.4249999999996497e-05, 2.486100000000102e-05, 2.5055999999995526e-05, 2.466700000000599e-05, 2.49169999999993e-05, 2.4499999999996747e-05, 2.4791999999995706e-05, 2.4652000000000007e-05, 2.433300000000138e-05, 2.490299999999973e-05, 2.463899999999991e-05, 2.4874999999993652e-05, 2.4457999999998037e-05, 2.4235999999996927e-05, 2.504100000000342e-05, 2.4165999999999077e-05, 2.4250000000003435e-05, 2.433300000000138e-05, 2.4332999999994442e-05, 2.4929999999999397e-05, 2.4972000000005046e-05, 2.5000000000004186e-05, 2.488900000000016e-05, 2.4320000000001285e-05, 2.4568999999995123e-05, 2.4208000000004726e-05, 2.4207999999997787e-05, 2.468100000000556e-05, 2.4249999999996497e-05, 2.422299999999683e-05, 2.466700000000599e-05, 2.433300000000138e-05, 2.487500000000059e-05, 2.4151999999999507e-05, 2.4555999999995026e-05, 2.4999999999997247e-05, 2.490299999999973e-05, 2.466699999999905e-05, 2.4971999999998107e-05, 2.412499999999984e-05, 2.431900000000181e-05, 2.412499999999984e-05, 2.470899999999776e-05, 2.411100000000027e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.294" endtime="20201030 11:51:47.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.282" endtime="20201030 11:51:47.301"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.311" endtime="20201030 11:51:47.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.307" endtime="20201030 11:51:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.304" endtime="20201030 11:51:47.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.787" endtime="20201030 11:51:47.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.786" endtime="20201030 11:51:47.337"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.361" endtime="20201030 11:51:47.380"></status>
</kw>
<msg timestamp="20201030 11:51:47.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.358" endtime="20201030 11:51:47.382"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.388" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.384" endtime="20201030 11:51:47.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.391" endtime="20201030 11:51:47.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.350" endtime="20201030 11:51:47.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.344" endtime="20201030 11:51:47.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.416" endtime="20201030 11:51:47.774"></status>
</kw>
<msg timestamp="20201030 11:51:47.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043144542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043170319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.412" endtime="20201030 11:51:47.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043144542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043170319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.784" endtime="20201030 11:51:47.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.796" endtime="20201030 11:51:47.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.404" endtime="20201030 11:51:47.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.399" endtime="20201030 11:51:47.800"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.805" level="INFO">${RESULT} = [{'diff': 2.5776999999997663e-05}, {'diff': 2.5832999999995943e-05}, {'diff': 2.5443999999999467e-05}, {'diff': 2.6014000000004756e-05}, {'diff': 2.5666000000000577e-05}, {'diff': 2.583300000000288e-0...</msg>
<status status="PASS" starttime="20201030 11:51:47.801" endtime="20201030 11:51:47.805"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.810" level="INFO">${ACCURACY} = {'diff': [2.5776999999997663e-05, 2.5832999999995943e-05, 2.5443999999999467e-05, 2.6014000000004756e-05, 2.5666000000000577e-05, 2.583300000000288e-05, 2.6000000000005186e-05, 2.5457999999999037e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:47.806" endtime="20201030 11:51:47.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.815" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.814" endtime="20201030 11:51:47.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.818" level="INFO">VALUE: [2.5776999999997663e-05, 2.5832999999995943e-05, 2.5443999999999467e-05, 2.6014000000004756e-05, 2.5666000000000577e-05, 2.583300000000288e-05, 2.6000000000005186e-05, 2.5457999999999037e-05, 2.5457999999999037e-05, 2.5777999999997137e-05, 2.5834000000002355e-05, 2.5056000000002465e-05, 2.533300000000238e-05, 2.5486000000005116e-05, 2.5541999999996456e-05, 2.6055999999996526e-05, 2.5721999999998857e-05, 2.6013999999997817e-05, 2.5916999999993362e-05, 2.584700000000245e-05, 2.59170000000003e-05, 2.5250000000004436e-05, 2.515299999999998e-05, 2.5749999999997997e-05, 2.595899999999901e-05, 2.5457999999999037e-05, 2.5098000000001175e-05, 2.563900000000091e-05, 2.5249999999997497e-05, 2.555500000000349e-05, 2.5110999999994332e-05, 2.512500000000084e-05, 2.5943999999999967e-05, 2.565300000000048e-05, 2.511100000000127e-05, 2.513900000000041e-05, 2.5318999999995873e-05, 2.540300000000023e-05, 2.5263999999997067e-05, 2.531900000000281e-05, 2.565300000000048e-05, 2.5999999999998247e-05, 2.511100000000127e-05, 2.5792000000003645e-05, 2.5556000000002965e-05, 2.513900000000041e-05, 2.518099999999912e-05, 2.584700000000245e-05, 2.518099999999912e-05, 2.5541999999996456e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.816" endtime="20201030 11:51:47.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.810" endtime="20201030 11:51:47.824"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.829" endtime="20201030 11:51:47.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.826" endtime="20201030 11:51:47.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.825" endtime="20201030 11:51:47.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.339" endtime="20201030 11:51:47.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.338" endtime="20201030 11:51:47.850"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.861" endtime="20201030 11:51:47.880"></status>
</kw>
<msg timestamp="20201030 11:51:47.881" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.859" endtime="20201030 11:51:47.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.884" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.882" endtime="20201030 11:51:47.884"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.885" endtime="20201030 11:51:47.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.856" endtime="20201030 11:51:47.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.853" endtime="20201030 11:51:47.889"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.902" endtime="20201030 11:51:48.258"></status>
</kw>
<msg timestamp="20201030 11:51:48.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028338375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.898" endtime="20201030 11:51:48.266"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028311361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028338375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.268" endtime="20201030 11:51:48.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.288" endtime="20201030 11:51:48.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.892" endtime="20201030 11:51:48.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.889" endtime="20201030 11:51:48.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.306" level="INFO">${RESULT} = [{'diff': 2.7013999999998817e-05}, {'diff': 2.6332999999999912e-05}, {'diff': 2.6333999999999386e-05}, {'diff': 2.69170000000013e-05}, {'diff': 2.640300000000123e-05}, {'diff': 2.6069999999999566e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:48.297" endtime="20201030 11:51:48.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.316" level="INFO">${ACCURACY} = {'diff': [2.7013999999998817e-05, 2.6332999999999912e-05, 2.6333999999999386e-05, 2.69170000000013e-05, 2.640300000000123e-05, 2.6069999999999566e-05, 2.6250000000001966e-05, 2.6319999999999816e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:48.308" endtime="20201030 11:51:48.317"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.328" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.325" endtime="20201030 11:51:48.328"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.333" level="INFO">VALUE: [2.7013999999998817e-05, 2.6332999999999912e-05, 2.6333999999999386e-05, 2.69170000000013e-05, 2.640300000000123e-05, 2.6069999999999566e-05, 2.6250000000001966e-05, 2.6319999999999816e-05, 2.7026999999998913e-05, 2.644499999999994e-05, 2.6250000000001966e-05, 2.6360999999999052e-05, 2.6263000000002062e-05, 2.6429999999997428e-05, 2.6402000000001757e-05, 2.6887999999999218e-05, 2.6458000000000037e-05, 2.6804999999997803e-05, 2.6430000000000897e-05, 2.6790999999998233e-05, 2.7069000000001092e-05, 2.7013999999998817e-05, 2.6694000000000717e-05, 2.6207999999999787e-05, 2.6985999999999677e-05, 2.6555999999997026e-05, 2.687500000000259e-05, 2.691699999999783e-05, 2.612500000000184e-05, 2.6792000000001176e-05, 2.6528000000001356e-05, 2.6820000000000316e-05, 2.6360999999999052e-05, 2.7041999999997957e-05, 2.668100000000062e-05, 2.697299999999958e-05, 2.6556000000000496e-05, 2.698699999999915e-05, 2.64170000000008e-05, 2.6249999999998497e-05, 2.6610999999999302e-05, 2.7069000000001092e-05, 2.6514000000001786e-05, 2.662500000000234e-05, 2.6958000000000537e-05, 2.6846999999999982e-05, 2.6596999999999732e-05, 2.7055000000001522e-05, 2.6679999999997678e-05, 2.6874999999999122e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.330" endtime="20201030 11:51:48.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.318" endtime="20201030 11:51:48.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.348" endtime="20201030 11:51:48.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.342" endtime="20201030 11:51:48.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.339" endtime="20201030 11:51:48.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.851" endtime="20201030 11:51:48.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.850" endtime="20201030 11:51:48.374"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.398" endtime="20201030 11:51:48.417"></status>
</kw>
<msg timestamp="20201030 11:51:48.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.394" endtime="20201030 11:51:48.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.421" endtime="20201030 11:51:48.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.427" endtime="20201030 11:51:48.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.387" endtime="20201030 11:51:48.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.381" endtime="20201030 11:51:48.434"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.452" endtime="20201030 11:51:48.811"></status>
</kw>
<msg timestamp="20201030 11:51:48.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04306375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043090903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:48.449" endtime="20201030 11:51:48.819"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04306375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043090903, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:48.821" endtime="20201030 11:51:48.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.840" endtime="20201030 11:51:48.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.441" endtime="20201030 11:51:48.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.436" endtime="20201030 11:51:48.848"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.859" level="INFO">${RESULT} = [{'diff': 2.715300000000198e-05}, {'diff': 2.718100000000112e-05}, {'diff': 2.7834000000004355e-05}, {'diff': 2.787500000000359e-05}, {'diff': 2.7444000000001467e-05}, {'diff': 2.712500000000284e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:48.850" endtime="20201030 11:51:48.860"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.871" level="INFO">${ACCURACY} = {'diff': [2.715300000000198e-05, 2.718100000000112e-05, 2.7834000000004355e-05, 2.787500000000359e-05, 2.7444000000001467e-05, 2.712500000000284e-05, 2.715300000000198e-05, 2.7499999999999747e-05, 2.7...</msg>
<status status="PASS" starttime="20201030 11:51:48.861" endtime="20201030 11:51:48.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.882" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.880" endtime="20201030 11:51:48.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.888" level="INFO">VALUE: [2.715300000000198e-05, 2.718100000000112e-05, 2.7834000000004355e-05, 2.787500000000359e-05, 2.7444000000001467e-05, 2.712500000000284e-05, 2.715300000000198e-05, 2.7499999999999747e-05, 2.76379999999965e-05, 2.7986000000000677e-05, 2.7208000000000787e-05, 2.7346999999997013e-05, 2.8026999999999913e-05, 2.7985999999993738e-05, 2.7554999999998553e-05, 2.8013999999999817e-05, 2.8028000000006326e-05, 2.7486000000000177e-05, 2.747300000000008e-05, 2.7554999999998553e-05, 2.7818999999998373e-05, 2.7819999999997846e-05, 2.7499999999999747e-05, 2.7805999999998277e-05, 2.7306000000004715e-05, 2.7346999999997013e-05, 2.793100000000187e-05, 2.8027999999999387e-05, 2.7222000000000357e-05, 2.7777999999999137e-05, 2.7249999999999497e-05, 2.7763000000000093e-05, 2.7791999999998707e-05, 2.7166999999994612e-05, 2.7416000000002327e-05, 2.7568999999998123e-05, 2.7416000000002327e-05, 2.7264000000006006e-05, 2.7471999999993668e-05, 2.734700000000395e-05, 2.7790999999999233e-05, 2.7235999999999927e-05, 2.7804999999998803e-05, 2.711100000000327e-05, 2.7332999999997443e-05, 2.792999999999546e-05, 2.783300000000488e-05, 2.745900000000051e-05, 2.788900000000316e-05, 2.7680999999994682e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.885" endtime="20201030 11:51:48.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.873" endtime="20201030 11:51:48.891"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.901" endtime="20201030 11:51:48.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.897" endtime="20201030 11:51:48.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.894" endtime="20201030 11:51:48.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.376" endtime="20201030 11:51:48.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.375" endtime="20201030 11:51:48.927"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.951" endtime="20201030 11:51:48.971"></status>
</kw>
<msg timestamp="20201030 11:51:48.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.948" endtime="20201030 11:51:48.973"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.974" endtime="20201030 11:51:48.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.981" endtime="20201030 11:51:48.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.940" endtime="20201030 11:51:48.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.934" endtime="20201030 11:51:48.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.006" endtime="20201030 11:51:49.364"></status>
</kw>
<msg timestamp="20201030 11:51:49.371" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042975569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04300425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:49.003" endtime="20201030 11:51:49.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042975569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04300425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:49.374" endtime="20201030 11:51:49.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.393" endtime="20201030 11:51:49.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.995" endtime="20201030 11:51:49.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.990" endtime="20201030 11:51:49.401"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.412" level="INFO">${RESULT} = [{'diff': 2.868100000000262e-05}, {'diff': 2.8444000000002467e-05}, {'diff': 2.867999999999621e-05}, {'diff': 2.8555000000006492e-05}, {'diff': 2.8138999999996472e-05}, {'diff': 2.8069999999998096e-05...</msg>
<status status="PASS" starttime="20201030 11:51:49.402" endtime="20201030 11:51:49.412"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.424" level="INFO">${ACCURACY} = {'diff': [2.868100000000262e-05, 2.8444000000002467e-05, 2.867999999999621e-05, 2.8555000000006492e-05, 2.8138999999996472e-05, 2.8069999999998096e-05, 2.8568999999999123e-05, 2.8764000000000567e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:49.414" endtime="20201030 11:51:49.424"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.435" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.433" endtime="20201030 11:51:49.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.441" level="INFO">VALUE: [2.868100000000262e-05, 2.8444000000002467e-05, 2.867999999999621e-05, 2.8555000000006492e-05, 2.8138999999996472e-05, 2.8069999999998096e-05, 2.8568999999999123e-05, 2.8764000000000567e-05, 2.8514000000000317e-05, 2.8458000000002037e-05, 2.8319999999998346e-05, 2.8874999999997653e-05, 2.8583999999998166e-05, 2.8624999999997403e-05, 2.8902999999996792e-05, 2.8346999999998013e-05, 2.8554999999999553e-05, 2.898700000000115e-05, 2.8833999999998416e-05, 2.8347999999997486e-05, 2.8166999999995612e-05, 2.897300000000158e-05, 2.8735999999994488e-05, 2.8540999999999983e-05, 2.8374999999997152e-05, 2.869399999999578e-05, 2.8554999999999553e-05, 2.8540999999999983e-05, 2.840300000000323e-05, 2.8110999999997333e-05, 2.8152000000003508e-05, 2.8791999999999707e-05, 2.8805999999999277e-05, 2.8346999999998013e-05, 2.9014000000000817e-05, 2.8971999999995168e-05, 2.8986000000001677e-05, 2.888900000000416e-05, 2.8972000000002107e-05, 2.8874999999997653e-05, 2.8124999999996902e-05, 2.868100000000262e-05, 2.8444999999995002e-05, 2.8721999999994918e-05, 2.865300000000348e-05, 2.845900000000151e-05, 2.8513999999993378e-05, 2.8958000000002537e-05, 2.8208999999994322e-05, 2.845900000000151e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.438" endtime="20201030 11:51:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.426" endtime="20201030 11:51:49.444"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.454" endtime="20201030 11:51:49.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.450" endtime="20201030 11:51:49.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.447" endtime="20201030 11:51:49.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.929" endtime="20201030 11:51:49.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.928" endtime="20201030 11:51:49.480"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.504" endtime="20201030 11:51:49.524"></status>
</kw>
<msg timestamp="20201030 11:51:49.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.501" endtime="20201030 11:51:49.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.527" endtime="20201030 11:51:49.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.534" endtime="20201030 11:51:49.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.493" endtime="20201030 11:51:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.487" endtime="20201030 11:51:49.541"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.559" endtime="20201030 11:51:49.920"></status>
</kw>
<msg timestamp="20201030 11:51:49.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043317167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043346597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.556" endtime="20201030 11:51:49.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043317167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043346597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.930" endtime="20201030 11:51:49.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.950" endtime="20201030 11:51:49.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.548" endtime="20201030 11:51:49.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.543" endtime="20201030 11:51:49.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.968" level="INFO">${RESULT} = [{'diff': 2.9430000000003897e-05}, {'diff': 2.9958000000003537e-05}, {'diff': 2.9930000000004398e-05}, {'diff': 2.9499999999994808e-05}, {'diff': 2.9346999999999013e-05}, {'diff': 2.9444999999996002e-...</msg>
<status status="PASS" starttime="20201030 11:51:49.959" endtime="20201030 11:51:49.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.978" level="INFO">${ACCURACY} = {'diff': [2.9430000000003897e-05, 2.9958000000003537e-05, 2.9930000000004398e-05, 2.9499999999994808e-05, 2.9346999999999013e-05, 2.9444999999996002e-05, 2.9500000000001747e-05, 2.9110999999998333e-05...</msg>
<status status="PASS" starttime="20201030 11:51:49.970" endtime="20201030 11:51:49.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.990" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.987" endtime="20201030 11:51:49.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.995" level="INFO">VALUE: [2.9430000000003897e-05, 2.9958000000003537e-05, 2.9930000000004398e-05, 2.9499999999994808e-05, 2.9346999999999013e-05, 2.9444999999996002e-05, 2.9500000000001747e-05, 2.9110999999998333e-05, 2.9930999999996932e-05, 2.937500000000509e-05, 2.9166999999996612e-05, 2.9638999999997973e-05, 3.0028000000001387e-05, 2.9930999999996932e-05, 2.9624999999998403e-05, 2.9916999999997362e-05, 2.9777000000001663e-05, 2.970900000000276e-05, 2.9096999999998763e-05, 3.0041000000001483e-05, 2.99579999999966e-05, 2.9916999999997362e-05, 2.9346999999999013e-05, 2.9777000000001663e-05, 3.0014000000001817e-05, 2.9610999999998833e-05, 2.9096999999998763e-05, 2.9930000000004398e-05, 2.916599999999714e-05, 2.919399999999628e-05, 2.9124999999997903e-05, 2.9222000000002357e-05, 2.9819000000000373e-05, 2.9513999999994378e-05, 2.9499999999994808e-05, 2.916700000000355e-05, 2.916700000000355e-05, 2.9124999999997903e-05, 2.966700000000405e-05, 2.9888999999998223e-05, 2.9250000000001497e-05, 2.9666999999997112e-05, 2.9638999999997973e-05, 3.0028000000001387e-05, 3.0028000000001387e-05, 2.9861999999998556e-05, 2.9138999999997472e-05, 2.9694000000003717e-05, 2.922199999999542e-05, 2.970799999999635e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.992" endtime="20201030 11:51:49.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.980" endtime="20201030 11:51:49.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.009" endtime="20201030 11:51:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.004" endtime="20201030 11:51:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.002" endtime="20201030 11:51:50.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.482" endtime="20201030 11:51:50.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.481" endtime="20201030 11:51:50.034"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.059" endtime="20201030 11:51:50.080"></status>
</kw>
<msg timestamp="20201030 11:51:50.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.055" endtime="20201030 11:51:50.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.083" endtime="20201030 11:51:50.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.090" endtime="20201030 11:51:50.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.048" endtime="20201030 11:51:50.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.041" endtime="20201030 11:51:50.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.115" endtime="20201030 11:51:50.474"></status>
</kw>
<msg timestamp="20201030 11:51:50.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044913514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044943722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.112" endtime="20201030 11:51:50.482"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044913514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044943722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.484" endtime="20201030 11:51:50.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.504" endtime="20201030 11:51:50.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.104" endtime="20201030 11:51:50.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.099" endtime="20201030 11:51:50.511"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.522" level="INFO">${RESULT} = [{'diff': 3.020799999999685e-05}, {'diff': 3.055500000000155e-05}, {'diff': 3.066599999999864e-05}, {'diff': 3.0180000000004648e-05}, {'diff': 3.0180000000004648e-05}, {'diff': 3.0790999999995294e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:50.513" endtime="20201030 11:51:50.523"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.532" level="INFO">${ACCURACY} = {'diff': [3.020799999999685e-05, 3.055500000000155e-05, 3.066599999999864e-05, 3.0180000000004648e-05, 3.0180000000004648e-05, 3.0790999999995294e-05, 3.079100000000223e-05, 3.099999999999631e-05, 3.0...</msg>
<status status="PASS" starttime="20201030 11:51:50.524" endtime="20201030 11:51:50.533"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.544" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.542" endtime="20201030 11:51:50.545"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.550" level="INFO">VALUE: [3.020799999999685e-05, 3.055500000000155e-05, 3.066599999999864e-05, 3.0180000000004648e-05, 3.0180000000004648e-05, 3.0790999999995294e-05, 3.079100000000223e-05, 3.099999999999631e-05, 3.0096999999999763e-05, 3.0110999999999333e-05, 3.047300000000308e-05, 3.09579999999976e-05, 3.044500000000394e-05, 3.0096999999999763e-05, 3.04579999999971e-05, 3.0097999999999236e-05, 3.087499999999965e-05, 3.0250000000002497e-05, 3.0347999999999486e-05, 3.0776999999995724e-05, 3.101400000000282e-05, 3.0347999999999486e-05, 3.099999999999631e-05, 3.077800000000214e-05, 3.0137999999999e-05, 3.0208000000003787e-05, 3.019399999999728e-05, 3.0444000000004467e-05, 3.0333000000000443e-05, 3.048599999999624e-05, 3.0790999999995294e-05, 3.094399999999803e-05, 3.077800000000214e-05, 3.0236000000002927e-05, 3.083300000000094e-05, 3.0514000000002317e-05, 3.105600000000153e-05, 3.020799999999685e-05, 3.095800000000454e-05, 3.079200000000171e-05, 3.0444999999997002e-05, 3.054200000000146e-05, 3.100000000000325e-05, 3.0110999999999333e-05, 3.0306000000000777e-05, 3.088799999999975e-05, 3.0152999999998042e-05, 3.0374999999999153e-05, 3.0276999999995224e-05, 3.0526999999995474e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.546" endtime="20201030 11:51:50.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.534" endtime="20201030 11:51:50.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.565" endtime="20201030 11:51:50.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.558" endtime="20201030 11:51:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.556" endtime="20201030 11:51:50.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.037" endtime="20201030 11:51:50.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.036" endtime="20201030 11:51:50.590"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.614" endtime="20201030 11:51:50.634"></status>
</kw>
<msg timestamp="20201030 11:51:50.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.611" endtime="20201030 11:51:50.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.638" endtime="20201030 11:51:50.643"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.645" endtime="20201030 11:51:50.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.603" endtime="20201030 11:51:50.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.597" endtime="20201030 11:51:50.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.671" endtime="20201030 11:51:51.029"></status>
</kw>
<msg timestamp="20201030 11:51:51.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043099625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.667" endtime="20201030 11:51:51.038"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.057" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043099625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043130764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.039" endtime="20201030 11:51:51.057"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.059" endtime="20201030 11:51:51.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.659" endtime="20201030 11:51:51.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.654" endtime="20201030 11:51:51.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.078" level="INFO">${RESULT} = [{'diff': 3.113899999999947e-05}, {'diff': 3.155600000000203e-05}, {'diff': 3.170900000000476e-05}, {'diff': 3.120899999999732e-05}, {'diff': 3.166699999999911e-05}, {'diff': 3.1304999999995364e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:51.068" endtime="20201030 11:51:51.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.089" level="INFO">${ACCURACY} = {'diff': [3.113899999999947e-05, 3.155600000000203e-05, 3.170900000000476e-05, 3.120899999999732e-05, 3.166699999999911e-05, 3.1304999999995364e-05, 3.122199999999742e-05, 3.14170000000058e-05, 3.1111...</msg>
<status status="PASS" starttime="20201030 11:51:51.080" endtime="20201030 11:51:51.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.101" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.098" endtime="20201030 11:51:51.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.106" level="INFO">VALUE: [3.113899999999947e-05, 3.155600000000203e-05, 3.170900000000476e-05, 3.120899999999732e-05, 3.166699999999911e-05, 3.1304999999995364e-05, 3.122199999999742e-05, 3.14170000000058e-05, 3.111100000000033e-05, 3.19579999999986e-05, 3.156900000000212e-05, 3.199999999999731e-05, 3.170799999999835e-05, 3.148599999999724e-05, 3.200000000000425e-05, 3.141599999999939e-05, 3.152800000000289e-05, 3.150000000000375e-05, 3.201399999999688e-05, 3.204200000000296e-05, 3.202800000000339e-05, 3.152800000000289e-05, 3.11249999999999e-05, 3.120800000000479e-05, 3.132000000000135e-05, 3.1346999999994074e-05, 3.14579999999981e-05, 3.11249999999999e-05, 3.105600000000153e-05, 3.1598000000000737e-05, 3.1598000000000737e-05, 3.145899999999757e-05, 3.193099999999893e-05, 3.1624999999993464e-05, 3.165200000000007e-05, 3.161100000000083e-05, 3.177800000000314e-05, 3.158300000000169e-05, 3.200000000000425e-05, 3.115299999999904e-05, 3.11249999999999e-05, 3.202800000000339e-05, 3.14579999999981e-05, 3.197199999999817e-05, 3.172300000000433e-05, 3.1332999999994504e-05, 3.111100000000033e-05, 3.1444999999998e-05, 3.177800000000314e-05, 3.158300000000169e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.103" endtime="20201030 11:51:51.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.091" endtime="20201030 11:51:51.110"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.120" endtime="20201030 11:51:51.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.115" endtime="20201030 11:51:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.112" endtime="20201030 11:51:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.593" endtime="20201030 11:51:51.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.591" endtime="20201030 11:51:51.142"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.153" endtime="20201030 11:51:51.169"></status>
</kw>
<msg timestamp="20201030 11:51:51.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.151" endtime="20201030 11:51:51.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.173" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.171" endtime="20201030 11:51:51.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.174" endtime="20201030 11:51:51.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.148" endtime="20201030 11:51:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.145" endtime="20201030 11:51:51.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.186" endtime="20201030 11:51:51.481"></status>
</kw>
<msg timestamp="20201030 11:51:51.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024769028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.184" endtime="20201030 11:51:51.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024769028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024801319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.491" endtime="20201030 11:51:51.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.510" endtime="20201030 11:51:51.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.181" endtime="20201030 11:51:51.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.178" endtime="20201030 11:51:51.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.529" level="INFO">${RESULT} = [{'diff': 3.2291000000000264e-05}, {'diff': 3.265300000000054e-05}, {'diff': 3.224999999999756e-05}, {'diff': 3.3027000000001444e-05}, {'diff': 3.276399999999763e-05}, {'diff': 3.272199999999892e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:51.519" endtime="20201030 11:51:51.529"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.540" level="INFO">${ACCURACY} = {'diff': [3.2291000000000264e-05, 3.265300000000054e-05, 3.224999999999756e-05, 3.3027000000001444e-05, 3.276399999999763e-05, 3.272199999999892e-05, 3.284700000000251e-05, 3.237500000000115e-05, 3.26...</msg>
<status status="PASS" starttime="20201030 11:51:51.531" endtime="20201030 11:51:51.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.552" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.550" endtime="20201030 11:51:51.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.558" level="INFO">VALUE: [3.2291000000000264e-05, 3.265300000000054e-05, 3.224999999999756e-05, 3.3027000000001444e-05, 3.276399999999763e-05, 3.272199999999892e-05, 3.284700000000251e-05, 3.237500000000115e-05, 3.266700000000011e-05, 3.2054999999999584e-05, 3.2444999999999e-05, 3.2582999999999224e-05, 3.266600000000064e-05, 3.2318999999999404e-05, 3.3012999999998405e-05, 3.291700000000036e-05, 3.245900000000204e-05, 3.209700000000176e-05, 3.266700000000011e-05, 3.276399999999763e-05, 3.284700000000251e-05, 3.22640000000006e-05, 3.213900000000047e-05, 3.304200000000049e-05, 3.279200000000024e-05, 3.265299999999707e-05, 3.270899999999882e-05, 3.305600000000006e-05, 3.268000000000021e-05, 3.2513000000001374e-05, 3.291700000000036e-05, 3.2318999999999404e-05, 3.288900000000122e-05, 3.247199999999867e-05, 3.2555000000000084e-05, 3.266600000000064e-05, 3.216699999999961e-05, 3.21250000000009e-05, 3.21250000000009e-05, 3.238900000000072e-05, 3.2860999999998614e-05, 3.290300000000079e-05, 3.27640000000011e-05, 3.238900000000072e-05, 3.2263000000001124e-05, 3.213900000000047e-05, 3.254199999999999e-05, 3.256999999999913e-05, 3.230599999999931e-05, 3.265300000000054e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.554" endtime="20201030 11:51:51.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.542" endtime="20201030 11:51:51.561"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.571" endtime="20201030 11:51:51.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.566" endtime="20201030 11:51:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.564" endtime="20201030 11:51:51.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.143" endtime="20201030 11:51:51.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.142" endtime="20201030 11:51:51.597"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.621" endtime="20201030 11:51:51.641"></status>
</kw>
<msg timestamp="20201030 11:51:51.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.617" endtime="20201030 11:51:51.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.645" endtime="20201030 11:51:51.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.651" endtime="20201030 11:51:51.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.610" endtime="20201030 11:51:51.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.603" endtime="20201030 11:51:51.659"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.678" endtime="20201030 11:51:52.040"></status>
</kw>
<msg timestamp="20201030 11:51:52.048" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043353986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04338775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:51.674" endtime="20201030 11:51:52.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043353986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04338775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:52.050" endtime="20201030 11:51:52.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.070" endtime="20201030 11:51:52.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.666" endtime="20201030 11:51:52.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.660" endtime="20201030 11:51:52.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.088" level="INFO">${RESULT} = [{'diff': 3.376400000000557e-05}, {'diff': 3.31250000000019e-05}, {'diff': 3.336199999999512e-05}, {'diff': 3.35979999999958e-05}, {'diff': 3.32500000000055e-05}, {'diff': 3.3445e-05}, {'diff': 3.3110...</msg>
<status status="PASS" starttime="20201030 11:51:52.079" endtime="20201030 11:51:52.089"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.098" level="INFO">${ACCURACY} = {'diff': [3.376400000000557e-05, 3.31250000000019e-05, 3.336199999999512e-05, 3.35979999999958e-05, 3.32500000000055e-05, 3.3445e-05, 3.3110999999995394e-05, 3.343100000000043e-05, 3.390300000000179e-...</msg>
<status status="PASS" starttime="20201030 11:51:52.090" endtime="20201030 11:51:52.099"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.110" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.107" endtime="20201030 11:51:52.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.115" level="INFO">VALUE: [3.376400000000557e-05, 3.31250000000019e-05, 3.336199999999512e-05, 3.35979999999958e-05, 3.32500000000055e-05, 3.3445e-05, 3.3110999999995394e-05, 3.343100000000043e-05, 3.390300000000179e-05, 3.366700000000111e-05, 3.366600000000164e-05, 3.340300000000129e-05, 3.3374999999995214e-05, 3.370899999999982e-05, 3.347299999999914e-05, 3.3110999999995394e-05, 3.390199999999538e-05, 3.370800000000035e-05, 3.3526999999998475e-05, 3.3846999999996574e-05, 3.3652999999994604e-05, 3.340200000000182e-05, 3.326399999999813e-05, 3.34580000000001e-05, 3.4040999999998545e-05, 3.3902999999994854e-05, 3.322199999999942e-05, 3.391700000000136e-05, 3.3445e-05, 3.368100000000068e-05, 3.405600000000453e-05, 3.3346999999996074e-05, 3.366700000000111e-05, 3.315300000000104e-05, 3.32779999999977e-05, 3.343000000000096e-05, 3.366700000000111e-05, 3.365300000000154e-05, 3.369500000000025e-05, 3.308300000000319e-05, 3.341700000000086e-05, 3.329200000000421e-05, 3.3832999999997004e-05, 3.3318999999996934e-05, 3.3346999999996074e-05, 3.308300000000319e-05, 3.401399999999888e-05, 3.350000000000575e-05, 3.372199999999992e-05, 3.347199999999967e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.112" endtime="20201030 11:51:52.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.100" endtime="20201030 11:51:52.119"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.129" endtime="20201030 11:51:52.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.124" endtime="20201030 11:51:52.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.122" endtime="20201030 11:51:52.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.599" endtime="20201030 11:51:52.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.598" endtime="20201030 11:51:52.154"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.178" endtime="20201030 11:51:52.200"></status>
</kw>
<msg timestamp="20201030 11:51:52.201" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.175" endtime="20201030 11:51:52.201"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.203" endtime="20201030 11:51:52.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.210" endtime="20201030 11:51:52.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.167" endtime="20201030 11:51:52.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.161" endtime="20201030 11:51:52.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.235" endtime="20201030 11:51:52.593"></status>
</kw>
<msg timestamp="20201030 11:51:52.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045032542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045067139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.231" endtime="20201030 11:51:52.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045032542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045067139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.603" endtime="20201030 11:51:52.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.623" endtime="20201030 11:51:52.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.224" endtime="20201030 11:51:52.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.219" endtime="20201030 11:51:52.630"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.641" level="INFO">${RESULT} = [{'diff': 3.4596999999997324e-05}, {'diff': 3.436100000000358e-05}, {'diff': 3.4124999999995964e-05}, {'diff': 3.41250000000029e-05}, {'diff': 3.455599999999809e-05}, {'diff': 3.4291000000005734e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:52.632" endtime="20201030 11:51:52.641"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.651" level="INFO">${ACCURACY} = {'diff': [3.4596999999997324e-05, 3.436100000000358e-05, 3.4124999999995964e-05, 3.41250000000029e-05, 3.455599999999809e-05, 3.4291000000005734e-05, 3.426400000000607e-05, 3.438900000000272e-05, 3.44...</msg>
<status status="PASS" starttime="20201030 11:51:52.643" endtime="20201030 11:51:52.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.663" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.660" endtime="20201030 11:51:52.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.668" level="INFO">VALUE: [3.4596999999997324e-05, 3.436100000000358e-05, 3.4124999999995964e-05, 3.41250000000029e-05, 3.455599999999809e-05, 3.4291000000005734e-05, 3.426400000000607e-05, 3.438900000000272e-05, 3.440199999999588e-05, 3.434700000000401e-05, 3.5040999999999545e-05, 3.4332999999997504e-05, 3.47779999999992e-05, 3.4055000000005053e-05, 3.458300000000469e-05, 3.420800000000085e-05, 3.449999999999981e-05, 3.5040999999999545e-05, 3.466700000000211e-05, 3.455600000000503e-05, 3.4860999999997144e-05, 3.4318999999997934e-05, 3.447200000000067e-05, 3.4930999999994994e-05, 3.433300000000444e-05, 3.470900000000082e-05, 3.440300000000229e-05, 3.437500000000315e-05, 3.470900000000082e-05, 3.465199999999613e-05, 3.459800000000374e-05, 3.41250000000029e-05, 3.444400000000153e-05, 3.459800000000374e-05, 3.447199999999373e-05, 3.447200000000067e-05, 3.4332999999997504e-05, 3.431999999999741e-05, 3.4110999999996394e-05, 3.465199999999613e-05, 3.418000000000171e-05, 3.477800000000614e-05, 3.411100000000333e-05, 3.423599999999999e-05, 3.469400000000178e-05, 3.472200000000092e-05, 3.411100000000333e-05, 3.4082999999997254e-05, 3.501399999999988e-05, 3.420799999999391e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.665" endtime="20201030 11:51:52.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.653" endtime="20201030 11:51:52.672"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.683" endtime="20201030 11:51:52.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.677" endtime="20201030 11:51:52.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.674" endtime="20201030 11:51:52.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.157" endtime="20201030 11:51:52.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.155" endtime="20201030 11:51:52.709"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.735" endtime="20201030 11:51:52.754"></status>
</kw>
<msg timestamp="20201030 11:51:52.756" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.731" endtime="20201030 11:51:52.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.762" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.758" endtime="20201030 11:51:52.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.764" endtime="20201030 11:51:52.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.723" endtime="20201030 11:51:52.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.717" endtime="20201030 11:51:52.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.789" endtime="20201030 11:51:53.149"></status>
</kw>
<msg timestamp="20201030 11:51:53.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044905597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044941486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.786" endtime="20201030 11:51:53.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044905597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044941486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.159" endtime="20201030 11:51:53.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.179" endtime="20201030 11:51:53.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.778" endtime="20201030 11:51:53.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.773" endtime="20201030 11:51:53.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.197" level="INFO">${RESULT} = [{'diff': 3.588900000000422e-05}, {'diff': 3.549999999999387e-05}, {'diff': 3.599999999999437e-05}, {'diff': 3.5888999999997284e-05}, {'diff': 3.5110999999997394e-05}, {'diff': 3.587500000000465e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:53.188" endtime="20201030 11:51:53.197"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.213" level="INFO">${ACCURACY} = {'diff': [3.588900000000422e-05, 3.549999999999387e-05, 3.599999999999437e-05, 3.5888999999997284e-05, 3.5110999999997394e-05, 3.587500000000465e-05, 3.5180999999995244e-05, 3.5360999999997644e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:53.199" endtime="20201030 11:51:53.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.224" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.222" endtime="20201030 11:51:53.225"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.230" level="INFO">VALUE: [3.588900000000422e-05, 3.549999999999387e-05, 3.599999999999437e-05, 3.5888999999997284e-05, 3.5110999999997394e-05, 3.587500000000465e-05, 3.5180999999995244e-05, 3.5360999999997644e-05, 3.584799999999805e-05, 3.532000000000535e-05, 3.56659999999967e-05, 3.573600000000149e-05, 3.538900000000372e-05, 3.548700000000071e-05, 3.6055000000000115e-05, 3.569400000000278e-05, 3.601400000000088e-05, 3.6068999999999685e-05, 3.595799999999566e-05, 3.513900000000347e-05, 3.545799999999516e-05, 3.5110999999997394e-05, 3.534700000000501e-05, 3.516600000000314e-05, 3.570799999999541e-05, 3.570800000000235e-05, 3.5596999999998324e-05, 3.532000000000535e-05, 3.548600000000124e-05, 3.523600000000099e-05, 3.558399999999823e-05, 3.573600000000149e-05, 3.572200000000192e-05, 3.547300000000114e-05, 3.56659999999967e-05, 3.526400000000013e-05, 3.54580000000021e-05, 3.5916999999996424e-05, 3.6026999999994036e-05, 3.5777000000000725e-05, 3.522200000000142e-05, 3.545900000000157e-05, 3.519400000000228e-05, 3.572300000000139e-05, 3.5360999999997644e-05, 3.595799999999566e-05, 3.6041000000000545e-05, 3.526400000000013e-05, 3.526400000000013e-05, 3.561100000000483e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.227" endtime="20201030 11:51:53.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.215" endtime="20201030 11:51:53.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.243" endtime="20201030 11:51:53.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.239" endtime="20201030 11:51:53.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.236" endtime="20201030 11:51:53.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.712" endtime="20201030 11:51:53.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.710" endtime="20201030 11:51:53.269"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.293" endtime="20201030 11:51:53.313"></status>
</kw>
<msg timestamp="20201030 11:51:53.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.290" endtime="20201030 11:51:53.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.316" endtime="20201030 11:51:53.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.323" endtime="20201030 11:51:53.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.282" endtime="20201030 11:51:53.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.276" endtime="20201030 11:51:53.330"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.348" endtime="20201030 11:51:53.705"></status>
</kw>
<msg timestamp="20201030 11:51:53.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.344" endtime="20201030 11:51:53.713"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043194958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043231222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.715" endtime="20201030 11:51:53.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.735" endtime="20201030 11:51:53.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.337" endtime="20201030 11:51:53.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.331" endtime="20201030 11:51:53.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.755" level="INFO">${RESULT} = [{'diff': 3.626400000000113e-05}, {'diff': 3.645799999999616e-05}, {'diff': 3.619400000000328e-05}, {'diff': 3.693100000000393e-05}, {'diff': 3.634799999999855e-05}, {'diff': 3.693100000000393e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:53.745" endtime="20201030 11:51:53.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.767" level="INFO">${ACCURACY} = {'diff': [3.626400000000113e-05, 3.645799999999616e-05, 3.619400000000328e-05, 3.693100000000393e-05, 3.634799999999855e-05, 3.693100000000393e-05, 3.625000000000156e-05, 3.6430999999996494e-05, 3.700...</msg>
<status status="PASS" starttime="20201030 11:51:53.757" endtime="20201030 11:51:53.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.779" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.776" endtime="20201030 11:51:53.779"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.784" level="INFO">VALUE: [3.626400000000113e-05, 3.645799999999616e-05, 3.619400000000328e-05, 3.693100000000393e-05, 3.634799999999855e-05, 3.693100000000393e-05, 3.625000000000156e-05, 3.6430999999996494e-05, 3.700000000000231e-05, 3.6555000000000615e-05, 3.673600000000249e-05, 3.6374999999998214e-05, 3.6444999999996064e-05, 3.6610999999998894e-05, 3.670900000000282e-05, 3.700000000000231e-05, 3.693000000000446e-05, 3.7069000000000685e-05, 3.61250000000049e-05, 3.672200000000292e-05, 3.6652999999997604e-05, 3.644399999999659e-05, 3.6332999999999505e-05, 3.6582999999999755e-05, 3.645799999999616e-05, 3.6332999999999505e-05, 3.6888999999998284e-05, 3.633399999999898e-05, 3.619400000000328e-05, 3.625000000000156e-05, 3.668100000000368e-05, 3.6666999999997174e-05, 3.620799999999591e-05, 3.655600000000009e-05, 3.649999999999487e-05, 3.654200000000052e-05, 3.6874999999998714e-05, 3.648700000000171e-05, 3.652800000000095e-05, 3.7012999999995466e-05, 3.622199999999548e-05, 3.691599999999795e-05, 3.6332999999999505e-05, 3.6555000000000615e-05, 3.6374999999998214e-05, 3.676400000000163e-05, 3.649999999999487e-05, 3.676400000000163e-05, 3.6902999999997854e-05, 3.6138999999997534e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.781" endtime="20201030 11:51:53.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.769" endtime="20201030 11:51:53.788"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.798" endtime="20201030 11:51:53.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.793" endtime="20201030 11:51:53.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.790" endtime="20201030 11:51:53.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.271" endtime="20201030 11:51:53.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.270" endtime="20201030 11:51:53.823"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.848" endtime="20201030 11:51:53.868"></status>
</kw>
<msg timestamp="20201030 11:51:53.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.844" endtime="20201030 11:51:53.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.871" endtime="20201030 11:51:53.876"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.878" endtime="20201030 11:51:53.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.836" endtime="20201030 11:51:53.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.830" endtime="20201030 11:51:53.885"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.903" endtime="20201030 11:51:54.270"></status>
</kw>
<msg timestamp="20201030 11:51:54.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043638028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043675722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.899" endtime="20201030 11:51:54.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.297" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043638028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043675722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.280" endtime="20201030 11:51:54.298"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.300" endtime="20201030 11:51:54.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.892" endtime="20201030 11:51:54.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.887" endtime="20201030 11:51:54.307"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.318" level="INFO">${RESULT} = [{'diff': 3.769399999999784e-05}, {'diff': 3.7583000000000755e-05}, {'diff': 3.744399999999759e-05}, {'diff': 3.773600000000349e-05}, {'diff': 3.7666999999998174e-05}, {'diff': 3.729200000000127e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:54.309" endtime="20201030 11:51:54.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.329" level="INFO">${ACCURACY} = {'diff': [3.769399999999784e-05, 3.7583000000000755e-05, 3.744399999999759e-05, 3.773600000000349e-05, 3.7666999999998174e-05, 3.729200000000127e-05, 3.768100000000468e-05, 3.7333000000000505e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 11:51:54.321" endtime="20201030 11:51:54.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.340" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.338" endtime="20201030 11:51:54.341"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.346" level="INFO">VALUE: [3.769399999999784e-05, 3.7583000000000755e-05, 3.744399999999759e-05, 3.773600000000349e-05, 3.7666999999998174e-05, 3.729200000000127e-05, 3.768100000000468e-05, 3.7333000000000505e-05, 3.799999999999637e-05, 3.7430999999997494e-05, 3.7694999999997314e-05, 3.758400000000023e-05, 3.7986999999996274e-05, 3.738799999999931e-05, 3.7805000000001865e-05, 3.744400000000453e-05, 3.7069000000000685e-05, 3.744399999999759e-05, 3.804200000000202e-05, 3.790199999999938e-05, 3.791599999999895e-05, 3.752799999999501e-05, 3.772199999999698e-05, 3.7888999999999284e-05, 3.7666999999998174e-05, 3.7638999999999034e-05, 3.801400000000288e-05, 3.754200000000152e-05, 3.804200000000202e-05, 3.724999999999562e-05, 3.7138999999998534e-05, 3.7194999999996814e-05, 3.79859999999968e-05, 3.776400000000263e-05, 3.799999999999637e-05, 3.7458999999996634e-05, 3.726400000000213e-05, 3.76659999999987e-05, 3.734799999999955e-05, 3.7096999999999825e-05, 3.7472999999996204e-05, 3.7916999999998424e-05, 3.791599999999895e-05, 3.717999999999777e-05, 3.7902999999998854e-05, 3.770799999999741e-05, 3.726399999999519e-05, 3.751399999999544e-05, 3.7430999999997494e-05, 3.722200000000342e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.343" endtime="20201030 11:51:54.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.331" endtime="20201030 11:51:54.350"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.360" endtime="20201030 11:51:54.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.355" endtime="20201030 11:51:54.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.352" endtime="20201030 11:51:54.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.826" endtime="20201030 11:51:54.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.824" endtime="20201030 11:51:54.386"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.411" endtime="20201030 11:51:54.433"></status>
</kw>
<msg timestamp="20201030 11:51:54.434" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.408" endtime="20201030 11:51:54.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.437" endtime="20201030 11:51:54.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.444" endtime="20201030 11:51:54.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.400" endtime="20201030 11:51:54.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.393" endtime="20201030 11:51:54.451"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.469" endtime="20201030 11:51:54.828"></status>
</kw>
<msg timestamp="20201030 11:51:54.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046807167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046845389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.465" endtime="20201030 11:51:54.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.046807167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.046845389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.838" endtime="20201030 11:51:54.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.858" endtime="20201030 11:51:54.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.458" endtime="20201030 11:51:54.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.452" endtime="20201030 11:51:54.865"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.876" level="INFO">${RESULT} = [{'diff': 3.822200000000442e-05}, {'diff': 3.811199999999987e-05}, {'diff': 3.872199999999798e-05}, {'diff': 3.822300000000389e-05}, {'diff': 3.89859999999978e-05}, {'diff': 3.8819000000002435e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:54.867" endtime="20201030 11:51:54.877"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.886" level="INFO">${ACCURACY} = {'diff': [3.822200000000442e-05, 3.811199999999987e-05, 3.872199999999798e-05, 3.822300000000389e-05, 3.89859999999978e-05, 3.8819000000002435e-05, 3.867999999999927e-05, 3.8875000000000715e-05, 3.806...</msg>
<status status="PASS" starttime="20201030 11:51:54.878" endtime="20201030 11:51:54.887"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.898" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.895" endtime="20201030 11:51:54.898"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.903" level="INFO">VALUE: [3.822200000000442e-05, 3.811199999999987e-05, 3.872199999999798e-05, 3.822300000000389e-05, 3.89859999999978e-05, 3.8819000000002435e-05, 3.867999999999927e-05, 3.8875000000000715e-05, 3.8069000000001685e-05, 3.845799999999816e-05, 3.9026999999997036e-05, 3.8819000000002435e-05, 3.8680999999998744e-05, 3.832000000000141e-05, 3.849999999999687e-05, 3.847200000000467e-05, 3.844399999999859e-05, 3.8916999999999424e-05, 3.854200000000252e-05, 3.89859999999978e-05, 3.820900000000432e-05, 3.8763000000004155e-05, 3.899999999999737e-05, 3.854200000000252e-05, 3.884799999999411e-05, 3.899999999999737e-05, 3.834800000000055e-05, 3.844399999999859e-05, 3.8444999999998064e-05, 3.845900000000457e-05, 3.8124999999999964e-05, 3.8582999999994816e-05, 3.851400000000338e-05, 3.822199999999748e-05, 3.8319000000001935e-05, 3.8889000000000284e-05, 3.8832999999995066e-05, 3.901399999999694e-05, 3.847199999999773e-05, 3.900000000000431e-05, 3.8680999999998744e-05, 3.89580000000056e-05, 3.8680999999998744e-05, 3.87780000000032e-05, 3.8916999999999424e-05, 3.872199999999798e-05, 3.851400000000338e-05, 3.854200000000252e-05, 3.899999999999737e-05, 3.875000000000406e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.900" endtime="20201030 11:51:54.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.888" endtime="20201030 11:51:54.907"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.918" endtime="20201030 11:51:54.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.912" endtime="20201030 11:51:54.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.909" endtime="20201030 11:51:54.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.388" endtime="20201030 11:51:54.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.387" endtime="20201030 11:51:54.944"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.968" endtime="20201030 11:51:54.989"></status>
</kw>
<msg timestamp="20201030 11:51:54.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.965" endtime="20201030 11:51:54.991"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.997" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.993" endtime="20201030 11:51:54.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.999" endtime="20201030 11:51:55.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.957" endtime="20201030 11:51:55.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.951" endtime="20201030 11:51:55.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.024" endtime="20201030 11:51:55.381"></status>
</kw>
<msg timestamp="20201030 11:51:55.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043418333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043458069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.021" endtime="20201030 11:51:55.389"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.408" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043418333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043458069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.391" endtime="20201030 11:51:55.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.411" endtime="20201030 11:51:55.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.013" endtime="20201030 11:51:55.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.008" endtime="20201030 11:51:55.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.429" level="INFO">${RESULT} = [{'diff': 3.973599999999855e-05}, {'diff': 3.9986999999998274e-05}, {'diff': 4.002799999999751e-05}, {'diff': 3.9917000000000424e-05}, {'diff': 3.94859999999983e-05}, {'diff': 3.986200000000162e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:55.420" endtime="20201030 11:51:55.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.441" level="INFO">${ACCURACY} = {'diff': [3.973599999999855e-05, 3.9986999999998274e-05, 4.002799999999751e-05, 3.9917000000000424e-05, 3.94859999999983e-05, 3.986200000000162e-05, 4.0083000000003255e-05, 3.944399999999959e-05, 4.00...</msg>
<status status="PASS" starttime="20201030 11:51:55.431" endtime="20201030 11:51:55.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.452" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.450" endtime="20201030 11:51:55.453"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.458" level="INFO">VALUE: [3.973599999999855e-05, 3.9986999999998274e-05, 4.002799999999751e-05, 3.9917000000000424e-05, 3.94859999999983e-05, 3.986200000000162e-05, 4.0083000000003255e-05, 3.944399999999959e-05, 4.001400000000488e-05, 3.9889000000001285e-05, 3.9055000000003115e-05, 3.913800000000106e-05, 3.977799999999726e-05, 3.977799999999726e-05, 3.947199999999873e-05, 3.9791000000004295e-05, 4.001399999999794e-05, 3.902800000000345e-05, 3.9847000000002575e-05, 3.9180999999999244e-05, 3.9110999999994456e-05, 3.9125000000000965e-05, 3.945799999999916e-05, 3.9583000000002755e-05, 3.915200000000063e-05, 3.9444999999999064e-05, 3.947199999999873e-05, 3.9694999999999314e-05, 3.9333000000002505e-05, 4.005599999999665e-05, 3.9917000000000424e-05, 4.0012999999998466e-05, 3.9791000000004295e-05, 3.9346999999995136e-05, 3.9861000000002145e-05, 3.922199999999848e-05, 3.9597000000002325e-05, 4.0040999999997606e-05, 3.968000000000027e-05, 3.9333000000002505e-05, 3.9568999999996246e-05, 3.932000000000241e-05, 3.9082999999995316e-05, 3.954199999999658e-05, 3.9333000000002505e-05, 3.930600000000284e-05, 3.983399999999554e-05, 3.9833000000003005e-05, 3.940200000000088e-05, 3.998600000000574e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.454" endtime="20201030 11:51:55.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.442" endtime="20201030 11:51:55.461"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.471" endtime="20201030 11:51:55.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.467" endtime="20201030 11:51:55.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.464" endtime="20201030 11:51:55.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.946" endtime="20201030 11:51:55.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.945" endtime="20201030 11:51:55.497"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.521" endtime="20201030 11:51:55.541"></status>
</kw>
<msg timestamp="20201030 11:51:55.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.518" endtime="20201030 11:51:55.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.545" endtime="20201030 11:51:55.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.552" endtime="20201030 11:51:55.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.510" endtime="20201030 11:51:55.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.504" endtime="20201030 11:51:55.559"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.577" endtime="20201030 11:51:55.935"></status>
</kw>
<msg timestamp="20201030 11:51:55.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043142722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.573" endtime="20201030 11:51:55.943"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043102125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043142722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.945" endtime="20201030 11:51:55.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.965" endtime="20201030 11:51:55.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.565" endtime="20201030 11:51:55.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.560" endtime="20201030 11:51:55.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.983" level="INFO">${RESULT} = [{'diff': 4.0597000000003325e-05}, {'diff': 4.0319000000003935e-05}, {'diff': 4.102800000000545e-05}, {'diff': 4.031999999999647e-05}, {'diff': 4.0111000000002395e-05}, {'diff': 4.0445000000000064e-05...</msg>
<status status="PASS" starttime="20201030 11:51:55.974" endtime="20201030 11:51:55.983"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.995" level="INFO">${ACCURACY} = {'diff': [4.0597000000003325e-05, 4.0319000000003935e-05, 4.102800000000545e-05, 4.031999999999647e-05, 4.0111000000002395e-05, 4.0445000000000064e-05, 4.055600000000409e-05, 4.056999999999672e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:55.985" endtime="20201030 11:51:55.996"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.007" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.004" endtime="20201030 11:51:56.008"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.012" level="INFO">VALUE: [4.0597000000003325e-05, 4.0319000000003935e-05, 4.102800000000545e-05, 4.031999999999647e-05, 4.0111000000002395e-05, 4.0445000000000064e-05, 4.055600000000409e-05, 4.056999999999672e-05, 4.047199999999973e-05, 4.0138999999994596e-05, 4.059799999999586e-05, 4.024999999999862e-05, 4.0181000000000244e-05, 4.0860999999996206e-05, 4.0790999999998356e-05, 4.076400000000563e-05, 4.038799999999537e-05, 4.0582999999996816e-05, 4.024999999999862e-05, 4.092999999999458e-05, 4.09859999999998e-05, 4.109799999999636e-05, 4.052799999999801e-05, 4.0125000000001965e-05, 4.027799999999776e-05, 4.079199999999783e-05, 4.0180999999993305e-05, 4.027799999999776e-05, 4.0681000000000744e-05, 4.005599999999665e-05, 4.024999999999862e-05, 4.049999999999887e-05, 4.099999999999937e-05, 4.0708999999999884e-05, 4.09859999999998e-05, 4.0458999999999634e-05, 4.011200000000187e-05, 4.0375000000002215e-05, 4.0124999999995026e-05, 4.013800000000206e-05, 4.0318999999996996e-05, 4.094400000000109e-05, 4.066599999999476e-05, 4.093000000000152e-05, 4.0582999999996816e-05, 4.092999999999458e-05, 4.0917000000001424e-05, 4.0861000000003145e-05, 4.0347000000003075e-05, 4.0431000000000494e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.009" endtime="20201030 11:51:56.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.997" endtime="20201030 11:51:56.016"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.026" endtime="20201030 11:51:56.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.021" endtime="20201030 11:51:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.019" endtime="20201030 11:51:56.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.499" endtime="20201030 11:51:56.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.498" endtime="20201030 11:51:56.052"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.076" endtime="20201030 11:51:56.096"></status>
</kw>
<msg timestamp="20201030 11:51:56.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.072" endtime="20201030 11:51:56.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.099" endtime="20201030 11:51:56.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.106" endtime="20201030 11:51:56.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.064" endtime="20201030 11:51:56.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.058" endtime="20201030 11:51:56.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.131" endtime="20201030 11:51:56.490"></status>
</kw>
<msg timestamp="20201030 11:51:56.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043364528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.127" endtime="20201030 11:51:56.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043364528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.501" endtime="20201030 11:51:56.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.521" endtime="20201030 11:51:56.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.119" endtime="20201030 11:51:56.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.114" endtime="20201030 11:51:56.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.540" level="INFO">${RESULT} = [{'diff': 4.105599999999765e-05}, {'diff': 4.1624999999996526e-05}, {'diff': 4.204199999999908e-05}, {'diff': 4.183399999999754e-05}, {'diff': 4.1681000000001744e-05}, {'diff': 4.115200000000263e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:56.530" endtime="20201030 11:51:56.540"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.550" level="INFO">${ACCURACY} = {'diff': [4.105599999999765e-05, 4.1624999999996526e-05, 4.204199999999908e-05, 4.183399999999754e-05, 4.1681000000001744e-05, 4.115200000000263e-05, 4.1318999999997996e-05, 4.1096999999996886e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:56.542" endtime="20201030 11:51:56.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.561" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.559" endtime="20201030 11:51:56.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.567" level="INFO">VALUE: [4.105599999999765e-05, 4.1624999999996526e-05, 4.204199999999908e-05, 4.183399999999754e-05, 4.1681000000001744e-05, 4.115200000000263e-05, 4.1318999999997996e-05, 4.1096999999996886e-05, 4.1304999999998426e-05, 4.170799999999447e-05, 4.200000000000037e-05, 4.123600000000005e-05, 4.11660000000022e-05, 4.118000000000177e-05, 4.1875000000003715e-05, 4.156999999999772e-05, 4.147200000000073e-05, 4.1903000000002855e-05, 4.201399999999994e-05, 4.1860999999997206e-05, 4.194400000000209e-05, 4.1695000000001314e-05, 4.1723000000000454e-05, 4.1125000000002965e-05, 4.1875000000003715e-05, 4.1737000000000024e-05, 4.1486999999999774e-05, 4.1194999999993875e-05, 4.115199999999569e-05, 4.200000000000037e-05, 4.1389000000002785e-05, 4.200000000000037e-05, 4.167999999999533e-05, 4.1318999999997996e-05, 4.168000000000227e-05, 4.1818999999998496e-05, 4.204199999999908e-05, 4.133400000000398e-05, 4.149999999999987e-05, 4.158399999999729e-05, 4.198599999999386e-05, 4.1667000000002175e-05, 4.1445000000001064e-05, 4.1139000000002535e-05, 4.1695000000001314e-05, 4.172200000000098e-05, 4.151399999999944e-05, 4.1526999999999537e-05, 4.147200000000073e-05, 4.1333000000004505e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.564" endtime="20201030 11:51:56.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.552" endtime="20201030 11:51:56.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.581" endtime="20201030 11:51:56.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.576" endtime="20201030 11:51:56.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.573" endtime="20201030 11:51:56.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.054" endtime="20201030 11:51:56.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.052" endtime="20201030 11:51:56.606"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.630" endtime="20201030 11:51:56.653"></status>
</kw>
<msg timestamp="20201030 11:51:56.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.627" endtime="20201030 11:51:56.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.656" endtime="20201030 11:51:56.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.663" endtime="20201030 11:51:56.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.619" endtime="20201030 11:51:56.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.613" endtime="20201030 11:51:56.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.688" endtime="20201030 11:51:57.048"></status>
</kw>
<msg timestamp="20201030 11:51:57.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045175042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.684" endtime="20201030 11:51:57.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045132361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045175042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.058" endtime="20201030 11:51:57.076"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.078" endtime="20201030 11:51:57.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.677" endtime="20201030 11:51:57.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.672" endtime="20201030 11:51:57.085"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.096" level="INFO">${RESULT} = [{'diff': 4.2680999999995806e-05}, {'diff': 4.2138999999996596e-05}, {'diff': 4.2583000000005755e-05}, {'diff': 4.2944999999995626e-05}, {'diff': 4.2181000000002244e-05}, {'diff': 4.272200000000198e-0...</msg>
<status status="PASS" starttime="20201030 11:51:57.087" endtime="20201030 11:51:57.096"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.106" level="INFO">${ACCURACY} = {'diff': [4.2680999999995806e-05, 4.2138999999996596e-05, 4.2583000000005755e-05, 4.2944999999995626e-05, 4.2181000000002244e-05, 4.272200000000198e-05, 4.283399999999854e-05, 4.273599999999461e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:51:57.098" endtime="20201030 11:51:57.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.117" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.115" endtime="20201030 11:51:57.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.123" level="INFO">VALUE: [4.2680999999995806e-05, 4.2138999999996596e-05, 4.2583000000005755e-05, 4.2944999999995626e-05, 4.2181000000002244e-05, 4.272200000000198e-05, 4.283399999999854e-05, 4.273599999999461e-05, 4.2554999999999676e-05, 4.2875000000004715e-05, 4.299999999999443e-05, 4.293000000000352e-05, 4.2332999999998566e-05, 4.29860000000018e-05, 4.299999999999443e-05, 4.277800000000026e-05, 4.2916999999996486e-05, 4.295800000000266e-05, 4.269400000000284e-05, 4.2917000000003425e-05, 4.2110999999997456e-05, 4.300000000000137e-05, 4.2209000000001384e-05, 4.276400000000069e-05, 4.272200000000198e-05, 4.2680999999995806e-05, 4.2290999999999856e-05, 4.2695000000002314e-05, 4.2361000000004645e-05, 4.226400000000019e-05, 4.304200000000008e-05, 4.2139000000003535e-05, 4.2569000000006185e-05, 4.294400000000309e-05, 4.24860000000013e-05, 4.225000000000062e-05, 4.2832999999999066e-05, 4.2804999999999926e-05, 4.2138999999996596e-05, 4.255600000000609e-05, 4.247200000000173e-05, 4.225000000000062e-05, 4.273600000000155e-05, 4.249999999999393e-05, 4.2902999999996916e-05, 4.2945000000002564e-05, 4.301400000000094e-05, 4.2181000000002244e-05, 4.300000000000137e-05, 4.3096999999998886e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.120" endtime="20201030 11:51:57.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.108" endtime="20201030 11:51:57.127"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.138" endtime="20201030 11:51:57.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.132" endtime="20201030 11:51:57.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.129" endtime="20201030 11:51:57.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.608" endtime="20201030 11:51:57.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.607" endtime="20201030 11:51:57.164"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.188" endtime="20201030 11:51:57.209"></status>
</kw>
<msg timestamp="20201030 11:51:57.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.184" endtime="20201030 11:51:57.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.212" endtime="20201030 11:51:57.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.219" endtime="20201030 11:51:57.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.177" endtime="20201030 11:51:57.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.170" endtime="20201030 11:51:57.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.244" endtime="20201030 11:51:57.576"></status>
</kw>
<msg timestamp="20201030 11:51:57.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043233903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043277944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.240" endtime="20201030 11:51:57.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.603" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043233903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043277944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.586" endtime="20201030 11:51:57.604"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.606" endtime="20201030 11:51:57.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.233" endtime="20201030 11:51:57.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.228" endtime="20201030 11:51:57.613"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.624" level="INFO">${RESULT} = [{'diff': 4.404100000000161e-05}, {'diff': 4.399999999999543e-05}, {'diff': 4.4083000000000316e-05}, {'diff': 4.391599999999801e-05}, {'diff': 4.31939999999964e-05}, {'diff': 4.3889000000005285e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:57.615" endtime="20201030 11:51:57.624"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.636" level="INFO">${ACCURACY} = {'diff': [4.404100000000161e-05, 4.399999999999543e-05, 4.4083000000000316e-05, 4.391599999999801e-05, 4.31939999999964e-05, 4.3889000000005285e-05, 4.3833000000000066e-05, 4.323600000000205e-05, 4.33...</msg>
<status status="PASS" starttime="20201030 11:51:57.626" endtime="20201030 11:51:57.636"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.647" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.645" endtime="20201030 11:51:57.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.653" level="INFO">VALUE: [4.404100000000161e-05, 4.399999999999543e-05, 4.4083000000000316e-05, 4.391599999999801e-05, 4.31939999999964e-05, 4.3889000000005285e-05, 4.3833000000000066e-05, 4.323600000000205e-05, 4.3318999999999996e-05, 4.407000000000022e-05, 4.331999999999947e-05, 4.3167000000003675e-05, 4.3389000000004785e-05, 4.379200000000083e-05, 4.3916999999997486e-05, 4.349999999999493e-05, 4.399999999999543e-05, 4.304200000000008e-05, 4.344400000000359e-05, 4.3388999999997846e-05, 4.3223000000001954e-05, 4.354200000000058e-05, 4.379200000000083e-05, 4.377800000000126e-05, 4.342999999999708e-05, 4.4069000000000746e-05, 4.3374999999998276e-05, 4.345800000000316e-05, 4.401400000000194e-05, 4.3666999999997236e-05, 4.329200000000033e-05, 4.329200000000033e-05, 4.3902999999997916e-05, 4.3110999999998456e-05, 4.377799999999432e-05, 4.333399999999904e-05, 4.3139000000004535e-05, 4.3195000000002814e-05, 4.3680999999996806e-05, 4.3681000000003745e-05, 4.366599999999776e-05, 4.376400000000169e-05, 4.3096999999998886e-05, 4.3082999999999316e-05, 4.394399999999715e-05, 4.402799999999457e-05, 4.344400000000359e-05, 4.3819000000000496e-05, 4.3653000000004605e-05, 4.402800000000151e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.650" endtime="20201030 11:51:57.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.638" endtime="20201030 11:51:57.656"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.666" endtime="20201030 11:51:57.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.662" endtime="20201030 11:51:57.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.659" endtime="20201030 11:51:57.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.166" endtime="20201030 11:51:57.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.165" endtime="20201030 11:51:57.692"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.716" endtime="20201030 11:51:57.737"></status>
</kw>
<msg timestamp="20201030 11:51:57.738" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.713" endtime="20201030 11:51:57.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.745" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.741" endtime="20201030 11:51:57.746"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.747" endtime="20201030 11:51:57.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.705" endtime="20201030 11:51:57.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.699" endtime="20201030 11:51:57.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.772" endtime="20201030 11:51:58.131"></status>
</kw>
<msg timestamp="20201030 11:51:58.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043181833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043226444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.768" endtime="20201030 11:51:58.139"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.159" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043181833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043226444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.141" endtime="20201030 11:51:58.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.161" endtime="20201030 11:51:58.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.761" endtime="20201030 11:51:58.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.756" endtime="20201030 11:51:58.168"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.179" level="INFO">${RESULT} = [{'diff': 4.4610999999999956e-05}, {'diff': 4.4124999999999026e-05}, {'diff': 4.4110999999999456e-05}, {'diff': 4.4347000000000136e-05}, {'diff': 4.4597000000000386e-05}, {'diff': 4.415200000000563e-0...</msg>
<status status="PASS" starttime="20201030 11:51:58.170" endtime="20201030 11:51:58.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.191" level="INFO">${ACCURACY} = {'diff': [4.4610999999999956e-05, 4.4124999999999026e-05, 4.4110999999999456e-05, 4.4347000000000136e-05, 4.4597000000000386e-05, 4.415200000000563e-05, 4.498599999999686e-05, 4.4124999999999026e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:58.182" endtime="20201030 11:51:58.192"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.203" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.201" endtime="20201030 11:51:58.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.209" level="INFO">VALUE: [4.4610999999999956e-05, 4.4124999999999026e-05, 4.4110999999999456e-05, 4.4347000000000136e-05, 4.4597000000000386e-05, 4.415200000000563e-05, 4.498599999999686e-05, 4.4124999999999026e-05, 4.4430999999997556e-05, 4.479200000000183e-05, 4.483299999999413e-05, 4.424999999999568e-05, 4.4902999999998916e-05, 4.4209000000003384e-05, 4.447200000000373e-05, 4.423599999999611e-05, 4.4096999999999886e-05, 4.476400000000269e-05, 4.4374999999999276e-05, 4.4388999999998846e-05, 4.4181000000004245e-05, 4.4819000000001497e-05, 4.479199999999489e-05, 4.479200000000183e-05, 4.4388999999998846e-05, 4.4666999999998236e-05, 4.4652999999998666e-05, 4.505600000000165e-05, 4.4610999999999956e-05, 4.4902999999998916e-05, 4.445799999999722e-05, 4.409799999999936e-05, 4.447200000000373e-05, 4.41939999999974e-05, 4.4597000000000386e-05, 4.461199999999943e-05, 4.4610999999999956e-05, 4.4374999999999276e-05, 4.416599999999826e-05, 4.494399999999815e-05, 4.504200000000208e-05, 4.4583000000000816e-05, 4.4874999999999776e-05, 4.4931000000004995e-05, 4.447199999999679e-05, 4.4152999999998166e-05, 4.4167000000004675e-05, 4.4708999999996946e-05, 4.452800000000201e-05, 4.484800000000011e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.205" endtime="20201030 11:51:58.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.193" endtime="20201030 11:51:58.212"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.222" endtime="20201030 11:51:58.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.217" endtime="20201030 11:51:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.215" endtime="20201030 11:51:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.694" endtime="20201030 11:51:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.693" endtime="20201030 11:51:58.248"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.272" endtime="20201030 11:51:58.292"></status>
</kw>
<msg timestamp="20201030 11:51:58.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.268" endtime="20201030 11:51:58.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.296" endtime="20201030 11:51:58.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.303" endtime="20201030 11:51:58.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.261" endtime="20201030 11:51:58.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.254" endtime="20201030 11:51:58.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.328" endtime="20201030 11:51:58.693"></status>
</kw>
<msg timestamp="20201030 11:51:58.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043080611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043126194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.324" endtime="20201030 11:51:58.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.720" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043080611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043126194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.703" endtime="20201030 11:51:58.721"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.723" endtime="20201030 11:51:58.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.317" endtime="20201030 11:51:58.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.311" endtime="20201030 11:51:58.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.741" level="INFO">${RESULT} = [{'diff': 4.5583000000001817e-05}, {'diff': 4.5473000000004205e-05}, {'diff': 4.565200000000019e-05}, {'diff': 4.59860000000048e-05}, {'diff': 4.600000000000437e-05}, {'diff': 4.56939999999989e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:58.732" endtime="20201030 11:51:58.742"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.751" level="INFO">${ACCURACY} = {'diff': [4.5583000000001817e-05, 4.5473000000004205e-05, 4.565200000000019e-05, 4.59860000000048e-05, 4.600000000000437e-05, 4.56939999999989e-05, 4.5333000000001566e-05, 4.505500000000218e-05, 4.601...</msg>
<status status="PASS" starttime="20201030 11:51:58.743" endtime="20201030 11:51:58.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.763" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.761" endtime="20201030 11:51:58.764"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.769" level="INFO">VALUE: [4.5583000000001817e-05, 4.5473000000004205e-05, 4.565200000000019e-05, 4.59860000000048e-05, 4.600000000000437e-05, 4.56939999999989e-05, 4.5333000000001566e-05, 4.505500000000218e-05, 4.6013999999997e-05, 4.5583000000001817e-05, 4.5666999999999236e-05, 4.5889000000000346e-05, 4.524999999999668e-05, 4.570799999999847e-05, 4.602700000000404e-05, 4.5152999999999166e-05, 4.598599999999786e-05, 4.5125000000000026e-05, 4.577799999999632e-05, 4.5625000000000526e-05, 4.5097000000000886e-05, 4.5695000000005315e-05, 4.577699999999685e-05, 4.5347000000001136e-05, 4.526399999999625e-05, 4.5458999999997696e-05, 4.599999999999743e-05, 4.5847000000001636e-05, 4.522199999999754e-05, 4.5652999999999666e-05, 4.56939999999989e-05, 4.5652999999999666e-05, 4.5625000000000526e-05, 4.570799999999847e-05, 4.5916999999999486e-05, 4.5666999999999236e-05, 4.579200000000283e-05, 4.5139000000006535e-05, 4.5166999999998736e-05, 4.5847000000001636e-05, 4.5861000000001206e-05, 4.524999999999668e-05, 4.5889000000000346e-05, 4.532000000000147e-05, 4.597199999999829e-05, 4.5472999999997266e-05, 4.5125000000000026e-05, 4.554099999999617e-05, 4.600000000000437e-05, 4.5069000000001747e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.765" endtime="20201030 11:51:58.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.753" endtime="20201030 11:51:58.777"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.787" endtime="20201030 11:51:58.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.783" endtime="20201030 11:51:58.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.780" endtime="20201030 11:51:58.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.250" endtime="20201030 11:51:58.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.249" endtime="20201030 11:51:58.813"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.837" endtime="20201030 11:51:58.859"></status>
</kw>
<msg timestamp="20201030 11:51:58.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.834" endtime="20201030 11:51:58.861"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.867" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.862" endtime="20201030 11:51:58.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.869" endtime="20201030 11:51:58.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.826" endtime="20201030 11:51:58.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.820" endtime="20201030 11:51:58.877"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.894" endtime="20201030 11:51:59.250"></status>
</kw>
<msg timestamp="20201030 11:51:59.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044716847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044763667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.891" endtime="20201030 11:51:59.259"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044716847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044763667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.260" endtime="20201030 11:51:59.278"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.280" endtime="20201030 11:51:59.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.883" endtime="20201030 11:51:59.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.878" endtime="20201030 11:51:59.288"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.298" level="INFO">${RESULT} = [{'diff': 4.682000000000297e-05}, {'diff': 4.6931000000000056e-05}, {'diff': 4.693000000000058e-05}, {'diff': 4.613800000000112e-05}, {'diff': 4.638800000000137e-05}, {'diff': 4.699999999999843e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:59.289" endtime="20201030 11:51:59.299"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.308" level="INFO">${ACCURACY} = {'diff': [4.682000000000297e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.613800000000112e-05, 4.638800000000137e-05, 4.699999999999843e-05, 4.638899999999391e-05, 4.66939999999999e-05, 4.6666...</msg>
<status status="PASS" starttime="20201030 11:51:59.301" endtime="20201030 11:51:59.309"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.320" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.318" endtime="20201030 11:51:59.321"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.326" level="INFO">VALUE: [4.682000000000297e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.613800000000112e-05, 4.638800000000137e-05, 4.699999999999843e-05, 4.638899999999391e-05, 4.66939999999999e-05, 4.666600000000076e-05, 4.623599999999811e-05, 4.645799999999922e-05, 4.6889000000001346e-05, 4.6125000000001026e-05, 4.6347000000002136e-05, 4.6167000000006675e-05, 4.6389000000000846e-05, 4.679199999999689e-05, 4.6125000000001026e-05, 4.655600000000315e-05, 4.705599999999671e-05, 4.631899999999606e-05, 4.659799999999492e-05, 4.677800000000426e-05, 4.6430999999999556e-05, 4.680500000000393e-05, 4.624999999999768e-05, 4.700000000000537e-05, 4.6375000000001276e-05, 4.6416999999999986e-05, 4.704099999999767e-05, 4.679200000000383e-05, 4.654200000000358e-05, 4.6667000000000236e-05, 4.6153000000000166e-05, 4.6667000000000236e-05, 4.6194999999998876e-05, 4.681999999999603e-05, 4.6209000000005385e-05, 4.6958999999999196e-05, 4.612499999999409e-05, 4.622200000000548e-05, 4.666600000000076e-05, 4.652700000000454e-05, 4.6333000000002567e-05, 4.66669999999933e-05, 4.654099999999717e-05, 4.679099999999742e-05, 4.6667000000000236e-05, 4.651400000000444e-05, 4.611099999999452e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.322" endtime="20201030 11:51:59.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.310" endtime="20201030 11:51:59.329"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.341" endtime="20201030 11:51:59.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.334" endtime="20201030 11:51:59.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.332" endtime="20201030 11:51:59.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.815" endtime="20201030 11:51:59.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.814" endtime="20201030 11:51:59.366"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.390" endtime="20201030 11:51:59.411"></status>
</kw>
<msg timestamp="20201030 11:51:59.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.387" endtime="20201030 11:51:59.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.415" endtime="20201030 11:51:59.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.421" endtime="20201030 11:51:59.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.379" endtime="20201030 11:51:59.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.373" endtime="20201030 11:51:59.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.446" endtime="20201030 11:51:59.806"></status>
</kw>
<msg timestamp="20201030 11:51:59.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043205236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.443" endtime="20201030 11:51:59.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043157819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043205236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.816" endtime="20201030 11:51:59.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.835" endtime="20201030 11:51:59.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.435" endtime="20201030 11:51:59.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.430" endtime="20201030 11:51:59.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.854" level="INFO">${RESULT} = [{'diff': 4.7417000000000986e-05}, {'diff': 4.708299999999638e-05}, {'diff': 4.7417000000000986e-05}, {'diff': 4.773599999999961e-05}, {'diff': 4.7431000000000556e-05}, {'diff': 4.709800000000236e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:59.844" endtime="20201030 11:51:59.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.865" level="INFO">${ACCURACY} = {'diff': [4.7417000000000986e-05, 4.708299999999638e-05, 4.7417000000000986e-05, 4.773599999999961e-05, 4.7431000000000556e-05, 4.709800000000236e-05, 4.733300000000357e-05, 4.7736999999999086e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:59.856" endtime="20201030 11:51:59.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.877" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.874" endtime="20201030 11:51:59.878"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.883" level="INFO">VALUE: [4.7417000000000986e-05, 4.708299999999638e-05, 4.7417000000000986e-05, 4.773599999999961e-05, 4.7431000000000556e-05, 4.709800000000236e-05, 4.733300000000357e-05, 4.7736999999999086e-05, 4.7153000000001166e-05, 4.770800000000047e-05, 4.7625000000002526e-05, 4.781899999999756e-05, 4.78469999999967e-05, 4.733299999999663e-05, 4.775000000000612e-05, 4.768000000000133e-05, 4.76669999999943e-05, 4.802799999999857e-05, 4.777800000000526e-05, 4.7375000000002276e-05, 4.765299999999473e-05, 4.784800000000311e-05, 4.723599999999911e-05, 4.752799999999807e-05, 4.754200000000458e-05, 4.78339999999966e-05, 4.788899999999541e-05, 4.736200000000218e-05, 4.7401999999995004e-05, 4.7111000000002456e-05, 4.748599999999936e-05, 4.7665999999994824e-05, 4.779099999999842e-05, 4.752800000000501e-05, 4.731899999999706e-05, 4.738800000000237e-05, 4.7943999999994213e-05, 4.709799999999542e-05, 4.7681000000000806e-05, 4.7931000000001056e-05, 4.7445000000000126e-05, 4.7139000000001596e-05, 4.7417000000000986e-05, 4.7139000000001596e-05, 4.724999999999868e-05, 4.768000000000133e-05, 4.766600000000176e-05, 4.723599999999911e-05, 4.7111000000002456e-05, 4.794400000000115e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.879" endtime="20201030 11:51:59.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.867" endtime="20201030 11:51:59.886"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.896" endtime="20201030 11:51:59.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.891" endtime="20201030 11:51:59.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.889" endtime="20201030 11:51:59.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.369" endtime="20201030 11:51:59.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.367" endtime="20201030 11:51:59.921"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.947" endtime="20201030 11:51:59.967"></status>
</kw>
<msg timestamp="20201030 11:51:59.969" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.943" endtime="20201030 11:51:59.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.975" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.971" endtime="20201030 11:51:59.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.978" endtime="20201030 11:51:59.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.935" endtime="20201030 11:51:59.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.928" endtime="20201030 11:51:59.985"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.003" endtime="20201030 11:52:00.360"></status>
</kw>
<msg timestamp="20201030 11:52:00.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044623431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044672403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.999" endtime="20201030 11:52:00.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.387" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044623431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044672403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.370" endtime="20201030 11:52:00.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.389" endtime="20201030 11:52:00.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.992" endtime="20201030 11:52:00.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.987" endtime="20201030 11:52:00.397"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.408" level="INFO">${RESULT} = [{'diff': 4.897200000000129e-05}, {'diff': 4.881899999999856e-05}, {'diff': 4.881899999999856e-05}, {'diff': 4.82219999999936e-05}, {'diff': 4.8459000000000696e-05}, {'diff': 4.854199999999864e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:00.399" endtime="20201030 11:52:00.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.420" level="INFO">${ACCURACY} = {'diff': [4.897200000000129e-05, 4.881899999999856e-05, 4.881899999999856e-05, 4.82219999999936e-05, 4.8459000000000696e-05, 4.854199999999864e-05, 4.8486999999999836e-05, 4.8473000000000266e-05, 4.86...</msg>
<status status="PASS" starttime="20201030 11:52:00.410" endtime="20201030 11:52:00.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.432" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.429" endtime="20201030 11:52:00.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.437" level="INFO">VALUE: [4.897200000000129e-05, 4.881899999999856e-05, 4.881899999999856e-05, 4.82219999999936e-05, 4.8459000000000696e-05, 4.854199999999864e-05, 4.8486999999999836e-05, 4.8473000000000266e-05, 4.869499999999444e-05, 4.8903000000002916e-05, 4.838800000000337e-05, 4.848600000000036e-05, 4.8139000000002596e-05, 4.8139000000002596e-05, 4.831899999999806e-05, 4.8903000000002916e-05, 4.85139999999995e-05, 4.906999999999828e-05, 4.876399999999975e-05, 4.877799999999932e-05, 4.8959000000001196e-05, 4.891699999999555e-05, 4.85139999999995e-05, 4.8653000000002666e-05, 4.8667000000002236e-05, 4.824999999999968e-05, 4.848600000000036e-05, 4.838899999999591e-05, 4.845800000000122e-05, 4.840200000000294e-05, 4.870800000000147e-05, 4.891600000000301e-05, 4.880499999999899e-05, 4.8125000000003026e-05, 4.818000000000183e-05, 4.886099999999727e-05, 4.879199999999889e-05, 4.811099999999652e-05, 4.836099999999677e-05, 4.8139000000002596e-05, 4.825000000000662e-05, 4.854200000000558e-05, 4.8111000000003457e-05, 4.8903000000002916e-05, 4.8695000000001376e-05, 4.808300000000432e-05, 4.854099999999917e-05, 4.811200000000293e-05, 4.8209000000000446e-05, 4.848600000000036e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.434" endtime="20201030 11:52:00.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.422" endtime="20201030 11:52:00.441"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.451" endtime="20201030 11:52:00.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.446" endtime="20201030 11:52:00.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.443" endtime="20201030 11:52:00.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.924" endtime="20201030 11:52:00.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.922" endtime="20201030 11:52:00.476"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.501" endtime="20201030 11:52:00.521"></status>
</kw>
<msg timestamp="20201030 11:52:00.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.497" endtime="20201030 11:52:00.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.524" endtime="20201030 11:52:00.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.531" endtime="20201030 11:52:00.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.490" endtime="20201030 11:52:00.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.483" endtime="20201030 11:52:00.538"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.556" endtime="20201030 11:52:00.880"></status>
</kw>
<msg timestamp="20201030 11:52:00.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043287181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.552" endtime="20201030 11:52:00.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043287181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.885" endtime="20201030 11:52:00.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.894" endtime="20201030 11:52:00.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.545" endtime="20201030 11:52:00.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.540" endtime="20201030 11:52:00.897"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.902" level="INFO">${RESULT} = [{'diff': 5.000000000000143e-05}, {'diff': 4.981999999999903e-05}, {'diff': 4.986099999999827e-05}, {'diff': 4.950000000000093e-05}, {'diff': 4.940200000000394e-05}, {'diff': 5.004200000000014e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:00.898" endtime="20201030 11:52:00.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.907" level="INFO">${ACCURACY} = {'diff': [5.000000000000143e-05, 4.981999999999903e-05, 4.986099999999827e-05, 4.950000000000093e-05, 4.940200000000394e-05, 5.004200000000014e-05, 4.911100000000446e-05, 4.945800000000222e-05, 5.0000...</msg>
<status status="PASS" starttime="20201030 11:52:00.903" endtime="20201030 11:52:00.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.912" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.911" endtime="20201030 11:52:00.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.915" level="INFO">VALUE: [5.000000000000143e-05, 4.981999999999903e-05, 4.986099999999827e-05, 4.950000000000093e-05, 4.940200000000394e-05, 5.004200000000014e-05, 4.911100000000446e-05, 4.945800000000222e-05, 5.000000000000143e-05, 4.9375000000004277e-05, 4.948600000000136e-05, 4.988899999999741e-05, 4.993000000000358e-05, 4.926400000000025e-05, 4.952800000000007e-05, 4.997200000000229e-05, 4.975000000000118e-05, 4.913899999999666e-05, 4.930599999999896e-05, 4.954199999999964e-05, 4.987499999999784e-05, 4.915299999999623e-05, 4.9125000000004027e-05, 5.001300000000153e-05, 4.912499999999709e-05, 4.940200000000394e-05, 4.936100000000471e-05, 4.936099999999777e-05, 4.9971999999995353e-05, 5.000000000000143e-05, 5.006899999999981e-05, 4.968000000000333e-05, 4.968099999999587e-05, 4.950000000000093e-05, 4.922200000000154e-05, 4.998599999999492e-05, 4.906999999999828e-05, 4.937499999999734e-05, 4.909800000000436e-05, 4.9723000000001516e-05, 4.959800000000486e-05, 5.005599999999971e-05, 4.913800000000412e-05, 4.922200000000154e-05, 4.965299999999673e-05, 4.954199999999964e-05, 4.988899999999741e-05, 4.9945000000002626e-05, 4.976400000000075e-05, 4.998599999999492e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.913" endtime="20201030 11:52:00.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.907" endtime="20201030 11:52:00.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.921" endtime="20201030 11:52:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.919" endtime="20201030 11:52:00.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.918" endtime="20201030 11:52:00.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.479" endtime="20201030 11:52:00.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.477" endtime="20201030 11:52:00.942"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.953" endtime="20201030 11:52:00.972"></status>
</kw>
<msg timestamp="20201030 11:52:00.972" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.951" endtime="20201030 11:52:00.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.973" endtime="20201030 11:52:00.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.977" endtime="20201030 11:52:00.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.948" endtime="20201030 11:52:00.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.945" endtime="20201030 11:52:00.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.989" endtime="20201030 11:52:01.332"></status>
</kw>
<msg timestamp="20201030 11:52:01.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025685264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.987" endtime="20201030 11:52:01.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025634847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025685264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.342" endtime="20201030 11:52:01.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.361" endtime="20201030 11:52:01.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.984" endtime="20201030 11:52:01.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.981" endtime="20201030 11:52:01.369"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.379" level="INFO">${RESULT} = [{'diff': 5.041700000000052e-05}, {'diff': 5.012500000000156e-05}, {'diff': 5.0209000000002446e-05}, {'diff': 5.072299999999905e-05}, {'diff': 5.0708e-05}, {'diff': 5.049999999999846e-05}, {'diff': 5....</msg>
<status status="PASS" starttime="20201030 11:52:01.370" endtime="20201030 11:52:01.380"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.389" level="INFO">${ACCURACY} = {'diff': [5.041700000000052e-05, 5.012500000000156e-05, 5.0209000000002446e-05, 5.072299999999905e-05, 5.0708e-05, 5.049999999999846e-05, 5.06530000000012e-05, 5.10409999999982e-05, 5.012499999999809e...</msg>
<status status="PASS" starttime="20201030 11:52:01.382" endtime="20201030 11:52:01.390"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.401" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.399" endtime="20201030 11:52:01.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.407" level="INFO">VALUE: [5.041700000000052e-05, 5.012500000000156e-05, 5.0209000000002446e-05, 5.072299999999905e-05, 5.0708e-05, 5.049999999999846e-05, 5.06530000000012e-05, 5.10409999999982e-05, 5.012499999999809e-05, 5.023599999999864e-05, 5.011099999999852e-05, 5.10279999999981e-05, 5.077799999999785e-05, 5.018099999999984e-05, 5.098599999999939e-05, 5.026400000000125e-05, 5.107000000000028e-05, 5.052699999999813e-05, 5.018099999999984e-05, 5.068100000000034e-05, 5.038900000000138e-05, 5.016700000000027e-05, 5.0652000000001723e-05, 5.091600000000154e-05, 5.051299999999856e-05, 5.06669999999973e-05, 5.0402000000001473e-05, 5.019399999999993e-05, 5.082000000000003e-05, 5.012499999999809e-05, 5.05409999999977e-05, 5.045799999999975e-05, 5.025000000000168e-05, 5.0708e-05, 5.068100000000034e-05, 5.087499999999884e-05, 5.065299999999773e-05, 5.075000000000218e-05, 5.109699999999995e-05, 5.013900000000113e-05, 5.077699999999838e-05, 5.027800000000082e-05, 5.06669999999973e-05, 5.105500000000124e-05, 5.086099999999927e-05, 5.045799999999975e-05, 5.080500000000099e-05, 5.088899999999841e-05, 5.0665999999997824e-05, 5.045799999999975e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.403" endtime="20201030 11:52:01.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.391" endtime="20201030 11:52:01.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.422" endtime="20201030 11:52:01.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.416" endtime="20201030 11:52:01.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.413" endtime="20201030 11:52:01.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.943" endtime="20201030 11:52:01.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.942" endtime="20201030 11:52:01.447"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.472" endtime="20201030 11:52:01.493"></status>
</kw>
<msg timestamp="20201030 11:52:01.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.468" endtime="20201030 11:52:01.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.497" endtime="20201030 11:52:01.501"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.503" endtime="20201030 11:52:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.461" endtime="20201030 11:52:01.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.454" endtime="20201030 11:52:01.510"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.528" endtime="20201030 11:52:01.897"></status>
</kw>
<msg timestamp="20201030 11:52:01.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043504347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.524" endtime="20201030 11:52:01.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043452861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043504347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.907" endtime="20201030 11:52:01.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.927" endtime="20201030 11:52:01.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.517" endtime="20201030 11:52:01.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.512" endtime="20201030 11:52:01.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.945" level="INFO">${RESULT} = [{'diff': 5.1485999999996424e-05}, {'diff': 5.1235999999996173e-05}, {'diff': 5.1707999999997534e-05}, {'diff': 5.1249999999995743e-05}, {'diff': 5.113899999999866e-05}, {'diff': 5.154200000000164e-05...</msg>
<status status="PASS" starttime="20201030 11:52:01.936" endtime="20201030 11:52:01.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.957" level="INFO">${ACCURACY} = {'diff': [5.1485999999996424e-05, 5.1235999999996173e-05, 5.1707999999997534e-05, 5.1249999999995743e-05, 5.113899999999866e-05, 5.154200000000164e-05, 5.205600000000171e-05, 5.1681000000004806e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:52:01.948" endtime="20201030 11:52:01.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.968" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.966" endtime="20201030 11:52:01.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.974" level="INFO">VALUE: [5.1485999999996424e-05, 5.1235999999996173e-05, 5.1707999999997534e-05, 5.1249999999995743e-05, 5.113899999999866e-05, 5.154200000000164e-05, 5.205600000000171e-05, 5.1681000000004806e-05, 5.125000000000268e-05, 5.1667000000005237e-05, 5.126399999999531e-05, 5.138899999999891e-05, 5.18340000000006e-05, 5.1651999999999254e-05, 5.1665999999998824e-05, 5.15419999999947e-05, 5.1693999999997964e-05, 5.1235999999996173e-05, 5.15140000000025e-05, 5.158300000000088e-05, 5.183300000000113e-05, 5.138900000000585e-05, 5.163899999999916e-05, 5.134799999999967e-05, 5.168099999999787e-05, 5.147200000000379e-05, 5.188899999999941e-05, 5.168099999999787e-05, 5.165200000000619e-05, 5.173699999999615e-05, 5.138900000000585e-05, 5.2014000000003e-05, 5.191699999999855e-05, 5.133300000000063e-05, 5.1471999999996854e-05, 5.1165999999998324e-05, 5.1707999999997534e-05, 5.1693999999997964e-05, 5.1721999999997104e-05, 5.168099999999787e-05, 5.120800000000397e-05, 5.10419999999942e-05, 5.132000000000053e-05, 5.1973000000003766e-05, 5.175000000000318e-05, 5.1473000000003266e-05, 5.130600000000096e-05, 5.176400000000275e-05, 5.177700000000285e-05, 5.136099999999977e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.971" endtime="20201030 11:52:01.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.959" endtime="20201030 11:52:01.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.988" endtime="20201030 11:52:02.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.983" endtime="20201030 11:52:02.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.980" endtime="20201030 11:52:02.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.450" endtime="20201030 11:52:02.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.448" endtime="20201030 11:52:02.015"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.039" endtime="20201030 11:52:02.060"></status>
</kw>
<msg timestamp="20201030 11:52:02.061" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.036" endtime="20201030 11:52:02.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.064" endtime="20201030 11:52:02.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.071" endtime="20201030 11:52:02.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.028" endtime="20201030 11:52:02.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.022" endtime="20201030 11:52:02.078"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.096" endtime="20201030 11:52:02.453"></status>
</kw>
<msg timestamp="20201030 11:52:02.461" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044482653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044535375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.092" endtime="20201030 11:52:02.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044482653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044535375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.463" endtime="20201030 11:52:02.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.483" endtime="20201030 11:52:02.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.084" endtime="20201030 11:52:02.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.079" endtime="20201030 11:52:02.490"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.501" level="INFO">${RESULT} = [{'diff': 5.272200000000504e-05}, {'diff': 5.248600000000436e-05}, {'diff': 5.212500000000009e-05}, {'diff': 5.26669999999993e-05}, {'diff': 5.3013999999997063e-05}, {'diff': 5.227799999999588e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:02.492" endtime="20201030 11:52:02.501"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.513" level="INFO">${ACCURACY} = {'diff': [5.272200000000504e-05, 5.248600000000436e-05, 5.212500000000009e-05, 5.26669999999993e-05, 5.3013999999997063e-05, 5.227799999999588e-05, 5.213899999999966e-05, 5.2459000000004696e-05, 5.206...</msg>
<status status="PASS" starttime="20201030 11:52:02.503" endtime="20201030 11:52:02.514"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.525" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.522" endtime="20201030 11:52:02.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.531" level="INFO">VALUE: [5.272200000000504e-05, 5.248600000000436e-05, 5.212500000000009e-05, 5.26669999999993e-05, 5.3013999999997063e-05, 5.227799999999588e-05, 5.213899999999966e-05, 5.2459000000004696e-05, 5.206900000000181e-05, 5.280599999999552e-05, 5.206899999999487e-05, 5.2679999999999394e-05, 5.229099999999598e-05, 5.2707999999998534e-05, 5.280599999999552e-05, 5.280600000000246e-05, 5.2207999999998034e-05, 5.288900000000041e-05, 5.220800000000497e-05, 5.2471999999997854e-05, 5.21669999999988e-05, 5.279200000000289e-05, 5.297299999999783e-05, 5.229200000000239e-05, 5.286100000000127e-05, 5.288900000000041e-05, 5.2665999999999824e-05, 5.2429999999999144e-05, 5.213899999999966e-05, 5.2737000000004086e-05, 5.2999999999997494e-05, 5.305600000000271e-05, 5.2723000000004516e-05, 5.256899999999537e-05, 5.230599999999502e-05, 5.215300000000617e-05, 5.229199999999545e-05, 5.294499999999869e-05, 5.208299999999444e-05, 5.2957999999998784e-05, 5.233300000000163e-05, 5.226299999999684e-05, 5.25140000000035e-05, 5.2665999999999824e-05, 5.2721999999998104e-05, 5.227700000000335e-05, 5.2165999999999324e-05, 5.215299999999923e-05, 5.277699999999691e-05, 5.306899999999587e-05]</msg>
<status status="PASS" starttime="20201030 11:52:02.527" endtime="20201030 11:52:02.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.515" endtime="20201030 11:52:02.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.544" endtime="20201030 11:52:02.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.539" endtime="20201030 11:52:02.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.537" endtime="20201030 11:52:02.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.017" endtime="20201030 11:52:02.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.016" endtime="20201030 11:52:02.570"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.594" endtime="20201030 11:52:02.614"></status>
</kw>
<msg timestamp="20201030 11:52:02.616" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.590" endtime="20201030 11:52:02.616"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.618" endtime="20201030 11:52:02.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.624" endtime="20201030 11:52:02.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.583" endtime="20201030 11:52:02.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.576" endtime="20201030 11:52:02.632"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.650" endtime="20201030 11:52:03.010"></status>
</kw>
<msg timestamp="20201030 11:52:03.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.646" endtime="20201030 11:52:03.018"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043290569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.020" endtime="20201030 11:52:03.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.041" endtime="20201030 11:52:03.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.638" endtime="20201030 11:52:03.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.633" endtime="20201030 11:52:03.049"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.060" level="INFO">${RESULT} = [{'diff': 5.3735999999998674e-05}, {'diff': 5.352800000000407e-05}, {'diff': 5.354100000000417e-05}, {'diff': 5.336099999999483e-05}, {'diff': 5.3416000000000574e-05}, {'diff': 5.3471999999998854e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:03.051" endtime="20201030 11:52:03.061"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.070" level="INFO">${ACCURACY} = {'diff': [5.3735999999998674e-05, 5.352800000000407e-05, 5.354100000000417e-05, 5.336099999999483e-05, 5.3416000000000574e-05, 5.3471999999998854e-05, 5.359699999999551e-05, 5.331900000000306e-05, 5.3...</msg>
<status status="PASS" starttime="20201030 11:52:03.062" endtime="20201030 11:52:03.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.082" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.079" endtime="20201030 11:52:03.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.088" level="INFO">VALUE: [5.3735999999998674e-05, 5.352800000000407e-05, 5.354100000000417e-05, 5.336099999999483e-05, 5.3416000000000574e-05, 5.3471999999998854e-05, 5.359699999999551e-05, 5.331900000000306e-05, 5.333299999999569e-05, 5.3777999999997383e-05, 5.358299999999594e-05, 5.311100000000152e-05, 5.3777999999997383e-05, 5.368099999999987e-05, 5.368099999999987e-05, 5.319499999999894e-05, 5.347299999999833e-05, 5.33340000000021e-05, 5.400000000000543e-05, 5.356999999999584e-05, 5.384699999999576e-05, 5.3999999999998494e-05, 5.325000000000468e-05, 5.3680000000000394e-05, 5.312499999999415e-05, 5.38470000000027e-05, 5.329200000000339e-05, 5.384699999999576e-05, 5.379199999999695e-05, 5.333300000000263e-05, 5.40419999999972e-05, 5.3499999999997994e-05, 5.3263999999997313e-05, 5.372299999999858e-05, 5.387500000000184e-05, 5.35140000000045e-05, 5.331900000000306e-05, 5.33470000000022e-05, 5.3721999999999104e-05, 5.380499999999705e-05, 5.336100000000177e-05, 5.3443999999999714e-05, 5.312500000000109e-05, 5.315300000000023e-05, 5.363900000000116e-05, 5.3735999999998674e-05, 5.388900000000141e-05, 5.361100000000202e-05, 5.33470000000022e-05, 5.320899999999851e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.084" endtime="20201030 11:52:03.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.072" endtime="20201030 11:52:03.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.101" endtime="20201030 11:52:03.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.096" endtime="20201030 11:52:03.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.094" endtime="20201030 11:52:03.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.572" endtime="20201030 11:52:03.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.571" endtime="20201030 11:52:03.127"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.151" endtime="20201030 11:52:03.173"></status>
</kw>
<msg timestamp="20201030 11:52:03.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.148" endtime="20201030 11:52:03.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.177" endtime="20201030 11:52:03.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.184" endtime="20201030 11:52:03.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.140" endtime="20201030 11:52:03.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.134" endtime="20201030 11:52:03.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.208" endtime="20201030 11:52:03.567"></status>
</kw>
<msg timestamp="20201030 11:52:03.575" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045130306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045185222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.205" endtime="20201030 11:52:03.575"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045130306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045185222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.577" endtime="20201030 11:52:03.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.597" endtime="20201030 11:52:03.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.197" endtime="20201030 11:52:03.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.192" endtime="20201030 11:52:03.604"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.615" level="INFO">${RESULT} = [{'diff': 5.4915999999995135e-05}, {'diff': 5.481899999999762e-05}, {'diff': 5.440300000000148e-05}, {'diff': 5.487500000000284e-05}, {'diff': 5.445899999999976e-05}, {'diff': 5.448600000000636e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:03.606" endtime="20201030 11:52:03.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.625" level="INFO">${ACCURACY} = {'diff': [5.4915999999995135e-05, 5.481899999999762e-05, 5.440300000000148e-05, 5.487500000000284e-05, 5.445899999999976e-05, 5.448600000000636e-05, 5.4471999999999854e-05, 5.490300000000198e-05, 5.44...</msg>
<status status="PASS" starttime="20201030 11:52:03.617" endtime="20201030 11:52:03.626"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.637" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.635" endtime="20201030 11:52:03.638"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.643" level="INFO">VALUE: [5.4915999999995135e-05, 5.481899999999762e-05, 5.440300000000148e-05, 5.487500000000284e-05, 5.445899999999976e-05, 5.448600000000636e-05, 5.4471999999999854e-05, 5.490300000000198e-05, 5.4471999999999854e-05, 5.468100000000087e-05, 5.413900000000166e-05, 5.5027999999998634e-05, 5.436200000000224e-05, 5.465299999999479e-05, 5.434800000000267e-05, 5.437500000000234e-05, 5.4985999999999924e-05, 5.4221999999999604e-05, 5.4263999999998314e-05, 5.50549999999983e-05, 5.4971999999993415e-05, 5.45549999999978e-05, 5.4471999999999854e-05, 5.445899999999976e-05, 5.405599999999677e-05, 5.432000000000353e-05, 5.468100000000087e-05, 5.411100000000252e-05, 5.454200000000464e-05, 5.4263999999998314e-05, 5.455600000000421e-05, 5.470900000000001e-05, 5.479099999999848e-05, 5.4722000000000104e-05, 5.4458000000000284e-05, 5.4499999999998994e-05, 5.506899999999787e-05, 5.483300000000413e-05, 5.456999999999684e-05, 5.487500000000284e-05, 5.412499999999515e-05, 5.41670000000008e-05, 5.4458000000000284e-05, 5.412500000000209e-05, 5.49869999999994e-05, 5.405600000000371e-05, 5.4444000000000714e-05, 5.504100000000567e-05, 5.48749999999959e-05, 5.433300000000363e-05]</msg>
<status status="PASS" starttime="20201030 11:52:03.639" endtime="20201030 11:52:03.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.627" endtime="20201030 11:52:03.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.662" endtime="20201030 11:52:03.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.651" endtime="20201030 11:52:03.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.649" endtime="20201030 11:52:03.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.129" endtime="20201030 11:52:03.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.128" endtime="20201030 11:52:03.688"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.712" endtime="20201030 11:52:03.733"></status>
</kw>
<msg timestamp="20201030 11:52:03.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.708" endtime="20201030 11:52:03.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.736" endtime="20201030 11:52:03.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.743" endtime="20201030 11:52:03.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.701" endtime="20201030 11:52:03.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.695" endtime="20201030 11:52:03.750"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.768" endtime="20201030 11:52:04.128"></status>
</kw>
<msg timestamp="20201030 11:52:04.136" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043192222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:03.764" endtime="20201030 11:52:04.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04313625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043192222, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:04.138" endtime="20201030 11:52:04.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.158" endtime="20201030 11:52:04.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.757" endtime="20201030 11:52:04.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.752" endtime="20201030 11:52:04.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.176" level="INFO">${RESULT} = [{'diff': 5.5972000000001354e-05}, {'diff': 5.527699999999941e-05}, {'diff': 5.577699999999991e-05}, {'diff': 5.5527999999999134e-05}, {'diff': 5.604099999999973e-05}, {'diff': 5.5472000000000854e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:04.167" endtime="20201030 11:52:04.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.188" level="INFO">${ACCURACY} = {'diff': [5.5972000000001354e-05, 5.527699999999941e-05, 5.577699999999991e-05, 5.5527999999999134e-05, 5.604099999999973e-05, 5.5472000000000854e-05, 5.558299999999794e-05, 5.534699999999726e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 11:52:04.178" endtime="20201030 11:52:04.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.199" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.197" endtime="20201030 11:52:04.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.205" level="INFO">VALUE: [5.5972000000001354e-05, 5.527699999999941e-05, 5.577699999999991e-05, 5.5527999999999134e-05, 5.604099999999973e-05, 5.5472000000000854e-05, 5.558299999999794e-05, 5.534699999999726e-05, 5.513900000000266e-05, 5.593100000000212e-05, 5.5444000000001714e-05, 5.588899999999647e-05, 5.544500000000119e-05, 5.58470000000047e-05, 5.533300000000463e-05, 5.536200000000324e-05, 5.5666000000002824e-05, 5.543100000000162e-05, 5.534699999999726e-05, 5.58749999999969e-05, 5.58749999999969e-05, 5.565300000000273e-05, 5.6014000000000064e-05, 5.5708000000001534e-05, 5.6027999999999634e-05, 5.568100000000187e-05, 5.538900000000291e-05, 5.536099999999683e-05, 5.5458000000001284e-05, 5.5263999999999314e-05, 5.544500000000119e-05, 5.534699999999726e-05, 5.543099999999468e-05, 5.5402000000003004e-05, 5.558399999999741e-05, 5.5722000000001104e-05, 5.533300000000463e-05, 5.588900000000341e-05, 5.602700000000016e-05, 5.6000000000000494e-05, 5.5180000000001894e-05, 5.591699999999561e-05, 5.566699999999536e-05, 5.5736000000000674e-05, 5.5222000000000604e-05, 5.6000000000000494e-05, 5.588899999999647e-05, 5.6027999999999634e-05, 5.537500000000334e-05, 5.591699999999561e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.202" endtime="20201030 11:52:04.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.190" endtime="20201030 11:52:04.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.218" endtime="20201030 11:52:04.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.214" endtime="20201030 11:52:04.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.211" endtime="20201030 11:52:04.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.690" endtime="20201030 11:52:04.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.689" endtime="20201030 11:52:04.244"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.268" endtime="20201030 11:52:04.288"></status>
</kw>
<msg timestamp="20201030 11:52:04.289" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.265" endtime="20201030 11:52:04.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.290" endtime="20201030 11:52:04.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.293" endtime="20201030 11:52:04.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.257" endtime="20201030 11:52:04.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.251" endtime="20201030 11:52:04.296"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.304" endtime="20201030 11:52:04.590"></status>
</kw>
<msg timestamp="20201030 11:52:04.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043205222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.302" endtime="20201030 11:52:04.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043149139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043205222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.594" endtime="20201030 11:52:04.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.603" endtime="20201030 11:52:04.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.299" endtime="20201030 11:52:04.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.297" endtime="20201030 11:52:04.607"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:04.612" level="INFO">${RESULT} = [{'diff': 5.608299999999844e-05}, {'diff': 5.690299999999704e-05}, {'diff': 5.6472000000001854e-05}, {'diff': 5.681899999999962e-05}, {'diff': 5.684699999999876e-05}, {'diff': 5.6486000000001424e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:04.607" endtime="20201030 11:52:04.612"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:04.617" level="INFO">${ACCURACY} = {'diff': [5.608299999999844e-05, 5.690299999999704e-05, 5.6472000000001854e-05, 5.681899999999962e-05, 5.684699999999876e-05, 5.6486000000001424e-05, 5.7028000000000634e-05, 5.6194999999995e-05, 5.656...</msg>
<status status="PASS" starttime="20201030 11:52:04.613" endtime="20201030 11:52:04.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.623" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:52:04.621" endtime="20201030 11:52:04.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.625" level="INFO">VALUE: [5.608299999999844e-05, 5.690299999999704e-05, 5.6472000000001854e-05, 5.681899999999962e-05, 5.684699999999876e-05, 5.6486000000001424e-05, 5.7028000000000634e-05, 5.6194999999995e-05, 5.656899999999937e-05, 5.608299999999844e-05, 5.6055999999998773e-05, 5.6500000000000994e-05, 5.638899999999697e-05, 5.633299999999869e-05, 5.6750000000001244e-05, 5.633299999999869e-05, 5.654100000000023e-05, 5.6444000000002714e-05, 5.668100000000287e-05, 5.611100000000452e-05, 5.608299999999844e-05, 5.66670000000033e-05, 5.613899999999672e-05, 5.680500000000005e-05, 5.659699999999851e-05, 5.7013999999994125e-05, 5.6986000000001924e-05, 5.6208000000002034e-05, 5.670900000000201e-05, 5.665299999999679e-05, 5.6222000000001604e-05, 5.654100000000023e-05, 5.6666000000003824e-05, 5.704100000000073e-05, 5.7014000000001064e-05, 5.6541999999999704e-05, 5.6208000000002034e-05, 5.634699999999826e-05, 5.6763999999993875e-05, 5.644500000000219e-05, 5.677700000000091e-05, 5.6222000000001604e-05, 5.6179999999995955e-05, 5.6500000000000994e-05, 5.6444000000002714e-05, 5.651300000000109e-05, 5.666699999999636e-05, 5.6485999999994485e-05, 5.6458000000002284e-05, 5.613899999999672e-05]</msg>
<status status="PASS" starttime="20201030 11:52:04.624" endtime="20201030 11:52:04.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.618" endtime="20201030 11:52:04.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:04.631" endtime="20201030 11:52:04.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.629" endtime="20201030 11:52:04.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.628" endtime="20201030 11:52:04.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.246" endtime="20201030 11:52:04.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.245" endtime="20201030 11:52:04.653"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.664" endtime="20201030 11:52:04.681"></status>
</kw>
<msg timestamp="20201030 11:52:04.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.662" endtime="20201030 11:52:04.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:04.684" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:04.682" endtime="20201030 11:52:04.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.685" endtime="20201030 11:52:04.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.659" endtime="20201030 11:52:04.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.656" endtime="20201030 11:52:04.689"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:04.704" endtime="20201030 11:52:05.065"></status>
</kw>
<msg timestamp="20201030 11:52:05.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:04.700" endtime="20201030 11:52:05.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024830444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.075" endtime="20201030 11:52:05.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.096" endtime="20201030 11:52:05.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.693" endtime="20201030 11:52:05.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.689" endtime="20201030 11:52:05.104"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.115" level="INFO">${RESULT} = [{'diff': 5.766700000000083e-05}, {'diff': 5.738900000000144e-05}, {'diff': 5.712500000000162e-05}, {'diff': 5.731900000000012e-05}, {'diff': 5.786099999999933e-05}, {'diff': 5.7806000000000524e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:05.105" endtime="20201030 11:52:05.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.125" level="INFO">${ACCURACY} = {'diff': [5.766700000000083e-05, 5.738900000000144e-05, 5.712500000000162e-05, 5.731900000000012e-05, 5.786099999999933e-05, 5.7806000000000524e-05, 5.759799999999898e-05, 5.744499999999972e-05, 5.769...</msg>
<status status="PASS" starttime="20201030 11:52:05.117" endtime="20201030 11:52:05.126"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.137" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.134" endtime="20201030 11:52:05.138"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.143" level="INFO">VALUE: [5.766700000000083e-05, 5.738900000000144e-05, 5.712500000000162e-05, 5.731900000000012e-05, 5.786099999999933e-05, 5.7806000000000524e-05, 5.759799999999898e-05, 5.744499999999972e-05, 5.769499999999997e-05, 5.8042000000001204e-05, 5.7528000000001134e-05, 5.740300000000101e-05, 5.716700000000033e-05, 5.8013999999998594e-05, 5.780500000000105e-05, 5.801300000000259e-05, 5.786099999999933e-05, 5.7457999999999815e-05, 5.7708000000000065e-05, 5.7721999999999635e-05, 5.7207999999999565e-05, 5.7319999999999593e-05, 5.788900000000194e-05, 5.7820000000000094e-05, 5.777699999999844e-05, 5.7985999999999455e-05, 5.7985999999999455e-05, 5.779099999999801e-05, 5.795899999999979e-05, 5.7485999999998955e-05, 5.7499999999998525e-05, 5.7999999999999025e-05, 5.7763999999998344e-05, 5.7944000000000745e-05, 5.730499999999708e-05, 5.7721999999999635e-05, 5.715300000000076e-05, 5.712499999999815e-05, 5.7457999999999815e-05, 5.7944000000000745e-05, 5.765300000000126e-05, 5.787500000000237e-05, 5.7569999999999844e-05, 5.7999999999999025e-05, 5.7985999999999455e-05, 5.720899999999904e-05, 5.7764000000001814e-05, 5.7235999999998705e-05, 5.713900000000119e-05, 5.7471999999999385e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.139" endtime="20201030 11:52:05.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.127" endtime="20201030 11:52:05.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.156" endtime="20201030 11:52:05.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.151" endtime="20201030 11:52:05.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.149" endtime="20201030 11:52:05.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.654" endtime="20201030 11:52:05.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:04.653" endtime="20201030 11:52:05.182"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.206" endtime="20201030 11:52:05.229"></status>
</kw>
<msg timestamp="20201030 11:52:05.231" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.203" endtime="20201030 11:52:05.231"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.233" endtime="20201030 11:52:05.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.240" endtime="20201030 11:52:05.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.195" endtime="20201030 11:52:05.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.189" endtime="20201030 11:52:05.247"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.265" endtime="20201030 11:52:05.623"></status>
</kw>
<msg timestamp="20201030 11:52:05.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045145778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.261" endtime="20201030 11:52:05.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.650" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045145778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045204458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.633" endtime="20201030 11:52:05.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.653" endtime="20201030 11:52:05.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.253" endtime="20201030 11:52:05.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.248" endtime="20201030 11:52:05.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:05.671" level="INFO">${RESULT} = [{'diff': 5.8680000000005395e-05}, {'diff': 5.8542000000001704e-05}, {'diff': 5.8221999999996665e-05}, {'diff': 5.880500000000205e-05}, {'diff': 5.90829999999945e-05}, {'diff': 5.8707999999997595e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:05.662" endtime="20201030 11:52:05.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:05.681" level="INFO">${ACCURACY} = {'diff': [5.8680000000005395e-05, 5.8542000000001704e-05, 5.8221999999996665e-05, 5.880500000000205e-05, 5.90829999999945e-05, 5.8707999999997595e-05, 5.8916000000006075e-05, 5.8707999999997595e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:52:05.673" endtime="20201030 11:52:05.682"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.693" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:52:05.690" endtime="20201030 11:52:05.694"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.699" level="INFO">VALUE: [5.8680000000005395e-05, 5.8542000000001704e-05, 5.8221999999996665e-05, 5.880500000000205e-05, 5.90829999999945e-05, 5.8707999999997595e-05, 5.8916000000006075e-05, 5.8707999999997595e-05, 5.815299999999829e-05, 5.8221999999996665e-05, 5.9014000000003064e-05, 5.883300000000119e-05, 5.8791999999995015e-05, 5.891699999999861e-05, 5.8500000000002994e-05, 5.809700000000001e-05, 5.890299999999904e-05, 5.8834000000000664e-05, 5.8222000000003604e-05, 5.8250000000002744e-05, 5.8472000000003854e-05, 5.865299999999879e-05, 5.8929999999998706e-05, 5.8792000000001954e-05, 5.8721999999997165e-05, 5.8556000000001274e-05, 5.891699999999861e-05, 5.9083999999993975e-05, 5.8334000000000163e-05, 5.868099999999793e-05, 5.829100000000198e-05, 5.8665999999998886e-05, 5.8042000000001204e-05, 5.8848000000000233e-05, 5.8443999999997776e-05, 5.856900000000137e-05, 5.833300000000069e-05, 5.8666000000005825e-05, 5.8207999999997095e-05, 5.804100000000173e-05, 5.8486000000003424e-05, 5.8999999999996555e-05, 5.8556000000001274e-05, 5.863899999999922e-05, 5.840299999999854e-05, 5.8820000000001094e-05, 5.812499999999915e-05, 5.836099999999983e-05, 5.894499999999775e-05, 5.8999999999996555e-05]</msg>
<status status="PASS" starttime="20201030 11:52:05.695" endtime="20201030 11:52:05.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.683" endtime="20201030 11:52:05.702"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:05.713" endtime="20201030 11:52:05.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.707" endtime="20201030 11:52:05.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.705" endtime="20201030 11:52:05.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.184" endtime="20201030 11:52:05.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.183" endtime="20201030 11:52:05.739"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.763" endtime="20201030 11:52:05.785"></status>
</kw>
<msg timestamp="20201030 11:52:05.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.760" endtime="20201030 11:52:05.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:05.793" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:05.789" endtime="20201030 11:52:05.794"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.795" endtime="20201030 11:52:05.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.752" endtime="20201030 11:52:05.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.746" endtime="20201030 11:52:05.803"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:05.820" endtime="20201030 11:52:06.178"></status>
</kw>
<msg timestamp="20201030 11:52:06.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043210375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043270139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:05.817" endtime="20201030 11:52:06.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043210375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043270139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.188" endtime="20201030 11:52:06.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.208" endtime="20201030 11:52:06.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.809" endtime="20201030 11:52:06.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.804" endtime="20201030 11:52:06.215"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.226" level="INFO">${RESULT} = [{'diff': 5.9763999999996875e-05}, {'diff': 5.983299999999525e-05}, {'diff': 5.920899999999757e-05}, {'diff': 5.9221999999997665e-05}, {'diff': 5.9556000000002274e-05}, {'diff': 5.934700000000126e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:06.217" endtime="20201030 11:52:06.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.238" level="INFO">${ACCURACY} = {'diff': [5.9763999999996875e-05, 5.983299999999525e-05, 5.920899999999757e-05, 5.9221999999997665e-05, 5.9556000000002274e-05, 5.934700000000126e-05, 5.98750000000009e-05, 5.972299999999764e-05, 6.00...</msg>
<status status="PASS" starttime="20201030 11:52:06.229" endtime="20201030 11:52:06.238"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.249" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.247" endtime="20201030 11:52:06.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.255" level="INFO">VALUE: [5.9763999999996875e-05, 5.983299999999525e-05, 5.920899999999757e-05, 5.9221999999997665e-05, 5.9556000000002274e-05, 5.934700000000126e-05, 5.98750000000009e-05, 5.972299999999764e-05, 6.001299999999765e-05, 5.965299999999979e-05, 5.990199999999363e-05, 5.9916000000000136e-05, 5.911100000000058e-05, 5.905499999999536e-05, 5.9208000000005034e-05, 5.947299999999739e-05, 5.933300000000169e-05, 5.92629999999969e-05, 6.0000000000004494e-05, 5.919500000000494e-05, 6.011100000000158e-05, 5.9597999999994045e-05, 5.9735999999997735e-05, 5.9652000000000316e-05, 5.9457999999998346e-05, 5.984700000000176e-05, 5.936100000000083e-05, 5.961100000000108e-05, 5.9679999999999456e-05, 5.938899999999997e-05, 6.0027999999996695e-05, 5.9070000000001344e-05, 5.9556000000002274e-05, 5.966699999999936e-05, 5.9541999999995765e-05, 5.9236000000004174e-05, 5.920900000000451e-05, 6.0000000000004494e-05, 5.988900000000047e-05, 5.920899999999757e-05, 5.9486000000004424e-05, 5.9138000000000246e-05, 5.9929999999999706e-05, 5.93750000000004e-05, 6.005499999999636e-05, 5.933300000000169e-05, 5.9457999999998346e-05, 5.994500000000569e-05, 5.9235999999997235e-05, 5.938899999999997e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.252" endtime="20201030 11:52:06.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.240" endtime="20201030 11:52:06.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.269" endtime="20201030 11:52:06.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.264" endtime="20201030 11:52:06.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.261" endtime="20201030 11:52:06.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.741" endtime="20201030 11:52:06.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:05.740" endtime="20201030 11:52:06.294"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.318" endtime="20201030 11:52:06.340"></status>
</kw>
<msg timestamp="20201030 11:52:06.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.315" endtime="20201030 11:52:06.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.348" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.344" endtime="20201030 11:52:06.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.350" endtime="20201030 11:52:06.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.307" endtime="20201030 11:52:06.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.301" endtime="20201030 11:52:06.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.375" endtime="20201030 11:52:06.734"></status>
</kw>
<msg timestamp="20201030 11:52:06.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04328225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:06.372" endtime="20201030 11:52:06.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043221569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04328225, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:06.744" endtime="20201030 11:52:06.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.764" endtime="20201030 11:52:06.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.364" endtime="20201030 11:52:06.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.359" endtime="20201030 11:52:06.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.782" level="INFO">${RESULT} = [{'diff': 6.068099999999993e-05}, {'diff': 6.0777999999997445e-05}, {'diff': 6.0194999999999e-05}, {'diff': 6.0999999999998555e-05}, {'diff': 6.0278000000003884e-05}, {'diff': 6.0570000000002844e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:06.773" endtime="20201030 11:52:06.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.794" level="INFO">${ACCURACY} = {'diff': [6.068099999999993e-05, 6.0777999999997445e-05, 6.0194999999999e-05, 6.0999999999998555e-05, 6.0278000000003884e-05, 6.0570000000002844e-05, 6.0319999999995655e-05, 6.1000000000005494e-05, 6....</msg>
<status status="PASS" starttime="20201030 11:52:06.784" endtime="20201030 11:52:06.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.806" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.803" endtime="20201030 11:52:06.807"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.811" level="INFO">VALUE: [6.068099999999993e-05, 6.0777999999997445e-05, 6.0194999999999e-05, 6.0999999999998555e-05, 6.0278000000003884e-05, 6.0570000000002844e-05, 6.0319999999995655e-05, 6.1000000000005494e-05, 6.054100000000423e-05, 6.0499999999998055e-05, 6.033299999999575e-05, 6.0500000000004994e-05, 6.033300000000269e-05, 6.0207999999999096e-05, 6.0193999999999526e-05, 6.094499999999975e-05, 6.011100000000158e-05, 6.093100000000018e-05, 6.101299999999865e-05, 6.034700000000226e-05, 6.068099999999993e-05, 6.079100000000448e-05, 6.0820000000003094e-05, 6.0443999999999776e-05, 6.0485999999998485e-05, 6.006899999999593e-05, 6.0513999999997625e-05, 6.013900000000072e-05, 6.012500000000115e-05, 6.0235999999998235e-05, 6.044499999999925e-05, 6.086099999999539e-05, 6.011100000000158e-05, 6.097300000000583e-05, 6.011100000000158e-05, 6.086100000000233e-05, 6.0443999999999776e-05, 6.0263999999997375e-05, 6.081899999999668e-05, 6.0680000000000456e-05, 6.0388000000001496e-05, 6.033299999999575e-05, 6.054100000000423e-05, 6.0471999999998916e-05, 6.0999999999998555e-05, 6.08750000000019e-05, 6.0707999999999596e-05, 6.081899999999668e-05, 6.09029999999941e-05, 6.0320000000002594e-05]</msg>
<status status="PASS" starttime="20201030 11:52:06.808" endtime="20201030 11:52:06.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.796" endtime="20201030 11:52:06.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.825" endtime="20201030 11:52:06.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.820" endtime="20201030 11:52:06.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.818" endtime="20201030 11:52:06.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.297" endtime="20201030 11:52:06.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.295" endtime="20201030 11:52:06.850"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.875" endtime="20201030 11:52:06.897"></status>
</kw>
<msg timestamp="20201030 11:52:06.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.871" endtime="20201030 11:52:06.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.901" endtime="20201030 11:52:06.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.907" endtime="20201030 11:52:06.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.864" endtime="20201030 11:52:06.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.858" endtime="20201030 11:52:06.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.932" endtime="20201030 11:52:07.293"></status>
</kw>
<msg timestamp="20201030 11:52:07.300" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043580972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043642681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.929" endtime="20201030 11:52:07.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.320" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043580972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043642681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.303" endtime="20201030 11:52:07.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.322" endtime="20201030 11:52:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.921" endtime="20201030 11:52:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.916" endtime="20201030 11:52:07.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.341" level="INFO">${RESULT} = [{'diff': 6.170900000000007e-05}, {'diff': 6.166700000000136e-05}, {'diff': 6.198699999999946e-05}, {'diff': 6.161100000000308e-05}, {'diff': 6.133300000000369e-05}, {'diff': 6.117999999999402e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:07.331" endtime="20201030 11:52:07.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.351" level="INFO">${ACCURACY} = {'diff': [6.170900000000007e-05, 6.166700000000136e-05, 6.198699999999946e-05, 6.161100000000308e-05, 6.133300000000369e-05, 6.117999999999402e-05, 6.122199999999967e-05, 6.126399999999838e-05, 6.1499...</msg>
<status status="PASS" starttime="20201030 11:52:07.343" endtime="20201030 11:52:07.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.362" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.360" endtime="20201030 11:52:07.363"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.368" level="INFO">VALUE: [6.170900000000007e-05, 6.166700000000136e-05, 6.198699999999946e-05, 6.161100000000308e-05, 6.133300000000369e-05, 6.117999999999402e-05, 6.122199999999967e-05, 6.126399999999838e-05, 6.149999999999906e-05, 6.118000000000096e-05, 6.172200000000017e-05, 6.13750000000024e-05, 6.166700000000136e-05, 6.17080000000006e-05, 6.186100000000333e-05, 6.138900000000197e-05, 6.137499999999546e-05, 6.176399999999888e-05, 6.176399999999888e-05, 6.198599999999999e-05, 6.113900000000172e-05, 6.179099999999854e-05, 6.147199999999992e-05, 6.129199999999752e-05, 6.105599999999684e-05, 6.113900000000172e-05, 6.154199999999777e-05, 6.149999999999906e-05, 6.195900000000032e-05, 6.113900000000172e-05, 6.165300000000179e-05, 6.145800000000035e-05, 6.13479999999958e-05, 6.180499999999811e-05, 6.165300000000179e-05, 6.14159999999947e-05, 6.12499999999988e-05, 6.187499999999596e-05, 6.144400000000078e-05, 6.179200000000495e-05, 6.151399999999863e-05, 6.134699999999632e-05, 6.111100000000258e-05, 6.147199999999992e-05, 6.166700000000136e-05, 6.155599999999734e-05, 6.194500000000075e-05, 6.20279999999987e-05, 6.126400000000531e-05, 6.165200000000232e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.365" endtime="20201030 11:52:07.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.353" endtime="20201030 11:52:07.372"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.381" endtime="20201030 11:52:07.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.377" endtime="20201030 11:52:07.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.374" endtime="20201030 11:52:07.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.853" endtime="20201030 11:52:07.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.852" endtime="20201030 11:52:07.407"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.431" endtime="20201030 11:52:07.454"></status>
</kw>
<msg timestamp="20201030 11:52:07.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.428" endtime="20201030 11:52:07.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.462" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.458" endtime="20201030 11:52:07.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.464" endtime="20201030 11:52:07.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.420" endtime="20201030 11:52:07.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.414" endtime="20201030 11:52:07.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.489" endtime="20201030 11:52:07.846"></status>
</kw>
<msg timestamp="20201030 11:52:07.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044792472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044855542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.486" endtime="20201030 11:52:07.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044792472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044855542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.856" endtime="20201030 11:52:07.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.876" endtime="20201030 11:52:07.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.478" endtime="20201030 11:52:07.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.473" endtime="20201030 11:52:07.884"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.895" level="INFO">${RESULT} = [{'diff': 6.30699999999984e-05}, {'diff': 6.22499999999998e-05}, {'diff': 6.244400000000178e-05}, {'diff': 6.302800000000663e-05}, {'diff': 6.276399999999988e-05}, {'diff': 6.277799999999945e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:07.885" endtime="20201030 11:52:07.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.905" level="INFO">${ACCURACY} = {'diff': [6.30699999999984e-05, 6.22499999999998e-05, 6.244400000000178e-05, 6.302800000000663e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.227799999999895e-05, 6.305599999999884e-05, 6.216699...</msg>
<status status="PASS" starttime="20201030 11:52:07.897" endtime="20201030 11:52:07.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.916" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.914" endtime="20201030 11:52:07.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.922" level="INFO">VALUE: [6.30699999999984e-05, 6.22499999999998e-05, 6.244400000000178e-05, 6.302800000000663e-05, 6.276399999999988e-05, 6.277799999999945e-05, 6.227799999999895e-05, 6.305599999999884e-05, 6.216699999999492e-05, 6.304199999999927e-05, 6.216700000000186e-05, 6.222300000000014e-05, 6.211100000000358e-05, 6.266600000000289e-05, 6.243100000000168e-05, 6.280499999999911e-05, 6.24300000000022e-05, 6.30829999999985e-05, 6.283300000000519e-05, 6.211099999999664e-05, 6.227799999999895e-05, 6.212500000000315e-05, 6.247200000000092e-05, 6.26950000000015e-05, 6.266699999999542e-05, 6.298600000000099e-05, 6.265199999999638e-05, 6.22080000000011e-05, 6.259799999999704e-05, 6.286199999999686e-05, 6.229200000000545e-05, 6.29159999999962e-05, 6.233300000000469e-05, 6.213900000000272e-05, 6.227799999999895e-05, 6.272200000000117e-05, 6.212500000000315e-05, 6.212500000000315e-05, 6.298600000000099e-05, 6.259699999999757e-05, 6.28200000000051e-05, 6.291700000000261e-05, 6.284800000000423e-05, 6.211099999999664e-05, 6.272200000000117e-05, 6.288799999999706e-05, 6.255499999999886e-05, 6.218000000000196e-05, 6.267999999999552e-05, 6.209700000000401e-05]</msg>
<status status="PASS" starttime="20201030 11:52:07.919" endtime="20201030 11:52:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.907" endtime="20201030 11:52:07.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.933" endtime="20201030 11:52:07.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.930" endtime="20201030 11:52:07.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.928" endtime="20201030 11:52:07.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.409" endtime="20201030 11:52:07.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.408" endtime="20201030 11:52:07.954"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.965" endtime="20201030 11:52:07.982"></status>
</kw>
<msg timestamp="20201030 11:52:07.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.963" endtime="20201030 11:52:07.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.984" endtime="20201030 11:52:07.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.987" endtime="20201030 11:52:07.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.960" endtime="20201030 11:52:07.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.957" endtime="20201030 11:52:07.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.999" endtime="20201030 11:52:08.348"></status>
</kw>
<msg timestamp="20201030 11:52:08.355" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.997" endtime="20201030 11:52:08.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024825611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024888694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.358" endtime="20201030 11:52:08.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.377" endtime="20201030 11:52:08.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.994" endtime="20201030 11:52:08.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.991" endtime="20201030 11:52:08.385"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.396" level="INFO">${RESULT} = [{'diff': 6.30829999999985e-05}, {'diff': 6.309700000000154e-05}, {'diff': 6.311099999999764e-05}, {'diff': 6.367999999999999e-05}, {'diff': 6.318099999999896e-05}, {'diff': 6.326400000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:08.387" endtime="20201030 11:52:08.396"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.407" level="INFO">${ACCURACY} = {'diff': [6.30829999999985e-05, 6.309700000000154e-05, 6.311099999999764e-05, 6.367999999999999e-05, 6.318099999999896e-05, 6.326400000000038e-05, 6.32219999999982e-05, 6.398599999999852e-05, 6.390300...</msg>
<status status="PASS" starttime="20201030 11:52:08.398" endtime="20201030 11:52:08.408"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.419" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.417" endtime="20201030 11:52:08.420"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.425" level="INFO">VALUE: [6.30829999999985e-05, 6.309700000000154e-05, 6.311099999999764e-05, 6.367999999999999e-05, 6.318099999999896e-05, 6.326400000000038e-05, 6.32219999999982e-05, 6.398599999999852e-05, 6.390300000000057e-05, 6.330599999999909e-05, 6.316699999999939e-05, 6.315200000000035e-05, 6.311100000000111e-05, 6.40699999999994e-05, 6.315299999999982e-05, 6.38479999999983e-05, 6.386199999999786e-05, 6.32219999999982e-05, 6.377800000000045e-05, 6.376400000000088e-05, 6.393000000000024e-05, 6.351399999999716e-05, 6.347199999999845e-05, 6.373600000000174e-05, 6.32500000000008e-05, 6.318100000000243e-05, 6.379200000000002e-05, 6.368099999999946e-05, 6.372200000000217e-05, 6.343099999999921e-05, 6.311200000000058e-05, 6.379200000000002e-05, 6.37630000000014e-05, 6.330599999999909e-05, 6.349999999999759e-05, 6.372200000000217e-05, 6.312500000000068e-05, 6.354199999999977e-05, 6.393099999999971e-05, 6.327799999999995e-05, 6.359699999999857e-05, 6.370799999999913e-05, 6.380599999999959e-05, 6.324999999999734e-05, 6.348600000000149e-05, 6.33890000000005e-05, 6.349999999999759e-05, 6.395800000000285e-05, 6.316599999999992e-05, 6.319399999999906e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.421" endtime="20201030 11:52:08.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.409" endtime="20201030 11:52:08.428"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.438" endtime="20201030 11:52:08.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.433" endtime="20201030 11:52:08.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.431" endtime="20201030 11:52:08.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.955" endtime="20201030 11:52:08.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.955" endtime="20201030 11:52:08.464"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.488" endtime="20201030 11:52:08.510"></status>
</kw>
<msg timestamp="20201030 11:52:08.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.485" endtime="20201030 11:52:08.511"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.517" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.513" endtime="20201030 11:52:08.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.520" endtime="20201030 11:52:08.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.477" endtime="20201030 11:52:08.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.471" endtime="20201030 11:52:08.527"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.545" endtime="20201030 11:52:08.912"></status>
</kw>
<msg timestamp="20201030 11:52:08.920" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043508986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.541" endtime="20201030 11:52:08.920"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043444722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043508986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.922" endtime="20201030 11:52:08.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.942" endtime="20201030 11:52:08.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.533" endtime="20201030 11:52:08.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.529" endtime="20201030 11:52:08.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.960" level="INFO">${RESULT} = [{'diff': 6.426400000000138e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.45280000000012e-05}, {'diff': 6.483300000000025e-05}, {'diff': 6.48479999999993e-05}, {'diff': 6.419499999999606e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:08.951" endtime="20201030 11:52:08.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.976" level="INFO">${ACCURACY} = {'diff': [6.426400000000138e-05, 6.486099999999939e-05, 6.45280000000012e-05, 6.483300000000025e-05, 6.48479999999993e-05, 6.419499999999606e-05, 6.418100000000343e-05, 6.42500000000018e-05, 6.4500000...</msg>
<status status="PASS" starttime="20201030 11:52:08.962" endtime="20201030 11:52:08.977"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.988" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.985" endtime="20201030 11:52:08.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.993" level="INFO">VALUE: [6.426400000000138e-05, 6.486099999999939e-05, 6.45280000000012e-05, 6.483300000000025e-05, 6.48479999999993e-05, 6.419499999999606e-05, 6.418100000000343e-05, 6.42500000000018e-05, 6.450000000000206e-05, 6.484699999999982e-05, 6.422200000000267e-05, 6.477800000000145e-05, 6.454200000000077e-05, 6.423600000000224e-05, 6.498699999999552e-05, 6.47080000000036e-05, 6.423600000000224e-05, 6.436099999999889e-05, 6.500000000000256e-05, 6.473600000000274e-05, 6.487499999999896e-05, 6.412499999999821e-05, 6.436099999999889e-05, 6.509700000000007e-05, 6.447199999999598e-05, 6.466599999999795e-05, 6.493100000000418e-05, 6.459699999999957e-05, 6.426399999999444e-05, 6.472200000000317e-05, 6.445800000000335e-05, 6.445899999999588e-05, 6.422300000000214e-05, 6.433299999999975e-05, 6.47229999999957e-05, 6.476400000000188e-05, 6.470799999999666e-05, 6.483399999999973e-05, 6.477800000000145e-05, 6.445799999999641e-05, 6.411099999999864e-05, 6.456900000000043e-05, 6.413899999999778e-05, 6.426400000000138e-05, 6.450000000000206e-05, 6.494399999999734e-05, 6.416700000000386e-05, 6.495900000000332e-05, 6.470900000000307e-05, 6.43479999999988e-05]</msg>
<status status="PASS" starttime="20201030 11:52:08.990" endtime="20201030 11:52:08.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.978" endtime="20201030 11:52:08.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.007" endtime="20201030 11:52:09.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.002" endtime="20201030 11:52:09.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.999" endtime="20201030 11:52:09.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.466" endtime="20201030 11:52:09.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.465" endtime="20201030 11:52:09.033"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.057" endtime="20201030 11:52:09.078"></status>
</kw>
<msg timestamp="20201030 11:52:09.080" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.053" endtime="20201030 11:52:09.080"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.082" endtime="20201030 11:52:09.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.089" endtime="20201030 11:52:09.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.046" endtime="20201030 11:52:09.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.039" endtime="20201030 11:52:09.096"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.113" endtime="20201030 11:52:09.484"></status>
</kw>
<msg timestamp="20201030 11:52:09.491" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.110" endtime="20201030 11:52:09.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.511" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043534125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043599542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.494" endtime="20201030 11:52:09.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.513" endtime="20201030 11:52:09.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.102" endtime="20201030 11:52:09.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.097" endtime="20201030 11:52:09.521"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.532" level="INFO">${RESULT} = [{'diff': 6.541699999999817e-05}, {'diff': 6.547300000000339e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.605500000000236e-05}, {'diff': 6.604100000000279e-05}, {'diff': 6.580500000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:09.522" endtime="20201030 11:52:09.532"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.542" level="INFO">${ACCURACY} = {'diff': [6.541699999999817e-05, 6.547300000000339e-05, 6.587499999999996e-05, 6.605500000000236e-05, 6.604100000000279e-05, 6.580500000000211e-05, 6.570799999999766e-05, 6.566599999999895e-05, 6.5179...</msg>
<status status="PASS" starttime="20201030 11:52:09.534" endtime="20201030 11:52:09.542"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.553" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.551" endtime="20201030 11:52:09.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.559" level="INFO">VALUE: [6.541699999999817e-05, 6.547300000000339e-05, 6.587499999999996e-05, 6.605500000000236e-05, 6.604100000000279e-05, 6.580500000000211e-05, 6.570799999999766e-05, 6.566599999999895e-05, 6.517999999999802e-05, 6.563899999999928e-05, 6.593099999999824e-05, 6.511099999999964e-05, 6.54029999999986e-05, 6.601299999999671e-05, 6.586199999999987e-05, 6.52359999999963e-05, 6.577699999999603e-05, 6.577699999999603e-05, 6.580500000000211e-05, 6.588899999999953e-05, 6.576400000000288e-05, 6.536099999999989e-05, 6.541699999999817e-05, 6.50700000000004e-05, 6.57359999999968e-05, 6.512499999999921e-05, 6.598600000000399e-05, 6.554199999999483e-05, 6.580500000000211e-05, 6.591699999999867e-05, 6.593099999999824e-05, 6.579199999999508e-05, 6.566699999999842e-05, 6.581900000000168e-05, 6.600000000000356e-05, 6.548599999999655e-05, 6.515300000000529e-05, 6.531899999999424e-05, 6.556900000000143e-05, 6.527800000000195e-05, 6.588899999999953e-05, 6.591699999999867e-05, 6.565300000000579e-05, 6.547300000000339e-05, 6.512499999999921e-05, 6.530500000000161e-05, 6.523600000000324e-05, 6.588899999999953e-05, 6.604099999999585e-05, 6.584700000000082e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.556" endtime="20201030 11:52:09.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.543" endtime="20201030 11:52:09.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.577" endtime="20201030 11:52:09.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.572" endtime="20201030 11:52:09.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.569" endtime="20201030 11:52:09.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.035" endtime="20201030 11:52:09.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.033" endtime="20201030 11:52:09.602"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.627" endtime="20201030 11:52:09.650"></status>
</kw>
<msg timestamp="20201030 11:52:09.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.623" endtime="20201030 11:52:09.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.653" endtime="20201030 11:52:09.658"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.660" endtime="20201030 11:52:09.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.615" endtime="20201030 11:52:09.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.609" endtime="20201030 11:52:09.667"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.685" endtime="20201030 11:52:10.044"></status>
</kw>
<msg timestamp="20201030 11:52:10.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045323222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045390222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.681" endtime="20201030 11:52:10.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045323222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045390222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.054" endtime="20201030 11:52:10.072"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.074" endtime="20201030 11:52:10.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.674" endtime="20201030 11:52:10.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.669" endtime="20201030 11:52:10.081"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.092" level="INFO">${RESULT} = [{'diff': 6.699999999999762e-05}, {'diff': 6.672199999999823e-05}, {'diff': 6.644499999999831e-05}, {'diff': 6.650000000000406e-05}, {'diff': 6.701400000000413e-05}, {'diff': 6.612500000000021e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:10.083" endtime="20201030 11:52:10.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.102" level="INFO">${ACCURACY} = {'diff': [6.699999999999762e-05, 6.672199999999823e-05, 6.644499999999831e-05, 6.650000000000406e-05, 6.701400000000413e-05, 6.612500000000021e-05, 6.650000000000406e-05, 6.698600000000499e-05, 6.6999...</msg>
<status status="PASS" starttime="20201030 11:52:10.094" endtime="20201030 11:52:10.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.114" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.111" endtime="20201030 11:52:10.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.120" level="INFO">VALUE: [6.699999999999762e-05, 6.672199999999823e-05, 6.644499999999831e-05, 6.650000000000406e-05, 6.701400000000413e-05, 6.612500000000021e-05, 6.650000000000406e-05, 6.698600000000499e-05, 6.699999999999762e-05, 6.626399999999644e-05, 6.679200000000302e-05, 6.611100000000064e-05, 6.64029999999996e-05, 6.670799999999866e-05, 6.702799999999676e-05, 6.677799999999651e-05, 6.665299999999985e-05, 6.619399999999859e-05, 6.67500000000043e-05, 6.699999999999762e-05, 6.699999999999762e-05, 6.647299999999745e-05, 6.70280000000037e-05, 6.681900000000268e-05, 6.62500000000038e-05, 6.6583000000002e-05, 6.672199999999823e-05, 6.615199999999988e-05, 6.616599999999945e-05, 6.631900000000218e-05, 6.670900000000507e-05, 6.659700000000157e-05, 6.687500000000096e-05, 6.626400000000338e-05, 6.609800000000055e-05, 6.693099999999924e-05, 6.70559999999959e-05, 6.620899999999763e-05, 6.670899999999813e-05, 6.642999999999927e-05, 6.626399999999644e-05, 6.699999999999762e-05, 6.633300000000175e-05, 6.605499999999542e-05, 6.645799999999841e-05, 6.60830000000015e-05, 6.677799999999651e-05, 6.638900000000003e-05, 6.658399999999454e-05, 6.668100000000593e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.116" endtime="20201030 11:52:10.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.104" endtime="20201030 11:52:10.123"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.134" endtime="20201030 11:52:10.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.128" endtime="20201030 11:52:10.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.126" endtime="20201030 11:52:10.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.605" endtime="20201030 11:52:10.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.603" endtime="20201030 11:52:10.160"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.184" endtime="20201030 11:52:10.206"></status>
</kw>
<msg timestamp="20201030 11:52:10.207" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.181" endtime="20201030 11:52:10.207"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.213" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.209" endtime="20201030 11:52:10.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.216" endtime="20201030 11:52:10.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.173" endtime="20201030 11:52:10.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.167" endtime="20201030 11:52:10.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.241" endtime="20201030 11:52:10.599"></status>
</kw>
<msg timestamp="20201030 11:52:10.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043239083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.237" endtime="20201030 11:52:10.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.626" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043171528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043239083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.609" endtime="20201030 11:52:10.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.628" endtime="20201030 11:52:10.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.229" endtime="20201030 11:52:10.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.224" endtime="20201030 11:52:10.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.647" level="INFO">${RESULT} = [{'diff': 6.755499999999692e-05}, {'diff': 6.727699999999753e-05}, {'diff': 6.750000000000506e-05}, {'diff': 6.804099999999785e-05}, {'diff': 6.734700000000232e-05}, {'diff': 6.756900000000343e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:10.637" endtime="20201030 11:52:10.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.658" level="INFO">${ACCURACY} = {'diff': [6.755499999999692e-05, 6.727699999999753e-05, 6.750000000000506e-05, 6.804099999999785e-05, 6.734700000000232e-05, 6.756900000000343e-05, 6.77500000000053e-05, 6.795899999999938e-05, 6.75560...</msg>
<status status="PASS" starttime="20201030 11:52:10.649" endtime="20201030 11:52:10.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.670" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.667" endtime="20201030 11:52:10.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.676" level="INFO">VALUE: [6.755499999999692e-05, 6.727699999999753e-05, 6.750000000000506e-05, 6.804099999999785e-05, 6.734700000000232e-05, 6.756900000000343e-05, 6.77500000000053e-05, 6.795899999999938e-05, 6.755600000000334e-05, 6.747199999999898e-05, 6.720799999999916e-05, 6.718100000000643e-05, 6.80559999999969e-05, 6.720899999999863e-05, 6.733400000000223e-05, 6.762500000000171e-05, 6.772199999999923e-05, 6.727699999999753e-05, 6.737500000000146e-05, 6.744399999999984e-05, 6.788899999999459e-05, 6.734700000000232e-05, 6.779200000000402e-05, 6.736099999999495e-05, 6.805600000000384e-05, 6.763800000000181e-05, 6.737499999999452e-05, 6.799999999999862e-05, 6.711200000000112e-05, 6.745799999999941e-05, 6.783299999999631e-05, 6.712500000000121e-05, 6.726399999999744e-05, 6.777800000000445e-05, 6.799999999999862e-05, 6.734700000000232e-05, 6.733399999999529e-05, 6.733400000000223e-05, 6.793100000000024e-05, 6.790200000000163e-05, 6.718099999999949e-05, 6.797200000000642e-05, 6.756900000000343e-05, 6.745900000000582e-05, 6.759700000000257e-05, 6.713900000000078e-05, 6.731900000000318e-05, 6.729199999999658e-05, 6.766599999999401e-05, 6.777799999999751e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.672" endtime="20201030 11:52:10.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.660" endtime="20201030 11:52:10.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.689" endtime="20201030 11:52:10.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.684" endtime="20201030 11:52:10.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.681" endtime="20201030 11:52:10.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.162" endtime="20201030 11:52:10.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.161" endtime="20201030 11:52:10.714"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.738" endtime="20201030 11:52:10.760"></status>
</kw>
<msg timestamp="20201030 11:52:10.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.735" endtime="20201030 11:52:10.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.763" endtime="20201030 11:52:10.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.770" endtime="20201030 11:52:10.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.727" endtime="20201030 11:52:10.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.721" endtime="20201030 11:52:10.777"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.795" endtime="20201030 11:52:11.154"></status>
</kw>
<msg timestamp="20201030 11:52:11.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.791" endtime="20201030 11:52:11.162"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.181" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043323292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043391403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.164" endtime="20201030 11:52:11.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.184" endtime="20201030 11:52:11.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.784" endtime="20201030 11:52:11.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.779" endtime="20201030 11:52:11.191"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.202" level="INFO">${RESULT} = [{'diff': 6.811100000000264e-05}, {'diff': 6.833400000000323e-05}, {'diff': 6.824999999999887e-05}, {'diff': 6.826399999999844e-05}, {'diff': 6.811200000000212e-05}, {'diff': 6.869400000000109e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:11.193" endtime="20201030 11:52:11.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.214" level="INFO">${ACCURACY} = {'diff': [6.811100000000264e-05, 6.833400000000323e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.811200000000212e-05, 6.869400000000109e-05, 6.855499999999792e-05, 6.841700000000117e-05, 6.8347...</msg>
<status status="PASS" starttime="20201030 11:52:11.204" endtime="20201030 11:52:11.215"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.226" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.223" endtime="20201030 11:52:11.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.231" level="INFO">VALUE: [6.811100000000264e-05, 6.833400000000323e-05, 6.824999999999887e-05, 6.826399999999844e-05, 6.811200000000212e-05, 6.869400000000109e-05, 6.855499999999792e-05, 6.841700000000117e-05, 6.834700000000332e-05, 6.876400000000588e-05, 6.892999999999483e-05, 6.849999999999912e-05, 6.905600000000484e-05, 6.841700000000117e-05, 6.899999999999962e-05, 6.811199999999518e-05, 6.826400000000538e-05, 6.869400000000109e-05, 6.905500000000536e-05, 6.824999999999887e-05, 6.837499999999552e-05, 6.866699999999448e-05, 6.89439999999944e-05, 6.818000000000102e-05, 6.854199999999783e-05, 6.901399999999919e-05, 6.847199999999998e-05, 6.812500000000221e-05, 6.822199999999973e-05, 6.818100000000049e-05, 6.898600000000005e-05, 6.869400000000109e-05, 6.867999999999458e-05, 6.888799999999612e-05, 6.837499999999552e-05, 6.880500000000511e-05, 6.881900000000468e-05, 6.874999999999937e-05, 6.863900000000228e-05, 6.834699999999638e-05, 6.887499999999602e-05, 6.837500000000246e-05, 6.863900000000228e-05, 6.849999999999912e-05, 6.848699999999902e-05, 6.905600000000484e-05, 6.902799999999876e-05, 6.888800000000306e-05, 6.813900000000178e-05, 6.901399999999919e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.228" endtime="20201030 11:52:11.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.216" endtime="20201030 11:52:11.235"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.245" endtime="20201030 11:52:11.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.240" endtime="20201030 11:52:11.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.238" endtime="20201030 11:52:11.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.717" endtime="20201030 11:52:11.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.715" endtime="20201030 11:52:11.270"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.281" endtime="20201030 11:52:11.300"></status>
</kw>
<msg timestamp="20201030 11:52:11.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.280" endtime="20201030 11:52:11.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.301" endtime="20201030 11:52:11.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.305" endtime="20201030 11:52:11.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.276" endtime="20201030 11:52:11.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.273" endtime="20201030 11:52:11.308"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.316" endtime="20201030 11:52:11.662"></status>
</kw>
<msg timestamp="20201030 11:52:11.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028263083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028332847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.314" endtime="20201030 11:52:11.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.689" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.028263083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.028332847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.672" endtime="20201030 11:52:11.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.692" endtime="20201030 11:52:11.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.311" endtime="20201030 11:52:11.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.309" endtime="20201030 11:52:11.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.710" level="INFO">${RESULT} = [{'diff': 6.976399999999994e-05}, {'diff': 6.987500000000049e-05}, {'diff': 6.922200000000073e-05}, {'diff': 6.913899999999931e-05}, {'diff': 6.933300000000128e-05}, {'diff': 6.924999999999987e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:11.701" endtime="20201030 11:52:11.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.720" level="INFO">${ACCURACY} = {'diff': [6.976399999999994e-05, 6.987500000000049e-05, 6.922200000000073e-05, 6.913899999999931e-05, 6.933300000000128e-05, 6.924999999999987e-05, 6.955600000000187e-05, 6.924999999999987e-05, 6.9819...</msg>
<status status="PASS" starttime="20201030 11:52:11.713" endtime="20201030 11:52:11.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.732" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.729" endtime="20201030 11:52:11.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.738" level="INFO">VALUE: [6.976399999999994e-05, 6.987500000000049e-05, 6.922200000000073e-05, 6.913899999999931e-05, 6.933300000000128e-05, 6.924999999999987e-05, 6.955600000000187e-05, 6.924999999999987e-05, 6.981999999999822e-05, 6.944500000000131e-05, 6.965199999999991e-05, 6.92360000000003e-05, 6.95970000000011e-05, 6.913899999999931e-05, 6.981899999999874e-05, 6.993000000000277e-05, 6.920800000000116e-05, 7.004199999999933e-05, 6.944500000000131e-05, 7.002799999999976e-05, 6.947200000000098e-05, 6.970799999999819e-05, 6.988900000000006e-05, 6.916699999999845e-05, 6.987499999999702e-05, 6.968099999999852e-05, 6.968000000000252e-05, 6.944399999999837e-05, 6.936100000000042e-05, 6.958300000000153e-05, 6.952799999999926e-05, 6.998600000000105e-05, 6.947200000000098e-05, 6.997200000000148e-05, 6.956999999999797e-05, 6.997200000000148e-05, 6.970899999999766e-05, 6.959800000000405e-05, 6.916700000000192e-05, 6.984799999999736e-05, 6.972199999999429e-05, 6.966600000000295e-05, 6.913900000000278e-05, 6.912499999999627e-05, 6.931899999999824e-05, 6.981999999999822e-05, 6.906899999999799e-05, 6.970800000000166e-05, 6.969500000000156e-05, 6.933399999999729e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.734" endtime="20201030 11:52:11.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.722" endtime="20201030 11:52:11.741"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.751" endtime="20201030 11:52:11.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.747" endtime="20201030 11:52:11.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.744" endtime="20201030 11:52:11.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.271" endtime="20201030 11:52:11.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.271" endtime="20201030 11:52:11.777"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.801" endtime="20201030 11:52:11.824"></status>
</kw>
<msg timestamp="20201030 11:52:11.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.797" endtime="20201030 11:52:11.826"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.828" endtime="20201030 11:52:11.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.835" endtime="20201030 11:52:11.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.790" endtime="20201030 11:52:11.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.784" endtime="20201030 11:52:11.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.860" endtime="20201030 11:52:12.220"></status>
</kw>
<msg timestamp="20201030 11:52:12.227" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045077167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045147778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.856" endtime="20201030 11:52:12.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045077167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045147778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.230" endtime="20201030 11:52:12.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.249" endtime="20201030 11:52:12.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.848" endtime="20201030 11:52:12.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.843" endtime="20201030 11:52:12.257"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.268" level="INFO">${RESULT} = [{'diff': 7.06109999999982e-05}, {'diff': 7.101400000000119e-05}, {'diff': 7.093100000000324e-05}, {'diff': 7.097200000000248e-05}, {'diff': 7.05559999999994e-05}, {'diff': 7.100000000000162e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:12.259" endtime="20201030 11:52:12.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.278" level="INFO">${ACCURACY} = {'diff': [7.06109999999982e-05, 7.101400000000119e-05, 7.093100000000324e-05, 7.097200000000248e-05, 7.05559999999994e-05, 7.100000000000162e-05, 7.045800000000241e-05, 7.01109999999977e-05, 7.0222000...</msg>
<status status="PASS" starttime="20201030 11:52:12.270" endtime="20201030 11:52:12.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.289" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.287" endtime="20201030 11:52:12.290"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.295" level="INFO">VALUE: [7.06109999999982e-05, 7.101400000000119e-05, 7.093100000000324e-05, 7.097200000000248e-05, 7.05559999999994e-05, 7.100000000000162e-05, 7.045800000000241e-05, 7.01109999999977e-05, 7.022200000000173e-05, 7.070800000000266e-05, 7.105500000000042e-05, 7.102800000000076e-05, 7.09309999999963e-05, 7.018099999999555e-05, 7.061100000000514e-05, 7.087499999999802e-05, 7.101400000000119e-05, 7.076400000000094e-05, 7.034700000000532e-05, 7.034699999999838e-05, 7.034700000000532e-05, 7.01109999999977e-05, 7.050000000000112e-05, 7.080599999999965e-05, 7.052800000000026e-05, 7.075000000000137e-05, 7.104200000000033e-05, 7.026400000000044e-05, 7.088799999999812e-05, 7.025000000000087e-05, 7.054100000000035e-05, 7.07230000000017e-05, 7.059699999999863e-05, 7.101400000000119e-05, 7.059699999999863e-05, 7.101400000000119e-05, 7.102800000000076e-05, 7.022200000000173e-05, 7.030599999999915e-05, 7.048600000000155e-05, 7.04309999999958e-05, 7.02360000000013e-05, 7.079200000000008e-05, 7.009699999999813e-05, 7.012499999999727e-05, 7.104100000000085e-05, 7.044500000000231e-05, 7.012499999999727e-05, 7.052800000000026e-05, 7.091599999999726e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.292" endtime="20201030 11:52:12.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.280" endtime="20201030 11:52:12.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.311" endtime="20201030 11:52:12.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.304" endtime="20201030 11:52:12.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.301" endtime="20201030 11:52:12.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.779" endtime="20201030 11:52:12.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.778" endtime="20201030 11:52:12.337"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.361" endtime="20201030 11:52:12.383"></status>
</kw>
<msg timestamp="20201030 11:52:12.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.358" endtime="20201030 11:52:12.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.391" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.386" endtime="20201030 11:52:12.391"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.393" endtime="20201030 11:52:12.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.350" endtime="20201030 11:52:12.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.344" endtime="20201030 11:52:12.400"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.418" endtime="20201030 11:52:12.776"></status>
</kw>
<msg timestamp="20201030 11:52:12.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0438905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043962417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:12.415" endtime="20201030 11:52:12.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0438905, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043962417, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:12.786" endtime="20201030 11:52:12.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.806" endtime="20201030 11:52:12.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.407" endtime="20201030 11:52:12.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.402" endtime="20201030 11:52:12.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.824" level="INFO">${RESULT} = [{'diff': 7.191699999999773e-05}, {'diff': 7.168099999999705e-05}, {'diff': 7.166699999999748e-05}, {'diff': 7.122199999999579e-05}, {'diff': 7.145800000000341e-05}, {'diff': 7.115299999999741e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:12.815" endtime="20201030 11:52:12.825"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.836" level="INFO">${ACCURACY} = {'diff': [7.191699999999773e-05, 7.168099999999705e-05, 7.166699999999748e-05, 7.122199999999579e-05, 7.145800000000341e-05, 7.115299999999741e-05, 7.127799999999407e-05, 7.17910000000016e-05, 7.17780...</msg>
<status status="PASS" starttime="20201030 11:52:12.826" endtime="20201030 11:52:12.836"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.847" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.845" endtime="20201030 11:52:12.848"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.853" level="INFO">VALUE: [7.191699999999773e-05, 7.168099999999705e-05, 7.166699999999748e-05, 7.122199999999579e-05, 7.145800000000341e-05, 7.115299999999741e-05, 7.127799999999407e-05, 7.17910000000016e-05, 7.177800000000151e-05, 7.195800000000391e-05, 7.165300000000485e-05, 7.123599999999536e-05, 7.204200000000133e-05, 7.120800000000316e-05, 7.14439999999969e-05, 7.184799999999936e-05, 7.158399999999954e-05, 7.149999999999518e-05, 7.175000000000237e-05, 7.158300000000006e-05, 7.131900000000024e-05, 7.11109999999987e-05, 7.125000000000187e-05, 7.186099999999945e-05, 7.14439999999969e-05, 7.125000000000187e-05, 7.118100000000349e-05, 7.200000000000262e-05, 7.150000000000212e-05, 7.115200000000488e-05, 7.17230000000027e-05, 7.122200000000273e-05, 7.145799999999647e-05, 7.142999999999733e-05, 7.202700000000228e-05, 7.16109999999992e-05, 7.187499999999902e-05, 7.177800000000151e-05, 7.156999999999997e-05, 7.166700000000442e-05, 7.122199999999579e-05, 7.112499999999827e-05, 7.10979999999986e-05, 7.201400000000219e-05, 7.159799999999911e-05, 7.133399999999929e-05, 7.134699999999938e-05, 7.145800000000341e-05, 7.165300000000485e-05, 7.15690000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.850" endtime="20201030 11:52:12.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.837" endtime="20201030 11:52:12.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.866" endtime="20201030 11:52:12.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.862" endtime="20201030 11:52:12.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.859" endtime="20201030 11:52:12.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.339" endtime="20201030 11:52:12.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.338" endtime="20201030 11:52:12.892"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.917" endtime="20201030 11:52:12.939"></status>
</kw>
<msg timestamp="20201030 11:52:12.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.913" endtime="20201030 11:52:12.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.946" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.942" endtime="20201030 11:52:12.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.949" endtime="20201030 11:52:12.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.905" endtime="20201030 11:52:12.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.899" endtime="20201030 11:52:12.956"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.974" endtime="20201030 11:52:13.332"></status>
</kw>
<msg timestamp="20201030 11:52:13.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043523472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043595708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.970" endtime="20201030 11:52:13.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.359" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043523472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043595708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.342" endtime="20201030 11:52:13.360"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.362" endtime="20201030 11:52:13.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.963" endtime="20201030 11:52:13.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.958" endtime="20201030 11:52:13.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.381" level="INFO">${RESULT} = [{'diff': 7.223599999999636e-05}, {'diff': 7.290299999999916e-05}, {'diff': 7.2069000000001e-05}, {'diff': 7.280600000000165e-05}, {'diff': 7.255599999999446e-05}, {'diff': 7.218099999999755e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:13.372" endtime="20201030 11:52:13.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.393" level="INFO">${ACCURACY} = {'diff': [7.223599999999636e-05, 7.290299999999916e-05, 7.2069000000001e-05, 7.280600000000165e-05, 7.255599999999446e-05, 7.218099999999755e-05, 7.266699999999848e-05, 7.293000000000577e-05, 7.304200...</msg>
<status status="PASS" starttime="20201030 11:52:13.383" endtime="20201030 11:52:13.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.405" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.402" endtime="20201030 11:52:13.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.410" level="INFO">VALUE: [7.223599999999636e-05, 7.290299999999916e-05, 7.2069000000001e-05, 7.280600000000165e-05, 7.255599999999446e-05, 7.218099999999755e-05, 7.266699999999848e-05, 7.293000000000577e-05, 7.304200000000233e-05, 7.208300000000056e-05, 7.295799999999797e-05, 7.279099999999566e-05, 7.262499999999977e-05, 7.259700000000063e-05, 7.21109999999997e-05, 7.284700000000088e-05, 7.217999999999808e-05, 7.266699999999848e-05, 7.234699999999344e-05, 7.244500000000431e-05, 7.287500000000002e-05, 7.20560000000009e-05, 7.212499999999927e-05, 7.234700000000038e-05, 7.290299999999916e-05, 7.305500000000242e-05, 7.252800000000226e-05, 7.290299999999916e-05, 7.213899999999884e-05, 7.216599999999851e-05, 7.272200000000423e-05, 7.266699999999848e-05, 7.208300000000056e-05, 7.281900000000174e-05, 7.204199999999439e-05, 7.277800000000251e-05, 7.267999999999858e-05, 7.277800000000251e-05, 7.232000000000072e-05, 7.305599999999496e-05, 7.251400000000269e-05, 7.244400000000484e-05, 7.225000000000287e-05, 7.227799999999507e-05, 7.240299999999866e-05, 7.251399999999575e-05, 7.247200000000398e-05, 7.270799999999772e-05, 7.218099999999755e-05, 7.233300000000081e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.407" endtime="20201030 11:52:13.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.395" endtime="20201030 11:52:13.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.424" endtime="20201030 11:52:13.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.419" endtime="20201030 11:52:13.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.417" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.894" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.893" endtime="20201030 11:52:13.450"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.474" endtime="20201030 11:52:13.496"></status>
</kw>
<msg timestamp="20201030 11:52:13.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.470" endtime="20201030 11:52:13.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.500" endtime="20201030 11:52:13.505"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.506" endtime="20201030 11:52:13.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.463" endtime="20201030 11:52:13.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.457" endtime="20201030 11:52:13.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.531" endtime="20201030 11:52:13.891"></status>
</kw>
<msg timestamp="20201030 11:52:13.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043560958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043634972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.528" endtime="20201030 11:52:13.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.919" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043560958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043634972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.901" endtime="20201030 11:52:13.920"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.921" endtime="20201030 11:52:13.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.520" endtime="20201030 11:52:13.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.515" endtime="20201030 11:52:13.929"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.940" level="INFO">${RESULT} = [{'diff': 7.401400000000419e-05}, {'diff': 7.376400000000394e-05}, {'diff': 7.322199999999779e-05}, {'diff': 7.324999999999693e-05}, {'diff': 7.313899999999984e-05}, {'diff': 7.387499999999408e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:13.930" endtime="20201030 11:52:13.940"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.950" level="INFO">${ACCURACY} = {'diff': [7.401400000000419e-05, 7.376400000000394e-05, 7.322199999999779e-05, 7.324999999999693e-05, 7.313899999999984e-05, 7.387499999999408e-05, 7.332000000000172e-05, 7.340299999999966e-05, 7.3875...</msg>
<status status="PASS" starttime="20201030 11:52:13.942" endtime="20201030 11:52:13.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.961" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.959" endtime="20201030 11:52:13.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.967" level="INFO">VALUE: [7.401400000000419e-05, 7.376400000000394e-05, 7.322199999999779e-05, 7.324999999999693e-05, 7.313899999999984e-05, 7.387499999999408e-05, 7.332000000000172e-05, 7.340299999999966e-05, 7.387500000000102e-05, 7.377700000000403e-05, 7.3763999999997e-05, 7.312500000000027e-05, 7.372199999999829e-05, 7.388900000000059e-05, 7.337500000000052e-05, 7.370799999999872e-05, 7.320799999999822e-05, 7.368099999999905e-05, 7.390200000000069e-05, 7.347200000000498e-05, 7.344499999999837e-05, 7.347300000000445e-05, 7.386200000000093e-05, 7.365299999999991e-05, 7.316699999999898e-05, 7.322199999999779e-05, 7.326400000000344e-05, 7.324999999999693e-05, 7.359700000000163e-05, 7.372199999999829e-05, 7.38189999999958e-05, 7.320799999999822e-05, 7.334700000000138e-05, 7.380500000000317e-05, 7.369499999999862e-05, 7.394499999999887e-05, 7.365299999999991e-05, 7.380499999999623e-05, 7.401300000000471e-05, 7.358300000000206e-05, 7.387500000000102e-05, 7.399999999999768e-05, 7.391600000000026e-05, 7.312500000000027e-05, 7.366699999999948e-05, 7.352800000000326e-05, 7.376400000000394e-05, 7.331999999999478e-05, 7.379200000000308e-05, 7.348600000000455e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.964" endtime="20201030 11:52:13.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.952" endtime="20201030 11:52:13.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.981" endtime="20201030 11:52:14.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.976" endtime="20201030 11:52:14.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.973" endtime="20201030 11:52:14.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.452" endtime="20201030 11:52:14.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.451" endtime="20201030 11:52:14.006"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.031" endtime="20201030 11:52:14.062"></status>
</kw>
<msg timestamp="20201030 11:52:14.063" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.027" endtime="20201030 11:52:14.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.070" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.066" endtime="20201030 11:52:14.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.072" endtime="20201030 11:52:14.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.019" endtime="20201030 11:52:14.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.013" endtime="20201030 11:52:14.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.098" endtime="20201030 11:52:14.458"></status>
</kw>
<msg timestamp="20201030 11:52:14.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052434264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052508486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.094" endtime="20201030 11:52:14.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.052434264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.052508486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.468" endtime="20201030 11:52:14.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.488" endtime="20201030 11:52:14.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.086" endtime="20201030 11:52:14.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.081" endtime="20201030 11:52:14.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.506" level="INFO">${RESULT} = [{'diff': 7.422199999999879e-05}, {'diff': 7.420799999999922e-05}, {'diff': 7.472199999999929e-05}, {'diff': 7.493099999999336e-05}, {'diff': 7.444499999999937e-05}, {'diff': 7.488899999999465e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:14.497" endtime="20201030 11:52:14.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.517" level="INFO">${ACCURACY} = {'diff': [7.422199999999879e-05, 7.420799999999922e-05, 7.472199999999929e-05, 7.493099999999336e-05, 7.444499999999937e-05, 7.488899999999465e-05, 7.438899999999415e-05, 7.43189999999963e-05, 7.44309...</msg>
<status status="PASS" starttime="20201030 11:52:14.509" endtime="20201030 11:52:14.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.528" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.526" endtime="20201030 11:52:14.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.534" level="INFO">VALUE: [7.422199999999879e-05, 7.420799999999922e-05, 7.472199999999929e-05, 7.493099999999336e-05, 7.444499999999937e-05, 7.488899999999465e-05, 7.438899999999415e-05, 7.43189999999963e-05, 7.44309999999998e-05, 7.47910000000046e-05, 7.497199999999954e-05, 7.404099999999691e-05, 7.465300000000091e-05, 7.433300000000281e-05, 7.468000000000058e-05, 7.468100000000005e-05, 7.445899999999894e-05, 7.454199999999689e-05, 7.422200000000573e-05, 7.488900000000159e-05, 7.504199999999739e-05, 7.499999999999868e-05, 7.419399999999965e-05, 7.487499999999508e-05, 7.483300000000331e-05, 7.455499999999698e-05, 7.433300000000281e-05, 7.462500000000177e-05, 7.418099999999955e-05, 7.433300000000281e-05, 7.494499999999987e-05, 7.412500000000127e-05, 7.42639999999975e-05, 7.441700000000023e-05, 7.466700000000048e-05, 7.508300000000356e-05, 7.438900000000109e-05, 7.501399999999825e-05, 7.454199999999689e-05, 7.40969999999952e-05, 7.416699999999998e-05, 7.438900000000109e-05, 7.501399999999825e-05, 7.413900000000084e-05, 7.434699999999544e-05, 7.427800000000401e-05, 7.443000000000033e-05, 7.46519999999945e-05, 7.404099999999691e-05, 7.431900000000324e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.530" endtime="20201030 11:52:14.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.518" endtime="20201030 11:52:14.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.549" endtime="20201030 11:52:14.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.542" endtime="20201030 11:52:14.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.540" endtime="20201030 11:52:14.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.009" endtime="20201030 11:52:14.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.007" endtime="20201030 11:52:14.574"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.598" endtime="20201030 11:52:14.618"></status>
</kw>
<msg timestamp="20201030 11:52:14.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.595" endtime="20201030 11:52:14.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.619" endtime="20201030 11:52:14.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.622" endtime="20201030 11:52:14.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.587" endtime="20201030 11:52:14.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.581" endtime="20201030 11:52:14.626"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.634" endtime="20201030 11:52:14.920"></status>
</kw>
<msg timestamp="20201030 11:52:14.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.632" endtime="20201030 11:52:14.924"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.932" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043133806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043209458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.925" endtime="20201030 11:52:14.932"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.933" endtime="20201030 11:52:14.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.629" endtime="20201030 11:52:14.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.627" endtime="20201030 11:52:14.937"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.942" level="INFO">${RESULT} = [{'diff': 7.565200000000244e-05}, {'diff': 7.569399999999421e-05}, {'diff': 7.592999999999489e-05}, {'diff': 7.52639999999985e-05}, {'diff': 7.532000000000372e-05}, {'diff': 7.573599999999986e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:14.937" endtime="20201030 11:52:14.942"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.947" level="INFO">${ACCURACY} = {'diff': [7.565200000000244e-05, 7.569399999999421e-05, 7.592999999999489e-05, 7.52639999999985e-05, 7.532000000000372e-05, 7.573599999999986e-05, 7.558400000000354e-05, 7.570800000000072e-05, 7.54580...</msg>
<status status="PASS" starttime="20201030 11:52:14.943" endtime="20201030 11:52:14.947"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.952" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.951" endtime="20201030 11:52:14.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.955" level="INFO">VALUE: [7.565200000000244e-05, 7.569399999999421e-05, 7.592999999999489e-05, 7.52639999999985e-05, 7.532000000000372e-05, 7.573599999999986e-05, 7.558400000000354e-05, 7.570800000000072e-05, 7.545800000000047e-05, 7.569500000000062e-05, 7.584799999999642e-05, 7.559800000000311e-05, 7.533299999999687e-05, 7.520800000000022e-05, 7.587500000000302e-05, 7.572200000000029e-05, 7.569500000000062e-05, 7.533299999999687e-05, 7.536100000000295e-05, 7.516699999999404e-05, 7.605599999999796e-05, 7.601399999999925e-05, 7.55839999999966e-05, 7.576299999999953e-05, 7.540199999999525e-05, 7.556899999999755e-05, 7.598600000000011e-05, 7.556899999999755e-05, 7.524999999999893e-05, 7.534699999999644e-05, 7.53890000000021e-05, 7.605599999999796e-05, 7.599999999999968e-05, 7.520800000000022e-05, 7.56389999999954e-05, 7.534799999999592e-05, 7.572200000000029e-05, 7.5763999999999e-05, 7.537500000000252e-05, 7.599999999999968e-05, 7.591600000000226e-05, 7.522200000000673e-05, 7.568000000000158e-05, 7.547200000000004e-05, 7.595900000000044e-05, 7.536099999999601e-05, 7.55839999999966e-05, 7.568100000000105e-05, 7.604199999999839e-05, 7.558400000000354e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.953" endtime="20201030 11:52:14.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.948" endtime="20201030 11:52:14.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.966" endtime="20201030 11:52:14.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.964" endtime="20201030 11:52:14.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.962" endtime="20201030 11:52:14.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.577" endtime="20201030 11:52:14.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.575" endtime="20201030 11:52:14.987"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.998" endtime="20201030 11:52:15.016"></status>
</kw>
<msg timestamp="20201030 11:52:15.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.996" endtime="20201030 11:52:15.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.018" endtime="20201030 11:52:15.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.021" endtime="20201030 11:52:15.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.993" endtime="20201030 11:52:15.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.990" endtime="20201030 11:52:15.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.032" endtime="20201030 11:52:15.370"></status>
</kw>
<msg timestamp="20201030 11:52:15.377" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024739181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.031" endtime="20201030 11:52:15.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.397" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024739181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024815778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.380" endtime="20201030 11:52:15.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.399" endtime="20201030 11:52:15.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.027" endtime="20201030 11:52:15.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.025" endtime="20201030 11:52:15.407"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.418" level="INFO">${RESULT} = [{'diff': 7.659700000000116e-05}, {'diff': 7.672300000000076e-05}, {'diff': 7.684800000000089e-05}, {'diff': 7.619499999999765e-05}, {'diff': 7.611100000000023e-05}, {'diff': 7.679199999999914e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:15.409" endtime="20201030 11:52:15.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.431" level="INFO">${ACCURACY} = {'diff': [7.659700000000116e-05, 7.672300000000076e-05, 7.684800000000089e-05, 7.619499999999765e-05, 7.611100000000023e-05, 7.679199999999914e-05, 7.64440000000019e-05, 7.677799999999957e-05, 7.63609...</msg>
<status status="PASS" starttime="20201030 11:52:15.421" endtime="20201030 11:52:15.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.443" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.440" endtime="20201030 11:52:15.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.449" level="INFO">VALUE: [7.659700000000116e-05, 7.672300000000076e-05, 7.684800000000089e-05, 7.619499999999765e-05, 7.611100000000023e-05, 7.679199999999914e-05, 7.64440000000019e-05, 7.677799999999957e-05, 7.636099999999701e-05, 7.698600000000111e-05, 7.690300000000316e-05, 7.681999999999828e-05, 7.677799999999957e-05, 7.61249999999998e-05, 7.665299999999944e-05, 7.705499999999949e-05, 7.691699999999926e-05, 7.669399999999868e-05, 7.691599999999979e-05, 7.64440000000019e-05, 7.701400000000025e-05, 7.672200000000129e-05, 7.66250000000003e-05, 7.608299999999762e-05, 7.634699999999744e-05, 7.650000000000018e-05, 7.645900000000094e-05, 7.709700000000166e-05, 7.698600000000111e-05, 7.62639999999995e-05, 7.633299999999787e-05, 7.655499999999898e-05, 7.697199999999807e-05, 7.681999999999828e-05, 7.64440000000019e-05, 7.684700000000141e-05, 7.6764e-05, 7.668099999999858e-05, 7.647200000000104e-05, 7.702799999999982e-05, 7.677799999999957e-05, 7.705599999999896e-05, 7.658400000000107e-05, 7.643000000000233e-05, 7.669399999999868e-05, 7.650000000000018e-05, 7.665299999999944e-05, 7.606900000000152e-05, 7.622200000000079e-05, 7.666699999999901e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.445" endtime="20201030 11:52:15.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.433" endtime="20201030 11:52:15.452"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.462" endtime="20201030 11:52:15.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.457" endtime="20201030 11:52:15.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.455" endtime="20201030 11:52:15.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.988" endtime="20201030 11:52:15.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.987" endtime="20201030 11:52:15.488"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.512" endtime="20201030 11:52:15.534"></status>
</kw>
<msg timestamp="20201030 11:52:15.536" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.509" endtime="20201030 11:52:15.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.538" endtime="20201030 11:52:15.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.545" endtime="20201030 11:52:15.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.501" endtime="20201030 11:52:15.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.494" endtime="20201030 11:52:15.552"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.570" endtime="20201030 11:52:15.932"></status>
</kw>
<msg timestamp="20201030 11:52:15.940" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043556875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043634458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.566" endtime="20201030 11:52:15.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043556875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043634458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.942" endtime="20201030 11:52:15.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.962" endtime="20201030 11:52:15.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.559" endtime="20201030 11:52:15.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.553" endtime="20201030 11:52:15.970"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.981" level="INFO">${RESULT} = [{'diff': 7.758299999999912e-05}, {'diff': 7.745799999999553e-05}, {'diff': 7.768099999999611e-05}, {'diff': 7.719500000000212e-05}, {'diff': 7.779200000000014e-05}, {'diff': 7.725000000000093e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:15.971" endtime="20201030 11:52:15.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.990" level="INFO">${ACCURACY} = {'diff': [7.758299999999912e-05, 7.745799999999553e-05, 7.768099999999611e-05, 7.719500000000212e-05, 7.779200000000014e-05, 7.725000000000093e-05, 7.72640000000005e-05, 7.75839999999986e-05, 7.779200...</msg>
<status status="PASS" starttime="20201030 11:52:15.983" endtime="20201030 11:52:15.991"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.002" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.000" endtime="20201030 11:52:16.003"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.008" level="INFO">VALUE: [7.758299999999912e-05, 7.745799999999553e-05, 7.768099999999611e-05, 7.719500000000212e-05, 7.779200000000014e-05, 7.725000000000093e-05, 7.72640000000005e-05, 7.75839999999986e-05, 7.779200000000014e-05, 7.773600000000186e-05, 7.800000000000168e-05, 7.741600000000376e-05, 7.768000000000358e-05, 7.801400000000125e-05, 7.802800000000082e-05, 7.734699999999844e-05, 7.793099999999636e-05, 7.766700000000348e-05, 7.766700000000348e-05, 7.740299999999672e-05, 7.744499999999543e-05, 7.786099999999851e-05, 7.73189999999993e-05, 7.761099999999826e-05, 7.783299999999937e-05, 7.805500000000049e-05, 7.801400000000125e-05, 7.766700000000348e-05, 7.74440000000029e-05, 7.733400000000529e-05, 7.743099999999586e-05, 7.744499999999543e-05, 7.765300000000391e-05, 7.707000000000547e-05, 7.720900000000169e-05, 7.7151999999997e-05, 7.767999999999664e-05, 7.727800000000007e-05, 7.804200000000039e-05, 7.786099999999851e-05, 7.79719999999956e-05, 7.78890000000046e-05, 7.738899999999715e-05, 7.805599999999996e-05, 7.725000000000093e-05, 7.751400000000075e-05, 7.800000000000168e-05, 7.747300000000151e-05, 7.730499999999974e-05, 7.723600000000136e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.005" endtime="20201030 11:52:16.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.992" endtime="20201030 11:52:16.011"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.021" endtime="20201030 11:52:16.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.017" endtime="20201030 11:52:16.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.014" endtime="20201030 11:52:16.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.490" endtime="20201030 11:52:16.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.489" endtime="20201030 11:52:16.047"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.071" endtime="20201030 11:52:16.096"></status>
</kw>
<msg timestamp="20201030 11:52:16.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.068" endtime="20201030 11:52:16.097"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.103" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.099" endtime="20201030 11:52:16.104"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.106" endtime="20201030 11:52:16.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.060" endtime="20201030 11:52:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.054" endtime="20201030 11:52:16.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.131" endtime="20201030 11:52:16.490"></status>
</kw>
<msg timestamp="20201030 11:52:16.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045150111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045229097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.127" endtime="20201030 11:52:16.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045150111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045229097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.500" endtime="20201030 11:52:16.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.520" endtime="20201030 11:52:16.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.119" endtime="20201030 11:52:16.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.114" endtime="20201030 11:52:16.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.538" level="INFO">${RESULT} = [{'diff': 7.898600000000311e-05}, {'diff': 7.901400000000225e-05}, {'diff': 7.820799999999628e-05}, {'diff': 7.865300000000491e-05}, {'diff': 7.88190000000008e-05}, {'diff': 7.815300000000441e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:16.529" endtime="20201030 11:52:16.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.548" level="INFO">${ACCURACY} = {'diff': [7.898600000000311e-05, 7.901400000000225e-05, 7.820799999999628e-05, 7.865300000000491e-05, 7.88190000000008e-05, 7.815300000000441e-05, 7.865299999999797e-05, 7.820799999999628e-05, 7.87220...</msg>
<status status="PASS" starttime="20201030 11:52:16.540" endtime="20201030 11:52:16.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.560" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.557" endtime="20201030 11:52:16.561"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.566" level="INFO">VALUE: [7.898600000000311e-05, 7.901400000000225e-05, 7.820799999999628e-05, 7.865300000000491e-05, 7.88190000000008e-05, 7.815300000000441e-05, 7.865299999999797e-05, 7.820799999999628e-05, 7.872200000000329e-05, 7.883299999999344e-05, 7.85839999999996e-05, 7.900000000000268e-05, 7.869499999999668e-05, 7.893099999999736e-05, 7.884699999999994e-05, 7.879099999999473e-05, 7.836100000000595e-05, 7.811099999999876e-05, 7.898599999999617e-05, 7.873600000000286e-05, 7.812499999999833e-05, 7.888899999999865e-05, 7.844500000000337e-05, 7.812500000000527e-05, 7.842999999999739e-05, 7.879200000000114e-05, 7.859799999999917e-05, 7.820900000000269e-05, 7.900000000000268e-05, 7.83190000000003e-05, 7.834699999999944e-05, 7.845799999999653e-05, 7.8764000000002e-05, 7.847200000000304e-05, 7.823599999999542e-05, 7.834699999999944e-05, 7.845900000000294e-05, 7.897299999999607e-05, 7.87770000000021e-05, 7.862499999999883e-05, 7.898599999999617e-05, 7.822200000000279e-05, 7.833299999999987e-05, 7.81389999999979e-05, 7.833299999999987e-05, 7.872200000000329e-05, 7.883300000000037e-05, 7.848599999999567e-05, 7.870799999999678e-05, 7.880600000000071e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.562" endtime="20201030 11:52:16.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.550" endtime="20201030 11:52:16.569"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.581" endtime="20201030 11:52:16.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.574" endtime="20201030 11:52:16.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.572" endtime="20201030 11:52:16.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.049" endtime="20201030 11:52:16.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.048" endtime="20201030 11:52:16.607"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.631" endtime="20201030 11:52:16.653"></status>
</kw>
<msg timestamp="20201030 11:52:16.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.627" endtime="20201030 11:52:16.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.656" endtime="20201030 11:52:16.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.663" endtime="20201030 11:52:16.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.620" endtime="20201030 11:52:16.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.613" endtime="20201030 11:52:16.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.688" endtime="20201030 11:52:17.045"></status>
</kw>
<msg timestamp="20201030 11:52:17.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043331653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.684" endtime="20201030 11:52:17.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.073" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043331653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043411403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.055" endtime="20201030 11:52:17.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.075" endtime="20201030 11:52:17.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.677" endtime="20201030 11:52:17.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.672" endtime="20201030 11:52:17.083"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.094" level="INFO">${RESULT} = [{'diff': 7.975000000000343e-05}, {'diff': 7.92640000000025e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.951400000000275e-05}, {'diff': 7.926300000000303e-05}, {'diff': 7.9764000000003e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:17.084" endtime="20201030 11:52:17.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.105" level="INFO">${ACCURACY} = {'diff': [7.975000000000343e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.951400000000275e-05, 7.926300000000303e-05, 7.9764000000003e-05, 7.94440000000049e-05, 7.927800000000207e-05, 7.94859999...</msg>
<status status="PASS" starttime="20201030 11:52:17.096" endtime="20201030 11:52:17.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.117" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.114" endtime="20201030 11:52:17.118"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.123" level="INFO">VALUE: [7.975000000000343e-05, 7.92640000000025e-05, 7.911099999999976e-05, 7.951400000000275e-05, 7.926300000000303e-05, 7.9764000000003e-05, 7.94440000000049e-05, 7.927800000000207e-05, 7.948599999999667e-05, 7.90970000000002e-05, 7.961100000000026e-05, 7.979200000000214e-05, 7.944499999999743e-05, 7.970899999999725e-05, 8.004199999999545e-05, 7.961100000000026e-05, 7.954199999999495e-05, 7.979200000000214e-05, 7.936100000000001e-05, 7.961100000000026e-05, 7.931899999999437e-05, 7.954200000000189e-05, 7.968099999999811e-05, 7.920800000000422e-05, 7.912499999999933e-05, 7.988899999999965e-05, 7.952799999999538e-05, 7.983400000000085e-05, 8.006900000000206e-05, 7.933300000000088e-05, 7.991599999999932e-05, 7.998600000000411e-05, 7.947200000000404e-05, 7.934700000000044e-05, 7.969399999999821e-05, 7.95840000000006e-05, 7.984700000000094e-05, 7.979200000000214e-05, 7.973600000000386e-05, 7.988899999999965e-05, 7.909799999999967e-05, 7.994399999999846e-05, 7.970900000000419e-05, 7.936100000000001e-05, 8.002700000000335e-05, 7.912499999999933e-05, 8.005499999999555e-05, 7.922199999999685e-05, 7.925000000000293e-05, 7.98890000000066e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.119" endtime="20201030 11:52:17.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.107" endtime="20201030 11:52:17.126"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.136" endtime="20201030 11:52:17.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.131" endtime="20201030 11:52:17.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.129" endtime="20201030 11:52:17.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.609" endtime="20201030 11:52:17.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.608" endtime="20201030 11:52:17.162"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.186" endtime="20201030 11:52:17.208"></status>
</kw>
<msg timestamp="20201030 11:52:17.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.182" endtime="20201030 11:52:17.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.216" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.212" endtime="20201030 11:52:17.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.219" endtime="20201030 11:52:17.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.175" endtime="20201030 11:52:17.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.169" endtime="20201030 11:52:17.226"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.244" endtime="20201030 11:52:17.601"></status>
</kw>
<msg timestamp="20201030 11:52:17.609" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043193208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.240" endtime="20201030 11:52:17.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.628" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043193208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043273861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.611" endtime="20201030 11:52:17.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.631" endtime="20201030 11:52:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.232" endtime="20201030 11:52:17.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.227" endtime="20201030 11:52:17.639"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.649" level="INFO">${RESULT} = [{'diff': 8.065299999999997e-05}, {'diff': 8.059699999999476e-05}, {'diff': 8.049999999999724e-05}, {'diff': 8.08049999999963e-05}, {'diff': 8.077799999999663e-05}, {'diff': 8.011099999999383e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:17.640" endtime="20201030 11:52:17.650"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.661" level="INFO">${ACCURACY} = {'diff': [8.065299999999997e-05, 8.059699999999476e-05, 8.049999999999724e-05, 8.08049999999963e-05, 8.077799999999663e-05, 8.011099999999383e-05, 8.086099999999458e-05, 8.052800000000332e-05, 8.07769...</msg>
<status status="PASS" starttime="20201030 11:52:17.652" endtime="20201030 11:52:17.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.673" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.671" endtime="20201030 11:52:17.674"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.679" level="INFO">VALUE: [8.065299999999997e-05, 8.059699999999476e-05, 8.049999999999724e-05, 8.08049999999963e-05, 8.077799999999663e-05, 8.011099999999383e-05, 8.086099999999458e-05, 8.052800000000332e-05, 8.077699999999716e-05, 8.045799999999853e-05, 8.012500000000033e-05, 8.084700000000195e-05, 8.10840000000021e-05, 8.083300000000238e-05, 8.044399999999896e-05, 8.037500000000058e-05, 8.104200000000339e-05, 8.032000000000178e-05, 8.087500000000108e-05, 8.0152e-05, 8.045900000000494e-05, 8.016699999999904e-05, 8.041599999999982e-05, 8.013800000000043e-05, 8.023599999999742e-05, 8.066600000000007e-05, 8.066699999999954e-05, 8.034700000000145e-05, 8.066699999999954e-05, 8.054200000000289e-05, 8.026399999999656e-05, 8.088900000000065e-05, 8.080600000000271e-05, 8.049999999999724e-05, 8.101400000000425e-05, 8.01389999999999e-05, 8.05970000000017e-05, 8.03190000000023e-05, 8.066600000000007e-05, 8.023600000000436e-05, 8.065299999999997e-05, 8.068099999999911e-05, 8.077800000000357e-05, 8.007000000000153e-05, 8.098699999999764e-05, 8.01389999999999e-05, 8.0458999999998e-05, 8.018100000000555e-05, 8.084700000000195e-05, 8.101399999999731e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.675" endtime="20201030 11:52:17.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.663" endtime="20201030 11:52:17.682"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.692" endtime="20201030 11:52:17.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.688" endtime="20201030 11:52:17.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.685" endtime="20201030 11:52:17.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.164" endtime="20201030 11:52:17.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.163" endtime="20201030 11:52:17.718"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.742" endtime="20201030 11:52:17.764"></status>
</kw>
<msg timestamp="20201030 11:52:17.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.738" endtime="20201030 11:52:17.766"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.768" endtime="20201030 11:52:17.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.774" endtime="20201030 11:52:17.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.731" endtime="20201030 11:52:17.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.724" endtime="20201030 11:52:17.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.799" endtime="20201030 11:52:18.159"></status>
</kw>
<msg timestamp="20201030 11:52:18.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043317458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.796" endtime="20201030 11:52:18.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043317458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.169" endtime="20201030 11:52:18.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.189" endtime="20201030 11:52:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.788" endtime="20201030 11:52:18.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.783" endtime="20201030 11:52:18.197"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.207" level="INFO">${RESULT} = [{'diff': 8.1152000000001e-05}, {'diff': 8.18049999999973e-05}, {'diff': 8.168000000000064e-05}, {'diff': 8.170799999999978e-05}, {'diff': 8.168100000000011e-05}, {'diff': 8.172199999999935e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:18.198" endtime="20201030 11:52:18.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.218" level="INFO">${ACCURACY} = {'diff': [8.1152000000001e-05, 8.18049999999973e-05, 8.168000000000064e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.172199999999935e-05, 8.161100000000227e-05, 8.112500000000133e-05, 8.1653000...</msg>
<status status="PASS" starttime="20201030 11:52:18.210" endtime="20201030 11:52:18.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.229" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.227" endtime="20201030 11:52:18.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.235" level="INFO">VALUE: [8.1152000000001e-05, 8.18049999999973e-05, 8.168000000000064e-05, 8.170799999999978e-05, 8.168100000000011e-05, 8.172199999999935e-05, 8.161100000000227e-05, 8.112500000000133e-05, 8.165300000000097e-05, 8.188799999999524e-05, 8.202799999999788e-05, 8.138900000000115e-05, 8.172199999999935e-05, 8.118000000000014e-05, 8.152799999999738e-05, 8.188900000000165e-05, 8.148599999999867e-05, 8.109699999999526e-05, 8.202800000000482e-05, 8.173599999999892e-05, 8.126399999999756e-05, 8.126399999999756e-05, 8.198599999999917e-05, 8.148599999999867e-05, 8.16520000000015e-05, 8.136100000000202e-05, 8.168000000000064e-05, 8.106899999999612e-05, 8.124999999999799e-05, 8.111099999999483e-05, 8.122199999999885e-05, 8.169499999999968e-05, 8.187500000000208e-05, 8.170899999999925e-05, 8.179099999999773e-05, 8.143099999999986e-05, 8.149999999999824e-05, 8.124999999999799e-05, 8.120799999999928e-05, 8.129200000000364e-05, 8.133300000000288e-05, 8.145799999999953e-05, 8.111100000000177e-05, 8.112500000000133e-05, 8.182000000000328e-05, 8.172199999999935e-05, 8.111100000000177e-05, 8.190300000000122e-05, 8.111099999999483e-05, 8.13049999999968e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.232" endtime="20201030 11:52:18.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.219" endtime="20201030 11:52:18.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.248" endtime="20201030 11:52:18.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.243" endtime="20201030 11:52:18.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.241" endtime="20201030 11:52:18.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.720" endtime="20201030 11:52:18.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.719" endtime="20201030 11:52:18.274"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.298" endtime="20201030 11:52:18.322"></status>
</kw>
<msg timestamp="20201030 11:52:18.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.294" endtime="20201030 11:52:18.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.325" endtime="20201030 11:52:18.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.332" endtime="20201030 11:52:18.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.287" endtime="20201030 11:52:18.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.281" endtime="20201030 11:52:18.339"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.355" endtime="20201030 11:52:18.690"></status>
</kw>
<msg timestamp="20201030 11:52:18.698" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044974125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.353" endtime="20201030 11:52:18.698"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044891736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044974125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.700" endtime="20201030 11:52:18.718"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.720" endtime="20201030 11:52:18.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.346" endtime="20201030 11:52:18.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.341" endtime="20201030 11:52:18.727"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.738" level="INFO">${RESULT} = [{'diff': 8.238899999999522e-05}, {'diff': 8.284700000000395e-05}, {'diff': 8.27919999999982e-05}, {'diff': 8.283400000000385e-05}, {'diff': 8.249999999999924e-05}, {'diff': 8.293099999999443e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:18.729" endtime="20201030 11:52:18.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.748" level="INFO">${ACCURACY} = {'diff': [8.238899999999522e-05, 8.284700000000395e-05, 8.27919999999982e-05, 8.283400000000385e-05, 8.249999999999924e-05, 8.293099999999443e-05, 8.279099999999873e-05, 8.223599999999942e-05, 8.23189...</msg>
<status status="PASS" starttime="20201030 11:52:18.740" endtime="20201030 11:52:18.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.760" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.757" endtime="20201030 11:52:18.760"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.765" level="INFO">VALUE: [8.238899999999522e-05, 8.284700000000395e-05, 8.27919999999982e-05, 8.283400000000385e-05, 8.249999999999924e-05, 8.293099999999443e-05, 8.279099999999873e-05, 8.223599999999942e-05, 8.231899999999737e-05, 8.286100000000352e-05, 8.255599999999752e-05, 8.223599999999942e-05, 8.218100000000061e-05, 8.233399999999641e-05, 8.24170000000013e-05, 8.234800000000292e-05, 8.249999999999924e-05, 8.238899999999522e-05, 8.227699999999866e-05, 8.266599999999513e-05, 8.245800000000053e-05, 8.256899999999762e-05, 8.24720000000001e-05, 8.244500000000043e-05, 8.301399999999931e-05, 8.293100000000136e-05, 8.224999999999899e-05, 8.277799999999863e-05, 8.252699999999891e-05, 8.272299999999982e-05, 8.245800000000053e-05, 8.266700000000154e-05, 8.212500000000234e-05, 8.268000000000164e-05, 8.305499999999855e-05, 8.249999999999924e-05, 8.223599999999942e-05, 8.21390000000019e-05, 8.287500000000309e-05, 8.233299999999694e-05, 8.211099999999583e-05, 8.306899999999812e-05, 8.254200000000489e-05, 8.255499999999805e-05, 8.279099999999873e-05, 8.27919999999982e-05, 8.222199999999985e-05, 8.218099999999368e-05, 8.22090000000067e-05, 8.251399999999881e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.762" endtime="20201030 11:52:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.750" endtime="20201030 11:52:18.769"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.781" endtime="20201030 11:52:18.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.774" endtime="20201030 11:52:18.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.772" endtime="20201030 11:52:18.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.276" endtime="20201030 11:52:18.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.275" endtime="20201030 11:52:18.806"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.830" endtime="20201030 11:52:18.853"></status>
</kw>
<msg timestamp="20201030 11:52:18.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.827" endtime="20201030 11:52:18.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.857" endtime="20201030 11:52:18.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.863" endtime="20201030 11:52:18.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.819" endtime="20201030 11:52:18.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.813" endtime="20201030 11:52:18.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.888" endtime="20201030 11:52:19.247"></status>
</kw>
<msg timestamp="20201030 11:52:19.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043335667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04341875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:18.885" endtime="20201030 11:52:19.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043335667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04341875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:19.257" endtime="20201030 11:52:19.275"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.277" endtime="20201030 11:52:19.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.877" endtime="20201030 11:52:19.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.872" endtime="20201030 11:52:19.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.296" level="INFO">${RESULT} = [{'diff': 8.308299999999769e-05}, {'diff': 8.333399999999741e-05}, {'diff': 8.366700000000254e-05}, {'diff': 8.311099999999683e-05}, {'diff': 8.306999999999759e-05}, {'diff': 8.383399999999791e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:19.286" endtime="20201030 11:52:19.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.312" level="INFO">${ACCURACY} = {'diff': [8.308299999999769e-05, 8.333399999999741e-05, 8.366700000000254e-05, 8.311099999999683e-05, 8.306999999999759e-05, 8.383399999999791e-05, 8.319500000000118e-05, 8.401400000000031e-05, 8.3208...</msg>
<status status="PASS" starttime="20201030 11:52:19.298" endtime="20201030 11:52:19.312"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.323" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.321" endtime="20201030 11:52:19.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.329" level="INFO">VALUE: [8.308299999999769e-05, 8.333399999999741e-05, 8.366700000000254e-05, 8.311099999999683e-05, 8.306999999999759e-05, 8.383399999999791e-05, 8.319500000000118e-05, 8.401400000000031e-05, 8.320800000000128e-05, 8.318000000000214e-05, 8.35970000000047e-05, 8.350000000000024e-05, 8.373600000000092e-05, 8.312500000000334e-05, 8.369500000000168e-05, 8.315300000000247e-05, 8.401300000000084e-05, 8.340300000000272e-05, 8.405599999999902e-05, 8.377799999999963e-05, 8.351399999999981e-05, 8.372200000000135e-05, 8.401400000000031e-05, 8.338899999999622e-05, 8.386099999999758e-05, 8.36669999999956e-05, 8.355599999999852e-05, 8.308299999999769e-05, 8.369499999999475e-05, 8.398599999999423e-05, 8.401400000000031e-05, 8.306999999999759e-05, 8.316600000000257e-05, 8.350000000000024e-05, 8.36799999999957e-05, 8.38049999999993e-05, 8.377799999999963e-05, 8.36669999999956e-05, 8.330599999999827e-05, 8.406999999999859e-05, 8.387499999999715e-05, 8.36249999999969e-05, 8.388900000000366e-05, 8.368000000000264e-05, 8.375000000000049e-05, 8.311099999999683e-05, 8.361099999999733e-05, 8.351399999999981e-05, 8.401400000000031e-05, 8.332000000000478e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.326" endtime="20201030 11:52:19.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.313" endtime="20201030 11:52:19.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.342" endtime="20201030 11:52:19.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.338" endtime="20201030 11:52:19.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.335" endtime="20201030 11:52:19.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.809" endtime="20201030 11:52:19.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.807" endtime="20201030 11:52:19.368"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.392" endtime="20201030 11:52:19.414"></status>
</kw>
<msg timestamp="20201030 11:52:19.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.388" endtime="20201030 11:52:19.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.417" endtime="20201030 11:52:19.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.424" endtime="20201030 11:52:19.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.381" endtime="20201030 11:52:19.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.375" endtime="20201030 11:52:19.431"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.449" endtime="20201030 11:52:19.807"></status>
</kw>
<msg timestamp="20201030 11:52:19.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043128708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.445" endtime="20201030 11:52:19.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043044153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043128708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.817" endtime="20201030 11:52:19.835"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.837" endtime="20201030 11:52:19.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.438" endtime="20201030 11:52:19.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.433" endtime="20201030 11:52:19.844"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.855" level="INFO">${RESULT} = [{'diff': 8.455500000000005e-05}, {'diff': 8.436099999999808e-05}, {'diff': 8.477800000000063e-05}, {'diff': 8.468100000000311e-05}, {'diff': 8.413899999999697e-05}, {'diff': 8.468100000000311e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:19.845" endtime="20201030 11:52:19.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.867" level="INFO">${ACCURACY} = {'diff': [8.455500000000005e-05, 8.436099999999808e-05, 8.477800000000063e-05, 8.468100000000311e-05, 8.413899999999697e-05, 8.468100000000311e-05, 8.42919999999997e-05, 8.454100000000048e-05, 8.45979...</msg>
<status status="PASS" starttime="20201030 11:52:19.857" endtime="20201030 11:52:19.867"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.878" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.876" endtime="20201030 11:52:19.879"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.884" level="INFO">VALUE: [8.455500000000005e-05, 8.436099999999808e-05, 8.477800000000063e-05, 8.468100000000311e-05, 8.413899999999697e-05, 8.468100000000311e-05, 8.42919999999997e-05, 8.454100000000048e-05, 8.459799999999823e-05, 8.458299999999919e-05, 8.473600000000192e-05, 8.500000000000174e-05, 8.443099999999593e-05, 8.418100000000261e-05, 8.497199999999566e-05, 8.491699999999686e-05, 8.412500000000434e-05, 8.459699999999876e-05, 8.486099999999858e-05, 8.48050000000003e-05, 8.444500000000243e-05, 8.416700000000304e-05, 8.438800000000468e-05, 8.48050000000003e-05, 8.466599999999713e-05, 8.476400000000106e-05, 8.437500000000459e-05, 8.434800000000492e-05, 8.473599999999498e-05, 8.420799999999534e-05, 8.429200000000664e-05, 8.484799999999848e-05, 8.500000000000174e-05, 8.438899999999722e-05, 8.4846999999999e-05, 8.425000000000099e-05, 8.433299999999894e-05, 8.480599999999977e-05, 8.501400000000131e-05, 8.423600000000142e-05, 8.433299999999894e-05, 8.472199999999541e-05, 8.436099999999808e-05, 8.488799999999824e-05, 8.472299999999489e-05, 8.486099999999858e-05, 8.476400000000106e-05, 8.455500000000005e-05, 8.447199999999516e-05, 8.433299999999894e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.881" endtime="20201030 11:52:19.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.869" endtime="20201030 11:52:19.888"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.897" endtime="20201030 11:52:19.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.893" endtime="20201030 11:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.890" endtime="20201030 11:52:19.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.370" endtime="20201030 11:52:19.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.369" endtime="20201030 11:52:19.923"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.947" endtime="20201030 11:52:19.969"></status>
</kw>
<msg timestamp="20201030 11:52:19.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.944" endtime="20201030 11:52:19.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.973" endtime="20201030 11:52:19.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.980" endtime="20201030 11:52:19.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.936" endtime="20201030 11:52:19.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.930" endtime="20201030 11:52:19.987"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.005" endtime="20201030 11:52:20.367"></status>
</kw>
<msg timestamp="20201030 11:52:20.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.001" endtime="20201030 11:52:20.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043485333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.377" endtime="20201030 11:52:20.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.396" endtime="20201030 11:52:20.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.993" endtime="20201030 11:52:20.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.988" endtime="20201030 11:52:20.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.414" level="INFO">${RESULT} = [{'diff': 8.588899999999872e-05}, {'diff': 8.591699999999786e-05}, {'diff': 8.587499999999915e-05}, {'diff': 8.547300000000257e-05}, {'diff': 8.551300000000234e-05}, {'diff': 8.52370000000019e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:20.405" endtime="20201030 11:52:20.415"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.424" level="INFO">${ACCURACY} = {'diff': [8.588899999999872e-05, 8.591699999999786e-05, 8.587499999999915e-05, 8.547300000000257e-05, 8.551300000000234e-05, 8.52370000000019e-05, 8.583300000000044e-05, 8.509699999999926e-05, 8.56939...</msg>
<status status="PASS" starttime="20201030 11:52:20.417" endtime="20201030 11:52:20.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.436" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.434" endtime="20201030 11:52:20.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.442" level="INFO">VALUE: [8.588899999999872e-05, 8.591699999999786e-05, 8.587499999999915e-05, 8.547300000000257e-05, 8.551300000000234e-05, 8.52370000000019e-05, 8.583300000000044e-05, 8.509699999999926e-05, 8.569399999999727e-05, 8.598599999999623e-05, 8.58050000000013e-05, 8.538900000000516e-05, 8.593099999999743e-05, 8.601400000000231e-05, 8.602699999999547e-05, 8.602799999999494e-05, 8.608300000000069e-05, 8.53469999999995e-05, 8.509699999999926e-05, 8.576400000000206e-05, 8.569400000000421e-05, 8.559699999999976e-05, 8.572199999999641e-05, 8.51390000000049e-05, 8.51390000000049e-05, 8.54449999999965e-05, 8.568100000000411e-05, 8.572200000000335e-05, 8.572300000000282e-05, 8.606900000000112e-05, 8.51799999999972e-05, 8.54720000000031e-05, 8.58050000000013e-05, 8.577800000000163e-05, 8.591699999999786e-05, 8.518100000000361e-05, 8.544500000000343e-05, 8.598599999999623e-05, 8.5459000000003e-05, 8.576400000000206e-05, 8.550000000000224e-05, 8.51799999999972e-05, 8.547199999999616e-05, 8.543000000000439e-05, 8.522299999999539e-05, 8.526400000000156e-05, 8.608400000000016e-05, 8.544500000000343e-05, 8.534799999999898e-05, 8.543100000000386e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.438" endtime="20201030 11:52:20.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.426" endtime="20201030 11:52:20.445"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.455" endtime="20201030 11:52:20.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.450" endtime="20201030 11:52:20.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.448" endtime="20201030 11:52:20.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.925" endtime="20201030 11:52:20.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.924" endtime="20201030 11:52:20.481"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.505" endtime="20201030 11:52:20.529"></status>
</kw>
<msg timestamp="20201030 11:52:20.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.501" endtime="20201030 11:52:20.531"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.537" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.533" endtime="20201030 11:52:20.538"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.540" endtime="20201030 11:52:20.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.494" endtime="20201030 11:52:20.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.488" endtime="20201030 11:52:20.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.564" endtime="20201030 11:52:20.923"></status>
</kw>
<msg timestamp="20201030 11:52:20.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045131028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.561" endtime="20201030 11:52:20.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045044236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045131028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.933" endtime="20201030 11:52:20.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.953" endtime="20201030 11:52:20.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.553" endtime="20201030 11:52:20.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.548" endtime="20201030 11:52:20.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.971" level="INFO">${RESULT} = [{'diff': 8.679199999999526e-05}, {'diff': 8.6944999999998e-05}, {'diff': 8.613899999999897e-05}, {'diff': 8.672299999999689e-05}, {'diff': 8.676400000000306e-05}, {'diff': 8.669399999999827e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:20.962" endtime="20201030 11:52:20.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.981" level="INFO">${ACCURACY} = {'diff': [8.679199999999526e-05, 8.6944999999998e-05, 8.613899999999897e-05, 8.672299999999689e-05, 8.676400000000306e-05, 8.669399999999827e-05, 8.61799999999982e-05, 8.692999999999895e-05, 8.6541000...</msg>
<status status="PASS" starttime="20201030 11:52:20.973" endtime="20201030 11:52:20.982"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.993" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.990" endtime="20201030 11:52:20.994"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.999" level="INFO">VALUE: [8.679199999999526e-05, 8.6944999999998e-05, 8.613899999999897e-05, 8.672299999999689e-05, 8.676400000000306e-05, 8.669399999999827e-05, 8.61799999999982e-05, 8.692999999999895e-05, 8.654100000000248e-05, 8.61669999999981e-05, 8.66669999999986e-05, 8.674999999999655e-05, 8.677799999999569e-05, 8.624999999999605e-05, 8.679099999999579e-05, 8.644400000000496e-05, 8.700000000000374e-05, 8.622199999999691e-05, 8.633400000000041e-05, 8.672200000000435e-05, 8.644500000000443e-05, 8.622199999999691e-05, 8.691699999999886e-05, 8.64170000000053e-05, 8.631900000000137e-05, 8.61249999999994e-05, 8.674999999999655e-05, 8.641699999999836e-05, 8.709700000000126e-05, 8.688899999999972e-05, 8.61249999999994e-05, 8.633300000000094e-05, 8.693000000000589e-05, 8.638899999999922e-05, 8.66390000000064e-05, 8.652800000000238e-05, 8.632000000000084e-05, 8.665199999999956e-05, 8.622299999999639e-05, 8.62370000000029e-05, 8.631900000000137e-05, 8.679199999999526e-05, 8.704200000000245e-05, 8.687500000000015e-05, 8.632000000000084e-05, 8.611099999999983e-05, 8.659700000000076e-05, 8.613899999999897e-05, 8.657000000000109e-05, 8.64999999999963e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.995" endtime="20201030 11:52:21.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.983" endtime="20201030 11:52:21.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.014" endtime="20201030 11:52:21.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.008" endtime="20201030 11:52:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.005" endtime="20201030 11:52:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.483" endtime="20201030 11:52:21.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.482" endtime="20201030 11:52:21.039"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.063" endtime="20201030 11:52:21.086"></status>
</kw>
<msg timestamp="20201030 11:52:21.087" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.060" endtime="20201030 11:52:21.088"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.094" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.089" endtime="20201030 11:52:21.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.096" endtime="20201030 11:52:21.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.052" endtime="20201030 11:52:21.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.046" endtime="20201030 11:52:21.103"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.121" endtime="20201030 11:52:21.480"></status>
</kw>
<msg timestamp="20201030 11:52:21.488" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043369389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.117" endtime="20201030 11:52:21.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043369389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043457333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.490" endtime="20201030 11:52:21.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.509" endtime="20201030 11:52:21.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.110" endtime="20201030 11:52:21.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.105" endtime="20201030 11:52:21.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.528" level="INFO">${RESULT} = [{'diff': 8.794399999999952e-05}, {'diff': 8.709700000000126e-05}, {'diff': 8.72920000000027e-05}, {'diff': 8.773599999999798e-05}, {'diff': 8.71250000000004e-05}, {'diff': 8.74720000000051e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:21.518" endtime="20201030 11:52:21.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.539" level="INFO">${ACCURACY} = {'diff': [8.794399999999952e-05, 8.709700000000126e-05, 8.72920000000027e-05, 8.773599999999798e-05, 8.71250000000004e-05, 8.74720000000051e-05, 8.755600000000252e-05, 8.74720000000051e-05, 8.78340000...</msg>
<status status="PASS" starttime="20201030 11:52:21.530" endtime="20201030 11:52:21.540"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.551" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.548" endtime="20201030 11:52:21.552"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.556" level="INFO">VALUE: [8.794399999999952e-05, 8.709700000000126e-05, 8.72920000000027e-05, 8.773599999999798e-05, 8.71250000000004e-05, 8.74720000000051e-05, 8.755600000000252e-05, 8.74720000000051e-05, 8.783400000000191e-05, 8.79999999999978e-05, 8.73050000000028e-05, 8.781899999999593e-05, 8.733300000000194e-05, 8.719399999999877e-05, 8.718100000000562e-05, 8.708300000000169e-05, 8.719399999999877e-05, 8.747300000000457e-05, 8.754200000000295e-05, 8.786100000000158e-05, 8.736100000000108e-05, 8.755600000000252e-05, 8.800000000000474e-05, 8.769499999999875e-05, 8.744399999999902e-05, 8.71250000000004e-05, 8.745899999999807e-05, 8.754099999999654e-05, 8.768099999999918e-05, 8.773599999999798e-05, 8.754199999999601e-05, 8.718099999999868e-05, 8.775000000000449e-05, 8.727700000000366e-05, 8.766600000000013e-05, 8.791699999999986e-05, 8.711100000000083e-05, 8.804100000000398e-05, 8.716600000000657e-05, 8.770799999999884e-05, 8.727800000000313e-05, 8.784699999999507e-05, 8.800000000000474e-05, 8.708400000000116e-05, 8.788800000000124e-05, 8.733300000000194e-05, 8.751399999999687e-05, 8.713800000000049e-05, 8.769399999999927e-05, 8.759700000000176e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.553" endtime="20201030 11:52:21.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.541" endtime="20201030 11:52:21.560"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.570" endtime="20201030 11:52:21.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.565" endtime="20201030 11:52:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.562" endtime="20201030 11:52:21.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.042" endtime="20201030 11:52:21.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.040" endtime="20201030 11:52:21.595"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.620" endtime="20201030 11:52:21.643"></status>
</kw>
<msg timestamp="20201030 11:52:21.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.617" endtime="20201030 11:52:21.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.647" endtime="20201030 11:52:21.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.653" endtime="20201030 11:52:21.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.608" endtime="20201030 11:52:21.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.602" endtime="20201030 11:52:21.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.679" endtime="20201030 11:52:22.011"></status>
</kw>
<msg timestamp="20201030 11:52:22.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.675" endtime="20201030 11:52:22.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044398236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044487278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.021" endtime="20201030 11:52:22.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.041" endtime="20201030 11:52:22.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.667" endtime="20201030 11:52:22.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.662" endtime="20201030 11:52:22.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.059" level="INFO">${RESULT} = [{'diff': 8.904199999999751e-05}, {'diff': 8.813800000000149e-05}, {'diff': 8.811100000000183e-05}, {'diff': 8.888900000000172e-05}, {'diff': 8.81250000000014e-05}, {'diff': 8.823599999999848e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:22.050" endtime="20201030 11:52:22.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.071" level="INFO">${ACCURACY} = {'diff': [8.904199999999751e-05, 8.813800000000149e-05, 8.811100000000183e-05, 8.888900000000172e-05, 8.81250000000014e-05, 8.823599999999848e-05, 8.809700000000226e-05, 8.820799999999934e-05, 8.89300...</msg>
<status status="PASS" starttime="20201030 11:52:22.061" endtime="20201030 11:52:22.071"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.082" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.080" endtime="20201030 11:52:22.083"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.088" level="INFO">VALUE: [8.904199999999751e-05, 8.813800000000149e-05, 8.811100000000183e-05, 8.888900000000172e-05, 8.81250000000014e-05, 8.823599999999848e-05, 8.809700000000226e-05, 8.820799999999934e-05, 8.893000000000095e-05, 8.880599999999683e-05, 8.880599999999683e-05, 8.818099999999968e-05, 8.847199999999916e-05, 8.897199999999966e-05, 8.837500000000165e-05, 8.854199999999701e-05, 8.852800000000438e-05, 8.852700000000491e-05, 8.886099999999564e-05, 8.8332999999996e-05, 8.843000000000045e-05, 8.830600000000327e-05, 8.819499999999925e-05, 8.905599999999708e-05, 8.868100000000018e-05, 8.845899999999907e-05, 8.887499999999521e-05, 8.831900000000337e-05, 8.8945e-05, 8.845799999999959e-05, 8.854099999999754e-05, 8.845799999999959e-05, 8.868100000000018e-05, 8.847199999999916e-05, 8.836100000000208e-05, 8.870799999999984e-05, 8.826399999999762e-05, 8.84869999999982e-05, 8.879100000000473e-05, 8.865300000000104e-05, 8.854099999999754e-05, 8.861100000000233e-05, 8.859699999999582e-05, 8.893000000000095e-05, 8.868100000000018e-05, 8.897199999999966e-05, 8.880599999999683e-05, 8.847199999999916e-05, 8.843099999999993e-05, 8.905499999999761e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.085" endtime="20201030 11:52:22.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.073" endtime="20201030 11:52:22.092"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.102" endtime="20201030 11:52:22.124"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.097" endtime="20201030 11:52:22.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.094" endtime="20201030 11:52:22.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.598" endtime="20201030 11:52:22.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.596" endtime="20201030 11:52:22.127"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.151" endtime="20201030 11:52:22.174"></status>
</kw>
<msg timestamp="20201030 11:52:22.176" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.148" endtime="20201030 11:52:22.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.182" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.178" endtime="20201030 11:52:22.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.184" endtime="20201030 11:52:22.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.140" endtime="20201030 11:52:22.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.134" endtime="20201030 11:52:22.192"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.209" endtime="20201030 11:52:22.571"></status>
</kw>
<msg timestamp="20201030 11:52:22.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.206" endtime="20201030 11:52:22.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043236292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043325958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.581" endtime="20201030 11:52:22.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.601" endtime="20201030 11:52:22.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.198" endtime="20201030 11:52:22.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.193" endtime="20201030 11:52:22.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.620" level="INFO">${RESULT} = [{'diff': 8.96659999999952e-05}, {'diff': 8.9332999999997e-05}, {'diff': 8.938899999999528e-05}, {'diff': 8.974999999999955e-05}, {'diff': 8.980599999999783e-05}, {'diff': 8.933300000000394e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:52:22.610" endtime="20201030 11:52:22.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.630" level="INFO">${ACCURACY} = {'diff': [8.96659999999952e-05, 8.9332999999997e-05, 8.938899999999528e-05, 8.974999999999955e-05, 8.980599999999783e-05, 8.933300000000394e-05, 8.970800000000084e-05, 8.965300000000204e-05, 8.9681000...</msg>
<status status="PASS" starttime="20201030 11:52:22.622" endtime="20201030 11:52:22.630"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.641" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.639" endtime="20201030 11:52:22.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.647" level="INFO">VALUE: [8.96659999999952e-05, 8.9332999999997e-05, 8.938899999999528e-05, 8.974999999999955e-05, 8.980599999999783e-05, 8.933300000000394e-05, 8.970800000000084e-05, 8.965300000000204e-05, 8.968100000000118e-05, 9.008399999999722e-05, 8.976299999999965e-05, 8.994399999999458e-05, 8.973599999999998e-05, 8.980499999999836e-05, 9.006999999999765e-05, 8.976399999999912e-05, 8.937500000000265e-05, 8.913900000000197e-05, 8.977699999999922e-05, 8.998600000000023e-05, 9.002699999999947e-05, 8.991600000000238e-05, 8.993000000000195e-05, 8.98329999999975e-05, 8.919400000000077e-05, 8.99999999999998e-05, 8.987499999999621e-05, 8.911100000000283e-05, 8.952799999999844e-05, 8.920800000000034e-05, 8.938900000000222e-05, 8.99999999999998e-05, 8.969400000000127e-05, 8.913900000000197e-05, 9.004199999999851e-05, 8.94450000000005e-05, 8.947200000000016e-05, 8.94450000000005e-05, 8.954200000000495e-05, 8.915300000000154e-05, 8.933399999999647e-05, 8.966600000000213e-05, 8.936200000000255e-05, 8.926299999999915e-05, 8.97920000000052e-05, 8.94999999999993e-05, 8.96800000000017e-05, 8.973599999999998e-05, 8.948599999999973e-05, 9.007000000000459e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.644" endtime="20201030 11:52:22.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.631" endtime="20201030 11:52:22.651"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.662" endtime="20201030 11:52:22.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.657" endtime="20201030 11:52:22.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.654" endtime="20201030 11:52:22.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.129" endtime="20201030 11:52:22.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.128" endtime="20201030 11:52:22.688"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.712" endtime="20201030 11:52:22.736"></status>
</kw>
<msg timestamp="20201030 11:52:22.737" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.709" endtime="20201030 11:52:22.738"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.740" endtime="20201030 11:52:22.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.746" endtime="20201030 11:52:22.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.701" endtime="20201030 11:52:22.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.695" endtime="20201030 11:52:22.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.771" endtime="20201030 11:52:23.129"></status>
</kw>
<msg timestamp="20201030 11:52:23.137" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045345417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045436125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.768" endtime="20201030 11:52:23.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.156" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045345417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045436125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.139" endtime="20201030 11:52:23.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.159" endtime="20201030 11:52:23.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.760" endtime="20201030 11:52:23.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.755" endtime="20201030 11:52:23.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.177" level="INFO">${RESULT} = [{'diff': 9.070800000000184e-05}, {'diff': 9.08199999999984e-05}, {'diff': 9.034799999999704e-05}, {'diff': 9.048600000000073e-05}, {'diff': 9.079100000000673e-05}, {'diff': 9.086100000000458e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:23.168" endtime="20201030 11:52:23.178"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:23.187" level="INFO">${ACCURACY} = {'diff': [9.070800000000184e-05, 9.08199999999984e-05, 9.034799999999704e-05, 9.048600000000073e-05, 9.079100000000673e-05, 9.086100000000458e-05, 9.087500000000415e-05, 9.022200000000091e-05, 9.02779...</msg>
<status status="PASS" starttime="20201030 11:52:23.179" endtime="20201030 11:52:23.188"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.199" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:52:23.196" endtime="20201030 11:52:23.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.204" level="INFO">VALUE: [9.070800000000184e-05, 9.08199999999984e-05, 9.034799999999704e-05, 9.048600000000073e-05, 9.079100000000673e-05, 9.086100000000458e-05, 9.087500000000415e-05, 9.022200000000091e-05, 9.027799999999919e-05, 9.06670000000026e-05, 9.034700000000451e-05, 9.065300000000304e-05, 9.077799999999969e-05, 9.027799999999919e-05, 9.093099999999549e-05, 9.013900000000297e-05, 9.076400000000012e-05, 9.049999999999336e-05, 9.030600000000527e-05, 9.029199999999876e-05, 9.01250000000034e-05, 9.083300000000544e-05, 9.025000000000005e-05, 9.038899999999628e-05, 9.059699999999782e-05, 9.088900000000372e-05, 9.090300000000329e-05, 9.058399999999772e-05, 9.098600000000123e-05, 9.022200000000091e-05, 9.047199999999422e-05, 9.10000000000008e-05, 9.012499999999646e-05, 9.055599999999858e-05, 9.013899999999603e-05, 9.072200000000141e-05, 9.037499999999671e-05, 9.065199999999662e-05, 9.101400000000037e-05, 9.108299999999875e-05, 9.066699999999567e-05, 9.055599999999858e-05, 9.027799999999919e-05, 9.019400000000177e-05, 9.07079999999949e-05, 9.069500000000175e-05, 9.095800000000209e-05, 9.01120000000033e-05, 9.086100000000458e-05, 9.068100000000218e-05]</msg>
<status status="PASS" starttime="20201030 11:52:23.201" endtime="20201030 11:52:23.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.189" endtime="20201030 11:52:23.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.219" endtime="20201030 11:52:23.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.213" endtime="20201030 11:52:23.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.211" endtime="20201030 11:52:23.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.690" endtime="20201030 11:52:23.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.689" endtime="20201030 11:52:23.245"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.269" endtime="20201030 11:52:23.292"></status>
</kw>
<msg timestamp="20201030 11:52:23.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.266" endtime="20201030 11:52:23.294"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.296" endtime="20201030 11:52:23.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.302" endtime="20201030 11:52:23.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.258" endtime="20201030 11:52:23.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.252" endtime="20201030 11:52:23.310"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.327" endtime="20201030 11:52:23.685"></status>
</kw>
<msg timestamp="20201030 11:52:23.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043195181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043286417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.324" endtime="20201030 11:52:23.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043195181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043286417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.695" endtime="20201030 11:52:23.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.715" endtime="20201030 11:52:23.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.316" endtime="20201030 11:52:23.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.311" endtime="20201030 11:52:23.723"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.734" level="INFO">${RESULT} = [{'diff': 9.123600000000148e-05}, {'diff': 9.126400000000062e-05}, {'diff': 9.179200000000026e-05}, {'diff': 9.187500000000515e-05}, {'diff': 9.18329999999995e-05}, {'diff': 9.16529999999971e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:23.724" endtime="20201030 11:52:23.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:23.745" level="INFO">${ACCURACY} = {'diff': [9.123600000000148e-05, 9.126400000000062e-05, 9.179200000000026e-05, 9.187500000000515e-05, 9.18329999999995e-05, 9.16529999999971e-05, 9.176400000000112e-05, 9.152800000000044e-05, 9.116700...</msg>
<status status="PASS" starttime="20201030 11:52:23.736" endtime="20201030 11:52:23.746"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.757" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:52:23.754" endtime="20201030 11:52:23.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.762" level="INFO">VALUE: [9.123600000000148e-05, 9.126400000000062e-05, 9.179200000000026e-05, 9.187500000000515e-05, 9.18329999999995e-05, 9.16529999999971e-05, 9.176400000000112e-05, 9.152800000000044e-05, 9.11670000000031e-05, 9.145900000000207e-05, 9.129199999999976e-05, 9.126300000000115e-05, 9.204200000000051e-05, 9.180599999999983e-05, 9.131899999999943e-05, 9.122200000000191e-05, 9.179200000000026e-05, 9.127800000000019e-05, 9.166699999999667e-05, 9.130599999999933e-05, 9.168100000000318e-05, 9.143100000000293e-05, 9.137500000000465e-05, 9.113899999999703e-05, 9.136099999999814e-05, 9.18329999999995e-05, 9.147199999999522e-05, 9.193100000000343e-05, 9.191599999999744e-05, 9.137499999999771e-05, 9.177800000000069e-05, 9.169400000000327e-05, 9.168100000000318e-05, 9.166699999999667e-05, 9.15000000000013e-05, 9.134699999999857e-05, 9.205500000000061e-05, 9.181899999999993e-05, 9.2027999999994e-05, 9.161099999999839e-05, 9.184699999999907e-05, 9.184699999999907e-05, 9.127800000000019e-05, 9.137500000000465e-05, 9.205600000000008e-05, 9.165300000000404e-05, 9.109799999999779e-05, 9.179100000000079e-05, 9.167999999999676e-05, 9.11529999999966e-05]</msg>
<status status="PASS" starttime="20201030 11:52:23.759" endtime="20201030 11:52:23.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.747" endtime="20201030 11:52:23.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.776" endtime="20201030 11:52:23.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.771" endtime="20201030 11:52:23.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.769" endtime="20201030 11:52:23.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.247" endtime="20201030 11:52:23.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.246" endtime="20201030 11:52:23.802"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.826" endtime="20201030 11:52:23.849"></status>
</kw>
<msg timestamp="20201030 11:52:23.850" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.822" endtime="20201030 11:52:23.851"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.853" endtime="20201030 11:52:23.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.859" endtime="20201030 11:52:23.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.814" endtime="20201030 11:52:23.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.808" endtime="20201030 11:52:23.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.884" endtime="20201030 11:52:24.244"></status>
</kw>
<msg timestamp="20201030 11:52:24.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.881" endtime="20201030 11:52:24.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043211681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043304458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.253" endtime="20201030 11:52:24.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.273" endtime="20201030 11:52:24.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.873" endtime="20201030 11:52:24.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.868" endtime="20201030 11:52:24.281"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.292" level="INFO">${RESULT} = [{'diff': 9.277699999999528e-05}, {'diff': 9.223600000000248e-05}, {'diff': 9.30000000000028e-05}, {'diff': 9.237500000000565e-05}, {'diff': 9.279200000000126e-05}, {'diff': 9.227800000000119e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:24.282" endtime="20201030 11:52:24.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.303" level="INFO">${ACCURACY} = {'diff': [9.277699999999528e-05, 9.223600000000248e-05, 9.30000000000028e-05, 9.237500000000565e-05, 9.279200000000126e-05, 9.227800000000119e-05, 9.233399999999947e-05, 9.275000000000255e-05, 9.27920...</msg>
<status status="PASS" starttime="20201030 11:52:24.294" endtime="20201030 11:52:24.304"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.315" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.313" endtime="20201030 11:52:24.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.321" level="INFO">VALUE: [9.277699999999528e-05, 9.223600000000248e-05, 9.30000000000028e-05, 9.237500000000565e-05, 9.279200000000126e-05, 9.227800000000119e-05, 9.233399999999947e-05, 9.275000000000255e-05, 9.279200000000126e-05, 9.224999999999511e-05, 9.231900000000043e-05, 9.266700000000461e-05, 9.229200000000076e-05, 9.302800000000194e-05, 9.301400000000237e-05, 9.279200000000126e-05, 9.233399999999947e-05, 9.299999999999586e-05, 9.287500000000615e-05, 9.237499999999871e-05, 9.234699999999957e-05, 9.272199999999647e-05, 9.226400000000162e-05, 9.290199999999887e-05, 9.211099999999889e-05, 9.234699999999957e-05, 9.255600000000058e-05, 9.287499999999921e-05, 9.301400000000237e-05, 9.255600000000058e-05, 9.249999999999536e-05, 9.305600000000108e-05, 9.209699999999932e-05, 9.266699999999767e-05, 9.280600000000083e-05, 9.24859999999958e-05, 9.22079999999964e-05, 9.227800000000119e-05, 9.279200000000126e-05, 9.268100000000418e-05, 9.269399999999733e-05, 9.213899999999803e-05, 9.234699999999957e-05, 9.205500000000061e-05, 9.272200000000341e-05, 9.305499999999467e-05, 9.21659999999977e-05, 9.277800000000169e-05, 9.277800000000169e-05, 9.295900000000357e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.318" endtime="20201030 11:52:24.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.305" endtime="20201030 11:52:24.324"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.334" endtime="20201030 11:52:24.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.329" endtime="20201030 11:52:24.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.327" endtime="20201030 11:52:24.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.804" endtime="20201030 11:52:24.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.803" endtime="20201030 11:52:24.360"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.384" endtime="20201030 11:52:24.406"></status>
</kw>
<msg timestamp="20201030 11:52:24.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.380" endtime="20201030 11:52:24.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.414" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.410" endtime="20201030 11:52:24.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.416" endtime="20201030 11:52:24.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.373" endtime="20201030 11:52:24.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.367" endtime="20201030 11:52:24.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.441" endtime="20201030 11:52:24.807"></status>
</kw>
<msg timestamp="20201030 11:52:24.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043122194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043215917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.438" endtime="20201030 11:52:24.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043122194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043215917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.817" endtime="20201030 11:52:24.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.836" endtime="20201030 11:52:24.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.430" endtime="20201030 11:52:24.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.425" endtime="20201030 11:52:24.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.855" level="INFO">${RESULT} = [{'diff': 9.372299999999695e-05}, {'diff': 9.312499999999946e-05}, {'diff': 9.322200000000391e-05}, {'diff': 9.352800000000244e-05}, {'diff': 9.372199999999747e-05}, {'diff': 9.347199999999722e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:24.845" endtime="20201030 11:52:24.855"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.865" level="INFO">${ACCURACY} = {'diff': [9.372299999999695e-05, 9.312499999999946e-05, 9.322200000000391e-05, 9.352800000000244e-05, 9.372199999999747e-05, 9.347199999999722e-05, 9.33200000000009e-05, 9.394499999999806e-05, 9.33470...</msg>
<status status="PASS" starttime="20201030 11:52:24.857" endtime="20201030 11:52:24.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.876" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.874" endtime="20201030 11:52:24.877"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.882" level="INFO">VALUE: [9.372299999999695e-05, 9.312499999999946e-05, 9.322200000000391e-05, 9.352800000000244e-05, 9.372199999999747e-05, 9.347199999999722e-05, 9.33200000000009e-05, 9.394499999999806e-05, 9.334700000000057e-05, 9.317999999999826e-05, 9.375000000000355e-05, 9.322300000000339e-05, 9.33200000000009e-05, 9.334700000000057e-05, 9.355500000000211e-05, 9.312499999999946e-05, 9.368099999999824e-05, 9.387500000000021e-05, 9.386100000000064e-05, 9.394499999999806e-05, 9.366699999999867e-05, 9.338899999999928e-05, 9.361100000000039e-05, 9.380600000000183e-05, 9.366699999999867e-05, 9.386100000000064e-05, 9.322199999999697e-05, 9.334700000000057e-05, 9.401400000000337e-05, 9.357000000000115e-05, 9.36529999999991e-05, 9.309700000000032e-05, 9.377700000000322e-05, 9.38330000000015e-05, 9.345800000000459e-05, 9.344399999999808e-05, 9.326400000000262e-05, 9.345800000000459e-05, 9.319399999999783e-05, 9.388899999999978e-05, 9.401399999999643e-05, 9.337499999999971e-05, 9.323599999999654e-05, 9.337499999999971e-05, 9.331900000000143e-05, 9.373599999999704e-05, 9.391599999999944e-05, 9.334700000000057e-05, 9.395799999999815e-05, 9.374999999999661e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.879" endtime="20201030 11:52:24.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.867" endtime="20201030 11:52:24.885"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.895" endtime="20201030 11:52:24.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.890" endtime="20201030 11:52:24.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.888" endtime="20201030 11:52:24.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.362" endtime="20201030 11:52:24.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.361" endtime="20201030 11:52:24.921"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.945" endtime="20201030 11:52:24.970"></status>
</kw>
<msg timestamp="20201030 11:52:24.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.941" endtime="20201030 11:52:24.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.973" endtime="20201030 11:52:24.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.980" endtime="20201030 11:52:24.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.934" endtime="20201030 11:52:24.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.928" endtime="20201030 11:52:24.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.005" endtime="20201030 11:52:25.316"></status>
</kw>
<msg timestamp="20201030 11:52:25.319" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.002" endtime="20201030 11:52:25.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044939722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045034625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.320" endtime="20201030 11:52:25.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.329" endtime="20201030 11:52:25.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.994" endtime="20201030 11:52:25.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.989" endtime="20201030 11:52:25.332"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.337" level="INFO">${RESULT} = [{'diff': 9.490300000000035e-05}, {'diff': 9.437500000000071e-05}, {'diff': 9.469499999999881e-05}, {'diff': 9.444499999999856e-05}, {'diff': 9.409699999999438e-05}, {'diff': 9.411100000000089e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:25.333" endtime="20201030 11:52:25.337"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.346" level="INFO">${ACCURACY} = {'diff': [9.490300000000035e-05, 9.437500000000071e-05, 9.469499999999881e-05, 9.444499999999856e-05, 9.409699999999438e-05, 9.411100000000089e-05, 9.50409999999971e-05, 9.429099999999635e-05, 9.49859...</msg>
<status status="PASS" starttime="20201030 11:52:25.338" endtime="20201030 11:52:25.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.357" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.355" endtime="20201030 11:52:25.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.363" level="INFO">VALUE: [9.490300000000035e-05, 9.437500000000071e-05, 9.469499999999881e-05, 9.444499999999856e-05, 9.409699999999438e-05, 9.411100000000089e-05, 9.50409999999971e-05, 9.429099999999635e-05, 9.49859999999983e-05, 9.483299999999556e-05, 9.504200000000351e-05, 9.479199999999632e-05, 9.440200000000037e-05, 9.45000000000043e-05, 9.444400000000602e-05, 9.493100000000643e-05, 9.43880000000008e-05, 9.422200000000491e-05, 9.467999999999976e-05, 9.41659999999997e-05, 9.466699999999967e-05, 9.491699999999992e-05, 9.468100000000618e-05, 9.436100000000114e-05, 9.469499999999881e-05, 9.41659999999997e-05, 9.412500000000046e-05, 9.490200000000087e-05, 9.409699999999438e-05, 9.408300000000175e-05, 9.433299999999506e-05, 9.413900000000003e-05, 9.481899999999599e-05, 9.413900000000003e-05, 9.449999999999736e-05, 9.425000000000405e-05, 9.422299999999745e-05, 9.501400000000437e-05, 9.449999999999736e-05, 9.449999999999736e-05, 9.444399999999908e-05, 9.412500000000046e-05, 9.442999999999951e-05, 9.458300000000225e-05, 9.437500000000071e-05, 9.474999999999761e-05, 9.48609999999947e-05, 9.48059999999959e-05, 9.413900000000003e-05, 9.499999999999786e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.360" endtime="20201030 11:52:25.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.348" endtime="20201030 11:52:25.366"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.378" endtime="20201030 11:52:25.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.372" endtime="20201030 11:52:25.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.369" endtime="20201030 11:52:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.923" endtime="20201030 11:52:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.922" endtime="20201030 11:52:25.404"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.428" endtime="20201030 11:52:25.450"></status>
</kw>
<msg timestamp="20201030 11:52:25.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.424" endtime="20201030 11:52:25.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.454" endtime="20201030 11:52:25.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.461" endtime="20201030 11:52:25.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.417" endtime="20201030 11:52:25.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.411" endtime="20201030 11:52:25.468"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.486" endtime="20201030 11:52:25.851"></status>
</kw>
<msg timestamp="20201030 11:52:25.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043308764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.482" endtime="20201030 11:52:25.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043212861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043308764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.861" endtime="20201030 11:52:25.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.881" endtime="20201030 11:52:25.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.474" endtime="20201030 11:52:25.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.469" endtime="20201030 11:52:25.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.900" level="INFO">${RESULT} = [{'diff': 9.590300000000135e-05}, {'diff': 9.593100000000049e-05}, {'diff': 9.551400000000487e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.588799999999537e-05}, {'diff': 9.508300000000275e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:25.890" endtime="20201030 11:52:25.900"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.911" level="INFO">${ACCURACY} = {'diff': [9.590300000000135e-05, 9.593100000000049e-05, 9.551400000000487e-05, 9.512500000000146e-05, 9.588799999999537e-05, 9.508300000000275e-05, 9.537499999999477e-05, 9.522200000000591e-05, 9.5667...</msg>
<status status="PASS" starttime="20201030 11:52:25.902" endtime="20201030 11:52:25.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.923" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.920" endtime="20201030 11:52:25.924"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.929" level="INFO">VALUE: [9.590300000000135e-05, 9.593100000000049e-05, 9.551400000000487e-05, 9.512500000000146e-05, 9.588799999999537e-05, 9.508300000000275e-05, 9.537499999999477e-05, 9.522200000000591e-05, 9.566700000000067e-05, 9.536100000000214e-05, 9.537500000000171e-05, 9.545900000000607e-05, 9.602800000000494e-05, 9.604199999999757e-05, 9.56660000000012e-05, 9.602699999999853e-05, 9.57079999999999e-05, 9.544400000000008e-05, 9.529199999999682e-05, 9.587500000000221e-05, 9.534700000000257e-05, 9.527799999999725e-05, 9.53200000000029e-05, 9.601400000000537e-05, 9.568000000000076e-05, 9.52079999999994e-05, 9.6027999999998e-05, 9.568100000000024e-05, 9.54859999999988e-05, 9.57079999999999e-05, 9.527799999999725e-05, 9.544499999999956e-05, 9.566700000000067e-05, 9.573599999999904e-05, 9.511200000000136e-05, 9.534800000000204e-05, 9.538900000000128e-05, 9.523599999999854e-05, 9.577699999999828e-05, 9.529099999999735e-05, 9.577799999999775e-05, 9.601399999999843e-05, 9.536100000000214e-05, 9.580500000000436e-05, 9.520899999999888e-05, 9.530600000000333e-05, 9.537500000000171e-05, 9.527799999999725e-05, 9.519399999999983e-05, 9.530600000000333e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.925" endtime="20201030 11:52:25.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.913" endtime="20201030 11:52:25.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.942" endtime="20201030 11:52:25.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.937" endtime="20201030 11:52:25.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.935" endtime="20201030 11:52:25.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.406" endtime="20201030 11:52:25.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.405" endtime="20201030 11:52:25.968"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.991" endtime="20201030 11:52:26.015"></status>
</kw>
<msg timestamp="20201030 11:52:26.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.988" endtime="20201030 11:52:26.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.018" endtime="20201030 11:52:26.023"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.025" endtime="20201030 11:52:26.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.980" endtime="20201030 11:52:26.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.974" endtime="20201030 11:52:26.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.050" endtime="20201030 11:52:26.408"></status>
</kw>
<msg timestamp="20201030 11:52:26.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.047" endtime="20201030 11:52:26.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043380986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043477222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.418" endtime="20201030 11:52:26.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.438" endtime="20201030 11:52:26.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.039" endtime="20201030 11:52:26.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.034" endtime="20201030 11:52:26.445"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.456" level="INFO">${RESULT} = [{'diff': 9.623599999999954e-05}, {'diff': 9.68059999999979e-05}, {'diff': 9.674999999999961e-05}, {'diff': 9.69860000000003e-05}, {'diff': 9.647200000000022e-05}, {'diff': 9.619500000000031e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:26.447" endtime="20201030 11:52:26.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:26.468" level="INFO">${ACCURACY} = {'diff': [9.623599999999954e-05, 9.68059999999979e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.647200000000022e-05, 9.619500000000031e-05, 9.634800000000304e-05, 9.652699999999903e-05, 9.619399...</msg>
<status status="PASS" starttime="20201030 11:52:26.458" endtime="20201030 11:52:26.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.480" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:52:26.477" endtime="20201030 11:52:26.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.485" level="INFO">VALUE: [9.623599999999954e-05, 9.68059999999979e-05, 9.674999999999961e-05, 9.69860000000003e-05, 9.647200000000022e-05, 9.619500000000031e-05, 9.634800000000304e-05, 9.652699999999903e-05, 9.61939999999939e-05, 9.701399999999943e-05, 9.673600000000004e-05, 9.691700000000192e-05, 9.677799999999875e-05, 9.68059999999979e-05, 9.670900000000038e-05, 9.645900000000013e-05, 9.659699999999688e-05, 9.68479999999966e-05, 9.64859999999998e-05, 9.681899999999799e-05, 9.70409999999991e-05, 9.659700000000382e-05, 9.702800000000594e-05, 9.657000000000415e-05, 9.695900000000063e-05, 9.63609999999962e-05, 9.684800000000354e-05, 9.684800000000354e-05, 9.626399999999868e-05, 9.672200000000047e-05, 9.634700000000357e-05, 9.634700000000357e-05, 9.673600000000004e-05, 9.66809999999943e-05, 9.606900000000418e-05, 9.673600000000004e-05, 9.663899999999559e-05, 9.64729999999997e-05, 9.612500000000246e-05, 9.674999999999961e-05, 9.691700000000192e-05, 9.629200000000476e-05, 9.62080000000004e-05, 9.706899999999824e-05, 9.659699999999688e-05, 9.672299999999995e-05, 9.69860000000003e-05, 9.68880000000033e-05, 9.659799999999635e-05, 9.699999999999986e-05]</msg>
<status status="PASS" starttime="20201030 11:52:26.482" endtime="20201030 11:52:26.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.470" endtime="20201030 11:52:26.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.499" endtime="20201030 11:52:26.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.494" endtime="20201030 11:52:26.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.491" endtime="20201030 11:52:26.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.970" endtime="20201030 11:52:26.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.968" endtime="20201030 11:52:26.524"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.548" endtime="20201030 11:52:26.572"></status>
</kw>
<msg timestamp="20201030 11:52:26.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.545" endtime="20201030 11:52:26.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.576" endtime="20201030 11:52:26.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.582" endtime="20201030 11:52:26.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.537" endtime="20201030 11:52:26.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.531" endtime="20201030 11:52:26.590"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.607" endtime="20201030 11:52:26.968"></status>
</kw>
<msg timestamp="20201030 11:52:26.975" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.604" endtime="20201030 11:52:26.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043089903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043187014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.978" endtime="20201030 11:52:26.996"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.997" endtime="20201030 11:52:27.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.596" endtime="20201030 11:52:27.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.591" endtime="20201030 11:52:27.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.016" level="INFO">${RESULT} = [{'diff': 9.711100000000389e-05}, {'diff': 9.744500000000156e-05}, {'diff': 9.729199999999882e-05}, {'diff': 9.726399999999968e-05}, {'diff': 9.784699999999813e-05}, {'diff': 9.772300000000095e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:27.007" endtime="20201030 11:52:27.016"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.026" level="INFO">${ACCURACY} = {'diff': [9.711100000000389e-05, 9.744500000000156e-05, 9.729199999999882e-05, 9.726399999999968e-05, 9.784699999999813e-05, 9.772300000000095e-05, 9.711200000000336e-05, 9.71530000000026e-05, 9.75969...</msg>
<status status="PASS" starttime="20201030 11:52:27.018" endtime="20201030 11:52:27.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.037" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.035" endtime="20201030 11:52:27.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.043" level="INFO">VALUE: [9.711100000000389e-05, 9.744500000000156e-05, 9.729199999999882e-05, 9.726399999999968e-05, 9.784699999999813e-05, 9.772300000000095e-05, 9.711200000000336e-05, 9.71530000000026e-05, 9.759699999999788e-05, 9.722200000000097e-05, 9.806899999999924e-05, 9.76530000000031e-05, 9.73609999999972e-05, 9.775000000000061e-05, 9.77080000000019e-05, 9.799999999999393e-05, 9.776300000000071e-05, 9.726399999999968e-05, 9.745800000000165e-05, 9.797200000000172e-05, 9.731899999999849e-05, 9.709699999999738e-05, 9.805499999999967e-05, 9.801400000000043e-05, 9.765299999999616e-05, 9.722200000000097e-05, 9.773600000000104e-05, 9.757000000000515e-05, 9.754199999999907e-05, 9.794399999999565e-05, 9.726300000000021e-05, 9.734700000000457e-05, 9.775000000000061e-05, 9.72080000000014e-05, 9.768000000000276e-05, 9.729199999999882e-05, 9.722200000000097e-05, 9.733399999999753e-05, 9.72359999999936e-05, 9.800000000000086e-05, 9.768000000000276e-05, 9.722200000000097e-05, 9.726399999999968e-05, 9.783299999999856e-05, 9.736100000000414e-05, 9.713900000000303e-05, 9.781999999999846e-05, 9.78059999999989e-05, 9.751399999999993e-05, 9.712499999999652e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.040" endtime="20201030 11:52:27.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.028" endtime="20201030 11:52:27.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.056" endtime="20201030 11:52:27.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.052" endtime="20201030 11:52:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.049" endtime="20201030 11:52:27.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.527" endtime="20201030 11:52:27.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.525" endtime="20201030 11:52:27.082"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.107" endtime="20201030 11:52:27.131"></status>
</kw>
<msg timestamp="20201030 11:52:27.132" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.103" endtime="20201030 11:52:27.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.139" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.134" endtime="20201030 11:52:27.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.141" endtime="20201030 11:52:27.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.095" endtime="20201030 11:52:27.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.089" endtime="20201030 11:52:27.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.166" endtime="20201030 11:52:27.525"></status>
</kw>
<msg timestamp="20201030 11:52:27.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044959611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045058347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.162" endtime="20201030 11:52:27.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.552" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044959611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045058347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.535" endtime="20201030 11:52:27.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.554" endtime="20201030 11:52:27.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.155" endtime="20201030 11:52:27.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.150" endtime="20201030 11:52:27.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.573" level="INFO">${RESULT} = [{'diff': 9.873600000000204e-05}, {'diff': 9.881899999999999e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.862499999999802e-05}, {'diff': 9.83479999999981e-05}, {'diff': 9.866700000000367e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:27.563" endtime="20201030 11:52:27.573"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.583" level="INFO">${ACCURACY} = {'diff': [9.873600000000204e-05, 9.881899999999999e-05, 9.825000000000111e-05, 9.862499999999802e-05, 9.83479999999981e-05, 9.866700000000367e-05, 9.819499999999537e-05, 9.863799999999812e-05, 9.82090...</msg>
<status status="PASS" starttime="20201030 11:52:27.575" endtime="20201030 11:52:27.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.594" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.592" endtime="20201030 11:52:27.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.600" level="INFO">VALUE: [9.873600000000204e-05, 9.881899999999999e-05, 9.825000000000111e-05, 9.862499999999802e-05, 9.83479999999981e-05, 9.866700000000367e-05, 9.819499999999537e-05, 9.863799999999812e-05, 9.820900000000188e-05, 9.844400000000308e-05, 9.849999999999443e-05, 9.825000000000111e-05, 9.872200000000247e-05, 9.865299999999716e-05, 9.86939999999964e-05, 9.819500000000231e-05, 9.831999999999896e-05, 9.833399999999853e-05, 9.88059999999999e-05, 9.823600000000154e-05, 9.833299999999906e-05, 9.872199999999554e-05, 9.845799999999572e-05, 9.840300000000385e-05, 9.866700000000367e-05, 9.86530000000041e-05, 9.879100000000085e-05, 9.811199999999742e-05, 9.816599999999676e-05, 9.875000000000161e-05, 9.806899999999924e-05, 9.865299999999716e-05, 9.880500000000042e-05, 9.867999999999683e-05, 9.899999999999493e-05, 9.856999999999921e-05, 9.841699999999648e-05, 9.88609999999987e-05, 9.812500000000446e-05, 9.888899999999784e-05, 9.877700000000128e-05, 9.895799999999622e-05, 9.819500000000231e-05, 9.861099999999845e-05, 9.826400000000068e-05, 9.812499999999752e-05, 9.815299999999666e-05, 9.899999999999493e-05, 9.816599999999676e-05, 9.811099999999795e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.597" endtime="20201030 11:52:27.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.584" endtime="20201030 11:52:27.604"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.615" endtime="20201030 11:52:27.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.609" endtime="20201030 11:52:27.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.606" endtime="20201030 11:52:27.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.085" endtime="20201030 11:52:27.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.083" endtime="20201030 11:52:27.641"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.665" endtime="20201030 11:52:27.688"></status>
</kw>
<msg timestamp="20201030 11:52:27.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.662" endtime="20201030 11:52:27.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.696" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.692" endtime="20201030 11:52:27.697"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.699" endtime="20201030 11:52:27.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.654" endtime="20201030 11:52:27.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.648" endtime="20201030 11:52:27.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.724" endtime="20201030 11:52:28.080"></status>
</kw>
<msg timestamp="20201030 11:52:28.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043499972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.720" endtime="20201030 11:52:28.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043399958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043499972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.090" endtime="20201030 11:52:28.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.110" endtime="20201030 11:52:28.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.712" endtime="20201030 11:52:28.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.707" endtime="20201030 11:52:28.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.128" level="INFO">${RESULT} = [{'diff': 0.0001000139999999955}, {'diff': 9.992999999999808e-05}, {'diff': 9.920799999999647e-05}, {'diff': 0.00010006900000000124}, {'diff': 9.973600000000304e-05}, {'diff': 9.990299999999841e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:28.119" endtime="20201030 11:52:28.129"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.140" level="INFO">${ACCURACY} = {'diff': [0.0001000139999999955, 9.992999999999808e-05, 9.920799999999647e-05, 0.00010006900000000124, 9.973600000000304e-05, 9.990299999999841e-05, 9.994500000000406e-05, 9.98479999999996e-05, 9.9250...</msg>
<status status="PASS" starttime="20201030 11:52:28.130" endtime="20201030 11:52:28.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.151" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.149" endtime="20201030 11:52:28.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.157" level="INFO">VALUE: [0.0001000139999999955, 9.992999999999808e-05, 9.920799999999647e-05, 0.00010006900000000124, 9.973600000000304e-05, 9.990299999999841e-05, 9.994500000000406e-05, 9.98479999999996e-05, 9.925000000000211e-05, 9.977700000000228e-05, 9.920799999999647e-05, 9.990299999999841e-05, 9.941699999999748e-05, 9.97080000000039e-05, 9.961099999999945e-05, 9.918100000000374e-05, 9.987499999999927e-05, 9.920900000000288e-05, 9.911199999999842e-05, 9.994500000000406e-05, 0.00010001400000000243, 9.922199999999604e-05, 9.92080000000034e-05, 9.911099999999895e-05, 9.945800000000365e-05, 0.00010004200000000157, 9.965299999999816e-05, 9.940299999999791e-05, 9.934699999999963e-05, 0.00010007000000000071, 9.977800000000175e-05, 9.949999999999543e-05, 9.979100000000185e-05, 9.927800000000125e-05, 9.926400000000168e-05, 9.933300000000006e-05, 9.934699999999963e-05, 9.922300000000245e-05, 9.927800000000125e-05, 9.962499999999902e-05, 9.934699999999963e-05, 9.984700000000013e-05, 9.988899999999884e-05, 0.0001000139999999955, 9.913900000000503e-05, 0.000100028000000002, 9.999999999999593e-05, 9.938900000000528e-05, 9.945900000000313e-05, 9.993099999999755e-05]</msg>
<status status="PASS" starttime="20201030 11:52:28.154" endtime="20201030 11:52:28.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.142" endtime="20201030 11:52:28.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.170" endtime="20201030 11:52:28.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.166" endtime="20201030 11:52:28.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.163" endtime="20201030 11:52:28.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.643" endtime="20201030 11:52:28.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.642" endtime="20201030 11:52:28.196"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.220" endtime="20201030 11:52:28.244"></status>
</kw>
<msg timestamp="20201030 11:52:28.246" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.217" endtime="20201030 11:52:28.246"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.248" endtime="20201030 11:52:28.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.254" endtime="20201030 11:52:28.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.209" endtime="20201030 11:52:28.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.203" endtime="20201030 11:52:28.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.279" endtime="20201030 11:52:28.637"></status>
</kw>
<msg timestamp="20201030 11:52:28.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043504903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043605444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.276" endtime="20201030 11:52:28.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043504903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043605444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.647" endtime="20201030 11:52:28.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.666" endtime="20201030 11:52:28.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.268" endtime="20201030 11:52:28.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.263" endtime="20201030 11:52:28.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.685" level="INFO">${RESULT} = [{'diff': 0.0001005410000000026}, {'diff': 0.00010077799999999582}, {'diff': 0.00010066599999999926}, {'diff': 0.0001001530000000056}, {'diff': 0.00010092999999999908}, {'diff': 0.00010033300000000106...</msg>
<status status="PASS" starttime="20201030 11:52:28.675" endtime="20201030 11:52:28.685"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.696" level="INFO">${ACCURACY} = {'diff': [0.0001005410000000026, 0.00010077799999999582, 0.00010066599999999926, 0.0001001530000000056, 0.00010092999999999908, 0.00010033300000000106, 0.0001006809999999983, 0.0001008060000000019, 0....</msg>
<status status="PASS" starttime="20201030 11:52:28.687" endtime="20201030 11:52:28.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.708" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.705" endtime="20201030 11:52:28.709"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.713" level="INFO">VALUE: [0.0001005410000000026, 0.00010077799999999582, 0.00010066599999999926, 0.0001001530000000056, 0.00010092999999999908, 0.00010033300000000106, 0.0001006809999999983, 0.0001008060000000019, 0.0001008060000000019, 0.000100513999999996, 0.00010088899999999984, 0.00010047199999999729, 0.00010045800000000465, 0.00010049999999999643, 0.00010063899999999959, 0.0001007359999999971, 0.00010033299999999412, 0.00010088899999999984, 0.00010057000000000121, 0.00010070900000000438, 0.00010033300000000106, 0.00010069499999999787, 0.00010015199999999919, 0.00010069500000000481, 0.00010025000000000311, 0.00010077799999999582, 0.00010088899999999984, 0.00010051400000000293, 0.00010012499999999952, 0.00010007000000000071, 0.00010027800000000225, 0.00010034700000000063, 0.00010026300000000321, 0.00010031899999999455, 0.00010024999999999618, 0.00010067999999999883, 0.00010080499999999548, 0.00010032000000000096, 0.0001003480000000001, 0.00010074999999999668, 0.00010019500000000431, 0.00010033400000000053, 0.00010059800000000035, 0.0001010139999999965, 0.00010055500000000217, 0.00010020799999999747, 0.00010095799999999822, 0.00010022199999999704, 0.00010079200000000232, 0.0001006809999999983]</msg>
<status status="PASS" starttime="20201030 11:52:28.710" endtime="20201030 11:52:28.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.698" endtime="20201030 11:52:28.717"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.727" endtime="20201030 11:52:28.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.722" endtime="20201030 11:52:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.719" endtime="20201030 11:52:28.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.198" endtime="20201030 11:52:28.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.197" endtime="20201030 11:52:28.752"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.777" endtime="20201030 11:52:28.801"></status>
</kw>
<msg timestamp="20201030 11:52:28.802" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.774" endtime="20201030 11:52:28.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.809" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.804" endtime="20201030 11:52:28.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.811" endtime="20201030 11:52:28.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.766" endtime="20201030 11:52:28.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.760" endtime="20201030 11:52:28.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.836" endtime="20201030 11:52:29.173"></status>
</kw>
<msg timestamp="20201030 11:52:29.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043815333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.833" endtime="20201030 11:52:29.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043713639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043815333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.177" endtime="20201030 11:52:29.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.186" endtime="20201030 11:52:29.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.825" endtime="20201030 11:52:29.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.820" endtime="20201030 11:52:29.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.194" level="INFO">${RESULT} = [{'diff': 0.0001016939999999994}, {'diff': 0.0001011939999999989}, {'diff': 0.0001013339999999946}, {'diff': 0.00010127799999999632}, {'diff': 0.00010179200000000332}, {'diff': 0.00010119500000000531}...</msg>
<status status="PASS" starttime="20201030 11:52:29.190" endtime="20201030 11:52:29.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.198" level="INFO">${ACCURACY} = {'diff': [0.0001016939999999994, 0.0001011939999999989, 0.0001013339999999946, 0.00010127799999999632, 0.00010179200000000332, 0.00010119500000000531, 0.00010113900000000009, 0.0001020139999999975, 0....</msg>
<status status="PASS" starttime="20201030 11:52:29.195" endtime="20201030 11:52:29.199"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.204" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.203" endtime="20201030 11:52:29.204"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.207" level="INFO">VALUE: [0.0001016939999999994, 0.0001011939999999989, 0.0001013339999999946, 0.00010127799999999632, 0.00010179200000000332, 0.00010119500000000531, 0.00010113900000000009, 0.0001020139999999975, 0.00010162500000000102, 0.0001010410000000031, 0.00010188900000000084, 0.00010147199999999829, 0.00010167999999999983, 0.00010149999999999743, 0.00010198599999999836, 0.0001011939999999989, 0.00010188900000000084, 0.00010113900000000009, 0.00010108400000000128, 0.00010113800000000062, 0.00010176399999999725, 0.00010194499999999912, 0.00010161099999999451, 0.00010118100000000574, 0.00010147200000000522, 0.00010190300000000041, 0.00010174999999999768, 0.0001018610000000017, 0.00010159800000000135, 0.00010145799999999872, 0.00010120799999999847, 0.00010127799999999632, 0.00010193000000000008, 0.00010166699999999973, 0.00010174999999999768, 0.00010194500000000606, 0.0001011809999999988, 0.00010184799999999467, 0.00010188900000000084, 0.00010190200000000094, 0.00010138900000000034, 0.00010183299999999562, 0.00010200000000000486, 0.00010130599999999546, 0.00010163900000000059, 0.00010191699999999998, 0.00010154199999999614, 0.00010179099999999691, 0.00010136200000000067, 0.00010133300000000206]</msg>
<status status="PASS" starttime="20201030 11:52:29.205" endtime="20201030 11:52:29.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.199" endtime="20201030 11:52:29.208"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.213" endtime="20201030 11:52:29.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.211" endtime="20201030 11:52:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.209" endtime="20201030 11:52:29.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.755" endtime="20201030 11:52:29.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.753" endtime="20201030 11:52:29.234"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.245" endtime="20201030 11:52:29.266"></status>
</kw>
<msg timestamp="20201030 11:52:29.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.243" endtime="20201030 11:52:29.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.270" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.268" endtime="20201030 11:52:29.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.271" endtime="20201030 11:52:29.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.240" endtime="20201030 11:52:29.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.237" endtime="20201030 11:52:29.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.282" endtime="20201030 11:52:29.638"></status>
</kw>
<msg timestamp="20201030 11:52:29.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025867833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.281" endtime="20201030 11:52:29.646"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025765556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025867833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.647" endtime="20201030 11:52:29.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.667" endtime="20201030 11:52:29.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.277" endtime="20201030 11:52:29.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.275" endtime="20201030 11:52:29.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.685" level="INFO">${RESULT} = [{'diff': 0.00010227700000000131}, {'diff': 0.00010211099999999848}, {'diff': 0.00010261099999999898}, {'diff': 0.0001030139999999985}, {'diff': 0.00010259699999999941}, {'diff': 0.0001026949999999998...</msg>
<status status="PASS" starttime="20201030 11:52:29.676" endtime="20201030 11:52:29.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.695" level="INFO">${ACCURACY} = {'diff': [0.00010227700000000131, 0.00010211099999999848, 0.00010261099999999898, 0.0001030139999999985, 0.00010259699999999941, 0.00010269499999999987, 0.0001027359999999991, 0.00010238900000000134, ...</msg>
<status status="PASS" starttime="20201030 11:52:29.687" endtime="20201030 11:52:29.695"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.707" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.704" endtime="20201030 11:52:29.707"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.712" level="INFO">VALUE: [0.00010227700000000131, 0.00010211099999999848, 0.00010261099999999898, 0.0001030139999999985, 0.00010259699999999941, 0.00010269499999999987, 0.0001027359999999991, 0.00010238900000000134, 0.00010226399999999775, 0.00010248599999999886, 0.00010258299999999984, 0.00010299999999999893, 0.00010291700000000098, 0.00010244500000000309, 0.00010280600000000042, 0.00010299999999999893, 0.00010215300000000066, 0.00010238899999999787, 0.00010290299999999794, 0.00010280600000000042, 0.00010212499999999805, 0.00010237500000000177, 0.00010241599999999754, 0.00010243100000000005, 0.0001026940000000004, 0.00010283300000000009, 0.00010256999999999974, 0.00010280599999999696, 0.00010277800000000128, 0.0001026810000000003, 0.00010266600000000126, 0.00010290199999999847, 0.00010287500000000227, 0.00010211099999999848, 0.0001020550000000002, 0.0001021939999999999, 0.00010261099999999898, 0.00010226400000000122, 0.00010245799999999972, 0.00010225000000000165, 0.00010267999999999736, 0.00010215300000000066, 0.00010233299999999959, 0.00010266600000000126, 0.0001021939999999999, 0.00010276399999999825, 0.00010205599999999967, 0.00010218099999999633, 0.00010245799999999972, 0.00010288900000000184]</msg>
<status status="PASS" starttime="20201030 11:52:29.709" endtime="20201030 11:52:29.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.697" endtime="20201030 11:52:29.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.732" endtime="20201030 11:52:29.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.721" endtime="20201030 11:52:29.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.718" endtime="20201030 11:52:29.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.235" endtime="20201030 11:52:29.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.234" endtime="20201030 11:52:29.757"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.781" endtime="20201030 11:52:29.805"></status>
</kw>
<msg timestamp="20201030 11:52:29.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.778" endtime="20201030 11:52:29.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.808" endtime="20201030 11:52:29.813"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.815" endtime="20201030 11:52:29.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.770" endtime="20201030 11:52:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.764" endtime="20201030 11:52:29.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.840" endtime="20201030 11:52:30.197"></status>
</kw>
<msg timestamp="20201030 11:52:30.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043498472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043602014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.837" endtime="20201030 11:52:30.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043498472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043602014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.207" endtime="20201030 11:52:30.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.227" endtime="20201030 11:52:30.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.829" endtime="20201030 11:52:30.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.824" endtime="20201030 11:52:30.234"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.245" level="INFO">${RESULT} = [{'diff': 0.00010354199999999814}, {'diff': 0.00010374999999999968}, {'diff': 0.00010344500000000062}, {'diff': 0.00010380599999999796}, {'diff': 0.0001035559999999977}, {'diff': 0.0001036810000000013...</msg>
<status status="PASS" starttime="20201030 11:52:30.236" endtime="20201030 11:52:30.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.256" level="INFO">${ACCURACY} = {'diff': [0.00010354199999999814, 0.00010374999999999968, 0.00010344500000000062, 0.00010380599999999796, 0.0001035559999999977, 0.0001036810000000013, 0.00010311200000000242, 0.00010359699999999694, ...</msg>
<status status="PASS" starttime="20201030 11:52:30.247" endtime="20201030 11:52:30.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.267" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.265" endtime="20201030 11:52:30.268"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.273" level="INFO">VALUE: [0.00010354199999999814, 0.00010374999999999968, 0.00010344500000000062, 0.00010380599999999796, 0.0001035559999999977, 0.0001036810000000013, 0.00010311200000000242, 0.00010359699999999694, 0.00010345800000000072, 0.00010345800000000072, 0.00010387500000000327, 0.00010322200000000004, 0.00010313900000000209, 0.0001038339999999971, 0.0001031810000000008, 0.00010320899999999994, 0.00010343000000000158, 0.00010402699999999959, 0.00010320800000000047, 0.00010372200000000054, 0.00010356900000000474, 0.00010393000000000208, 0.000103513999999999, 0.00010399999999999993, 0.00010395900000000069, 0.00010366600000000226, 0.00010326399999999875, 0.00010393000000000208, 0.00010331899999999755, 0.00010356999999999728, 0.00010379199999999839, 0.00010319399999999396, 0.00010380599999999796, 0.00010312500000000252, 0.00010362499999999608, 0.000103416000000002, 0.00010392999999999514, 0.00010349999999999943, 0.00010311099999999601, 0.00010347199999999335, 0.00010313900000000209, 0.00010388900000000284, 0.00010312500000000252, 0.00010337499999999583, 0.00010306999999999678, 0.00010370800000000097, 0.0001036810000000013, 0.00010365200000000269, 0.00010394400000000165, 0.00010365300000000216]</msg>
<status status="PASS" starttime="20201030 11:52:30.270" endtime="20201030 11:52:30.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.258" endtime="20201030 11:52:30.276"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.286" endtime="20201030 11:52:30.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.282" endtime="20201030 11:52:30.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.279" endtime="20201030 11:52:30.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.760" endtime="20201030 11:52:30.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.758" endtime="20201030 11:52:30.312"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.336" endtime="20201030 11:52:30.359"></status>
</kw>
<msg timestamp="20201030 11:52:30.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.333" endtime="20201030 11:52:30.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.367" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.363" endtime="20201030 11:52:30.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.370" endtime="20201030 11:52:30.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.325" endtime="20201030 11:52:30.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.319" endtime="20201030 11:52:30.377"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.395" endtime="20201030 11:52:30.753"></status>
</kw>
<msg timestamp="20201030 11:52:30.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043267722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.391" endtime="20201030 11:52:30.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043163486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043267722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.762" endtime="20201030 11:52:30.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.782" endtime="20201030 11:52:30.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.383" endtime="20201030 11:52:30.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.378" endtime="20201030 11:52:30.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.800" level="INFO">${RESULT} = [{'diff': 0.0001042360000000006}, {'diff': 0.0001048889999999969}, {'diff': 0.00010409700000000438}, {'diff': 0.00010450000000000043}, {'diff': 0.00010491700000000298}, {'diff': 0.00010477700000000034...</msg>
<status status="PASS" starttime="20201030 11:52:30.791" endtime="20201030 11:52:30.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.811" level="INFO">${ACCURACY} = {'diff': [0.0001042360000000006, 0.0001048889999999969, 0.00010409700000000438, 0.00010450000000000043, 0.00010491700000000298, 0.00010477700000000034, 0.00010447300000000076, 0.00010417999999999539, ...</msg>
<status status="PASS" starttime="20201030 11:52:30.802" endtime="20201030 11:52:30.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.823" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.821" endtime="20201030 11:52:30.824"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.829" level="INFO">VALUE: [0.0001042360000000006, 0.0001048889999999969, 0.00010409700000000438, 0.00010450000000000043, 0.00010491700000000298, 0.00010477700000000034, 0.00010447300000000076, 0.00010417999999999539, 0.00010481900000000599, 0.00010466600000000326, 0.00010505500000000667, 0.00010486099999999776, 0.00010468099999999536, 0.00010411099999999701, 0.00010500000000000093, 0.00010477700000000034, 0.00010494500000000212, 0.00010490200000000394, 0.00010479199999999939, 0.00010494399999999571, 0.00010431999999999803, 0.00010445800000000172, 0.00010437500000000377, 0.00010458300000000531, 0.00010458399999999785, 0.00010472300000000101, 0.00010455499999999923, 0.00010431899999999855, 0.00010455499999999923, 0.0001050140000000005, 0.0001042360000000006, 0.00010505600000000614, 0.00010484700000000513, 0.00010450000000000043, 0.00010409699999999744, 0.00010431900000000549, 0.00010504199999999964, 0.00010491599999999657, 0.00010459799999999742, 0.00010411100000000395, 0.0001046940000000024, 0.00010483299999999862, 0.0001048060000000059, 0.00010490300000000341, 0.00010420900000000094, 0.00010480599999999896, 0.00010465300000000316, 0.000104901999999997, 0.0001045689999999988, 0.00010425000000000018]</msg>
<status status="PASS" starttime="20201030 11:52:30.825" endtime="20201030 11:52:30.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.813" endtime="20201030 11:52:30.832"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.842" endtime="20201030 11:52:30.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.838" endtime="20201030 11:52:30.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.835" endtime="20201030 11:52:30.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.314" endtime="20201030 11:52:30.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.313" endtime="20201030 11:52:30.868"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.892" endtime="20201030 11:52:30.916"></status>
</kw>
<msg timestamp="20201030 11:52:30.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.889" endtime="20201030 11:52:30.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.925" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.920" endtime="20201030 11:52:30.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.927" endtime="20201030 11:52:30.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.881" endtime="20201030 11:52:30.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.875" endtime="20201030 11:52:30.935"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.954" endtime="20201030 11:52:31.315"></status>
</kw>
<msg timestamp="20201030 11:52:31.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043394625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.950" endtime="20201030 11:52:31.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043394625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043499847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.325" endtime="20201030 11:52:31.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.344" endtime="20201030 11:52:31.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.942" endtime="20201030 11:52:31.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.937" endtime="20201030 11:52:31.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:31.362" level="INFO">${RESULT} = [{'diff': 0.00010522200000000204}, {'diff': 0.00010527800000000032}, {'diff': 0.0001053889999999974}, {'diff': 0.00010601399999999456}, {'diff': 0.00010593099999999661}, {'diff': 0.0001059030000000044...</msg>
<status status="PASS" starttime="20201030 11:52:31.353" endtime="20201030 11:52:31.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:31.372" level="INFO">${ACCURACY} = {'diff': [0.00010522200000000204, 0.00010527800000000032, 0.0001053889999999974, 0.00010601399999999456, 0.00010593099999999661, 0.00010590300000000441, 0.0001058889999999979, 0.000105514000000001, 0....</msg>
<status status="PASS" starttime="20201030 11:52:31.364" endtime="20201030 11:52:31.372"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.383" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:31.381" endtime="20201030 11:52:31.384"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.389" level="INFO">VALUE: [0.00010522200000000204, 0.00010527800000000032, 0.0001053889999999974, 0.00010601399999999456, 0.00010593099999999661, 0.00010590300000000441, 0.0001058889999999979, 0.000105514000000001, 0.00010591699999999704, 0.00010604100000000116, 0.00010541599999999707, 0.00010517999999999639, 0.00010570900000000244, 0.00010584699999999919, 0.00010594499999999618, 0.00010545899999999525, 0.00010594500000000312, 0.00010569500000000287, 0.00010572300000000201, 0.00010570800000000297, 0.00010537499999999783, 0.00010548599999999492, 0.0001060140000000015, 0.00010526400000000075, 0.00010581900000000005, 0.00010537499999999783, 0.00010526400000000075, 0.00010590299999999747, 0.00010531899999999955, 0.0001058889999999979, 0.00010591599999999757, 0.00010552800000000057, 0.00010613799999999868, 0.00010563899999999765, 0.00010531899999999955, 0.00010559699999999894, 0.00010554200000000014, 0.00010559799999999842, 0.00010573599999999517, 0.00010511099999999801, 0.00010590200000000494, 0.0001052219999999951, 0.000105514000000001, 0.0001058889999999979, 0.00010533299999999912, 0.0001051810000000028, 0.00010588900000000484, 0.00010527800000000032, 0.0001051940000000029, 0.00010604100000000116]</msg>
<status status="PASS" starttime="20201030 11:52:31.386" endtime="20201030 11:52:31.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.374" endtime="20201030 11:52:31.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:31.468" endtime="20201030 11:52:31.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.463" endtime="20201030 11:52:31.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.460" endtime="20201030 11:52:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.870" endtime="20201030 11:52:31.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.869" endtime="20201030 11:52:31.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.006" endtime="20201030 11:52:31.494"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:36.864" endtime="20201030 11:52:31.497" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:31.516" endtime="20201030 11:52:31.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.512" endtime="20201030 11:52:31.540"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.578" endtime="20201030 11:52:31.603"></status>
</kw>
<msg timestamp="20201030 11:52:31.605" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.574" endtime="20201030 11:52:31.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.612" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.607" endtime="20201030 11:52:31.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.619" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:31.614" endtime="20201030 11:52:31.619"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:31.566" endtime="20201030 11:52:31.621"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:31.559" endtime="20201030 11:52:31.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.556" endtime="20201030 11:52:31.624"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:31.632" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:31.631" endtime="20201030 11:52:31.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.626" endtime="20201030 11:52:31.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.553" endtime="20201030 11:52:31.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.551" endtime="20201030 11:52:31.634"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.636" endtime="20201030 11:52:31.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.547" endtime="20201030 11:52:31.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.542" endtime="20201030 11:52:31.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.509" endtime="20201030 11:52:31.644"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.671" endtime="20201030 11:52:31.689"></status>
</kw>
<msg timestamp="20201030 11:52:31.691" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.668" endtime="20201030 11:52:31.691"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.698" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.693" endtime="20201030 11:52:31.699"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.701" endtime="20201030 11:52:31.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.660" endtime="20201030 11:52:31.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.653" endtime="20201030 11:52:31.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.726" endtime="20201030 11:52:32.097"></status>
</kw>
<msg timestamp="20201030 11:52:32.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148328625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14833375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:31.722" endtime="20201030 11:52:32.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.148328625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.14833375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:32.107" endtime="20201030 11:52:32.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.127" endtime="20201030 11:52:32.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.715" endtime="20201030 11:52:32.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.710" endtime="20201030 11:52:32.134"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:32.145" level="INFO">${RESULT} = [{'diff': 5.124999999994717e-06}, {'diff': 5.167000000000366e-06}, {'diff': 5.695000000000006e-06}, {'diff': 6.19400000001491e-06}, {'diff': 6.167000000001366e-06}, {'diff': 5.680000000007901e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:32.136" endtime="20201030 11:52:32.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:32.155" level="INFO">${ACCURACY} = {'diff': [5.124999999994717e-06, 5.167000000000366e-06, 5.695000000000006e-06, 6.19400000001491e-06, 6.167000000001366e-06, 5.680000000007901e-06, 5.138999999987348e-06, 5.166000000000892e-06, 5.18099...</msg>
<status status="PASS" starttime="20201030 11:52:32.147" endtime="20201030 11:52:32.155"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.167" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:52:32.164" endtime="20201030 11:52:32.167"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.172" level="INFO">VALUE: [5.124999999994717e-06, 5.167000000000366e-06, 5.695000000000006e-06, 6.19400000001491e-06, 6.167000000001366e-06, 5.680000000007901e-06, 5.138999999987348e-06, 5.166000000000892e-06, 5.180999999992997e-06, 6.167000000001366e-06, 5.639000000001726e-06, 5.681000000007375e-06, 5.167000000000366e-06, 5.208000000006541e-06, 5.680000000007901e-06, 5.695000000000006e-06, 5.652999999994357e-06, 5.695000000000006e-06, 5.195000000013383e-06, 5.680000000007901e-06, 5.651999999994883e-06, 5.179999999993523e-06, 6.222000000000172e-06, 5.179999999993523e-06, 5.152000000008261e-06, 5.666999999986988e-06, 5.680000000007901e-06, 5.180999999992997e-06, 5.680999999979619e-06, 5.639000000001726e-06, 5.181000000020752e-06, 5.667000000014744e-06, 6.166000000001892e-06, 5.193999999986154e-06, 5.0969999999816995e-06, 6.179999999994523e-06, 5.652999999994357e-06, 5.167000000000366e-06, 5.681000000007375e-06, 5.652999999994357e-06, 5.180000000021279e-06, 6.179999999994523e-06, 5.179999999993523e-06, 5.597000000023833e-06, 5.694000000000532e-06, 5.667000000014744e-06, 5.181000000020752e-06, 5.180999999992997e-06, 5.651999999994883e-06, 5.63899999997397e-06]</msg>
<status status="PASS" starttime="20201030 11:52:32.169" endtime="20201030 11:52:32.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.157" endtime="20201030 11:52:32.175"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.185" endtime="20201030 11:52:32.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.180" endtime="20201030 11:52:32.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.178" endtime="20201030 11:52:32.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.649" endtime="20201030 11:52:32.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.648" endtime="20201030 11:52:32.210"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.563" endtime="20201030 11:52:32.583"></status>
</kw>
<msg timestamp="20201030 11:52:32.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.231" endtime="20201030 11:52:32.585"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.591" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.587" endtime="20201030 11:52:32.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.594" endtime="20201030 11:52:32.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.223" endtime="20201030 11:52:32.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.217" endtime="20201030 11:52:32.602"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.619" endtime="20201030 11:52:32.990"></status>
</kw>
<msg timestamp="20201030 11:52:32.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.373436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.373443361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.616" endtime="20201030 11:52:32.998"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.373436681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.373443361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.000" endtime="20201030 11:52:33.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.021" endtime="20201030 11:52:33.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.608" endtime="20201030 11:52:33.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.603" endtime="20201030 11:52:33.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.039" level="INFO">${RESULT} = [{'diff': 6.6799999999811455e-06}, {'diff': 6.180999999993997e-06}, {'diff': 6.708999999993637e-06}, {'diff': 6.139000000016104e-06}, {'diff': 7.16699999997461e-06}, {'diff': 6.250000000040945e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:33.030" endtime="20201030 11:52:33.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.049" level="INFO">${ACCURACY} = {'diff': [6.6799999999811455e-06, 6.180999999993997e-06, 6.708999999993637e-06, 6.139000000016104e-06, 7.16699999997461e-06, 6.250000000040945e-06, 6.180999999993997e-06, 6.667000000015744e-06, 6.6810...</msg>
<status status="PASS" starttime="20201030 11:52:33.042" endtime="20201030 11:52:33.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.061" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.059" endtime="20201030 11:52:33.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.067" level="INFO">VALUE: [6.6799999999811455e-06, 6.180999999993997e-06, 6.708999999993637e-06, 6.139000000016104e-06, 7.16699999997461e-06, 6.250000000040945e-06, 6.180999999993997e-06, 6.667000000015744e-06, 6.681000000008375e-06, 6.180000000022279e-06, 6.180999999993997e-06, 6.167000000001366e-06, 6.6799999999811455e-06, 6.167000000001366e-06, 6.6799999999811455e-06, 6.681000000008375e-06, 6.165999999974137e-06, 6.681000000008375e-06, 7.1810000000227525e-06, 6.167000000001366e-06, 6.695000000001006e-06, 6.167000000001366e-06, 6.667000000015744e-06, 6.667000000015744e-06, 7.179999999995523e-06, 6.681000000008375e-06, 6.6659999999885144e-06, 6.222000000000172e-06, 6.179999999966768e-06, 6.152000000037017e-06, 6.180000000022279e-06, 6.6529999999676015e-06, 6.166000000029648e-06, 6.6809999999528635e-06, 6.667000000015744e-06, 6.6659999999885144e-06, 6.625000000037851e-06, 6.180999999993997e-06, 6.6799999999811455e-06, 6.167000000001366e-06, 6.181000000049508e-06, 6.694000000029288e-06, 6.19400000001491e-06, 6.695000000001006e-06, 6.667000000015744e-06, 6.681000000008375e-06, 6.72200000001455e-06, 6.19400000001491e-06, 6.249999999985434e-06, 6.680000000036657e-06]</msg>
<status status="PASS" starttime="20201030 11:52:33.064" endtime="20201030 11:52:33.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.051" endtime="20201030 11:52:33.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.081" endtime="20201030 11:52:33.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.075" endtime="20201030 11:52:33.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.072" endtime="20201030 11:52:33.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.213" endtime="20201030 11:52:33.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.211" endtime="20201030 11:52:33.107"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.132" endtime="20201030 11:52:33.151"></status>
</kw>
<msg timestamp="20201030 11:52:33.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.128" endtime="20201030 11:52:33.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.155" endtime="20201030 11:52:33.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.161" endtime="20201030 11:52:33.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.121" endtime="20201030 11:52:33.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.114" endtime="20201030 11:52:33.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.186" endtime="20201030 11:52:33.543"></status>
</kw>
<msg timestamp="20201030 11:52:33.550" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044313444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.183" endtime="20201030 11:52:33.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044313444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044320625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.553" endtime="20201030 11:52:33.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.572" endtime="20201030 11:52:33.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.175" endtime="20201030 11:52:33.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.170" endtime="20201030 11:52:33.580"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.591" level="INFO">${RESULT} = [{'diff': 7.181000000001936e-06}, {'diff': 7.181000000001936e-06}, {'diff': 7.582999999998508e-06}, {'diff': 7.681000000002436e-06}, {'diff': 7.681000000002436e-06}, {'diff': 7.681000000002436e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:33.581" endtime="20201030 11:52:33.591"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.602" level="INFO">${ACCURACY} = {'diff': [7.181000000001936e-06, 7.181000000001936e-06, 7.582999999998508e-06, 7.681000000002436e-06, 7.681000000002436e-06, 7.681000000002436e-06, 8.181000000002936e-06, 8.250000000001312e-06, 7.1669...</msg>
<status status="PASS" starttime="20201030 11:52:33.593" endtime="20201030 11:52:33.603"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.614" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.611" endtime="20201030 11:52:33.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.620" level="INFO">VALUE: [7.181000000001936e-06, 7.181000000001936e-06, 7.582999999998508e-06, 7.681000000002436e-06, 7.681000000002436e-06, 7.681000000002436e-06, 8.181000000002936e-06, 8.250000000001312e-06, 7.166999999995427e-06, 7.667000000002866e-06, 7.679999999996023e-06, 8.179999999996523e-06, 7.680999999995497e-06, 7.653000000003296e-06, 8.181000000002936e-06, 7.680000000002962e-06, 7.166000000002892e-06, 7.665999999996453e-06, 7.208000000001602e-06, 7.166999999995427e-06, 7.666999999995927e-06, 7.167000000002366e-06, 7.153000000002796e-06, 7.166999999995427e-06, 7.153000000002796e-06, 7.167000000002366e-06, 7.667000000002866e-06, 7.222000000001172e-06, 7.181000000001936e-06, 7.666999999995927e-06, 7.667000000002866e-06, 7.1519999999963835e-06, 8.166999999996427e-06, 7.680999999995497e-06, 7.167000000002366e-06, 8.151999999997384e-06, 7.652999999996357e-06, 7.679999999996023e-06, 7.679999999996023e-06, 7.680000000002962e-06, 7.180000000002462e-06, 7.582999999998508e-06, 7.736000000001242e-06, 7.167000000002366e-06, 7.680999999995497e-06, 7.181000000001936e-06, 7.653000000003296e-06, 7.208000000001602e-06, 7.165999999995953e-06, 8.208000000002602e-06]</msg>
<status status="PASS" starttime="20201030 11:52:33.616" endtime="20201030 11:52:33.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.604" endtime="20201030 11:52:33.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.633" endtime="20201030 11:52:33.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.628" endtime="20201030 11:52:33.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.625" endtime="20201030 11:52:33.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.109" endtime="20201030 11:52:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.108" endtime="20201030 11:52:33.659"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.684" endtime="20201030 11:52:33.702"></status>
</kw>
<msg timestamp="20201030 11:52:33.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.680" endtime="20201030 11:52:33.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.710" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.706" endtime="20201030 11:52:33.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.713" endtime="20201030 11:52:33.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.673" endtime="20201030 11:52:33.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.667" endtime="20201030 11:52:33.720"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.738" endtime="20201030 11:52:34.097"></status>
</kw>
<msg timestamp="20201030 11:52:34.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043765792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.734" endtime="20201030 11:52:34.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043757597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043765792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.108" endtime="20201030 11:52:34.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.131" endtime="20201030 11:52:34.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.726" endtime="20201030 11:52:34.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.721" endtime="20201030 11:52:34.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.149" level="INFO">${RESULT} = [{'diff': 8.194999999995567e-06}, {'diff': 8.666999999996927e-06}, {'diff': 8.166999999996427e-06}, {'diff': 8.179999999996523e-06}, {'diff': 8.666999999996927e-06}, {'diff': 9.181000000003936e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:34.140" endtime="20201030 11:52:34.150"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.161" level="INFO">${ACCURACY} = {'diff': [8.194999999995567e-06, 8.666999999996927e-06, 8.166999999996427e-06, 8.179999999996523e-06, 8.666999999996927e-06, 9.181000000003936e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.1800...</msg>
<status status="PASS" starttime="20201030 11:52:34.152" endtime="20201030 11:52:34.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.173" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.171" endtime="20201030 11:52:34.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.179" level="INFO">VALUE: [8.194999999995567e-06, 8.666999999996927e-06, 8.166999999996427e-06, 8.179999999996523e-06, 8.666999999996927e-06, 9.181000000003936e-06, 8.166999999996427e-06, 8.180000000003462e-06, 8.180000000003462e-06, 8.180000000003462e-06, 8.110999999998147e-06, 8.138999999997287e-06, 8.666000000004392e-06, 8.693999999996593e-06, 8.193999999996093e-06, 8.680999999996497e-06, 8.179999999996523e-06, 8.152999999996857e-06, 8.166999999996427e-06, 8.681000000003436e-06, 8.624999999998217e-06, 8.152000000004322e-06, 8.764000000001382e-06, 8.152999999996857e-06, 8.180000000003462e-06, 8.667000000003866e-06, 8.181000000002936e-06, 8.723000000002146e-06, 8.236000000001742e-06, 8.667000000003866e-06, 8.167000000003366e-06, 8.167000000003366e-06, 8.681000000003436e-06, 8.693999999996593e-06, 8.666999999996927e-06, 8.180000000003462e-06, 8.222000000002172e-06, 8.680000000003962e-06, 8.679999999997023e-06, 8.180000000003462e-06, 8.665999999997454e-06, 8.652999999997357e-06, 8.722000000002672e-06, 8.179999999996523e-06, 8.166999999996427e-06, 8.653000000004296e-06, 8.166999999996427e-06, 8.181000000002936e-06, 8.180000000003462e-06, 8.152999999996857e-06]</msg>
<status status="PASS" starttime="20201030 11:52:34.176" endtime="20201030 11:52:34.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.163" endtime="20201030 11:52:34.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.192" endtime="20201030 11:52:34.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.188" endtime="20201030 11:52:34.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.185" endtime="20201030 11:52:34.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.662" endtime="20201030 11:52:34.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.660" endtime="20201030 11:52:34.218"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.243" endtime="20201030 11:52:34.261"></status>
</kw>
<msg timestamp="20201030 11:52:34.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.239" endtime="20201030 11:52:34.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.265" endtime="20201030 11:52:34.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.271" endtime="20201030 11:52:34.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.232" endtime="20201030 11:52:34.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.225" endtime="20201030 11:52:34.279"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.296" endtime="20201030 11:52:34.660"></status>
</kw>
<msg timestamp="20201030 11:52:34.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.293" endtime="20201030 11:52:34.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043925639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043935319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.670" endtime="20201030 11:52:34.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.690" endtime="20201030 11:52:34.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.285" endtime="20201030 11:52:34.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.280" endtime="20201030 11:52:34.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.708" level="INFO">${RESULT} = [{'diff': 9.679999999998024e-06}, {'diff': 9.181000000003936e-06}, {'diff': 9.693999999997593e-06}, {'diff': 9.624999999999218e-06}, {'diff': 9.179999999997523e-06}, {'diff': 9.680999999997497e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:34.699" endtime="20201030 11:52:34.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.719" level="INFO">${ACCURACY} = {'diff': [9.679999999998024e-06, 9.181000000003936e-06, 9.693999999997593e-06, 9.624999999999218e-06, 9.179999999997523e-06, 9.680999999997497e-06, 9.124999999998717e-06, 9.666999999997927e-06, 9.1669...</msg>
<status status="PASS" starttime="20201030 11:52:34.711" endtime="20201030 11:52:34.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.731" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.728" endtime="20201030 11:52:34.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.737" level="INFO">VALUE: [9.679999999998024e-06, 9.181000000003936e-06, 9.693999999997593e-06, 9.624999999999218e-06, 9.179999999997523e-06, 9.680999999997497e-06, 9.124999999998717e-06, 9.666999999997927e-06, 9.166999999997427e-06, 9.165999999997954e-06, 9.166000000004892e-06, 9.165999999997954e-06, 9.652999999998357e-06, 9.638999999998787e-06, 9.694000000004532e-06, 9.708000000004102e-06, 9.681000000004436e-06, 9.153000000004796e-06, 9.652999999998357e-06, 9.180000000004462e-06, 9.152000000005323e-06, 9.195000000003506e-06, 9.166000000004892e-06, 1.0166999999998427e-05, 9.152999999997857e-06, 9.193999999997093e-06, 9.679999999998024e-06, 9.667000000004866e-06, 1.0193999999998093e-05, 9.138999999998287e-06, 9.679999999998024e-06, 9.166999999997427e-06, 9.681000000004436e-06, 9.179999999997523e-06, 9.181000000003936e-06, 9.695000000004006e-06, 9.179999999997523e-06, 9.666999999997927e-06, 9.666999999997927e-06, 9.666999999997927e-06, 9.667000000004866e-06, 9.166999999997427e-06, 9.667000000004866e-06, 9.638999999998787e-06, 9.652999999998357e-06, 9.666999999997927e-06, 9.180999999996997e-06, 9.651999999998884e-06, 9.610999999999648e-06, 9.179999999997523e-06]</msg>
<status status="PASS" starttime="20201030 11:52:34.733" endtime="20201030 11:52:34.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.721" endtime="20201030 11:52:34.740"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.750" endtime="20201030 11:52:34.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.745" endtime="20201030 11:52:34.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.743" endtime="20201030 11:52:34.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.220" endtime="20201030 11:52:34.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.219" endtime="20201030 11:52:34.776"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.800" endtime="20201030 11:52:34.821"></status>
</kw>
<msg timestamp="20201030 11:52:34.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.796" endtime="20201030 11:52:34.822"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.828" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.824" endtime="20201030 11:52:34.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.831" endtime="20201030 11:52:34.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.789" endtime="20201030 11:52:34.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.783" endtime="20201030 11:52:34.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.856" endtime="20201030 11:52:35.214"></status>
</kw>
<msg timestamp="20201030 11:52:35.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045288986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045299153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.853" endtime="20201030 11:52:35.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045288986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045299153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.224" endtime="20201030 11:52:35.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.244" endtime="20201030 11:52:35.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.845" endtime="20201030 11:52:35.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.840" endtime="20201030 11:52:35.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.262" level="INFO">${RESULT} = [{'diff': 1.0166999999998427e-05}, {'diff': 1.0165999999998954e-05}, {'diff': 1.0680999999998497e-05}, {'diff': 1.0694999999998067e-05}, {'diff': 1.0679999999999024e-05}, {'diff': 1.0152999999998857e-...</msg>
<status status="PASS" starttime="20201030 11:52:35.253" endtime="20201030 11:52:35.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.272" level="INFO">${ACCURACY} = {'diff': [1.0166999999998427e-05, 1.0165999999998954e-05, 1.0680999999998497e-05, 1.0694999999998067e-05, 1.0679999999999024e-05, 1.0152999999998857e-05, 1.0707999999998163e-05, 1.0179999999998524e-05...</msg>
<status status="PASS" starttime="20201030 11:52:35.264" endtime="20201030 11:52:35.273"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.284" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.282" endtime="20201030 11:52:35.285"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.290" level="INFO">VALUE: [1.0166999999998427e-05, 1.0165999999998954e-05, 1.0680999999998497e-05, 1.0694999999998067e-05, 1.0679999999999024e-05, 1.0152999999998857e-05, 1.0707999999998163e-05, 1.0179999999998524e-05, 1.0665999999999454e-05, 1.0666999999998927e-05, 1.0679999999999024e-05, 1.0638999999999788e-05, 1.0166999999998427e-05, 1.0193999999998093e-05, 1.0195000000004506e-05, 1.0166999999998427e-05, 1.0166999999998427e-05, 1.0651999999999884e-05, 1.0652999999999357e-05, 1.0665999999999454e-05, 1.0166000000005893e-05, 1.1165999999999954e-05, 1.0679999999999024e-05, 1.0179999999998524e-05, 1.1166999999999427e-05, 1.0597999999993613e-05, 1.1139000000000288e-05, 1.0666999999998927e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0721999999997733e-05, 1.0137999999999814e-05, 1.0681000000005436e-05, 1.0651999999999884e-05, 1.0179999999998524e-05, 1.0665999999999454e-05, 1.1180999999998997e-05, 1.0166999999998427e-05, 1.0625000000000218e-05, 1.0679999999999024e-05, 1.0165999999998954e-05, 1.0680999999998497e-05, 1.0652999999999357e-05, 1.0179999999998524e-05, 1.0179999999998524e-05, 1.0166999999998427e-05, 1.0680999999998497e-05, 1.0666999999998927e-05, 1.0167000000005366e-05, 1.0679999999999024e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.287" endtime="20201030 11:52:35.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.274" endtime="20201030 11:52:35.293"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.309" endtime="20201030 11:52:35.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.299" endtime="20201030 11:52:35.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.296" endtime="20201030 11:52:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.778" endtime="20201030 11:52:35.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.777" endtime="20201030 11:52:35.335"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.359" endtime="20201030 11:52:35.377"></status>
</kw>
<msg timestamp="20201030 11:52:35.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.356" endtime="20201030 11:52:35.379"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.381" endtime="20201030 11:52:35.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.388" endtime="20201030 11:52:35.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.348" endtime="20201030 11:52:35.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.342" endtime="20201030 11:52:35.395"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.412" endtime="20201030 11:52:35.768"></status>
</kw>
<msg timestamp="20201030 11:52:35.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043017819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043028986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.409" endtime="20201030 11:52:35.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043017819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043028986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.778" endtime="20201030 11:52:35.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.797" endtime="20201030 11:52:35.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.401" endtime="20201030 11:52:35.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.396" endtime="20201030 11:52:35.805"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.816" level="INFO">${RESULT} = [{'diff': 1.1166999999999427e-05}, {'diff': 1.1680999999999497e-05}, {'diff': 1.1194999999998567e-05}, {'diff': 1.1693999999999594e-05}, {'diff': 1.1693999999999594e-05}, {'diff': 1.2194000000000094e-...</msg>
<status status="PASS" starttime="20201030 11:52:35.806" endtime="20201030 11:52:35.816"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.827" level="INFO">${ACCURACY} = {'diff': [1.1166999999999427e-05, 1.1680999999999497e-05, 1.1194999999998567e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.2194000000000094e-05, 1.1680999999999497e-05, 1.1625000000001218e-05...</msg>
<status status="PASS" starttime="20201030 11:52:35.818" endtime="20201030 11:52:35.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.839" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.837" endtime="20201030 11:52:35.840"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.845" level="INFO">VALUE: [1.1166999999999427e-05, 1.1680999999999497e-05, 1.1194999999998567e-05, 1.1693999999999594e-05, 1.1693999999999594e-05, 1.2194000000000094e-05, 1.1680999999999497e-05, 1.1625000000001218e-05, 1.1693999999999594e-05, 1.1680999999999497e-05, 1.1653000000000358e-05, 1.1194999999998567e-05, 1.1250000000004312e-05, 1.2152000000001384e-05, 1.1209000000005076e-05, 1.1680999999999497e-05, 1.1639000000000788e-05, 1.1666999999999927e-05, 1.1152999999999857e-05, 1.1179999999999524e-05, 1.1166999999999427e-05, 1.1693999999999594e-05, 1.1694999999999067e-05, 1.1708999999998637e-05, 1.1179999999999524e-05, 1.1180999999998997e-05, 1.1194000000006032e-05, 1.1236000000004742e-05, 1.2111000000002148e-05, 1.1666999999999927e-05, 1.1680000000000024e-05, 1.2166000000000954e-05, 1.1180999999998997e-05, 1.1165999999999954e-05, 1.1680999999999497e-05, 1.1194999999998567e-05, 1.1152999999999857e-05, 1.1680999999999497e-05, 1.2180000000000524e-05, 1.1680000000000024e-05, 1.1666999999999927e-05, 1.1680000000000024e-05, 1.2167000000000427e-05, 1.1180999999998997e-05, 1.2180999999999997e-05, 1.2194999999999567e-05, 1.1152999999999857e-05, 1.1166999999999427e-05, 1.1721999999998733e-05, 1.1193999999999094e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.842" endtime="20201030 11:52:35.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.829" endtime="20201030 11:52:35.848"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.858" endtime="20201030 11:52:35.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.854" endtime="20201030 11:52:35.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.851" endtime="20201030 11:52:35.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.337" endtime="20201030 11:52:35.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.336" endtime="20201030 11:52:35.884"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.908" endtime="20201030 11:52:35.927"></status>
</kw>
<msg timestamp="20201030 11:52:35.928" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.905" endtime="20201030 11:52:35.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.931" endtime="20201030 11:52:35.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.937" endtime="20201030 11:52:35.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.897" endtime="20201030 11:52:35.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.891" endtime="20201030 11:52:35.945"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.962" endtime="20201030 11:52:36.321"></status>
</kw>
<msg timestamp="20201030 11:52:36.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043718569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.959" endtime="20201030 11:52:36.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.349" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043705903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043718569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.332" endtime="20201030 11:52:36.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.351" endtime="20201030 11:52:36.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.951" endtime="20201030 11:52:36.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.946" endtime="20201030 11:52:36.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.370" level="INFO">${RESULT} = [{'diff': 1.2666000000001454e-05}, {'diff': 1.2167000000000427e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2235999999998803e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2180000000000524e-...</msg>
<status status="PASS" starttime="20201030 11:52:36.360" endtime="20201030 11:52:36.370"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.382" level="INFO">${ACCURACY} = {'diff': [1.2666000000001454e-05, 1.2167000000000427e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2194000000000094e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2194999999999567e-05...</msg>
<status status="PASS" starttime="20201030 11:52:36.372" endtime="20201030 11:52:36.382"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.393" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.391" endtime="20201030 11:52:36.394"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.399" level="INFO">VALUE: [1.2666000000001454e-05, 1.2167000000000427e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2194000000000094e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2180999999999997e-05, 1.3166999999994489e-05, 1.2665999999994515e-05, 1.2611000000002648e-05, 1.2180999999999997e-05, 1.2708000000000164e-05, 1.2665999999994515e-05, 1.2139000000001288e-05, 1.2638999999994849e-05, 1.2667000000000928e-05, 1.2625000000002218e-05, 1.3195000000000567e-05, 1.2681000000000497e-05, 1.2666999999993989e-05, 1.2194999999999567e-05, 1.2681000000000497e-05, 1.2208999999999137e-05, 1.2694000000000594e-05, 1.2625000000002218e-05, 1.2167000000000427e-05, 1.2667000000000928e-05, 1.2667000000000928e-05, 1.2167000000000427e-05, 1.2653000000001358e-05, 1.2166000000000954e-05, 1.2167000000000427e-05, 1.2180000000000524e-05, 1.3195000000000567e-05, 1.2179999999993585e-05, 1.2180999999999997e-05, 1.2667000000000928e-05, 1.2167000000000427e-05, 1.2667000000000928e-05, 1.2166000000000954e-05, 1.2735999999999303e-05, 1.2137999999994875e-05, 1.2667000000000928e-05, 1.2651999999994945e-05, 1.2665999999994515e-05, 1.2681000000000497e-05, 1.2153000000000858e-05, 1.2667000000000928e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.396" endtime="20201030 11:52:36.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.384" endtime="20201030 11:52:36.409"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.419" endtime="20201030 11:52:36.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.414" endtime="20201030 11:52:36.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.412" endtime="20201030 11:52:36.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.886" endtime="20201030 11:52:36.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.885" endtime="20201030 11:52:36.445"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.469" endtime="20201030 11:52:36.488"></status>
</kw>
<msg timestamp="20201030 11:52:36.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.465" endtime="20201030 11:52:36.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.496" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.492" endtime="20201030 11:52:36.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.498" endtime="20201030 11:52:36.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.458" endtime="20201030 11:52:36.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.451" endtime="20201030 11:52:36.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.523" endtime="20201030 11:52:36.884"></status>
</kw>
<msg timestamp="20201030 11:52:36.891" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043542944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043556597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.520" endtime="20201030 11:52:36.892"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043542944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043556597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.894" endtime="20201030 11:52:36.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.913" endtime="20201030 11:52:36.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.512" endtime="20201030 11:52:36.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.507" endtime="20201030 11:52:36.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.932" level="INFO">${RESULT} = [{'diff': 1.3653000000002358e-05}, {'diff': 1.3665999999995515e-05}, {'diff': 1.3179999999994585e-05}, {'diff': 1.3695000000001067e-05}, {'diff': 1.4180000000002524e-05}, {'diff': 1.3624999999996279e-...</msg>
<status status="PASS" starttime="20201030 11:52:36.922" endtime="20201030 11:52:36.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.942" level="INFO">${ACCURACY} = {'diff': [1.3653000000002358e-05, 1.3665999999995515e-05, 1.3179999999994585e-05, 1.3695000000001067e-05, 1.4180000000002524e-05, 1.3624999999996279e-05, 1.3125000000002718e-05, 1.3680999999994559e-05...</msg>
<status status="PASS" starttime="20201030 11:52:36.934" endtime="20201030 11:52:36.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.953" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.951" endtime="20201030 11:52:36.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.959" level="INFO">VALUE: [1.3653000000002358e-05, 1.3665999999995515e-05, 1.3179999999994585e-05, 1.3695000000001067e-05, 1.4180000000002524e-05, 1.3624999999996279e-05, 1.3125000000002718e-05, 1.3680999999994559e-05, 1.3153000000001858e-05, 1.4181000000001998e-05, 1.3693999999994655e-05, 1.3749999999999873e-05, 1.4209000000001137e-05, 1.3637999999996375e-05, 1.3679999999995085e-05, 1.4195000000001567e-05, 1.3195000000000567e-05, 1.3639000000002788e-05, 1.3167000000001428e-05, 1.4179999999995585e-05, 1.3166999999994489e-05, 1.3665999999995515e-05, 1.3666999999994989e-05, 1.3680000000002024e-05, 1.3193999999994155e-05, 1.3249999999999373e-05, 1.3180000000001524e-05, 1.3667000000001928e-05, 1.3680000000002024e-05, 1.3666000000002454e-05, 1.4180999999995059e-05, 1.3665999999995515e-05, 1.3666000000002454e-05, 1.4124999999996779e-05, 1.3222000000000234e-05, 1.3181000000000997e-05, 1.3195000000000567e-05, 1.3181000000000997e-05, 1.3166000000001954e-05, 1.3181000000000997e-05, 1.3681000000001498e-05, 1.3139000000002288e-05, 1.3695000000001067e-05, 1.3694000000001594e-05, 1.4167000000002428e-05, 1.3222000000000234e-05, 1.3181000000000997e-05, 1.3666000000002454e-05, 1.4180000000002524e-05, 1.3667000000001928e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.956" endtime="20201030 11:52:36.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.944" endtime="20201030 11:52:36.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.972" endtime="20201030 11:52:36.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.968" endtime="20201030 11:52:36.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.965" endtime="20201030 11:52:36.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.447" endtime="20201030 11:52:36.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.446" endtime="20201030 11:52:36.998"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.022" endtime="20201030 11:52:37.042"></status>
</kw>
<msg timestamp="20201030 11:52:37.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.019" endtime="20201030 11:52:37.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.046" endtime="20201030 11:52:37.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.052" endtime="20201030 11:52:37.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.011" endtime="20201030 11:52:37.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.005" endtime="20201030 11:52:37.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.079" endtime="20201030 11:52:37.406"></status>
</kw>
<msg timestamp="20201030 11:52:37.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043531222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.076" endtime="20201030 11:52:37.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043531222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043545389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.416" endtime="20201030 11:52:37.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.436" endtime="20201030 11:52:37.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.068" endtime="20201030 11:52:37.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.063" endtime="20201030 11:52:37.443"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.454" level="INFO">${RESULT} = [{'diff': 1.4166999999995489e-05}, {'diff': 1.4695000000002068e-05}, {'diff': 1.4679999999996085e-05}, {'diff': 1.5194000000003094e-05}, {'diff': 1.4680000000003024e-05}, {'diff': 1.4667000000002928e-...</msg>
<status status="PASS" starttime="20201030 11:52:37.444" endtime="20201030 11:52:37.454"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.464" level="INFO">${ACCURACY} = {'diff': [1.4166999999995489e-05, 1.4695000000002068e-05, 1.4679999999996085e-05, 1.5194000000003094e-05, 1.4680000000003024e-05, 1.4667000000002928e-05, 1.4181000000001998e-05, 1.4180000000002524e-05...</msg>
<status status="PASS" starttime="20201030 11:52:37.456" endtime="20201030 11:52:37.464"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.476" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.473" endtime="20201030 11:52:37.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.481" level="INFO">VALUE: [1.4166999999995489e-05, 1.4695000000002068e-05, 1.4679999999996085e-05, 1.5194000000003094e-05, 1.4680000000003024e-05, 1.4667000000002928e-05, 1.4181000000001998e-05, 1.4180000000002524e-05, 1.4652999999996419e-05, 1.4680000000003024e-05, 1.5152000000004384e-05, 1.4667000000002928e-05, 1.4166000000002954e-05, 1.4679999999996085e-05, 1.4624999999997279e-05, 1.4167000000002428e-05, 1.5167000000003428e-05, 1.4195000000001567e-05, 1.4679999999996085e-05, 1.4667000000002928e-05, 1.4750000000000874e-05, 1.5152999999996919e-05, 1.4667000000002928e-05, 1.4680000000003024e-05, 1.4652999999996419e-05, 1.4653000000003358e-05, 1.5195000000002568e-05, 1.4653000000003358e-05, 1.4693999999995655e-05, 1.4180000000002524e-05, 1.5181000000002998e-05, 1.4680000000003024e-05, 1.4693999999995655e-05, 1.4179999999995585e-05, 1.4679999999996085e-05, 1.4680999999995559e-05, 1.4694999999995129e-05, 1.4680000000003024e-05, 1.4750000000000874e-05, 1.4666000000003454e-05, 1.5165999999997015e-05, 1.4181000000001998e-05, 1.4167000000002428e-05, 1.5195000000002568e-05, 1.4667000000002928e-05, 1.4167000000002428e-05, 1.4666999999995989e-05, 1.4653000000003358e-05, 1.4152999999995919e-05, 1.4167000000002428e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.478" endtime="20201030 11:52:37.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.466" endtime="20201030 11:52:37.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.496" endtime="20201030 11:52:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.490" endtime="20201030 11:52:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.488" endtime="20201030 11:52:37.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.000" endtime="20201030 11:52:37.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.999" endtime="20201030 11:52:37.522"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.546" endtime="20201030 11:52:37.565"></status>
</kw>
<msg timestamp="20201030 11:52:37.567" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.543" endtime="20201030 11:52:37.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.569" endtime="20201030 11:52:37.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.576" endtime="20201030 11:52:37.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.535" endtime="20201030 11:52:37.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.529" endtime="20201030 11:52:37.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.601" endtime="20201030 11:52:37.937"></status>
</kw>
<msg timestamp="20201030 11:52:37.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043682806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.597" endtime="20201030 11:52:37.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043667125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043682806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.946" endtime="20201030 11:52:37.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.965" endtime="20201030 11:52:37.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.590" endtime="20201030 11:52:37.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.584" endtime="20201030 11:52:37.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.982" level="INFO">${RESULT} = [{'diff': 1.568099999999656e-05}, {'diff': 1.509699999999864e-05}, {'diff': 1.5653000000004358e-05}, {'diff': 1.566699999999699e-05}, {'diff': 1.5179999999996585e-05}, {'diff': 1.511099999999821e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:37.973" endtime="20201030 11:52:37.982"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.993" level="INFO">${ACCURACY} = {'diff': [1.568099999999656e-05, 1.509699999999864e-05, 1.5653000000004358e-05, 1.566699999999699e-05, 1.5179999999996585e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1.5680000000004024e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:52:37.984" endtime="20201030 11:52:37.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.004" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:52:38.001" endtime="20201030 11:52:38.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.009" level="INFO">VALUE: [1.568099999999656e-05, 1.509699999999864e-05, 1.5653000000004358e-05, 1.566699999999699e-05, 1.5179999999996585e-05, 1.511099999999821e-05, 1.5264000000000943e-05, 1.5680000000004024e-05, 1.5181000000002998e-05, 1.5166999999996489e-05, 1.5679999999997085e-05, 1.5651999999997945e-05, 1.5665999999997515e-05, 1.562499999999828e-05, 1.5667000000003928e-05, 1.5165999999997015e-05, 1.5180999999996059e-05, 1.5166000000003954e-05, 1.5667000000003928e-05, 1.5194000000003094e-05, 1.5193999999996155e-05, 1.5651999999997945e-05, 1.568099999999656e-05, 1.568099999999656e-05, 1.5124999999997779e-05, 1.5151999999997445e-05, 1.5693999999996655e-05, 1.5652000000004884e-05, 1.5236000000001804e-05, 1.5695000000003068e-05, 1.5167000000003428e-05, 1.5722000000002734e-05, 1.5166000000003954e-05, 1.566699999999699e-05, 1.576300000000197e-05, 1.5138999999997349e-05, 1.5167000000003428e-05, 1.5709000000002638e-05, 1.5195000000002568e-05, 1.5667000000003928e-05, 1.5679999999997085e-05, 1.566699999999699e-05, 1.5694000000003594e-05, 1.565299999999742e-05, 1.5681000000003498e-05, 1.5181000000002998e-05, 1.568099999999656e-05, 1.5611999999998183e-05, 1.5665999999997515e-05, 1.5194000000003094e-05]</msg>
<status status="PASS" starttime="20201030 11:52:38.006" endtime="20201030 11:52:38.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.994" endtime="20201030 11:52:38.012"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:38.022" endtime="20201030 11:52:38.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.017" endtime="20201030 11:52:38.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.015" endtime="20201030 11:52:38.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.524" endtime="20201030 11:52:38.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.523" endtime="20201030 11:52:38.046"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.070" endtime="20201030 11:52:38.088"></status>
</kw>
<msg timestamp="20201030 11:52:38.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.067" endtime="20201030 11:52:38.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.091" endtime="20201030 11:52:38.096"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.097" endtime="20201030 11:52:38.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.060" endtime="20201030 11:52:38.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.053" endtime="20201030 11:52:38.104"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.120" endtime="20201030 11:52:38.452"></status>
</kw>
<msg timestamp="20201030 11:52:38.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.117" endtime="20201030 11:52:38.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041779153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041795833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.463" endtime="20201030 11:52:38.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.481" endtime="20201030 11:52:38.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.110" endtime="20201030 11:52:38.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.105" endtime="20201030 11:52:38.488"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:38.498" level="INFO">${RESULT} = [{'diff': 1.6679999999998085e-05}, {'diff': 1.6153000000004858e-05}, {'diff': 1.6179999999997585e-05}, {'diff': 1.615299999999792e-05}, {'diff': 1.6637999999999376e-05}, {'diff': 1.6167000000004428e-0...</msg>
<status status="PASS" starttime="20201030 11:52:38.490" endtime="20201030 11:52:38.499"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:38.510" level="INFO">${ACCURACY} = {'diff': [1.6679999999998085e-05, 1.6153000000004858e-05, 1.6179999999997585e-05, 1.615299999999792e-05, 1.6637999999999376e-05, 1.6167000000004428e-05, 1.615299999999792e-05, 1.6679999999998085e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:38.500" endtime="20201030 11:52:38.510"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.521" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:52:38.518" endtime="20201030 11:52:38.521"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.526" level="INFO">VALUE: [1.6679999999998085e-05, 1.6153000000004858e-05, 1.6179999999997585e-05, 1.615299999999792e-05, 1.6637999999999376e-05, 1.6167000000004428e-05, 1.615299999999792e-05, 1.6679999999998085e-05, 1.616699999999749e-05, 1.6180000000004524e-05, 1.6681000000004498e-05, 1.6667000000004928e-05, 1.6693999999997655e-05, 1.6667000000004928e-05, 1.6695000000004068e-05, 1.6181000000003998e-05, 1.7167000000005428e-05, 1.668099999999756e-05, 1.669499999999713e-05, 1.716699999999849e-05, 1.665299999999842e-05, 1.716699999999849e-05, 1.6679999999998085e-05, 1.6180000000004524e-05, 1.6153000000004858e-05, 1.6665999999998515e-05, 1.666699999999799e-05, 1.6179999999997585e-05, 1.6667000000004928e-05, 1.6167000000004428e-05, 1.6151999999998445e-05, 1.6165999999998015e-05, 1.7165999999999015e-05, 1.616699999999749e-05, 1.6179999999997585e-05, 1.668099999999756e-05, 1.666699999999799e-05, 1.6680000000005024e-05, 1.6165999999998015e-05, 1.666699999999799e-05, 1.6665999999998515e-05, 1.6695000000004068e-05, 1.6167000000004428e-05, 1.665299999999842e-05, 1.6694000000004594e-05, 1.672299999999627e-05, 1.666699999999799e-05, 1.615299999999792e-05, 1.6125000000005718e-05, 1.6679999999998085e-05]</msg>
<status status="PASS" starttime="20201030 11:52:38.523" endtime="20201030 11:52:38.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.511" endtime="20201030 11:52:38.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:38.538" endtime="20201030 11:52:38.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.534" endtime="20201030 11:52:38.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.532" endtime="20201030 11:52:38.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.048" endtime="20201030 11:52:38.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.047" endtime="20201030 11:52:38.563"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.586" endtime="20201030 11:52:38.604"></status>
</kw>
<msg timestamp="20201030 11:52:38.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.582" endtime="20201030 11:52:38.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.607" endtime="20201030 11:52:38.612"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.613" endtime="20201030 11:52:38.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.575" endtime="20201030 11:52:38.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.570" endtime="20201030 11:52:38.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.637" endtime="20201030 11:52:38.973"></status>
</kw>
<msg timestamp="20201030 11:52:38.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040716903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.633" endtime="20201030 11:52:38.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.040716903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040734097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.983" endtime="20201030 11:52:39.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.001" endtime="20201030 11:52:39.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.626" endtime="20201030 11:52:39.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.621" endtime="20201030 11:52:39.008"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.019" level="INFO">${RESULT} = [{'diff': 1.7193999999998155e-05}, {'diff': 1.7693999999998655e-05}, {'diff': 1.818099999999906e-05}, {'diff': 1.7665999999999515e-05}, {'diff': 1.762500000000028e-05}, {'diff': 1.7179999999998585e-05...</msg>
<status status="PASS" starttime="20201030 11:52:39.010" endtime="20201030 11:52:39.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.028" level="INFO">${ACCURACY} = {'diff': [1.7193999999998155e-05, 1.7693999999998655e-05, 1.818099999999906e-05, 1.7665999999999515e-05, 1.762500000000028e-05, 1.7179999999998585e-05, 1.816699999999949e-05, 1.7181000000004998e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:39.021" endtime="20201030 11:52:39.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.039" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.036" endtime="20201030 11:52:39.039"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.044" level="INFO">VALUE: [1.7193999999998155e-05, 1.7693999999998655e-05, 1.818099999999906e-05, 1.7665999999999515e-05, 1.762500000000028e-05, 1.7179999999998585e-05, 1.816699999999949e-05, 1.7181000000004998e-05, 1.762500000000028e-05, 1.763899999999985e-05, 1.715299999999892e-05, 1.8207999999998725e-05, 1.7735999999997365e-05, 1.768099999999856e-05, 1.7180000000005524e-05, 1.7166000000005954e-05, 1.716699999999849e-05, 1.7693999999998655e-05, 1.719499999999763e-05, 1.7665999999999515e-05, 1.712499999999978e-05, 1.7165999999999015e-05, 1.8179999999999585e-05, 1.769499999999813e-05, 1.7250000000003374e-05, 1.715299999999892e-05, 1.716699999999849e-05, 1.716699999999849e-05, 1.766699999999899e-05, 1.716699999999849e-05, 1.761100000000071e-05, 1.763899999999985e-05, 1.712499999999978e-05, 1.8179999999999585e-05, 1.768099999999856e-05, 1.7165999999999015e-05, 1.7151999999999445e-05, 1.716699999999849e-05, 1.7721999999997795e-05, 1.8221999999998295e-05, 1.766699999999899e-05, 1.7153000000005858e-05, 1.762500000000028e-05, 1.769499999999813e-05, 1.7151999999999445e-05, 1.7179999999998585e-05, 1.812500000000078e-05, 1.7722000000004734e-05, 1.768099999999856e-05, 1.7667000000005928e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.041" endtime="20201030 11:52:39.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.030" endtime="20201030 11:52:39.047"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.058" endtime="20201030 11:52:39.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.052" endtime="20201030 11:52:39.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.050" endtime="20201030 11:52:39.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.565" endtime="20201030 11:52:39.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.564" endtime="20201030 11:52:39.083"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.105" endtime="20201030 11:52:39.124"></status>
</kw>
<msg timestamp="20201030 11:52:39.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.102" endtime="20201030 11:52:39.125"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.131" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.127" endtime="20201030 11:52:39.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.133" endtime="20201030 11:52:39.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.095" endtime="20201030 11:52:39.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.089" endtime="20201030 11:52:39.140"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.157" endtime="20201030 11:52:39.492"></status>
</kw>
<msg timestamp="20201030 11:52:39.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04087575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:39.153" endtime="20201030 11:52:39.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04087575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.040894361, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:39.502" endtime="20201030 11:52:39.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.522" endtime="20201030 11:52:39.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.146" endtime="20201030 11:52:39.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.141" endtime="20201030 11:52:39.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.540" level="INFO">${RESULT} = [{'diff': 1.861099999999477e-05}, {'diff': 1.816699999999949e-05}, {'diff': 1.868099999999956e-05}, {'diff': 1.818099999999906e-05}, {'diff': 1.816699999999949e-05}, {'diff': 1.8179999999999585e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:39.531" endtime="20201030 11:52:39.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.550" level="INFO">${ACCURACY} = {'diff': [1.861099999999477e-05, 1.816699999999949e-05, 1.868099999999956e-05, 1.818099999999906e-05, 1.816699999999949e-05, 1.8179999999999585e-05, 1.8707999999999225e-05, 1.9166000000001016e-05, 1.8...</msg>
<status status="PASS" starttime="20201030 11:52:39.542" endtime="20201030 11:52:39.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.562" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.559" endtime="20201030 11:52:39.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.568" level="INFO">VALUE: [1.861099999999477e-05, 1.816699999999949e-05, 1.868099999999956e-05, 1.818099999999906e-05, 1.816699999999949e-05, 1.8179999999999585e-05, 1.8707999999999225e-05, 1.9166000000001016e-05, 1.8680000000000085e-05, 1.8166000000000015e-05, 1.8680000000000085e-05, 1.8707999999999225e-05, 1.8181000000005998e-05, 1.816699999999949e-05, 1.8680000000000085e-05, 1.816699999999949e-05, 1.8693999999999655e-05, 1.922299999999877e-05, 1.866699999999999e-05, 1.868099999999956e-05, 1.8707999999999225e-05, 1.862499999999434e-05, 1.816699999999949e-05, 1.8193999999999155e-05, 1.8680000000000085e-05, 1.8179999999999585e-05, 1.868099999999956e-05, 1.816699999999949e-05, 1.8680000000000085e-05, 1.8693999999999655e-05, 1.818099999999906e-05, 1.866699999999999e-05, 1.816699999999949e-05, 1.818099999999906e-05, 1.819499999999863e-05, 1.866699999999999e-05, 1.8179999999999585e-05, 1.8679999999993147e-05, 1.868099999999956e-05, 1.913900000000135e-05, 1.868099999999956e-05, 1.8680000000000085e-05, 1.8693999999999655e-05, 1.866699999999999e-05, 1.8181000000005998e-05, 1.8666000000000516e-05, 1.868099999999956e-05, 1.863900000000085e-05, 1.869499999999913e-05, 1.818099999999906e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.564" endtime="20201030 11:52:39.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.552" endtime="20201030 11:52:39.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.582" endtime="20201030 11:52:39.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.576" endtime="20201030 11:52:39.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.574" endtime="20201030 11:52:39.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.085" endtime="20201030 11:52:39.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.083" endtime="20201030 11:52:39.608"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.633" endtime="20201030 11:52:39.652"></status>
</kw>
<msg timestamp="20201030 11:52:39.654" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.629" endtime="20201030 11:52:39.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.656" endtime="20201030 11:52:39.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.663" endtime="20201030 11:52:39.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.621" endtime="20201030 11:52:39.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.615" endtime="20201030 11:52:39.670"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.688" endtime="20201030 11:52:40.045"></status>
</kw>
<msg timestamp="20201030 11:52:40.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044807542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.685" endtime="20201030 11:52:40.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044787861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044807542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.055" endtime="20201030 11:52:40.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.075" endtime="20201030 11:52:40.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.677" endtime="20201030 11:52:40.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.672" endtime="20201030 11:52:40.082"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.093" level="INFO">${RESULT} = [{'diff': 1.968100000000056e-05}, {'diff': 1.965300000000142e-05}, {'diff': 1.9679999999994147e-05}, {'diff': 1.9665999999994577e-05}, {'diff': 1.918100000000006e-05}, {'diff': 1.9221999999999295e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:40.084" endtime="20201030 11:52:40.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.105" level="INFO">${ACCURACY} = {'diff': [1.968100000000056e-05, 1.965300000000142e-05, 1.9679999999994147e-05, 1.9665999999994577e-05, 1.918100000000006e-05, 1.9221999999999295e-05, 1.9166000000001016e-05, 1.9680000000001086e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:40.095" endtime="20201030 11:52:40.105"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.116" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.114" endtime="20201030 11:52:40.117"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.122" level="INFO">VALUE: [1.968100000000056e-05, 1.965300000000142e-05, 1.9679999999994147e-05, 1.9665999999994577e-05, 1.918100000000006e-05, 1.9221999999999295e-05, 1.9166000000001016e-05, 1.9680000000001086e-05, 1.918100000000006e-05, 1.918100000000006e-05, 1.968100000000056e-05, 1.9693999999993717e-05, 1.966699999999405e-05, 1.97089999999997e-05, 1.9694000000000655e-05, 1.916700000000049e-05, 1.9666000000001516e-05, 1.9680000000001086e-05, 1.916700000000049e-05, 1.916699999999355e-05, 1.9180000000000585e-05, 1.9166000000001016e-05, 1.9708000000000225e-05, 1.9666000000001516e-05, 1.913900000000135e-05, 1.92089999999992e-05, 1.963900000000185e-05, 1.966700000000099e-05, 1.913900000000135e-05, 1.92089999999992e-05, 1.9263999999998005e-05, 1.9680000000001086e-05, 1.9166000000001016e-05, 1.968100000000056e-05, 1.9694000000000655e-05, 1.9194000000000155e-05, 1.968100000000056e-05, 1.918100000000006e-05, 1.966700000000099e-05, 1.916700000000049e-05, 1.9180000000000585e-05, 2.018099999999412e-05, 2.02090000000002e-05, 1.915299999999398e-05, 1.9166000000001016e-05, 1.9736000000006304e-05, 2.018100000000106e-05, 1.916700000000049e-05, 1.9708000000000225e-05, 1.912500000000178e-05]</msg>
<status status="PASS" starttime="20201030 11:52:40.119" endtime="20201030 11:52:40.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.107" endtime="20201030 11:52:40.125"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.135" endtime="20201030 11:52:40.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.131" endtime="20201030 11:52:40.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.128" endtime="20201030 11:52:40.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.610" endtime="20201030 11:52:40.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.609" endtime="20201030 11:52:40.161"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.185" endtime="20201030 11:52:40.204"></status>
</kw>
<msg timestamp="20201030 11:52:40.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.182" endtime="20201030 11:52:40.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.211" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.207" endtime="20201030 11:52:40.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.214" endtime="20201030 11:52:40.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.174" endtime="20201030 11:52:40.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.168" endtime="20201030 11:52:40.221"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.240" endtime="20201030 11:52:40.598"></status>
</kw>
<msg timestamp="20201030 11:52:40.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043428292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.236" endtime="20201030 11:52:40.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043428292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.608" endtime="20201030 11:52:40.622"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.623" endtime="20201030 11:52:40.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.228" endtime="20201030 11:52:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.223" endtime="20201030 11:52:40.626"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.631" level="INFO">${RESULT} = [{'diff': 2.016700000000149e-05}, {'diff': 2.016700000000149e-05}, {'diff': 2.063900000000285e-05}, {'diff': 2.015300000000192e-05}, {'diff': 2.0708000000001225e-05}, {'diff': 2.015299999999498e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:40.627" endtime="20201030 11:52:40.631"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.639" level="INFO">${ACCURACY} = {'diff': [2.016700000000149e-05, 2.016700000000149e-05, 2.063900000000285e-05, 2.015300000000192e-05, 2.0708000000001225e-05, 2.015299999999498e-05, 2.066700000000199e-05, 2.0680000000002086e-05, 2.11...</msg>
<status status="PASS" starttime="20201030 11:52:40.632" endtime="20201030 11:52:40.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.645" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.643" endtime="20201030 11:52:40.645"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.647" level="INFO">VALUE: [2.016700000000149e-05, 2.016700000000149e-05, 2.063900000000285e-05, 2.015300000000192e-05, 2.0708000000001225e-05, 2.015299999999498e-05, 2.066700000000199e-05, 2.0680000000002086e-05, 2.1194000000002156e-05, 2.066700000000199e-05, 2.0179999999994647e-05, 2.05969999999972e-05, 2.0680000000002086e-05, 2.069499999999419e-05, 2.065299999999548e-05, 2.063900000000285e-05, 2.016700000000149e-05, 2.0679999999995147e-05, 2.0694000000001656e-05, 2.0680000000002086e-05, 2.069500000000113e-05, 2.069500000000113e-05, 2.065300000000242e-05, 2.019500000000063e-05, 2.018100000000106e-05, 2.015300000000192e-05, 2.0193999999994217e-05, 2.0194000000001155e-05, 2.015299999999498e-05, 2.016700000000149e-05, 2.0235999999999865e-05, 2.011100000000321e-05, 2.065300000000242e-05, 2.018100000000106e-05, 2.016700000000149e-05, 2.0680000000002086e-05, 2.0679999999995147e-05, 2.113899999999641e-05, 2.065300000000242e-05, 2.018099999999412e-05, 2.016700000000149e-05, 2.068100000000156e-05, 2.068100000000156e-05, 2.016700000000149e-05, 2.0612000000003183e-05, 2.0679999999995147e-05, 2.0166000000002016e-05, 2.0166000000002016e-05, 2.063900000000285e-05, 2.066699999999505e-05]</msg>
<status status="PASS" starttime="20201030 11:52:40.646" endtime="20201030 11:52:40.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.640" endtime="20201030 11:52:40.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.653" endtime="20201030 11:52:40.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.651" endtime="20201030 11:52:40.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.650" endtime="20201030 11:52:40.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.163" endtime="20201030 11:52:40.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.162" endtime="20201030 11:52:40.674"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.686" endtime="20201030 11:52:40.700"></status>
</kw>
<msg timestamp="20201030 11:52:40.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.684" endtime="20201030 11:52:40.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.702" endtime="20201030 11:52:40.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.705" endtime="20201030 11:52:40.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.680" endtime="20201030 11:52:40.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.678" endtime="20201030 11:52:40.709"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.717" endtime="20201030 11:52:41.027"></status>
</kw>
<msg timestamp="20201030 11:52:41.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.715" endtime="20201030 11:52:41.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024951292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024972972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.037" endtime="20201030 11:52:41.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.057" endtime="20201030 11:52:41.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.712" endtime="20201030 11:52:41.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.709" endtime="20201030 11:52:41.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.075" level="INFO">${RESULT} = [{'diff': 2.1679999999999616e-05}, {'diff': 2.168099999999909e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.116699999999902e-05}, {'diff': 2.218100000000306e-05}, {'diff': 2.1736000000001365e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:41.066" endtime="20201030 11:52:41.076"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.085" level="INFO">${ACCURACY} = {'diff': [2.1679999999999616e-05, 2.168099999999909e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.218100000000306e-05, 2.1736000000001365e-05, 2.169499999999866e-05, 2.1666000000000046e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 11:52:41.077" endtime="20201030 11:52:41.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.097" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.094" endtime="20201030 11:52:41.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.102" level="INFO">VALUE: [2.1679999999999616e-05, 2.168099999999909e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.218100000000306e-05, 2.1736000000001365e-05, 2.169499999999866e-05, 2.1666000000000046e-05, 2.1679999999999616e-05, 2.116699999999902e-05, 2.218099999999959e-05, 2.118100000000206e-05, 2.166699999999952e-05, 2.112500000000031e-05, 2.169500000000213e-05, 2.166699999999952e-05, 2.166699999999952e-05, 2.12090000000012e-05, 2.166699999999952e-05, 2.116699999999902e-05, 2.165299999999995e-05, 2.116699999999902e-05, 2.116699999999902e-05, 2.1679999999999616e-05, 2.165299999999995e-05, 2.1179999999999116e-05, 2.1165999999999546e-05, 2.1693999999999186e-05, 2.115299999999945e-05, 2.166699999999952e-05, 2.165299999999995e-05, 2.1708000000002226e-05, 2.2180000000000116e-05, 2.118100000000206e-05, 2.1179999999999116e-05, 2.1250000000000435e-05, 2.218099999999959e-05, 2.1679999999999616e-05, 2.169500000000213e-05, 2.115299999999945e-05, 2.163900000000038e-05, 2.116699999999902e-05, 2.115300000000292e-05, 2.169499999999866e-05, 2.166699999999952e-05, 2.168099999999909e-05, 2.113899999999988e-05, 2.119499999999816e-05, 2.1151999999999976e-05, 2.2180000000000116e-05]</msg>
<status status="PASS" starttime="20201030 11:52:41.099" endtime="20201030 11:52:41.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.087" endtime="20201030 11:52:41.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.116" endtime="20201030 11:52:41.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.111" endtime="20201030 11:52:41.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.108" endtime="20201030 11:52:41.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.676" endtime="20201030 11:52:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.675" endtime="20201030 11:52:41.141"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.166" endtime="20201030 11:52:41.186"></status>
</kw>
<msg timestamp="20201030 11:52:41.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.162" endtime="20201030 11:52:41.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.190" endtime="20201030 11:52:41.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.196" endtime="20201030 11:52:41.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.154" endtime="20201030 11:52:41.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.148" endtime="20201030 11:52:41.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.221" endtime="20201030 11:52:41.579"></status>
</kw>
<msg timestamp="20201030 11:52:41.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045101986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045124681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.218" endtime="20201030 11:52:41.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045101986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045124681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.589" endtime="20201030 11:52:41.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.609" endtime="20201030 11:52:41.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.210" endtime="20201030 11:52:41.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.205" endtime="20201030 11:52:41.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.627" level="INFO">${RESULT} = [{'diff': 2.269500000000313e-05}, {'diff': 2.2166000000004016e-05}, {'diff': 2.216699999999655e-05}, {'diff': 2.2249999999994496e-05}, {'diff': 2.219499999999569e-05}, {'diff': 2.265300000000442e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:41.618" endtime="20201030 11:52:41.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.637" level="INFO">${ACCURACY} = {'diff': [2.269500000000313e-05, 2.2166000000004016e-05, 2.216699999999655e-05, 2.2249999999994496e-05, 2.219499999999569e-05, 2.265300000000442e-05, 2.269499999999619e-05, 2.2680000000004086e-05, 2.2...</msg>
<status status="PASS" starttime="20201030 11:52:41.629" endtime="20201030 11:52:41.638"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.649" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.646" endtime="20201030 11:52:41.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.654" level="INFO">VALUE: [2.269500000000313e-05, 2.2166000000004016e-05, 2.216699999999655e-05, 2.2249999999994496e-05, 2.219499999999569e-05, 2.265300000000442e-05, 2.269499999999619e-05, 2.2680000000004086e-05, 2.216700000000349e-05, 2.2221999999995357e-05, 2.2679999999997147e-05, 2.269500000000313e-05, 2.215299999999698e-05, 2.2665999999997577e-05, 2.2166000000004016e-05, 2.316699999999755e-05, 2.266700000000399e-05, 2.268100000000356e-05, 2.269499999999619e-05, 2.265299999999748e-05, 2.268099999999662e-05, 2.268100000000356e-05, 2.318100000000406e-05, 2.2666000000004516e-05, 2.211099999999827e-05, 2.2680000000004086e-05, 2.2722000000002796e-05, 2.263899999999791e-05, 2.2194000000003156e-05, 2.266699999999705e-05, 2.216700000000349e-05, 2.2680000000004086e-05, 2.216699999999655e-05, 2.268100000000356e-05, 2.2680000000004086e-05, 2.2680000000004086e-05, 2.219500000000263e-05, 2.2665999999997577e-05, 2.219500000000263e-05, 2.268100000000356e-05, 2.3180000000004586e-05, 2.261099999999877e-05, 2.2236000000001865e-05, 2.2193999999996217e-05, 2.219500000000263e-05, 2.2666000000004516e-05, 2.218099999999612e-05, 2.266699999999705e-05, 2.2221999999995357e-05, 2.266699999999705e-05]</msg>
<status status="PASS" starttime="20201030 11:52:41.651" endtime="20201030 11:52:41.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.639" endtime="20201030 11:52:41.664"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.676" endtime="20201030 11:52:41.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.669" endtime="20201030 11:52:41.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.667" endtime="20201030 11:52:41.700"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.143" endtime="20201030 11:52:41.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.142" endtime="20201030 11:52:41.701"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.725" endtime="20201030 11:52:41.745"></status>
</kw>
<msg timestamp="20201030 11:52:41.747" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.722" endtime="20201030 11:52:41.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.749" endtime="20201030 11:52:41.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.755" endtime="20201030 11:52:41.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.714" endtime="20201030 11:52:41.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.708" endtime="20201030 11:52:41.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.781" endtime="20201030 11:52:42.140"></status>
</kw>
<msg timestamp="20201030 11:52:42.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04334825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:41.777" endtime="20201030 11:52:42.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043315583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04334825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:42.150" endtime="20201030 11:52:42.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.169" endtime="20201030 11:52:42.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.769" endtime="20201030 11:52:42.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.764" endtime="20201030 11:52:42.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.188" level="INFO">${RESULT} = [{'diff': 3.266700000000011e-05}, {'diff': 3.286100000000208e-05}, {'diff': 3.3096999999995824e-05}, {'diff': 3.2750000000005e-05}, {'diff': 3.293099999999993e-05}, {'diff': 3.319400000000028e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:42.178" endtime="20201030 11:52:42.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.199" level="INFO">${ACCURACY} = {'diff': [3.266700000000011e-05, 3.286100000000208e-05, 3.3096999999995824e-05, 3.2750000000005e-05, 3.293099999999993e-05, 3.319400000000028e-05, 3.338900000000172e-05, 3.324999999999856e-05, 3.30840...</msg>
<status status="PASS" starttime="20201030 11:52:42.190" endtime="20201030 11:52:42.200"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.211" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.208" endtime="20201030 11:52:42.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.217" level="INFO">VALUE: [3.266700000000011e-05, 3.286100000000208e-05, 3.3096999999995824e-05, 3.2750000000005e-05, 3.293099999999993e-05, 3.319400000000028e-05, 3.338900000000172e-05, 3.324999999999856e-05, 3.308400000000267e-05, 3.348599999999924e-05, 3.35700000000036e-05, 3.3124999999994964e-05, 3.34580000000001e-05, 3.2860999999995144e-05, 3.294400000000003e-05, 3.3624999999995464e-05, 3.311100000000233e-05, 3.29579999999996e-05, 3.3526999999998475e-05, 3.320799999999985e-05, 3.334700000000301e-05, 3.302799999999745e-05, 3.294400000000003e-05, 3.297199999999917e-05, 3.348599999999924e-05, 3.279200000000371e-05, 3.299999999999831e-05, 3.2846999999995574e-05, 3.3068999999996684e-05, 3.3445e-05, 3.334700000000301e-05, 3.313900000000147e-05, 3.349999999999881e-05, 3.36250000000024e-05, 3.365300000000154e-05, 3.273599999999849e-05, 3.269499999999925e-05, 3.29449999999995e-05, 3.284700000000251e-05, 3.284799999999505e-05, 3.358300000000369e-05, 3.324999999999856e-05, 3.3110999999995394e-05, 3.347199999999967e-05, 3.284700000000251e-05, 3.3276999999998225e-05, 3.348599999999924e-05, 3.302799999999745e-05, 3.347199999999967e-05, 3.32779999999977e-05]</msg>
<status status="PASS" starttime="20201030 11:52:42.213" endtime="20201030 11:52:42.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.201" endtime="20201030 11:52:42.220"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.230" endtime="20201030 11:52:42.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.225" endtime="20201030 11:52:42.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.223" endtime="20201030 11:52:42.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.704" endtime="20201030 11:52:42.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.702" endtime="20201030 11:52:42.256"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.280" endtime="20201030 11:52:42.300"></status>
</kw>
<msg timestamp="20201030 11:52:42.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.276" endtime="20201030 11:52:42.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.308" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.303" endtime="20201030 11:52:42.309"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.310" endtime="20201030 11:52:42.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.269" endtime="20201030 11:52:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.262" endtime="20201030 11:52:42.318"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.337" endtime="20201030 11:52:42.694"></status>
</kw>
<msg timestamp="20201030 11:52:42.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043489153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.333" endtime="20201030 11:52:42.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043489153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043522986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.704" endtime="20201030 11:52:42.722"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.724" endtime="20201030 11:52:42.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.325" endtime="20201030 11:52:42.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.320" endtime="20201030 11:52:42.731"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.742" level="INFO">${RESULT} = [{'diff': 3.3832999999997004e-05}, {'diff': 3.4305000000005303e-05}, {'diff': 3.3860999999996144e-05}, {'diff': 3.46250000000034e-05}, {'diff': 3.383400000000342e-05}, {'diff': 3.3860999999996144e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:42.733" endtime="20201030 11:52:42.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.754" level="INFO">${ACCURACY} = {'diff': [3.3832999999997004e-05, 3.4305000000005303e-05, 3.3860999999996144e-05, 3.46250000000034e-05, 3.383400000000342e-05, 3.3860999999996144e-05, 3.411100000000333e-05, 3.3805000000004803e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:52:42.744" endtime="20201030 11:52:42.755"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.766" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.763" endtime="20201030 11:52:42.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.772" level="INFO">VALUE: [3.3832999999997004e-05, 3.4305000000005303e-05, 3.3860999999996144e-05, 3.46250000000034e-05, 3.383400000000342e-05, 3.3860999999996144e-05, 3.411100000000333e-05, 3.3805000000004803e-05, 3.369399999999384e-05, 3.381999999999691e-05, 3.376400000000557e-05, 3.433400000000392e-05, 3.398599999999974e-05, 3.376399999999863e-05, 3.42779999999987e-05, 3.416700000000161e-05, 3.379199999999777e-05, 3.398599999999974e-05, 3.469400000000178e-05, 3.4402999999995354e-05, 3.383399999999648e-05, 3.402800000000539e-05, 3.447200000000067e-05, 3.436100000000358e-05, 3.46659999999957e-05, 3.419399999999434e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.406999999999716e-05, 3.4416999999994924e-05, 3.413900000000247e-05, 3.444400000000153e-05, 3.430600000000478e-05, 3.3750000000006e-05, 3.406900000000462e-05, 3.440300000000229e-05, 3.4374999999996214e-05, 3.398599999999974e-05, 3.420800000000085e-05, 3.4388999999995784e-05, 3.448600000000024e-05, 3.373599999999949e-05, 3.469400000000178e-05, 3.458399999999723e-05, 3.452799999999895e-05, 3.3888999999995284e-05, 3.418100000000118e-05, 3.374999999999906e-05, 3.368000000000121e-05, 3.4360999999996644e-05]</msg>
<status status="PASS" starttime="20201030 11:52:42.768" endtime="20201030 11:52:42.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.756" endtime="20201030 11:52:42.775"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.785" endtime="20201030 11:52:42.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.780" endtime="20201030 11:52:42.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.778" endtime="20201030 11:52:42.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.258" endtime="20201030 11:52:42.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.257" endtime="20201030 11:52:42.811"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.835" endtime="20201030 11:52:42.855"></status>
</kw>
<msg timestamp="20201030 11:52:42.857" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.831" endtime="20201030 11:52:42.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.859" endtime="20201030 11:52:42.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.866" endtime="20201030 11:52:42.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.824" endtime="20201030 11:52:42.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.817" endtime="20201030 11:52:42.873"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.891" endtime="20201030 11:52:43.249"></status>
</kw>
<msg timestamp="20201030 11:52:43.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:42.887" endtime="20201030 11:52:43.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043731764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0437665, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:43.259" endtime="20201030 11:52:43.277"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.279" endtime="20201030 11:52:43.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.879" endtime="20201030 11:52:43.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.874" endtime="20201030 11:52:43.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.297" level="INFO">${RESULT} = [{'diff': 3.473600000000049e-05}, {'diff': 3.5360999999997644e-05}, {'diff': 3.484700000000451e-05}, {'diff': 3.481999999999791e-05}, {'diff': 3.468100000000168e-05}, {'diff': 3.540300000000329e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:43.288" endtime="20201030 11:52:43.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.307" level="INFO">${ACCURACY} = {'diff': [3.473600000000049e-05, 3.5360999999997644e-05, 3.484700000000451e-05, 3.481999999999791e-05, 3.468100000000168e-05, 3.540300000000329e-05, 3.515300000000304e-05, 3.5110999999997394e-05, 3.52...</msg>
<status status="PASS" starttime="20201030 11:52:43.299" endtime="20201030 11:52:43.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.319" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.316" endtime="20201030 11:52:43.320"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.325" level="INFO">VALUE: [3.473600000000049e-05, 3.5360999999997644e-05, 3.484700000000451e-05, 3.481999999999791e-05, 3.468100000000168e-05, 3.540300000000329e-05, 3.515300000000304e-05, 3.5110999999997394e-05, 3.52779999999997e-05, 3.5194999999994814e-05, 3.519399999999534e-05, 3.486100000000408e-05, 3.555600000000603e-05, 3.47779999999992e-05, 3.529199999999927e-05, 3.541600000000339e-05, 3.46250000000034e-05, 3.475000000000006e-05, 3.515300000000304e-05, 3.472200000000092e-05, 3.515200000000357e-05, 3.518100000000218e-05, 3.479199999999877e-05, 3.502799999999945e-05, 3.5110999999997394e-05, 3.533399999999798e-05, 3.4916999999995424e-05, 3.572199999999498e-05, 3.548600000000124e-05, 3.537500000000415e-05, 3.5374999999997214e-05, 3.468100000000168e-05, 3.476399999999963e-05, 3.47779999999992e-05, 3.4902999999995854e-05, 3.4916999999995424e-05, 3.548600000000124e-05, 3.563799999999756e-05, 3.552799999999995e-05, 3.548700000000071e-05, 3.5554999999999615e-05, 3.473600000000049e-05, 3.544400000000253e-05, 3.494399999999509e-05, 3.5374999999997214e-05, 3.525000000000056e-05, 3.491600000000289e-05, 3.563900000000397e-05, 3.529199999999927e-05, 3.479199999999877e-05]</msg>
<status status="PASS" starttime="20201030 11:52:43.321" endtime="20201030 11:52:43.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.309" endtime="20201030 11:52:43.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.339" endtime="20201030 11:52:43.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.334" endtime="20201030 11:52:43.363"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.331" endtime="20201030 11:52:43.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.813" endtime="20201030 11:52:43.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.812" endtime="20201030 11:52:43.365"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.389" endtime="20201030 11:52:43.412"></status>
</kw>
<msg timestamp="20201030 11:52:43.413" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.386" endtime="20201030 11:52:43.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.415" endtime="20201030 11:52:43.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.422" endtime="20201030 11:52:43.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.378" endtime="20201030 11:52:43.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.372" endtime="20201030 11:52:43.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.447" endtime="20201030 11:52:43.805"></status>
</kw>
<msg timestamp="20201030 11:52:43.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045527903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045564375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.443" endtime="20201030 11:52:43.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045527903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045564375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.815" endtime="20201030 11:52:43.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.835" endtime="20201030 11:52:43.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.436" endtime="20201030 11:52:43.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.431" endtime="20201030 11:52:43.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.853" level="INFO">${RESULT} = [{'diff': 3.647199999999573e-05}, {'diff': 3.59859999999948e-05}, {'diff': 3.5888999999997284e-05}, {'diff': 3.656999999999966e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.665300000000454e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:43.844" endtime="20201030 11:52:43.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.863" level="INFO">${ACCURACY} = {'diff': [3.647199999999573e-05, 3.59859999999948e-05, 3.5888999999997284e-05, 3.656999999999966e-05, 3.59580000000026e-05, 3.665300000000454e-05, 3.5860999999998144e-05, 3.602800000000045e-05, 3.5778...</msg>
<status status="PASS" starttime="20201030 11:52:43.856" endtime="20201030 11:52:43.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.875" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.873" endtime="20201030 11:52:43.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.881" level="INFO">VALUE: [3.647199999999573e-05, 3.59859999999948e-05, 3.5888999999997284e-05, 3.656999999999966e-05, 3.59580000000026e-05, 3.665300000000454e-05, 3.5860999999998144e-05, 3.602800000000045e-05, 3.57780000000002e-05, 3.666700000000411e-05, 3.640300000000429e-05, 3.598600000000174e-05, 3.655600000000009e-05, 3.629200000000027e-05, 3.6388999999997784e-05, 3.573700000000096e-05, 3.586200000000456e-05, 3.568000000000321e-05, 3.648600000000224e-05, 3.6527000000001475e-05, 3.6026999999994036e-05, 3.5832999999999005e-05, 3.6027000000000975e-05, 3.641600000000439e-05, 3.642999999999702e-05, 3.6374999999998214e-05, 3.615300000000404e-05, 3.644399999999659e-05, 3.593000000000346e-05, 3.6402999999997354e-05, 3.6068999999999685e-05, 3.6082999999999255e-05, 3.568100000000268e-05, 3.581999999999891e-05, 3.593100000000293e-05, 3.619500000000275e-05, 3.6110999999998394e-05, 3.5874999999997714e-05, 3.602799999999351e-05, 3.6110999999998394e-05, 3.6388999999997784e-05, 3.623700000000146e-05, 3.611199999999787e-05, 3.6541000000001045e-05, 3.645799999999616e-05, 3.640199999999788e-05, 3.6527000000001475e-05, 3.638900000000472e-05, 3.6526999999994536e-05, 3.6305000000000365e-05]</msg>
<status status="PASS" starttime="20201030 11:52:43.878" endtime="20201030 11:52:43.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.865" endtime="20201030 11:52:43.884"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.896" endtime="20201030 11:52:43.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.890" endtime="20201030 11:52:43.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.887" endtime="20201030 11:52:43.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.367" endtime="20201030 11:52:43.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.366" endtime="20201030 11:52:43.922"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.946" endtime="20201030 11:52:43.966"></status>
</kw>
<msg timestamp="20201030 11:52:43.967" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.942" endtime="20201030 11:52:43.967"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.969" endtime="20201030 11:52:43.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.976" endtime="20201030 11:52:43.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.935" endtime="20201030 11:52:43.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.928" endtime="20201030 11:52:43.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.001" endtime="20201030 11:52:44.317"></status>
</kw>
<msg timestamp="20201030 11:52:44.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043586653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043624333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.997" endtime="20201030 11:52:44.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043586653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043624333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.322" endtime="20201030 11:52:44.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.330" endtime="20201030 11:52:44.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.990" endtime="20201030 11:52:44.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.984" endtime="20201030 11:52:44.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.339" level="INFO">${RESULT} = [{'diff': 3.767999999999827e-05}, {'diff': 3.722200000000342e-05}, {'diff': 3.765199999999913e-05}, {'diff': 3.751399999999544e-05}, {'diff': 3.7347000000000075e-05}, {'diff': 3.7526999999995536e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:44.334" endtime="20201030 11:52:44.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.344" level="INFO">${ACCURACY} = {'diff': [3.767999999999827e-05, 3.722200000000342e-05, 3.765199999999913e-05, 3.751399999999544e-05, 3.7347000000000075e-05, 3.7526999999995536e-05, 3.719399999999734e-05, 3.7402999999998354e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 11:52:44.340" endtime="20201030 11:52:44.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.349" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.348" endtime="20201030 11:52:44.350"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.352" level="INFO">VALUE: [3.767999999999827e-05, 3.722200000000342e-05, 3.765199999999913e-05, 3.751399999999544e-05, 3.7347000000000075e-05, 3.7526999999995536e-05, 3.719399999999734e-05, 3.7402999999998354e-05, 3.6902999999997854e-05, 3.750000000000281e-05, 3.7430999999997494e-05, 3.715300000000504e-05, 3.720900000000332e-05, 3.720799999999691e-05, 3.7458999999996634e-05, 3.7110999999999394e-05, 3.7652999999998604e-05, 3.7541000000002045e-05, 3.707000000000016e-05, 3.697200000000317e-05, 3.697300000000264e-05, 3.6860999999999144e-05, 3.6874999999998714e-05, 3.755599999999415e-05, 3.7027000000001975e-05, 3.700000000000231e-05, 3.690199999999838e-05, 3.6874999999998714e-05, 3.6833000000000005e-05, 3.7374999999999214e-05, 3.736100000000658e-05, 3.748600000000324e-05, 3.7096999999999825e-05, 3.7624999999999464e-05, 3.749999999999587e-05, 3.7110999999999394e-05, 3.752800000000195e-05, 3.729200000000127e-05, 3.7110999999999394e-05, 3.673599999999555e-05, 3.751400000000238e-05, 3.732000000000041e-05, 3.720900000000332e-05, 3.684799999999905e-05, 3.733399999999998e-05, 3.679200000000077e-05, 3.6708999999995884e-05, 3.751400000000238e-05, 3.7638999999999034e-05, 3.7180999999997244e-05]</msg>
<status status="PASS" starttime="20201030 11:52:44.351" endtime="20201030 11:52:44.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.345" endtime="20201030 11:52:44.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.358" endtime="20201030 11:52:44.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.356" endtime="20201030 11:52:44.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.355" endtime="20201030 11:52:44.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.924" endtime="20201030 11:52:44.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.923" endtime="20201030 11:52:44.384"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.408" endtime="20201030 11:52:44.428"></status>
</kw>
<msg timestamp="20201030 11:52:44.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.405" endtime="20201030 11:52:44.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.431" endtime="20201030 11:52:44.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.438" endtime="20201030 11:52:44.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.397" endtime="20201030 11:52:44.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.391" endtime="20201030 11:52:44.445"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.463" endtime="20201030 11:52:44.820"></status>
</kw>
<msg timestamp="20201030 11:52:44.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044001347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.459" endtime="20201030 11:52:44.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043963597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044001347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.830" endtime="20201030 11:52:44.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.850" endtime="20201030 11:52:44.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.452" endtime="20201030 11:52:44.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.447" endtime="20201030 11:52:44.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.868" level="INFO">${RESULT} = [{'diff': 3.775000000000306e-05}, {'diff': 3.827799999999576e-05}, {'diff': 3.8347000000001075e-05}, {'diff': 3.8402999999999354e-05}, {'diff': 3.8319000000001935e-05}, {'diff': 3.830600000000184e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:44.859" endtime="20201030 11:52:44.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.880" level="INFO">${ACCURACY} = {'diff': [3.775000000000306e-05, 3.827799999999576e-05, 3.8347000000001075e-05, 3.8402999999999354e-05, 3.8319000000001935e-05, 3.830600000000184e-05, 3.845900000000457e-05, 3.8069000000001685e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:52:44.870" endtime="20201030 11:52:44.880"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.892" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.889" endtime="20201030 11:52:44.892"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.897" level="INFO">VALUE: [3.775000000000306e-05, 3.827799999999576e-05, 3.8347000000001075e-05, 3.8402999999999354e-05, 3.8319000000001935e-05, 3.830600000000184e-05, 3.845900000000457e-05, 3.8069000000001685e-05, 3.779200000000177e-05, 3.8402999999999354e-05, 3.77780000000022e-05, 3.8361000000000645e-05, 3.824999999999662e-05, 3.83059999999949e-05, 3.8458999999997634e-05, 3.8458999999997634e-05, 3.855600000000209e-05, 3.858400000000123e-05, 3.816600000000614e-05, 3.8027000000002975e-05, 3.769399999999784e-05, 3.800000000000331e-05, 3.847199999999773e-05, 3.8110999999993456e-05, 3.794400000000503e-05, 3.8332999999994566e-05, 3.7861000000000145e-05, 3.851400000000338e-05, 3.776399999999569e-05, 3.8305000000002365e-05, 3.8069000000001685e-05, 3.79580000000046e-05, 3.854200000000252e-05, 3.8416999999998924e-05, 3.852799999999601e-05, 3.8402999999999354e-05, 3.8652999999999604e-05, 3.7944999999997564e-05, 3.790300000000579e-05, 3.802800000000245e-05, 3.852800000000295e-05, 3.782000000000091e-05, 3.8361000000000645e-05, 3.8444999999998064e-05, 3.790199999999938e-05, 3.798600000000374e-05, 3.847199999999773e-05, 3.7861000000000145e-05, 3.8569000000002185e-05, 3.8388999999999784e-05]</msg>
<status status="PASS" starttime="20201030 11:52:44.894" endtime="20201030 11:52:44.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.882" endtime="20201030 11:52:44.901"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.911" endtime="20201030 11:52:44.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.906" endtime="20201030 11:52:44.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.903" endtime="20201030 11:52:44.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.386" endtime="20201030 11:52:44.936"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.385" endtime="20201030 11:52:44.936"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.960" endtime="20201030 11:52:44.980"></status>
</kw>
<msg timestamp="20201030 11:52:44.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.957" endtime="20201030 11:52:44.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.984" endtime="20201030 11:52:44.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.991" endtime="20201030 11:52:44.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.949" endtime="20201030 11:52:44.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.943" endtime="20201030 11:52:44.998"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.016" endtime="20201030 11:52:45.376"></status>
</kw>
<msg timestamp="20201030 11:52:45.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.012" endtime="20201030 11:52:45.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043298306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043337597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.386" endtime="20201030 11:52:45.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.407" endtime="20201030 11:52:45.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.004" endtime="20201030 11:52:45.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.999" endtime="20201030 11:52:45.414"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:45.426" level="INFO">${RESULT} = [{'diff': 3.9290999999996856e-05}, {'diff': 3.8832999999995066e-05}, {'diff': 3.9569000000003185e-05}, {'diff': 3.930600000000284e-05}, {'diff': 3.948600000000524e-05}, {'diff': 3.892999999999952e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:45.416" endtime="20201030 11:52:45.426"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:45.436" level="INFO">${ACCURACY} = {'diff': [3.9290999999996856e-05, 3.8832999999995066e-05, 3.9569000000003185e-05, 3.930600000000284e-05, 3.948600000000524e-05, 3.892999999999952e-05, 3.919400000000628e-05, 3.894399999999909e-05, 3.9...</msg>
<status status="PASS" starttime="20201030 11:52:45.428" endtime="20201030 11:52:45.437"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.448" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:52:45.445" endtime="20201030 11:52:45.449"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.453" level="INFO">VALUE: [3.9290999999996856e-05, 3.8832999999995066e-05, 3.9569000000003185e-05, 3.930600000000284e-05, 3.948600000000524e-05, 3.892999999999952e-05, 3.919400000000628e-05, 3.894399999999909e-05, 3.944399999999959e-05, 3.955599999999615e-05, 3.899999999999737e-05, 3.9389000000000784e-05, 3.904200000000302e-05, 3.9611000000001895e-05, 3.925000000000456e-05, 3.904200000000302e-05, 3.9194999999998814e-05, 3.9597000000002325e-05, 3.873700000000396e-05, 3.879199999999583e-05, 3.9361000000001645e-05, 3.890200000000038e-05, 3.870799999999841e-05, 3.9040999999996606e-05, 3.917999999999977e-05, 3.8777000000003725e-05, 3.9318999999995996e-05, 3.944400000000653e-05, 3.92780000000037e-05, 3.9361000000001645e-05, 3.926399999999719e-05, 3.897199999999823e-05, 3.8902999999999854e-05, 3.94859999999983e-05, 3.9153000000000104e-05, 3.9208999999998384e-05, 3.8902999999999854e-05, 3.947199999999873e-05, 3.9360999999994706e-05, 3.8972999999997704e-05, 3.869500000000525e-05, 3.872300000000439e-05, 3.900000000000431e-05, 3.8680999999998744e-05, 3.951400000000438e-05, 3.8833000000002005e-05, 3.940199999999394e-05, 3.9291000000003795e-05, 3.9360999999994706e-05, 3.9540999999997106e-05]</msg>
<status status="PASS" starttime="20201030 11:52:45.450" endtime="20201030 11:52:45.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.438" endtime="20201030 11:52:45.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:45.467" endtime="20201030 11:52:45.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.462" endtime="20201030 11:52:45.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.460" endtime="20201030 11:52:45.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.939" endtime="20201030 11:52:45.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.937" endtime="20201030 11:52:45.493"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.517" endtime="20201030 11:52:45.543"></status>
</kw>
<msg timestamp="20201030 11:52:45.544" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.513" endtime="20201030 11:52:45.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:45.547" endtime="20201030 11:52:45.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.554" endtime="20201030 11:52:45.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.506" endtime="20201030 11:52:45.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.500" endtime="20201030 11:52:45.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.579" endtime="20201030 11:52:45.940"></status>
</kw>
<msg timestamp="20201030 11:52:45.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049883653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.575" endtime="20201030 11:52:45.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:45.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.049843083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.049883653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:45.950" endtime="20201030 11:52:45.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:45.970" endtime="20201030 11:52:45.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.567" endtime="20201030 11:52:45.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.562" endtime="20201030 11:52:45.978"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:45.989" level="INFO">${RESULT} = [{'diff': 4.056999999999672e-05}, {'diff': 4.0653000000001605e-05}, {'diff': 4.0653000000001605e-05}, {'diff': 3.981999999999597e-05}, {'diff': 4.029200000000427e-05}, {'diff': 3.973700000000496e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:45.979" endtime="20201030 11:52:45.989"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:45.999" level="INFO">${ACCURACY} = {'diff': [4.056999999999672e-05, 4.0653000000001605e-05, 4.0653000000001605e-05, 3.981999999999597e-05, 4.029200000000427e-05, 3.973700000000496e-05, 3.977799999999726e-05, 4.0333000000003505e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 11:52:45.991" endtime="20201030 11:52:45.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.010" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:52:46.008" endtime="20201030 11:52:46.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.016" level="INFO">VALUE: [4.056999999999672e-05, 4.0653000000001605e-05, 4.0653000000001605e-05, 3.981999999999597e-05, 4.029200000000427e-05, 3.973700000000496e-05, 3.977799999999726e-05, 4.0333000000003505e-05, 4.0305000000004365e-05, 3.995799999999966e-05, 4.044400000000059e-05, 4.020799999999991e-05, 4.0375000000002215e-05, 3.9819000000003435e-05, 3.994400000000009e-05, 3.9889000000001285e-05, 3.995799999999966e-05, 3.969399999999984e-05, 4.0583000000003755e-05, 4.0403000000001354e-05, 4.0667000000001174e-05, 4.005599999999665e-05, 4.005600000000359e-05, 3.999999999999837e-05, 4.057000000000366e-05, 4.0389000000001785e-05, 4.004199999999708e-05, 4.0611000000002895e-05, 4.023599999999905e-05, 4.0290999999997856e-05, 4.05980000000028e-05, 4.0554999999997676e-05, 4.0652999999994666e-05, 3.973600000000549e-05, 4.054199999999758e-05, 4.000000000000531e-05, 3.9833000000003005e-05, 3.9832999999996066e-05, 4.0389000000001785e-05, 4.049999999999887e-05, 4.0403000000001354e-05, 3.9875000000001715e-05, 4.0068999999996746e-05, 4.0583000000003755e-05, 4.0125000000001965e-05, 4.02780000000047e-05, 4.026399999999819e-05, 4.0472999999999204e-05, 3.981999999999597e-05, 4.0639000000002035e-05]</msg>
<status status="PASS" starttime="20201030 11:52:46.013" endtime="20201030 11:52:46.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.001" endtime="20201030 11:52:46.020"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:46.031" endtime="20201030 11:52:46.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.025" endtime="20201030 11:52:46.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.022" endtime="20201030 11:52:46.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.495" endtime="20201030 11:52:46.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:45.494" endtime="20201030 11:52:46.057"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.081" endtime="20201030 11:52:46.102"></status>
</kw>
<msg timestamp="20201030 11:52:46.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.078" endtime="20201030 11:52:46.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.110" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.106" endtime="20201030 11:52:46.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.113" endtime="20201030 11:52:46.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.070" endtime="20201030 11:52:46.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.064" endtime="20201030 11:52:46.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.138" endtime="20201030 11:52:46.507"></status>
</kw>
<msg timestamp="20201030 11:52:46.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043574667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.134" endtime="20201030 11:52:46.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.534" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043574667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043615917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.517" endtime="20201030 11:52:46.535"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.537" endtime="20201030 11:52:46.541"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.127" endtime="20201030 11:52:46.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.121" endtime="20201030 11:52:46.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:46.555" level="INFO">${RESULT} = [{'diff': 4.124999999999962e-05}, {'diff': 4.101399999999894e-05}, {'diff': 4.0972999999999704e-05}, {'diff': 4.098600000000674e-05}, {'diff': 4.0875000000002715e-05}, {'diff': 4.0986999999999274e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:46.546" endtime="20201030 11:52:46.556"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:46.567" level="INFO">${ACCURACY} = {'diff': [4.124999999999962e-05, 4.101399999999894e-05, 4.0972999999999704e-05, 4.098600000000674e-05, 4.0875000000002715e-05, 4.0986999999999274e-05, 4.1486999999999774e-05, 4.1374999999996276e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:52:46.557" endtime="20201030 11:52:46.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.578" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:52:46.576" endtime="20201030 11:52:46.579"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.584" level="INFO">VALUE: [4.124999999999962e-05, 4.101399999999894e-05, 4.0972999999999704e-05, 4.098600000000674e-05, 4.0875000000002715e-05, 4.0986999999999274e-05, 4.1486999999999774e-05, 4.1374999999996276e-05, 4.1625000000003465e-05, 4.123600000000005e-05, 4.070800000000041e-05, 4.1360999999996706e-05, 4.1055000000005115e-05, 4.1096999999996886e-05, 4.0875000000002715e-05, 4.1568999999998246e-05, 4.101399999999894e-05, 4.122199999999354e-05, 4.102799999999851e-05, 4.0889000000002285e-05, 4.1610999999996956e-05, 4.1681000000001744e-05, 4.072199999999998e-05, 4.1389000000002785e-05, 4.124999999999962e-05, 4.0903000000001855e-05, 4.079199999999783e-05, 4.161200000000337e-05, 4.083400000000348e-05, 4.127799999999876e-05, 4.1611000000003895e-05, 4.1332999999997566e-05, 4.149999999999987e-05, 4.165199999999619e-05, 4.070800000000041e-05, 4.104199999999808e-05, 4.1166999999994736e-05, 4.119400000000134e-05, 4.094400000000109e-05, 4.154199999999858e-05, 4.0833000000004005e-05, 4.122200000000048e-05, 4.105599999999765e-05, 4.102800000000545e-05, 4.134800000000355e-05, 4.122200000000048e-05, 4.1582999999997816e-05, 4.0861000000003145e-05, 4.152800000000595e-05, 4.141599999999551e-05]</msg>
<status status="PASS" starttime="20201030 11:52:46.581" endtime="20201030 11:52:46.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.569" endtime="20201030 11:52:46.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:46.597" endtime="20201030 11:52:46.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.593" endtime="20201030 11:52:46.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.590" endtime="20201030 11:52:46.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.059" endtime="20201030 11:52:46.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.058" endtime="20201030 11:52:46.623"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.647" endtime="20201030 11:52:46.669"></status>
</kw>
<msg timestamp="20201030 11:52:46.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.644" endtime="20201030 11:52:46.670"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.676" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.672" endtime="20201030 11:52:46.677"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.679" endtime="20201030 11:52:46.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.636" endtime="20201030 11:52:46.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.630" endtime="20201030 11:52:46.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.704" endtime="20201030 11:52:47.073"></status>
</kw>
<msg timestamp="20201030 11:52:47.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044073153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044114889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:46.700" endtime="20201030 11:52:47.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.101" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044073153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044114889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.083" endtime="20201030 11:52:47.102"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.103" endtime="20201030 11:52:47.107"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.693" endtime="20201030 11:52:47.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.688" endtime="20201030 11:52:47.111"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:47.122" level="INFO">${RESULT} = [{'diff': 4.173600000000055e-05}, {'diff': 4.2445000000002064e-05}, {'diff': 4.222199999999454e-05}, {'diff': 4.2445000000002064e-05}, {'diff': 4.231999999999847e-05}, {'diff': 4.23059999999989e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:47.112" endtime="20201030 11:52:47.122"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:47.134" level="INFO">${ACCURACY} = {'diff': [4.173600000000055e-05, 4.2445000000002064e-05, 4.222199999999454e-05, 4.2445000000002064e-05, 4.231999999999847e-05, 4.23059999999989e-05, 4.1709000000000884e-05, 4.231999999999847e-05, 4.22...</msg>
<status status="PASS" starttime="20201030 11:52:47.124" endtime="20201030 11:52:47.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.145" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:52:47.143" endtime="20201030 11:52:47.146"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.151" level="INFO">VALUE: [4.173600000000055e-05, 4.2445000000002064e-05, 4.222199999999454e-05, 4.2445000000002064e-05, 4.231999999999847e-05, 4.23059999999989e-05, 4.1709000000000884e-05, 4.231999999999847e-05, 4.223600000000105e-05, 4.1737000000000024e-05, 4.2082999999998316e-05, 4.215200000000363e-05, 4.223600000000105e-05, 4.2346999999998136e-05, 4.2402999999996416e-05, 4.241600000000345e-05, 4.2554999999999676e-05, 4.2596999999998386e-05, 4.254200000000652e-05, 4.1818999999998496e-05, 4.2138999999996596e-05, 4.1889000000003285e-05, 4.2624999999997526e-05, 4.2416999999995986e-05, 4.1860999999997206e-05, 4.1959000000001134e-05, 4.202799999999951e-05, 4.247200000000173e-05, 4.227799999999976e-05, 4.2124999999997026e-05, 4.256999999999872e-05, 4.225000000000062e-05, 4.227799999999976e-05, 4.2568999999999246e-05, 4.244400000000259e-05, 4.2083000000005255e-05, 4.2096999999997886e-05, 4.1874999999996776e-05, 4.2360999999997706e-05, 4.1846999999997636e-05, 4.195800000000166e-05, 4.169400000000184e-05, 4.227799999999976e-05, 4.194399999999515e-05, 4.2389000000003785e-05, 4.252800000000001e-05, 4.2360999999997706e-05, 4.1902999999995916e-05, 4.206999999999822e-05, 4.1695000000001314e-05]</msg>
<status status="PASS" starttime="20201030 11:52:47.148" endtime="20201030 11:52:47.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.136" endtime="20201030 11:52:47.160"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:47.170" endtime="20201030 11:52:47.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.166" endtime="20201030 11:52:47.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.163" endtime="20201030 11:52:47.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.625" endtime="20201030 11:52:47.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.624" endtime="20201030 11:52:47.196"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.220" endtime="20201030 11:52:47.241"></status>
</kw>
<msg timestamp="20201030 11:52:47.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.217" endtime="20201030 11:52:47.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.249" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.245" endtime="20201030 11:52:47.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.252" endtime="20201030 11:52:47.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.209" endtime="20201030 11:52:47.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.203" endtime="20201030 11:52:47.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.277" endtime="20201030 11:52:47.634"></status>
</kw>
<msg timestamp="20201030 11:52:47.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043676875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043719833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.273" endtime="20201030 11:52:47.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043676875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043719833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.639" endtime="20201030 11:52:47.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.647" endtime="20201030 11:52:47.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.266" endtime="20201030 11:52:47.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.261" endtime="20201030 11:52:47.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:47.656" level="INFO">${RESULT} = [{'diff': 4.295800000000266e-05}, {'diff': 4.365199999999819e-05}, {'diff': 4.326400000000119e-05}, {'diff': 4.3555000000000677e-05}, {'diff': 4.3318999999999996e-05}, {'diff': 4.3569000000000246e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:47.651" endtime="20201030 11:52:47.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:47.660" level="INFO">${ACCURACY} = {'diff': [4.295800000000266e-05, 4.365199999999819e-05, 4.326400000000119e-05, 4.3555000000000677e-05, 4.3318999999999996e-05, 4.3569000000000246e-05, 4.329200000000033e-05, 4.324999999999468e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 11:52:47.657" endtime="20201030 11:52:47.661"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.666" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:52:47.665" endtime="20201030 11:52:47.666"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.669" level="INFO">VALUE: [4.295800000000266e-05, 4.365199999999819e-05, 4.326400000000119e-05, 4.3555000000000677e-05, 4.3318999999999996e-05, 4.3569000000000246e-05, 4.329200000000033e-05, 4.324999999999468e-05, 4.3610999999998956e-05, 4.3388999999997846e-05, 4.3110999999998456e-05, 4.345800000000316e-05, 4.3332999999999566e-05, 4.2709000000001884e-05, 4.29860000000018e-05, 4.327800000000076e-05, 4.29860000000018e-05, 4.3152999999997166e-05, 4.331999999999947e-05, 4.2818999999999496e-05, 4.2945000000002564e-05, 4.277700000000079e-05, 4.2846999999998636e-05, 4.315200000000463e-05, 4.345800000000316e-05, 4.3624999999998526e-05, 4.3596999999999386e-05, 4.3445000000003064e-05, 4.3555000000000677e-05, 4.3167000000003675e-05, 4.344400000000359e-05, 4.3318999999999996e-05, 4.3610999999998956e-05, 4.2667000000003175e-05, 4.3596999999999386e-05, 4.2846999999998636e-05, 4.34860000000023e-05, 4.2888999999997346e-05, 4.3445000000003064e-05, 4.334799999999861e-05, 4.2944999999995626e-05, 4.358399999999929e-05, 4.3541000000001107e-05, 4.332000000000641e-05, 4.2818999999999496e-05, 4.273600000000155e-05, 4.3111000000005395e-05, 4.269400000000284e-05, 4.3041000000000607e-05, 4.345799999999622e-05]</msg>
<status status="PASS" starttime="20201030 11:52:47.667" endtime="20201030 11:52:47.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.661" endtime="20201030 11:52:47.670"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:47.675" endtime="20201030 11:52:47.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.673" endtime="20201030 11:52:47.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.671" endtime="20201030 11:52:47.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.199" endtime="20201030 11:52:47.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.197" endtime="20201030 11:52:47.696"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.711" endtime="20201030 11:52:47.733"></status>
</kw>
<msg timestamp="20201030 11:52:47.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.707" endtime="20201030 11:52:47.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:47.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:47.737" endtime="20201030 11:52:47.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.744" endtime="20201030 11:52:47.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.702" endtime="20201030 11:52:47.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.699" endtime="20201030 11:52:47.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:47.769" endtime="20201030 11:52:48.127"></status>
</kw>
<msg timestamp="20201030 11:52:48.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032336097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032380556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:47.765" endtime="20201030 11:52:48.135"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.032336097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.032380556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.137" endtime="20201030 11:52:48.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.156" endtime="20201030 11:52:48.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.758" endtime="20201030 11:52:48.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.753" endtime="20201030 11:52:48.163"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:48.174" level="INFO">${RESULT} = [{'diff': 4.4458999999996696e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.429200000000133e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.429099999999492e-05}, {'diff': 4.451300000000297e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:48.165" endtime="20201030 11:52:48.175"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:48.185" level="INFO">${ACCURACY} = {'diff': [4.4458999999996696e-05, 4.4610999999999956e-05, 4.429200000000133e-05, 4.4360999999999706e-05, 4.429099999999492e-05, 4.451300000000297e-05, 4.423599999999611e-05, 4.375000000000212e-05, 4.4...</msg>
<status status="PASS" starttime="20201030 11:52:48.177" endtime="20201030 11:52:48.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.196" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:52:48.194" endtime="20201030 11:52:48.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.202" level="INFO">VALUE: [4.4458999999996696e-05, 4.4610999999999956e-05, 4.429200000000133e-05, 4.4360999999999706e-05, 4.429099999999492e-05, 4.451300000000297e-05, 4.423599999999611e-05, 4.375000000000212e-05, 4.45269999999956e-05, 4.397199999999629e-05, 4.41939999999974e-05, 4.4569000000001247e-05, 4.431899999999406e-05, 4.4610999999999956e-05, 4.4374999999999276e-05, 4.4403000000005355e-05, 4.3860999999999206e-05, 4.407000000000022e-05, 4.4096999999999886e-05, 4.3931000000003995e-05, 4.376400000000169e-05, 4.423600000000305e-05, 4.407000000000022e-05, 4.409799999999936e-05, 4.433400000000004e-05, 4.4445000000004065e-05, 4.420800000000391e-05, 4.442999999999808e-05, 4.3833000000000066e-05, 4.394400000000409e-05, 4.4388999999998846e-05, 4.377800000000126e-05, 4.430499999999449e-05, 4.444399999999765e-05, 4.3860999999999206e-05, 4.4152999999998166e-05, 4.432000000000047e-05, 4.4096999999999886e-05, 4.3874999999998776e-05, 4.381999999999997e-05, 4.43060000000009e-05, 4.377800000000126e-05, 4.4124999999999026e-05, 4.4444999999997126e-05, 4.427800000000176e-05, 4.470799999999747e-05, 4.370799999999647e-05, 4.3737000000002024e-05, 4.443000000000502e-05, 4.402700000000204e-05]</msg>
<status status="PASS" starttime="20201030 11:52:48.199" endtime="20201030 11:52:48.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.186" endtime="20201030 11:52:48.205"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:48.217" endtime="20201030 11:52:48.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.211" endtime="20201030 11:52:48.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.208" endtime="20201030 11:52:48.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.697" endtime="20201030 11:52:48.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:47.696" endtime="20201030 11:52:48.243"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.267" endtime="20201030 11:52:48.287"></status>
</kw>
<msg timestamp="20201030 11:52:48.288" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.263" endtime="20201030 11:52:48.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.291" endtime="20201030 11:52:48.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.297" endtime="20201030 11:52:48.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.256" endtime="20201030 11:52:48.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.249" endtime="20201030 11:52:48.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.322" endtime="20201030 11:52:48.680"></status>
</kw>
<msg timestamp="20201030 11:52:48.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04359375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:48.319" endtime="20201030 11:52:48.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043548278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04359375, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:48.690" endtime="20201030 11:52:48.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.710" endtime="20201030 11:52:48.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.311" endtime="20201030 11:52:48.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.306" endtime="20201030 11:52:48.717"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:48.728" level="INFO">${RESULT} = [{'diff': 4.547199999999779e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.4874999999999776e-05}, {'diff': 4.515199999999969e-05}, {'diff': 4.529100000000286e-05}, {'diff': 4.474999999999618e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:48.719" endtime="20201030 11:52:48.729"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:48.740" level="INFO">${ACCURACY} = {'diff': [4.547199999999779e-05, 4.5125000000000026e-05, 4.4874999999999776e-05, 4.515199999999969e-05, 4.529100000000286e-05, 4.474999999999618e-05, 4.526399999999625e-05, 4.548599999999736e-05, 4.49...</msg>
<status status="PASS" starttime="20201030 11:52:48.730" endtime="20201030 11:52:48.740"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.751" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:52:48.749" endtime="20201030 11:52:48.752"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.757" level="INFO">VALUE: [4.547199999999779e-05, 4.5125000000000026e-05, 4.4874999999999776e-05, 4.515199999999969e-05, 4.529100000000286e-05, 4.474999999999618e-05, 4.526399999999625e-05, 4.548599999999736e-05, 4.4930999999998056e-05, 4.4931000000004995e-05, 4.5125000000000026e-05, 4.5402999999999416e-05, 4.480599999999446e-05, 4.4902999999998916e-05, 4.502799999999557e-05, 4.55139999999965e-05, 4.522200000000448e-05, 4.479200000000183e-05, 4.482000000000097e-05, 4.5444999999998126e-05, 4.5375000000000276e-05, 4.5194999999997876e-05, 4.536200000000018e-05, 4.481999999999403e-05, 4.470799999999747e-05, 4.522199999999754e-05, 4.51939999999984e-05, 4.508299999999438e-05, 4.467999999999833e-05, 4.5583000000001817e-05, 4.469400000000484e-05, 4.5431000000005495e-05, 4.542999999999908e-05, 4.473599999999661e-05, 4.544399999999865e-05, 4.531999999999453e-05, 4.4930999999998056e-05, 4.5639000000000096e-05, 4.508400000000079e-05, 4.5361000000000706e-05, 4.5402999999999416e-05, 4.473600000000355e-05, 4.4889000000006285e-05, 4.4916999999998486e-05, 4.475000000000312e-05, 4.477799999999532e-05, 4.500000000000337e-05, 4.494399999999815e-05, 4.5125000000000026e-05, 4.4819000000001497e-05]</msg>
<status status="PASS" starttime="20201030 11:52:48.754" endtime="20201030 11:52:48.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.741" endtime="20201030 11:52:48.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:48.771" endtime="20201030 11:52:48.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.766" endtime="20201030 11:52:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.763" endtime="20201030 11:52:48.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.245" endtime="20201030 11:52:48.796"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.244" endtime="20201030 11:52:48.796"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.820" endtime="20201030 11:52:48.841"></status>
</kw>
<msg timestamp="20201030 11:52:48.842" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.817" endtime="20201030 11:52:48.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.849" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.844" endtime="20201030 11:52:48.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.851" endtime="20201030 11:52:48.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.809" endtime="20201030 11:52:48.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.803" endtime="20201030 11:52:48.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.876" endtime="20201030 11:52:49.233"></status>
</kw>
<msg timestamp="20201030 11:52:49.240" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043331625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043378056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.873" endtime="20201030 11:52:49.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043331625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043378056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.243" endtime="20201030 11:52:49.261"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.262" endtime="20201030 11:52:49.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.865" endtime="20201030 11:52:49.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.860" endtime="20201030 11:52:49.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:49.281" level="INFO">${RESULT} = [{'diff': 4.6430999999999556e-05}, {'diff': 4.657000000000272e-05}, {'diff': 4.651299999999803e-05}, {'diff': 4.579099999999642e-05}, {'diff': 4.627799999999682e-05}, {'diff': 4.601299999999753e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:49.271" endtime="20201030 11:52:49.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:49.292" level="INFO">${ACCURACY} = {'diff': [4.6430999999999556e-05, 4.657000000000272e-05, 4.651299999999803e-05, 4.579099999999642e-05, 4.627799999999682e-05, 4.601299999999753e-05, 4.58190000000025e-05, 4.6111000000001456e-05, 4.612...</msg>
<status status="PASS" starttime="20201030 11:52:49.283" endtime="20201030 11:52:49.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.304" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:52:49.302" endtime="20201030 11:52:49.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.310" level="INFO">VALUE: [4.6430999999999556e-05, 4.657000000000272e-05, 4.651299999999803e-05, 4.579099999999642e-05, 4.627799999999682e-05, 4.601299999999753e-05, 4.58190000000025e-05, 4.6111000000001456e-05, 4.6125000000001026e-05, 4.5847000000001636e-05, 4.609699999999495e-05, 4.6139000000000596e-05, 4.6403000000000416e-05, 4.605600000000265e-05, 4.6403000000000416e-05, 4.5861000000001206e-05, 4.6139000000000596e-05, 4.598599999999786e-05, 4.655600000000315e-05, 4.6111000000001456e-05, 4.58339999999946e-05, 4.6653000000000666e-05, 4.668000000000033e-05, 4.5889000000000346e-05, 4.5694999999998376e-05, 4.604100000000361e-05, 4.5861000000001206e-05, 4.648599999999836e-05, 4.597199999999829e-05, 4.645799999999922e-05, 4.6111000000001456e-05, 4.626399999999725e-05, 4.6583000000002817e-05, 4.647199999999879e-05, 4.6153000000000166e-05, 4.5680999999998806e-05, 4.652800000000401e-05, 4.63469999999952e-05, 4.5875000000000776e-05, 4.6625000000001526e-05, 4.5722999999997516e-05, 4.657000000000272e-05, 4.620799999999897e-05, 4.64860000000053e-05, 4.5708999999997946e-05, 4.607000000000222e-05, 4.629099999999692e-05, 4.665200000000119e-05, 4.627800000000376e-05, 4.622199999999854e-05]</msg>
<status status="PASS" starttime="20201030 11:52:49.307" endtime="20201030 11:52:49.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.294" endtime="20201030 11:52:49.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.323" endtime="20201030 11:52:49.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.319" endtime="20201030 11:52:49.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.316" endtime="20201030 11:52:49.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.799" endtime="20201030 11:52:49.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.797" endtime="20201030 11:52:49.349"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.373" endtime="20201030 11:52:49.393"></status>
</kw>
<msg timestamp="20201030 11:52:49.394" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.370" endtime="20201030 11:52:49.395"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.397" endtime="20201030 11:52:49.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.403" endtime="20201030 11:52:49.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.362" endtime="20201030 11:52:49.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.356" endtime="20201030 11:52:49.411"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.428" endtime="20201030 11:52:49.788"></status>
</kw>
<msg timestamp="20201030 11:52:49.796" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043358069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.425" endtime="20201030 11:52:49.796"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043311056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043358069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.798" endtime="20201030 11:52:49.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.818" endtime="20201030 11:52:49.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.417" endtime="20201030 11:52:49.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.412" endtime="20201030 11:52:49.825"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:49.836" level="INFO">${RESULT} = [{'diff': 4.701299999999853e-05}, {'diff': 4.673599999999861e-05}, {'diff': 4.745800000000022e-05}, {'diff': 4.7597000000003387e-05}, {'diff': 4.673599999999861e-05}, {'diff': 4.683299999999613e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:49.827" endtime="20201030 11:52:49.837"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:49.846" level="INFO">${ACCURACY} = {'diff': [4.701299999999853e-05, 4.673599999999861e-05, 4.745800000000022e-05, 4.7597000000003387e-05, 4.673599999999861e-05, 4.683299999999613e-05, 4.71940000000004e-05, 4.7625000000002526e-05, 4.724...</msg>
<status status="PASS" starttime="20201030 11:52:49.838" endtime="20201030 11:52:49.847"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.858" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:52:49.855" endtime="20201030 11:52:49.859"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.864" level="INFO">VALUE: [4.701299999999853e-05, 4.673599999999861e-05, 4.745800000000022e-05, 4.7597000000003387e-05, 4.673599999999861e-05, 4.683299999999613e-05, 4.71940000000004e-05, 4.7625000000002526e-05, 4.724999999999868e-05, 4.749999999999893e-05, 4.727799999999782e-05, 4.7639000000002096e-05, 4.754199999999764e-05, 4.723599999999911e-05, 4.676399999999775e-05, 4.6944999999999626e-05, 4.7472999999999266e-05, 4.673599999999861e-05, 4.752799999999807e-05, 4.7653000000001666e-05, 4.738899999999491e-05, 4.680499999999699e-05, 4.7611000000002957e-05, 4.702799999999757e-05, 4.745800000000022e-05, 4.6903000000000916e-05, 4.7361000000002706e-05, 4.701400000000494e-05, 4.706900000000375e-05, 4.7403000000001416e-05, 4.698599999999886e-05, 4.6917000000000486e-05, 4.708299999999638e-05, 4.752799999999807e-05, 4.7153000000001166e-05, 4.690200000000144e-05, 4.6958999999999196e-05, 4.6958999999999196e-05, 4.7679999999994394e-05, 4.732000000000347e-05, 4.749999999999893e-05, 4.686099999999527e-05, 4.7389000000001846e-05, 4.693000000000058e-05, 4.712499999999509e-05, 4.679099999999742e-05, 4.726400000000519e-05, 4.7153000000001166e-05, 4.704199999999714e-05, 4.674999999999818e-05]</msg>
<status status="PASS" starttime="20201030 11:52:49.860" endtime="20201030 11:52:49.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.848" endtime="20201030 11:52:49.868"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.877" endtime="20201030 11:52:49.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.873" endtime="20201030 11:52:49.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.870" endtime="20201030 11:52:49.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.351" endtime="20201030 11:52:49.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.350" endtime="20201030 11:52:49.903"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.927" endtime="20201030 11:52:49.949"></status>
</kw>
<msg timestamp="20201030 11:52:49.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.924" endtime="20201030 11:52:49.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.957" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.953" endtime="20201030 11:52:49.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.960" endtime="20201030 11:52:49.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.916" endtime="20201030 11:52:49.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.910" endtime="20201030 11:52:49.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.985" endtime="20201030 11:52:50.342"></status>
</kw>
<msg timestamp="20201030 11:52:50.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045179389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045227958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.981" endtime="20201030 11:52:50.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.369" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045179389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045227958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:50.352" endtime="20201030 11:52:50.370"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.372" endtime="20201030 11:52:50.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.973" endtime="20201030 11:52:50.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.968" endtime="20201030 11:52:50.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:50.390" level="INFO">${RESULT} = [{'diff': 4.856899999999831e-05}, {'diff': 4.7875000000002776e-05}, {'diff': 4.7943999999994213e-05}, {'diff': 4.812499999999609e-05}, {'diff': 4.845800000000122e-05}, {'diff': 4.805499999999824e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:50.381" endtime="20201030 11:52:50.391"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:50.400" level="INFO">${ACCURACY} = {'diff': [4.856899999999831e-05, 4.7875000000002776e-05, 4.7943999999994213e-05, 4.812499999999609e-05, 4.845800000000122e-05, 4.805499999999824e-05, 4.831899999999806e-05, 4.852799999999907e-05, 4.80...</msg>
<status status="PASS" starttime="20201030 11:52:50.392" endtime="20201030 11:52:50.401"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.412" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:52:50.409" endtime="20201030 11:52:50.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.417" level="INFO">VALUE: [4.856899999999831e-05, 4.7875000000002776e-05, 4.7943999999994213e-05, 4.812499999999609e-05, 4.845800000000122e-05, 4.805499999999824e-05, 4.831899999999806e-05, 4.852799999999907e-05, 4.802799999999857e-05, 4.8667000000002236e-05, 4.790299999999498e-05, 4.85139999999995e-05, 4.797200000000029e-05, 4.7945000000000626e-05, 4.779199999999789e-05, 4.7681000000000806e-05, 4.798599999999986e-05, 4.8181000000001306e-05, 4.844400000000165e-05, 4.854099999999917e-05, 4.820800000000097e-05, 4.8179999999994894e-05, 4.786099999999627e-05, 4.798599999999986e-05, 4.7903000000001916e-05, 4.85139999999995e-05, 4.804200000000508e-05, 4.806899999999781e-05, 4.770800000000047e-05, 4.781899999999756e-05, 4.799999999999943e-05, 4.845800000000122e-05, 4.831999999999753e-05, 4.862499999999659e-05, 4.78060000000044e-05, 4.852799999999907e-05, 4.791699999999455e-05, 4.834800000000361e-05, 4.8153000000002166e-05, 4.816600000000226e-05, 4.7875000000002776e-05, 4.783299999999713e-05, 4.8639000000003096e-05, 4.806899999999781e-05, 4.81940000000014e-05, 4.8167000000001736e-05, 4.786099999999627e-05, 4.811099999999652e-05, 4.8667000000002236e-05, 4.799999999999943e-05]</msg>
<status status="PASS" starttime="20201030 11:52:50.414" endtime="20201030 11:52:50.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.402" endtime="20201030 11:52:50.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:50.432" endtime="20201030 11:52:50.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.426" endtime="20201030 11:52:50.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.423" endtime="20201030 11:52:50.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.905" endtime="20201030 11:52:50.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.904" endtime="20201030 11:52:50.458"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.482" endtime="20201030 11:52:50.502"></status>
</kw>
<msg timestamp="20201030 11:52:50.504" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.479" endtime="20201030 11:52:50.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.506" endtime="20201030 11:52:50.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.513" endtime="20201030 11:52:50.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.471" endtime="20201030 11:52:50.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.465" endtime="20201030 11:52:50.520"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.537" endtime="20201030 11:52:50.897"></status>
</kw>
<msg timestamp="20201030 11:52:50.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04346, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043509597, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:50.534" endtime="20201030 11:52:50.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04346, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043509597, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:50.907" endtime="20201030 11:52:50.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.926" endtime="20201030 11:52:50.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.526" endtime="20201030 11:52:50.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.521" endtime="20201030 11:52:50.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:50.944" level="INFO">${RESULT} = [{'diff': 4.959699999999845e-05}, {'diff': 4.8875000000003777e-05}, {'diff': 4.95140000000005e-05}, {'diff': 4.962499999999759e-05}, {'diff': 4.948600000000136e-05}, {'diff': 4.9137999999997184e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:50.936" endtime="20201030 11:52:50.944"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:50.952" level="INFO">${ACCURACY} = {'diff': [4.959699999999845e-05, 4.8875000000003777e-05, 4.95140000000005e-05, 4.962499999999759e-05, 4.948600000000136e-05, 4.9137999999997184e-05, 4.961099999999802e-05, 4.936099999999777e-05, 4.940...</msg>
<status status="PASS" starttime="20201030 11:52:50.945" endtime="20201030 11:52:50.952"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.957" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:52:50.956" endtime="20201030 11:52:50.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:50.960" level="INFO">VALUE: [4.959699999999845e-05, 4.8875000000003777e-05, 4.95140000000005e-05, 4.962499999999759e-05, 4.948600000000136e-05, 4.9137999999997184e-05, 4.961099999999802e-05, 4.936099999999777e-05, 4.9403000000003416e-05, 4.9153000000003166e-05, 4.956999999999878e-05, 4.879099999999942e-05, 4.8987000000000336e-05, 4.944400000000265e-05, 4.931899999999906e-05, 4.872200000000104e-05, 4.943000000000308e-05, 4.888899999999641e-05, 4.893000000000258e-05, 4.931899999999906e-05, 4.912499999999709e-05, 4.952800000000007e-05, 4.881899999999856e-05, 4.9417000000002986e-05, 4.958399999999835e-05, 4.9457999999995284e-05, 4.873600000000061e-05, 4.876399999999975e-05, 4.891699999999555e-05, 4.884700000000464e-05, 4.930599999999896e-05, 4.961199999999749e-05, 4.966600000000376e-05, 4.895800000000172e-05, 4.933299999999863e-05, 4.905499999999924e-05, 4.895800000000172e-05, 4.905599999999871e-05, 4.956999999999878e-05, 4.911099999999752e-05, 4.86940000000019e-05, 4.877799999999932e-05, 4.925000000000068e-05, 4.8693999999994964e-05, 4.952800000000007e-05, 4.929199999999939e-05, 4.950000000000093e-05, 4.8917000000002486e-05, 4.93469999999982e-05, 4.968099999999587e-05]</msg>
<status status="PASS" starttime="20201030 11:52:50.958" endtime="20201030 11:52:50.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.952" endtime="20201030 11:52:50.962"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:50.966" endtime="20201030 11:52:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.964" endtime="20201030 11:52:50.986"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.963" endtime="20201030 11:52:50.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.460" endtime="20201030 11:52:50.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.459" endtime="20201030 11:52:50.987"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:50.998" endtime="20201030 11:52:51.016"></status>
</kw>
<msg timestamp="20201030 11:52:51.017" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:50.997" endtime="20201030 11:52:51.017"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.018" endtime="20201030 11:52:51.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.021" endtime="20201030 11:52:51.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.993" endtime="20201030 11:52:51.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.990" endtime="20201030 11:52:51.024"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.032" endtime="20201030 11:52:51.318"></status>
</kw>
<msg timestamp="20201030 11:52:51.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024893903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.031" endtime="20201030 11:52:51.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.330" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024893903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024944569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.322" endtime="20201030 11:52:51.330"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.331" endtime="20201030 11:52:51.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.027" endtime="20201030 11:52:51.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.025" endtime="20201030 11:52:51.334"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:51.339" level="INFO">${RESULT} = [{'diff': 5.066600000000129e-05}, {'diff': 5.008299999999938e-05}, {'diff': 4.9901999999997504e-05}, {'diff': 4.973600000000161e-05}, {'diff': 5.036100000000224e-05}, {'diff': 5.050000000000193e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:51.335" endtime="20201030 11:52:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:51.345" level="INFO">${ACCURACY} = {'diff': [5.066600000000129e-05, 5.008299999999938e-05, 4.9901999999997504e-05, 4.973600000000161e-05, 5.036100000000224e-05, 5.050000000000193e-05, 5.005599999999971e-05, 4.990300000000045e-05, 5.058...</msg>
<status status="PASS" starttime="20201030 11:52:51.341" endtime="20201030 11:52:51.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.350" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:52:51.349" endtime="20201030 11:52:51.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.353" level="INFO">VALUE: [5.066600000000129e-05, 5.008299999999938e-05, 4.9901999999997504e-05, 4.973600000000161e-05, 5.036100000000224e-05, 5.050000000000193e-05, 5.005599999999971e-05, 4.990300000000045e-05, 5.058299999999988e-05, 4.986099999999827e-05, 5.023599999999864e-05, 4.969499999999891e-05, 5.036100000000224e-05, 5.033400000000257e-05, 4.98339999999986e-05, 5.05279999999976e-05, 4.9695000000002376e-05, 4.979199999999989e-05, 5.0237000000001586e-05, 4.977699999999738e-05, 4.991600000000054e-05, 4.983299999999913e-05, 5.009700000000242e-05, 4.967999999999986e-05, 5.02079999999995e-05, 5.031900000000006e-05, 5.005599999999971e-05, 5.06530000000012e-05, 5.041699999999705e-05, 5.022200000000254e-05, 4.999999999999796e-05, 5.054200000000064e-05, 5.016700000000027e-05, 5.01530000000007e-05, 5.0472999999998797e-05, 5.012500000000156e-05, 5.048599999999889e-05, 5.044499999999966e-05, 5.0014000000001e-05, 5.048599999999889e-05, 5.033299999999963e-05, 4.991600000000054e-05, 5.066600000000129e-05, 5.009700000000242e-05, 5.052800000000107e-05, 5.059699999999945e-05, 5.008299999999938e-05, 5.029200000000039e-05, 5.06669999999973e-05, 5.041700000000052e-05]</msg>
<status status="PASS" starttime="20201030 11:52:51.352" endtime="20201030 11:52:51.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.346" endtime="20201030 11:52:51.355"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:51.359" endtime="20201030 11:52:51.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.357" endtime="20201030 11:52:51.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.356" endtime="20201030 11:52:51.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.988" endtime="20201030 11:52:51.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:50.988" endtime="20201030 11:52:51.380"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.392" endtime="20201030 11:52:51.408"></status>
</kw>
<msg timestamp="20201030 11:52:51.409" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.390" endtime="20201030 11:52:51.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.412" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.410" endtime="20201030 11:52:51.412"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.413" endtime="20201030 11:52:51.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.386" endtime="20201030 11:52:51.416"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.384" endtime="20201030 11:52:51.417"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.425" endtime="20201030 11:52:51.728"></status>
</kw>
<msg timestamp="20201030 11:52:51.736" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025454167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025505486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.423" endtime="20201030 11:52:51.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025454167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025505486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.738" endtime="20201030 11:52:51.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.758" endtime="20201030 11:52:51.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.420" endtime="20201030 11:52:51.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.417" endtime="20201030 11:52:51.765"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:51.776" level="INFO">${RESULT} = [{'diff': 5.131900000000106e-05}, {'diff': 5.143100000000109e-05}, {'diff': 5.161100000000002e-05}, {'diff': 5.102800000000157e-05}, {'diff': 5.08469999999997e-05}, {'diff': 5.145900000000023e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:51.767" endtime="20201030 11:52:51.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:51.786" level="INFO">${ACCURACY} = {'diff': [5.131900000000106e-05, 5.143100000000109e-05, 5.161100000000002e-05, 5.102800000000157e-05, 5.08469999999997e-05, 5.145900000000023e-05, 5.159799999999992e-05, 5.16530000000022e-05, 5.137499...</msg>
<status status="PASS" starttime="20201030 11:52:51.778" endtime="20201030 11:52:51.786"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.797" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:52:51.795" endtime="20201030 11:52:51.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.803" level="INFO">VALUE: [5.131900000000106e-05, 5.143100000000109e-05, 5.161100000000002e-05, 5.102800000000157e-05, 5.08469999999997e-05, 5.145900000000023e-05, 5.159799999999992e-05, 5.16530000000022e-05, 5.137499999999934e-05, 5.14729999999998e-05, 5.118000000000136e-05, 5.11530000000017e-05, 5.133299999999716e-05, 5.1457999999997284e-05, 5.152800000000207e-05, 5.147200000000032e-05, 5.127800000000182e-05, 5.080500000000099e-05, 5.145800000000075e-05, 5.069400000000043e-05, 5.136099999999977e-05, 5.137499999999934e-05, 5.094500000000016e-05, 5.130600000000096e-05, 5.086099999999927e-05, 5.079200000000089e-05, 5.082000000000003e-05, 5.094400000000068e-05, 5.161100000000002e-05, 5.112499999999909e-05, 5.119400000000093e-05, 5.116600000000179e-05, 5.123599999999964e-05, 5.129099999999845e-05, 5.136099999999977e-05, 5.079099999999795e-05, 5.115299999999823e-05, 5.088899999999841e-05, 5.087499999999884e-05, 5.149999999999946e-05, 5.080600000000046e-05, 5.136099999999977e-05, 5.108300000000038e-05, 5.076400000000175e-05, 5.149999999999946e-05, 5.102800000000157e-05, 5.108399999999985e-05, 5.152800000000207e-05, 5.145900000000023e-05, 5.144499999999719e-05]</msg>
<status status="PASS" starttime="20201030 11:52:51.800" endtime="20201030 11:52:51.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.788" endtime="20201030 11:52:51.807"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:51.817" endtime="20201030 11:52:51.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.812" endtime="20201030 11:52:51.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.809" endtime="20201030 11:52:51.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.381" endtime="20201030 11:52:51.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.381" endtime="20201030 11:52:51.842"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.867" endtime="20201030 11:52:51.890"></status>
</kw>
<msg timestamp="20201030 11:52:51.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.863" endtime="20201030 11:52:51.891"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:51.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:51.893" endtime="20201030 11:52:51.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.900" endtime="20201030 11:52:51.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.856" endtime="20201030 11:52:51.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.849" endtime="20201030 11:52:51.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:51.925" endtime="20201030 11:52:52.284"></status>
</kw>
<msg timestamp="20201030 11:52:52.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045545583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045597847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:51.921" endtime="20201030 11:52:52.292"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045545583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045597847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.294" endtime="20201030 11:52:52.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.313" endtime="20201030 11:52:52.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.914" endtime="20201030 11:52:52.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.909" endtime="20201030 11:52:52.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:52.332" level="INFO">${RESULT} = [{'diff': 5.2263999999996313e-05}, {'diff': 5.172200000000404e-05}, {'diff': 5.187499999999984e-05}, {'diff': 5.244499999999819e-05}, {'diff': 5.198600000000386e-05}, {'diff': 5.198600000000386e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:52.322" endtime="20201030 11:52:52.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:52.342" level="INFO">${ACCURACY} = {'diff': [5.2263999999996313e-05, 5.172200000000404e-05, 5.187499999999984e-05, 5.244499999999819e-05, 5.198600000000386e-05, 5.198600000000386e-05, 5.212500000000009e-05, 5.2249999999996743e-05, 5.19...</msg>
<status status="PASS" starttime="20201030 11:52:52.334" endtime="20201030 11:52:52.342"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.353" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:52:52.351" endtime="20201030 11:52:52.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.359" level="INFO">VALUE: [5.2263999999996313e-05, 5.172200000000404e-05, 5.187499999999984e-05, 5.244499999999819e-05, 5.198600000000386e-05, 5.198600000000386e-05, 5.212500000000009e-05, 5.2249999999996743e-05, 5.193099999999812e-05, 5.261100000000102e-05, 5.259799999999398e-05, 5.227799999999588e-05, 5.2249999999996743e-05, 5.202800000000257e-05, 5.202699999999616e-05, 5.1735999999996674e-05, 5.23470000000012e-05, 5.176399999999581e-05, 5.2443999999998714e-05, 5.188899999999941e-05, 5.248600000000436e-05, 5.170800000000447e-05, 5.190299999999898e-05, 5.1971999999997354e-05, 5.181999999999409e-05, 5.230600000000196e-05, 5.187499999999984e-05, 5.172299999999658e-05, 5.2471999999997854e-05, 5.212500000000009e-05, 5.232000000000153e-05, 5.194499999999769e-05, 5.2237000000003586e-05, 5.1735999999996674e-05, 5.212500000000009e-05, 5.233300000000163e-05, 5.258300000000188e-05, 5.215299999999923e-05, 5.212500000000009e-05, 5.23470000000012e-05, 5.21940000000054e-05, 5.258299999999494e-05, 5.1681000000004806e-05, 5.241699999999905e-05, 5.194499999999769e-05, 5.26669999999993e-05, 5.231999999999459e-05, 5.172200000000404e-05, 5.2417000000005987e-05, 5.256999999999484e-05]</msg>
<status status="PASS" starttime="20201030 11:52:52.356" endtime="20201030 11:52:52.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.344" endtime="20201030 11:52:52.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:52.381" endtime="20201030 11:52:52.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.375" endtime="20201030 11:52:52.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.372" endtime="20201030 11:52:52.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.845" endtime="20201030 11:52:52.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:51.843" endtime="20201030 11:52:52.407"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.431" endtime="20201030 11:52:52.451"></status>
</kw>
<msg timestamp="20201030 11:52:52.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.427" endtime="20201030 11:52:52.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.459" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.455" endtime="20201030 11:52:52.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.462" endtime="20201030 11:52:52.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.420" endtime="20201030 11:52:52.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.413" endtime="20201030 11:52:52.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.487" endtime="20201030 11:52:52.847"></status>
</kw>
<msg timestamp="20201030 11:52:52.854" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043346764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.483" endtime="20201030 11:52:52.855"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.874" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043293222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043346764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:52.856" endtime="20201030 11:52:52.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.876" endtime="20201030 11:52:52.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.475" endtime="20201030 11:52:52.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.470" endtime="20201030 11:52:52.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:52.894" level="INFO">${RESULT} = [{'diff': 5.354200000000364e-05}, {'diff': 5.3499999999997994e-05}, {'diff': 5.365300000000073e-05}, {'diff': 5.345899999999876e-05}, {'diff': 5.362500000000159e-05}, {'diff': 5.355600000000321e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:52.885" endtime="20201030 11:52:52.895"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:52.906" level="INFO">${ACCURACY} = {'diff': [5.354200000000364e-05, 5.3499999999997994e-05, 5.365300000000073e-05, 5.345899999999876e-05, 5.362500000000159e-05, 5.355600000000321e-05, 5.34869999999979e-05, 5.279100000000342e-05, 5.3249...</msg>
<status status="PASS" starttime="20201030 11:52:52.897" endtime="20201030 11:52:52.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.918" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:52:52.915" endtime="20201030 11:52:52.918"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.923" level="INFO">VALUE: [5.354200000000364e-05, 5.3499999999997994e-05, 5.365300000000073e-05, 5.345899999999876e-05, 5.362500000000159e-05, 5.355600000000321e-05, 5.34869999999979e-05, 5.279100000000342e-05, 5.3249999999997744e-05, 5.3166000000000324e-05, 5.312500000000109e-05, 5.3485999999998424e-05, 5.286099999999433e-05, 5.290299999999998e-05, 5.362500000000159e-05, 5.3179999999999894e-05, 5.3527999999997133e-05, 5.36670000000003e-05, 5.290299999999998e-05, 5.290299999999998e-05, 5.288900000000041e-05, 5.313900000000066e-05, 5.288900000000041e-05, 5.3471999999998854e-05, 5.277800000000332e-05, 5.288900000000041e-05, 5.358399999999541e-05, 5.36670000000003e-05, 5.2749999999997244e-05, 5.287500000000084e-05, 5.2929999999999644e-05, 5.3430000000000144e-05, 5.30549999999963e-05, 5.345800000000622e-05, 5.30419999999962e-05, 5.3485999999998424e-05, 5.329200000000339e-05, 5.343099999999962e-05, 5.333299999999569e-05, 5.33470000000022e-05, 5.2999999999997494e-05, 5.286100000000127e-05, 5.312500000000109e-05, 5.336099999999483e-05, 5.309700000000195e-05, 5.347299999999833e-05, 5.279200000000289e-05, 5.3193999999999464e-05, 5.286100000000127e-05, 5.2971999999998354e-05]</msg>
<status status="PASS" starttime="20201030 11:52:52.920" endtime="20201030 11:52:52.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.908" endtime="20201030 11:52:52.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:52.937" endtime="20201030 11:52:52.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.932" endtime="20201030 11:52:52.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.929" endtime="20201030 11:52:52.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.409" endtime="20201030 11:52:52.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.408" endtime="20201030 11:52:52.962"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.987" endtime="20201030 11:52:53.008"></status>
</kw>
<msg timestamp="20201030 11:52:53.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.983" endtime="20201030 11:52:53.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.012" endtime="20201030 11:52:53.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.019" endtime="20201030 11:52:53.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.975" endtime="20201030 11:52:53.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.969" endtime="20201030 11:52:53.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.043" endtime="20201030 11:52:53.401"></status>
</kw>
<msg timestamp="20201030 11:52:53.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043570028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043624653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.040" endtime="20201030 11:52:53.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043570028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043624653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.411" endtime="20201030 11:52:53.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.431" endtime="20201030 11:52:53.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.032" endtime="20201030 11:52:53.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.027" endtime="20201030 11:52:53.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:53.449" level="INFO">${RESULT} = [{'diff': 5.462500000000259e-05}, {'diff': 5.381999999999609e-05}, {'diff': 5.409800000000242e-05}, {'diff': 5.4027999999997633e-05}, {'diff': 5.40419999999972e-05}, {'diff': 5.407000000000328e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:53.440" endtime="20201030 11:52:53.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:53.461" level="INFO">${ACCURACY} = {'diff': [5.462500000000259e-05, 5.381999999999609e-05, 5.409800000000242e-05, 5.4027999999997633e-05, 5.40419999999972e-05, 5.407000000000328e-05, 5.41670000000008e-05, 5.411100000000252e-05, 5.42500...</msg>
<status status="PASS" starttime="20201030 11:52:53.451" endtime="20201030 11:52:53.462"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.473" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:52:53.470" endtime="20201030 11:52:53.474"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.479" level="INFO">VALUE: [5.462500000000259e-05, 5.381999999999609e-05, 5.409800000000242e-05, 5.4027999999997633e-05, 5.40419999999972e-05, 5.407000000000328e-05, 5.41670000000008e-05, 5.411100000000252e-05, 5.425000000000568e-05, 5.4513999999998564e-05, 5.3721999999999104e-05, 5.465300000000173e-05, 5.46670000000013e-05, 5.3707999999999534e-05, 5.426400000000525e-05, 5.455599999999727e-05, 5.4471999999999854e-05, 5.429200000000439e-05, 5.418100000000037e-05, 5.408400000000285e-05, 5.372299999999858e-05, 5.411100000000252e-05, 5.434800000000267e-05, 5.408400000000285e-05, 5.432000000000353e-05, 5.454200000000464e-05, 5.405500000000424e-05, 5.463899999999522e-05, 5.431900000000406e-05, 5.413899999999472e-05, 5.3985999999998924e-05, 5.381899999999662e-05, 5.43470000000032e-05, 5.408300000000338e-05, 5.411099999999558e-05, 5.388899999999447e-05, 5.444500000000019e-05, 5.373699999999815e-05, 5.419499999999994e-05, 5.433399999999616e-05, 5.430599999999702e-05, 5.4235999999999174e-05, 5.437500000000234e-05, 5.412500000000209e-05, 5.381900000000356e-05, 5.386100000000227e-05, 5.43470000000032e-05, 5.4430000000001144e-05, 5.3735999999998674e-05, 5.390300000000098e-05]</msg>
<status status="PASS" starttime="20201030 11:52:53.475" endtime="20201030 11:52:53.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.463" endtime="20201030 11:52:53.482"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:53.492" endtime="20201030 11:52:53.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.487" endtime="20201030 11:52:53.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.485" endtime="20201030 11:52:53.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.965" endtime="20201030 11:52:53.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.963" endtime="20201030 11:52:53.518"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.542" endtime="20201030 11:52:53.563"></status>
</kw>
<msg timestamp="20201030 11:52:53.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.538" endtime="20201030 11:52:53.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:53.567" endtime="20201030 11:52:53.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.574" endtime="20201030 11:52:53.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.531" endtime="20201030 11:52:53.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.524" endtime="20201030 11:52:53.581"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.599" endtime="20201030 11:52:53.958"></status>
</kw>
<msg timestamp="20201030 11:52:53.966" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043686028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043741153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.595" endtime="20201030 11:52:53.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:53.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043686028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043741153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:53.968" endtime="20201030 11:52:53.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:53.990" endtime="20201030 11:52:53.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.587" endtime="20201030 11:52:53.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.582" endtime="20201030 11:52:53.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.008" level="INFO">${RESULT} = [{'diff': 5.512499999999615e-05}, {'diff': 5.506999999999734e-05}, {'diff': 5.561100000000402e-05}, {'diff': 5.470900000000001e-05}, {'diff': 5.5708000000001534e-05}, {'diff': 5.56670000000023e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:53.999" endtime="20201030 11:52:54.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:54.019" level="INFO">${ACCURACY} = {'diff': [5.512499999999615e-05, 5.506999999999734e-05, 5.561100000000402e-05, 5.470900000000001e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.505500000000524e-05, 5.4708000000000534e-05, 5.551...</msg>
<status status="PASS" starttime="20201030 11:52:54.011" endtime="20201030 11:52:54.019"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.030" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:52:54.028" endtime="20201030 11:52:54.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.036" level="INFO">VALUE: [5.512499999999615e-05, 5.506999999999734e-05, 5.561100000000402e-05, 5.470900000000001e-05, 5.5708000000001534e-05, 5.56670000000023e-05, 5.505500000000524e-05, 5.4708000000000534e-05, 5.5513999999999564e-05, 5.4944000000001214e-05, 5.4791999999997953e-05, 5.506899999999787e-05, 5.5291999999998453e-05, 5.5486000000000424e-05, 5.495900000000026e-05, 5.495900000000026e-05, 5.536099999999683e-05, 5.5263999999999314e-05, 5.509800000000342e-05, 5.565299999999579e-05, 5.541700000000205e-05, 5.5486000000000424e-05, 5.526299999999984e-05, 5.469500000000044e-05, 5.5208000000001034e-05, 5.534699999999726e-05, 5.518100000000137e-05, 5.511099999999658e-05, 5.5208000000001034e-05, 5.566699999999536e-05, 5.493100000000112e-05, 5.506900000000481e-05, 5.558299999999794e-05, 5.5444000000001714e-05, 5.4749999999999244e-05, 5.5236000000000174e-05, 5.5222000000000604e-05, 5.540300000000248e-05, 5.5513999999999564e-05, 5.523699999999965e-05, 5.537500000000334e-05, 5.481999999999709e-05, 5.4999999999999494e-05, 5.551300000000009e-05, 5.5486000000000424e-05, 5.5513999999999564e-05, 5.4958000000000784e-05, 5.506899999999787e-05, 5.516699999999486e-05, 5.5541999999998704e-05]</msg>
<status status="PASS" starttime="20201030 11:52:54.032" endtime="20201030 11:52:54.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.020" endtime="20201030 11:52:54.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:54.048" endtime="20201030 11:52:54.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.044" endtime="20201030 11:52:54.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.041" endtime="20201030 11:52:54.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.520" endtime="20201030 11:52:54.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:53.519" endtime="20201030 11:52:54.073"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.097" endtime="20201030 11:52:54.118"></status>
</kw>
<msg timestamp="20201030 11:52:54.119" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.093" endtime="20201030 11:52:54.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.121" endtime="20201030 11:52:54.126"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.128" endtime="20201030 11:52:54.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.086" endtime="20201030 11:52:54.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.080" endtime="20201030 11:52:54.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.151" endtime="20201030 11:52:54.490"></status>
</kw>
<msg timestamp="20201030 11:52:54.497" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043464528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.148" endtime="20201030 11:52:54.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.515" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043408764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043464528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.499" endtime="20201030 11:52:54.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.518" endtime="20201030 11:52:54.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.141" endtime="20201030 11:52:54.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.136" endtime="20201030 11:52:54.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:54.535" level="INFO">${RESULT} = [{'diff': 5.5763999999999814e-05}, {'diff': 5.640300000000348e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.6014000000000064e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.608400000000485e-05...</msg>
<status status="PASS" starttime="20201030 11:52:54.526" endtime="20201030 11:52:54.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:54.544" level="INFO">${ACCURACY} = {'diff': [5.5763999999999814e-05, 5.640300000000348e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.6514000000000564e-05, 5.608400000000485e-05, 5.663899999999722e-05, 5.6471999999994915e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:52:54.537" endtime="20201030 11:52:54.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.555" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:52:54.553" endtime="20201030 11:52:54.556"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.561" level="INFO">VALUE: [5.5763999999999814e-05, 5.640300000000348e-05, 5.6027999999999634e-05, 5.6014000000000064e-05, 5.6514000000000564e-05, 5.608400000000485e-05, 5.663899999999722e-05, 5.6471999999994915e-05, 5.6151999999996816e-05, 5.5958000000001784e-05, 5.661099999999808e-05, 5.6444000000002714e-05, 5.5680000000002394e-05, 5.665300000000373e-05, 5.5777999999999384e-05, 5.5777999999999384e-05, 5.6471999999994915e-05, 5.6277999999999884e-05, 5.5777999999999384e-05, 5.6027999999999634e-05, 5.640299999999654e-05, 5.6541999999999704e-05, 5.641699999999611e-05, 5.633299999999869e-05, 5.6000000000000494e-05, 5.608399999999791e-05, 5.606899999999887e-05, 5.629099999999998e-05, 5.5750000000000244e-05, 5.586099999999733e-05, 5.618099999999543e-05, 5.591700000000255e-05, 5.638899999999697e-05, 5.630499999999955e-05, 5.6555999999999274e-05, 5.590299999999604e-05, 5.619500000000194e-05, 5.594500000000169e-05, 5.608399999999791e-05, 5.6041999999999204e-05, 5.6027999999999634e-05, 5.5736000000000674e-05, 5.608299999999844e-05, 5.59870000000004e-05, 5.6250000000000744e-05, 5.6680000000003394e-05, 5.6264000000000314e-05, 5.612500000000409e-05, 5.631900000000606e-05, 5.6429999999996205e-05]</msg>
<status status="PASS" starttime="20201030 11:52:54.557" endtime="20201030 11:52:54.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.546" endtime="20201030 11:52:54.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:54.574" endtime="20201030 11:52:54.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.569" endtime="20201030 11:52:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.566" endtime="20201030 11:52:54.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.075" endtime="20201030 11:52:54.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.074" endtime="20201030 11:52:54.601"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.624" endtime="20201030 11:52:54.645"></status>
</kw>
<msg timestamp="20201030 11:52:54.647" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.621" endtime="20201030 11:52:54.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:54.653" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:54.649" endtime="20201030 11:52:54.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.655" endtime="20201030 11:52:54.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.614" endtime="20201030 11:52:54.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.608" endtime="20201030 11:52:54.663"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:54.680" endtime="20201030 11:52:54.989"></status>
</kw>
<msg timestamp="20201030 11:52:54.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.677" endtime="20201030 11:52:54.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043697833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:54.993" endtime="20201030 11:52:55.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.001" endtime="20201030 11:52:55.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.669" endtime="20201030 11:52:55.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.664" endtime="20201030 11:52:55.005"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:55.010" level="INFO">${RESULT} = [{'diff': 5.6736000000001674e-05}, {'diff': 5.6750000000001244e-05}, {'diff': 5.683299999999919e-05}, {'diff': 5.730499999999361e-05}, {'diff': 5.6693999999996025e-05}, {'diff': 5.7236000000002174e-05...</msg>
<status status="PASS" starttime="20201030 11:52:55.006" endtime="20201030 11:52:55.010"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:55.015" level="INFO">${ACCURACY} = {'diff': [5.6736000000001674e-05, 5.6750000000001244e-05, 5.683299999999919e-05, 5.730499999999361e-05, 5.6693999999996025e-05, 5.7236000000002174e-05, 5.686099999999833e-05, 5.7486000000002424e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:52:55.011" endtime="20201030 11:52:55.015"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.020" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:52:55.019" endtime="20201030 11:52:55.020"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.023" level="INFO">VALUE: [5.6736000000001674e-05, 5.6750000000001244e-05, 5.683299999999919e-05, 5.730499999999361e-05, 5.6693999999996025e-05, 5.7236000000002174e-05, 5.686099999999833e-05, 5.7486000000002424e-05, 5.684699999999876e-05, 5.7472000000002854e-05, 5.684699999999876e-05, 5.6791999999999954e-05, 5.684799999999823e-05, 5.730500000000055e-05, 5.7179999999996955e-05, 5.7250000000001744e-05, 5.6680000000003394e-05, 5.7179999999996955e-05, 5.6999999999994555e-05, 5.7665999999997886e-05, 5.70550000000003e-05, 5.7458000000003284e-05, 5.731900000000012e-05, 5.6749999999994305e-05, 5.6971999999995415e-05, 5.7278000000000884e-05, 5.7500000000001994e-05, 5.719500000000294e-05, 5.7221999999995665e-05, 5.765300000000473e-05, 5.7319999999999593e-05, 5.733299999999969e-05, 5.730499999999361e-05, 5.702699999999422e-05, 5.758299999999994e-05, 5.758299999999994e-05, 5.758299999999994e-05, 5.681899999999962e-05, 5.691700000000355e-05, 5.680500000000005e-05, 5.6750000000001244e-05, 5.763899999999822e-05, 5.6736000000001674e-05, 5.683299999999919e-05, 5.7278000000000884e-05, 5.6778000000000384e-05, 5.6819999999999093e-05, 5.7194999999996e-05, 5.720900000000251e-05, 5.748699999999496e-05]</msg>
<status status="PASS" starttime="20201030 11:52:55.021" endtime="20201030 11:52:55.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.016" endtime="20201030 11:52:55.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:55.029" endtime="20201030 11:52:55.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.027" endtime="20201030 11:52:55.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.025" endtime="20201030 11:52:55.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.603" endtime="20201030 11:52:55.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:54.602" endtime="20201030 11:52:55.050"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.061" endtime="20201030 11:52:55.078"></status>
</kw>
<msg timestamp="20201030 11:52:55.079" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.059" endtime="20201030 11:52:55.079"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.080" endtime="20201030 11:52:55.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.082" endtime="20201030 11:52:55.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.056" endtime="20201030 11:52:55.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.053" endtime="20201030 11:52:55.086"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.097" endtime="20201030 11:52:55.437"></status>
</kw>
<msg timestamp="20201030 11:52:55.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024677861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.094" endtime="20201030 11:52:55.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024677861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024736472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.446" endtime="20201030 11:52:55.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.465" endtime="20201030 11:52:55.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.089" endtime="20201030 11:52:55.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.086" endtime="20201030 11:52:55.472"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:55.483" level="INFO">${RESULT} = [{'diff': 5.861100000000008e-05}, {'diff': 5.7777999999997914e-05}, {'diff': 5.8472000000000385e-05}, {'diff': 5.843100000000115e-05}, {'diff': 5.8291999999997984e-05}, {'diff': 5.811099999999958e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:55.474" endtime="20201030 11:52:55.483"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:55.494" level="INFO">${ACCURACY} = {'diff': [5.861100000000008e-05, 5.7777999999997914e-05, 5.8472000000000385e-05, 5.843100000000115e-05, 5.8291999999997984e-05, 5.811099999999958e-05, 5.7778000000001384e-05, 5.820900000000004e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:52:55.485" endtime="20201030 11:52:55.494"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.505" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:52:55.503" endtime="20201030 11:52:55.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.511" level="INFO">VALUE: [5.861100000000008e-05, 5.7777999999997914e-05, 5.8472000000000385e-05, 5.843100000000115e-05, 5.8291999999997984e-05, 5.811099999999958e-05, 5.7778000000001384e-05, 5.820900000000004e-05, 5.8541999999998234e-05, 5.8680000000001925e-05, 5.8097999999999483e-05, 5.7958000000000315e-05, 5.829100000000198e-05, 5.7958000000000315e-05, 5.808300000000044e-05, 5.7999999999999025e-05, 5.8013999999998594e-05, 5.7778000000001384e-05, 5.7778000000001384e-05, 5.8278000000001884e-05, 5.813899999999872e-05, 5.837500000000287e-05, 5.862499999999965e-05, 5.8500000000002994e-05, 5.8513999999999095e-05, 5.786099999999933e-05, 5.8278000000001884e-05, 5.7819999999996624e-05, 5.83749999999994e-05, 5.7971999999999885e-05, 5.831900000000112e-05, 5.784699999999976e-05, 5.7722000000003104e-05, 5.8444000000001245e-05, 5.865299999999879e-05, 5.866699999999836e-05, 5.865299999999879e-05, 5.8264000000002314e-05, 5.859700000000051e-05, 5.809700000000001e-05, 5.7806000000000524e-05, 5.8306000000001024e-05, 5.7778000000001384e-05, 5.765300000000126e-05, 5.8527999999998664e-05, 5.8500000000002994e-05, 5.854099999999876e-05, 5.784699999999976e-05, 5.827699999999894e-05, 5.8665999999998886e-05]</msg>
<status status="PASS" starttime="20201030 11:52:55.508" endtime="20201030 11:52:55.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.496" endtime="20201030 11:52:55.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:55.523" endtime="20201030 11:52:55.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.519" endtime="20201030 11:52:55.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.517" endtime="20201030 11:52:55.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.051" endtime="20201030 11:52:55.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.050" endtime="20201030 11:52:55.549"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.572" endtime="20201030 11:52:55.593"></status>
</kw>
<msg timestamp="20201030 11:52:55.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.568" endtime="20201030 11:52:55.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:55.596" endtime="20201030 11:52:55.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.603" endtime="20201030 11:52:55.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.561" endtime="20201030 11:52:55.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.555" endtime="20201030 11:52:55.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.626" endtime="20201030 11:52:55.971"></status>
</kw>
<msg timestamp="20201030 11:52:55.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041863083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.623" endtime="20201030 11:52:55.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:55.997" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.041804181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.041863083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:55.980" endtime="20201030 11:52:55.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:55.999" endtime="20201030 11:52:56.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.616" endtime="20201030 11:52:56.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.611" endtime="20201030 11:52:56.007"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:56.017" level="INFO">${RESULT} = [{'diff': 5.8901999999999566e-05}, {'diff': 5.933299999999475e-05}, {'diff': 5.956900000000237e-05}, {'diff': 5.908300000000144e-05}, {'diff': 5.9207999999998095e-05}, {'diff': 5.9541999999995765e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:56.008" endtime="20201030 11:52:56.018"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:56.027" level="INFO">${ACCURACY} = {'diff': [5.8901999999999566e-05, 5.933299999999475e-05, 5.956900000000237e-05, 5.908300000000144e-05, 5.9207999999998095e-05, 5.9541999999995765e-05, 5.9028000000002634e-05, 5.9306000000002024e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:52:56.019" endtime="20201030 11:52:56.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.038" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:52:56.035" endtime="20201030 11:52:56.038"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.043" level="INFO">VALUE: [5.8901999999999566e-05, 5.933299999999475e-05, 5.956900000000237e-05, 5.908300000000144e-05, 5.9207999999998095e-05, 5.9541999999995765e-05, 5.9028000000002634e-05, 5.9306000000002024e-05, 5.919500000000494e-05, 5.962500000000065e-05, 5.9056000000001774e-05, 5.876300000000334e-05, 5.9208000000005034e-05, 5.906900000000187e-05, 5.9236000000004174e-05, 5.902700000000316e-05, 5.929099999999604e-05, 5.9402000000000066e-05, 5.911100000000058e-05, 5.8693999999998026e-05, 5.930500000000255e-05, 5.8929999999998706e-05, 5.9499999999997055e-05, 5.9042000000002204e-05, 5.9499999999997055e-05, 5.9292000000002454e-05, 5.965299999999979e-05, 5.9556000000002274e-05, 5.9584000000001414e-05, 5.956900000000237e-05, 5.9514000000003564e-05, 5.934700000000126e-05, 5.8943999999998276e-05, 5.9665999999999886e-05, 5.9236000000004174e-05, 5.956899999999543e-05, 5.9457999999998346e-05, 5.934699999999432e-05, 5.9221999999997665e-05, 5.8707999999997595e-05, 5.940299999999954e-05, 5.8721999999997165e-05, 5.915299999999929e-05, 5.8777999999995445e-05, 5.8735999999996735e-05, 5.873700000000315e-05, 5.9472000000004854e-05, 5.897299999999689e-05, 5.920899999999757e-05, 5.927699999999647e-05]</msg>
<status status="PASS" starttime="20201030 11:52:56.040" endtime="20201030 11:52:56.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.029" endtime="20201030 11:52:56.046"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:56.056" endtime="20201030 11:52:56.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.051" endtime="20201030 11:52:56.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.049" endtime="20201030 11:52:56.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.551" endtime="20201030 11:52:56.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:55.549" endtime="20201030 11:52:56.081"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.104" endtime="20201030 11:52:56.127"></status>
</kw>
<msg timestamp="20201030 11:52:56.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.101" endtime="20201030 11:52:56.128"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.134" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.130" endtime="20201030 11:52:56.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.136" endtime="20201030 11:52:56.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.093" endtime="20201030 11:52:56.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.088" endtime="20201030 11:52:56.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.160" endtime="20201030 11:52:56.500"></status>
</kw>
<msg timestamp="20201030 11:52:56.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043223806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043283681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:56.157" endtime="20201030 11:52:56.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043223806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043283681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:56.510" endtime="20201030 11:52:56.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.529" endtime="20201030 11:52:56.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.149" endtime="20201030 11:52:56.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.144" endtime="20201030 11:52:56.536"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:56.546" level="INFO">${RESULT} = [{'diff': 5.98750000000009e-05}, {'diff': 6.0221999999998665e-05}, {'diff': 6.0569999999995905e-05}, {'diff': 6.036100000000183e-05}, {'diff': 5.9806000000002524e-05}, {'diff': 6.00829999999955e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:56.537" endtime="20201030 11:52:56.546"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:56.556" level="INFO">${ACCURACY} = {'diff': [5.98750000000009e-05, 6.0221999999998665e-05, 6.0569999999995905e-05, 6.036100000000183e-05, 5.9806000000002524e-05, 6.00829999999955e-05, 5.9750000000004244e-05, 5.9735999999997735e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 11:52:56.548" endtime="20201030 11:52:56.556"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.567" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:52:56.564" endtime="20201030 11:52:56.567"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.572" level="INFO">VALUE: [5.98750000000009e-05, 6.0221999999998665e-05, 6.0569999999995905e-05, 6.036100000000183e-05, 5.9806000000002524e-05, 6.00829999999955e-05, 5.9750000000004244e-05, 5.9735999999997735e-05, 6.062500000000165e-05, 6.0249999999997805e-05, 6.070899999999907e-05, 6.0264000000004314e-05, 6.058300000000294e-05, 5.98750000000009e-05, 6.0069999999995405e-05, 6.063899999999428e-05, 6.0249999999997805e-05, 5.9820000000002094e-05, 6.0583999999995475e-05, 5.981900000000262e-05, 5.9736000000004674e-05, 6.061100000000208e-05, 6.009699999999507e-05, 5.9929999999999706e-05, 6.0471999999998916e-05, 6.063900000000122e-05, 6.041700000000011e-05, 5.991699999999961e-05, 6.0319999999995655e-05, 6.041700000000011e-05, 6.0292000000003454e-05, 6.0014000000004064e-05, 6.034700000000226e-05, 5.995899999999832e-05, 6.0514000000004564e-05, 6.0528000000004134e-05, 5.998699999999746e-05, 6.0207999999999096e-05, 5.9916000000000136e-05, 6.006900000000287e-05, 6.012500000000115e-05, 6.0443999999999776e-05, 5.9943999999999276e-05, 5.9929999999999706e-05, 5.9791999999996015e-05, 6.040300000000054e-05, 6.0249999999997805e-05, 6.0500000000004994e-05, 5.9750000000004244e-05, 6.065300000000079e-05]</msg>
<status status="PASS" starttime="20201030 11:52:56.569" endtime="20201030 11:52:56.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.558" endtime="20201030 11:52:56.575"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:56.586" endtime="20201030 11:52:56.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.580" endtime="20201030 11:52:56.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.578" endtime="20201030 11:52:56.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.083" endtime="20201030 11:52:56.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.082" endtime="20201030 11:52:56.611"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.635" endtime="20201030 11:52:56.656"></status>
</kw>
<msg timestamp="20201030 11:52:56.657" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.631" endtime="20201030 11:52:56.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:56.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:56.659" endtime="20201030 11:52:56.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.666" endtime="20201030 11:52:56.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.624" endtime="20201030 11:52:56.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.618" endtime="20201030 11:52:56.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:56.689" endtime="20201030 11:52:57.029"></status>
</kw>
<msg timestamp="20201030 11:52:57.036" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042138194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042199, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:56.686" endtime="20201030 11:52:57.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042138194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042199, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:57.038" endtime="20201030 11:52:57.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.057" endtime="20201030 11:52:57.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.679" endtime="20201030 11:52:57.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.674" endtime="20201030 11:52:57.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:57.074" level="INFO">${RESULT} = [{'diff': 6.0806000000003524e-05}, {'diff': 6.0999999999998555e-05}, {'diff': 6.145800000000035e-05}, {'diff': 6.165299999999485e-05}, {'diff': 6.138900000000197e-05}, {'diff': 6.144500000000025e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:57.066" endtime="20201030 11:52:57.075"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:57.085" level="INFO">${ACCURACY} = {'diff': [6.0806000000003524e-05, 6.0999999999998555e-05, 6.145800000000035e-05, 6.165299999999485e-05, 6.138900000000197e-05, 6.144500000000025e-05, 6.115300000000129e-05, 6.161099999999614e-05, 6.09...</msg>
<status status="PASS" starttime="20201030 11:52:57.077" endtime="20201030 11:52:57.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.096" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:52:57.094" endtime="20201030 11:52:57.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.102" level="INFO">VALUE: [6.0806000000003524e-05, 6.0999999999998555e-05, 6.145800000000035e-05, 6.165299999999485e-05, 6.138900000000197e-05, 6.144500000000025e-05, 6.115300000000129e-05, 6.161099999999614e-05, 6.0999999999998555e-05, 6.15420000000047e-05, 6.144500000000025e-05, 6.108300000000344e-05, 6.151299999999915e-05, 6.136099999999589e-05, 6.0694000000000026e-05, 6.130600000000402e-05, 6.105499999999736e-05, 6.108300000000344e-05, 6.152800000000513e-05, 6.141699999999417e-05, 6.136100000000283e-05, 6.13750000000024e-05, 6.120899999999957e-05, 6.107000000000334e-05, 6.123599999999924e-05, 6.157000000000384e-05, 6.12499999999988e-05, 6.112500000000215e-05, 6.145799999999341e-05, 6.109700000000301e-05, 6.105499999999736e-05, 6.108300000000344e-05, 6.140300000000154e-05, 6.133300000000369e-05, 6.0735999999998735e-05, 6.079099999999754e-05, 6.165300000000179e-05, 6.148599999999949e-05, 6.131999999999665e-05, 6.0763999999997875e-05, 6.093100000000018e-05, 6.06949999999995e-05, 6.136100000000283e-05, 6.1195e-05, 6.12499999999988e-05, 6.0722000000006104e-05, 6.144399999999384e-05, 6.127699999999847e-05, 6.144400000000078e-05, 6.084700000000276e-05]</msg>
<status status="PASS" starttime="20201030 11:52:57.099" endtime="20201030 11:52:57.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.087" endtime="20201030 11:52:57.105"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:57.114" endtime="20201030 11:52:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.110" endtime="20201030 11:52:57.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.108" endtime="20201030 11:52:57.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.614" endtime="20201030 11:52:57.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:56.612" endtime="20201030 11:52:57.140"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.163" endtime="20201030 11:52:57.184"></status>
</kw>
<msg timestamp="20201030 11:52:57.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.159" endtime="20201030 11:52:57.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.192" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.188" endtime="20201030 11:52:57.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.194" endtime="20201030 11:52:57.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.152" endtime="20201030 11:52:57.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.146" endtime="20201030 11:52:57.201"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.218" endtime="20201030 11:52:57.556"></status>
</kw>
<msg timestamp="20201030 11:52:57.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042108528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:57.214" endtime="20201030 11:52:57.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042108528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.042171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:57.566" endtime="20201030 11:52:57.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.584" endtime="20201030 11:52:57.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.207" endtime="20201030 11:52:57.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.202" endtime="20201030 11:52:57.591"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:57.602" level="INFO">${RESULT} = [{'diff': 6.254099999999929e-05}, {'diff': 6.226399999999938e-05}, {'diff': 6.199999999999956e-05}, {'diff': 6.258399999999747e-05}, {'diff': 6.25279999999992e-05}, {'diff': 6.190300000000204e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:57.593" endtime="20201030 11:52:57.602"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:57.613" level="INFO">${ACCURACY} = {'diff': [6.254099999999929e-05, 6.226399999999938e-05, 6.199999999999956e-05, 6.258399999999747e-05, 6.25279999999992e-05, 6.190300000000204e-05, 6.256899999999843e-05, 6.255599999999834e-05, 6.26249...</msg>
<status status="PASS" starttime="20201030 11:52:57.604" endtime="20201030 11:52:57.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.624" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:52:57.622" endtime="20201030 11:52:57.625"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.630" level="INFO">VALUE: [6.254099999999929e-05, 6.226399999999938e-05, 6.199999999999956e-05, 6.258399999999747e-05, 6.25279999999992e-05, 6.190300000000204e-05, 6.256899999999843e-05, 6.255599999999834e-05, 6.262499999999671e-05, 6.173599999999974e-05, 6.198599999999999e-05, 6.184700000000376e-05, 6.194400000000128e-05, 6.234699999999732e-05, 6.265300000000279e-05, 6.240199999999613e-05, 6.229099999999904e-05, 6.201399999999913e-05, 6.211100000000358e-05, 6.17499999999993e-05, 6.212499999999621e-05, 6.216700000000186e-05, 6.197200000000042e-05, 6.20279999999987e-05, 6.266700000000236e-05, 6.247200000000092e-05, 6.266700000000236e-05, 6.197199999999348e-05, 6.216700000000186e-05, 6.179199999999802e-05, 6.195799999999391e-05, 6.245799999999441e-05, 6.188900000000247e-05, 6.205499999999836e-05, 6.231900000000512e-05, 6.194399999999434e-05, 6.191700000000161e-05, 6.216700000000186e-05, 6.173599999999974e-05, 6.215300000000229e-05, 6.186099999999639e-05, 6.261099999999714e-05, 6.252800000000613e-05, 6.191700000000161e-05, 6.240200000000307e-05, 6.204199999999827e-05, 6.18620000000028e-05, 6.186100000000333e-05, 6.211100000000358e-05, 6.22499999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:52:57.627" endtime="20201030 11:52:57.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.615" endtime="20201030 11:52:57.640"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:57.650" endtime="20201030 11:52:57.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.646" endtime="20201030 11:52:57.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.643" endtime="20201030 11:52:57.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.142" endtime="20201030 11:52:57.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.141" endtime="20201030 11:52:57.676"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.700" endtime="20201030 11:52:57.721"></status>
</kw>
<msg timestamp="20201030 11:52:57.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.697" endtime="20201030 11:52:57.723"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:57.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:57.725" endtime="20201030 11:52:57.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.732" endtime="20201030 11:52:57.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.689" endtime="20201030 11:52:57.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.683" endtime="20201030 11:52:57.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:57.757" endtime="20201030 11:52:58.107"></status>
</kw>
<msg timestamp="20201030 11:52:58.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04359, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:57.753" endtime="20201030 11:52:58.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.04359, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043652694, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:58.117" endtime="20201030 11:52:58.133"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.135" endtime="20201030 11:52:58.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.746" endtime="20201030 11:52:58.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.740" endtime="20201030 11:52:58.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:58.152" level="INFO">${RESULT} = [{'diff': 6.269400000000203e-05}, {'diff': 6.291600000000314e-05}, {'diff': 6.290199999999663e-05}, {'diff': 6.316599999999645e-05}, {'diff': 6.306899999999893e-05}, {'diff': 6.341700000000311e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:58.143" endtime="20201030 11:52:58.153"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:58.161" level="INFO">${ACCURACY} = {'diff': [6.269400000000203e-05, 6.291600000000314e-05, 6.290199999999663e-05, 6.316599999999645e-05, 6.306899999999893e-05, 6.341700000000311e-05, 6.268000000000246e-05, 6.330599999999909e-05, 6.3000...</msg>
<status status="PASS" starttime="20201030 11:52:58.154" endtime="20201030 11:52:58.162"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.172" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:52:58.170" endtime="20201030 11:52:58.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.178" level="INFO">VALUE: [6.269400000000203e-05, 6.291600000000314e-05, 6.290199999999663e-05, 6.316599999999645e-05, 6.306899999999893e-05, 6.341700000000311e-05, 6.268000000000246e-05, 6.330599999999909e-05, 6.300000000000056e-05, 6.366699999999642e-05, 6.276399999999988e-05, 6.338900000000397e-05, 6.3195000000002e-05, 6.341699999999617e-05, 6.295900000000132e-05, 6.294499999999481e-05, 6.27080000000016e-05, 6.279099999999954e-05, 6.313899999999678e-05, 6.306899999999893e-05, 6.281900000000562e-05, 6.313900000000372e-05, 6.326400000000038e-05, 6.34029999999966e-05, 6.32500000000008e-05, 6.350000000000106e-05, 6.277800000000638e-05, 6.309699999999807e-05, 6.297199999999448e-05, 6.35699999999989e-05, 6.270899999999413e-05, 6.30279999999997e-05, 6.362500000000465e-05, 6.279200000000595e-05, 6.319399999999559e-05, 6.348600000000149e-05, 6.366599999999695e-05, 6.361099999999814e-05, 6.272200000000117e-05, 6.324999999999387e-05, 6.298600000000099e-05, 6.32500000000008e-05, 6.28200000000051e-05, 6.300000000000056e-05, 6.311100000000458e-05, 6.287499999999696e-05, 6.35280000000002e-05, 6.348600000000149e-05, 6.355499999999986e-05, 6.28750000000039e-05]</msg>
<status status="PASS" starttime="20201030 11:52:58.175" endtime="20201030 11:52:58.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.163" endtime="20201030 11:52:58.181"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:58.191" endtime="20201030 11:52:58.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.186" endtime="20201030 11:52:58.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.183" endtime="20201030 11:52:58.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.678" endtime="20201030 11:52:58.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:57.677" endtime="20201030 11:52:58.215"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.238" endtime="20201030 11:52:58.261"></status>
</kw>
<msg timestamp="20201030 11:52:58.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.234" endtime="20201030 11:52:58.262"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.264" endtime="20201030 11:52:58.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.270" endtime="20201030 11:52:58.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.227" endtime="20201030 11:52:58.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.222" endtime="20201030 11:52:58.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.293" endtime="20201030 11:52:58.600"></status>
</kw>
<msg timestamp="20201030 11:52:58.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042304667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04236875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:58.290" endtime="20201030 11:52:58.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.042304667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04236875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:58.610" endtime="20201030 11:52:58.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.630" endtime="20201030 11:52:58.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.283" endtime="20201030 11:52:58.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.278" endtime="20201030 11:52:58.637"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:58.648" level="INFO">${RESULT} = [{'diff': 6.40829999999995e-05}, {'diff': 6.37359999999948e-05}, {'diff': 6.373600000000174e-05}, {'diff': 6.391700000000361e-05}, {'diff': 6.415299999999735e-05}, {'diff': 6.383299999999925e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:58.639" endtime="20201030 11:52:58.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:58.658" level="INFO">${ACCURACY} = {'diff': [6.40829999999995e-05, 6.37359999999948e-05, 6.373600000000174e-05, 6.391700000000361e-05, 6.415299999999735e-05, 6.383299999999925e-05, 6.395800000000285e-05, 6.373700000000121e-05, 6.424999...</msg>
<status status="PASS" starttime="20201030 11:52:58.650" endtime="20201030 11:52:58.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.670" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:52:58.668" endtime="20201030 11:52:58.671"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.676" level="INFO">VALUE: [6.40829999999995e-05, 6.37359999999948e-05, 6.373600000000174e-05, 6.391700000000361e-05, 6.415299999999735e-05, 6.383299999999925e-05, 6.395800000000285e-05, 6.373700000000121e-05, 6.424999999999487e-05, 6.436100000000583e-05, 6.455600000000034e-05, 6.427800000000095e-05, 6.469400000000403e-05, 6.39300000000037e-05, 6.40829999999995e-05, 6.431999999999966e-05, 6.458399999999948e-05, 6.442999999999727e-05, 6.386099999999839e-05, 6.415300000000429e-05, 6.450000000000206e-05, 6.373600000000174e-05, 6.433400000000616e-05, 6.373600000000174e-05, 6.412499999999821e-05, 6.370899999999513e-05, 6.416699999999692e-05, 6.454200000000077e-05, 6.391699999999667e-05, 6.398599999999505e-05, 6.40829999999995e-05, 6.444400000000378e-05, 6.400000000000156e-05, 6.394400000000328e-05, 6.422200000000267e-05, 6.426400000000138e-05, 6.394399999999634e-05, 6.42359999999953e-05, 6.433299999999975e-05, 6.387499999999796e-05, 6.36950000000025e-05, 6.37500000000013e-05, 6.411099999999864e-05, 6.442999999999727e-05, 6.412499999999821e-05, 6.416599999999745e-05, 6.419399999999659e-05, 6.395799999999591e-05, 6.376399999999394e-05, 6.455499999999392e-05]</msg>
<status status="PASS" starttime="20201030 11:52:58.672" endtime="20201030 11:52:58.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.660" endtime="20201030 11:52:58.679"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:58.690" endtime="20201030 11:52:58.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.684" endtime="20201030 11:52:58.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.682" endtime="20201030 11:52:58.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.217" endtime="20201030 11:52:58.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.216" endtime="20201030 11:52:58.716"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.740" endtime="20201030 11:52:58.762"></status>
</kw>
<msg timestamp="20201030 11:52:58.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.737" endtime="20201030 11:52:58.763"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.765" endtime="20201030 11:52:58.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.772" endtime="20201030 11:52:58.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.729" endtime="20201030 11:52:58.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.723" endtime="20201030 11:52:58.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.797" endtime="20201030 11:52:59.162"></status>
</kw>
<msg timestamp="20201030 11:52:59.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043723278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.793" endtime="20201030 11:52:59.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.189" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043658278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043723278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.172" endtime="20201030 11:52:59.190"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.192" endtime="20201030 11:52:59.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.786" endtime="20201030 11:52:59.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.781" endtime="20201030 11:52:59.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:59.210" level="INFO">${RESULT} = [{'diff': 6.499999999999562e-05}, {'diff': 6.511099999999964e-05}, {'diff': 6.522199999999673e-05}, {'diff': 6.523600000000324e-05}, {'diff': 6.488799999999906e-05}, {'diff': 6.559800000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:59.201" endtime="20201030 11:52:59.211"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:59.222" level="INFO">${ACCURACY} = {'diff': [6.499999999999562e-05, 6.511099999999964e-05, 6.522199999999673e-05, 6.523600000000324e-05, 6.488799999999906e-05, 6.559800000000005e-05, 6.540199999999913e-05, 6.540199999999913e-05, 6.5485...</msg>
<status status="PASS" starttime="20201030 11:52:59.212" endtime="20201030 11:52:59.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.233" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:52:59.231" endtime="20201030 11:52:59.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.239" level="INFO">VALUE: [6.499999999999562e-05, 6.511099999999964e-05, 6.522199999999673e-05, 6.523600000000324e-05, 6.488799999999906e-05, 6.559800000000005e-05, 6.540199999999913e-05, 6.540199999999913e-05, 6.548599999999655e-05, 6.519399999999759e-05, 6.477800000000145e-05, 6.47080000000036e-05, 6.50830000000005e-05, 6.52359999999963e-05, 6.519499999999706e-05, 6.523600000000324e-05, 6.476400000000188e-05, 6.498599999999605e-05, 6.554199999999483e-05, 6.48620000000058e-05, 6.50700000000004e-05, 6.50830000000005e-05, 6.477700000000197e-05, 6.547199999999698e-05, 6.565199999999938e-05, 6.476400000000188e-05, 6.487499999999896e-05, 6.527800000000195e-05, 6.47500000000023e-05, 6.513899999999878e-05, 6.555600000000134e-05, 6.483399999999973e-05, 6.501399999999519e-05, 6.568099999999799e-05, 6.516699999999792e-05, 6.506900000000093e-05, 6.50830000000005e-05, 6.495799999999691e-05, 6.517999999999802e-05, 6.555500000000186e-05, 6.565299999999885e-05, 6.502799999999476e-05, 6.554200000000177e-05, 6.570900000000407e-05, 6.515299999999835e-05, 6.504200000000127e-05, 6.558400000000048e-05, 6.530600000000109e-05, 6.504200000000127e-05, 6.529199999999458e-05]</msg>
<status status="PASS" starttime="20201030 11:52:59.236" endtime="20201030 11:52:59.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.224" endtime="20201030 11:52:59.242"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:59.252" endtime="20201030 11:52:59.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.248" endtime="20201030 11:52:59.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.245" endtime="20201030 11:52:59.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.718" endtime="20201030 11:52:59.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.717" endtime="20201030 11:52:59.278"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.302" endtime="20201030 11:52:59.323"></status>
</kw>
<msg timestamp="20201030 11:52:59.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.298" endtime="20201030 11:52:59.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.327" endtime="20201030 11:52:59.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.334" endtime="20201030 11:52:59.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.291" endtime="20201030 11:52:59.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.285" endtime="20201030 11:52:59.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.359" endtime="20201030 11:52:59.716"></status>
</kw>
<msg timestamp="20201030 11:52:59.723" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043750264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043816375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.355" endtime="20201030 11:52:59.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043750264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043816375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.726" endtime="20201030 11:52:59.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.745" endtime="20201030 11:52:59.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.348" endtime="20201030 11:52:59.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.342" endtime="20201030 11:52:59.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:59.763" level="INFO">${RESULT} = [{'diff': 6.611100000000064e-05}, {'diff': 6.587499999999996e-05}, {'diff': 6.612500000000021e-05}, {'diff': 6.637500000000046e-05}, {'diff': 6.604199999999533e-05}, {'diff': 6.633400000000123e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:59.754" endtime="20201030 11:52:59.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:59.775" level="INFO">${ACCURACY} = {'diff': [6.611100000000064e-05, 6.587499999999996e-05, 6.612500000000021e-05, 6.637500000000046e-05, 6.604199999999533e-05, 6.633400000000123e-05, 6.600000000000356e-05, 6.647300000000439e-05, 6.6194...</msg>
<status status="PASS" starttime="20201030 11:52:59.766" endtime="20201030 11:52:59.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.787" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:52:59.785" endtime="20201030 11:52:59.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.793" level="INFO">VALUE: [6.611100000000064e-05, 6.587499999999996e-05, 6.612500000000021e-05, 6.637500000000046e-05, 6.604199999999533e-05, 6.633400000000123e-05, 6.600000000000356e-05, 6.647300000000439e-05, 6.619400000000553e-05, 6.652699999999678e-05, 6.60830000000015e-05, 6.629100000000304e-05, 6.601400000000313e-05, 6.654200000000277e-05, 6.634700000000132e-05, 6.613899999999978e-05, 6.60700000000014e-05, 6.601399999999619e-05, 6.595900000000432e-05, 6.659800000000105e-05, 6.645900000000482e-05, 6.627800000000295e-05, 6.636200000000037e-05, 6.590199999999963e-05, 6.654100000000329e-05, 6.672200000000517e-05, 6.645800000000535e-05, 6.594399999999834e-05, 6.584700000000082e-05, 6.651400000000363e-05, 6.633300000000175e-05, 6.609700000000107e-05, 6.56950000000045e-05, 6.648599999999755e-05, 6.630600000000209e-05, 6.58480000000003e-05, 6.594499999999781e-05, 6.62080000000051e-05, 6.62630000000039e-05, 6.567999999999852e-05, 6.6583000000002e-05, 6.650000000000406e-05, 6.612500000000021e-05, 6.606900000000193e-05, 6.663900000000028e-05, 6.654200000000277e-05, 6.57779999999955e-05, 6.588899999999953e-05, 6.569499999999756e-05, 6.634700000000132e-05]</msg>
<status status="PASS" starttime="20201030 11:52:59.789" endtime="20201030 11:52:59.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.777" endtime="20201030 11:52:59.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:59.806" endtime="20201030 11:52:59.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.801" endtime="20201030 11:52:59.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.799" endtime="20201030 11:52:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.280" endtime="20201030 11:52:59.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.279" endtime="20201030 11:52:59.832"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.858" endtime="20201030 11:52:59.879"></status>
</kw>
<msg timestamp="20201030 11:52:59.880" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.854" endtime="20201030 11:52:59.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.883" endtime="20201030 11:52:59.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.889" endtime="20201030 11:52:59.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.846" endtime="20201030 11:52:59.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.839" endtime="20201030 11:52:59.897"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.914" endtime="20201030 11:53:00.276"></status>
</kw>
<msg timestamp="20201030 11:53:00.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045389264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045456875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.911" endtime="20201030 11:53:00.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045389264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045456875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.286" endtime="20201030 11:53:00.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.305" endtime="20201030 11:53:00.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.903" endtime="20201030 11:53:00.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.898" endtime="20201030 11:53:00.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:00.324" level="INFO">${RESULT} = [{'diff': 6.761100000000214e-05}, {'diff': 6.679199999999608e-05}, {'diff': 6.677699999999703e-05}, {'diff': 6.756999999999597e-05}, {'diff': 6.730499999999667e-05}, {'diff': 6.754100000000429e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:00.314" endtime="20201030 11:53:00.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:00.334" level="INFO">${ACCURACY} = {'diff': [6.761100000000214e-05, 6.679199999999608e-05, 6.677699999999703e-05, 6.756999999999597e-05, 6.730499999999667e-05, 6.754100000000429e-05, 6.766700000000042e-05, 6.684700000000182e-05, 6.7235...</msg>
<status status="PASS" starttime="20201030 11:53:00.326" endtime="20201030 11:53:00.334"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.345" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:53:00.343" endtime="20201030 11:53:00.346"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.351" level="INFO">VALUE: [6.761100000000214e-05, 6.679199999999608e-05, 6.677699999999703e-05, 6.756999999999597e-05, 6.730499999999667e-05, 6.754100000000429e-05, 6.766700000000042e-05, 6.684700000000182e-05, 6.72359999999983e-05, 6.756900000000343e-05, 6.672199999999823e-05, 6.695799999999891e-05, 6.683299999999531e-05, 6.72359999999983e-05, 6.706899999999599e-05, 6.668099999999899e-05, 6.733299999999581e-05, 6.752799999999726e-05, 6.718099999999949e-05, 6.691699999999967e-05, 6.695899999999838e-05, 6.699999999999762e-05, 6.680600000000259e-05, 6.724999999999787e-05, 6.72359999999983e-05, 6.720799999999916e-05, 6.745799999999941e-05, 6.727800000000395e-05, 6.683300000000225e-05, 6.727799999999701e-05, 6.69030000000001e-05, 6.712500000000121e-05, 6.674999999999737e-05, 6.677799999999651e-05, 6.75700000000029e-05, 6.676400000000388e-05, 6.691699999999967e-05, 6.731999999999572e-05, 6.67500000000043e-05, 6.715200000000088e-05, 6.686099999999445e-05, 6.702699999999728e-05, 6.700000000000456e-05, 6.741700000000017e-05, 6.756900000000343e-05, 6.681900000000268e-05, 6.704200000000327e-05, 6.701400000000413e-05, 6.693099999999924e-05, 6.70700000000024e-05]</msg>
<status status="PASS" starttime="20201030 11:53:00.348" endtime="20201030 11:53:00.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.336" endtime="20201030 11:53:00.354"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:00.364" endtime="20201030 11:53:00.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.360" endtime="20201030 11:53:00.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.357" endtime="20201030 11:53:00.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.834" endtime="20201030 11:53:00.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.833" endtime="20201030 11:53:00.390"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.414" endtime="20201030 11:53:00.438"></status>
</kw>
<msg timestamp="20201030 11:53:00.439" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:00.411" endtime="20201030 11:53:00.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:00.442" endtime="20201030 11:53:00.447"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.448" endtime="20201030 11:53:00.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.403" endtime="20201030 11:53:00.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.397" endtime="20201030 11:53:00.456"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.473" endtime="20201030 11:53:00.833"></status>
</kw>
<msg timestamp="20201030 11:53:00.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045077944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.470" endtime="20201030 11:53:00.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045077944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045145875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:00.843" endtime="20201030 11:53:00.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.863" endtime="20201030 11:53:00.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.462" endtime="20201030 11:53:00.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.457" endtime="20201030 11:53:00.871"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:00.882" level="INFO">${RESULT} = [{'diff': 6.793100000000024e-05}, {'diff': 6.85559999999974e-05}, {'diff': 6.854200000000477e-05}, {'diff': 6.815300000000135e-05}, {'diff': 6.855600000000434e-05}, {'diff': 6.86109999999962e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:00.872" endtime="20201030 11:53:00.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:00.892" level="INFO">${ACCURACY} = {'diff': [6.793100000000024e-05, 6.85559999999974e-05, 6.854200000000477e-05, 6.815300000000135e-05, 6.855600000000434e-05, 6.86109999999962e-05, 6.812500000000221e-05, 6.829100000000504e-05, 6.859799...</msg>
<status status="PASS" starttime="20201030 11:53:00.884" endtime="20201030 11:53:00.893"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.905" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:53:00.902" endtime="20201030 11:53:00.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:00.911" level="INFO">VALUE: [6.793100000000024e-05, 6.85559999999974e-05, 6.854200000000477e-05, 6.815300000000135e-05, 6.855600000000434e-05, 6.86109999999962e-05, 6.812500000000221e-05, 6.829100000000504e-05, 6.85979999999961e-05, 6.787499999999502e-05, 6.851399999999869e-05, 6.781899999999674e-05, 6.805500000000436e-05, 6.826399999999844e-05, 6.794499999999981e-05, 6.766700000000042e-05, 6.787500000000196e-05, 6.808299999999656e-05, 6.822199999999973e-05, 6.801399999999819e-05, 6.808400000000298e-05, 6.780599999999665e-05, 6.770899999999913e-05, 6.866700000000142e-05, 6.79030000000011e-05, 6.774999999999837e-05, 6.813800000000231e-05, 6.809699999999613e-05, 6.852799999999826e-05, 6.852799999999826e-05, 6.792999999999383e-05, 6.845800000000041e-05, 6.780599999999665e-05, 6.797199999999948e-05, 6.834700000000332e-05, 6.772199999999923e-05, 6.770899999999913e-05, 6.861100000000314e-05, 6.848699999999902e-05, 6.837499999999552e-05, 6.82359999999993e-05, 6.856899999999749e-05, 6.837500000000246e-05, 6.822199999999973e-05, 6.805499999999742e-05, 6.770799999999966e-05, 6.847199999999998e-05, 6.829199999999758e-05, 6.85700000000039e-05, 6.80830000000035e-05]</msg>
<status status="PASS" starttime="20201030 11:53:00.908" endtime="20201030 11:53:00.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.894" endtime="20201030 11:53:00.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:00.930" endtime="20201030 11:53:00.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.920" endtime="20201030 11:53:00.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.917" endtime="20201030 11:53:00.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.392" endtime="20201030 11:53:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.391" endtime="20201030 11:53:00.956"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:00.980" endtime="20201030 11:53:01.002"></status>
</kw>
<msg timestamp="20201030 11:53:01.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:00.977" endtime="20201030 11:53:01.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.005" endtime="20201030 11:53:01.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.012" endtime="20201030 11:53:01.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.969" endtime="20201030 11:53:01.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.963" endtime="20201030 11:53:01.019"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.037" endtime="20201030 11:53:01.395"></status>
</kw>
<msg timestamp="20201030 11:53:01.402" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043445861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.033" endtime="20201030 11:53:01.403"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043445861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043515472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.405" endtime="20201030 11:53:01.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.424" endtime="20201030 11:53:01.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.026" endtime="20201030 11:53:01.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.021" endtime="20201030 11:53:01.432"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.443" level="INFO">${RESULT} = [{'diff': 6.96109999999972e-05}, {'diff': 6.962499999999677e-05}, {'diff': 6.931899999999824e-05}, {'diff': 6.895799999999397e-05}, {'diff': 6.912499999999627e-05}, {'diff': 6.895900000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:01.433" endtime="20201030 11:53:01.443"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:01.454" level="INFO">${ACCURACY} = {'diff': [6.96109999999972e-05, 6.962499999999677e-05, 6.931899999999824e-05, 6.895799999999397e-05, 6.912499999999627e-05, 6.895900000000038e-05, 6.916699999999498e-05, 6.898600000000005e-05, 6.90279...</msg>
<status status="PASS" starttime="20201030 11:53:01.445" endtime="20201030 11:53:01.455"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.466" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:53:01.463" endtime="20201030 11:53:01.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.472" level="INFO">VALUE: [6.96109999999972e-05, 6.962499999999677e-05, 6.931899999999824e-05, 6.895799999999397e-05, 6.912499999999627e-05, 6.895900000000038e-05, 6.916699999999498e-05, 6.898600000000005e-05, 6.902799999999876e-05, 6.958400000000448e-05, 6.877799999999851e-05, 6.869400000000109e-05, 6.948600000000055e-05, 6.927699999999953e-05, 6.945799999999447e-05, 6.912500000000321e-05, 6.927799999999901e-05, 6.874999999999937e-05, 6.883299999999731e-05, 6.912500000000321e-05, 6.877800000000545e-05, 6.872200000000023e-05, 6.963900000000328e-05, 6.918099999999455e-05, 6.877799999999851e-05, 6.904099999999885e-05, 6.911100000000364e-05, 6.901399999999919e-05, 6.924999999999987e-05, 6.947200000000098e-05, 6.908299999999756e-05, 6.888900000000253e-05, 6.898600000000005e-05, 6.927799999999901e-05, 6.908399999999704e-05, 6.933399999999729e-05, 6.959699999999763e-05, 6.877699999999903e-05, 6.941699999999523e-05, 6.911100000000364e-05, 6.881900000000468e-05, 6.901299999999971e-05, 6.933399999999729e-05, 6.92909999999991e-05, 6.920799999999422e-05, 6.948600000000055e-05, 6.904199999999833e-05, 6.950000000000012e-05, 6.9583000000005e-05, 6.879199999999808e-05]</msg>
<status status="PASS" starttime="20201030 11:53:01.468" endtime="20201030 11:53:01.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.456" endtime="20201030 11:53:01.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:01.485" endtime="20201030 11:53:01.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.480" endtime="20201030 11:53:01.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.478" endtime="20201030 11:53:01.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.958" endtime="20201030 11:53:01.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:00.957" endtime="20201030 11:53:01.510"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.535" endtime="20201030 11:53:01.557"></status>
</kw>
<msg timestamp="20201030 11:53:01.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.531" endtime="20201030 11:53:01.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.565" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.561" endtime="20201030 11:53:01.566"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.567" endtime="20201030 11:53:01.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.523" endtime="20201030 11:53:01.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.517" endtime="20201030 11:53:01.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.592" endtime="20201030 11:53:01.932"></status>
</kw>
<msg timestamp="20201030 11:53:01.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043694972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043765028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.589" endtime="20201030 11:53:01.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043694972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043765028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.942" endtime="20201030 11:53:01.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.962" endtime="20201030 11:53:01.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.581" endtime="20201030 11:53:01.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.576" endtime="20201030 11:53:01.969"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.980" level="INFO">${RESULT} = [{'diff': 7.00559999999989e-05}, {'diff': 6.984699999999788e-05}, {'diff': 6.99309999999953e-05}, {'diff': 7.012499999999727e-05}, {'diff': 6.983399999999779e-05}, {'diff': 7.044499999999537e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:01.971" endtime="20201030 11:53:01.981"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:01.992" level="INFO">${ACCURACY} = {'diff': [7.00559999999989e-05, 6.984699999999788e-05, 6.99309999999953e-05, 7.012499999999727e-05, 6.983399999999779e-05, 7.044499999999537e-05, 7.058299999999906e-05, 6.97360000000008e-05, 6.9693999...</msg>
<status status="PASS" starttime="20201030 11:53:01.982" endtime="20201030 11:53:01.993"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.004" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:53:02.002" endtime="20201030 11:53:02.005"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.010" level="INFO">VALUE: [7.00559999999989e-05, 6.984699999999788e-05, 6.99309999999953e-05, 7.012499999999727e-05, 6.983399999999779e-05, 7.044499999999537e-05, 7.058299999999906e-05, 6.97360000000008e-05, 6.969399999999515e-05, 7.062499999999777e-05, 6.972200000000123e-05, 7.022200000000173e-05, 7.00559999999989e-05, 7.030499999999967e-05, 6.970800000000166e-05, 7.01109999999977e-05, 7.002799999999976e-05, 6.99030000000031e-05, 7.068099999999605e-05, 6.970900000000113e-05, 7.002799999999976e-05, 6.99160000000032e-05, 7.025000000000087e-05, 7.004099999999985e-05, 7.05559999999994e-05, 6.99030000000031e-05, 7.025000000000087e-05, 6.991700000000267e-05, 7.029199999999958e-05, 7.00559999999989e-05, 6.99439999999954e-05, 7.048599999999461e-05, 7.065299999999691e-05, 7.051400000000069e-05, 7.06109999999982e-05, 7.058399999999854e-05, 6.997299999999401e-05, 7.027700000000053e-05, 7.048599999999461e-05, 7.027800000000001e-05, 7.012499999999727e-05, 6.981899999999874e-05, 7.034700000000532e-05, 7.063900000000428e-05, 7.026400000000044e-05, 7.025000000000087e-05, 7.066699999999648e-05, 7.002799999999976e-05, 6.997300000000095e-05, 6.988799999999712e-05]</msg>
<status status="PASS" starttime="20201030 11:53:02.007" endtime="20201030 11:53:02.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.994" endtime="20201030 11:53:02.013"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:02.023" endtime="20201030 11:53:02.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.019" endtime="20201030 11:53:02.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.016" endtime="20201030 11:53:02.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.513" endtime="20201030 11:53:02.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.511" endtime="20201030 11:53:02.049"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.073" endtime="20201030 11:53:02.096"></status>
</kw>
<msg timestamp="20201030 11:53:02.097" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.070" endtime="20201030 11:53:02.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.099" endtime="20201030 11:53:02.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.106" endtime="20201030 11:53:02.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.062" endtime="20201030 11:53:02.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.056" endtime="20201030 11:53:02.113"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.131" endtime="20201030 11:53:02.492"></status>
</kw>
<msg timestamp="20201030 11:53:02.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043747292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043818153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.128" endtime="20201030 11:53:02.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043747292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043818153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.502" endtime="20201030 11:53:02.520"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.522" endtime="20201030 11:53:02.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.120" endtime="20201030 11:53:02.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.115" endtime="20201030 11:53:02.529"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:02.540" level="INFO">${RESULT} = [{'diff': 7.086099999999845e-05}, {'diff': 7.152800000000126e-05}, {'diff': 7.12910000000011e-05}, {'diff': 7.133399999999929e-05}, {'diff': 7.154199999999389e-05}, {'diff': 7.168099999999705e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:02.531" endtime="20201030 11:53:02.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:02.550" level="INFO">${ACCURACY} = {'diff': [7.086099999999845e-05, 7.152800000000126e-05, 7.12910000000011e-05, 7.133399999999929e-05, 7.154199999999389e-05, 7.168099999999705e-05, 7.084699999999888e-05, 7.145800000000341e-05, 7.16109...</msg>
<status status="PASS" starttime="20201030 11:53:02.542" endtime="20201030 11:53:02.551"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.562" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:53:02.559" endtime="20201030 11:53:02.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.567" level="INFO">VALUE: [7.086099999999845e-05, 7.152800000000126e-05, 7.12910000000011e-05, 7.133399999999929e-05, 7.154199999999389e-05, 7.168099999999705e-05, 7.084699999999888e-05, 7.145800000000341e-05, 7.16109999999992e-05, 7.16109999999992e-05, 7.126400000000144e-05, 7.115299999999741e-05, 7.158300000000006e-05, 7.097200000000248e-05, 7.104100000000085e-05, 7.090199999999769e-05, 7.141599999999776e-05, 7.137499999999852e-05, 7.154200000000083e-05, 7.148599999999561e-05, 7.072199999999529e-05, 7.127800000000101e-05, 7.094499999999587e-05, 7.12360000000023e-05, 7.15560000000004e-05, 7.137499999999852e-05, 7.105500000000042e-05, 7.098700000000152e-05, 7.072200000000223e-05, 7.134699999999938e-05, 7.148600000000255e-05, 7.087499999999802e-05, 7.148600000000255e-05, 7.11109999999987e-05, 7.150000000000212e-05, 7.15690000000005e-05, 7.069499999999562e-05, 7.086199999999793e-05, 7.080600000000659e-05, 7.162499999999877e-05, 7.072199999999529e-05, 7.115299999999741e-05, 7.125000000000187e-05, 7.109699999999913e-05, 7.09439999999964e-05, 7.108299999999956e-05, 7.093000000000377e-05, 7.083299999999931e-05, 7.141699999999723e-05, 7.111100000000564e-05]</msg>
<status status="PASS" starttime="20201030 11:53:02.564" endtime="20201030 11:53:02.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.552" endtime="20201030 11:53:02.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:02.581" endtime="20201030 11:53:02.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.576" endtime="20201030 11:53:02.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.574" endtime="20201030 11:53:02.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.051" endtime="20201030 11:53:02.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.050" endtime="20201030 11:53:02.607"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.631" endtime="20201030 11:53:02.655"></status>
</kw>
<msg timestamp="20201030 11:53:02.656" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.627" endtime="20201030 11:53:02.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.659" endtime="20201030 11:53:02.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.665" endtime="20201030 11:53:02.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.620" endtime="20201030 11:53:02.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.613" endtime="20201030 11:53:02.673"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.690" endtime="20201030 11:53:03.050"></status>
</kw>
<msg timestamp="20201030 11:53:03.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045337944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:02.687" endtime="20201030 11:53:03.059"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.078" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045265417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045337944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.060" endtime="20201030 11:53:03.079"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.080" endtime="20201030 11:53:03.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.679" endtime="20201030 11:53:03.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.674" endtime="20201030 11:53:03.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:03.099" level="INFO">${RESULT} = [{'diff': 7.252699999999584e-05}, {'diff': 7.21109999999997e-05}, {'diff': 7.266599999999901e-05}, {'diff': 7.220800000000416e-05}, {'diff': 7.197200000000348e-05}, {'diff': 7.2069000000001e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:53:03.089" endtime="20201030 11:53:03.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:03.109" level="INFO">${ACCURACY} = {'diff': [7.252699999999584e-05, 7.21109999999997e-05, 7.266599999999901e-05, 7.220800000000416e-05, 7.197200000000348e-05, 7.2069000000001e-05, 7.195799999999697e-05, 7.184699999999988e-05, 7.2388999...</msg>
<status status="PASS" starttime="20201030 11:53:03.101" endtime="20201030 11:53:03.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.120" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:53:03.118" endtime="20201030 11:53:03.121"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.126" level="INFO">VALUE: [7.252699999999584e-05, 7.21109999999997e-05, 7.266599999999901e-05, 7.220800000000416e-05, 7.197200000000348e-05, 7.2069000000001e-05, 7.195799999999697e-05, 7.184699999999988e-05, 7.238899999999909e-05, 7.22360000000033e-05, 7.231999999999378e-05, 7.20560000000009e-05, 7.204199999999439e-05, 7.193000000000477e-05, 7.184699999999988e-05, 7.19439999999974e-05, 7.23189999999943e-05, 7.213899999999884e-05, 7.192999999999783e-05, 7.227799999999507e-05, 7.2069000000001e-05, 7.197199999999654e-05, 7.195800000000391e-05, 7.201400000000219e-05, 7.236099999999995e-05, 7.17360000000028e-05, 7.229200000000158e-05, 7.180500000000117e-05, 7.251400000000269e-05, 7.219400000000459e-05, 7.251400000000269e-05, 7.255500000000192e-05, 7.26110000000002e-05, 7.194400000000434e-05, 7.227800000000201e-05, 7.234700000000038e-05, 7.208400000000004e-05, 7.208300000000056e-05, 7.224999999999593e-05, 7.230600000000115e-05, 7.222199999999679e-05, 7.227800000000201e-05, 7.227799999999507e-05, 7.220799999999722e-05, 7.183300000000031e-05, 7.22639999999955e-05, 7.233300000000081e-05, 7.233300000000081e-05, 7.212499999999927e-05, 7.230600000000115e-05]</msg>
<status status="PASS" starttime="20201030 11:53:03.123" endtime="20201030 11:53:03.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.111" endtime="20201030 11:53:03.137"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:03.148" endtime="20201030 11:53:03.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.142" endtime="20201030 11:53:03.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.139" endtime="20201030 11:53:03.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.609" endtime="20201030 11:53:03.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.608" endtime="20201030 11:53:03.174"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.198" endtime="20201030 11:53:03.220"></status>
</kw>
<msg timestamp="20201030 11:53:03.221" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.195" endtime="20201030 11:53:03.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.228" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.224" endtime="20201030 11:53:03.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.230" endtime="20201030 11:53:03.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.187" endtime="20201030 11:53:03.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.181" endtime="20201030 11:53:03.238"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.255" endtime="20201030 11:53:03.614"></status>
</kw>
<msg timestamp="20201030 11:53:03.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043503569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043576319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.252" endtime="20201030 11:53:03.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043503569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043576319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:03.624" endtime="20201030 11:53:03.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.644" endtime="20201030 11:53:03.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.244" endtime="20201030 11:53:03.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.239" endtime="20201030 11:53:03.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:03.662" level="INFO">${RESULT} = [{'diff': 7.275000000000337e-05}, {'diff': 7.312500000000027e-05}, {'diff': 7.334700000000138e-05}, {'diff': 7.330500000000267e-05}, {'diff': 7.269399999999815e-05}, {'diff': 7.291700000000567e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:03.652" endtime="20201030 11:53:03.662"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:03.673" level="INFO">${ACCURACY} = {'diff': [7.275000000000337e-05, 7.312500000000027e-05, 7.334700000000138e-05, 7.330500000000267e-05, 7.269399999999815e-05, 7.291700000000567e-05, 7.277799999999557e-05, 7.347300000000445e-05, 7.2721...</msg>
<status status="PASS" starttime="20201030 11:53:03.664" endtime="20201030 11:53:03.674"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.685" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:53:03.683" endtime="20201030 11:53:03.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.691" level="INFO">VALUE: [7.275000000000337e-05, 7.312500000000027e-05, 7.334700000000138e-05, 7.330500000000267e-05, 7.269399999999815e-05, 7.291700000000567e-05, 7.277799999999557e-05, 7.347300000000445e-05, 7.272199999999729e-05, 7.302799999999582e-05, 7.30560000000019e-05, 7.362500000000077e-05, 7.322199999999779e-05, 7.33189999999953e-05, 7.334700000000138e-05, 7.333299999999487e-05, 7.283300000000131e-05, 7.301400000000319e-05, 7.312500000000027e-05, 7.348599999999761e-05, 7.338900000000009e-05, 7.311099999999376e-05, 7.272200000000423e-05, 7.273599999999686e-05, 7.298599999999711e-05, 7.268099999999805e-05, 7.311200000000018e-05, 7.334700000000138e-05, 7.323599999999736e-05, 7.286100000000045e-05, 7.362500000000077e-05, 7.283300000000131e-05, 7.334700000000138e-05, 7.31110000000007e-05, 7.269499999999762e-05, 7.270799999999772e-05, 7.265299999999891e-05, 7.324999999999693e-05, 7.304200000000233e-05, 7.273700000000327e-05, 7.309799999999367e-05, 7.293000000000577e-05, 7.302700000000328e-05, 7.305500000000242e-05, 7.305499999999548e-05, 7.295800000000491e-05, 7.308300000000156e-05, 7.324999999999693e-05, 7.352800000000326e-05, 7.312500000000027e-05]</msg>
<status status="PASS" starttime="20201030 11:53:03.688" endtime="20201030 11:53:03.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.675" endtime="20201030 11:53:03.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:03.704" endtime="20201030 11:53:03.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.699" endtime="20201030 11:53:03.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.697" endtime="20201030 11:53:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.176" endtime="20201030 11:53:03.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.175" endtime="20201030 11:53:03.730"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.754" endtime="20201030 11:53:03.777"></status>
</kw>
<msg timestamp="20201030 11:53:03.778" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.750" endtime="20201030 11:53:03.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:03.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:03.780" endtime="20201030 11:53:03.785"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.787" endtime="20201030 11:53:03.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.743" endtime="20201030 11:53:03.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.737" endtime="20201030 11:53:03.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:03.812" endtime="20201030 11:53:04.176"></status>
</kw>
<msg timestamp="20201030 11:53:04.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043794, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043868236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:03.808" endtime="20201030 11:53:04.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043794, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043868236, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:04.186" endtime="20201030 11:53:04.204"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.206" endtime="20201030 11:53:04.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.801" endtime="20201030 11:53:04.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.796" endtime="20201030 11:53:04.213"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:04.224" level="INFO">${RESULT} = [{'diff': 7.423599999999836e-05}, {'diff': 7.459700000000263e-05}, {'diff': 7.42910000000041e-05}, {'diff': 7.423599999999836e-05}, {'diff': 7.404100000000385e-05}, {'diff': 7.384700000000188e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:04.215" endtime="20201030 11:53:04.225"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:04.236" level="INFO">${ACCURACY} = {'diff': [7.423599999999836e-05, 7.459700000000263e-05, 7.42910000000041e-05, 7.423599999999836e-05, 7.404100000000385e-05, 7.384700000000188e-05, 7.447199999999904e-05, 7.420799999999922e-05, 7.44579...</msg>
<status status="PASS" starttime="20201030 11:53:04.226" endtime="20201030 11:53:04.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.248" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:53:04.245" endtime="20201030 11:53:04.249"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.254" level="INFO">VALUE: [7.423599999999836e-05, 7.459700000000263e-05, 7.42910000000041e-05, 7.423599999999836e-05, 7.404100000000385e-05, 7.384700000000188e-05, 7.447199999999904e-05, 7.420799999999922e-05, 7.445799999999947e-05, 7.386100000000145e-05, 7.469400000000015e-05, 7.369499999999862e-05, 7.440200000000119e-05, 7.441700000000023e-05, 7.448700000000502e-05, 7.387500000000102e-05, 7.398599999999811e-05, 7.408300000000256e-05, 7.43189999999963e-05, 7.447199999999904e-05, 7.37360000000048e-05, 7.369499999999862e-05, 7.430600000000315e-05, 7.459799999999517e-05, 7.427799999999707e-05, 7.441700000000023e-05, 7.380600000000265e-05, 7.468000000000058e-05, 7.382000000000222e-05, 7.433300000000281e-05, 7.45690000000035e-05, 7.465200000000144e-05, 7.374999999999743e-05, 7.416699999999998e-05, 7.406899999999605e-05, 7.429200000000358e-05, 7.437499999999458e-05, 7.42360000000053e-05, 7.459799999999517e-05, 7.423599999999836e-05, 7.394499999999887e-05, 7.411200000000118e-05, 7.37910000000036e-05, 7.387500000000102e-05, 7.42639999999975e-05, 7.400000000000462e-05, 7.370799999999872e-05, 7.408300000000256e-05, 7.402799999999682e-05, 7.415300000000041e-05]</msg>
<status status="PASS" starttime="20201030 11:53:04.250" endtime="20201030 11:53:04.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.238" endtime="20201030 11:53:04.257"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:04.267" endtime="20201030 11:53:04.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.263" endtime="20201030 11:53:04.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.260" endtime="20201030 11:53:04.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.732" endtime="20201030 11:53:04.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:03.731" endtime="20201030 11:53:04.293"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.317" endtime="20201030 11:53:04.340"></status>
</kw>
<msg timestamp="20201030 11:53:04.341" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.314" endtime="20201030 11:53:04.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.343" endtime="20201030 11:53:04.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.350" endtime="20201030 11:53:04.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.306" endtime="20201030 11:53:04.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.300" endtime="20201030 11:53:04.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.375" endtime="20201030 11:53:04.746"></status>
</kw>
<msg timestamp="20201030 11:53:04.754" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043705708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.371" endtime="20201030 11:53:04.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043630889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043705708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.756" endtime="20201030 11:53:04.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.776" endtime="20201030 11:53:04.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.364" endtime="20201030 11:53:04.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.359" endtime="20201030 11:53:04.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:04.795" level="INFO">${RESULT} = [{'diff': 7.481900000000374e-05}, {'diff': 7.508299999999662e-05}, {'diff': 7.486100000000245e-05}, {'diff': 7.566700000000148e-05}, {'diff': 7.548599999999961e-05}, {'diff': 7.488899999999465e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:04.785" endtime="20201030 11:53:04.795"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:04.805" level="INFO">${ACCURACY} = {'diff': [7.481900000000374e-05, 7.508299999999662e-05, 7.486100000000245e-05, 7.566700000000148e-05, 7.548599999999961e-05, 7.488899999999465e-05, 7.474999999999843e-05, 7.537500000000252e-05, 7.4833...</msg>
<status status="PASS" starttime="20201030 11:53:04.797" endtime="20201030 11:53:04.805"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.816" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:53:04.814" endtime="20201030 11:53:04.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.822" level="INFO">VALUE: [7.481900000000374e-05, 7.508299999999662e-05, 7.486100000000245e-05, 7.566700000000148e-05, 7.548599999999961e-05, 7.488899999999465e-05, 7.474999999999843e-05, 7.537500000000252e-05, 7.483399999999585e-05, 7.533399999999635e-05, 7.548699999999908e-05, 7.545800000000047e-05, 7.530499999999773e-05, 7.512499999999533e-05, 7.527799999999807e-05, 7.484699999999594e-05, 7.49310000000003e-05, 7.536100000000295e-05, 7.554199999999789e-05, 7.541700000000123e-05, 7.55839999999966e-05, 7.531999999999678e-05, 7.491700000000073e-05, 7.52360000000063e-05, 7.507000000000347e-05, 7.523599999999936e-05, 7.470799999999972e-05, 7.484700000000288e-05, 7.534699999999644e-05, 7.527799999999807e-05, 7.487500000000202e-05, 7.53890000000021e-05, 7.523599999999936e-05, 7.516700000000098e-05, 7.565299999999497e-05, 7.536100000000295e-05, 7.529199999999764e-05, 7.524999999999893e-05, 7.507000000000347e-05, 7.498599999999911e-05, 7.552699999999885e-05, 7.5069000000004e-05, 7.562500000000277e-05, 7.498599999999911e-05, 7.500000000000562e-05, 7.524999999999893e-05, 7.475000000000537e-05, 7.474999999999843e-05, 7.520899999999969e-05, 7.501399999999825e-05]</msg>
<status status="PASS" starttime="20201030 11:53:04.819" endtime="20201030 11:53:04.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.807" endtime="20201030 11:53:04.825"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:04.835" endtime="20201030 11:53:04.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.831" endtime="20201030 11:53:04.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.828" endtime="20201030 11:53:04.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.295" endtime="20201030 11:53:04.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.294" endtime="20201030 11:53:04.861"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.886" endtime="20201030 11:53:04.909"></status>
</kw>
<msg timestamp="20201030 11:53:04.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.882" endtime="20201030 11:53:04.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:04.917" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:04.913" endtime="20201030 11:53:04.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.919" endtime="20201030 11:53:04.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.874" endtime="20201030 11:53:04.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.868" endtime="20201030 11:53:04.927"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:04.944" endtime="20201030 11:53:05.269"></status>
</kw>
<msg timestamp="20201030 11:53:05.272" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045859764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:04.941" endtime="20201030 11:53:05.272"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045859764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045935514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:05.273" endtime="20201030 11:53:05.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.282" endtime="20201030 11:53:05.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.933" endtime="20201030 11:53:05.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.928" endtime="20201030 11:53:05.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:05.290" level="INFO">${RESULT} = [{'diff': 7.574999999999943e-05}, {'diff': 7.633299999999787e-05}, {'diff': 7.59169999999948e-05}, {'diff': 7.604199999999839e-05}, {'diff': 7.620900000000069e-05}, {'diff': 7.644500000000137e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:05.286" endtime="20201030 11:53:05.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:05.295" level="INFO">${ACCURACY} = {'diff': [7.574999999999943e-05, 7.633299999999787e-05, 7.59169999999948e-05, 7.604199999999839e-05, 7.620900000000069e-05, 7.644500000000137e-05, 7.641700000000223e-05, 7.616599999999557e-05, 7.61250...</msg>
<status status="PASS" starttime="20201030 11:53:05.291" endtime="20201030 11:53:05.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.300" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:53:05.299" endtime="20201030 11:53:05.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.303" level="INFO">VALUE: [7.574999999999943e-05, 7.633299999999787e-05, 7.59169999999948e-05, 7.604199999999839e-05, 7.620900000000069e-05, 7.644500000000137e-05, 7.641700000000223e-05, 7.616599999999557e-05, 7.612500000000327e-05, 7.643000000000233e-05, 7.595800000000097e-05, 7.574999999999943e-05, 7.58189999999978e-05, 7.63890000000031e-05, 7.651399999999975e-05, 7.587500000000302e-05, 7.586099999999651e-05, 7.650000000000018e-05, 7.615300000000241e-05, 7.600000000000662e-05, 7.573599999999986e-05, 7.606999999999753e-05, 7.5763999999999e-05, 7.652799999999932e-05, 7.569400000000115e-05, 7.658300000000506e-05, 7.66110000000042e-05, 7.587499999999608e-05, 7.654199999999889e-05, 7.595900000000044e-05, 7.590300000000216e-05, 7.61110000000037e-05, 7.591600000000226e-05, 7.574999999999943e-05, 7.599999999999968e-05, 7.629099999999917e-05, 7.608299999999762e-05, 7.6069000000005e-05, 7.608300000000456e-05, 7.668100000000205e-05, 7.640299999999572e-05, 7.644500000000137e-05, 7.623599999999342e-05, 7.586100000000345e-05, 7.569499999999368e-05, 7.619500000000112e-05, 7.665300000000291e-05, 7.595900000000044e-05, 7.590300000000216e-05, 7.599999999999968e-05]</msg>
<status status="PASS" starttime="20201030 11:53:05.301" endtime="20201030 11:53:05.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.296" endtime="20201030 11:53:05.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:05.310" endtime="20201030 11:53:05.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.307" endtime="20201030 11:53:05.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.306" endtime="20201030 11:53:05.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.864" endtime="20201030 11:53:05.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:04.862" endtime="20201030 11:53:05.335"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.359" endtime="20201030 11:53:05.381"></status>
</kw>
<msg timestamp="20201030 11:53:05.383" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.356" endtime="20201030 11:53:05.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.389" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.385" endtime="20201030 11:53:05.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.392" endtime="20201030 11:53:05.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.348" endtime="20201030 11:53:05.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.342" endtime="20201030 11:53:05.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.417" endtime="20201030 11:53:05.786"></status>
</kw>
<msg timestamp="20201030 11:53:05.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043651986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:05.413" endtime="20201030 11:53:05.794"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.813" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043651986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:05.796" endtime="20201030 11:53:05.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.815" endtime="20201030 11:53:05.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.405" endtime="20201030 11:53:05.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.400" endtime="20201030 11:53:05.823"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:05.834" level="INFO">${RESULT} = [{'diff': 7.702799999999982e-05}, {'diff': 7.687500000000402e-05}, {'diff': 7.687500000000402e-05}, {'diff': 7.758299999999912e-05}, {'diff': 7.686100000000445e-05}, {'diff': 7.668100000000205e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:05.824" endtime="20201030 11:53:05.834"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:05.845" level="INFO">${ACCURACY} = {'diff': [7.702799999999982e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.758299999999912e-05, 7.686100000000445e-05, 7.668100000000205e-05, 7.695799999999503e-05, 7.762499999999783e-05, 7.7319...</msg>
<status status="PASS" starttime="20201030 11:53:05.836" endtime="20201030 11:53:05.846"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.857" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:53:05.855" endtime="20201030 11:53:05.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.863" level="INFO">VALUE: [7.702799999999982e-05, 7.687500000000402e-05, 7.687500000000402e-05, 7.758299999999912e-05, 7.686100000000445e-05, 7.668100000000205e-05, 7.695799999999503e-05, 7.762499999999783e-05, 7.731999999999878e-05, 7.754199999999989e-05, 7.761099999999826e-05, 7.698600000000111e-05, 7.691600000000326e-05, 7.706999999999853e-05, 7.702799999999982e-05, 7.680499999999923e-05, 7.712500000000427e-05, 7.763900000000434e-05, 7.724999999999399e-05, 7.709700000000513e-05, 7.695799999999503e-05, 7.747200000000204e-05, 7.745800000000247e-05, 7.701400000000025e-05, 7.704199999999939e-05, 7.740300000000366e-05, 7.708299999999862e-05, 7.686100000000445e-05, 7.706899999999905e-05, 7.750000000000118e-05, 7.695800000000197e-05, 7.756899999999955e-05, 7.668000000000258e-05, 7.69440000000024e-05, 7.733299999999887e-05, 7.740299999999672e-05, 7.723599999999442e-05, 7.715200000000394e-05, 7.683399999999785e-05, 7.670900000000119e-05, 7.670800000000172e-05, 7.6764e-05, 7.705499999999949e-05, 7.687500000000402e-05, 7.734699999999844e-05, 7.702799999999982e-05, 7.734700000000538e-05, 7.741700000000323e-05, 7.708299999999862e-05, 7.683400000000479e-05]</msg>
<status status="PASS" starttime="20201030 11:53:05.860" endtime="20201030 11:53:05.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.847" endtime="20201030 11:53:05.867"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:05.877" endtime="20201030 11:53:05.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.872" endtime="20201030 11:53:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.869" endtime="20201030 11:53:05.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.337" endtime="20201030 11:53:05.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.336" endtime="20201030 11:53:05.902"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.927" endtime="20201030 11:53:05.949"></status>
</kw>
<msg timestamp="20201030 11:53:05.950" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.923" endtime="20201030 11:53:05.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:05.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:05.952" endtime="20201030 11:53:05.957"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.959" endtime="20201030 11:53:05.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.915" endtime="20201030 11:53:05.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.909" endtime="20201030 11:53:05.966"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:05.984" endtime="20201030 11:53:06.353"></status>
</kw>
<msg timestamp="20201030 11:53:06.361" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043932861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:05.980" endtime="20201030 11:53:06.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043855167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043932861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:06.363" endtime="20201030 11:53:06.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.383" endtime="20201030 11:53:06.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.973" endtime="20201030 11:53:06.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.967" endtime="20201030 11:53:06.390"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:06.401" level="INFO">${RESULT} = [{'diff': 7.769399999999621e-05}, {'diff': 7.792999999999689e-05}, {'diff': 7.780599999999971e-05}, {'diff': 7.829200000000064e-05}, {'diff': 7.859799999999917e-05}, {'diff': 7.795799999999603e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:06.392" endtime="20201030 11:53:06.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:06.418" level="INFO">${ACCURACY} = {'diff': [7.769399999999621e-05, 7.792999999999689e-05, 7.780599999999971e-05, 7.829200000000064e-05, 7.859799999999917e-05, 7.795799999999603e-05, 7.850000000000218e-05, 7.829099999999423e-05, 7.8528...</msg>
<status status="PASS" starttime="20201030 11:53:06.403" endtime="20201030 11:53:06.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.429" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:53:06.427" endtime="20201030 11:53:06.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.435" level="INFO">VALUE: [7.769399999999621e-05, 7.792999999999689e-05, 7.780599999999971e-05, 7.829200000000064e-05, 7.859799999999917e-05, 7.795799999999603e-05, 7.850000000000218e-05, 7.829099999999423e-05, 7.852800000000132e-05, 7.842999999999739e-05, 7.852700000000185e-05, 7.83190000000003e-05, 7.833299999999987e-05, 7.795799999999603e-05, 7.806900000000006e-05, 7.770800000000272e-05, 7.84310000000038e-05, 7.851400000000175e-05, 7.791599999999732e-05, 7.8151999999998e-05, 7.865299999999797e-05, 7.836199999999849e-05, 7.780500000000024e-05, 7.819399999999671e-05, 7.855500000000099e-05, 7.798600000000211e-05, 7.850000000000218e-05, 7.79310000000033e-05, 7.802799999999388e-05, 7.83190000000003e-05, 7.812499999999833e-05, 7.833299999999987e-05, 7.773600000000186e-05, 7.79310000000033e-05, 7.781999999999928e-05, 7.802800000000082e-05, 7.779100000000067e-05, 7.858300000000012e-05, 7.798599999999517e-05, 7.818099999999661e-05, 7.811099999999876e-05, 7.812499999999833e-05, 7.837499999999858e-05, 7.861099999999926e-05, 7.768099999999611e-05, 7.833399999999935e-05, 7.808400000000604e-05, 7.80839999999991e-05, 7.831999999999978e-05, 7.791600000000426e-05]</msg>
<status status="PASS" starttime="20201030 11:53:06.432" endtime="20201030 11:53:06.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.419" endtime="20201030 11:53:06.438"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:06.448" endtime="20201030 11:53:06.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.444" endtime="20201030 11:53:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.441" endtime="20201030 11:53:06.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.905" endtime="20201030 11:53:06.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:05.903" endtime="20201030 11:53:06.474"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.499" endtime="20201030 11:53:06.521"></status>
</kw>
<msg timestamp="20201030 11:53:06.522" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.495" endtime="20201030 11:53:06.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.529" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:06.524" endtime="20201030 11:53:06.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.531" endtime="20201030 11:53:06.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.487" endtime="20201030 11:53:06.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.481" endtime="20201030 11:53:06.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.556" endtime="20201030 11:53:06.920"></status>
</kw>
<msg timestamp="20201030 11:53:06.927" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043845208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043924, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:06.553" endtime="20201030 11:53:06.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043845208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043924, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:53:06.930" endtime="20201030 11:53:06.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:06.950" endtime="20201030 11:53:06.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.545" endtime="20201030 11:53:06.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.540" endtime="20201030 11:53:06.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:06.968" level="INFO">${RESULT} = [{'diff': 7.879200000000114e-05}, {'diff': 7.911099999999976e-05}, {'diff': 7.87919999999942e-05}, {'diff': 7.965299999999897e-05}, {'diff': 7.907000000000053e-05}, {'diff': 7.92640000000025e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:06.959" endtime="20201030 11:53:06.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:06.978" level="INFO">${ACCURACY} = {'diff': [7.879200000000114e-05, 7.911099999999976e-05, 7.87919999999942e-05, 7.965299999999897e-05, 7.907000000000053e-05, 7.92640000000025e-05, 7.912499999999933e-05, 7.922299999999632e-05, 7.927699...</msg>
<status status="PASS" starttime="20201030 11:53:06.970" endtime="20201030 11:53:06.978"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.990" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:53:06.987" endtime="20201030 11:53:06.990"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:06.996" level="INFO">VALUE: [7.879200000000114e-05, 7.911099999999976e-05, 7.87919999999942e-05, 7.965299999999897e-05, 7.907000000000053e-05, 7.92640000000025e-05, 7.912499999999933e-05, 7.922299999999632e-05, 7.927699999999566e-05, 7.908300000000063e-05, 7.92770000000026e-05, 7.886099999999951e-05, 7.88190000000008e-05, 7.872200000000329e-05, 7.887499999999908e-05, 7.90840000000001e-05, 7.907000000000053e-05, 7.898599999999617e-05, 7.951400000000275e-05, 7.923600000000336e-05, 7.92640000000025e-05, 7.955500000000199e-05, 7.912500000000627e-05, 7.96519999999995e-05, 7.892999999999789e-05, 7.945799999999753e-05, 7.933300000000088e-05, 7.880600000000071e-05, 7.945799999999753e-05, 7.930600000000121e-05, 7.933400000000035e-05, 7.92640000000025e-05, 7.869500000000362e-05, 7.948699999999614e-05, 7.961100000000026e-05, 7.87770000000021e-05, 7.906900000000106e-05, 7.96389999999994e-05, 7.943099999999786e-05, 7.902800000000182e-05, 7.883399999999985e-05, 7.892999999999789e-05, 7.912499999999933e-05, 7.887499999999908e-05, 7.901400000000225e-05, 7.962499999999983e-05, 7.907000000000053e-05, 7.898600000000311e-05, 7.96389999999994e-05, 7.929099999999523e-05]</msg>
<status status="PASS" starttime="20201030 11:53:06.992" endtime="20201030 11:53:06.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.980" endtime="20201030 11:53:06.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:07.009" endtime="20201030 11:53:07.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.004" endtime="20201030 11:53:07.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.002" endtime="20201030 11:53:07.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.477" endtime="20201030 11:53:07.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:06.475" endtime="20201030 11:53:07.034"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.059" endtime="20201030 11:53:07.083"></status>
</kw>
<msg timestamp="20201030 11:53:07.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.055" endtime="20201030 11:53:07.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.087" endtime="20201030 11:53:07.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.094" endtime="20201030 11:53:07.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.048" endtime="20201030 11:53:07.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.041" endtime="20201030 11:53:07.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.120" endtime="20201030 11:53:07.480"></status>
</kw>
<msg timestamp="20201030 11:53:07.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.117" endtime="20201030 11:53:07.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045562444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045642264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.490" endtime="20201030 11:53:07.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.509" endtime="20201030 11:53:07.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.109" endtime="20201030 11:53:07.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.104" endtime="20201030 11:53:07.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:07.528" level="INFO">${RESULT} = [{'diff': 7.982000000000128e-05}, {'diff': 8.047299999999757e-05}, {'diff': 7.988899999999965e-05}, {'diff': 7.992999999999889e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.058299999999519e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:07.518" endtime="20201030 11:53:07.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:07.538" level="INFO">${ACCURACY} = {'diff': [7.982000000000128e-05, 8.047299999999757e-05, 7.988899999999965e-05, 7.992999999999889e-05, 7.987500000000008e-05, 8.058299999999519e-05, 8.050000000000418e-05, 8.051399999999681e-05, 8.0291...</msg>
<status status="PASS" starttime="20201030 11:53:07.530" endtime="20201030 11:53:07.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.550" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:53:07.547" endtime="20201030 11:53:07.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.555" level="INFO">VALUE: [7.982000000000128e-05, 8.047299999999757e-05, 7.988899999999965e-05, 7.992999999999889e-05, 7.987500000000008e-05, 8.058299999999519e-05, 8.050000000000418e-05, 8.051399999999681e-05, 8.02919999999957e-05, 7.979200000000214e-05, 8.058300000000213e-05, 7.987500000000008e-05, 7.979200000000214e-05, 8.001400000000325e-05, 7.993099999999836e-05, 7.979200000000214e-05, 8.065299999999997e-05, 8.011200000000024e-05, 8.023599999999742e-05, 7.979200000000214e-05, 8.01389999999999e-05, 8.061100000000126e-05, 7.993000000000583e-05, 8.033300000000188e-05, 8.023600000000436e-05, 8.000000000000368e-05, 8.054200000000289e-05, 8.032000000000178e-05, 8.049999999999724e-05, 8.011100000000076e-05, 8.052799999999638e-05, 8.002800000000282e-05, 8.049999999999724e-05, 8.04719999999981e-05, 8.045799999999853e-05, 7.994399999999846e-05, 7.992999999999889e-05, 8.023600000000436e-05, 8.033400000000135e-05, 7.995900000000444e-05, 8.047200000000504e-05, 8.004199999999545e-05, 8.0458999999998e-05, 8.006999999999459e-05, 7.973600000000386e-05, 7.969400000000515e-05, 7.991599999999932e-05, 7.994399999999846e-05, 8.023599999999742e-05, 7.972200000000429e-05]</msg>
<status status="PASS" starttime="20201030 11:53:07.552" endtime="20201030 11:53:07.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.540" endtime="20201030 11:53:07.559"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:07.570" endtime="20201030 11:53:07.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.564" endtime="20201030 11:53:07.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.561" endtime="20201030 11:53:07.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.037" endtime="20201030 11:53:07.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.036" endtime="20201030 11:53:07.596"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.620" endtime="20201030 11:53:07.642"></status>
</kw>
<msg timestamp="20201030 11:53:07.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.617" endtime="20201030 11:53:07.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:07.650" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:07.646" endtime="20201030 11:53:07.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.653" endtime="20201030 11:53:07.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.609" endtime="20201030 11:53:07.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.603" endtime="20201030 11:53:07.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:07.678" endtime="20201030 11:53:08.036"></status>
</kw>
<msg timestamp="20201030 11:53:08.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:07.674" endtime="20201030 11:53:08.045"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043410708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043491542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.047" endtime="20201030 11:53:08.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.066" endtime="20201030 11:53:08.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.667" endtime="20201030 11:53:08.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.662" endtime="20201030 11:53:08.073"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.084" level="INFO">${RESULT} = [{'diff': 8.083400000000185e-05}, {'diff': 8.119499999999918e-05}, {'diff': 8.102800000000382e-05}, {'diff': 8.094399999999946e-05}, {'diff': 8.080500000000324e-05}, {'diff': 8.107000000000253e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:08.075" endtime="20201030 11:53:08.085"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:08.096" level="INFO">${ACCURACY} = {'diff': [8.083400000000185e-05, 8.119499999999918e-05, 8.102800000000382e-05, 8.094399999999946e-05, 8.080500000000324e-05, 8.107000000000253e-05, 8.118000000000014e-05, 8.152799999999738e-05, 8.0916...</msg>
<status status="PASS" starttime="20201030 11:53:08.087" endtime="20201030 11:53:08.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.108" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:53:08.105" endtime="20201030 11:53:08.109"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.114" level="INFO">VALUE: [8.083400000000185e-05, 8.119499999999918e-05, 8.102800000000382e-05, 8.094399999999946e-05, 8.080500000000324e-05, 8.107000000000253e-05, 8.118000000000014e-05, 8.152799999999738e-05, 8.09169999999998e-05, 8.134700000000245e-05, 8.133300000000288e-05, 8.109699999999526e-05, 8.077799999999663e-05, 8.070899999999825e-05, 8.136100000000202e-05, 8.133300000000288e-05, 8.138899999999422e-05, 8.124999999999799e-05, 8.16520000000015e-05, 8.161100000000227e-05, 8.0846999999995e-05, 8.127800000000407e-05, 8.088800000000118e-05, 8.079200000000314e-05, 8.099999999999774e-05, 8.134700000000245e-05, 8.145900000000594e-05, 8.098699999999764e-05, 8.144399999999996e-05, 8.095799999999903e-05, 8.161099999999533e-05, 8.095799999999903e-05, 8.115299999999354e-05, 8.154199999999695e-05, 8.105600000000296e-05, 8.100000000000468e-05, 8.127800000000407e-05, 8.073599999999792e-05, 8.104200000000339e-05, 8.084700000000195e-05, 8.12640000000045e-05, 8.138900000000115e-05, 8.087500000000108e-05, 8.158299999999619e-05, 8.138900000000115e-05, 8.111100000000177e-05, 8.122199999999885e-05, 8.166700000000054e-05, 8.084700000000195e-05, 8.123599999999842e-05]</msg>
<status status="PASS" starttime="20201030 11:53:08.110" endtime="20201030 11:53:08.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.098" endtime="20201030 11:53:08.118"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:08.128" endtime="20201030 11:53:08.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.123" endtime="20201030 11:53:08.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.120" endtime="20201030 11:53:08.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.598" endtime="20201030 11:53:08.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:07.597" endtime="20201030 11:53:08.154"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.179" endtime="20201030 11:53:08.201"></status>
</kw>
<msg timestamp="20201030 11:53:08.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.175" endtime="20201030 11:53:08.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.204" endtime="20201030 11:53:08.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.211" endtime="20201030 11:53:08.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.167" endtime="20201030 11:53:08.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.161" endtime="20201030 11:53:08.218"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.236" endtime="20201030 11:53:08.582"></status>
</kw>
<msg timestamp="20201030 11:53:08.585" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043741181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.232" endtime="20201030 11:53:08.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043741181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043823042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.587" endtime="20201030 11:53:08.594"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.595" endtime="20201030 11:53:08.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.225" endtime="20201030 11:53:08.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.220" endtime="20201030 11:53:08.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.603" level="INFO">${RESULT} = [{'diff': 8.186100000000252e-05}, {'diff': 8.216700000000104e-05}, {'diff': 8.211200000000224e-05}, {'diff': 8.251299999999934e-05}, {'diff': 8.187500000000208e-05}, {'diff': 8.183299999999644e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:08.599" endtime="20201030 11:53:08.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:08.609" level="INFO">${ACCURACY} = {'diff': [8.186100000000252e-05, 8.216700000000104e-05, 8.211200000000224e-05, 8.251299999999934e-05, 8.187500000000208e-05, 8.183299999999644e-05, 8.190300000000122e-05, 8.200000000000568e-05, 8.2583...</msg>
<status status="PASS" starttime="20201030 11:53:08.604" endtime="20201030 11:53:08.609"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.614" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:53:08.613" endtime="20201030 11:53:08.615"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.617" level="INFO">VALUE: [8.186100000000252e-05, 8.216700000000104e-05, 8.211200000000224e-05, 8.251299999999934e-05, 8.187500000000208e-05, 8.183299999999644e-05, 8.190300000000122e-05, 8.200000000000568e-05, 8.258300000000413e-05, 8.18190000000038e-05, 8.183300000000338e-05, 8.187499999999515e-05, 8.204200000000439e-05, 8.173599999999892e-05, 8.211200000000224e-05, 8.254099999999848e-05, 8.202700000000535e-05, 8.169400000000021e-05, 8.237500000000259e-05, 8.188900000000165e-05, 8.16669999999936e-05, 8.208299999999669e-05, 8.268100000000111e-05, 8.244500000000043e-05, 8.220899999999975e-05, 8.176399999999806e-05, 8.176299999999859e-05, 8.181999999999634e-05, 8.193000000000089e-05, 8.191600000000132e-05, 8.266599999999513e-05, 8.204099999999798e-05, 8.266700000000154e-05, 8.231899999999737e-05, 8.187499999999515e-05, 8.258299999999719e-05, 8.202800000000482e-05, 8.198599999999917e-05, 8.272200000000035e-05, 8.176300000000553e-05, 8.186100000000252e-05, 8.211100000000277e-05, 8.222199999999985e-05, 8.238899999999522e-05, 8.218000000000114e-05, 8.183300000000338e-05, 8.201399999999831e-05, 8.261100000000327e-05, 8.223599999999942e-05, 8.25970000000037e-05]</msg>
<status status="PASS" starttime="20201030 11:53:08.616" endtime="20201030 11:53:08.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.610" endtime="20201030 11:53:08.625"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:08.630" endtime="20201030 11:53:08.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.627" endtime="20201030 11:53:08.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.626" endtime="20201030 11:53:08.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.156" endtime="20201030 11:53:08.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.155" endtime="20201030 11:53:08.651"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.673" endtime="20201030 11:53:08.696"></status>
</kw>
<msg timestamp="20201030 11:53:08.697" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.670" endtime="20201030 11:53:08.697"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.699" endtime="20201030 11:53:08.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.706" endtime="20201030 11:53:08.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.662" endtime="20201030 11:53:08.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.656" endtime="20201030 11:53:08.713"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.731" endtime="20201030 11:53:09.093"></status>
</kw>
<msg timestamp="20201030 11:53:09.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038288681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0383715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:08.727" endtime="20201030 11:53:09.101"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.038288681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0383715, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:53:09.103" endtime="20201030 11:53:09.121"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.122" endtime="20201030 11:53:09.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.720" endtime="20201030 11:53:09.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.714" endtime="20201030 11:53:09.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:09.141" level="INFO">${RESULT} = [{'diff': 8.28190000000048e-05}, {'diff': 8.307000000000453e-05}, {'diff': 8.320900000000075e-05}, {'diff': 8.36390000000034e-05}, {'diff': 8.29590000000005e-05}, {'diff': 8.288799999999624e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:53:09.131" endtime="20201030 11:53:09.141"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:09.151" level="INFO">${ACCURACY} = {'diff': [8.28190000000048e-05, 8.307000000000453e-05, 8.320900000000075e-05, 8.36390000000034e-05, 8.29590000000005e-05, 8.288799999999624e-05, 8.35840000000046e-05, 8.329099999999923e-05, 8.32909999...</msg>
<status status="PASS" starttime="20201030 11:53:09.143" endtime="20201030 11:53:09.152"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.164" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:53:09.161" endtime="20201030 11:53:09.164"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.170" level="INFO">VALUE: [8.28190000000048e-05, 8.307000000000453e-05, 8.320900000000075e-05, 8.36390000000034e-05, 8.29590000000005e-05, 8.288799999999624e-05, 8.35840000000046e-05, 8.329099999999923e-05, 8.329099999999923e-05, 8.336099999999708e-05, 8.361099999999733e-05, 8.362500000000384e-05, 8.307000000000453e-05, 8.31390000000029e-05, 8.320900000000075e-05, 8.350000000000024e-05, 8.347300000000057e-05, 8.31119999999963e-05, 8.35970000000047e-05, 8.298600000000017e-05, 8.327699999999966e-05, 8.283299999999744e-05, 8.2764000000006e-05, 8.305599999999802e-05, 8.348600000000067e-05, 8.366700000000254e-05, 8.311100000000377e-05, 8.361099999999733e-05, 8.326399999999956e-05, 8.288900000000265e-05, 8.288799999999624e-05, 8.336199999999655e-05, 8.269400000000121e-05, 8.327699999999966e-05, 8.273599999999992e-05, 8.358299999999819e-05, 8.284700000000395e-05, 8.311100000000377e-05, 8.340300000000272e-05, 8.316700000000204e-05, 8.350000000000024e-05, 8.273599999999992e-05, 8.302799999999888e-05, 8.276299999999959e-05, 8.273599999999992e-05, 8.306899999999812e-05, 8.361099999999733e-05, 8.351399999999981e-05, 8.295800000000103e-05, 8.305599999999802e-05]</msg>
<status status="PASS" starttime="20201030 11:53:09.166" endtime="20201030 11:53:09.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.153" endtime="20201030 11:53:09.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:09.184" endtime="20201030 11:53:09.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.179" endtime="20201030 11:53:09.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.176" endtime="20201030 11:53:09.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.652" endtime="20201030 11:53:09.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.651" endtime="20201030 11:53:09.210"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.234" endtime="20201030 11:53:09.259"></status>
</kw>
<msg timestamp="20201030 11:53:09.261" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.230" endtime="20201030 11:53:09.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.267" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.263" endtime="20201030 11:53:09.268"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.270" endtime="20201030 11:53:09.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.223" endtime="20201030 11:53:09.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.217" endtime="20201030 11:53:09.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.295" endtime="20201030 11:53:09.656"></status>
</kw>
<msg timestamp="20201030 11:53:09.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.291" endtime="20201030 11:53:09.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045713764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.666" endtime="20201030 11:53:09.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.686" endtime="20201030 11:53:09.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.283" endtime="20201030 11:53:09.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.278" endtime="20201030 11:53:09.693"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:09.704" level="INFO">${RESULT} = [{'diff': 8.419499999999525e-05}, {'diff': 8.383299999999844e-05}, {'diff': 8.455500000000005e-05}, {'diff': 8.459699999999876e-05}, {'diff': 8.426400000000056e-05}, {'diff': 8.384799999999748e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:09.695" endtime="20201030 11:53:09.705"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:09.714" level="INFO">${ACCURACY} = {'diff': [8.419499999999525e-05, 8.383299999999844e-05, 8.455500000000005e-05, 8.459699999999876e-05, 8.426400000000056e-05, 8.384799999999748e-05, 8.395899999999457e-05, 8.380599999999877e-05, 8.4237...</msg>
<status status="PASS" starttime="20201030 11:53:09.707" endtime="20201030 11:53:09.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.726" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:53:09.724" endtime="20201030 11:53:09.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.732" level="INFO">VALUE: [8.419499999999525e-05, 8.383299999999844e-05, 8.455500000000005e-05, 8.459699999999876e-05, 8.426400000000056e-05, 8.384799999999748e-05, 8.395899999999457e-05, 8.380599999999877e-05, 8.42370000000009e-05, 8.393000000000289e-05, 8.420800000000228e-05, 8.441600000000382e-05, 8.404199999999945e-05, 8.372199999999441e-05, 8.3846999999998e-05, 8.448600000000167e-05, 8.398600000000117e-05, 8.380599999999877e-05, 8.433399999999841e-05, 8.459800000000517e-05, 8.386199999999705e-05, 8.440200000000425e-05, 8.380599999999877e-05, 8.458299999999919e-05, 8.413899999999697e-05, 8.420799999999534e-05, 8.466700000000354e-05, 8.455599999999952e-05, 8.450000000000124e-05, 8.382000000000528e-05, 8.430599999999927e-05, 8.437500000000459e-05, 8.41249999999974e-05, 8.41249999999974e-05, 8.366599999999613e-05, 8.413899999999697e-05, 8.431899999999937e-05, 8.405499999999955e-05, 8.381899999999887e-05, 8.416700000000304e-05, 8.373600000000092e-05, 8.391699999999586e-05, 8.423600000000142e-05, 8.454199999999995e-05, 8.420800000000228e-05, 8.434700000000545e-05, 8.374999999999355e-05, 8.438900000000416e-05, 8.402700000000041e-05, 8.390300000000323e-05]</msg>
<status status="PASS" starttime="20201030 11:53:09.729" endtime="20201030 11:53:09.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.716" endtime="20201030 11:53:09.735"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:09.747" endtime="20201030 11:53:09.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.741" endtime="20201030 11:53:09.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.738" endtime="20201030 11:53:09.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.212" endtime="20201030 11:53:09.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.211" endtime="20201030 11:53:09.773"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.797" endtime="20201030 11:53:09.819"></status>
</kw>
<msg timestamp="20201030 11:53:09.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.794" endtime="20201030 11:53:09.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:09.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:09.823" endtime="20201030 11:53:09.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.829" endtime="20201030 11:53:09.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.786" endtime="20201030 11:53:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.780" endtime="20201030 11:53:09.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:09.854" endtime="20201030 11:53:10.214"></status>
</kw>
<msg timestamp="20201030 11:53:10.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043691889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:09.851" endtime="20201030 11:53:10.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043607014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043691889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.224" endtime="20201030 11:53:10.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.244" endtime="20201030 11:53:10.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.843" endtime="20201030 11:53:10.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.838" endtime="20201030 11:53:10.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:10.263" level="INFO">${RESULT} = [{'diff': 8.487499999999815e-05}, {'diff': 8.495899999999557e-05}, {'diff': 8.475000000000149e-05}, {'diff': 8.515299999999754e-05}, {'diff': 8.550000000000224e-05}, {'diff': 8.481899999999987e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:10.253" endtime="20201030 11:53:10.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:10.274" level="INFO">${ACCURACY} = {'diff': [8.487499999999815e-05, 8.495899999999557e-05, 8.475000000000149e-05, 8.515299999999754e-05, 8.550000000000224e-05, 8.481899999999987e-05, 8.476399999999412e-05, 8.515199999999806e-05, 8.5208...</msg>
<status status="PASS" starttime="20201030 11:53:10.265" endtime="20201030 11:53:10.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.286" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:53:10.283" endtime="20201030 11:53:10.287"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.292" level="INFO">VALUE: [8.487499999999815e-05, 8.495899999999557e-05, 8.475000000000149e-05, 8.515299999999754e-05, 8.550000000000224e-05, 8.481899999999987e-05, 8.476399999999412e-05, 8.515199999999806e-05, 8.520800000000328e-05, 8.533299999999994e-05, 8.545800000000353e-05, 8.480599999999977e-05, 8.495800000000303e-05, 8.504200000000045e-05, 8.487499999999815e-05, 8.552700000000191e-05, 8.557000000000009e-05, 8.51249999999984e-05, 8.488800000000518e-05, 8.504100000000098e-05, 8.566599999999813e-05, 8.524999999999505e-05, 8.508299999999969e-05, 8.486099999999858e-05, 8.47920000000002e-05, 8.519499999999625e-05, 8.509799999999873e-05, 8.540299999999779e-05, 8.537499999999865e-05, 8.56669999999976e-05, 8.566599999999813e-05, 8.529100000000123e-05, 8.555500000000105e-05, 8.481899999999987e-05, 8.526400000000156e-05, 8.523599999999548e-05, 8.559699999999976e-05, 8.552800000000138e-05, 8.501400000000131e-05, 8.550000000000224e-05, 8.470900000000225e-05, 8.490199999999781e-05, 8.52920000000007e-05, 8.479100000000073e-05, 8.557000000000009e-05, 8.531900000000037e-05, 8.531900000000037e-05, 8.527800000000113e-05, 8.473600000000192e-05, 8.502800000000088e-05]</msg>
<status status="PASS" starttime="20201030 11:53:10.288" endtime="20201030 11:53:10.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.276" endtime="20201030 11:53:10.295"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:10.305" endtime="20201030 11:53:10.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.300" endtime="20201030 11:53:10.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.298" endtime="20201030 11:53:10.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.775" endtime="20201030 11:53:10.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:09.774" endtime="20201030 11:53:10.331"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.355" endtime="20201030 11:53:10.379"></status>
</kw>
<msg timestamp="20201030 11:53:10.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.352" endtime="20201030 11:53:10.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.386" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.382" endtime="20201030 11:53:10.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.389" endtime="20201030 11:53:10.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.344" endtime="20201030 11:53:10.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.338" endtime="20201030 11:53:10.396"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.414" endtime="20201030 11:53:10.773"></status>
</kw>
<msg timestamp="20201030 11:53:10.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043981528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044068208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.410" endtime="20201030 11:53:10.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043981528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044068208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.783" endtime="20201030 11:53:10.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.802" endtime="20201030 11:53:10.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.403" endtime="20201030 11:53:10.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.397" endtime="20201030 11:53:10.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:10.821" level="INFO">${RESULT} = [{'diff': 8.66799999999987e-05}, {'diff': 8.583300000000044e-05}, {'diff': 8.569400000000421e-05}, {'diff': 8.620800000000428e-05}, {'diff': 8.604200000000145e-05}, {'diff': 8.583300000000044e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:10.812" endtime="20201030 11:53:10.821"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:10.833" level="INFO">${ACCURACY} = {'diff': [8.66799999999987e-05, 8.583300000000044e-05, 8.569400000000421e-05, 8.620800000000428e-05, 8.604200000000145e-05, 8.583300000000044e-05, 8.606999999999365e-05, 8.641699999999836e-05, 8.61249...</msg>
<status status="PASS" starttime="20201030 11:53:10.823" endtime="20201030 11:53:10.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.845" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:53:10.842" endtime="20201030 11:53:10.845"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.850" level="INFO">VALUE: [8.66799999999987e-05, 8.583300000000044e-05, 8.569400000000421e-05, 8.620800000000428e-05, 8.604200000000145e-05, 8.583300000000044e-05, 8.606999999999365e-05, 8.641699999999836e-05, 8.61249999999994e-05, 8.663899999999947e-05, 8.619500000000418e-05, 8.620899999999682e-05, 8.619399999999777e-05, 8.583300000000044e-05, 8.644400000000496e-05, 8.629199999999476e-05, 8.624999999999605e-05, 8.580600000000077e-05, 8.633300000000094e-05, 8.62920000000017e-05, 8.590299999999829e-05, 8.632000000000084e-05, 8.572300000000282e-05, 8.581900000000087e-05, 8.654099999999554e-05, 8.636100000000008e-05, 8.648600000000367e-05, 8.579100000000173e-05, 8.656899999999468e-05, 8.640299999999879e-05, 8.624999999999605e-05, 8.651400000000281e-05, 8.583399999999991e-05, 8.657000000000109e-05, 8.64999999999963e-05, 8.57370000000024e-05, 8.61249999999994e-05, 8.631900000000137e-05, 8.591599999999838e-05, 8.625000000000299e-05, 8.661100000000033e-05, 8.624999999999605e-05, 8.594400000000446e-05, 8.663899999999947e-05, 8.61669999999981e-05, 8.569500000000368e-05, 8.665299999999904e-05, 8.640199999999931e-05, 8.588899999999872e-05, 8.656899999999468e-05]</msg>
<status status="PASS" starttime="20201030 11:53:10.847" endtime="20201030 11:53:10.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.835" endtime="20201030 11:53:10.854"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:10.864" endtime="20201030 11:53:10.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.859" endtime="20201030 11:53:10.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.857" endtime="20201030 11:53:10.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.333" endtime="20201030 11:53:10.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.332" endtime="20201030 11:53:10.890"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.914" endtime="20201030 11:53:10.937"></status>
</kw>
<msg timestamp="20201030 11:53:10.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.910" endtime="20201030 11:53:10.939"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:10.945" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:10.940" endtime="20201030 11:53:10.946"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.947" endtime="20201030 11:53:10.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.903" endtime="20201030 11:53:10.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.897" endtime="20201030 11:53:10.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:10.972" endtime="20201030 11:53:11.333"></status>
</kw>
<msg timestamp="20201030 11:53:11.340" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044054833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044141778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:10.969" endtime="20201030 11:53:11.341"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044054833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044141778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.343" endtime="20201030 11:53:11.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.363" endtime="20201030 11:53:11.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.961" endtime="20201030 11:53:11.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.956" endtime="20201030 11:53:11.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:11.381" level="INFO">${RESULT} = [{'diff': 8.6944999999998e-05}, {'diff': 8.707000000000159e-05}, {'diff': 8.706999999999465e-05}, {'diff': 8.756900000000262e-05}, {'diff': 8.675000000000349e-05}, {'diff': 8.698600000000417e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:11.372" endtime="20201030 11:53:11.382"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:11.391" level="INFO">${ACCURACY} = {'diff': [8.6944999999998e-05, 8.707000000000159e-05, 8.706999999999465e-05, 8.756900000000262e-05, 8.675000000000349e-05, 8.698600000000417e-05, 8.766600000000013e-05, 8.71799999999992e-05, 8.7028000...</msg>
<status status="PASS" starttime="20201030 11:53:11.383" endtime="20201030 11:53:11.392"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.403" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:53:11.401" endtime="20201030 11:53:11.404"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.409" level="INFO">VALUE: [8.6944999999998e-05, 8.707000000000159e-05, 8.706999999999465e-05, 8.756900000000262e-05, 8.675000000000349e-05, 8.698600000000417e-05, 8.766600000000013e-05, 8.71799999999992e-05, 8.702800000000288e-05, 8.748600000000467e-05, 8.683300000000144e-05, 8.745799999999859e-05, 8.707000000000159e-05, 8.68050000000023e-05, 8.736100000000108e-05, 8.71120000000003e-05, 8.720799999999834e-05, 8.694399999999852e-05, 8.683300000000144e-05, 8.745800000000553e-05, 8.691699999999886e-05, 8.690299999999929e-05, 8.727800000000313e-05, 8.729199999999576e-05, 8.677800000000263e-05, 8.741699999999936e-05, 8.711099999999389e-05, 8.668100000000512e-05, 8.758300000000219e-05, 8.765200000000056e-05, 8.751399999999687e-05, 8.687500000000015e-05, 8.704200000000245e-05, 8.673599999999698e-05, 8.747199999999816e-05, 8.67920000000022e-05, 8.757000000000209e-05, 8.707000000000159e-05, 8.750000000000424e-05, 8.751300000000434e-05, 8.676299999999665e-05, 8.752699999999697e-05, 8.71250000000004e-05, 8.73050000000028e-05, 8.727800000000313e-05, 8.674999999999655e-05, 8.745799999999859e-05, 8.708299999999475e-05, 8.723600000000442e-05, 8.719500000000519e-05]</msg>
<status status="PASS" starttime="20201030 11:53:11.406" endtime="20201030 11:53:11.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.393" endtime="20201030 11:53:11.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:11.422" endtime="20201030 11:53:11.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.417" endtime="20201030 11:53:11.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.415" endtime="20201030 11:53:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.892" endtime="20201030 11:53:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:10.891" endtime="20201030 11:53:11.448"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.472" endtime="20201030 11:53:11.501"></status>
</kw>
<msg timestamp="20201030 11:53:11.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.469" endtime="20201030 11:53:11.503"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.504" endtime="20201030 11:53:11.510"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.511" endtime="20201030 11:53:11.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.461" endtime="20201030 11:53:11.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.455" endtime="20201030 11:53:11.519"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.536" endtime="20201030 11:53:11.893"></status>
</kw>
<msg timestamp="20201030 11:53:11.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050168861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050256681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.533" endtime="20201030 11:53:11.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.050168861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.050256681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:11.898" endtime="20201030 11:53:11.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.906" endtime="20201030 11:53:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.525" endtime="20201030 11:53:11.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.520" endtime="20201030 11:53:11.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:11.915" level="INFO">${RESULT} = [{'diff': 8.78199999999954e-05}, {'diff': 8.831899999999643e-05}, {'diff': 8.774999999999755e-05}, {'diff': 8.823599999999848e-05}, {'diff': 8.795799999999909e-05}, {'diff': 8.826399999999762e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:11.910" endtime="20201030 11:53:11.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:11.919" level="INFO">${ACCURACY} = {'diff': [8.78199999999954e-05, 8.831899999999643e-05, 8.774999999999755e-05, 8.823599999999848e-05, 8.795799999999909e-05, 8.826399999999762e-05, 8.820799999999934e-05, 8.843000000000045e-05, 8.76949...</msg>
<status status="PASS" starttime="20201030 11:53:11.916" endtime="20201030 11:53:11.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.925" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:53:11.923" endtime="20201030 11:53:11.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.927" level="INFO">VALUE: [8.78199999999954e-05, 8.831899999999643e-05, 8.774999999999755e-05, 8.823599999999848e-05, 8.795799999999909e-05, 8.826399999999762e-05, 8.820799999999934e-05, 8.843000000000045e-05, 8.769499999999875e-05, 8.783400000000191e-05, 8.82920000000037e-05, 8.834800000000198e-05, 8.801399999999737e-05, 8.833300000000294e-05, 8.836099999999514e-05, 8.834700000000251e-05, 8.820799999999934e-05, 8.792999999999995e-05, 8.777800000000363e-05, 8.834700000000251e-05, 8.78199999999954e-05, 8.81670000000001e-05, 8.804200000000345e-05, 8.86800000000007e-05, 8.79999999999978e-05, 8.845799999999959e-05, 8.809700000000226e-05, 8.811100000000183e-05, 8.784700000000201e-05, 8.86670000000006e-05, 8.845799999999959e-05, 8.800000000000474e-05, 8.841699999999342e-05, 8.787500000000115e-05, 8.795899999999857e-05, 8.827799999999719e-05, 8.782000000000234e-05, 8.822200000000585e-05, 8.802699999999747e-05, 8.795799999999909e-05, 8.781900000000287e-05, 8.794399999999952e-05, 8.813899999999403e-05, 8.855599999999658e-05, 8.808300000000269e-05, 8.786100000000158e-05, 8.823599999999848e-05, 8.809700000000226e-05, 8.779100000000373e-05, 8.854099999999754e-05]</msg>
<status status="PASS" starttime="20201030 11:53:11.926" endtime="20201030 11:53:11.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.920" endtime="20201030 11:53:11.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:11.934" endtime="20201030 11:53:11.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.931" endtime="20201030 11:53:11.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.930" endtime="20201030 11:53:11.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.450" endtime="20201030 11:53:11.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.449" endtime="20201030 11:53:11.955"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.967" endtime="20201030 11:53:11.987"></status>
</kw>
<msg timestamp="20201030 11:53:11.987" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.965" endtime="20201030 11:53:11.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.990" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.988" endtime="20201030 11:53:11.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.991" endtime="20201030 11:53:11.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.961" endtime="20201030 11:53:11.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.959" endtime="20201030 11:53:11.995"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.003" endtime="20201030 11:53:12.340"></status>
</kw>
<msg timestamp="20201030 11:53:12.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025074139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.001" endtime="20201030 11:53:12.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025074139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025163722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.350" endtime="20201030 11:53:12.368"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.370" endtime="20201030 11:53:12.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.998" endtime="20201030 11:53:12.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.995" endtime="20201030 11:53:12.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:12.388" level="INFO">${RESULT} = [{'diff': 8.958300000000072e-05}, {'diff': 8.905499999999761e-05}, {'diff': 8.93190000000009e-05}, {'diff': 8.925000000000252e-05}, {'diff': 8.923599999999948e-05}, {'diff': 8.932000000000037e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:12.379" endtime="20201030 11:53:12.389"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:12.400" level="INFO">${ACCURACY} = {'diff': [8.958300000000072e-05, 8.905499999999761e-05, 8.93190000000009e-05, 8.925000000000252e-05, 8.923599999999948e-05, 8.932000000000037e-05, 8.891700000000086e-05, 8.924999999999905e-05, 8.90129...</msg>
<status status="PASS" starttime="20201030 11:53:12.390" endtime="20201030 11:53:12.400"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.411" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:53:12.409" endtime="20201030 11:53:12.412"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.417" level="INFO">VALUE: [8.958300000000072e-05, 8.905499999999761e-05, 8.93190000000009e-05, 8.925000000000252e-05, 8.923599999999948e-05, 8.932000000000037e-05, 8.891700000000086e-05, 8.924999999999905e-05, 8.90129999999989e-05, 8.916600000000163e-05, 8.872199999999941e-05, 8.895800000000009e-05, 8.895800000000009e-05, 8.890299999999782e-05, 8.944400000000102e-05, 8.920800000000034e-05, 8.870799999999984e-05, 8.933399999999994e-05, 8.876399999999812e-05, 8.94999999999993e-05, 8.967999999999823e-05, 8.96939999999978e-05, 8.894400000000052e-05, 8.955500000000158e-05, 8.888900000000172e-05, 8.891700000000086e-05, 8.93190000000009e-05, 8.937499999999918e-05, 8.902699999999847e-05, 8.929200000000123e-05, 8.883399999999944e-05, 8.913800000000249e-05, 8.952800000000191e-05, 8.874999999999855e-05, 8.941599999999841e-05, 8.927799999999819e-05, 8.870799999999984e-05, 8.965299999999857e-05, 8.906899999999718e-05, 8.876400000000159e-05, 8.912499999999893e-05, 8.933399999999994e-05, 8.890300000000129e-05, 8.888900000000172e-05, 8.919500000000025e-05, 8.929099999999829e-05, 8.967999999999823e-05, 8.927699999999872e-05, 8.906900000000065e-05, 8.933300000000047e-05]</msg>
<status status="PASS" starttime="20201030 11:53:12.414" endtime="20201030 11:53:12.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.402" endtime="20201030 11:53:12.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:12.430" endtime="20201030 11:53:12.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.426" endtime="20201030 11:53:12.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.423" endtime="20201030 11:53:12.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.957" endtime="20201030 11:53:12.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.956" endtime="20201030 11:53:12.456"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.480" endtime="20201030 11:53:12.503"></status>
</kw>
<msg timestamp="20201030 11:53:12.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.477" endtime="20201030 11:53:12.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:12.507" endtime="20201030 11:53:12.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.514" endtime="20201030 11:53:12.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.469" endtime="20201030 11:53:12.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.463" endtime="20201030 11:53:12.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.539" endtime="20201030 11:53:12.897"></status>
</kw>
<msg timestamp="20201030 11:53:12.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043572264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.535" endtime="20201030 11:53:12.905"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043572264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043662556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:12.907" endtime="20201030 11:53:12.925"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:12.927" endtime="20201030 11:53:12.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.528" endtime="20201030 11:53:12.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.522" endtime="20201030 11:53:12.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:12.945" level="INFO">${RESULT} = [{'diff': 9.029199999999876e-05}, {'diff': 9.061199999999686e-05}, {'diff': 8.991600000000238e-05}, {'diff': 9.01250000000034e-05}, {'diff': 9.034699999999757e-05}, {'diff': 9.05000000000003e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:12.936" endtime="20201030 11:53:12.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:12.957" level="INFO">${ACCURACY} = {'diff': [9.029199999999876e-05, 9.061199999999686e-05, 8.991600000000238e-05, 9.01250000000034e-05, 9.034699999999757e-05, 9.05000000000003e-05, 9.065300000000304e-05, 9.055599999999858e-05, 9.068000...</msg>
<status status="PASS" starttime="20201030 11:53:12.947" endtime="20201030 11:53:12.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.969" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:53:12.967" endtime="20201030 11:53:12.970"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:12.975" level="INFO">VALUE: [9.029199999999876e-05, 9.061199999999686e-05, 8.991600000000238e-05, 9.01250000000034e-05, 9.034699999999757e-05, 9.05000000000003e-05, 9.065300000000304e-05, 9.055599999999858e-05, 9.06800000000027e-05, 9.027799999999919e-05, 8.987500000000315e-05, 9.032000000000484e-05, 9.056899999999868e-05, 9.0332999999998e-05, 9.011100000000383e-05, 9.001399999999937e-05, 9.047200000000116e-05, 9.047200000000116e-05, 8.988899999999578e-05, 8.990299999999535e-05, 8.968100000000118e-05, 9.023600000000048e-05, 9.013899999999603e-05, 9.020800000000134e-05, 9.041600000000288e-05, 9.017999999999526e-05, 9.072200000000141e-05, 8.981900000000487e-05, 8.991699999999492e-05, 8.98329999999975e-05, 8.973599999999998e-05, 9.052800000000638e-05, 8.976399999999912e-05, 8.977799999999869e-05, 9.011099999999689e-05, 9.047300000000064e-05, 8.998600000000023e-05, 9.004099999999904e-05, 9.025000000000005e-05, 9.008299999999775e-05, 9.004200000000545e-05, 8.988900000000272e-05, 9.027799999999919e-05, 9.047300000000064e-05, 8.984799999999654e-05, 9.061100000000433e-05, 9.054199999999901e-05, 9.040299999999585e-05, 9.033300000000494e-05, 8.99999999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:53:12.971" endtime="20201030 11:53:12.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.959" endtime="20201030 11:53:12.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:12.988" endtime="20201030 11:53:13.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.983" endtime="20201030 11:53:13.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.981" endtime="20201030 11:53:13.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.458" endtime="20201030 11:53:13.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:12.457" endtime="20201030 11:53:13.014"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.038" endtime="20201030 11:53:13.061"></status>
</kw>
<msg timestamp="20201030 11:53:13.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.034" endtime="20201030 11:53:13.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.064" endtime="20201030 11:53:13.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.071" endtime="20201030 11:53:13.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.027" endtime="20201030 11:53:13.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.021" endtime="20201030 11:53:13.079"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.096" endtime="20201030 11:53:13.458"></status>
</kw>
<msg timestamp="20201030 11:53:13.466" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.093" endtime="20201030 11:53:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.485" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043585792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043677458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.468" endtime="20201030 11:53:13.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.488" endtime="20201030 11:53:13.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.085" endtime="20201030 11:53:13.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.080" endtime="20201030 11:53:13.495"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:13.506" level="INFO">${RESULT} = [{'diff': 9.166600000000413e-05}, {'diff': 9.086099999999764e-05}, {'diff': 9.163899999999753e-05}, {'diff': 9.077799999999969e-05}, {'diff': 9.118100000000268e-05}, {'diff': 9.165300000000404e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:13.497" endtime="20201030 11:53:13.507"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:13.516" level="INFO">${ACCURACY} = {'diff': [9.166600000000413e-05, 9.086099999999764e-05, 9.163899999999753e-05, 9.077799999999969e-05, 9.118100000000268e-05, 9.165300000000404e-05, 9.08199999999984e-05, 9.151399999999393e-05, 9.07919...</msg>
<status status="PASS" starttime="20201030 11:53:13.508" endtime="20201030 11:53:13.517"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.528" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:53:13.525" endtime="20201030 11:53:13.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.533" level="INFO">VALUE: [9.166600000000413e-05, 9.086099999999764e-05, 9.163899999999753e-05, 9.077799999999969e-05, 9.118100000000268e-05, 9.165300000000404e-05, 9.08199999999984e-05, 9.151399999999393e-05, 9.079199999999926e-05, 9.088900000000372e-05, 9.165199999999762e-05, 9.154100000000054e-05, 9.104100000000004e-05, 9.090300000000329e-05, 9.101400000000037e-05, 9.083300000000544e-05, 9.145799999999565e-05, 9.073600000000098e-05, 9.102799999999994e-05, 9.08199999999984e-05, 9.105600000000602e-05, 9.141600000000388e-05, 9.123600000000148e-05, 9.122199999999497e-05, 9.129100000000029e-05, 9.154200000000001e-05, 9.108299999999875e-05, 9.081899999999893e-05, 9.129199999999976e-05, 9.095899999999463e-05, 9.079199999999926e-05, 9.079199999999926e-05, 9.083400000000491e-05, 9.10000000000008e-05, 9.134700000000551e-05, 9.094400000000252e-05, 9.090300000000329e-05, 9.113900000000397e-05, 9.118100000000268e-05, 9.113900000000397e-05, 9.129199999999976e-05, 9.148600000000173e-05, 9.11529999999966e-05, 9.079199999999926e-05, 9.076400000000012e-05, 9.162499999999796e-05, 9.090199999999687e-05, 9.079099999999979e-05, 9.076400000000012e-05, 9.087499999999721e-05]</msg>
<status status="PASS" starttime="20201030 11:53:13.530" endtime="20201030 11:53:13.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.518" endtime="20201030 11:53:13.537"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:13.547" endtime="20201030 11:53:13.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.542" endtime="20201030 11:53:13.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.540" endtime="20201030 11:53:13.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.016" endtime="20201030 11:53:13.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.015" endtime="20201030 11:53:13.573"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.597" endtime="20201030 11:53:13.621"></status>
</kw>
<msg timestamp="20201030 11:53:13.622" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.593" endtime="20201030 11:53:13.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:13.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:13.624" endtime="20201030 11:53:13.629"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.631" endtime="20201030 11:53:13.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.586" endtime="20201030 11:53:13.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.579" endtime="20201030 11:53:13.639"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:13.656" endtime="20201030 11:53:14.015"></status>
</kw>
<msg timestamp="20201030 11:53:14.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:13.653" endtime="20201030 11:53:14.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.043" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045108972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045201194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.025" endtime="20201030 11:53:14.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.046" endtime="20201030 11:53:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.645" endtime="20201030 11:53:14.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.640" endtime="20201030 11:53:14.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.069" level="INFO">${RESULT} = [{'diff': 9.222200000000291e-05}, {'diff': 9.225000000000205e-05}, {'diff': 9.256900000000068e-05}, {'diff': 9.191600000000438e-05}, {'diff': 9.186099999999864e-05}, {'diff': 9.238900000000522e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:14.057" endtime="20201030 11:53:14.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:14.079" level="INFO">${ACCURACY} = {'diff': [9.222200000000291e-05, 9.225000000000205e-05, 9.256900000000068e-05, 9.191600000000438e-05, 9.186099999999864e-05, 9.238900000000522e-05, 9.245799999999665e-05, 9.184699999999907e-05, 9.2402...</msg>
<status status="PASS" starttime="20201030 11:53:14.071" endtime="20201030 11:53:14.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.090" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:53:14.088" endtime="20201030 11:53:14.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.096" level="INFO">VALUE: [9.222200000000291e-05, 9.225000000000205e-05, 9.256900000000068e-05, 9.191600000000438e-05, 9.186099999999864e-05, 9.238900000000522e-05, 9.245799999999665e-05, 9.184699999999907e-05, 9.240299999999785e-05, 9.218100000000368e-05, 9.180599999999983e-05, 9.213799999999855e-05, 9.186199999999811e-05, 9.245800000000359e-05, 9.170800000000284e-05, 9.2333e-05, 9.238900000000522e-05, 9.19859999999953e-05, 9.175000000000155e-05, 9.25000000000023e-05, 9.180599999999983e-05, 9.268100000000418e-05, 9.231900000000043e-05, 9.202800000000094e-05, 9.238900000000522e-05, 9.186099999999864e-05, 9.27079999999969e-05, 9.251400000000187e-05, 9.251400000000187e-05, 9.187500000000515e-05, 9.255600000000058e-05, 9.1945000000003e-05, 9.241699999999742e-05, 9.206999999999965e-05, 9.25130000000024e-05, 9.25409999999946e-05, 9.209699999999932e-05, 9.188900000000472e-05, 9.26659999999982e-05, 9.24859999999958e-05, 9.261099999999939e-05, 9.226399999999468e-05, 9.24450000000035e-05, 9.231900000000043e-05, 9.206899999999324e-05, 9.231900000000043e-05, 9.211199999999836e-05, 9.262499999999896e-05, 9.240300000000479e-05, 9.21250000000054e-05]</msg>
<status status="PASS" starttime="20201030 11:53:14.093" endtime="20201030 11:53:14.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.081" endtime="20201030 11:53:14.101"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:14.112" endtime="20201030 11:53:14.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.106" endtime="20201030 11:53:14.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.103" endtime="20201030 11:53:14.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.575" endtime="20201030 11:53:14.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:13.574" endtime="20201030 11:53:14.138"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.163" endtime="20201030 11:53:14.187"></status>
</kw>
<msg timestamp="20201030 11:53:14.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.159" endtime="20201030 11:53:14.188"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.190" endtime="20201030 11:53:14.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.197" endtime="20201030 11:53:14.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.151" endtime="20201030 11:53:14.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.145" endtime="20201030 11:53:14.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.222" endtime="20201030 11:53:14.586"></status>
</kw>
<msg timestamp="20201030 11:53:14.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044948236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045041278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.219" endtime="20201030 11:53:14.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044948236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045041278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.596" endtime="20201030 11:53:14.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.616" endtime="20201030 11:53:14.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.211" endtime="20201030 11:53:14.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.206" endtime="20201030 11:53:14.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.634" level="INFO">${RESULT} = [{'diff': 9.304199999999457e-05}, {'diff': 9.325000000000305e-05}, {'diff': 9.270899999999638e-05}, {'diff': 9.336100000000014e-05}, {'diff': 9.290199999999887e-05}, {'diff': 9.32079999999974e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:14.625" endtime="20201030 11:53:14.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:14.646" level="INFO">${ACCURACY} = {'diff': [9.304199999999457e-05, 9.325000000000305e-05, 9.270899999999638e-05, 9.336100000000014e-05, 9.290199999999887e-05, 9.32079999999974e-05, 9.297199999999672e-05, 9.345799999999765e-05, 9.36529...</msg>
<status status="PASS" starttime="20201030 11:53:14.636" endtime="20201030 11:53:14.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.658" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:53:14.655" endtime="20201030 11:53:14.659"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.664" level="INFO">VALUE: [9.304199999999457e-05, 9.325000000000305e-05, 9.270899999999638e-05, 9.336100000000014e-05, 9.290199999999887e-05, 9.32079999999974e-05, 9.297199999999672e-05, 9.345799999999765e-05, 9.36529999999991e-05, 9.286099999999964e-05, 9.27079999999969e-05, 9.337499999999971e-05, 9.270899999999638e-05, 9.269500000000375e-05, 9.277700000000222e-05, 9.337499999999971e-05, 9.291599999999844e-05, 9.36659999999992e-05, 9.368099999999824e-05, 9.334700000000057e-05, 9.341699999999842e-05, 9.30000000000028e-05, 9.275000000000255e-05, 9.326400000000262e-05, 9.330600000000133e-05, 9.276400000000212e-05, 9.308300000000075e-05, 9.30409999999951e-05, 9.317999999999826e-05, 9.336100000000014e-05, 9.304200000000151e-05, 9.31529999999986e-05, 9.316699999999817e-05, 9.35000000000033e-05, 9.287499999999921e-05, 9.269500000000375e-05, 9.308400000000022e-05, 9.32079999999974e-05, 9.344399999999808e-05, 9.330500000000186e-05, 9.351399999999593e-05, 9.326400000000262e-05, 9.297199999999672e-05, 9.28200000000004e-05, 9.307000000000065e-05, 9.295899999999663e-05, 9.308400000000022e-05, 9.334700000000057e-05, 9.295800000000409e-05, 9.30409999999951e-05]</msg>
<status status="PASS" starttime="20201030 11:53:14.660" endtime="20201030 11:53:14.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.648" endtime="20201030 11:53:14.667"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:14.677" endtime="20201030 11:53:14.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.672" endtime="20201030 11:53:14.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.670" endtime="20201030 11:53:14.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.140" endtime="20201030 11:53:14.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.139" endtime="20201030 11:53:14.703"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.727" endtime="20201030 11:53:14.750"></status>
</kw>
<msg timestamp="20201030 11:53:14.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.724" endtime="20201030 11:53:14.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.753" endtime="20201030 11:53:14.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.760" endtime="20201030 11:53:14.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.716" endtime="20201030 11:53:14.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.710" endtime="20201030 11:53:14.768"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.785" endtime="20201030 11:53:15.145"></status>
</kw>
<msg timestamp="20201030 11:53:15.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043544431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043638625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.782" endtime="20201030 11:53:15.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043544431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043638625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.155" endtime="20201030 11:53:15.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.175" endtime="20201030 11:53:15.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.774" endtime="20201030 11:53:15.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.769" endtime="20201030 11:53:15.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:15.193" level="INFO">${RESULT} = [{'diff': 9.419399999999883e-05}, {'diff': 9.404199999999557e-05}, {'diff': 9.440299999999985e-05}, {'diff': 9.458300000000225e-05}, {'diff': 9.444499999999856e-05}, {'diff': 9.369499999999781e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:15.184" endtime="20201030 11:53:15.194"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:15.205" level="INFO">${ACCURACY} = {'diff': [9.419399999999883e-05, 9.404199999999557e-05, 9.440299999999985e-05, 9.458300000000225e-05, 9.444499999999856e-05, 9.369499999999781e-05, 9.406999999999471e-05, 9.387500000000021e-05, 9.4249...</msg>
<status status="PASS" starttime="20201030 11:53:15.196" endtime="20201030 11:53:15.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.217" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:53:15.215" endtime="20201030 11:53:15.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.223" level="INFO">VALUE: [9.419399999999883e-05, 9.404199999999557e-05, 9.440299999999985e-05, 9.458300000000225e-05, 9.444499999999856e-05, 9.369499999999781e-05, 9.406999999999471e-05, 9.387500000000021e-05, 9.424999999999711e-05, 9.37079999999979e-05, 9.381900000000193e-05, 9.404100000000304e-05, 9.395799999999815e-05, 9.398600000000423e-05, 9.441699999999942e-05, 9.394399999999858e-05, 9.425000000000405e-05, 9.454199999999607e-05, 9.379100000000279e-05, 9.429199999999582e-05, 9.413900000000003e-05, 9.461100000000139e-05, 9.391599999999944e-05, 9.467999999999976e-05, 9.408300000000175e-05, 9.458400000000172e-05, 9.454199999999607e-05, 9.397199999999772e-05, 9.451399999999693e-05, 9.420899999999788e-05, 9.447300000000464e-05, 9.370900000000432e-05, 9.41659999999997e-05, 9.463900000000053e-05, 9.444399999999908e-05, 9.452800000000344e-05, 9.461099999999445e-05, 9.413900000000003e-05, 9.387500000000021e-05, 9.422199999999797e-05, 9.40000000000038e-05, 9.448600000000473e-05, 9.377799999999575e-05, 9.373599999999704e-05, 9.386100000000064e-05, 9.455500000000311e-05, 9.442999999999951e-05, 9.431899999999549e-05, 9.405500000000261e-05, 9.457000000000215e-05]</msg>
<status status="PASS" starttime="20201030 11:53:15.220" endtime="20201030 11:53:15.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.207" endtime="20201030 11:53:15.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:15.236" endtime="20201030 11:53:15.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.232" endtime="20201030 11:53:15.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.229" endtime="20201030 11:53:15.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.705" endtime="20201030 11:53:15.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.704" endtime="20201030 11:53:15.262"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.286" endtime="20201030 11:53:15.309"></status>
</kw>
<msg timestamp="20201030 11:53:15.310" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.283" endtime="20201030 11:53:15.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.312" endtime="20201030 11:53:15.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.319" endtime="20201030 11:53:15.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.275" endtime="20201030 11:53:15.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.269" endtime="20201030 11:53:15.327"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.338" endtime="20201030 11:53:15.677"></status>
</kw>
<msg timestamp="20201030 11:53:15.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043389625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.336" endtime="20201030 11:53:15.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043389625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043484917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.687" endtime="20201030 11:53:15.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.706" endtime="20201030 11:53:15.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.333" endtime="20201030 11:53:15.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.328" endtime="20201030 11:53:15.714"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:15.725" level="INFO">${RESULT} = [{'diff': 9.529199999999682e-05}, {'diff': 9.55279999999975e-05}, {'diff': 9.490300000000035e-05}, {'diff': 9.512500000000146e-05}, {'diff': 9.508299999999581e-05}, {'diff': 9.55000000000053e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:53:15.715" endtime="20201030 11:53:15.725"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:15.735" level="INFO">${ACCURACY} = {'diff': [9.529199999999682e-05, 9.55279999999975e-05, 9.490300000000035e-05, 9.512500000000146e-05, 9.508299999999581e-05, 9.55000000000053e-05, 9.53609999999952e-05, 9.474999999999761e-05, 9.5125000...</msg>
<status status="PASS" starttime="20201030 11:53:15.727" endtime="20201030 11:53:15.735"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.746" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:53:15.744" endtime="20201030 11:53:15.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.752" level="INFO">VALUE: [9.529199999999682e-05, 9.55279999999975e-05, 9.490300000000035e-05, 9.512500000000146e-05, 9.508299999999581e-05, 9.55000000000053e-05, 9.53609999999952e-05, 9.474999999999761e-05, 9.512500000000146e-05, 9.474999999999761e-05, 9.493099999999949e-05, 9.472299999999795e-05, 9.483399999999503e-05, 9.515200000000112e-05, 9.526399999999768e-05, 9.56660000000012e-05, 9.520800000000634e-05, 9.473599999999804e-05, 9.522199999999897e-05, 9.491699999999992e-05, 9.490300000000035e-05, 9.483399999999503e-05, 9.501399999999743e-05, 9.545899999999913e-05, 9.476400000000412e-05, 9.522199999999897e-05, 9.495799999999915e-05, 9.562499999999502e-05, 9.51530000000006e-05, 9.555599999999664e-05, 9.49859999999983e-05, 9.497199999999872e-05, 9.512499999999452e-05, 9.524999999999811e-05, 9.487500000000121e-05, 9.556999999999621e-05, 9.504100000000404e-05, 9.56660000000012e-05, 9.494399999999958e-05, 9.470800000000584e-05, 9.545799999999965e-05, 9.516700000000017e-05, 9.541700000000042e-05, 9.483400000000197e-05, 9.487500000000121e-05, 9.479100000000379e-05, 9.505499999999667e-05, 9.490200000000087e-05, 9.556899999999674e-05, 9.522199999999897e-05]</msg>
<status status="PASS" starttime="20201030 11:53:15.749" endtime="20201030 11:53:15.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.737" endtime="20201030 11:53:15.756"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:15.766" endtime="20201030 11:53:15.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.761" endtime="20201030 11:53:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.758" endtime="20201030 11:53:15.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.264" endtime="20201030 11:53:15.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.263" endtime="20201030 11:53:15.791"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.816" endtime="20201030 11:53:15.840"></status>
</kw>
<msg timestamp="20201030 11:53:15.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.812" endtime="20201030 11:53:15.841"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:15.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:15.843" endtime="20201030 11:53:15.849"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.850" endtime="20201030 11:53:15.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.804" endtime="20201030 11:53:15.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.798" endtime="20201030 11:53:15.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:15.875" endtime="20201030 11:53:16.236"></status>
</kw>
<msg timestamp="20201030 11:53:16.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045342403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045438333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:15.872" endtime="20201030 11:53:16.244"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045342403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045438333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.246" endtime="20201030 11:53:16.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.266" endtime="20201030 11:53:16.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.864" endtime="20201030 11:53:16.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.859" endtime="20201030 11:53:16.273"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:16.284" level="INFO">${RESULT} = [{'diff': 9.592999999999408e-05}, {'diff': 9.58609999999957e-05}, {'diff': 9.606899999999724e-05}, {'diff': 9.594400000000058e-05}, {'diff': 9.627800000000519e-05}, {'diff': 9.616700000000117e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:16.275" endtime="20201030 11:53:16.285"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:16.294" level="INFO">${ACCURACY} = {'diff': [9.592999999999408e-05, 9.58609999999957e-05, 9.606899999999724e-05, 9.594400000000058e-05, 9.627800000000519e-05, 9.616700000000117e-05, 9.6027999999998e-05, 9.574999999999861e-05, 9.6235999...</msg>
<status status="PASS" starttime="20201030 11:53:16.286" endtime="20201030 11:53:16.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.306" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:53:16.303" endtime="20201030 11:53:16.306"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.311" level="INFO">VALUE: [9.592999999999408e-05, 9.58609999999957e-05, 9.606899999999724e-05, 9.594400000000058e-05, 9.627800000000519e-05, 9.616700000000117e-05, 9.6027999999998e-05, 9.574999999999861e-05, 9.623599999999954e-05, 9.583399999999603e-05, 9.64870000000062e-05, 9.590199999999494e-05, 9.60409999999981e-05, 9.662500000000296e-05, 9.634699999999663e-05, 9.58609999999957e-05, 9.636100000000314e-05, 9.6333000000004e-05, 9.666700000000167e-05, 9.604200000000451e-05, 9.604199999999757e-05, 9.645799999999372e-05, 9.608299999999681e-05, 9.612499999999552e-05, 9.61530000000016e-05, 9.647200000000022e-05, 9.577800000000469e-05, 9.65279999999985e-05, 9.569499999999981e-05, 9.641699999999448e-05, 9.666700000000167e-05, 9.637500000000271e-05, 9.626399999999868e-05, 9.661099999999645e-05, 9.587500000000221e-05, 9.623599999999954e-05, 9.593100000000049e-05, 9.626399999999868e-05, 9.64859999999998e-05, 9.604199999999757e-05, 9.616700000000117e-05, 9.570899999999938e-05, 9.627799999999825e-05, 9.595800000000015e-05, 9.619400000000083e-05, 9.645800000000065e-05, 9.604200000000451e-05, 9.619400000000083e-05, 9.587500000000221e-05, 9.59859999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:53:16.308" endtime="20201030 11:53:16.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.296" endtime="20201030 11:53:16.315"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:16.326" endtime="20201030 11:53:16.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.320" endtime="20201030 11:53:16.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.317" endtime="20201030 11:53:16.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.793" endtime="20201030 11:53:16.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:15.792" endtime="20201030 11:53:16.352"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.378" endtime="20201030 11:53:16.400"></status>
</kw>
<msg timestamp="20201030 11:53:16.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.374" endtime="20201030 11:53:16.402"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.404" endtime="20201030 11:53:16.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.411" endtime="20201030 11:53:16.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.366" endtime="20201030 11:53:16.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.359" endtime="20201030 11:53:16.418"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.436" endtime="20201030 11:53:16.794"></status>
</kw>
<msg timestamp="20201030 11:53:16.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045052667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045149458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.432" endtime="20201030 11:53:16.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045052667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045149458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.804" endtime="20201030 11:53:16.822"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.824" endtime="20201030 11:53:16.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.424" endtime="20201030 11:53:16.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.420" endtime="20201030 11:53:16.831"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:16.843" level="INFO">${RESULT} = [{'diff': 9.679100000000579e-05}, {'diff': 9.683299999999756e-05}, {'diff': 9.690300000000235e-05}, {'diff': 9.727799999999925e-05}, {'diff': 9.74860000000008e-05}, {'diff': 9.723600000000054e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:16.833" endtime="20201030 11:53:16.843"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:16.859" level="INFO">${ACCURACY} = {'diff': [9.679100000000579e-05, 9.683299999999756e-05, 9.690300000000235e-05, 9.727799999999925e-05, 9.74860000000008e-05, 9.723600000000054e-05, 9.737500000000371e-05, 9.766700000000267e-05, 9.74580...</msg>
<status status="PASS" starttime="20201030 11:53:16.845" endtime="20201030 11:53:16.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.870" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:53:16.868" endtime="20201030 11:53:16.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.876" level="INFO">VALUE: [9.679100000000579e-05, 9.683299999999756e-05, 9.690300000000235e-05, 9.727799999999925e-05, 9.74860000000008e-05, 9.723600000000054e-05, 9.737500000000371e-05, 9.766700000000267e-05, 9.745800000000165e-05, 9.744500000000156e-05, 9.74860000000008e-05, 9.716700000000217e-05, 9.729099999999935e-05, 9.687499999999627e-05, 9.697200000000072e-05, 9.727799999999925e-05, 9.754199999999907e-05, 9.683399999999703e-05, 9.691700000000192e-05, 9.71660000000027e-05, 9.765299999999616e-05, 9.68609999999967e-05, 9.73609999999972e-05, 9.699999999999986e-05, 9.766700000000267e-05, 9.674999999999961e-05, 9.722200000000097e-05, 9.694500000000106e-05, 9.680600000000483e-05, 9.75409999999996e-05, 9.674999999999961e-05, 9.693000000000201e-05, 9.723600000000054e-05, 9.731899999999849e-05, 9.690300000000235e-05, 9.697200000000072e-05, 9.68609999999967e-05, 9.738899999999634e-05, 9.677799999999875e-05, 9.701399999999943e-05, 9.750000000000036e-05, 9.672200000000047e-05, 9.68609999999967e-05, 9.750000000000036e-05, 9.737500000000371e-05, 9.690300000000235e-05, 9.745800000000165e-05, 9.695800000000115e-05, 9.672200000000047e-05, 9.733399999999753e-05]</msg>
<status status="PASS" starttime="20201030 11:53:16.873" endtime="20201030 11:53:16.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.861" endtime="20201030 11:53:16.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:16.889" endtime="20201030 11:53:16.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.885" endtime="20201030 11:53:16.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.882" endtime="20201030 11:53:16.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.354" endtime="20201030 11:53:16.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.353" endtime="20201030 11:53:16.915"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.939" endtime="20201030 11:53:16.962"></status>
</kw>
<msg timestamp="20201030 11:53:16.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.936" endtime="20201030 11:53:16.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:16.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:16.966" endtime="20201030 11:53:16.971"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.973" endtime="20201030 11:53:16.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.928" endtime="20201030 11:53:16.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.922" endtime="20201030 11:53:16.980"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:16.997" endtime="20201030 11:53:17.356"></status>
</kw>
<msg timestamp="20201030 11:53:17.364" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043475639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:16.994" endtime="20201030 11:53:17.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043475639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043573708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.366" endtime="20201030 11:53:17.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.386" endtime="20201030 11:53:17.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.986" endtime="20201030 11:53:17.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.981" endtime="20201030 11:53:17.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:17.405" level="INFO">${RESULT} = [{'diff': 9.806899999999924e-05}, {'diff': 9.767999999999583e-05}, {'diff': 9.83609999999982e-05}, {'diff': 9.806999999999871e-05}, {'diff': 9.854200000000007e-05}, {'diff': 9.801400000000043e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:53:17.396" endtime="20201030 11:53:17.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:17.418" level="INFO">${ACCURACY} = {'diff': [9.806899999999924e-05, 9.767999999999583e-05, 9.83609999999982e-05, 9.806999999999871e-05, 9.854200000000007e-05, 9.801400000000043e-05, 9.806999999999871e-05, 9.776400000000018e-05, 9.80699...</msg>
<status status="PASS" starttime="20201030 11:53:17.408" endtime="20201030 11:53:17.418"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.430" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:53:17.428" endtime="20201030 11:53:17.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.436" level="INFO">VALUE: [9.806899999999924e-05, 9.767999999999583e-05, 9.83609999999982e-05, 9.806999999999871e-05, 9.854200000000007e-05, 9.801400000000043e-05, 9.806999999999871e-05, 9.776400000000018e-05, 9.806999999999871e-05, 9.811099999999795e-05, 9.80410000000001e-05, 9.781900000000593e-05, 9.844400000000308e-05, 9.831999999999896e-05, 9.807000000000565e-05, 9.855500000000017e-05, 9.801400000000043e-05, 9.816700000000317e-05, 9.816700000000317e-05, 9.823600000000154e-05, 9.829100000000035e-05, 9.809699999999838e-05, 9.85410000000006e-05, 9.787499999999727e-05, 9.831900000000643e-05, 9.799999999999393e-05, 9.791700000000292e-05, 9.769500000000181e-05, 9.770900000000138e-05, 9.794399999999565e-05, 9.86660000000042e-05, 9.85410000000006e-05, 9.777799999999975e-05, 9.79860000000013e-05, 9.77080000000019e-05, 9.784699999999813e-05, 9.800000000000086e-05, 9.79730000000012e-05, 9.840300000000385e-05, 9.829199999999982e-05, 9.831999999999896e-05, 9.842999999999658e-05, 9.8415999999997e-05, 9.855500000000017e-05, 9.768000000000276e-05, 9.858299999999931e-05, 9.83059999999994e-05, 9.78609999999977e-05, 9.805599999999914e-05, 9.773600000000104e-05]</msg>
<status status="PASS" starttime="20201030 11:53:17.432" endtime="20201030 11:53:17.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.420" endtime="20201030 11:53:17.439"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:17.449" endtime="20201030 11:53:17.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.444" endtime="20201030 11:53:17.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.442" endtime="20201030 11:53:17.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.917" endtime="20201030 11:53:17.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:16.916" endtime="20201030 11:53:17.475"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.499" endtime="20201030 11:53:17.523"></status>
</kw>
<msg timestamp="20201030 11:53:17.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.496" endtime="20201030 11:53:17.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:17.526" endtime="20201030 11:53:17.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.533" endtime="20201030 11:53:17.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.488" endtime="20201030 11:53:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.482" endtime="20201030 11:53:17.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.558" endtime="20201030 11:53:17.920"></status>
</kw>
<msg timestamp="20201030 11:53:17.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043740708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.554" endtime="20201030 11:53:17.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043641861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043740708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:17.930" endtime="20201030 11:53:17.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:17.950" endtime="20201030 11:53:17.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.547" endtime="20201030 11:53:17.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.542" endtime="20201030 11:53:17.957"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:17.968" level="INFO">${RESULT} = [{'diff': 9.884700000000607e-05}, {'diff': 9.875000000000161e-05}, {'diff': 9.872200000000247e-05}, {'diff': 9.916599999999776e-05}, {'diff': 9.895800000000315e-05}, {'diff': 9.905600000000014e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:53:17.959" endtime="20201030 11:53:17.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:17.978" level="INFO">${ACCURACY} = {'diff': [9.884700000000607e-05, 9.875000000000161e-05, 9.872200000000247e-05, 9.916599999999776e-05, 9.895800000000315e-05, 9.905600000000014e-05, 9.868000000000376e-05, 9.890199999999794e-05, 9.9138...</msg>
<status status="PASS" starttime="20201030 11:53:17.971" endtime="20201030 11:53:17.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.990" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:53:17.988" endtime="20201030 11:53:17.991"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:17.996" level="INFO">VALUE: [9.884700000000607e-05, 9.875000000000161e-05, 9.872200000000247e-05, 9.916599999999776e-05, 9.895800000000315e-05, 9.905600000000014e-05, 9.868000000000376e-05, 9.890199999999794e-05, 9.913899999999809e-05, 9.887499999999827e-05, 9.88609999999987e-05, 9.908399999999928e-05, 9.913899999999809e-05, 9.870799999999597e-05, 9.96660000000052e-05, 9.951400000000193e-05, 9.905600000000014e-05, 9.925000000000211e-05, 9.905600000000014e-05, 9.94860000000028e-05, 9.933399999999953e-05, 9.88479999999986e-05, 9.900000000000186e-05, 9.933300000000006e-05, 9.901400000000143e-05, 9.942999999999758e-05, 9.911100000000589e-05, 9.954200000000107e-05, 9.915299999999766e-05, 9.902700000000153e-05, 9.927800000000125e-05, 9.915299999999766e-05, 9.929200000000082e-05, 9.924999999999518e-05, 9.879100000000085e-05, 9.954099999999466e-05, 9.88330000000065e-05, 9.91939999999969e-05, 9.954200000000107e-05, 9.966699999999773e-05, 9.893000000000401e-05, 9.931999999999996e-05, 9.923600000000254e-05, 9.877800000000075e-05, 9.913899999999809e-05, 9.962499999999902e-05, 9.895800000000315e-05, 9.875000000000161e-05, 9.943100000000399e-05, 9.920900000000288e-05]</msg>
<status status="PASS" starttime="20201030 11:53:17.992" endtime="20201030 11:53:17.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.980" endtime="20201030 11:53:17.999"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:18.009" endtime="20201030 11:53:18.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.005" endtime="20201030 11:53:18.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.002" endtime="20201030 11:53:18.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.477" endtime="20201030 11:53:18.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:17.476" endtime="20201030 11:53:18.035"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.060" endtime="20201030 11:53:18.085"></status>
</kw>
<msg timestamp="20201030 11:53:18.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.056" endtime="20201030 11:53:18.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.089" endtime="20201030 11:53:18.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.095" endtime="20201030 11:53:18.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.048" endtime="20201030 11:53:18.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.042" endtime="20201030 11:53:18.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.120" endtime="20201030 11:53:18.480"></status>
</kw>
<msg timestamp="20201030 11:53:18.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045745583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045845708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.117" endtime="20201030 11:53:18.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045745583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045845708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.489" endtime="20201030 11:53:18.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.509" endtime="20201030 11:53:18.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.109" endtime="20201030 11:53:18.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.104" endtime="20201030 11:53:18.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:18.527" level="INFO">${RESULT} = [{'diff': 0.00010012499999999952}, {'diff': 0.00010031900000000149}, {'diff': 0.0001002359999999966}, {'diff': 0.00010027800000000225}, {'diff': 9.974999999999568e-05}, {'diff': 0.00010045799999999772...</msg>
<status status="PASS" starttime="20201030 11:53:18.518" endtime="20201030 11:53:18.528"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:18.537" level="INFO">${ACCURACY} = {'diff': [0.00010012499999999952, 0.00010031900000000149, 0.0001002359999999966, 0.00010027800000000225, 9.974999999999568e-05, 0.00010045799999999772, 9.965299999999816e-05, 9.995899999999669e-05, 9....</msg>
<status status="PASS" starttime="20201030 11:53:18.530" endtime="20201030 11:53:18.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.549" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:53:18.547" endtime="20201030 11:53:18.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.555" level="INFO">VALUE: [0.00010012499999999952, 0.00010031900000000149, 0.0001002359999999966, 0.00010027800000000225, 9.974999999999568e-05, 0.00010045799999999772, 9.965299999999816e-05, 9.995899999999669e-05, 9.991699999999798e-05, 0.00010015299999999866, 9.99159999999985e-05, 0.00010040199999999944, 9.995800000000415e-05, 0.00010041699999999848, 0.00010045799999999772, 0.00010008300000000081, 0.0001000139999999955, 9.991699999999798e-05, 0.00010000000000000286, 9.995899999999669e-05, 0.00010044399999999815, 0.00010034700000000063, 0.00010068100000000524, 9.97359999999961e-05, 9.97359999999961e-05, 9.972200000000347e-05, 0.00010065299999999916, 0.0001003060000000014, 9.995900000000363e-05, 0.00010007000000000071, 9.99159999999985e-05, 0.00010025000000000311, 9.999999999999593e-05, 9.983300000000056e-05, 0.00010056900000000174, 0.00010027800000000225, 0.00010040299999999891, 0.00010023700000000302, 0.00010043100000000499, 0.00010054200000000207, 0.00010012499999999952, 0.00010055500000000217, 0.00010062500000000002, 9.988899999999884e-05, 0.0001006530000000061, 9.981900000000099e-05, 0.00010006900000000124, 0.00010020799999999747, 0.0001005280000000025, 0.0001005559999999947]</msg>
<status status="PASS" starttime="20201030 11:53:18.551" endtime="20201030 11:53:18.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.539" endtime="20201030 11:53:18.558"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:18.570" endtime="20201030 11:53:18.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.564" endtime="20201030 11:53:18.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.561" endtime="20201030 11:53:18.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.038" endtime="20201030 11:53:18.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.036" endtime="20201030 11:53:18.596"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.620" endtime="20201030 11:53:18.643"></status>
</kw>
<msg timestamp="20201030 11:53:18.644" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.616" endtime="20201030 11:53:18.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.647" endtime="20201030 11:53:18.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.653" endtime="20201030 11:53:18.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.609" endtime="20201030 11:53:18.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.602" endtime="20201030 11:53:18.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.675" endtime="20201030 11:53:19.018"></status>
</kw>
<msg timestamp="20201030 11:53:19.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043682639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.674" endtime="20201030 11:53:19.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043581764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043682639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.027" endtime="20201030 11:53:19.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.046" endtime="20201030 11:53:19.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.667" endtime="20201030 11:53:19.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.662" endtime="20201030 11:53:19.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:19.065" level="INFO">${RESULT} = [{'diff': 0.00010087500000000027}, {'diff': 0.00010112500000000052}, {'diff': 0.00010079099999999591}, {'diff': 0.00010075000000000361}, {'diff': 0.00010079099999999591}, {'diff': 0.000101459000000005...</msg>
<status status="PASS" starttime="20201030 11:53:19.055" endtime="20201030 11:53:19.065"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:19.076" level="INFO">${ACCURACY} = {'diff': [0.00010087500000000027, 0.00010112500000000052, 0.00010079099999999591, 0.00010075000000000361, 0.00010079099999999591, 0.00010145900000000513, 0.00010130500000000292, 0.00010090299999999941...</msg>
<status status="PASS" starttime="20201030 11:53:19.067" endtime="20201030 11:53:19.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.088" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:53:19.085" endtime="20201030 11:53:19.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.093" level="INFO">VALUE: [0.00010087500000000027, 0.00010112500000000052, 0.00010079099999999591, 0.00010075000000000361, 0.00010079099999999591, 0.00010145900000000513, 0.00010130500000000292, 0.00010090299999999941, 0.00010165300000000016, 0.00010122200000000497, 0.00010101400000000343, 0.0001007359999999971, 0.00010138900000000034, 0.00010072199999999754, 0.00010112499999999358, 0.00010105500000000267, 0.0001015410000000036, 0.000101513999999997, 0.00010113900000000009, 0.00010158299999999537, 0.00010097199999999779, 0.00010112500000000052, 0.00010072200000000447, 0.0001013480000000011, 0.00010124999999999718, 0.00010149999999999743, 0.00010133300000000206, 0.00010166600000000026, 0.00010115200000000019, 0.00010173600000000504, 0.000101028000000003, 0.00010081900000000199, 0.0001012080000000054, 0.00010082000000000146, 0.00010158400000000178, 0.00010156999999999528, 0.00010131999999999503, 0.00010143099999999905, 0.000101416, 0.00010161100000000145, 0.00010129200000000282, 0.00010068000000000576, 0.00010066699999999873, 0.00010162500000000102, 0.00010152799999999657, 0.00010108400000000128, 0.00010137500000000077, 0.00010166600000000026, 0.00010129199999999589, 0.00010161100000000145]</msg>
<status status="PASS" starttime="20201030 11:53:19.090" endtime="20201030 11:53:19.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.078" endtime="20201030 11:53:19.097"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:19.107" endtime="20201030 11:53:19.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.102" endtime="20201030 11:53:19.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.099" endtime="20201030 11:53:19.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.598" endtime="20201030 11:53:19.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.597" endtime="20201030 11:53:19.132"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.157" endtime="20201030 11:53:19.180"></status>
</kw>
<msg timestamp="20201030 11:53:19.181" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.153" endtime="20201030 11:53:19.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.184" endtime="20201030 11:53:19.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.190" endtime="20201030 11:53:19.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.145" endtime="20201030 11:53:19.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.139" endtime="20201030 11:53:19.198"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.215" endtime="20201030 11:53:19.587"></status>
</kw>
<msg timestamp="20201030 11:53:19.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043997903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044100278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.212" endtime="20201030 11:53:19.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.613" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043997903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044100278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.597" endtime="20201030 11:53:19.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.616" endtime="20201030 11:53:19.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.204" endtime="20201030 11:53:19.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.199" endtime="20201030 11:53:19.623"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:19.634" level="INFO">${RESULT} = [{'diff': 0.00010237500000000177}, {'diff': 0.00010249999999999843}, {'diff': 0.00010220899999999894}, {'diff': 0.00010244499999999962}, {'diff': 0.00010258300000000331}, {'diff': 0.000102596999999995...</msg>
<status status="PASS" starttime="20201030 11:53:19.625" endtime="20201030 11:53:19.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:19.646" level="INFO">${ACCURACY} = {'diff': [0.00010237500000000177, 0.00010249999999999843, 0.00010220899999999894, 0.00010244499999999962, 0.00010258300000000331, 0.00010259699999999594, 0.00010197200000000572, 0.000102513999999998, ...</msg>
<status status="PASS" starttime="20201030 11:53:19.636" endtime="20201030 11:53:19.647"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.658" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:53:19.655" endtime="20201030 11:53:19.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.663" level="INFO">VALUE: [0.00010237500000000177, 0.00010249999999999843, 0.00010220899999999894, 0.00010244499999999962, 0.00010258300000000331, 0.00010259699999999594, 0.00010197200000000572, 0.000102513999999998, 0.00010227800000000425, 0.00010226299999999827, 0.00010230599999999646, 0.00010212500000000152, 0.00010177699999999734, 0.00010231999999999603, 0.00010172200000000547, 0.00010243000000000058, 0.00010252799999999757, 0.00010265300000000116, 0.00010252799999999757, 0.00010208300000000281, 0.00010170799999999897, 0.00010255500000000417, 0.00010170899999999844, 0.00010249999999999843, 0.00010230499999999698, 0.00010208299999999587, 0.00010198599999999836, 0.00010172199999999854, 0.0001018060000000029, 0.00010213900000000109, 0.00010241700000000048, 0.00010212499999999458, 0.0001026810000000003, 0.00010174999999999768, 0.00010186099999999476, 0.00010254200000000407, 0.00010225000000000511, 0.00010249999999999843, 0.00010261100000000245, 0.00010211099999999501, 0.00010172200000000547, 0.00010190300000000041, 0.00010187500000000127, 0.00010226400000000468, 0.00010199999999999793, 0.00010212500000000152, 0.00010254099999999766, 0.0001019160000000005, 0.00010187500000000127, 0.00010265300000000116]</msg>
<status status="PASS" starttime="20201030 11:53:19.660" endtime="20201030 11:53:19.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.648" endtime="20201030 11:53:19.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:19.683" endtime="20201030 11:53:19.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.679" endtime="20201030 11:53:19.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.676" endtime="20201030 11:53:19.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.135" endtime="20201030 11:53:19.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.133" endtime="20201030 11:53:19.709"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.733" endtime="20201030 11:53:19.757"></status>
</kw>
<msg timestamp="20201030 11:53:19.758" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.730" endtime="20201030 11:53:19.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:19.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:19.760" endtime="20201030 11:53:19.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.767" endtime="20201030 11:53:19.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.722" endtime="20201030 11:53:19.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.716" endtime="20201030 11:53:19.774"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:19.792" endtime="20201030 11:53:20.160"></status>
</kw>
<msg timestamp="20201030 11:53:20.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043589681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:19.788" endtime="20201030 11:53:20.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.186" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043589681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043692764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.170" endtime="20201030 11:53:20.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.189" endtime="20201030 11:53:20.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.781" endtime="20201030 11:53:20.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.776" endtime="20201030 11:53:20.196"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:20.207" level="INFO">${RESULT} = [{'diff': 0.00010308300000000381}, {'diff': 0.00010365299999999522}, {'diff': 0.00010365300000000216}, {'diff': 0.00010287500000000227}, {'diff': 0.00010290300000000141}, {'diff': 0.000103667000000001...</msg>
<status status="PASS" starttime="20201030 11:53:20.198" endtime="20201030 11:53:20.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:20.217" level="INFO">${ACCURACY} = {'diff': [0.00010308300000000381, 0.00010365299999999522, 0.00010365300000000216, 0.00010287500000000227, 0.00010290300000000141, 0.00010366700000000173, 0.00010299999999999893, 0.00010337500000000277...</msg>
<status status="PASS" starttime="20201030 11:53:20.209" endtime="20201030 11:53:20.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.229" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:53:20.226" endtime="20201030 11:53:20.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.234" level="INFO">VALUE: [0.00010308300000000381, 0.00010365299999999522, 0.00010365300000000216, 0.00010287500000000227, 0.00010290300000000141, 0.00010366700000000173, 0.00010299999999999893, 0.00010337500000000277, 0.00010313899999999515, 0.00010352799999999857, 0.00010362500000000302, 0.00010354199999999814, 0.00010305600000000414, 0.00010270899999999944, 0.00010361099999999651, 0.00010291700000000098, 0.00010311099999999601, 0.00010343000000000158, 0.0001032359999999996, 0.00010299999999999893, 0.00010356900000000474, 0.00010276399999999825, 0.0001033889999999954, 0.00010334700000000363, 0.0001032359999999996, 0.00010279200000000432, 0.00010288900000000184, 0.00010354199999999814, 0.00010272199999999954, 0.00010298599999999936, 0.00010344500000000062, 0.00010274999999999868, 0.00010352799999999857, 0.00010270899999999944, 0.00010286099999999576, 0.00010284699999999619, 0.00010344500000000062, 0.00010363900000000259, 0.00010354099999999866, 0.00010343100000000105, 0.00010333300000000406, 0.00010281899999999705, 0.00010281899999999705, 0.00010294500000000012, 0.0001027359999999991, 0.00010337500000000277, 0.00010281900000000399, 0.00010297199999999979, 0.00010311100000000295, 0.0001030139999999985]</msg>
<status status="PASS" starttime="20201030 11:53:20.231" endtime="20201030 11:53:20.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.219" endtime="20201030 11:53:20.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:20.248" endtime="20201030 11:53:20.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.243" endtime="20201030 11:53:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.240" endtime="20201030 11:53:20.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.711" endtime="20201030 11:53:20.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:19.710" endtime="20201030 11:53:20.273"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.298" endtime="20201030 11:53:20.323"></status>
</kw>
<msg timestamp="20201030 11:53:20.324" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.294" endtime="20201030 11:53:20.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.326" endtime="20201030 11:53:20.331"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.333" endtime="20201030 11:53:20.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.287" endtime="20201030 11:53:20.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.281" endtime="20201030 11:53:20.340"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.358" endtime="20201030 11:53:20.718"></status>
</kw>
<msg timestamp="20201030 11:53:20.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045441806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.354" endtime="20201030 11:53:20.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045337917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045441806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.728" endtime="20201030 11:53:20.745"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.747" endtime="20201030 11:53:20.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.347" endtime="20201030 11:53:20.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.342" endtime="20201030 11:53:20.754"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:20.765" level="INFO">${RESULT} = [{'diff': 0.00010388900000000284}, {'diff': 0.00010430599999999846}, {'diff': 0.00010405499999999873}, {'diff': 0.00010398600000000036}, {'diff': 0.00010438900000000334}, {'diff': 0.000104584000000004...</msg>
<status status="PASS" starttime="20201030 11:53:20.756" endtime="20201030 11:53:20.766"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:20.775" level="INFO">${ACCURACY} = {'diff': [0.00010388900000000284, 0.00010430599999999846, 0.00010405499999999873, 0.00010398600000000036, 0.00010438900000000334, 0.00010458400000000478, 0.00010412499999999658, 0.00010397199999999385...</msg>
<status status="PASS" starttime="20201030 11:53:20.767" endtime="20201030 11:53:20.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.787" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:53:20.784" endtime="20201030 11:53:20.787"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.792" level="INFO">VALUE: [0.00010388900000000284, 0.00010430599999999846, 0.00010405499999999873, 0.00010398600000000036, 0.00010438900000000334, 0.00010458400000000478, 0.00010412499999999658, 0.00010397199999999385, 0.00010465299999999622, 0.00010370900000000044, 0.00010384799999999667, 0.00010434799999999717, 0.0001036810000000013, 0.00010408299999999787, 0.00010436099999999726, 0.00010430500000000592, 0.00010463899999999665, 0.00010445800000000172, 0.00010387499999999633, 0.00010437500000000377, 0.00010404199999999864, 0.00010429199999999889, 0.00010430499999999898, 0.00010405499999999873, 0.00010450000000000043, 0.00010370800000000097, 0.00010445900000000119, 0.00010434699999999769, 0.00010431899999999855, 0.00010431999999999803, 0.00010404199999999864, 0.00010394500000000112, 0.00010441700000000248, 0.00010418000000000233, 0.00010405500000000567, 0.00010425000000000018, 0.00010461099999999751, 0.00010461100000000445, 0.00010419500000000137, 0.00010370900000000044, 0.00010422300000000051, 0.00010408400000000428, 0.00010458399999999785, 0.00010448600000000086, 0.00010448600000000086, 0.00010454099999999966, 0.00010415299999999572, 0.00010380599999999796, 0.00010427799999999932, 0.00010402799999999907]</msg>
<status status="PASS" starttime="20201030 11:53:20.789" endtime="20201030 11:53:20.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.777" endtime="20201030 11:53:20.796"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:20.807" endtime="20201030 11:53:20.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.801" endtime="20201030 11:53:20.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.798" endtime="20201030 11:53:20.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.276" endtime="20201030 11:53:20.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.274" endtime="20201030 11:53:20.833"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.858" endtime="20201030 11:53:20.882"></status>
</kw>
<msg timestamp="20201030 11:53:20.883" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.854" endtime="20201030 11:53:20.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:20.890" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:20.886" endtime="20201030 11:53:20.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.892" endtime="20201030 11:53:20.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.847" endtime="20201030 11:53:20.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.840" endtime="20201030 11:53:20.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:20.917" endtime="20201030 11:53:21.277"></status>
</kw>
<msg timestamp="20201030 11:53:21.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044354764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:20.914" endtime="20201030 11:53:21.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044249125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044354764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:21.287" endtime="20201030 11:53:21.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.306" endtime="20201030 11:53:21.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.906" endtime="20201030 11:53:21.312"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.901" endtime="20201030 11:53:21.313"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:21.324" level="INFO">${RESULT} = [{'diff': 0.00010563899999999765}, {'diff': 0.00010547200000000229}, {'diff': 0.00010486099999999776}, {'diff': 0.00010537499999999783}, {'diff': 0.0001052360000000016}, {'diff': 0.0001052770000000008...</msg>
<status status="PASS" starttime="20201030 11:53:21.315" endtime="20201030 11:53:21.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:21.335" level="INFO">${ACCURACY} = {'diff': [0.00010563899999999765, 0.00010547200000000229, 0.00010486099999999776, 0.00010537499999999783, 0.0001052360000000016, 0.00010527700000000084, 0.00010491599999999657, 0.00010533299999999912,...</msg>
<status status="PASS" starttime="20201030 11:53:21.326" endtime="20201030 11:53:21.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.347" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:53:21.345" endtime="20201030 11:53:21.348"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.353" level="INFO">VALUE: [0.00010563899999999765, 0.00010547200000000229, 0.00010486099999999776, 0.00010537499999999783, 0.0001052360000000016, 0.00010527700000000084, 0.00010491599999999657, 0.00010533299999999912, 0.0001050689999999993, 0.00010543000000000358, 0.00010487500000000427, 0.00010490300000000341, 0.00010565299999999722, 0.00010541700000000348, 0.00010566699999999679, 0.00010479099999999991, 0.00010495800000000222, 0.00010550000000000143, 0.00010567999999999689, 0.00010565300000000416, 0.00010515300000000366, 0.0001050140000000005, 0.00010525000000000118, 0.00010537500000000477, 0.00010566599999999732, 0.00010479199999999939, 0.00010566599999999732, 0.0001055689999999998, 0.00010475000000000068, 0.00010555500000000023, 0.00010545800000000272, 0.00010544500000000262, 0.00010561099999999851, 0.00010469499999999493, 0.00010566700000000373, 0.00010483400000000503, 0.00010554100000000066, 0.00010548599999999492, 0.0001047360000000011, 0.0001055689999999998, 0.00010554200000000014, 0.00010494500000000212, 0.00010565300000000416, 0.00010569499999999593, 0.00010466700000000273, 0.0001047089999999945, 0.00010554099999999372, 0.00010508299999999887, 0.00010537500000000477, 0.00010533299999999912]</msg>
<status status="PASS" starttime="20201030 11:53:21.349" endtime="20201030 11:53:21.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.337" endtime="20201030 11:53:21.356"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:21.366" endtime="20201030 11:53:21.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.361" endtime="20201030 11:53:21.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.359" endtime="20201030 11:53:21.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.835" endtime="20201030 11:53:21.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:20.834" endtime="20201030 11:53:21.392"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.416" endtime="20201030 11:53:21.440"></status>
</kw>
<msg timestamp="20201030 11:53:21.441" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.412" endtime="20201030 11:53:21.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.447" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.443" endtime="20201030 11:53:21.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.450" endtime="20201030 11:53:21.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.405" endtime="20201030 11:53:21.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.399" endtime="20201030 11:53:21.457"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.475" endtime="20201030 11:53:21.835"></status>
</kw>
<msg timestamp="20201030 11:53:21.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043531917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:21.471" endtime="20201030 11:53:21.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.862" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043531917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043637736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:21.845" endtime="20201030 11:53:21.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.864" endtime="20201030 11:53:21.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.464" endtime="20201030 11:53:21.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.458" endtime="20201030 11:53:21.872"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:21.883" level="INFO">${RESULT} = [{'diff': 0.00010581900000000005}, {'diff': 0.00010597199999999585}, {'diff': 0.00010616699999999729}, {'diff': 0.00010593100000000355}, {'diff': 0.00010568099999999636}, {'diff': 0.000106069999999999...</msg>
<status status="PASS" starttime="20201030 11:53:21.873" endtime="20201030 11:53:21.883"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:21.894" level="INFO">${ACCURACY} = {'diff': [0.00010581900000000005, 0.00010597199999999585, 0.00010616699999999729, 0.00010593100000000355, 0.00010568099999999636, 0.00010606999999999978, 0.00010623699999999514, 0.00010583300000000656...</msg>
<status status="PASS" starttime="20201030 11:53:21.885" endtime="20201030 11:53:21.895"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.906" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:53:21.904" endtime="20201030 11:53:21.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.912" level="INFO">VALUE: [0.00010581900000000005, 0.00010597199999999585, 0.00010616699999999729, 0.00010593100000000355, 0.00010568099999999636, 0.00010606999999999978, 0.00010623699999999514, 0.00010583300000000656, 0.00010612499999999858, 0.00010593000000000408, 0.00010576399999999431, 0.00010609699999999944, 0.00010602800000000107, 0.00010666700000000473, 0.00010652799999999463, 0.00010618099999999686, 0.00010626400000000175, 0.00010625000000000218, 0.00010626400000000175, 0.00010651399999999506, 0.00010609699999999944, 0.00010583299999999962, 0.00010630600000000046, 0.0001063339999999996, 0.00010652700000000209, 0.00010580599999999996, 0.00010612499999999858, 0.00010623599999999567, 0.00010644400000000415, 0.00010661099999999951, 0.00010612499999999858, 0.0001067360000000031, 0.00010591700000000398, 0.00010654200000000114, 0.00010652799999999463, 0.00010572300000000201, 0.0001065419999999942, 0.0001062219999999961, 0.00010670800000000397, 0.00010602800000000107, 0.00010622200000000304, 0.0001065419999999942, 0.00010590299999999747, 0.0001056810000000033, 0.00010566699999999679, 0.00010606999999999978, 0.00010641700000000448, 0.00010658300000000037, 0.00010609699999999944, 0.00010644400000000415]</msg>
<status status="PASS" starttime="20201030 11:53:21.909" endtime="20201030 11:53:21.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.896" endtime="20201030 11:53:21.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:21.925" endtime="20201030 11:53:21.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.921" endtime="20201030 11:53:21.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.918" endtime="20201030 11:53:21.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.394" endtime="20201030 11:53:21.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.393" endtime="20201030 11:53:21.951"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.975" endtime="20201030 11:53:21.999"></status>
</kw>
<msg timestamp="20201030 11:53:22.001" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.972" endtime="20201030 11:53:22.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.003" endtime="20201030 11:53:22.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.009" endtime="20201030 11:53:22.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.964" endtime="20201030 11:53:22.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.958" endtime="20201030 11:53:22.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.023" endtime="20201030 11:53:22.313"></status>
</kw>
<msg timestamp="20201030 11:53:22.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043633583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.021" endtime="20201030 11:53:22.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043526597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043633583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.317" endtime="20201030 11:53:22.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.326" endtime="20201030 11:53:22.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.018" endtime="20201030 11:53:22.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.015" endtime="20201030 11:53:22.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:22.334" level="INFO">${RESULT} = [{'diff': 0.00010698599999999642}, {'diff': 0.00010670799999999703}, {'diff': 0.00010684700000000019}, {'diff': 0.00010768099999999836}, {'diff': 0.00010758400000000085}, {'diff': 0.000107374999999999...</msg>
<status status="PASS" starttime="20201030 11:53:22.330" endtime="20201030 11:53:22.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:22.339" level="INFO">${ACCURACY} = {'diff': [0.00010698599999999642, 0.00010670799999999703, 0.00010684700000000019, 0.00010768099999999836, 0.00010758400000000085, 0.00010737499999999983, 0.0001070560000000012, 0.00010752800000000257,...</msg>
<status status="PASS" starttime="20201030 11:53:22.335" endtime="20201030 11:53:22.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.344" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:53:22.343" endtime="20201030 11:53:22.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.347" level="INFO">VALUE: [0.00010698599999999642, 0.00010670799999999703, 0.00010684700000000019, 0.00010768099999999836, 0.00010758400000000085, 0.00010737499999999983, 0.0001070560000000012, 0.00010752800000000257, 0.00010723700000000308, 0.0001072219999999971, 0.00010704100000000216, 0.00010708300000000087, 0.00010712499999999958, 0.00010687499999999933, 0.00010740299999999897, 0.00010687499999999933, 0.00010677799999999488, 0.0001067360000000031, 0.00010669499999999693, 0.00010750000000000343, 0.00010684700000000019, 0.00010748600000000386, 0.00010676400000000225, 0.00010751399999999606, 0.00010730600000000146, 0.00010737499999999983, 0.00010670900000000344, 0.00010682000000000053, 0.00010690299999999847, 0.00010674999999999574, 0.00010730600000000146, 0.00010744399999999821, 0.00010680499999999454, 0.00010691699999999804, 0.00010695799999999728, 0.00010730600000000146, 0.00010766699999999879, 0.00010715299999999872, 0.00010691599999999857, 0.00010679099999999497, 0.00010670799999999703, 0.00010737499999999983, 0.00010730600000000146, 0.00010715299999999872, 0.00010749999999999649, 0.00010687499999999933, 0.00010729200000000189, 0.00010747300000000376, 0.0001072360000000036, 0.00010702700000000259]</msg>
<status status="PASS" starttime="20201030 11:53:22.345" endtime="20201030 11:53:22.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.339" endtime="20201030 11:53:22.348"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:22.353" endtime="20201030 11:53:22.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.351" endtime="20201030 11:53:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.349" endtime="20201030 11:53:22.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.953" endtime="20201030 11:53:22.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.952" endtime="20201030 11:53:22.374"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.385" endtime="20201030 11:53:22.406"></status>
</kw>
<msg timestamp="20201030 11:53:22.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.383" endtime="20201030 11:53:22.407"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.408" endtime="20201030 11:53:22.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.411" endtime="20201030 11:53:22.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.380" endtime="20201030 11:53:22.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.377" endtime="20201030 11:53:22.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.422" endtime="20201030 11:53:22.734"></status>
</kw>
<msg timestamp="20201030 11:53:22.741" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025883694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025992375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.421" endtime="20201030 11:53:22.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.760" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025883694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025992375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.744" endtime="20201030 11:53:22.761"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.763" endtime="20201030 11:53:22.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.417" endtime="20201030 11:53:22.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.415" endtime="20201030 11:53:22.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:22.781" level="INFO">${RESULT} = [{'diff': 0.00010868100000000283}, {'diff': 0.00010781900000000205}, {'diff': 0.00010829199999999942}, {'diff': 0.0001080699999999983}, {'diff': 0.00010845900000000172}, {'diff': 0.0001079310000000020...</msg>
<status status="PASS" starttime="20201030 11:53:22.772" endtime="20201030 11:53:22.782"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:22.791" level="INFO">${ACCURACY} = {'diff': [0.00010868100000000283, 0.00010781900000000205, 0.00010829199999999942, 0.0001080699999999983, 0.00010845900000000172, 0.00010793100000000208, 0.0001082630000000008, 0.00010786100000000076, ...</msg>
<status status="PASS" starttime="20201030 11:53:22.783" endtime="20201030 11:53:22.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.802" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:53:22.800" endtime="20201030 11:53:22.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.808" level="INFO">VALUE: [0.00010868100000000283, 0.00010781900000000205, 0.00010829199999999942, 0.0001080699999999983, 0.00010845900000000172, 0.00010793100000000208, 0.0001082630000000008, 0.00010786100000000076, 0.00010777699999999987, 0.00010847199999999835, 0.0001083890000000004, 0.00010856899999999933, 0.00010865300000000022, 0.00010857000000000228, 0.00010816699999999929, 0.00010845900000000172, 0.00010791599999999957, 0.0001077500000000002, 0.00010783299999999815, 0.00010859699999999847, 0.00010819399999999896, 0.0001080279999999996, 0.0001083340000000016, 0.00010834800000000117, 0.00010866699999999979, 0.00010811200000000049, 0.00010866600000000032, 0.00010804099999999969, 0.00010772200000000107, 0.00010777799999999935, 0.00010831899999999908, 0.00010822200000000157, 0.00010770900000000097, 0.00010848599999999792, 0.00010768100000000183, 0.00010798700000000036, 0.00010791599999999957, 0.00010795900000000122, 0.00010850000000000096, 0.00010780499999999901, 0.00010811099999999754, 0.00010844499999999868, 0.00010854199999999967, 0.00010866699999999979, 0.00010784800000000067, 0.00010837499999999736, 0.00010808300000000187, 0.00010834700000000169, 0.00010849999999999749, 0.00010795799999999828]</msg>
<status status="PASS" starttime="20201030 11:53:22.805" endtime="20201030 11:53:22.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.793" endtime="20201030 11:53:22.811"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:22.823" endtime="20201030 11:53:22.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.817" endtime="20201030 11:53:22.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.814" endtime="20201030 11:53:22.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.375" endtime="20201030 11:53:22.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.374" endtime="20201030 11:53:22.849"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.873" endtime="20201030 11:53:22.897"></status>
</kw>
<msg timestamp="20201030 11:53:22.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.869" endtime="20201030 11:53:22.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:22.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:22.900" endtime="20201030 11:53:22.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.907" endtime="20201030 11:53:22.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.862" endtime="20201030 11:53:22.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.856" endtime="20201030 11:53:22.915"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:22.932" endtime="20201030 11:53:23.291"></status>
</kw>
<msg timestamp="20201030 11:53:23.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043700069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043808861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:22.929" endtime="20201030 11:53:23.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043700069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043808861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.301" endtime="20201030 11:53:23.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.320" endtime="20201030 11:53:23.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.921" endtime="20201030 11:53:23.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.916" endtime="20201030 11:53:23.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:23.339" level="INFO">${RESULT} = [{'diff': 0.00010879199999999645}, {'diff': 0.0001090419999999967}, {'diff': 0.00010930599999999652}, {'diff': 0.00010948599999999892}, {'diff': 0.00010937499999999489}, {'diff': 0.0001089449999999991...</msg>
<status status="PASS" starttime="20201030 11:53:23.329" endtime="20201030 11:53:23.339"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:23.350" level="INFO">${ACCURACY} = {'diff': [0.00010879199999999645, 0.0001090419999999967, 0.00010930599999999652, 0.00010948599999999892, 0.00010937499999999489, 0.00010894499999999918, 0.00010872300000000501, 0.00010895799999999928,...</msg>
<status status="PASS" starttime="20201030 11:53:23.341" endtime="20201030 11:53:23.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.361" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:53:23.359" endtime="20201030 11:53:23.362"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.367" level="INFO">VALUE: [0.00010879199999999645, 0.0001090419999999967, 0.00010930599999999652, 0.00010948599999999892, 0.00010937499999999489, 0.00010894499999999918, 0.00010872300000000501, 0.00010895799999999928, 0.0001087360000000051, 0.00010901399999999756, 0.00010899999999999799, 0.00010965300000000122, 0.00010884699999999525, 0.00010877700000000434, 0.00010962499999999514, 0.00010947199999999935, 0.00010895799999999928, 0.00010905500000000373, 0.00010900000000000493, 0.00010948599999999892, 0.00010926399999999781, 0.00010912499999999464, 0.00010951399999999806, 0.00010933399999999566, 0.00010945899999999925, 0.000109208999999999, 0.00010958299999999643, 0.00010962500000000208, 0.00010929099999999747, 0.0001088340000000021, 0.00010898599999999842, 0.0001097089999999995, 0.00010915300000000072, 0.00010929200000000389, 0.00010901300000000502, 0.00010880499999999654, 0.0001086940000000064, 0.00010927700000000484, 0.00010918000000000039, 0.00010879200000000339, 0.00010916700000000029, 0.00010929199999999695, 0.00010877799999999688, 0.00010894499999999918, 0.00010880500000000348, 0.00010894399999999971, 0.00010899999999999799, 0.00010940300000000097, 0.0001087219999999986, 0.00010915300000000072]</msg>
<status status="PASS" starttime="20201030 11:53:23.364" endtime="20201030 11:53:23.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.352" endtime="20201030 11:53:23.371"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:23.381" endtime="20201030 11:53:23.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.376" endtime="20201030 11:53:23.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.373" endtime="20201030 11:53:23.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.851" endtime="20201030 11:53:23.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:22.850" endtime="20201030 11:53:23.407"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.431" endtime="20201030 11:53:23.455"></status>
</kw>
<msg timestamp="20201030 11:53:23.456" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.428" endtime="20201030 11:53:23.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.458" endtime="20201030 11:53:23.463"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.465" endtime="20201030 11:53:23.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.420" endtime="20201030 11:53:23.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.413" endtime="20201030 11:53:23.472"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.490" endtime="20201030 11:53:23.849"></status>
</kw>
<msg timestamp="20201030 11:53:23.857" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044240361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044350389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.487" endtime="20201030 11:53:23.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.876" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044240361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.044350389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:23.859" endtime="20201030 11:53:23.877"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.878" endtime="20201030 11:53:23.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.479" endtime="20201030 11:53:23.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.474" endtime="20201030 11:53:23.886"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:23.896" level="INFO">${RESULT} = [{'diff': 0.00011002799999999813}, {'diff': 0.00011011099999999607}, {'diff': 0.0001100419999999977}, {'diff': 0.00011013899999999521}, {'diff': 0.00011070800000000103}, {'diff': 0.0001098750000000023...</msg>
<status status="PASS" starttime="20201030 11:53:23.887" endtime="20201030 11:53:23.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:23.908" level="INFO">${ACCURACY} = {'diff': [0.00011002799999999813, 0.00011011099999999607, 0.0001100419999999977, 0.00011013899999999521, 0.00011070800000000103, 0.00010987500000000233, 0.00011006899999999736, 0.00011001399999999856,...</msg>
<status status="PASS" starttime="20201030 11:53:23.899" endtime="20201030 11:53:23.909"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.920" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:53:23.917" endtime="20201030 11:53:23.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:23.926" level="INFO">VALUE: [0.00011002799999999813, 0.00011011099999999607, 0.0001100419999999977, 0.00011013899999999521, 0.00011070800000000103, 0.00010987500000000233, 0.00011006899999999736, 0.00011001399999999856, 0.00010980599999999702, 0.00010991700000000104, 0.00011001299999999908, 0.00011029199999999795, 0.00011041700000000154, 0.00011059700000000394, 0.00011012500000000258, 0.00010999999999999899, 0.00011048599999999992, 0.00011031899999999761, 0.0001100969999999965, 0.00011051399999999906, 0.00010998599999999942, 0.00010988899999999496, 0.00011054200000000514, 0.00011008400000000335, 0.00011044400000000121, 0.00011066600000000232, 0.00011017999999999445, 0.00011026399999999881, 0.00011020800000000053, 0.00010983299999999668, 0.00011058400000000385, 0.00011022299999999957, 0.00011019500000000043, 0.00011015200000000225, 0.00010995800000000028, 0.00010993000000000114, 0.00011049999999999949, 0.00010970800000000003, 0.00011027799999999838, 0.00011052799999999863, 0.00010983399999999616, 0.0001102769999999989, 0.00011029199999999795, 0.00010983299999999668, 0.00011020799999999359, 0.00011049999999999949, 0.00010991700000000104, 0.00010987500000000233, 0.00010972299999999907, 0.000110209]</msg>
<status status="PASS" starttime="20201030 11:53:23.922" endtime="20201030 11:53:23.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.910" endtime="20201030 11:53:23.929"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:23.939" endtime="20201030 11:53:23.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.934" endtime="20201030 11:53:23.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.932" endtime="20201030 11:53:23.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.409" endtime="20201030 11:53:23.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.408" endtime="20201030 11:53:23.965"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:23.989" endtime="20201030 11:53:24.013"></status>
</kw>
<msg timestamp="20201030 11:53:24.015" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:23.986" endtime="20201030 11:53:24.015"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.021" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.017" endtime="20201030 11:53:24.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.024" endtime="20201030 11:53:24.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.978" endtime="20201030 11:53:24.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.972" endtime="20201030 11:53:24.031"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.049" endtime="20201030 11:53:24.411"></status>
</kw>
<msg timestamp="20201030 11:53:24.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043876472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043987194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.046" endtime="20201030 11:53:24.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.438" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043876472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043987194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.421" endtime="20201030 11:53:24.439"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.441" endtime="20201030 11:53:24.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.038" endtime="20201030 11:53:24.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.033" endtime="20201030 11:53:24.448"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:24.459" level="INFO">${RESULT} = [{'diff': 0.0001107220000000006}, {'diff': 0.00011126300000000033}, {'diff': 0.00011087500000000333}, {'diff': 0.00011074999999999974}, {'diff': 0.00011156899999999886}, {'diff': 0.0001109999999999999...</msg>
<status status="PASS" starttime="20201030 11:53:24.450" endtime="20201030 11:53:24.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:24.469" level="INFO">${ACCURACY} = {'diff': [0.0001107220000000006, 0.00011126300000000033, 0.00011087500000000333, 0.00011074999999999974, 0.00011156899999999886, 0.00011099999999999999, 0.00011074999999999974, 0.00011095800000000128,...</msg>
<status status="PASS" starttime="20201030 11:53:24.461" endtime="20201030 11:53:24.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.480" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:53:24.478" endtime="20201030 11:53:24.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.486" level="INFO">VALUE: [0.0001107220000000006, 0.00011126300000000033, 0.00011087500000000333, 0.00011074999999999974, 0.00011156899999999886, 0.00011099999999999999, 0.00011074999999999974, 0.00011095800000000128, 0.00011081999999999759, 0.00011091700000000204, 0.00011094500000000118, 0.00011143100000000211, 0.00011087499999999639, 0.00011131899999999861, 0.00011116599999999588, 0.00011097200000000085, 0.00011163899999999671, 0.00011130599999999852, 0.00011166700000000279, 0.00011147300000000082, 0.00011126300000000033, 0.00011156899999999886, 0.00011074999999999974, 0.00011112499999999664, 0.0001113890000000034, 0.00011116700000000229, 0.00011074999999999974, 0.00011140299999999603, 0.0001110560000000052, 0.00011147299999999388, 0.00011123700000000014, 0.00011102699999999965, 0.00011074999999999974, 0.00011162500000000408, 0.00011074999999999974, 0.00011162499999999714, 0.00011125000000000024, 0.00011118100000000186, 0.0001108340000000041, 0.00011101300000000008, 0.00011074999999999974, 0.00011136099999999732, 0.00011127799999999938, 0.00011080599999999802, 0.00011120800000000153, 0.000111596999999998, 0.00011113899999999621, 0.00011097200000000085, 0.00011102799999999913, 0.00011150000000000049]</msg>
<status status="PASS" starttime="20201030 11:53:24.483" endtime="20201030 11:53:24.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.471" endtime="20201030 11:53:24.489"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:24.500" endtime="20201030 11:53:24.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.495" endtime="20201030 11:53:24.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.492" endtime="20201030 11:53:24.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.967" endtime="20201030 11:53:24.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:23.966" endtime="20201030 11:53:24.526"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.550" endtime="20201030 11:53:24.575"></status>
</kw>
<msg timestamp="20201030 11:53:24.576" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.546" endtime="20201030 11:53:24.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:24.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:24.579" endtime="20201030 11:53:24.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.585" endtime="20201030 11:53:24.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.538" endtime="20201030 11:53:24.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.532" endtime="20201030 11:53:24.593"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:24.611" endtime="20201030 11:53:24.980"></status>
</kw>
<msg timestamp="20201030 11:53:24.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045309986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045422028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.607" endtime="20201030 11:53:24.988"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.007" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.045309986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.045422028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:24.990" endtime="20201030 11:53:25.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.010" endtime="20201030 11:53:25.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.599" endtime="20201030 11:53:25.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.594" endtime="20201030 11:53:25.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:25.028" level="INFO">${RESULT} = [{'diff': 0.00011204200000000664}, {'diff': 0.00011219500000000243}, {'diff': 0.00011181999999999859}, {'diff': 0.00011204100000000022}, {'diff': 0.00011241599999999713}, {'diff': 0.000112263999999993...</msg>
<status status="PASS" starttime="20201030 11:53:25.019" endtime="20201030 11:53:25.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:25.038" level="INFO">${ACCURACY} = {'diff': [0.00011204200000000664, 0.00011219500000000243, 0.00011181999999999859, 0.00011204100000000022, 0.00011241599999999713, 0.00011226399999999387, 0.00011259799999999848, 0.00011193100000000261...</msg>
<status status="PASS" starttime="20201030 11:53:25.030" endtime="20201030 11:53:25.038"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.049" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:53:25.047" endtime="20201030 11:53:25.050"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.055" level="INFO">VALUE: [0.00011204200000000664, 0.00011219500000000243, 0.00011181999999999859, 0.00011204100000000022, 0.00011241599999999713, 0.00011226399999999387, 0.00011259799999999848, 0.00011193100000000261, 0.00011195900000000175, 0.00011237500000000483, 0.00011247199999999541, 0.00011191700000000304, 0.00011245799999999584, 0.00011259700000000594, 0.00011230599999999952, 0.0001125420000000002, 0.00011186100000000476, 0.00011183300000000562, 0.00011190299999999653, 0.00011183399999999816, 0.00011186099999999782, 0.00011237500000000483, 0.0001117220000000016, 0.00011211100000000501, 0.00011269399999999652, 0.00011255599999999977, 0.00011208299999999893, 0.00011248599999999498, 0.00011173600000000117, 0.00011191700000000304, 0.00011183399999999816, 0.00011236099999999832, 0.00011195800000000228, 0.00011211099999999807, 0.00011251400000000106, 0.00011220899999999506, 0.00011186099999999782, 0.00011212500000000458, 0.00011252800000000063, 0.00011248700000000139, 0.00011191600000000357, 0.00011206899999999936, 0.0001118890000000039, 0.00011245800000000278, 0.00011208299999999893, 0.0001125420000000002, 0.00011248600000000192, 0.00011198600000000142, 0.00011223600000000167, 0.00011184699999999825]</msg>
<status status="PASS" starttime="20201030 11:53:25.052" endtime="20201030 11:53:25.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.040" endtime="20201030 11:53:25.065"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:25.077" endtime="20201030 11:53:25.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.070" endtime="20201030 11:53:25.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.068" endtime="20201030 11:53:25.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.528" endtime="20201030 11:53:25.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:24.526" endtime="20201030 11:53:25.103"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.127" endtime="20201030 11:53:25.151"></status>
</kw>
<msg timestamp="20201030 11:53:25.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.123" endtime="20201030 11:53:25.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.155" endtime="20201030 11:53:25.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.162" endtime="20201030 11:53:25.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.116" endtime="20201030 11:53:25.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.110" endtime="20201030 11:53:25.169"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.187" endtime="20201030 11:53:25.557"></status>
</kw>
<msg timestamp="20201030 11:53:25.564" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043780847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043893944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:25.183" endtime="20201030 11:53:25.565"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.043780847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.043893944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:25.567" endtime="20201030 11:53:25.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.586" endtime="20201030 11:53:25.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.175" endtime="20201030 11:53:25.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.170" endtime="20201030 11:53:25.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:25.604" level="INFO">${RESULT} = [{'diff': 0.0001130969999999995}, {'diff': 0.00011286099999999882}, {'diff': 0.00011333300000000018}, {'diff': 0.00011341700000000454}, {'diff': 0.00011270800000000303}, {'diff': 0.0001133060000000005...</msg>
<status status="PASS" starttime="20201030 11:53:25.595" endtime="20201030 11:53:25.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:25.615" level="INFO">${ACCURACY} = {'diff': [0.0001130969999999995, 0.00011286099999999882, 0.00011333300000000018, 0.00011341700000000454, 0.00011270800000000303, 0.00011330600000000052, 0.00011318099999999692, 0.00011287500000000533,...</msg>
<status status="PASS" starttime="20201030 11:53:25.606" endtime="20201030 11:53:25.616"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.627" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:53:25.624" endtime="20201030 11:53:25.627"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.632" level="INFO">VALUE: [0.0001130969999999995, 0.00011286099999999882, 0.00011333300000000018, 0.00011341700000000454, 0.00011270800000000303, 0.00011330600000000052, 0.00011318099999999692, 0.00011287500000000533, 0.00011325000000000224, 0.00011323599999999573, 0.00011312499999999864, 0.0001133749999999989, 0.00011273599999999523, 0.00011325000000000224, 0.0001128749999999984, 0.000113597, 0.00011275000000000174, 0.00011280600000000002, 0.0001127090000000025, 0.00011350000000000249, 0.00011361099999999957, 0.00011277800000000088, 0.00011331900000000061, 0.00011362499999999914, 0.00011344499999999674, 0.00011269499999999599, 0.00011348600000000292, 0.00011279099999999403, 0.00011270799999999609, 0.0001128749999999984, 0.00011354199999999426, 0.00011355600000000077, 0.00011300000000000199, 0.00011316700000000429, 0.00011301400000000156, 0.00011366699999999785, 0.00011290300000000447, 0.0001127220000000026, 0.00011368099999999742, 0.00011354100000000172, 0.00011315299999999778, 0.00011322199999999616, 0.00011319399999999702, 0.00011312499999999864, 0.00011363899999999871, 0.00011275000000000174, 0.00011313799999999874, 0.00011312499999999864, 0.00011343000000000464, 0.00011354100000000172]</msg>
<status status="PASS" starttime="20201030 11:53:25.629" endtime="20201030 11:53:25.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.617" endtime="20201030 11:53:25.636"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:25.646" endtime="20201030 11:53:25.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.641" endtime="20201030 11:53:25.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.639" endtime="20201030 11:53:25.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.105" endtime="20201030 11:53:25.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.104" endtime="20201030 11:53:25.673"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.698" endtime="20201030 11:53:25.722"></status>
</kw>
<msg timestamp="20201030 11:53:25.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.694" endtime="20201030 11:53:25.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:25.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:25.726" endtime="20201030 11:53:25.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.733" endtime="20201030 11:53:25.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.686" endtime="20201030 11:53:25.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.680" endtime="20201030 11:53:25.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:25.758" endtime="20201030 11:53:26.081"></status>
</kw>
<msg timestamp="20201030 11:53:26.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044983708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04509775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:25.755" endtime="20201030 11:53:26.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.107" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.044983708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.04509775, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:53:26.091" endtime="20201030 11:53:26.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:26.109" endtime="20201030 11:53:26.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.747" endtime="20201030 11:53:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.742" endtime="20201030 11:53:26.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:26.127" level="INFO">${RESULT} = [{'diff': 0.0001140420000000017}, {'diff': 0.00011383300000000068}, {'diff': 0.0001143749999999999}, {'diff': 0.00011433400000000066}, {'diff': 0.0001139169999999981}, {'diff': 0.00011467999999999895}...</msg>
<status status="PASS" starttime="20201030 11:53:26.118" endtime="20201030 11:53:26.127"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:53:26.138" level="INFO">${ACCURACY} = {'diff': [0.0001140420000000017, 0.00011383300000000068, 0.0001143749999999999, 0.00011433400000000066, 0.0001139169999999981, 0.00011467999999999895, 0.00011466600000000632, 0.00011426399999999587, 0...</msg>
<status status="PASS" starttime="20201030 11:53:26.129" endtime="20201030 11:53:26.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.149" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:53:26.147" endtime="20201030 11:53:26.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.154" level="INFO">VALUE: [0.0001140420000000017, 0.00011383300000000068, 0.0001143749999999999, 0.00011433400000000066, 0.0001139169999999981, 0.00011467999999999895, 0.00011466600000000632, 0.00011426399999999587, 0.0001143749999999999, 0.00011379199999999451, 0.00011405600000000127, 0.00011436100000000032, 0.00011431900000000161, 0.00011433400000000066, 0.00011411100000000007, 0.0001143749999999999, 0.0001143749999999999, 0.00011405600000000127, 0.00011369399999999752, 0.00011402699999999572, 0.00011449999999999655, 0.00011455600000000177, 0.00011423700000000314, 0.00011408300000000093, 0.00011370799999999709, 0.00011388899999999896, 0.00011408300000000093, 0.00011433300000000118, 0.00011449999999999655, 0.00011413900000000615, 0.00011370899999999656, 0.0001142499999999963, 0.0001144169999999986, 0.00011413899999999921, 0.00011395800000000428, 0.00011445799999999784, 0.00011375000000000274, 0.00011383300000000068, 0.0001139169999999981, 0.00011420899999999706, 0.00011463899999999971, 0.00011375000000000274, 0.0001143049999999951, 0.00011408300000000093, 0.0001140550000000018, 0.00011393100000000461, 0.00011370799999999709, 0.00011418100000000486, 0.00011411199999999955, 0.00011386099999999982]</msg>
<status status="PASS" starttime="20201030 11:53:26.151" endtime="20201030 11:53:26.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.140" endtime="20201030 11:53:26.157"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:26.167" endtime="20201030 11:53:26.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.162" endtime="20201030 11:53:26.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.160" endtime="20201030 11:53:26.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.676" endtime="20201030 11:53:26.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:25.674" endtime="20201030 11:53:26.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.645" endtime="20201030 11:53:26.192"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:31.502" endtime="20201030 11:53:26.194" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:34.326" endtime="20201030 11:53:26.205"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:53:26.344" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:53:26.360" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:53:28.295" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:53:26.341" endtime="20201030 11:53:28.296"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.301" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:53:28.298" endtime="20201030 11:53:28.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.338" endtime="20201030 11:53:28.304"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:28.308" endtime="20201030 11:53:28.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.305" endtime="20201030 11:53:28.722"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.752" endtime="20201030 11:53:28.778"></status>
</kw>
<msg timestamp="20201030 11:53:28.779" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.749" endtime="20201030 11:53:28.779"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.785" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.781" endtime="20201030 11:53:28.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.792" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:28.788" endtime="20201030 11:53:28.793"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.742" endtime="20201030 11:53:28.795"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.737" endtime="20201030 11:53:28.797"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.734" endtime="20201030 11:53:28.797"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:28.805" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:28.804" endtime="20201030 11:53:28.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.799" endtime="20201030 11:53:28.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.732" endtime="20201030 11:53:28.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.730" endtime="20201030 11:53:28.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.809" endtime="20201030 11:53:28.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.727" endtime="20201030 11:53:28.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.816" endtime="20201030 11:53:28.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.724" endtime="20201030 11:53:28.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:26.335" endtime="20201030 11:53:28.822"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:28.836" endtime="20201030 11:53:28.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.832" endtime="20201030 11:53:28.861"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.895" endtime="20201030 11:53:28.919"></status>
</kw>
<msg timestamp="20201030 11:53:28.921" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.891" endtime="20201030 11:53:28.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.927" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.923" endtime="20201030 11:53:28.928"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.934" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:28.929" endtime="20201030 11:53:28.934"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.884" endtime="20201030 11:53:28.936"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.877" endtime="20201030 11:53:28.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.875" endtime="20201030 11:53:28.939"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:28.947" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:28.945" endtime="20201030 11:53:28.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.941" endtime="20201030 11:53:28.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.873" endtime="20201030 11:53:28.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.871" endtime="20201030 11:53:28.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.950" endtime="20201030 11:53:28.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.867" endtime="20201030 11:53:28.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.863" endtime="20201030 11:53:28.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.829" endtime="20201030 11:53:28.957"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.980" endtime="20201030 11:53:35.104"></status>
</kw>
<msg timestamp="20201030 11:53:35.105" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.976" endtime="20201030 11:53:35.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.111" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.107" endtime="20201030 11:53:35.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.113" endtime="20201030 11:53:35.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.969" endtime="20201030 11:53:35.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.964" endtime="20201030 11:53:35.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:35.126" level="INFO">${RESULT} = {'bg-timer-count': 0, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:53:35.122" endtime="20201030 11:53:35.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.139" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:35.135" endtime="20201030 11:53:35.140"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.144" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:35.141" endtime="20201030 11:53:35.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.129" endtime="20201030 11:53:35.146"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.154" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:35.153" endtime="20201030 11:53:35.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.156" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:35.155" endtime="20201030 11:53:35.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.147" endtime="20201030 11:53:35.158"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.162" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:35.161" endtime="20201030 11:53:35.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.164" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:53:35.163" endtime="20201030 11:53:35.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.158" endtime="20201030 11:53:35.165"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.173" endtime="20201030 11:53:35.493"></status>
</kw>
<msg timestamp="20201030 11:53:35.500" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.2334665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.233467042, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201030 11:53:35.172" endtime="20201030 11:53:35.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.517" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.2334665, 'source': 'DUT_IC', 'event': 'FALLING', 'diff': 0, 'source_diff': 0}, {'time': 0.233467042, 'source': 'DUT_IC', 'event': 'RISI...</msg>
<status status="PASS" starttime="20201030 11:53:35.502" endtime="20201030 11:53:35.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.520" endtime="20201030 11:53:35.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.168" endtime="20201030 11:53:35.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.166" endtime="20201030 11:53:35.527"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:35.537" level="INFO">${FILTERED} = [{'diff': 0}, {'diff': 0.10000815199999996}, {'diff': 0.10001038899999998}, {'diff': 5.419999999922709e-07}, {'diff': 0.100010861}, {'diff': 0.10001033300000006}, {'diff': 0.10001033299999995}, {'diff...</msg>
<status status="PASS" starttime="20201030 11:53:35.528" endtime="20201030 11:53:35.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:35.547" level="INFO">${RESULT} = {'diff': [0, 0.10000815199999996, 0.10001038899999998, 5.419999999922709e-07, 0.100010861, 0.10001033300000006, 0.10001033299999995, 0.10001033300000006, 0.100010347, 0.10001033299999995, 0.1000103610...</msg>
<status status="PASS" starttime="20201030 11:53:35.539" endtime="20201030 11:53:35.548"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.558" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:35.555" endtime="20201030 11:53:35.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.563" level="INFO">VALUE: [0, 0.10000815199999996, 0.10001038899999998, 5.419999999922709e-07, 0.100010861, 0.10001033300000006, 0.10001033299999995, 0.10001033300000006, 0.100010347, 0.10001033299999995, 0.10001036100000005, 0.10001031999999999, 0.10001034799999986, 0.10001034799999986, 0.100010347, 0.10001033299999995, 0.100010347, 0.10001033300000017, 0.10001033299999973, 0.100010347, 0.100010347, 0.10001027800000006, 0.10001027800000006, 0.10001036100000027, 0.10001034800000008, 0.10001031999999999, 0.100010347, 0.10001034800000008, 0.10001031999999999, 0.10001031999999999, 0.1000103750000001, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07]</msg>
<status status="PASS" starttime="20201030 11:53:35.560" endtime="20201030 11:53:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.549" endtime="20201030 11:53:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.959" endtime="20201030 11:53:35.568"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:28.823" endtime="20201030 11:53:35.570" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:35.587" endtime="20201030 11:53:35.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.583" endtime="20201030 11:53:35.611"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.645" endtime="20201030 11:53:35.669"></status>
</kw>
<msg timestamp="20201030 11:53:35.671" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.641" endtime="20201030 11:53:35.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.677" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.673" endtime="20201030 11:53:35.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:35.684" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:35.679" endtime="20201030 11:53:35.684"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:35.634" endtime="20201030 11:53:35.686"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:35.627" endtime="20201030 11:53:35.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.624" endtime="20201030 11:53:35.689"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:35.696" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:35.695" endtime="20201030 11:53:35.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.690" endtime="20201030 11:53:35.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.622" endtime="20201030 11:53:35.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.621" endtime="20201030 11:53:35.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.700" endtime="20201030 11:53:35.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.617" endtime="20201030 11:53:35.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.612" endtime="20201030 11:53:35.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.581" endtime="20201030 11:53:35.707"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:35.732" endtime="20201030 11:53:41.855"></status>
</kw>
<msg timestamp="20201030 11:53:41.856" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:35.728" endtime="20201030 11:53:41.857"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.863" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:41.859" endtime="20201030 11:53:41.863"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.865" endtime="20201030 11:53:41.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.719" endtime="20201030 11:53:41.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.714" endtime="20201030 11:53:41.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:41.879" level="INFO">${RESULT} = {'bg-timer-count': 5, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:53:41.874" endtime="20201030 11:53:41.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.889" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:41.887" endtime="20201030 11:53:41.890"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.893" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:41.891" endtime="20201030 11:53:41.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.881" endtime="20201030 11:53:41.896"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.905" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:41.903" endtime="20201030 11:53:41.906"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.910" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:41.908" endtime="20201030 11:53:41.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.897" endtime="20201030 11:53:41.912"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.920" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:41.919" endtime="20201030 11:53:41.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:41.922" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:53:41.921" endtime="20201030 11:53:41.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.913" endtime="20201030 11:53:41.923"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:41.931" endtime="20201030 11:53:42.246"></status>
</kw>
<msg timestamp="20201030 11:53:42.252" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136019514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236097333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:41.929" endtime="20201030 11:53:42.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.270" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136019514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236097333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:42.254" endtime="20201030 11:53:42.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.272" endtime="20201030 11:53:42.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.926" endtime="20201030 11:53:42.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:41.923" endtime="20201030 11:53:42.279"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:42.290" level="INFO">${FILTERED} = [{'diff': 0.10007781899999998}, {'diff': 5.42000000047782e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.419999999922709e-07}, {'diff': 5.410000000205528e-07}, {'di...</msg>
<status status="PASS" starttime="20201030 11:53:42.281" endtime="20201030 11:53:42.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:42.300" level="INFO">${RESULT} = {'diff': [0.10007781899999998, 5.42000000047782e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.420000001032932e-07, 5.4199999...</msg>
<status status="PASS" starttime="20201030 11:53:42.292" endtime="20201030 11:53:42.301"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.311" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:42.308" endtime="20201030 11:53:42.311"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.316" level="INFO">VALUE: [0.10007781899999998, 5.42000000047782e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000000205528e-07, 5.410000000205528e-07, 5.420000001032932e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 0.10001082000000006, 0.10001036199999991, 0.10001033400000026, 0.100010347, 0.10001036099999983, 0.10001027799999962, 0.10001027799999962, 0.10001029100000025, 0.10001030600000016, 0.10001029199999989, 0.1000102909999998, 0.10001030600000016, 0.10001029200000033, 0.1000102909999998, 0.1000103189999999, 0.10001029199999945, 0.10001031999999999, 5.419999995481817e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07]</msg>
<status status="PASS" starttime="20201030 11:53:42.313" endtime="20201030 11:53:42.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.302" endtime="20201030 11:53:42.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:35.709" endtime="20201030 11:53:42.321"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:35.575" endtime="20201030 11:53:42.323" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:42.340" endtime="20201030 11:53:42.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.337" endtime="20201030 11:53:42.364"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.397" endtime="20201030 11:53:42.422"></status>
</kw>
<msg timestamp="20201030 11:53:42.424" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.394" endtime="20201030 11:53:42.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.430" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.426" endtime="20201030 11:53:42.431"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:42.437" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:42.432" endtime="20201030 11:53:42.437"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:42.387" endtime="20201030 11:53:42.439"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:42.380" endtime="20201030 11:53:42.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.378" endtime="20201030 11:53:42.442"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:42.449" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:42.448" endtime="20201030 11:53:42.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.443" endtime="20201030 11:53:42.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.376" endtime="20201030 11:53:42.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.374" endtime="20201030 11:53:42.451"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.453" endtime="20201030 11:53:42.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.370" endtime="20201030 11:53:42.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.365" endtime="20201030 11:53:42.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.334" endtime="20201030 11:53:42.460"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:42.485" endtime="20201030 11:53:48.609"></status>
</kw>
<msg timestamp="20201030 11:53:48.610" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:42.482" endtime="20201030 11:53:48.610"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.616" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:48.612" endtime="20201030 11:53:48.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:48.619" endtime="20201030 11:53:48.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.474" endtime="20201030 11:53:48.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.466" endtime="20201030 11:53:48.626"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:48.632" level="INFO">${RESULT} = {'bg-timer-count': 10, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:53:48.628" endtime="20201030 11:53:48.633"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.643" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:48.640" endtime="20201030 11:53:48.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.647" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:48.645" endtime="20201030 11:53:48.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.634" endtime="20201030 11:53:48.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.659" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:48.657" endtime="20201030 11:53:48.660"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.664" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:48.662" endtime="20201030 11:53:48.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.651" endtime="20201030 11:53:48.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.676" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:48.673" endtime="20201030 11:53:48.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:48.681" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:53:48.678" endtime="20201030 11:53:48.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.667" endtime="20201030 11:53:48.682"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:48.690" endtime="20201030 11:53:49.019"></status>
</kw>
<msg timestamp="20201030 11:53:49.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136149736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236285028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:48.689" endtime="20201030 11:53:49.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:49.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.136149736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.236285028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:49.028" endtime="20201030 11:53:49.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:49.046" endtime="20201030 11:53:49.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.685" endtime="20201030 11:53:49.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:48.683" endtime="20201030 11:53:49.053"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:49.063" level="INFO">${FILTERED} = [{'diff': 0.10013529200000001}, {'diff': 0.09990652800000002}, {'diff': 0.10001037499999998}, {'diff': 0.10001036099999999}, {'diff': 0.10001040299999997}, {'diff': 0.10001041600000005}, {'diff': 5.41...</msg>
<status status="PASS" starttime="20201030 11:53:49.054" endtime="20201030 11:53:49.064"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:49.074" level="INFO">${RESULT} = {'diff': [0.10013529200000001, 0.09990652800000002, 0.10001037499999998, 0.10001036099999999, 0.10001040299999997, 0.10001041600000005, 5.410000000205528e-07, 5.419999999922709e-07, 5.410000001315751e...</msg>
<status status="PASS" starttime="20201030 11:53:49.065" endtime="20201030 11:53:49.074"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:49.084" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:49.082" endtime="20201030 11:53:49.085"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:49.090" level="INFO">VALUE: [0.10013529200000001, 0.09990652800000002, 0.10001037499999998, 0.10001036099999999, 0.10001040299999997, 0.10001041600000005, 5.410000000205528e-07, 5.419999999922709e-07, 5.410000001315751e-07, 0.10001087499999994, 0.10001038899999992, 0.10001037499999987, 0.10001036100000005, 0.10001040199999989, 0.10001037499999987, 0.10001038899999992, 0.10001037499999987, 0.10001036100000005, 0.1000103750000001, 0.10001038899999992, 0.1000103750000001, 0.1000103750000001, 0.1000103750000001, 0.10001040299999975, 0.10001037499999965, 0.10001037499999965, 0.1000103750000001, 0.1000103750000001, 0.10001038899999992, 0.1000103750000001, 0.10001033400000026, 0.10001034800000008, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.410000003536197e-07]</msg>
<status status="PASS" starttime="20201030 11:53:49.087" endtime="20201030 11:53:49.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.076" endtime="20201030 11:53:49.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:42.462" endtime="20201030 11:53:49.094"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:42.328" endtime="20201030 11:53:49.097" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:49.114" endtime="20201030 11:53:49.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.110" endtime="20201030 11:53:49.137"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:49.171" endtime="20201030 11:53:49.195"></status>
</kw>
<msg timestamp="20201030 11:53:49.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:49.167" endtime="20201030 11:53:49.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:49.203" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:49.198" endtime="20201030 11:53:49.203"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:49.211" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:49.205" endtime="20201030 11:53:49.211"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:49.160" endtime="20201030 11:53:49.213"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:49.153" endtime="20201030 11:53:49.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.151" endtime="20201030 11:53:49.216"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:49.224" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:49.222" endtime="20201030 11:53:49.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.218" endtime="20201030 11:53:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.149" endtime="20201030 11:53:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.147" endtime="20201030 11:53:49.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:49.227" endtime="20201030 11:53:49.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.143" endtime="20201030 11:53:49.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.139" endtime="20201030 11:53:49.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.107" endtime="20201030 11:53:49.235"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:49.257" endtime="20201030 11:53:55.381"></status>
</kw>
<msg timestamp="20201030 11:53:55.382" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:49.253" endtime="20201030 11:53:55.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.389" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:55.384" endtime="20201030 11:53:55.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:55.391" endtime="20201030 11:53:55.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.246" endtime="20201030 11:53:55.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.241" endtime="20201030 11:53:55.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:55.404" level="INFO">${RESULT} = {'bg-timer-count': 15, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:53:55.400" endtime="20201030 11:53:55.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.414" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:55.412" endtime="20201030 11:53:55.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.419" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:55.417" endtime="20201030 11:53:55.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.406" endtime="20201030 11:53:55.421"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.431" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:55.429" endtime="20201030 11:53:55.432"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.435" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:55.433" endtime="20201030 11:53:55.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.422" endtime="20201030 11:53:55.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.447" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:55.445" endtime="20201030 11:53:55.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.449" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:53:55.448" endtime="20201030 11:53:55.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.439" endtime="20201030 11:53:55.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:55.458" endtime="20201030 11:53:55.804"></status>
</kw>
<msg timestamp="20201030 11:53:55.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134429153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234653278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:55.456" endtime="20201030 11:53:55.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134429153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.234653278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:55.813" endtime="20201030 11:53:55.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:55.831" endtime="20201030 11:53:55.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.453" endtime="20201030 11:53:55.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.451" endtime="20201030 11:53:55.838"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:55.848" level="INFO">${FILTERED} = [{'diff': 0.100224125}, {'diff': 0.09982219499999997}, {'diff': 0.100010347}, {'diff': 0.10001037500000004}, {'diff': 0.10001033299999995}, {'diff': 0.100010347}, {'diff': 0.10001036100000005}, {'diff...</msg>
<status status="PASS" starttime="20201030 11:53:55.839" endtime="20201030 11:53:55.849"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:55.857" level="INFO">${RESULT} = {'diff': [0.100224125, 0.09982219499999997, 0.100010347, 0.10001037500000004, 0.10001033299999995, 0.100010347, 0.10001036100000005, 0.100010347, 0.100010347, 0.10001036100000005, 0.10001036100000005,...</msg>
<status status="PASS" starttime="20201030 11:53:55.850" endtime="20201030 11:53:55.858"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.867" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:55.865" endtime="20201030 11:53:55.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.873" level="INFO">VALUE: [0.100224125, 0.09982219499999997, 0.100010347, 0.10001037500000004, 0.10001033299999995, 0.100010347, 0.10001036100000005, 0.100010347, 0.100010347, 0.10001036100000005, 0.10001036100000005, 0.10001033299999995, 0.10001036100000005, 0.100010347, 0.100010347, 0.10001036100000005, 0.10001036200000013, 0.10001036100000005, 0.100010347, 0.100010347, 0.100010347, 0.10001036099999983, 0.10001036199999991, 0.100010347, 0.100010347, 0.10001036100000027, 0.10001036099999983, 0.100010347, 0.10001034800000008, 0.10001038899999992, 0.10001038900000037, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.409999994654413e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.420000004363601e-07, 0.10001076400000031, 0.10001030500000052, 0.1000102639999998, 0.10001023600000014, 0.10001026400000068, 0.10001029200000033, 0.10001025000000041]</msg>
<status status="PASS" starttime="20201030 11:53:55.870" endtime="20201030 11:53:55.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.859" endtime="20201030 11:53:55.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:49.236" endtime="20201030 11:53:55.877"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:49.101" endtime="20201030 11:53:55.879" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:55.897" endtime="20201030 11:53:55.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.893" endtime="20201030 11:53:55.920"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:55.955" endtime="20201030 11:53:55.980"></status>
</kw>
<msg timestamp="20201030 11:53:55.981" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:55.952" endtime="20201030 11:53:55.981"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.987" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:55.983" endtime="20201030 11:53:55.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:55.994" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:55.990" endtime="20201030 11:53:55.995"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:55.945" endtime="20201030 11:53:55.997"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:55.937" endtime="20201030 11:53:55.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.934" endtime="20201030 11:53:55.999"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:56.007" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:56.006" endtime="20201030 11:53:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.001" endtime="20201030 11:53:56.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.932" endtime="20201030 11:53:56.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.930" endtime="20201030 11:53:56.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:56.011" endtime="20201030 11:53:56.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.926" endtime="20201030 11:53:56.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.922" endtime="20201030 11:53:56.017"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:55.890" endtime="20201030 11:53:56.018"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:56.040" endtime="20201030 11:54:02.165"></status>
</kw>
<msg timestamp="20201030 11:54:02.166" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:56.037" endtime="20201030 11:54:02.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.173" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:02.169" endtime="20201030 11:54:02.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.175" endtime="20201030 11:54:02.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.029" endtime="20201030 11:54:02.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.024" endtime="20201030 11:54:02.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:02.188" level="INFO">${RESULT} = {'bg-timer-count': 20, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:54:02.184" endtime="20201030 11:54:02.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.199" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:02.196" endtime="20201030 11:54:02.199"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.203" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:54:02.201" endtime="20201030 11:54:02.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.190" endtime="20201030 11:54:02.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.215" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:02.213" endtime="20201030 11:54:02.216"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.220" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:54:02.218" endtime="20201030 11:54:02.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.207" endtime="20201030 11:54:02.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.232" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:54:02.230" endtime="20201030 11:54:02.233"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.238" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:54:02.234" endtime="20201030 11:54:02.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.223" endtime="20201030 11:54:02.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.257" endtime="20201030 11:54:02.556"></status>
</kw>
<msg timestamp="20201030 11:54:02.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134666722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:02.254" endtime="20201030 11:54:02.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.134666722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.235001528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:02.560" endtime="20201030 11:54:02.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.568" endtime="20201030 11:54:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.247" endtime="20201030 11:54:02.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.242" endtime="20201030 11:54:02.571"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:54:02.576" level="INFO">${FILTERED} = [{'diff': 0.100334806}, {'diff': 0.100058542}, {'diff': 0.09966608300000002}, {'diff': 0.10001038899999998}, {'diff': 0.10001037499999998}, {'diff': 0.10001037499999998}, {'diff': 0.10001038900000003}...</msg>
<status status="PASS" starttime="20201030 11:54:02.572" endtime="20201030 11:54:02.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:02.580" level="INFO">${RESULT} = {'diff': [0.100334806, 0.100058542, 0.09966608300000002, 0.10001038899999998, 0.10001037499999998, 0.10001037499999998, 0.10001038900000003, 0.10001038900000003, 0.10001036100000005, 0.100010387999999...</msg>
<status status="PASS" starttime="20201030 11:54:02.577" endtime="20201030 11:54:02.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.585" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:54:02.584" endtime="20201030 11:54:02.585"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.587" level="INFO">VALUE: [0.100334806, 0.100058542, 0.09966608300000002, 0.10001038899999998, 0.10001037499999998, 0.10001037499999998, 0.10001038900000003, 0.10001038900000003, 0.10001036100000005, 0.10001038799999984, 0.10001038900000014, 0.10001036100000005, 0.10001038899999992, 0.10001038900000014, 0.10001037499999987, 0.10001036100000005, 0.10001037499999987, 0.10001040200000011, 0.10001036100000005, 0.1000103750000001, 0.10001040199999967, 0.10001036100000027, 0.1000103750000001, 0.10001040299999975, 0.1000103750000001, 0.1000103750000001, 0.1000103750000001, 0.10001038899999992, 0.10001036199999991, 0.10001040299999975, 0.10001040200000011, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.409999999095305e-07, 0.10001087499999972, 0.10001036099999983, 0.1000103750000001, 0.10001038900000037, 0.10001038899999948, 0.1000103750000001, 0.10001040299999975, 0.10001034799999964, 0.10001045899999994, 5.410000003536197e-07, 5.419999995481817e-07, 0.10001077799999969, 0.1000103189999999]</msg>
<status status="PASS" starttime="20201030 11:54:02.586" endtime="20201030 11:54:02.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.581" endtime="20201030 11:54:02.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:56.020" endtime="20201030 11:54:02.590"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:55.884" endtime="20201030 11:54:02.591" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:54:02.600" endtime="20201030 11:54:02.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.597" endtime="20201030 11:54:02.620"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.636" endtime="20201030 11:54:02.658"></status>
</kw>
<msg timestamp="20201030 11:54:02.659" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:02.634" endtime="20201030 11:54:02.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.666" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f103rb', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:02.661" endtime="20201030 11:54:02.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:54:02.672" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:54:02.668" endtime="20201030 11:54:02.673"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:02.631" endtime="20201030 11:54:02.675"></status>
</kw>
<status status="FAIL" starttime="20201030 11:54:02.628" endtime="20201030 11:54:02.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.627" endtime="20201030 11:54:02.678"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:54:02.685" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:54:02.684" endtime="20201030 11:54:02.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.679" endtime="20201030 11:54:02.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.626" endtime="20201030 11:54:02.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.625" endtime="20201030 11:54:02.687"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.689" endtime="20201030 11:54:02.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.623" endtime="20201030 11:54:02.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.621" endtime="20201030 11:54:02.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.596" endtime="20201030 11:54:02.696"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:02.718" endtime="20201030 11:54:08.842"></status>
</kw>
<msg timestamp="20201030 11:54:08.844" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:02.715" endtime="20201030 11:54:08.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.850" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:54:08.846" endtime="20201030 11:54:08.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:08.852" endtime="20201030 11:54:08.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.708" endtime="20201030 11:54:08.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.702" endtime="20201030 11:54:08.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:08.866" level="INFO">${RESULT} = {'bg-timer-count': 25, 'bg-timer-interval': 20000, 'main-timer-interval': 100000}</msg>
<status status="PASS" starttime="20201030 11:54:08.861" endtime="20201030 11:54:08.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.876" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:08.874" endtime="20201030 11:54:08.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.887" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:54:08.884" endtime="20201030 11:54:08.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:08.867" endtime="20201030 11:54:08.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.894" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:54:08.893" endtime="20201030 11:54:08.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.897" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:54:08.896" endtime="20201030 11:54:08.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:08.890" endtime="20201030 11:54:08.898"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.902" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:54:08.901" endtime="20201030 11:54:08.903"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:08.904" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:54:08.903" endtime="20201030 11:54:08.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:08.898" endtime="20201030 11:54:08.906"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:08.913" endtime="20201030 11:54:09.225"></status>
</kw>
<msg timestamp="20201030 11:54:09.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.110700625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211178111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:08.912" endtime="20201030 11:54:09.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:54:09.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.110700625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.211178111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:54:09.234" endtime="20201030 11:54:09.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:54:09.251" endtime="20201030 11:54:09.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:08.909" endtime="20201030 11:54:09.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:08.906" endtime="20201030 11:54:09.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:54:09.268" level="INFO">${FILTERED} = [{'diff': 0.100477486}, {'diff': 0.10006436099999999}, {'diff': 0.09952006900000004}, {'diff': 0.10001136100000002}, {'diff': 0.10001034799999997}, {'diff': 0.10001034799999997}, {'diff': 0.100010347}...</msg>
<status status="PASS" starttime="20201030 11:54:09.260" endtime="20201030 11:54:09.269"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:54:09.277" level="INFO">${RESULT} = {'diff': [0.100477486, 0.10006436099999999, 0.09952006900000004, 0.10001136100000002, 0.10001034799999997, 0.10001034799999997, 0.100010347, 0.100010347, 0.100010347, 0.10001036100000005, 0.100010347,...</msg>
<status status="PASS" starttime="20201030 11:54:09.270" endtime="20201030 11:54:09.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:54:09.289" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:54:09.286" endtime="20201030 11:54:09.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:54:09.294" level="INFO">VALUE: [0.100477486, 0.10006436099999999, 0.09952006900000004, 0.10001136100000002, 0.10001034799999997, 0.10001034799999997, 0.100010347, 0.100010347, 0.100010347, 0.10001036100000005, 0.100010347, 0.10001037499999987, 0.10001033400000003, 0.10001033400000003, 0.100010347, 0.10001036100000005, 0.10001040299999997, 5.419999999922709e-07, 5.409999999095305e-07, 5.410000003536197e-07, 5.409999999095305e-07, 0.10001081899999997, 0.100010347, 0.10001038899999992, 5.419999999922709e-07, 5.419999999922709e-07, 5.409999999095305e-07, 5.409999999095305e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.419999999922709e-07, 5.410000003536197e-07, 5.409999999095305e-07, 0.1000108609999999, 0.10001038900000037, 5.420000004363601e-07, 0.10001086100000034, 0.10001034800000053, 0.1000103750000001, 0.1000103189999999, 0.10001036100000071, 0.10001034700000044, 0.1000102639999998, 0.10001027800000006, 0.10001025000000041, 0.10001029199999945]</msg>
<status status="PASS" starttime="20201030 11:54:09.291" endtime="20201030 11:54:09.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:09.279" endtime="20201030 11:54:09.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:54:02.698" endtime="20201030 11:54:09.299"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f103rb</tag>
</tags>
<status status="PASS" starttime="20201030 11:54:02.593" endtime="20201030 11:54:09.301" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:53:26.229" endtime="20201030 11:54:09.318"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f103rb</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201030 11:50:32.927" endtime="20201030 11:54:09.399"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f103rb</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
