<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201010 14:27:57.027" rpa="false">
<suite id="s1" name="tests_ztimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:57.591" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:57.599" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:27:58.715" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:57.590" endtime="20201010 14:27:58.716"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.719" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:27:58.717" endtime="20201010 14:27:58.719"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.588" endtime="20201010 14:27:58.720"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:58.722" endtime="20201010 14:27:58.908"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.721" endtime="20201010 14:27:58.909"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.939" endtime="20201010 14:27:58.960"></status>
</kw>
<msg timestamp="20201010 14:27:58.961" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.934" endtime="20201010 14:27:58.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.967" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['s is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:58.964" endtime="20201010 14:27:58.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:58.974" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:58.969" endtime="20201010 14:27:58.974"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.928" endtime="20201010 14:27:58.976"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:58.923" endtime="20201010 14:27:58.977"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.920" endtime="20201010 14:27:58.978"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:58.986" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:58.984" endtime="20201010 14:27:58.987"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.980" endtime="20201010 14:27:58.987"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.918" endtime="20201010 14:27:58.987"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.917" endtime="20201010 14:27:58.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.989" endtime="20201010 14:27:58.992"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.913" endtime="20201010 14:27:58.993"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:58.995" endtime="20201010 14:27:58.997"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:58.910" endtime="20201010 14:27:58.998"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:57.587" endtime="20201010 14:27:58.998"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:27:59.004" endtime="20201010 14:27:59.024"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.003" endtime="20201010 14:27:59.025"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.039" endtime="20201010 14:27:59.053"></status>
</kw>
<msg timestamp="20201010 14:27:59.053" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.038" endtime="20201010 14:27:59.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.056" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.054" endtime="20201010 14:27:59.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.059" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:27:59.057" endtime="20201010 14:27:59.059"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:59.035" endtime="20201010 14:27:59.060"></status>
</kw>
<status status="FAIL" starttime="20201010 14:27:59.031" endtime="20201010 14:27:59.060"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.030" endtime="20201010 14:27:59.061"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:27:59.064" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:27:59.064" endtime="20201010 14:27:59.065"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.062" endtime="20201010 14:27:59.065"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.029" endtime="20201010 14:27:59.065"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.028" endtime="20201010 14:27:59.065"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.066" endtime="20201010 14:27:59.068"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.027" endtime="20201010 14:27:59.068"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.025" endtime="20201010 14:27:59.069"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.001" endtime="20201010 14:27:59.069"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.076" endtime="20201010 14:27:59.086"></status>
</kw>
<msg timestamp="20201010 14:27:59.086" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.075" endtime="20201010 14:27:59.087"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.089" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['ztimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:27:59.087" endtime="20201010 14:27:59.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:27:59.090" endtime="20201010 14:27:59.091"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.072" endtime="20201010 14:27:59.092"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.070" endtime="20201010 14:27:59.092"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.097" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201010 14:27:59.096" endtime="20201010 14:27:59.097"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.099" level="INFO">VALUE: ztimer</msg>
<status status="PASS" starttime="20201010 14:27:59.098" endtime="20201010 14:27:59.099"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.093" endtime="20201010 14:27:59.100"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:27:58.999" endtime="20201010 14:27:59.101" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:57.140" endtime="20201010 14:27:59.104"></status>
</suite>
<suite id="s1-s2" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/ztimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201010 14:27:59.156" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201010 14:27:59.164" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201010 14:28:00.317" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201010 14:27:59.155" endtime="20201010 14:28:00.318"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.320" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201010 14:28:00.319" endtime="20201010 14:28:00.320"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.153" endtime="20201010 14:28:00.321"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:00.323" endtime="20201010 14:28:00.559"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.322" endtime="20201010 14:28:00.560"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.586" endtime="20201010 14:28:00.607"></status>
</kw>
<msg timestamp="20201010 14:28:00.608" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.582" endtime="20201010 14:28:00.609"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.614" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['his is RIOT! (Version: 2020.07)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.611" endtime="20201010 14:28:00.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.618" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.616" endtime="20201010 14:28:00.619"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.577" endtime="20201010 14:28:00.619"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.572" endtime="20201010 14:28:00.620"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.570" endtime="20201010 14:28:00.620"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.624" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.623" endtime="20201010 14:28:00.624"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.621" endtime="20201010 14:28:00.625"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.568" endtime="20201010 14:28:00.625"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.567" endtime="20201010 14:28:00.625"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.626" endtime="20201010 14:28:00.627"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.564" endtime="20201010 14:28:00.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.628" endtime="20201010 14:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.561" endtime="20201010 14:28:00.630"></status>
</kw>
<status status="PASS" starttime="20201010 14:27:59.152" endtime="20201010 14:28:00.631"></status>
</kw>
<test id="s1-s2-t1" name="0 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:00.638" endtime="20201010 14:28:00.657"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.636" endtime="20201010 14:28:00.658"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.671" endtime="20201010 14:28:00.685"></status>
</kw>
<msg timestamp="20201010 14:28:00.686" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.669" endtime="20201010 14:28:00.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.688" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.687" endtime="20201010 14:28:00.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:00.691" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:00.689" endtime="20201010 14:28:00.692"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.666" endtime="20201010 14:28:00.692"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:00.664" endtime="20201010 14:28:00.693"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.663" endtime="20201010 14:28:00.693"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:00.697" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:00.696" endtime="20201010 14:28:00.697"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.694" endtime="20201010 14:28:00.698"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.662" endtime="20201010 14:28:00.698"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.661" endtime="20201010 14:28:00.698"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.699" endtime="20201010 14:28:00.700"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.660" endtime="20201010 14:28:00.701"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.658" endtime="20201010 14:28:00.701"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.633" endtime="20201010 14:28:00.701"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:00.710" endtime="20201010 14:28:06.227"></status>
</kw>
<msg timestamp="20201010 14:28:06.228" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:00.709" endtime="20201010 14:28:06.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.233" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0 1\r\n'], 'data': [{'focus': '100000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.230" endtime="20201010 14:28:06.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.236" endtime="20201010 14:28:06.239"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.706" endtime="20201010 14:28:06.240"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.704" endtime="20201010 14:28:06.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:06.246" level="INFO">${RESULT} = {'focus': [100000]}</msg>
<status status="PASS" starttime="20201010 14:28:06.243" endtime="20201010 14:28:06.247"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:06.305" level="INFO">${interval} = []</msg>
<status status="PASS" starttime="20201010 14:28:06.248" endtime="20201010 14:28:06.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.313" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:06.311" endtime="20201010 14:28:06.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.317" level="INFO">VALUE: []</msg>
<status status="PASS" starttime="20201010 14:28:06.315" endtime="20201010 14:28:06.318"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.307" endtime="20201010 14:28:06.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.326" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:06.324" endtime="20201010 14:28:06.327"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.330" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:06.328" endtime="20201010 14:28:06.331"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.320" endtime="20201010 14:28:06.332"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.367" endtime="20201010 14:28:06.667"></status>
</kw>
<msg timestamp="20201010 14:28:06.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.564992736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.664994486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:06.366" endtime="20201010 14:28:06.671"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.564992736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.664994486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:06.671" endtime="20201010 14:28:06.679"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.679" endtime="20201010 14:28:06.681"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.363" endtime="20201010 14:28:06.681"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.333" endtime="20201010 14:28:06.682"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:06.686" level="INFO">${FILTERED} = [{'diff': 0.10000175}, {'diff': 0.09999822199999997}, {'diff': 0.10000405600000006}, {'diff': 0.100002861}, {'diff': 0.100003222}, {'diff': 0.10000523599999989}, {'diff': 0.09999873699999995}, {'diff'...</msg>
<status status="PASS" starttime="20201010 14:28:06.683" endtime="20201010 14:28:06.686"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:06.691" level="INFO">${RESULT} = {'diff': [0.10000175, 0.09999822199999997, 0.10000405600000006, 0.100002861, 0.100003222, 0.10000523599999989, 0.09999873699999995, 0.09999969400000008, 0.10000624999999985, 0.09999800000000003, 0.100...</msg>
<status status="PASS" starttime="20201010 14:28:06.687" endtime="20201010 14:28:06.691"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.695" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:06.694" endtime="20201010 14:28:06.695"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.697" level="INFO">VALUE: [0.10000175, 0.09999822199999997, 0.10000405600000006, 0.100002861, 0.100003222, 0.10000523599999989, 0.09999873699999995, 0.09999969400000008, 0.10000624999999985, 0.09999800000000003, 0.10000104100000007, 0.09999922300000019, 0.09999881900000007, 0.10000422199999992, 0.10000434700000005, 0.09999754100000002, 0.0999985419999998, 0.10000672200000027, 0.10000488900000004, 0.09999772200000034, 0.10000258299999976, 0.1000008750000001, 0.1000062220000002, 0.1000002219999998, 0.10000212500000005, 0.10000520799999979, 0.1000072219999999, 0.1000038889999999, 0.10000243100000006, 0.09999695800000019, 0.09999974999999983, 0.10000607000000006, 0.09999804199999973, 0.10000705600000037, 0.09999806899999975, 0.09999941600000017, 0.09999755599999993, 0.1000032080000004, 0.09999822300000005, 0.10000659799999934, 0.0999993340000005, 0.10000212499999961, 0.10000529200000052, 0.1000004720000005, 0.09999732000000083, 0.09999834799999974, 0.1000009860000004, 0.10000330600000051, 0.100002806, 0.10000113899999974]</msg>
<status status="PASS" starttime="20201010 14:28:06.696" endtime="20201010 14:28:06.698"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.691" endtime="20201010 14:28:06.698"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:00.702" endtime="20201010 14:28:06.699"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:00.631" endtime="20201010 14:28:06.699" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="5 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:06.707" endtime="20201010 14:28:06.726"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.705" endtime="20201010 14:28:06.727"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.740" endtime="20201010 14:28:06.754"></status>
</kw>
<msg timestamp="20201010 14:28:06.754" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.738" endtime="20201010 14:28:06.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:06.755" endtime="20201010 14:28:06.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:06.760" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:06.758" endtime="20201010 14:28:06.760"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.735" endtime="20201010 14:28:06.761"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:06.733" endtime="20201010 14:28:06.762"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.732" endtime="20201010 14:28:06.762"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:06.766" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:06.765" endtime="20201010 14:28:06.766"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.763" endtime="20201010 14:28:06.766"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.731" endtime="20201010 14:28:06.766"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.730" endtime="20201010 14:28:06.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.767" endtime="20201010 14:28:06.769"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.729" endtime="20201010 14:28:06.769"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.727" endtime="20201010 14:28:06.770"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.703" endtime="20201010 14:28:06.770"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:06.780" endtime="20201010 14:28:12.308"></status>
</kw>
<msg timestamp="20201010 14:28:12.309" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:06.779" endtime="20201010 14:28:12.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.314" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '56207'}, {'interval': '42110'}, {'interval': '19271'}, {'interval': '94738'}, {'interval': '34690'}...</msg>
<status status="PASS" starttime="20201010 14:28:12.311" endtime="20201010 14:28:12.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.316" endtime="20201010 14:28:12.320"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.776" endtime="20201010 14:28:12.321"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.773" endtime="20201010 14:28:12.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:12.328" level="INFO">${RESULT} = {'focus': [100000], 'interval': [56207, 42110, 19271, 94738, 34690]}</msg>
<status status="PASS" starttime="20201010 14:28:12.323" endtime="20201010 14:28:12.328"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:12.339" level="INFO">${interval} = [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:12.330" endtime="20201010 14:28:12.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.346" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:12.345" endtime="20201010 14:28:12.347"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.349" level="INFO">VALUE: [56207, 42110, 19271, 94738, 34690]</msg>
<status status="PASS" starttime="20201010 14:28:12.347" endtime="20201010 14:28:12.349"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.340" endtime="20201010 14:28:12.350"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.353" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:12.352" endtime="20201010 14:28:12.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.355" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:12.354" endtime="20201010 14:28:12.356"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.350" endtime="20201010 14:28:12.356"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.363" endtime="20201010 14:28:12.660"></status>
</kw>
<msg timestamp="20201010 14:28:12.663" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.565426986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.665431694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:12.362" endtime="20201010 14:28:12.663"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.670" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.565426986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.665431694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:12.664" endtime="20201010 14:28:12.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.672" endtime="20201010 14:28:12.673"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.359" endtime="20201010 14:28:12.674"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.357" endtime="20201010 14:28:12.674"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:12.678" level="INFO">${FILTERED} = [{'diff': 0.10000470800000005}, {'diff': 0.10000819400000005}, {'diff': 0.10000186200000005}, {'diff': 0.10000752800000001}, {'diff': 0.10000284699999984}, {'diff': 0.0999981940000001}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201010 14:28:12.675" endtime="20201010 14:28:12.678"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:12.683" level="INFO">${RESULT} = {'diff': [0.10000470800000005, 0.10000819400000005, 0.10000186200000005, 0.10000752800000001, 0.10000284699999984, 0.0999981940000001, 0.100005597, 0.1000013609999999, 0.09999955599999999, 0.099998041...</msg>
<status status="PASS" starttime="20201010 14:28:12.679" endtime="20201010 14:28:12.683"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.687" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:12.686" endtime="20201010 14:28:12.687"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.689" level="INFO">VALUE: [0.10000470800000005, 0.10000819400000005, 0.10000186200000005, 0.10000752800000001, 0.10000284699999984, 0.0999981940000001, 0.100005597, 0.1000013609999999, 0.09999955599999999, 0.09999804199999995, 0.09999902800000005, 0.10000536100000001, 0.09999869399999994, 0.10000370899999989, 0.10000602700000005, 0.1000013609999999, 0.09999920800000028, 0.10000654200000003, 0.0999983750000002, 0.10000702800000028, 0.09999586100000002, 0.100000541, 0.10000704199999966, 0.1000063619999998, 0.09999702799999977, 0.10000572199999969, 0.10000520799999979, 0.09999862500000001, 0.10000154100000014, 0.10000734700000002, 0.09999905500000006, 0.10000604199999996, 0.10000004099999993, 0.09999704200000004, 0.0999975550000003, 0.10000054200000008, 0.10000318099999994, 0.10000651400000038, 0.10000019500000068, 0.09999969400000008, 0.10000048599999989, 0.10000629099999969, 0.09999754199999966, 0.10000615299999982, 0.09999654200000041, 0.10000829099999997, 0.10000009700000057, 0.10000177800000021, 0.10000312499999975, 0.10000095799999986]</msg>
<status status="PASS" starttime="20201010 14:28:12.688" endtime="20201010 14:28:12.690"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.684" endtime="20201010 14:28:12.690"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:06.771" endtime="20201010 14:28:12.691"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:06.701" endtime="20201010 14:28:12.691" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="10 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:12.699" endtime="20201010 14:28:12.718"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.697" endtime="20201010 14:28:12.719"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.732" endtime="20201010 14:28:12.747"></status>
</kw>
<msg timestamp="20201010 14:28:12.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.730" endtime="20201010 14:28:12.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.750" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:12.748" endtime="20201010 14:28:12.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:12.753" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:12.751" endtime="20201010 14:28:12.754"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.727" endtime="20201010 14:28:12.754"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:12.725" endtime="20201010 14:28:12.755"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.724" endtime="20201010 14:28:12.755"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:12.759" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:12.758" endtime="20201010 14:28:12.759"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.756" endtime="20201010 14:28:12.760"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.723" endtime="20201010 14:28:12.760"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.722" endtime="20201010 14:28:12.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.761" endtime="20201010 14:28:12.762"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.721" endtime="20201010 14:28:12.763"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.719" endtime="20201010 14:28:12.763"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.696" endtime="20201010 14:28:12.763"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:12.772" endtime="20201010 14:28:18.312"></status>
</kw>
<msg timestamp="20201010 14:28:18.313" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:12.771" endtime="20201010 14:28:18.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.318" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '22114'}, {'interval': '67521'}, {'interval': '17040'}, {'interval': '71822'}, {'interval': '90731'...</msg>
<status status="PASS" starttime="20201010 14:28:18.315" endtime="20201010 14:28:18.319"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.320" endtime="20201010 14:28:18.324"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.768" endtime="20201010 14:28:18.325"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.766" endtime="20201010 14:28:18.326"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:18.332" level="INFO">${RESULT} = {'focus': [100000], 'interval': [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]}</msg>
<status status="PASS" starttime="20201010 14:28:18.327" endtime="20201010 14:28:18.332"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:18.338" level="INFO">${interval} = [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:18.334" endtime="20201010 14:28:18.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.342" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:18.341" endtime="20201010 14:28:18.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.344" level="INFO">VALUE: [22114, 67521, 17040, 71822, 90731, 47405, 43294, 43357, 96892, 93113]</msg>
<status status="PASS" starttime="20201010 14:28:18.343" endtime="20201010 14:28:18.345"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.339" endtime="20201010 14:28:18.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.349" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:18.348" endtime="20201010 14:28:18.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.351" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:18.350" endtime="20201010 14:28:18.351"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.346" endtime="20201010 14:28:18.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.359" endtime="20201010 14:28:18.656"></status>
</kw>
<msg timestamp="20201010 14:28:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.566235236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.666237764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:18.357" endtime="20201010 14:28:18.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.566235236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.666237764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:18.660" endtime="20201010 14:28:18.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.668" endtime="20201010 14:28:18.669"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.354" endtime="20201010 14:28:18.670"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.352" endtime="20201010 14:28:18.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:18.674" level="INFO">${FILTERED} = [{'diff': 0.10000252799999998}, {'diff': 0.09999872200000004}, {'diff': 0.09999951399999996}, {'diff': 0.09999750000000007}, {'diff': 0.10000065300000005}, {'diff': 0.09999773599999995}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:18.671" endtime="20201010 14:28:18.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:18.678" level="INFO">${RESULT} = {'diff': [0.10000252799999998, 0.09999872200000004, 0.09999951399999996, 0.09999750000000007, 0.10000065300000005, 0.09999773599999995, 0.10000454199999997, 0.10000101400000005, 0.10000369500000006, 0...</msg>
<status status="PASS" starttime="20201010 14:28:18.675" endtime="20201010 14:28:18.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.682" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:18.681" endtime="20201010 14:28:18.682"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.684" level="INFO">VALUE: [0.10000252799999998, 0.09999872200000004, 0.09999951399999996, 0.09999750000000007, 0.10000065300000005, 0.09999773599999995, 0.10000454199999997, 0.10000101400000005, 0.10000369500000006, 0.09999784800000011, 0.10000133300000003, 0.10000583299999999, 0.10000816700000015, 0.1000043610000001, 0.1000011799999998, 0.09999701399999994, 0.10000033399999975, 0.10000708299999994, 0.09999473599999975, 0.10000086099999983, 0.10000352800000023, 0.09999800000000025, 0.10000218000000016, 0.10000518100000022, 0.1000043340000003, 0.10000651399999994, 0.0999972360000001, 0.10000183399999996, 0.10000118099999966, 0.10000307000000008, 0.10000404200000013, 0.09999718099999999, 0.10000436099999988, 0.09999784700000003, 0.0999977219999999, 0.10000319400000013, 0.09999801400000052, 0.1000040689999997, 0.10000083400000026, 0.10000706900000012, 0.09999573600000033, 0.10000191600000008, 0.10000590299999956, 0.1000000830000003, 0.10000469499999998, 0.10000022199999936, 0.1000049719999998, 0.09999152799999944, 0.10000644399999992, 0.09999659699999963]</msg>
<status status="PASS" starttime="20201010 14:28:18.683" endtime="20201010 14:28:18.685"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.679" endtime="20201010 14:28:18.685"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:12.764" endtime="20201010 14:28:18.686"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:12.693" endtime="20201010 14:28:18.687" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="15 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:18.694" endtime="20201010 14:28:18.713"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.692" endtime="20201010 14:28:18.714"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.729" endtime="20201010 14:28:18.743"></status>
</kw>
<msg timestamp="20201010 14:28:18.744" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.728" endtime="20201010 14:28:18.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.747" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:18.745" endtime="20201010 14:28:18.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:18.750" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:18.748" endtime="20201010 14:28:18.750"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.725" endtime="20201010 14:28:18.751"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:18.723" endtime="20201010 14:28:18.751"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.722" endtime="20201010 14:28:18.752"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:18.755" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:18.755" endtime="20201010 14:28:18.756"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.752" endtime="20201010 14:28:18.756"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.721" endtime="20201010 14:28:18.756"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.720" endtime="20201010 14:28:18.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.757" endtime="20201010 14:28:18.759"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.716" endtime="20201010 14:28:18.759"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.715" endtime="20201010 14:28:18.760"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.691" endtime="20201010 14:28:18.760"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:18.769" endtime="20201010 14:28:24.320"></status>
</kw>
<msg timestamp="20201010 14:28:24.321" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:18.767" endtime="20201010 14:28:24.321"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.326" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '12297'}, {'interval': '68502'}, {'interval': '38802'}, {'interval': '52517'}, {'interval': '69027'...</msg>
<status status="PASS" starttime="20201010 14:28:24.323" endtime="20201010 14:28:24.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.329" endtime="20201010 14:28:24.332"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.765" endtime="20201010 14:28:24.333"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.762" endtime="20201010 14:28:24.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:24.340" level="INFO">${RESULT} = {'focus': [100000], 'interval': [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]}</msg>
<status status="PASS" starttime="20201010 14:28:24.336" endtime="20201010 14:28:24.341"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:24.351" level="INFO">${interval} = [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:24.342" endtime="20201010 14:28:24.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.359" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:24.357" endtime="20201010 14:28:24.359"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.363" level="INFO">VALUE: [12297, 68502, 38802, 52517, 69027, 11193, 41947, 12933, 95471, 18328, 45436, 45379, 25434, 48836, 22297]</msg>
<status status="PASS" starttime="20201010 14:28:24.361" endtime="20201010 14:28:24.364"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.352" endtime="20201010 14:28:24.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.374" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:24.370" endtime="20201010 14:28:24.375"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.379" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:24.377" endtime="20201010 14:28:24.379"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.366" endtime="20201010 14:28:24.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.395" endtime="20201010 14:28:24.693"></status>
</kw>
<msg timestamp="20201010 14:28:24.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.568392806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.668391306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.392" endtime="20201010 14:28:24.696"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.568392806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.668391306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:24.697" endtime="20201010 14:28:24.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.705" endtime="20201010 14:28:24.706"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.385" endtime="20201010 14:28:24.707"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.382" endtime="20201010 14:28:24.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:24.711" level="INFO">${FILTERED} = [{'diff': 0.09999849999999999}, {'diff': 0.10000132000000006}, {'diff': 0.10000583399999996}, {'diff': 0.09999763900000003}, {'diff': 0.10000458299999992}, {'diff': 0.10000283300000001}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:24.708" endtime="20201010 14:28:24.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:24.715" level="INFO">${RESULT} = {'diff': [0.09999849999999999, 0.10000132000000006, 0.10000583399999996, 0.09999763900000003, 0.10000458299999992, 0.10000283300000001, 0.10000130499999993, 0.10000168099999995, 0.09999765299999996, 0...</msg>
<status status="PASS" starttime="20201010 14:28:24.712" endtime="20201010 14:28:24.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.720" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:24.719" endtime="20201010 14:28:24.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.723" level="INFO">VALUE: [0.09999849999999999, 0.10000132000000006, 0.10000583399999996, 0.09999763900000003, 0.10000458299999992, 0.10000283300000001, 0.10000130499999993, 0.10000168099999995, 0.09999765299999996, 0.10000647200000001, 0.09999966699999985, 0.10000816700000015, 0.0999989859999999, 0.10000730600000018, 0.09999815200000017, 0.10000006900000002, 0.09999930500000032, 0.10000348599999986, 0.10000265300000022, 0.10000518099999978, 0.10000098599999996, 0.1000007079999996, 0.09999948699999983, 0.10000545800000005, 0.09999997199999999, 0.10000498600000007, 0.10000266700000005, 0.10000549999999997, 0.100006445, 0.09999898600000012, 0.10000216600000034, 0.10000245800000007, 0.09999897199999985, 0.10000498599999963, 0.09999830599999937, 0.10000084699999956, 0.10000458299999959, 0.10000075000000042, 0.09999923600000038, 0.09999691699999946, 0.10000406999999978, 0.09999977799999993, 0.10000744500000014, 0.10000455499999994, 0.10000623599999958, 0.10000173699999948, 0.10000020799999998, 0.1000016669999999, 0.09999908300000016, 0.10000041699999951]</msg>
<status status="PASS" starttime="20201010 14:28:24.721" endtime="20201010 14:28:24.724"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.716" endtime="20201010 14:28:24.724"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:18.761" endtime="20201010 14:28:24.725"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:18.688" endtime="20201010 14:28:24.726" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="20 BG Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:24.733" endtime="20201010 14:28:24.753"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.732" endtime="20201010 14:28:24.753"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.766" endtime="20201010 14:28:24.780"></status>
</kw>
<msg timestamp="20201010 14:28:24.781" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.765" endtime="20201010 14:28:24.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.784" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:24.782" endtime="20201010 14:28:24.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:24.787" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:24.785" endtime="20201010 14:28:24.787"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.762" endtime="20201010 14:28:24.788"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:24.760" endtime="20201010 14:28:24.788"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.759" endtime="20201010 14:28:24.789"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:24.792" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:24.792" endtime="20201010 14:28:24.793"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.790" endtime="20201010 14:28:24.793"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.758" endtime="20201010 14:28:24.793"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.757" endtime="20201010 14:28:24.793"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.794" endtime="20201010 14:28:24.796"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.756" endtime="20201010 14:28:24.796"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.754" endtime="20201010 14:28:24.797"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.730" endtime="20201010 14:28:24.797"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:24.807" endtime="20201010 14:28:30.370"></status>
</kw>
<msg timestamp="20201010 14:28:30.371" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:24.804" endtime="20201010 14:28:30.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.377" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '57201'}, {'interval': '35189'}, {'interval': '67612'}, {'interval': '60277'}, {'interval': '19991'...</msg>
<status status="PASS" starttime="20201010 14:28:30.373" endtime="20201010 14:28:30.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.379" endtime="20201010 14:28:30.383"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.802" endtime="20201010 14:28:30.384"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.799" endtime="20201010 14:28:30.385"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.391" level="INFO">${RESULT} = {'focus': [100000], 'interval': [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]}</msg>
<status status="PASS" starttime="20201010 14:28:30.386" endtime="20201010 14:28:30.391"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:30.402" level="INFO">${interval} = [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.393" endtime="20201010 14:28:30.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.409" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:30.407" endtime="20201010 14:28:30.410"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.414" level="INFO">VALUE: [57201, 35189, 67612, 60277, 19991, 17369, 86767, 52921, 53588, 71725, 48572, 16053, 89194, 12744, 71650, 37538, 66374, 81290, 41674, 14414]</msg>
<status status="PASS" starttime="20201010 14:28:30.412" endtime="20201010 14:28:30.415"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.403" endtime="20201010 14:28:30.416"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.423" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:30.421" endtime="20201010 14:28:30.423"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.427" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:30.425" endtime="20201010 14:28:30.428"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.417" endtime="20201010 14:28:30.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.443" endtime="20201010 14:28:30.741"></status>
</kw>
<msg timestamp="20201010 14:28:30.744" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567414833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667418167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.440" endtime="20201010 14:28:30.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567414833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667418167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:30.745" endtime="20201010 14:28:30.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.753" endtime="20201010 14:28:30.755"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.435" endtime="20201010 14:28:30.755"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.430" endtime="20201010 14:28:30.755"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:30.759" level="INFO">${FILTERED} = [{'diff': 0.10000333400000005}, {'diff': 0.100005958}, {'diff': 0.10000227800000006}, {'diff': 0.0999992919999999}, {'diff': 0.10000698600000013}, {'diff': 0.10000043000000014}, {'diff': 0.10000063899...</msg>
<status status="PASS" starttime="20201010 14:28:30.756" endtime="20201010 14:28:30.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:30.764" level="INFO">${RESULT} = {'diff': [0.10000333400000005, 0.100005958, 0.10000227800000006, 0.0999992919999999, 0.10000698600000013, 0.10000043000000014, 0.10000063899999989, 0.10000047200000006, 0.09999730500000004, 0.10000363...</msg>
<status status="PASS" starttime="20201010 14:28:30.760" endtime="20201010 14:28:30.764"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.768" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:30.767" endtime="20201010 14:28:30.769"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.771" level="INFO">VALUE: [0.10000333400000005, 0.100005958, 0.10000227800000006, 0.0999992919999999, 0.10000698600000013, 0.10000043000000014, 0.10000063899999989, 0.10000047200000006, 0.09999730500000004, 0.10000363900000009, 0.10000598599999999, 0.10000313799999994, 0.09999762499999987, 0.10000147300000006, 0.10000427800000011, 0.09999797199999971, 0.1000079730000003, 0.10000397200000011, 0.1000011810000001, 0.10001479200000007, 0.0999981670000003, 0.10000168099999973, 0.10000109699999982, 0.10000741700000004, 0.10000293100000013, 0.09999891599999966, 0.09999591600000013, 0.10000390299999973, 0.10000425000000002, 0.09999894499999984, 0.10000808300000008, 0.09999872200000004, 0.10000252800000009, 0.10000008399999993, 0.10000140299999982, 0.1000042359999993, 0.10000713899999969, 0.1000062229999994, 0.10001395899999999, 0.09998963900000035, 0.1000032639999997, 0.10000533300000036, 0.09999947300000045, 0.10000026300000009, 0.10000286100000011, 0.09999905600000059, 0.09999580499999983, 0.10000300000000006, 0.09999747200000009, 0.10000131900000042]</msg>
<status status="PASS" starttime="20201010 14:28:30.769" endtime="20201010 14:28:30.771"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.765" endtime="20201010 14:28:30.771"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:24.798" endtime="20201010 14:28:30.772"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:24.728" endtime="20201010 14:28:30.773" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201010 14:28:30.780" endtime="20201010 14:28:30.799"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.778" endtime="20201010 14:28:30.800"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.813" endtime="20201010 14:28:30.827"></status>
</kw>
<msg timestamp="20201010 14:28:30.828" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.811" endtime="20201010 14:28:30.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.831" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.07', 'tests_ztimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201010 14:28:30.829" endtime="20201010 14:28:30.831"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201010 14:28:30.834" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201010 14:28:30.832" endtime="20201010 14:28:30.834"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.809" endtime="20201010 14:28:30.835"></status>
</kw>
<status status="FAIL" starttime="20201010 14:28:30.806" endtime="20201010 14:28:30.835"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.805" endtime="20201010 14:28:30.835"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201010 14:28:30.839" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201010 14:28:30.838" endtime="20201010 14:28:30.840"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.836" endtime="20201010 14:28:30.840"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.804" endtime="20201010 14:28:30.840"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.804" endtime="20201010 14:28:30.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.841" endtime="20201010 14:28:30.842"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.802" endtime="20201010 14:28:30.843"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.800" endtime="20201010 14:28:30.843"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.777" endtime="20201010 14:28:30.843"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timers}</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:30.852" endtime="20201010 14:28:36.425"></status>
</kw>
<msg timestamp="20201010 14:28:36.426" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:30.851" endtime="20201010 14:28:36.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.429" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25 1\r\n'], 'data': [{'focus': '100000'}, {'interval': '79225'}, {'interval': '55022'}, {'interval': '39603'}, {'interval': '27161'}, {'interval': '60142'...</msg>
<status status="PASS" starttime="20201010 14:28:36.427" endtime="20201010 14:28:36.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.430" endtime="20201010 14:28:36.431"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.848" endtime="20201010 14:28:36.432"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.846" endtime="20201010 14:28:36.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.436" level="INFO">${RESULT} = {'focus': [100000], 'interval': [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631,...</msg>
<status status="PASS" starttime="20201010 14:28:36.433" endtime="20201010 14:28:36.436"></status>
</kw>
<kw name="Evaluate" library="BuiltIn">
<doc>Evaluates the given expression in Python and returns the results.</doc>
<arguments>
<arg>$RESULT.get('interval', [])</arg>
</arguments>
<assign>
<var>${interval}</var>
</assign>
<msg timestamp="20201010 14:28:36.440" level="INFO">${interval} = [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.437" endtime="20201010 14:28:36.441"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>intervals</arg>
<arg>${interval}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.444" level="INFO">NAME: intervals</msg>
<status status="PASS" starttime="20201010 14:28:36.443" endtime="20201010 14:28:36.445"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.446" level="INFO">VALUE: [79225, 55022, 39603, 27161, 60142, 96753, 67584, 13138, 48976, 81075, 58727, 40937, 10090, 32175, 36540, 29935, 78832, 70964, 72466, 76720, 67250, 29297, 88975, 54631, 44264]</msg>
<status status="PASS" starttime="20201010 14:28:36.445" endtime="20201010 14:28:36.447"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.441" endtime="20201010 14:28:36.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>divisor</arg>
<arg>${divisor}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.450" level="INFO">NAME: divisor</msg>
<status status="PASS" starttime="20201010 14:28:36.449" endtime="20201010 14:28:36.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.452" level="INFO">VALUE: 1</msg>
<status status="PASS" starttime="20201010 14:28:36.451" endtime="20201010 14:28:36.453"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.448" endtime="20201010 14:28:36.454"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.461" endtime="20201010 14:28:36.756"></status>
</kw>
<msg timestamp="20201010 14:28:36.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667074736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.460" endtime="20201010 14:28:36.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.567067319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.667074736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201010 14:28:36.760" endtime="20201010 14:28:36.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201010 14:28:36.768" endtime="20201010 14:28:36.770"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.456" endtime="20201010 14:28:36.770"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.454" endtime="20201010 14:28:36.771"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201010 14:28:36.774" level="INFO">${FILTERED} = [{'diff': 0.10000741700000004}, {'diff': 0.09999990199999997}, {'diff': 0.09999824999999996}, {'diff': 0.09996630500000003}, {'diff': 0.10000237500000009}, {'diff': 0.09999877800000001}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201010 14:28:36.771" endtime="20201010 14:28:36.775"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201010 14:28:36.778" level="INFO">${RESULT} = {'diff': [0.10000741700000004, 0.09999990199999997, 0.09999824999999996, 0.09996630500000003, 0.10000237500000009, 0.09999877800000001, 0.10000505599999987, 0.09999705600000008, 0.10000537499999984, 0...</msg>
<status status="PASS" starttime="20201010 14:28:36.775" endtime="20201010 14:28:36.779"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.782" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201010 14:28:36.781" endtime="20201010 14:28:36.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201010 14:28:36.785" level="INFO">VALUE: [0.10000741700000004, 0.09999990199999997, 0.09999824999999996, 0.09996630500000003, 0.10000237500000009, 0.09999877800000001, 0.10000505599999987, 0.09999705600000008, 0.10000537499999984, 0.10000645799999996, 0.10000605500000015, 0.10000555600000016, 0.10000390300000017, 0.10000520800000001, 0.10000288899999998, 0.0999967220000002, 0.10000688899999988, 0.10000407000000022, 0.09999805499999992, 0.10000008399999993, 0.09999937500000033, 0.10000404100000004, 0.10000588900000018, 0.09999838799999994, 0.09999772299999998, 0.10000222200000008, 0.10000354200000006, 0.10000572200000013, 0.10000490299999987, 0.1000021529999997, 0.099998056, 0.1000060549999997, 0.09999922199999967, 0.09999672199999976, 0.09999870800000021, 0.10000229100000002, 0.09996702800000001, 0.10000505600000054, 0.10000205600000012, 0.09999737500000005, 0.10000323700000013, 0.10000057000000062, 0.100005597, 0.09999940299999999, 0.1000001389999996, 0.10000731899999948, 0.0999958060000008, 0.10000459699999986, 0.0999996249999997, 0.10000245800000052]</msg>
<status status="PASS" starttime="20201010 14:28:36.783" endtime="20201010 14:28:36.785"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:36.779" endtime="20201010 14:28:36.786"></status>
</kw>
<status status="PASS" starttime="20201010 14:28:30.844" endtime="20201010 14:28:36.786"></status>
</kw>
<tags>
<tag>APP_tests_ztimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201010 14:28:30.774" endtime="20201010 14:28:36.787" critical="yes"></status>
</test>
<status status="PASS" starttime="20201010 14:27:59.111" endtime="20201010 14:28:36.794"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_ztimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.07</item>
</metadata>
<status status="PASS" starttime="20201010 14:27:57.031" endtime="20201010 14:28:36.820"></status>
</suite>
<statistics>
<total>
<stat pass="7" fail="0">Critical Tests</stat>
<stat pass="7" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="7" fail="0">APP_tests_ztimer_benchmarks</stat>
<stat pass="7" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="7" fail="0">dev</stat>
</tag>
<suite>
<stat pass="7" fail="0" id="s1" name="tests_ztimer_benchmarks">tests_ztimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_ztimer_benchmarks.Timer Version</stat>
<stat pass="6" fail="0" id="s1-s2" name="Sleep Jitter">tests_ztimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
