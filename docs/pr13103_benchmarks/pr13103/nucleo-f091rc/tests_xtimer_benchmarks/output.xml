<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:49:50.132" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:49:50.698" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:49:50.707" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:49:51.826" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:49:50.697" endtime="20201030 11:49:51.827"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:49:51.829" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:49:51.828" endtime="20201030 11:49:51.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.696" endtime="20201030 11:49:51.830"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:51.833" endtime="20201030 11:49:52.018"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:51.831" endtime="20201030 11:49:52.019"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.031" endtime="20201030 11:49:52.051"></status>
</kw>
<msg timestamp="20201030 11:49:52.052" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091r...</msg>
<status status="PASS" starttime="20201030 11:49:52.030" endtime="20201030 11:49:52.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['): This is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091r...</msg>
<status status="PASS" starttime="20201030 11:49:52.053" endtime="20201030 11:49:52.055"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.058" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:52.056" endtime="20201030 11:49:52.058"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:52.027" endtime="20201030 11:49:52.059"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:52.025" endtime="20201030 11:49:52.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.024" endtime="20201030 11:49:52.060"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:52.064" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:52.063" endtime="20201030 11:49:52.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.061" endtime="20201030 11:49:52.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.023" endtime="20201030 11:49:52.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.022" endtime="20201030 11:49:52.066"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.067" endtime="20201030 11:49:52.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.021" endtime="20201030 11:49:52.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.069" endtime="20201030 11:49:52.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.019" endtime="20201030 11:49:52.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:50.694" endtime="20201030 11:49:52.072"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:52.078" endtime="20201030 11:49:52.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.077" endtime="20201030 11:49:52.098"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.124" endtime="20201030 11:49:52.143"></status>
</kw>
<msg timestamp="20201030 11:49:52.144" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.122" endtime="20201030 11:49:52.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.146" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.145" endtime="20201030 11:49:52.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.149" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:52.147" endtime="20201030 11:49:52.150"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:52.119" endtime="20201030 11:49:52.150"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:52.117" endtime="20201030 11:49:52.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.104" endtime="20201030 11:49:52.151"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:52.155" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:52.154" endtime="20201030 11:49:52.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.152" endtime="20201030 11:49:52.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.103" endtime="20201030 11:49:52.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.102" endtime="20201030 11:49:52.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.157" endtime="20201030 11:49:52.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.101" endtime="20201030 11:49:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.099" endtime="20201030 11:49:52.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.076" endtime="20201030 11:49:52.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.169" endtime="20201030 11:49:52.178"></status>
</kw>
<msg timestamp="20201030 11:49:52.179" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.166" endtime="20201030 11:49:52.179"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.181" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:52.180" endtime="20201030 11:49:52.182"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:52.182" endtime="20201030 11:49:52.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.163" endtime="20201030 11:49:52.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.161" endtime="20201030 11:49:52.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.190" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:49:52.188" endtime="20201030 11:49:52.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.192" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:49:52.191" endtime="20201030 11:49:52.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.186" endtime="20201030 11:49:52.193"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:49:52.072" endtime="20201030 11:49:52.194" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:49:50.246" endtime="20201030 11:49:52.197"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:49:52.250" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:49:52.258" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:49:53.361" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:49:52.248" endtime="20201030 11:49:53.361"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.364" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:49:53.362" endtime="20201030 11:49:53.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.247" endtime="20201030 11:49:53.365"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:53.367" endtime="20201030 11:49:53.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.366" endtime="20201030 11:49:53.591"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.604" endtime="20201030 11:49:53.623"></status>
</kw>
<msg timestamp="20201030 11:49:53.624" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '...</msg>
<status status="PASS" starttime="20201030 11:49:53.602" endtime="20201030 11:49:53.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.627" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['is is RIOT! (Version: 2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '...</msg>
<status status="PASS" starttime="20201030 11:49:53.625" endtime="20201030 11:49:53.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.630" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:53.628" endtime="20201030 11:49:53.630"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:53.600" endtime="20201030 11:49:53.631"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:53.597" endtime="20201030 11:49:53.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.596" endtime="20201030 11:49:53.632"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:53.636" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:53.635" endtime="20201030 11:49:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.633" endtime="20201030 11:49:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.595" endtime="20201030 11:49:53.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.595" endtime="20201030 11:49:53.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.637" endtime="20201030 11:49:53.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.593" endtime="20201030 11:49:53.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.640" endtime="20201030 11:49:53.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.592" endtime="20201030 11:49:53.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:52.245" endtime="20201030 11:49:53.643"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:53.650" endtime="20201030 11:49:53.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.647" endtime="20201030 11:49:53.670"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.684" endtime="20201030 11:49:53.703"></status>
</kw>
<msg timestamp="20201030 11:49:53.704" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.682" endtime="20201030 11:49:53.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.706" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.705" endtime="20201030 11:49:53.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.709" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:49:53.707" endtime="20201030 11:49:53.710"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:53.679" endtime="20201030 11:49:53.710"></status>
</kw>
<status status="FAIL" starttime="20201030 11:49:53.677" endtime="20201030 11:49:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.675" endtime="20201030 11:49:53.711"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:49:53.715" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:49:53.714" endtime="20201030 11:49:53.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.712" endtime="20201030 11:49:53.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.674" endtime="20201030 11:49:53.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.674" endtime="20201030 11:49:53.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.717" endtime="20201030 11:49:53.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.672" endtime="20201030 11:49:53.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.671" endtime="20201030 11:49:53.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.646" endtime="20201030 11:49:53.720"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.729" endtime="20201030 11:49:53.742"></status>
</kw>
<msg timestamp="20201030 11:49:53.743" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.727" endtime="20201030 11:49:53.744"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:53.748" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:53.745" endtime="20201030 11:49:53.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.751" endtime="20201030 11:49:53.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.725" endtime="20201030 11:49:53.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.723" endtime="20201030 11:49:53.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:53.771" endtime="20201030 11:49:54.072"></status>
</kw>
<msg timestamp="20201030 11:49:54.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070161125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:53.768" endtime="20201030 11:49:54.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070160653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070161125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.076" endtime="20201030 11:49:54.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.085" endtime="20201030 11:49:54.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.762" endtime="20201030 11:49:54.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.758" endtime="20201030 11:49:54.088"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.092" level="INFO">${RESULT} = [{'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.859999999939912e-07}, {'diff': 4.720000000013602e-07}, {'...</msg>
<status status="PASS" starttime="20201030 11:49:54.088" endtime="20201030 11:49:54.092"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.096" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.72000...</msg>
<status status="PASS" starttime="20201030 11:49:54.093" endtime="20201030 11:49:54.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.101" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.100" endtime="20201030 11:49:54.101"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.103" level="INFO">VALUE: [4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.869999999934649e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.7199999998748243e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.7300000000083386e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07]</msg>
<status status="PASS" starttime="20201030 11:49:54.102" endtime="20201030 11:49:54.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.097" endtime="20201030 11:49:54.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.722" endtime="20201030 11:49:54.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.721" endtime="20201030 11:49:54.106"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.114" endtime="20201030 11:49:54.125"></status>
</kw>
<msg timestamp="20201030 11:49:54.126" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.113" endtime="20201030 11:49:54.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.128" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.127" endtime="20201030 11:49:54.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.129" endtime="20201030 11:49:54.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.110" endtime="20201030 11:49:54.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.108" endtime="20201030 11:49:54.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.139" endtime="20201030 11:49:54.445"></status>
</kw>
<msg timestamp="20201030 11:49:54.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070860972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070861458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.137" endtime="20201030 11:49:54.449"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070860972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070861458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.450" endtime="20201030 11:49:54.460"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.461" endtime="20201030 11:49:54.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.135" endtime="20201030 11:49:54.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.133" endtime="20201030 11:49:54.464"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.469" level="INFO">${RESULT} = [{'diff': 4.86000000007869e-07}, {'diff': 4.7199999998748243e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.86000000007869e-07}, {'diff': 4.720000000013602e-07}, {'diff': 4.720000000013602e-07}, {'...</msg>
<status status="PASS" starttime="20201030 11:49:54.465" endtime="20201030 11:49:54.469"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.475" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.86000000007869e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.72000...</msg>
<status status="PASS" starttime="20201030 11:49:54.470" endtime="20201030 11:49:54.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.480" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.479" endtime="20201030 11:49:54.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.483" level="INFO">VALUE: [4.86000000007869e-07, 4.7199999998748243e-07, 4.720000000013602e-07, 4.86000000007869e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.870000000073427e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.720000000013602e-07, 4.720000000013602e-07, 4.859999999939912e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.869999999934649e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.7300000000083386e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.859999999662357e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7199999997360464e-07, 4.720000000291158e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201030 11:49:54.481" endtime="20201030 11:49:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.476" endtime="20201030 11:49:54.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.107" endtime="20201030 11:49:54.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.106" endtime="20201030 11:49:54.485"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.493" endtime="20201030 11:49:54.504"></status>
</kw>
<msg timestamp="20201030 11:49:54.505" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.492" endtime="20201030 11:49:54.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.507" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.506" endtime="20201030 11:49:54.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.508" endtime="20201030 11:49:54.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.489" endtime="20201030 11:49:54.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.487" endtime="20201030 11:49:54.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.518" endtime="20201030 11:49:54.828"></status>
</kw>
<msg timestamp="20201030 11:49:54.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.445394736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.445395208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.516" endtime="20201030 11:49:54.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.445394736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.445395208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.833" endtime="20201030 11:49:54.843"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.843" endtime="20201030 11:49:54.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.513" endtime="20201030 11:49:54.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.512" endtime="20201030 11:49:54.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:54.851" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.7300000000083386e-07}, {'diff': 4.720000000291158e-07}, {'diff': 4.720000000291158e-07},...</msg>
<status status="PASS" starttime="20201030 11:49:54.847" endtime="20201030 11:49:54.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:54.856" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 11:49:54.852" endtime="20201030 11:49:54.856"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.860" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:54.859" endtime="20201030 11:49:54.861"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.863" level="INFO">VALUE: [4.7199999997360464e-07, 4.860000000217468e-07, 4.720000000291158e-07, 4.7300000000083386e-07, 4.720000000291158e-07, 4.720000000291158e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.859999999662357e-07, 4.7300000000083386e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.729999999453227e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999999934649e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.7200000008462695e-07, 4.73000000056345e-07, 4.859999999107245e-07, 4.7199999997360464e-07, 4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07]</msg>
<status status="PASS" starttime="20201030 11:49:54.861" endtime="20201030 11:49:54.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.857" endtime="20201030 11:49:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.486" endtime="20201030 11:49:54.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.485" endtime="20201030 11:49:54.865"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.874" endtime="20201030 11:49:54.885"></status>
</kw>
<msg timestamp="20201030 11:49:54.885" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.871" endtime="20201030 11:49:54.885"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:54.888" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:54.886" endtime="20201030 11:49:54.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.889" endtime="20201030 11:49:54.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.868" endtime="20201030 11:49:54.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.867" endtime="20201030 11:49:54.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:54.898" endtime="20201030 11:49:55.199"></status>
</kw>
<msg timestamp="20201030 11:49:55.203" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.813209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.813209667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:54.897" endtime="20201030 11:49:55.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.813209194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.813209667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:55.204" endtime="20201030 11:49:55.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.214" endtime="20201030 11:49:55.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.894" endtime="20201030 11:49:55.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.892" endtime="20201030 11:49:55.218"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:55.222" level="INFO">${RESULT} = [{'diff': 4.729999999453227e-07}, {'diff': 4.729999999453227e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000008462695e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7200000008462695e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:55.218" endtime="20201030 11:49:55.222"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:55.227" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:49:55.223" endtime="20201030 11:49:55.228"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.232" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:55.231" endtime="20201030 11:49:55.232"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.235" level="INFO">VALUE: [4.729999999453227e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7200000008462695e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.729999999453227e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.7199999997360464e-07, 4.7200000008462695e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7200000019564925e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 11:49:55.233" endtime="20201030 11:49:55.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.228" endtime="20201030 11:49:55.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.865" endtime="20201030 11:49:55.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:54.865" endtime="20201030 11:49:55.236"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.244" endtime="20201030 11:49:55.255"></status>
</kw>
<msg timestamp="20201030 11:49:55.256" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.243" endtime="20201030 11:49:55.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.258" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.257" endtime="20201030 11:49:55.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.260" endtime="20201030 11:49:55.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.240" endtime="20201030 11:49:55.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.238" endtime="20201030 11:49:55.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.269" endtime="20201030 11:49:55.574"></status>
</kw>
<msg timestamp="20201030 11:49:55.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183488833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183489306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:55.267" endtime="20201030 11:49:55.578"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.183488833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.183489306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:55.579" endtime="20201030 11:49:55.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.589" endtime="20201030 11:49:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.265" endtime="20201030 11:49:55.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.263" endtime="20201030 11:49:55.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:55.596" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:55.593" endtime="20201030 11:49:55.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:55.602" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:49:55.597" endtime="20201030 11:49:55.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.606" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:55.605" endtime="20201030 11:49:55.607"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.609" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999998343004e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07]</msg>
<status status="PASS" starttime="20201030 11:49:55.608" endtime="20201030 11:49:55.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.603" endtime="20201030 11:49:55.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.237" endtime="20201030 11:49:55.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.237" endtime="20201030 11:49:55.611"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.619" endtime="20201030 11:49:55.629"></status>
</kw>
<msg timestamp="20201030 11:49:55.629" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.617" endtime="20201030 11:49:55.630"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.632" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.631" endtime="20201030 11:49:55.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.633" endtime="20201030 11:49:55.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.614" endtime="20201030 11:49:55.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.613" endtime="20201030 11:49:55.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.642" endtime="20201030 11:49:55.944"></status>
</kw>
<msg timestamp="20201030 11:49:55.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.543312958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.543313431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:55.641" endtime="20201030 11:49:55.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.543312958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.543313431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:55.949" endtime="20201030 11:49:55.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.960" endtime="20201030 11:49:55.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.638" endtime="20201030 11:49:55.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.636" endtime="20201030 11:49:55.962"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:55.967" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.869999998824426e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:55.963" endtime="20201030 11:49:55.967"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:55.972" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 11:49:55.968" endtime="20201030 11:49:55.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.976" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:55.975" endtime="20201030 11:49:55.976"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:55.979" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000019564925e-07, 4.729999998343004e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.870000001044872e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000001044872e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:55.977" endtime="20201030 11:49:55.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.973" endtime="20201030 11:49:55.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.611" endtime="20201030 11:49:55.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.611" endtime="20201030 11:49:55.980"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:55.989" endtime="20201030 11:49:56.000"></status>
</kw>
<msg timestamp="20201030 11:49:56.001" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:55.988" endtime="20201030 11:49:56.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.004" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.002" endtime="20201030 11:49:56.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.005" endtime="20201030 11:49:56.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.984" endtime="20201030 11:49:56.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.982" endtime="20201030 11:49:56.007"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.014" endtime="20201030 11:49:56.319"></status>
</kw>
<msg timestamp="20201030 11:49:56.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.908656181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.908656667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.012" endtime="20201030 11:49:56.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.908656181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.908656667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.324" endtime="20201030 11:49:56.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.334" endtime="20201030 11:49:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.010" endtime="20201030 11:49:56.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.008" endtime="20201030 11:49:56.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:56.341" level="INFO">${RESULT} = [{'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.860000000217468e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:56.338" endtime="20201030 11:49:56.341"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:56.347" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 11:49:56.342" endtime="20201030 11:49:56.347"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.351" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:56.350" endtime="20201030 11:49:56.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.354" level="INFO">VALUE: [4.860000000217468e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000000217468e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000041769385e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:56.352" endtime="20201030 11:49:56.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.348" endtime="20201030 11:49:56.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.981" endtime="20201030 11:49:56.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:55.981" endtime="20201030 11:49:56.355"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.363" endtime="20201030 11:49:56.375"></status>
</kw>
<msg timestamp="20201030 11:49:56.375" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.362" endtime="20201030 11:49:56.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.378" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.376" endtime="20201030 11:49:56.378"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.379" endtime="20201030 11:49:56.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.359" endtime="20201030 11:49:56.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.357" endtime="20201030 11:49:56.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.388" endtime="20201030 11:49:56.695"></status>
</kw>
<msg timestamp="20201030 11:49:56.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269328528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.386" endtime="20201030 11:49:56.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.269328056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.269328528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.700" endtime="20201030 11:49:56.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.710" endtime="20201030 11:49:56.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.384" endtime="20201030 11:49:56.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.382" endtime="20201030 11:49:56.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:56.718" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 11:49:56.714" endtime="20201030 11:49:56.718"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:56.723" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07,...</msg>
<status status="PASS" starttime="20201030 11:49:56.719" endtime="20201030 11:49:56.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.728" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:56.727" endtime="20201030 11:49:56.728"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.730" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:56.729" endtime="20201030 11:49:56.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.724" endtime="20201030 11:49:56.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.356" endtime="20201030 11:49:56.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.356" endtime="20201030 11:49:56.732"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.740" endtime="20201030 11:49:56.751"></status>
</kw>
<msg timestamp="20201030 11:49:56.751" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.738" endtime="20201030 11:49:56.752"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:56.754" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:56.752" endtime="20201030 11:49:56.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.755" endtime="20201030 11:49:56.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.736" endtime="20201030 11:49:56.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.734" endtime="20201030 11:49:56.758"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:56.765" endtime="20201030 11:49:57.080"></status>
</kw>
<msg timestamp="20201030 11:49:57.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.633324903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.633325375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:56.764" endtime="20201030 11:49:57.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.633324903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.633325375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.085" endtime="20201030 11:49:57.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.095" endtime="20201030 11:49:57.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.760" endtime="20201030 11:49:57.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.758" endtime="20201030 11:49:57.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:57.103" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 11:49:57.099" endtime="20201030 11:49:57.103"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:57.107" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4...</msg>
<status status="PASS" starttime="20201030 11:49:57.104" endtime="20201030 11:49:57.108"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.112" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:57.111" endtime="20201030 11:49:57.112"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.114" level="INFO">VALUE: [4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:57.113" endtime="20201030 11:49:57.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.108" endtime="20201030 11:49:57.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.733" endtime="20201030 11:49:57.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:56.732" endtime="20201030 11:49:57.117"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.125" endtime="20201030 11:49:57.136"></status>
</kw>
<msg timestamp="20201030 11:49:57.137" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.123" endtime="20201030 11:49:57.137"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.139" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.138" endtime="20201030 11:49:57.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.140" endtime="20201030 11:49:57.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.120" endtime="20201030 11:49:57.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.119" endtime="20201030 11:49:57.143"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.150" endtime="20201030 11:49:57.467"></status>
</kw>
<msg timestamp="20201030 11:49:57.471" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999189736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999190208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.148" endtime="20201030 11:49:57.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.999189736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.999190208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.473" endtime="20201030 11:49:57.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.483" endtime="20201030 11:49:57.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.145" endtime="20201030 11:49:57.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.144" endtime="20201030 11:49:57.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:57.490" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, ...</msg>
<status status="PASS" starttime="20201030 11:49:57.487" endtime="20201030 11:49:57.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:57.496" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.85...</msg>
<status status="PASS" starttime="20201030 11:49:57.491" endtime="20201030 11:49:57.496"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.500" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:57.499" endtime="20201030 11:49:57.500"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.503" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999998824426e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 11:49:57.501" endtime="20201030 11:49:57.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.497" endtime="20201030 11:49:57.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.117" endtime="20201030 11:49:57.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.117" endtime="20201030 11:49:57.504"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.513" endtime="20201030 11:49:57.524"></status>
</kw>
<msg timestamp="20201030 11:49:57.524" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.511" endtime="20201030 11:49:57.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.527" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.525" endtime="20201030 11:49:57.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.528" endtime="20201030 11:49:57.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.508" endtime="20201030 11:49:57.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.507" endtime="20201030 11:49:57.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.537" endtime="20201030 11:49:57.849"></status>
</kw>
<msg timestamp="20201030 11:49:57.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.373975903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.373976389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.535" endtime="20201030 11:49:57.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.863" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.373975903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.373976389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.854" endtime="20201030 11:49:57.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.864" endtime="20201030 11:49:57.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.533" endtime="20201030 11:49:57.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.531" endtime="20201030 11:49:57.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:57.871" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7200000041769385e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.729999996122558e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:57.868" endtime="20201030 11:49:57.872"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:57.876" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:49:57.872" endtime="20201030 11:49:57.876"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.881" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:57.880" endtime="20201030 11:49:57.881"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.883" level="INFO">VALUE: [4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000041769385e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.859999997997022e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999996122558e-07, 4.860000002437914e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:57.882" endtime="20201030 11:49:57.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.877" endtime="20201030 11:49:57.884"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.505" endtime="20201030 11:49:57.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.505" endtime="20201030 11:49:57.885"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.894" endtime="20201030 11:49:57.905"></status>
</kw>
<msg timestamp="20201030 11:49:57.905" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.891" endtime="20201030 11:49:57.906"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:57.908" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:57.907" endtime="20201030 11:49:57.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.909" endtime="20201030 11:49:57.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.889" endtime="20201030 11:49:57.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.887" endtime="20201030 11:49:57.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:57.918" endtime="20201030 11:49:58.237"></status>
</kw>
<msg timestamp="20201030 11:49:58.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.750808708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.750809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:57.917" endtime="20201030 11:49:58.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.750808708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.750809194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.242" endtime="20201030 11:49:58.251"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.252" endtime="20201030 11:49:58.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.914" endtime="20201030 11:49:58.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.912" endtime="20201030 11:49:58.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:58.259" level="INFO">${RESULT} = [{'diff': 4.859999997997022e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:49:58.256" endtime="20201030 11:49:58.259"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:58.265" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:49:58.260" endtime="20201030 11:49:58.265"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.269" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:58.268" endtime="20201030 11:49:58.270"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.272" level="INFO">VALUE: [4.859999997997022e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.859999997997022e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201030 11:49:58.270" endtime="20201030 11:49:58.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.266" endtime="20201030 11:49:58.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.886" endtime="20201030 11:49:58.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:57.885" endtime="20201030 11:49:58.273"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.282" endtime="20201030 11:49:58.292"></status>
</kw>
<msg timestamp="20201030 11:49:58.293" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.280" endtime="20201030 11:49:58.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.295" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.294" endtime="20201030 11:49:58.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.296" endtime="20201030 11:49:58.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.277" endtime="20201030 11:49:58.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.276" endtime="20201030 11:49:58.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.307" endtime="20201030 11:49:58.617"></status>
</kw>
<msg timestamp="20201030 11:49:58.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.120385639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.120386111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.304" endtime="20201030 11:49:58.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.120385639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.120386111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:58.622" endtime="20201030 11:49:58.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.632" endtime="20201030 11:49:58.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.302" endtime="20201030 11:49:58.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.300" endtime="20201030 11:49:58.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:58.639" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7200000086178306e-07}...</msg>
<status status="PASS" starttime="20201030 11:49:58.636" endtime="20201030 11:49:58.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:58.645" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:49:58.640" endtime="20201030 11:49:58.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.650" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:58.649" endtime="20201030 11:49:58.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.652" level="INFO">VALUE: [4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07]</msg>
<status status="PASS" starttime="20201030 11:49:58.651" endtime="20201030 11:49:58.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.646" endtime="20201030 11:49:58.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.274" endtime="20201030 11:49:58.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.274" endtime="20201030 11:49:58.654"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.662" endtime="20201030 11:49:58.673"></status>
</kw>
<msg timestamp="20201030 11:49:58.673" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.660" endtime="20201030 11:49:58.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.676" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:58.674" endtime="20201030 11:49:58.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.677" endtime="20201030 11:49:58.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.658" endtime="20201030 11:49:58.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.656" endtime="20201030 11:49:58.680"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:58.687" endtime="20201030 11:49:59.005"></status>
</kw>
<msg timestamp="20201030 11:49:59.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.4989885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.498988986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:49:58.685" endtime="20201030 11:49:59.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.4989885, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.498988986, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:49:59.010" endtime="20201030 11:49:59.020"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.020" endtime="20201030 11:49:59.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.682" endtime="20201030 11:49:59.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.680" endtime="20201030 11:49:59.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:59.027" level="INFO">${RESULT} = [{'diff': 4.85999999355613e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7200000086178306e-07},...</msg>
<status status="PASS" starttime="20201030 11:49:59.024" endtime="20201030 11:49:59.028"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:59.032" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.8...</msg>
<status status="PASS" starttime="20201030 11:49:59.029" endtime="20201030 11:49:59.033"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.037" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:59.036" endtime="20201030 11:49:59.037"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.039" level="INFO">VALUE: [4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.870000003265318e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:59.038" endtime="20201030 11:49:59.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.033" endtime="20201030 11:49:59.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.655" endtime="20201030 11:49:59.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.654" endtime="20201030 11:49:59.041"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.052" endtime="20201030 11:49:59.063"></status>
</kw>
<msg timestamp="20201030 11:49:59.064" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.050" endtime="20201030 11:49:59.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.066" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.065" endtime="20201030 11:49:59.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.067" endtime="20201030 11:49:59.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.045" endtime="20201030 11:49:59.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.043" endtime="20201030 11:49:59.070"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.077" endtime="20201030 11:49:59.397"></status>
</kw>
<msg timestamp="20201030 11:49:59.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.870140319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.870140806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.076" endtime="20201030 11:49:59.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.870140319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.870140806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.402" endtime="20201030 11:49:59.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.412" endtime="20201030 11:49:59.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.073" endtime="20201030 11:49:59.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.071" endtime="20201030 11:49:59.415"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:59.419" level="INFO">${RESULT} = [{'diff': 4.870000003265318e-07}, {'diff': 4.7200000086178306e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-0...</msg>
<status status="PASS" starttime="20201030 11:49:59.415" endtime="20201030 11:49:59.419"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:59.425" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.870000003265318e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, ...</msg>
<status status="PASS" starttime="20201030 11:49:59.420" endtime="20201030 11:49:59.425"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.429" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:59.428" endtime="20201030 11:49:59.429"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.432" level="INFO">VALUE: [4.870000003265318e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07]</msg>
<status status="PASS" starttime="20201030 11:49:59.430" endtime="20201030 11:49:59.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.426" endtime="20201030 11:49:59.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.042" endtime="20201030 11:49:59.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.041" endtime="20201030 11:49:59.433"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.441" endtime="20201030 11:49:59.452"></status>
</kw>
<msg timestamp="20201030 11:49:59.453" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.440" endtime="20201030 11:49:59.453"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.455" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.454" endtime="20201030 11:49:59.456"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.456" endtime="20201030 11:49:59.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.437" endtime="20201030 11:49:59.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.435" endtime="20201030 11:49:59.459"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.466" endtime="20201030 11:49:59.776"></status>
</kw>
<msg timestamp="20201030 11:49:59.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.25103325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.251033722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:49:59.465" endtime="20201030 11:49:59.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.25103325, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.251033722, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:49:59.781" endtime="20201030 11:49:59.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.791" endtime="20201030 11:49:59.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.462" endtime="20201030 11:49:59.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.460" endtime="20201030 11:49:59.794"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:49:59.798" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07},...</msg>
<status status="PASS" starttime="20201030 11:49:59.795" endtime="20201030 11:49:59.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:49:59.804" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 11:49:59.799" endtime="20201030 11:49:59.804"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.808" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:49:59.807" endtime="20201030 11:49:59.809"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.811" level="INFO">VALUE: [4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:49:59.809" endtime="20201030 11:49:59.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.805" endtime="20201030 11:49:59.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.434" endtime="20201030 11:49:59.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.434" endtime="20201030 11:49:59.813"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.821" endtime="20201030 11:49:59.831"></status>
</kw>
<msg timestamp="20201030 11:49:59.831" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.819" endtime="20201030 11:49:59.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.834" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:49:59.832" endtime="20201030 11:49:59.834"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.835" endtime="20201030 11:49:59.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.816" endtime="20201030 11:49:59.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.815" endtime="20201030 11:49:59.838"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:49:59.845" endtime="20201030 11:50:00.165"></status>
</kw>
<msg timestamp="20201030 11:50:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.630738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.630739333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:49:59.843" endtime="20201030 11:50:00.169"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.179" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.630738861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.630739333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.170" endtime="20201030 11:50:00.180"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.180" endtime="20201030 11:50:00.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.840" endtime="20201030 11:50:00.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.838" endtime="20201030 11:50:00.183"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.188" level="INFO">${RESULT} = [{'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07...</msg>
<status status="PASS" starttime="20201030 11:50:00.184" endtime="20201030 11:50:00.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.192" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7...</msg>
<status status="PASS" starttime="20201030 11:50:00.189" endtime="20201030 11:50:00.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.197" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:00.196" endtime="20201030 11:50:00.197"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.199" level="INFO">VALUE: [4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.869999994383534e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:00.198" endtime="20201030 11:50:00.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.193" endtime="20201030 11:50:00.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.813" endtime="20201030 11:50:00.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.813" endtime="20201030 11:50:00.201"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.210" endtime="20201030 11:50:00.221"></status>
</kw>
<msg timestamp="20201030 11:50:00.222" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.208" endtime="20201030 11:50:00.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.224" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.223" endtime="20201030 11:50:00.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.226" endtime="20201030 11:50:00.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.205" endtime="20201030 11:50:00.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.203" endtime="20201030 11:50:00.229"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.235" endtime="20201030 11:50:00.547"></status>
</kw>
<msg timestamp="20201030 11:50:00.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.99985225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.999852736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:00.234" endtime="20201030 11:50:00.552"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.99985225, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.999852736, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:00.553" endtime="20201030 11:50:00.562"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.563" endtime="20201030 11:50:00.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.231" endtime="20201030 11:50:00.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.229" endtime="20201030 11:50:00.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.570" level="INFO">${RESULT} = [{'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}...</msg>
<status status="PASS" starttime="20201030 11:50:00.566" endtime="20201030 11:50:00.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.575" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4....</msg>
<status status="PASS" starttime="20201030 11:50:00.571" endtime="20201030 11:50:00.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.580" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:00.579" endtime="20201030 11:50:00.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.582" level="INFO">VALUE: [4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.85999999355613e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07]</msg>
<status status="PASS" starttime="20201030 11:50:00.581" endtime="20201030 11:50:00.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.576" endtime="20201030 11:50:00.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.202" endtime="20201030 11:50:00.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.201" endtime="20201030 11:50:00.584"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.592" endtime="20201030 11:50:00.602"></status>
</kw>
<msg timestamp="20201030 11:50:00.603" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.590" endtime="20201030 11:50:00.603"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.605" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.604" endtime="20201030 11:50:00.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.607" endtime="20201030 11:50:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.588" endtime="20201030 11:50:00.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.586" endtime="20201030 11:50:00.610"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.616" endtime="20201030 11:50:00.933"></status>
</kw>
<msg timestamp="20201030 11:50:00.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.378200833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.378201306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.615" endtime="20201030 11:50:00.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.947" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.378200833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.378201306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:00.938" endtime="20201030 11:50:00.948"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.948" endtime="20201030 11:50:00.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.612" endtime="20201030 11:50:00.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.610" endtime="20201030 11:50:00.951"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:00.956" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.870000003265318e-07}, {...</msg>
<status status="PASS" starttime="20201030 11:50:00.952" endtime="20201030 11:50:00.956"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:00.961" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199...</msg>
<status status="PASS" starttime="20201030 11:50:00.957" endtime="20201030 11:50:00.962"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.966" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:00.965" endtime="20201030 11:50:00.966"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.968" level="INFO">VALUE: [4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.870000003265318e-07, 4.85999999355613e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:00.967" endtime="20201030 11:50:00.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.962" endtime="20201030 11:50:00.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.585" endtime="20201030 11:50:00.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.584" endtime="20201030 11:50:00.970"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.978" endtime="20201030 11:50:00.988"></status>
</kw>
<msg timestamp="20201030 11:50:00.989" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.976" endtime="20201030 11:50:00.989"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:00.992" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.990" endtime="20201030 11:50:00.992"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.993" endtime="20201030 11:50:00.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.974" endtime="20201030 11:50:00.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.972" endtime="20201030 11:50:00.996"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.005" endtime="20201030 11:50:01.324"></status>
</kw>
<msg timestamp="20201030 11:50:01.328" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.752324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.752324806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.002" endtime="20201030 11:50:01.328"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.338" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.752324333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.752324806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.329" endtime="20201030 11:50:01.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.339" endtime="20201030 11:50:01.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.999" endtime="20201030 11:50:01.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.997" endtime="20201030 11:50:01.342"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:01.347" level="INFO">${RESULT} = [{'diff': 4.73000000056345e-07}, {'diff': 4.860000002437914e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.7199999997360464e-07}, {'diff': 4.73000000056345e-07}, ...</msg>
<status status="PASS" starttime="20201030 11:50:01.343" endtime="20201030 11:50:01.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:01.351" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.71...</msg>
<status status="PASS" starttime="20201030 11:50:01.348" endtime="20201030 11:50:01.352"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.356" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:01.355" endtime="20201030 11:50:01.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.358" level="INFO">VALUE: [4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.85999999355613e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.860000002437914e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.729999991681666e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.869999994383534e-07, 4.7199999997360464e-07, 4.7199999997360464e-07]</msg>
<status status="PASS" starttime="20201030 11:50:01.357" endtime="20201030 11:50:01.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.352" endtime="20201030 11:50:01.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.971" endtime="20201030 11:50:01.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.970" endtime="20201030 11:50:01.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:53.720" endtime="20201030 11:50:01.360"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:49:53.643" endtime="20201030 11:50:01.361" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:01.370" endtime="20201030 11:50:01.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.367" endtime="20201030 11:50:01.390"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.404" endtime="20201030 11:50:01.423"></status>
</kw>
<msg timestamp="20201030 11:50:01.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.402" endtime="20201030 11:50:01.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.426" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.424" endtime="20201030 11:50:01.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.429" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:01.427" endtime="20201030 11:50:01.429"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:01.399" endtime="20201030 11:50:01.430"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:01.397" endtime="20201030 11:50:01.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.396" endtime="20201030 11:50:01.431"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:01.435" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:01.434" endtime="20201030 11:50:01.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.432" endtime="20201030 11:50:01.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.395" endtime="20201030 11:50:01.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.394" endtime="20201030 11:50:01.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.437" endtime="20201030 11:50:01.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.392" endtime="20201030 11:50:01.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.391" endtime="20201030 11:50:01.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.366" endtime="20201030 11:50:01.439"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.449" endtime="20201030 11:50:01.464"></status>
</kw>
<msg timestamp="20201030 11:50:01.464" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.447" endtime="20201030 11:50:01.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.467" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.465" endtime="20201030 11:50:01.467"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.468" endtime="20201030 11:50:01.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.445" endtime="20201030 11:50:01.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.443" endtime="20201030 11:50:01.470"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.477" endtime="20201030 11:50:01.766"></status>
</kw>
<msg timestamp="20201030 11:50:01.769" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071246111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071248472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.476" endtime="20201030 11:50:01.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071246111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071248472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.771" endtime="20201030 11:50:01.779"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.780" endtime="20201030 11:50:01.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.473" endtime="20201030 11:50:01.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.471" endtime="20201030 11:50:01.782"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:01.786" level="INFO">${RESULT} = [{'diff': 2.360999999992397e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.26400000000182e-06}, {'diff': 2.3749999999989058e-06}, {'diff': 2.3340000000066086e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:01.783" endtime="20201030 11:50:01.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:01.791" level="INFO">${OVERHEAD} = {'diff': [2.360999999992397e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.26400000000182e-06, 2.3749999999989058e-06, 2.3340000000066086e-06, 2.3890000000054146e-06, 2.319000000000626e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:50:01.787" endtime="20201030 11:50:01.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.795" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:01.794" endtime="20201030 11:50:01.795"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.798" level="INFO">VALUE: [2.360999999992397e-06, 2.3610000000062747e-06, 2.3479999999992396e-06, 2.26400000000182e-06, 2.3749999999989058e-06, 2.3340000000066086e-06, 2.3890000000054146e-06, 2.319000000000626e-06, 2.3890000000054146e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.319000000000626e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3340000000066086e-06, 2.3749999999989058e-06, 2.3620000000057484e-06, 2.3610000000062747e-06, 2.360999999992397e-06, 2.3889999999915368e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.4169999999906766e-06, 2.305999999993591e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.3339999999927308e-06, 2.346999999999766e-06, 2.3610000000062747e-06, 2.3620000000057484e-06, 2.3890000000054146e-06, 2.3890000000054146e-06, 2.3619999999918706e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.4309999999971854e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.4299999999977118e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999992397e-06]</msg>
<status status="PASS" starttime="20201030 11:50:01.796" endtime="20201030 11:50:01.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.792" endtime="20201030 11:50:01.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.441" endtime="20201030 11:50:01.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.441" endtime="20201030 11:50:01.800"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.808" endtime="20201030 11:50:01.820"></status>
</kw>
<msg timestamp="20201030 11:50:01.821" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.807" endtime="20201030 11:50:01.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:01.823" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:01.822" endtime="20201030 11:50:01.824"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.824" endtime="20201030 11:50:01.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.804" endtime="20201030 11:50:01.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.802" endtime="20201030 11:50:01.827"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:01.834" endtime="20201030 11:50:02.139"></status>
</kw>
<msg timestamp="20201030 11:50:02.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071668056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:01.832" endtime="20201030 11:50:02.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.153" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071665694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071668056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.144" endtime="20201030 11:50:02.154"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.155" endtime="20201030 11:50:02.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.829" endtime="20201030 11:50:02.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.828" endtime="20201030 11:50:02.157"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:02.162" level="INFO">${RESULT} = [{'diff': 2.3619999999918706e-06}, {'diff': 2.346999999999766e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.4309999999971854e-06}, {'diff': 2.3479999999992396e-06}, {'diff': 2.3479999999992396e-0...</msg>
<status status="PASS" starttime="20201030 11:50:02.158" endtime="20201030 11:50:02.162"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:02.168" level="INFO">${OVERHEAD} = {'diff': [2.3619999999918706e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.4309999999971854e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.4299999999977118e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:02.163" endtime="20201030 11:50:02.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.172" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:02.171" endtime="20201030 11:50:02.172"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.175" level="INFO">VALUE: [2.3619999999918706e-06, 2.346999999999766e-06, 2.3479999999992396e-06, 2.4309999999971854e-06, 2.3479999999992396e-06, 2.3479999999992396e-06, 2.360999999992397e-06, 2.4299999999977118e-06, 2.346999999999766e-06, 2.346999999999766e-06, 2.332999999993257e-06, 2.346999999999766e-06, 2.3749999999989058e-06, 2.360999999992397e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3469999999581326e-06, 2.3190000000283817e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3469999999581326e-06, 2.3469999999581326e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.3190000000283817e-06, 2.403000000039679e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3470000000136437e-06, 2.4020000000124497e-06, 2.2780000000222067e-06, 2.3609999999507636e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3749999999989058e-06, 2.3749999999989058e-06, 2.3189999999728705e-06, 2.3749999999989058e-06, 2.348000000040873e-06, 2.2920000000148377e-06, 2.3610000000062747e-06, 2.3329999999655016e-06, 2.3749999999989058e-06, 2.3469999999581326e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3329999999655016e-06, 2.3470000000136437e-06, 2.3880000000198187e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06]</msg>
<status status="PASS" starttime="20201030 11:50:02.173" endtime="20201030 11:50:02.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.168" endtime="20201030 11:50:02.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.801" endtime="20201030 11:50:02.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.800" endtime="20201030 11:50:02.176"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.185" endtime="20201030 11:50:02.196"></status>
</kw>
<msg timestamp="20201030 11:50:02.197" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.183" endtime="20201030 11:50:02.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.198" endtime="20201030 11:50:02.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.200" endtime="20201030 11:50:02.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.180" endtime="20201030 11:50:02.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.178" endtime="20201030 11:50:02.203"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.210" endtime="20201030 11:50:02.514"></status>
</kw>
<msg timestamp="20201030 11:50:02.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.42099575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.420998125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:02.208" endtime="20201030 11:50:02.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.42099575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.420998125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:02.526" endtime="20201030 11:50:02.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.537" endtime="20201030 11:50:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.205" endtime="20201030 11:50:02.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.204" endtime="20201030 11:50:02.539"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:02.544" level="INFO">${RESULT} = [{'diff': 2.3749999999989058e-06}, {'diff': 2.3469999999581326e-06}, {'diff': 2.3470000000136437e-06}, {'diff': 2.3610000000062747e-06}, {'diff': 2.3329999999655016e-06}, {'diff': 2.3470000000136437e-...</msg>
<status status="PASS" starttime="20201030 11:50:02.540" endtime="20201030 11:50:02.544"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:02.549" level="INFO">${OVERHEAD} = {'diff': [2.3749999999989058e-06, 2.3469999999581326e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3329999999655016e-06, 2.3470000000136437e-06, 2.3880000000198187e-06, 2.3749999999989058e-06...</msg>
<status status="PASS" starttime="20201030 11:50:02.545" endtime="20201030 11:50:02.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.553" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:02.552" endtime="20201030 11:50:02.553"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.556" level="INFO">VALUE: [2.3749999999989058e-06, 2.3469999999581326e-06, 2.3470000000136437e-06, 2.3610000000062747e-06, 2.3329999999655016e-06, 2.3470000000136437e-06, 2.3880000000198187e-06, 2.3749999999989058e-06, 2.3889999999915368e-06, 2.347999999985362e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3610000000062747e-06, 2.3609999999507636e-06, 2.3200000000000998e-06, 2.3469999999026214e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.2920000000148377e-06, 2.389000000047048e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3329999999655016e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.348000000096384e-06, 2.3049999999802395e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.402999999984168e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3470000000136437e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3469999999026214e-06, 2.3190000000283817e-06, 2.3329999999655016e-06, 2.3470000000136437e-06, 2.347999999985362e-06, 2.3200000000000998e-06, 2.3609999999507636e-06, 2.3470000000136437e-06, 2.3609999999507636e-06, 2.3329999999655016e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.402999999984168e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.30600000006298e-06, 2.3329999999655016e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.3470000000136437e-06]</msg>
<status status="PASS" starttime="20201030 11:50:02.554" endtime="20201030 11:50:02.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.550" endtime="20201030 11:50:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.177" endtime="20201030 11:50:02.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.177" endtime="20201030 11:50:02.557"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.566" endtime="20201030 11:50:02.579"></status>
</kw>
<msg timestamp="20201030 11:50:02.579" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.564" endtime="20201030 11:50:02.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.582" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.580" endtime="20201030 11:50:02.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.583" endtime="20201030 11:50:02.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.561" endtime="20201030 11:50:02.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.559" endtime="20201030 11:50:02.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.592" endtime="20201030 11:50:02.898"></status>
</kw>
<msg timestamp="20201030 11:50:02.902" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.786179625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.786181958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.591" endtime="20201030 11:50:02.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.913" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.786179625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.786181958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.904" endtime="20201030 11:50:02.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.914" endtime="20201030 11:50:02.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.588" endtime="20201030 11:50:02.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.586" endtime="20201030 11:50:02.916"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:02.921" level="INFO">${RESULT} = [{'diff': 2.3329999999655016e-06}, {'diff': 2.3469999999026214e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.402999999984168e-06}, {'diff': 2.3470000000136437e-0...</msg>
<status status="PASS" starttime="20201030 11:50:02.917" endtime="20201030 11:50:02.921"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:02.927" level="INFO">${OVERHEAD} = {'diff': [2.3329999999655016e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.402999999984168e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3470000000136437e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:02.922" endtime="20201030 11:50:02.927"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.931" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:02.930" endtime="20201030 11:50:02.931"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.934" level="INFO">VALUE: [2.3329999999655016e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.402999999984168e-06, 2.3470000000136437e-06, 2.3749999999989058e-06, 2.3470000000136437e-06, 2.30600000006298e-06, 2.3329999999655016e-06, 2.361000000061786e-06, 2.3609999999507636e-06, 2.361000000061786e-06, 2.3470000000136437e-06, 2.3469999999026214e-06, 2.3190000000283817e-06, 2.3469999999026214e-06, 2.3469999999026214e-06, 2.389000000047048e-06, 2.30600000006298e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.4020000000124497e-06, 2.3469999999026214e-06, 2.3469999999026214e-06, 2.361000000172808e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3749999999989058e-06, 2.3190000000283817e-06, 2.4020000000124497e-06, 2.318999999806337e-06, 2.3609999999507636e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3749999999989058e-06, 2.30600000006298e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3049999999802395e-06, 2.347999999985362e-06, 2.362000000033504e-06, 2.347000000124666e-06]</msg>
<status status="PASS" starttime="20201030 11:50:02.932" endtime="20201030 11:50:02.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.927" endtime="20201030 11:50:02.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.558" endtime="20201030 11:50:02.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.558" endtime="20201030 11:50:02.935"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.943" endtime="20201030 11:50:02.955"></status>
</kw>
<msg timestamp="20201030 11:50:02.956" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.942" endtime="20201030 11:50:02.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:02.958" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:02.957" endtime="20201030 11:50:02.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.960" endtime="20201030 11:50:02.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.939" endtime="20201030 11:50:02.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.937" endtime="20201030 11:50:02.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:02.969" endtime="20201030 11:50:03.277"></status>
</kw>
<msg timestamp="20201030 11:50:03.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.155650042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.155652403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:02.967" endtime="20201030 11:50:03.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.291" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.155650042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.155652403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.282" endtime="20201030 11:50:03.292"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.292" endtime="20201030 11:50:03.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.965" endtime="20201030 11:50:03.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.963" endtime="20201030 11:50:03.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:03.299" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3469999999026214e-06}, {'diff': 2.3199999998890775e-06}, {'diff': 2.3749999999989058e-...</msg>
<status status="PASS" starttime="20201030 11:50:03.296" endtime="20201030 11:50:03.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:03.306" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3749999999989058e-06, 2.30600000006298e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:03.301" endtime="20201030 11:50:03.306"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.310" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:03.309" endtime="20201030 11:50:03.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.313" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3749999999989058e-06, 2.30600000006298e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3049999999802395e-06, 2.347999999985362e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.3340000001592642e-06, 2.361000000172808e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.333000000076524e-06, 2.347999999985362e-06, 2.3469999999026214e-06, 2.3059999998409353e-06, 2.3469999999026214e-06, 2.347999999985362e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.361000000172808e-06, 2.347999999985362e-06, 2.305000000202284e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.4159999998385473e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3340000001592642e-06, 2.3609999999507636e-06, 2.333000000076524e-06, 2.4169999999212877e-06, 2.347999999985362e-06, 2.3340000001592642e-06, 2.389000000047048e-06, 2.3889999998250033e-06, 2.3619999998114594e-06, 2.3469999999026214e-06, 2.362000000033504e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.347000000124666e-06, 2.3190000000283817e-06]</msg>
<status status="PASS" starttime="20201030 11:50:03.311" endtime="20201030 11:50:03.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.306" endtime="20201030 11:50:03.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.936" endtime="20201030 11:50:03.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:02.936" endtime="20201030 11:50:03.314"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.322" endtime="20201030 11:50:03.335"></status>
</kw>
<msg timestamp="20201030 11:50:03.335" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.321" endtime="20201030 11:50:03.335"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.338" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.336" endtime="20201030 11:50:03.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.339" endtime="20201030 11:50:03.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.318" endtime="20201030 11:50:03.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.316" endtime="20201030 11:50:03.341"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.349" endtime="20201030 11:50:03.648"></status>
</kw>
<msg timestamp="20201030 11:50:03.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.522426194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.522428528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.347" endtime="20201030 11:50:03.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.662" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.522426194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.522428528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.653" endtime="20201030 11:50:03.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.663" endtime="20201030 11:50:03.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.344" endtime="20201030 11:50:03.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.342" endtime="20201030 11:50:03.666"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:03.670" level="INFO">${RESULT} = [{'diff': 2.3340000001592642e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.3889999998250033e-06}, {'diff': 2.3619999998114594e-06}, {'diff': 2.3469999999026214e-06}, {'diff': 2.362000000033504e-06...</msg>
<status status="PASS" starttime="20201030 11:50:03.667" endtime="20201030 11:50:03.670"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:03.675" level="INFO">${OVERHEAD} = {'diff': [2.3340000001592642e-06, 2.389000000047048e-06, 2.3889999998250033e-06, 2.3619999998114594e-06, 2.3469999999026214e-06, 2.362000000033504e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:03.671" endtime="20201030 11:50:03.675"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.679" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:03.678" endtime="20201030 11:50:03.680"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.682" level="INFO">VALUE: [2.3340000001592642e-06, 2.389000000047048e-06, 2.3889999998250033e-06, 2.3619999998114594e-06, 2.3469999999026214e-06, 2.362000000033504e-06, 2.3469999999026214e-06, 2.3199999998890775e-06, 2.3609999999507636e-06, 2.347999999985362e-06, 2.3749999999989058e-06, 2.361000000172808e-06, 2.347000000124666e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.30600000006298e-06, 2.333000000076524e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.347999999985362e-06, 2.347000000124666e-06, 2.3469999999026214e-06, 2.347000000124666e-06, 2.2779999999666956e-06, 2.3469999999026214e-06, 2.361000000172808e-06, 2.3469999999026214e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.3619999998114594e-06, 2.3609999999507636e-06, 2.3469999999026214e-06, 2.3749999999989058e-06, 2.3339999999372196e-06, 2.3329999998544793e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.4169999999212877e-06, 2.3609999999507636e-06, 2.3749999999989058e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.30600000006298e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.40300000009519e-06, 2.347999999985362e-06, 2.347999999985362e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.347999999985362e-06, 2.3329999998544793e-06, 2.3469999999026214e-06]</msg>
<status status="PASS" starttime="20201030 11:50:03.680" endtime="20201030 11:50:03.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.676" endtime="20201030 11:50:03.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.315" endtime="20201030 11:50:03.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.315" endtime="20201030 11:50:03.684"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.693" endtime="20201030 11:50:03.705"></status>
</kw>
<msg timestamp="20201030 11:50:03.706" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.691" endtime="20201030 11:50:03.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.708" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.707" endtime="20201030 11:50:03.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.710" endtime="20201030 11:50:03.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.688" endtime="20201030 11:50:03.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.686" endtime="20201030 11:50:03.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.719" endtime="20201030 11:50:04.024"></status>
</kw>
<msg timestamp="20201030 11:50:04.028" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891552417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891554764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:03.718" endtime="20201030 11:50:04.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 1.891552417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 1.891554764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.029" endtime="20201030 11:50:04.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.039" endtime="20201030 11:50:04.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.715" endtime="20201030 11:50:04.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.713" endtime="20201030 11:50:04.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:04.047" level="INFO">${RESULT} = [{'diff': 2.347000000124666e-06}, {'diff': 2.30600000006298e-06}, {'diff': 2.361000000172808e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.40300000009519e-06}, {'diff': 2.347999999985362e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:04.043" endtime="20201030 11:50:04.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:04.053" level="INFO">${OVERHEAD} = {'diff': [2.347000000124666e-06, 2.30600000006298e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.40300000009519e-06, 2.347999999985362e-06, 2.347999999985362e-06, 2.320000000111122e-06, 2.31900...</msg>
<status status="PASS" starttime="20201030 11:50:04.048" endtime="20201030 11:50:04.053"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.057" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:04.056" endtime="20201030 11:50:04.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.060" level="INFO">VALUE: [2.347000000124666e-06, 2.30600000006298e-06, 2.361000000172808e-06, 2.3609999999507636e-06, 2.40300000009519e-06, 2.347999999985362e-06, 2.347999999985362e-06, 2.320000000111122e-06, 2.3190000000283817e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.347999999985362e-06, 2.3329999998544793e-06, 2.3469999999026214e-06, 2.346999999680577e-06, 2.347000000124666e-06, 2.3480000002074064e-06, 2.3750000002209504e-06, 2.3190000000283817e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.3060000002850245e-06, 2.3480000002074064e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.389000000047048e-06, 2.3329999998544793e-06, 2.361000000394853e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.347999999763317e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.3480000002074064e-06, 2.3750000002209504e-06, 2.3480000002074064e-06, 2.346999999680577e-06]</msg>
<status status="PASS" starttime="20201030 11:50:04.058" endtime="20201030 11:50:04.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.054" endtime="20201030 11:50:04.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.684" endtime="20201030 11:50:04.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.684" endtime="20201030 11:50:04.062"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.070" endtime="20201030 11:50:04.082"></status>
</kw>
<msg timestamp="20201030 11:50:04.082" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.068" endtime="20201030 11:50:04.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.085" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.084" endtime="20201030 11:50:04.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.086" endtime="20201030 11:50:04.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.065" endtime="20201030 11:50:04.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.064" endtime="20201030 11:50:04.089"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.096" endtime="20201030 11:50:04.400"></status>
</kw>
<msg timestamp="20201030 11:50:04.404" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.252860486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.252862847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.094" endtime="20201030 11:50:04.405"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.252860486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.252862847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.405" endtime="20201030 11:50:04.415"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.416" endtime="20201030 11:50:04.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.092" endtime="20201030 11:50:04.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.089" endtime="20201030 11:50:04.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:04.423" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.320000000111122e-06}, {'diff': 2.3339999999372196e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347000000124666e-06...</msg>
<status status="PASS" starttime="20201030 11:50:04.419" endtime="20201030 11:50:04.423"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:04.428" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.347999999763317e-06, 2....</msg>
<status status="PASS" starttime="20201030 11:50:04.424" endtime="20201030 11:50:04.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.433" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:04.432" endtime="20201030 11:50:04.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.436" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.347999999763317e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.3480000002074064e-06, 2.3750000002209504e-06, 2.3480000002074064e-06, 2.346999999680577e-06, 2.4030000003172347e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.334000000381309e-06, 2.2909999999320974e-06, 2.3889999996029587e-06, 2.3060000002850245e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.4170000001433323e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.3339999999372196e-06, 2.361000000394853e-06, 2.3480000002074064e-06, 2.389000000047048e-06, 2.2920000000148377e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.2920000000148377e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3480000002074064e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.431000000413519e-06, 2.374999999776861e-06, 2.4030000003172347e-06]</msg>
<status status="PASS" starttime="20201030 11:50:04.434" endtime="20201030 11:50:04.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.429" endtime="20201030 11:50:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.062" endtime="20201030 11:50:04.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.062" endtime="20201030 11:50:04.437"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.445" endtime="20201030 11:50:04.457"></status>
</kw>
<msg timestamp="20201030 11:50:04.458" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.444" endtime="20201030 11:50:04.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.460" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.459" endtime="20201030 11:50:04.461"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.461" endtime="20201030 11:50:04.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.441" endtime="20201030 11:50:04.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.439" endtime="20201030 11:50:04.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.472" endtime="20201030 11:50:04.789"></status>
</kw>
<msg timestamp="20201030 11:50:04.793" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.619872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.619874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.470" endtime="20201030 11:50:04.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.803" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.619872292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.619874653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:04.794" endtime="20201030 11:50:04.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.804" endtime="20201030 11:50:04.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.467" endtime="20201030 11:50:04.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.465" endtime="20201030 11:50:04.807"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:04.811" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3329999998544793e-0...</msg>
<status status="PASS" starttime="20201030 11:50:04.808" endtime="20201030 11:50:04.812"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:04.816" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:04.812" endtime="20201030 11:50:04.817"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.821" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:04.820" endtime="20201030 11:50:04.821"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.823" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.431000000413519e-06, 2.374999999776861e-06, 2.4030000003172347e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.277999999744651e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3480000002074064e-06, 2.347000000124666e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3060000002850245e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3889999996029587e-06, 2.3059999998409353e-06, 2.346999999680577e-06, 2.374999999776861e-06, 2.347999999763317e-06, 2.374999999776861e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3190000000283817e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.361000000394853e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.4170000001433323e-06, 2.3480000002074064e-06, 2.3879999999643076e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06]</msg>
<status status="PASS" starttime="20201030 11:50:04.822" endtime="20201030 11:50:04.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.817" endtime="20201030 11:50:04.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.438" endtime="20201030 11:50:04.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.438" endtime="20201030 11:50:04.825"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.834" endtime="20201030 11:50:04.846"></status>
</kw>
<msg timestamp="20201030 11:50:04.847" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.832" endtime="20201030 11:50:04.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:04.849" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:04.848" endtime="20201030 11:50:04.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.850" endtime="20201030 11:50:04.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.829" endtime="20201030 11:50:04.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.827" endtime="20201030 11:50:04.854"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:04.860" endtime="20201030 11:50:05.190"></status>
</kw>
<msg timestamp="20201030 11:50:05.199" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.98644525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.986447611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:04.859" endtime="20201030 11:50:05.199"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 2.98644525, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 2.986447611, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:05.201" endtime="20201030 11:50:05.222"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.223" endtime="20201030 11:50:05.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.856" endtime="20201030 11:50:05.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.854" endtime="20201030 11:50:05.229"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:05.238" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.347999999763317e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.401999999790405e-06}, {'diff': 2.362000000033504e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:05.230" endtime="20201030 11:50:05.238"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:05.247" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.41...</msg>
<status status="PASS" starttime="20201030 11:50:05.240" endtime="20201030 11:50:05.247"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.251" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:05.250" endtime="20201030 11:50:05.251"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.254" level="INFO">VALUE: [2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.401999999790405e-06, 2.362000000033504e-06, 2.347000000124666e-06, 2.362000000033504e-06, 2.4170000001433323e-06, 2.3480000002074064e-06, 2.3879999999643076e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.27800000018874e-06, 2.362000000033504e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3329999998544793e-06, 2.389000000047048e-06, 2.3609999999507636e-06, 2.304999999758195e-06, 2.3609999999507636e-06, 2.3480000002074064e-06, 2.305000000202284e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.374999999776861e-06, 2.361000000394853e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3339999999372196e-06, 2.347999999763317e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.374999999776861e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.361000000394853e-06, 2.389000000047048e-06, 2.346999999680577e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.3339999999372196e-06]</msg>
<status status="PASS" starttime="20201030 11:50:05.252" endtime="20201030 11:50:05.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.248" endtime="20201030 11:50:05.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.826" endtime="20201030 11:50:05.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:04.825" endtime="20201030 11:50:05.255"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.263" endtime="20201030 11:50:05.275"></status>
</kw>
<msg timestamp="20201030 11:50:05.276" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.261" endtime="20201030 11:50:05.276"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.278" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.277" endtime="20201030 11:50:05.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.279" endtime="20201030 11:50:05.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.259" endtime="20201030 11:50:05.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.257" endtime="20201030 11:50:05.282"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.288" endtime="20201030 11:50:05.597"></status>
</kw>
<msg timestamp="20201030 11:50:05.601" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.364045944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.364048306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.287" endtime="20201030 11:50:05.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.611" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.364045944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.364048306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.602" endtime="20201030 11:50:05.611"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.612" endtime="20201030 11:50:05.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.284" endtime="20201030 11:50:05.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.283" endtime="20201030 11:50:05.614"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:05.619" level="INFO">${RESULT} = [{'diff': 2.362000000033504e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.347000000124666e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.389000000047048e-06}, {'diff': 2.347000000124666e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:05.615" endtime="20201030 11:50:05.620"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:05.624" level="INFO">${OVERHEAD} = {'diff': [2.362000000033504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.36...</msg>
<status status="PASS" starttime="20201030 11:50:05.620" endtime="20201030 11:50:05.624"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.628" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:05.627" endtime="20201030 11:50:05.629"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.631" level="INFO">VALUE: [2.362000000033504e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.361000000394853e-06, 2.389000000047048e-06, 2.346999999680577e-06, 2.389000000047048e-06, 2.347000000124666e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.4030000003172347e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.347000000124666e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3329999998544793e-06, 2.4299999998866895e-06, 2.347000000124666e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.4020000002344943e-06, 2.347999999763317e-06, 2.347000000124666e-06, 2.347000000124666e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.4299999998866895e-06, 2.361000000394853e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3480000002074064e-06, 2.374999999776861e-06, 2.347000000124666e-06, 2.3189999995842925e-06, 2.3339999999372196e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3339999999372196e-06, 2.347000000124666e-06]</msg>
<status status="PASS" starttime="20201030 11:50:05.629" endtime="20201030 11:50:05.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.625" endtime="20201030 11:50:05.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.256" endtime="20201030 11:50:05.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.255" endtime="20201030 11:50:05.632"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.640" endtime="20201030 11:50:05.654"></status>
</kw>
<msg timestamp="20201030 11:50:05.654" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.638" endtime="20201030 11:50:05.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.657" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:05.655" endtime="20201030 11:50:05.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.658" endtime="20201030 11:50:05.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.636" endtime="20201030 11:50:05.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.634" endtime="20201030 11:50:05.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:05.670" endtime="20201030 11:50:05.986"></status>
</kw>
<msg timestamp="20201030 11:50:05.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.785153847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.785156181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.668" endtime="20201030 11:50:05.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:05.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.785153847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.785156181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:05.991" endtime="20201030 11:50:06.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.001" endtime="20201030 11:50:06.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.663" endtime="20201030 11:50:06.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.661" endtime="20201030 11:50:06.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.008" level="INFO">${RESULT} = [{'diff': 2.3339999999372196e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3329999998544793e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3329999998544793e-0...</msg>
<status status="PASS" starttime="20201030 11:50:06.004" endtime="20201030 11:50:06.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.012" level="INFO">${OVERHEAD} = {'diff': [2.3339999999372196e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3750000002209504e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:06.009" endtime="20201030 11:50:06.012"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.017" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:06.015" endtime="20201030 11:50:06.017"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.020" level="INFO">VALUE: [2.3339999999372196e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3329999998544793e-06, 2.3339999999372196e-06, 2.347000000124666e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.347999999763317e-06, 2.347999999763317e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.361000000838942e-06, 2.3330000002985685e-06, 2.290999999488008e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3050000006463733e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3330000002985685e-06, 2.431000000413519e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.334000000381309e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.292000000458927e-06, 2.3470000005687552e-06]</msg>
<status status="PASS" starttime="20201030 11:50:06.018" endtime="20201030 11:50:06.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.013" endtime="20201030 11:50:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.633" endtime="20201030 11:50:06.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:05.633" endtime="20201030 11:50:06.021"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.029" endtime="20201030 11:50:06.041"></status>
</kw>
<msg timestamp="20201030 11:50:06.041" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.027" endtime="20201030 11:50:06.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.044" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.043" endtime="20201030 11:50:06.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.045" endtime="20201030 11:50:06.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.025" endtime="20201030 11:50:06.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.023" endtime="20201030 11:50:06.048"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.054" endtime="20201030 11:50:06.376"></status>
</kw>
<msg timestamp="20201030 11:50:06.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.152965472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.152967806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.053" endtime="20201030 11:50:06.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.152965472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.152967806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.381" endtime="20201030 11:50:06.390"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.391" endtime="20201030 11:50:06.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.050" endtime="20201030 11:50:06.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.048" endtime="20201030 11:50:06.394"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.398" level="INFO">${RESULT} = [{'diff': 2.334000000381309e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.320000000111122e-06}, {'diff': 2.346999999680577e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:06.394" endtime="20201030 11:50:06.398"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.403" level="INFO">${OVERHEAD} = {'diff': [2.334000000381309e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2...</msg>
<status status="PASS" starttime="20201030 11:50:06.399" endtime="20201030 11:50:06.403"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.407" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:06.406" endtime="20201030 11:50:06.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.410" level="INFO">VALUE: [2.334000000381309e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.292000000458927e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.304999999758195e-06, 2.3609999999507636e-06, 2.3330000002985685e-06, 2.3339999994931304e-06, 2.277000000106e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.4029999998731455e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3480000006514956e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.3480000006514956e-06, 2.320000000111122e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.361000000838942e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.374999999332772e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.3190000000283817e-06, 2.346999999680577e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 11:50:06.408" endtime="20201030 11:50:06.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.404" endtime="20201030 11:50:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.022" endtime="20201030 11:50:06.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.021" endtime="20201030 11:50:06.411"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.419" endtime="20201030 11:50:06.431"></status>
</kw>
<msg timestamp="20201030 11:50:06.431" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.418" endtime="20201030 11:50:06.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.434" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.432" endtime="20201030 11:50:06.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.435" endtime="20201030 11:50:06.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.415" endtime="20201030 11:50:06.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.413" endtime="20201030 11:50:06.437"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.444" endtime="20201030 11:50:06.757"></status>
</kw>
<msg timestamp="20201030 11:50:06.761" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.531687528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531689875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.442" endtime="20201030 11:50:06.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.531687528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.531689875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.762" endtime="20201030 11:50:06.771"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.772" endtime="20201030 11:50:06.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.440" endtime="20201030 11:50:06.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.438" endtime="20201030 11:50:06.775"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:06.779" level="INFO">${RESULT} = [{'diff': 2.346999999680577e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3480000006514956e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.362000000033504e-06}, {'diff': 2.3750000002209504e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:06.775" endtime="20201030 11:50:06.779"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:06.784" level="INFO">${OVERHEAD} = {'diff': [2.346999999680577e-06, 2.374999999332772e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3...</msg>
<status status="PASS" starttime="20201030 11:50:06.780" endtime="20201030 11:50:06.784"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.788" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:06.787" endtime="20201030 11:50:06.788"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.790" level="INFO">VALUE: [2.346999999680577e-06, 2.374999999332772e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.3190000000283817e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.361000000838942e-06, 2.361000000838942e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.389000000491137e-06, 2.346999999680577e-06, 2.3190000000283817e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.264000000806732e-06, 2.4029999998731455e-06, 2.362000000033504e-06, 2.3609999999507636e-06, 2.3750000002209504e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.403000000761324e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.361000000838942e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 11:50:06.789" endtime="20201030 11:50:06.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.784" endtime="20201030 11:50:06.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.412" endtime="20201030 11:50:06.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.412" endtime="20201030 11:50:06.792"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.801" endtime="20201030 11:50:06.813"></status>
</kw>
<msg timestamp="20201030 11:50:06.813" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.798" endtime="20201030 11:50:06.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.816" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.814" endtime="20201030 11:50:06.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.817" endtime="20201030 11:50:06.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.795" endtime="20201030 11:50:06.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.794" endtime="20201030 11:50:06.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.826" endtime="20201030 11:50:07.144"></status>
</kw>
<msg timestamp="20201030 11:50:07.147" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.912377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.912379556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:06.824" endtime="20201030 11:50:07.148"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.912377208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.912379556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.149" endtime="20201030 11:50:07.158"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.158" endtime="20201030 11:50:07.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.821" endtime="20201030 11:50:07.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.820" endtime="20201030 11:50:07.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.165" level="INFO">${RESULT} = [{'diff': 2.3480000006514956e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.374999999332772e-06}, {'diff': 2.3330000002985685e-0...</msg>
<status status="PASS" starttime="20201030 11:50:07.162" endtime="20201030 11:50:07.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.171" level="INFO">${OVERHEAD} = {'diff': [2.3480000006514956e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.361000000838942e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:07.166" endtime="20201030 11:50:07.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.175" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:07.174" endtime="20201030 11:50:07.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.177" level="INFO">VALUE: [2.3480000006514956e-06, 2.3609999999507636e-06, 2.3889999996029587e-06, 2.3750000002209504e-06, 2.374999999332772e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.361000000838942e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.4309999995253406e-06, 2.3480000006514956e-06, 2.320000000111122e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.4029999998731455e-06, 2.346999999680577e-06, 2.362000000033504e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.2910000003761866e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.3330000002985685e-06, 2.27800000018874e-06, 2.3330000002985685e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.347999999763317e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3199999992229436e-06, 2.346999999680577e-06, 2.346999999680577e-06, 2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.346999999680577e-06]</msg>
<status status="PASS" starttime="20201030 11:50:07.176" endtime="20201030 11:50:07.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.171" endtime="20201030 11:50:07.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.793" endtime="20201030 11:50:07.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.792" endtime="20201030 11:50:07.179"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.187" endtime="20201030 11:50:07.199"></status>
</kw>
<msg timestamp="20201030 11:50:07.199" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.185" endtime="20201030 11:50:07.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.202" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.200" endtime="20201030 11:50:07.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.203" endtime="20201030 11:50:07.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.182" endtime="20201030 11:50:07.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.181" endtime="20201030 11:50:07.205"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.212" endtime="20201030 11:50:07.523"></status>
</kw>
<msg timestamp="20201030 11:50:07.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.282706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.282709111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.210" endtime="20201030 11:50:07.527"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.282706736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.282709111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:07.528" endtime="20201030 11:50:07.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.537" endtime="20201030 11:50:07.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.208" endtime="20201030 11:50:07.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.206" endtime="20201030 11:50:07.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:07.544" level="INFO">${RESULT} = [{'diff': 2.3750000002209504e-06}, {'diff': 2.4029999998731455e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.3330000002985685e-06}, {'diff': 2.3889999996029587e-06}, {'diff': 2.3609999999507636e-...</msg>
<status status="PASS" starttime="20201030 11:50:07.541" endtime="20201030 11:50:07.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:07.550" level="INFO">${OVERHEAD} = {'diff': [2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:07.545" endtime="20201030 11:50:07.550"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.554" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:07.553" endtime="20201030 11:50:07.555"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.557" level="INFO">VALUE: [2.3750000002209504e-06, 2.4029999998731455e-06, 2.3750000002209504e-06, 2.3330000002985685e-06, 2.3889999996029587e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.347999999763317e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.3889999996029587e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3750000002209504e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.346999999680577e-06, 2.3470000005687552e-06, 2.346999999680577e-06, 2.4299999994426003e-06, 2.4029999998731455e-06, 2.3330000002985685e-06, 2.3750000002209504e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.292000000458927e-06, 2.334000000381309e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.3750000002209504e-06, 2.320000000111122e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.320000000111122e-06, 2.401999999790405e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06]</msg>
<status status="PASS" starttime="20201030 11:50:07.555" endtime="20201030 11:50:07.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.551" endtime="20201030 11:50:07.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.179" endtime="20201030 11:50:07.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.179" endtime="20201030 11:50:07.558"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.665" endtime="20201030 11:50:10.679"></status>
</kw>
<msg timestamp="20201030 11:50:10.680" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.661" endtime="20201030 11:50:10.681"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.685" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.683" endtime="20201030 11:50:10.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.688" endtime="20201030 11:50:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.656" endtime="20201030 11:50:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.560" endtime="20201030 11:50:10.693"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.707" endtime="20201030 11:50:11.025"></status>
</kw>
<msg timestamp="20201030 11:50:11.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659796819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659799139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:10.704" endtime="20201030 11:50:11.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.659796819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.659799139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.030" endtime="20201030 11:50:11.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.040" endtime="20201030 11:50:11.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.698" endtime="20201030 11:50:11.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.694" endtime="20201030 11:50:11.042"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:11.046" level="INFO">${RESULT} = [{'diff': 2.320000000111122e-06}, {'diff': 2.401999999790405e-06}, {'diff': 2.361000000838942e-06}, {'diff': 2.3750000002209504e-06}, {'diff': 2.33299999941039e-06}, {'diff': 2.3750000002209504e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:11.043" endtime="20201030 11:50:11.047"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:11.051" level="INFO">${OVERHEAD} = {'diff': [2.320000000111122e-06, 2.401999999790405e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.374999999332772e-06, 2.360...</msg>
<status status="PASS" starttime="20201030 11:50:11.047" endtime="20201030 11:50:11.051"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.055" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:11.054" endtime="20201030 11:50:11.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.058" level="INFO">VALUE: [2.320000000111122e-06, 2.401999999790405e-06, 2.361000000838942e-06, 2.3750000002209504e-06, 2.33299999941039e-06, 2.3750000002209504e-06, 2.416000000060592e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.346999999680577e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.290999999488008e-06, 2.3050000006463733e-06, 2.3190000000283817e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.362000000033504e-06, 2.416999999255154e-06, 2.374999999332772e-06, 2.362000000033504e-06, 2.3340000012694873e-06, 2.33299999941039e-06, 2.3469999987923984e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.375000001109129e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.333000001186747e-06, 2.4029999998731455e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3060000007291137e-06, 2.3470000005687552e-06, 2.362000000033504e-06, 2.3470000005687552e-06, 2.305999998952757e-06, 2.3470000005687552e-06, 2.3889999987147803e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999987147803e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3049999988700165e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.389000000491137e-06, 2.3340000012694873e-06, 2.333000001186747e-06]</msg>
<status status="PASS" starttime="20201030 11:50:11.056" endtime="20201030 11:50:11.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.052" endtime="20201030 11:50:11.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.559" endtime="20201030 11:50:11.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.559" endtime="20201030 11:50:11.060"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.068" endtime="20201030 11:50:11.080"></status>
</kw>
<msg timestamp="20201030 11:50:11.080" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.067" endtime="20201030 11:50:11.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.083" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.082" endtime="20201030 11:50:11.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.084" endtime="20201030 11:50:11.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.064" endtime="20201030 11:50:11.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.062" endtime="20201030 11:50:11.087"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.093" endtime="20201030 11:50:11.412"></status>
</kw>
<msg timestamp="20201030 11:50:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.129365528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.129367889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.091" endtime="20201030 11:50:11.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.129365528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.129367889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.417" endtime="20201030 11:50:11.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.427" endtime="20201030 11:50:11.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.089" endtime="20201030 11:50:11.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.087" endtime="20201030 11:50:11.429"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:11.434" level="INFO">${RESULT} = [{'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3889999987147803e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3470000005687552e-...</msg>
<status status="PASS" starttime="20201030 11:50:11.430" endtime="20201030 11:50:11.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:11.439" level="INFO">${OVERHEAD} = {'diff': [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999987147803e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3049999988700165e-06, 2.3609999999507636e-06...</msg>
<status status="PASS" starttime="20201030 11:50:11.435" endtime="20201030 11:50:11.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.443" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:11.442" endtime="20201030 11:50:11.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.446" level="INFO">VALUE: [2.3609999999507636e-06, 2.3609999999507636e-06, 2.3889999987147803e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3049999988700165e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.389000000491137e-06, 2.3340000012694873e-06, 2.333000001186747e-06, 2.389000000491137e-06, 2.4029999998731455e-06, 2.3480000006514956e-06, 2.3469999987923984e-06, 2.3469999987923984e-06, 2.4029999998731455e-06, 2.3339999994931304e-06, 2.3479999988751388e-06, 2.3609999999507636e-06, 2.333000001186747e-06, 2.3609999999507636e-06, 2.3469999987923984e-06, 2.3190000000283817e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3479999988751388e-06, 2.3609999999507636e-06, 2.401999999790405e-06, 2.3480000006514956e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3469999987923984e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.375000001109129e-06, 2.33299999941039e-06, 2.33299999941039e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.2919999995707485e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.375000001109129e-06, 2.3469999987923984e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.375000001109129e-06, 2.4029999998731455e-06, 2.33299999941039e-06, 2.3480000006514956e-06]</msg>
<status status="PASS" starttime="20201030 11:50:11.444" endtime="20201030 11:50:11.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.440" endtime="20201030 11:50:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.061" endtime="20201030 11:50:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.060" endtime="20201030 11:50:11.448"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.456" endtime="20201030 11:50:11.468"></status>
</kw>
<msg timestamp="20201030 11:50:11.468" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.454" endtime="20201030 11:50:11.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.471" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.469" endtime="20201030 11:50:11.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.472" endtime="20201030 11:50:11.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.451" endtime="20201030 11:50:11.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.450" endtime="20201030 11:50:11.474"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.481" endtime="20201030 11:50:11.798"></status>
</kw>
<msg timestamp="20201030 11:50:11.802" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.520688639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.520691014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.479" endtime="20201030 11:50:11.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.812" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.520688639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.520691014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.803" endtime="20201030 11:50:11.812"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.813" endtime="20201030 11:50:11.814"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.476" endtime="20201030 11:50:11.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.475" endtime="20201030 11:50:11.815"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:11.820" level="INFO">${RESULT} = [{'diff': 2.375000001109129e-06}, {'diff': 2.3470000005687552e-06}, {'diff': 2.3480000006514956e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.3609999999507636e-06}, {'diff': 2.375000001109129e-06...</msg>
<status status="PASS" starttime="20201030 11:50:11.816" endtime="20201030 11:50:11.820"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:11.825" level="INFO">${OVERHEAD} = {'diff': [2.375000001109129e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.375000001109129e-06, 2.3469999987923984e-06, 2.3609999999507636e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:11.821" endtime="20201030 11:50:11.826"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.829" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:11.828" endtime="20201030 11:50:11.830"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.832" level="INFO">VALUE: [2.375000001109129e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.375000001109129e-06, 2.3469999987923984e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.375000001109129e-06, 2.4029999998731455e-06, 2.33299999941039e-06, 2.3480000006514956e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.3469999987923984e-06, 2.375000001109129e-06, 2.3479999988751388e-06, 2.3470000005687552e-06, 2.4030000016495023e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3480000006514956e-06, 2.3190000000283817e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.33299999941039e-06, 2.3610000017271204e-06, 2.3470000005687552e-06, 2.374999999332772e-06, 2.3339999994931304e-06, 2.374999999332772e-06, 2.3479999988751388e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3049999988700165e-06, 2.3609999999507636e-06, 2.3469999987923984e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.3469999987923984e-06, 2.3609999999507636e-06, 2.3190000000283817e-06, 2.33299999941039e-06, 2.3469999987923984e-06, 2.3480000006514956e-06, 2.3479999988751388e-06, 2.3469999987923984e-06, 2.3479999988751388e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.33299999941039e-06, 2.375000001109129e-06, 2.375000001109129e-06, 2.389000000491137e-06, 2.33299999941039e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3470000005687552e-06, 2.3480000006514956e-06]</msg>
<status status="PASS" starttime="20201030 11:50:11.831" endtime="20201030 11:50:11.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.826" endtime="20201030 11:50:11.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.448" endtime="20201030 11:50:11.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.448" endtime="20201030 11:50:11.834"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.842" endtime="20201030 11:50:11.854"></status>
</kw>
<msg timestamp="20201030 11:50:11.854" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.840" endtime="20201030 11:50:11.854"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:11.856" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:11.855" endtime="20201030 11:50:11.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.857" endtime="20201030 11:50:11.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.838" endtime="20201030 11:50:11.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.836" endtime="20201030 11:50:11.860"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:11.867" endtime="20201030 11:50:12.178"></status>
</kw>
<msg timestamp="20201030 11:50:12.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.897178069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.897180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:11.866" endtime="20201030 11:50:12.182"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.897178069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.897180417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.183" endtime="20201030 11:50:12.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.193" endtime="20201030 11:50:12.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.862" endtime="20201030 11:50:12.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.861" endtime="20201030 11:50:12.195"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.199" level="INFO">${RESULT} = [{'diff': 2.3479999988751388e-06}, {'diff': 2.375000001109129e-06}, {'diff': 2.3470000005687552e-06}, {'diff': 2.3470000005687552e-06}, {'diff': 2.33299999941039e-06}, {'diff': 2.375000001109129e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:12.196" endtime="20201030 11:50:12.200"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:12.204" level="INFO">${OVERHEAD} = {'diff': [2.3479999988751388e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.33299999941039e-06, 2.375000001109129e-06, 2.375000001109129e-06, 2.389000000491137e-06, 2.33...</msg>
<status status="PASS" starttime="20201030 11:50:12.200" endtime="20201030 11:50:12.205"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.208" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:12.207" endtime="20201030 11:50:12.209"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.214" level="INFO">VALUE: [2.3479999988751388e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.3470000005687552e-06, 2.33299999941039e-06, 2.375000001109129e-06, 2.375000001109129e-06, 2.389000000491137e-06, 2.33299999941039e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.362000000033504e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.33299999941039e-06, 2.27800000018874e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.333000001186747e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.2920000013471054e-06, 2.3609999999507636e-06, 2.374999999332772e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3340000012694873e-06, 2.3470000005687552e-06, 2.3480000006514956e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3339999994931304e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.320000000111122e-06, 2.333000001186747e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3609999999507636e-06, 2.333000001186747e-06, 2.3609999999507636e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.375000001109129e-06, 2.3470000005687552e-06, 2.3479999988751388e-06, 2.3609999999507636e-06, 2.3479999988751388e-06, 2.374999999332772e-06, 2.305999998952757e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.3470000005687552e-06, 2.3609999999507636e-06, 2.33299999941039e-06, 2.3469999987923984e-06, 2.3469999987923984e-06, 2.27800000018874e-06, 2.374999999332772e-06, 2.3609999999507636e-06, 2.3609999999507636e-06]</msg>
<status status="PASS" starttime="20201030 11:50:12.209" endtime="20201030 11:50:12.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.205" endtime="20201030 11:50:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.835" endtime="20201030 11:50:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:11.834" endtime="20201030 11:50:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:01.440" endtime="20201030 11:50:12.216"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:01.363" endtime="20201030 11:50:12.217" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:12.225" endtime="20201030 11:50:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.223" endtime="20201030 11:50:12.245"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.258" endtime="20201030 11:50:12.277"></status>
</kw>
<msg timestamp="20201030 11:50:12.277" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.256" endtime="20201030 11:50:12.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.280" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.278" endtime="20201030 11:50:12.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.283" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:12.281" endtime="20201030 11:50:12.283"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:12.253" endtime="20201030 11:50:12.284"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:12.251" endtime="20201030 11:50:12.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.250" endtime="20201030 11:50:12.285"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:12.288" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:12.288" endtime="20201030 11:50:12.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.285" endtime="20201030 11:50:12.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.249" endtime="20201030 11:50:12.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.248" endtime="20201030 11:50:12.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.290" endtime="20201030 11:50:12.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.247" endtime="20201030 11:50:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.245" endtime="20201030 11:50:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.221" endtime="20201030 11:50:12.292"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.303" endtime="20201030 11:50:12.322"></status>
</kw>
<msg timestamp="20201030 11:50:12.322" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.301" endtime="20201030 11:50:12.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.325" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.324" endtime="20201030 11:50:12.325"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.326" endtime="20201030 11:50:12.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.297" endtime="20201030 11:50:12.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.295" endtime="20201030 11:50:12.329"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.331" endtime="20201030 11:50:12.333"></status>
</kw>
<msg timestamp="20201030 11:50:12.333" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:12.330" endtime="20201030 11:50:12.333"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.337" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:12.336" endtime="20201030 11:50:12.338"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.339" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:12.338" endtime="20201030 11:50:12.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.334" endtime="20201030 11:50:12.340"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.344" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:12.343" endtime="20201030 11:50:12.344"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.346" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:12.345" endtime="20201030 11:50:12.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.341" endtime="20201030 11:50:12.347"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.353" endtime="20201030 11:50:12.638"></status>
</kw>
<msg timestamp="20201030 11:50:12.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07050425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070510597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:12.352" endtime="20201030 11:50:12.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.649" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07050425, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.070510597, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:12.642" endtime="20201030 11:50:12.650"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.650" endtime="20201030 11:50:12.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.349" endtime="20201030 11:50:12.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.347" endtime="20201030 11:50:12.653"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:12.657" level="INFO">${RESULT} = [{'diff': 6.3469999999898885e-06}, {'diff': 6.458000000000852e-06}, {'diff': 6.444000000008221e-06}, {'diff': 6.472000000007361e-06}, {'diff': 6.500000000006501e-06}, {'diff': 6.431000000001186e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:12.654" endtime="20201030 11:50:12.657"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:12.662" level="INFO">${OVERHEAD} = {'diff': [6.3469999999898885e-06, 6.458000000000852e-06, 6.444000000008221e-06, 6.472000000007361e-06, 6.500000000006501e-06, 6.431000000001186e-06, 6.416999999994677e-06, 6.430000000001712e-06, 6.485...</msg>
<status status="PASS" starttime="20201030 11:50:12.658" endtime="20201030 11:50:12.662"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.666" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:12.665" endtime="20201030 11:50:12.667"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.669" level="INFO">VALUE: [6.3469999999898885e-06, 6.458000000000852e-06, 6.444000000008221e-06, 6.472000000007361e-06, 6.500000000006501e-06, 6.431000000001186e-06, 6.416999999994677e-06, 6.430000000001712e-06, 6.485999999999992e-06, 6.443999999994343e-06, 6.458000000000852e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.430999999987308e-06, 6.52800000000564e-06, 6.443999999994343e-06, 6.444000000008221e-06, 6.430000000001712e-06, 6.388999999995537e-06, 6.416999999994677e-06, 6.444999999993817e-06, 6.431000000001186e-06, 6.431000000001186e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.388999999995537e-06, 6.444000000008221e-06, 6.431000000001186e-06, 6.458000000000852e-06, 6.458000000000852e-06, 6.443999999994343e-06, 6.4450000000076946e-06, 6.429999999987834e-06, 6.361000000010275e-06, 6.444000000008221e-06, 6.457999999986974e-06, 6.459000000000326e-06, 6.431000000001186e-06, 6.443999999994343e-06, 6.431000000001186e-06, 6.360999999996397e-06, 6.443999999994343e-06, 6.416999999994677e-06, 6.458000000000852e-06, 6.443999999994343e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.430000000001712e-06, 6.431000000001186e-06, 6.444999999993817e-06]</msg>
<status status="PASS" starttime="20201030 11:50:12.667" endtime="20201030 11:50:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.663" endtime="20201030 11:50:12.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.293" endtime="20201030 11:50:12.670"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:12.218" endtime="20201030 11:50:12.671" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:12.678" endtime="20201030 11:50:12.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.677" endtime="20201030 11:50:12.698"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.711" endtime="20201030 11:50:12.731"></status>
</kw>
<msg timestamp="20201030 11:50:12.731" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.710" endtime="20201030 11:50:12.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.734" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.732" endtime="20201030 11:50:12.734"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.737" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:12.735" endtime="20201030 11:50:12.737"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:12.707" endtime="20201030 11:50:12.738"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:12.705" endtime="20201030 11:50:12.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.704" endtime="20201030 11:50:12.739"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:12.743" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:12.742" endtime="20201030 11:50:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.739" endtime="20201030 11:50:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.703" endtime="20201030 11:50:12.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.702" endtime="20201030 11:50:12.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.745" endtime="20201030 11:50:12.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.701" endtime="20201030 11:50:12.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.699" endtime="20201030 11:50:12.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.676" endtime="20201030 11:50:12.748"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.757" endtime="20201030 11:50:12.847"></status>
</kw>
<msg timestamp="20201030 11:50:12.848" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.755" endtime="20201030 11:50:12.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.850" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:12.849" endtime="20201030 11:50:12.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.851" endtime="20201030 11:50:12.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.752" endtime="20201030 11:50:12.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.750" endtime="20201030 11:50:12.854"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.857" endtime="20201030 11:50:12.858"></status>
</kw>
<msg timestamp="20201030 11:50:12.859" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:12.855" endtime="20201030 11:50:12.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.863" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:12.862" endtime="20201030 11:50:12.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.865" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:12.864" endtime="20201030 11:50:12.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.859" endtime="20201030 11:50:12.865"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.869" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:12.868" endtime="20201030 11:50:12.870"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:12.871" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:12.870" endtime="20201030 11:50:12.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.866" endtime="20201030 11:50:12.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:12.878" endtime="20201030 11:50:13.171"></status>
</kw>
<msg timestamp="20201030 11:50:13.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072417931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072469083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:12.877" endtime="20201030 11:50:13.175"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.182" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072417931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.072469083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:13.175" endtime="20201030 11:50:13.183"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.183" endtime="20201030 11:50:13.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.874" endtime="20201030 11:50:13.186"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.873" endtime="20201030 11:50:13.186"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.191" level="INFO">${RESULT} = [{'diff': 5.1151999999998754e-05}, {'diff': 5.130500000000149e-05}, {'diff': 5.125000000000268e-05}, {'diff': 5.126399999999531e-05}, {'diff': 5.129099999999498e-05}, {'diff': 5.122200000000354e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:13.187" endtime="20201030 11:50:13.191"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:13.195" level="INFO">${OVERHEAD} = {'diff': [5.1151999999998754e-05, 5.130500000000149e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.129099999999498e-05, 5.122200000000354e-05, 5.1235999999996173e-05, 5.129199999999445e-05, 5.12...</msg>
<status status="PASS" starttime="20201030 11:50:13.192" endtime="20201030 11:50:13.195"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.200" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:13.199" endtime="20201030 11:50:13.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.202" level="INFO">VALUE: [5.1151999999998754e-05, 5.130500000000149e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.129099999999498e-05, 5.122200000000354e-05, 5.1235999999996173e-05, 5.129199999999445e-05, 5.126400000000919e-05, 5.129199999999445e-05, 5.126399999999531e-05, 5.1221999999989665e-05, 5.127800000000182e-05, 5.129200000000833e-05, 5.125000000000268e-05, 5.129099999999498e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.126400000000919e-05, 5.1223000000003016e-05, 5.127800000000182e-05, 5.123600000001005e-05, 5.1249999999988805e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.1249999999988805e-05, 5.126400000000919e-05, 5.127800000000182e-05, 5.123600000001005e-05, 5.127700000000235e-05, 5.123699999999565e-05, 5.130600000000096e-05, 5.1249999999988805e-05, 5.130500000000149e-05, 5.118099999999737e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.126399999999531e-05, 5.124999999997493e-05, 5.126399999999531e-05, 5.1277999999987944e-05, 5.1235999999982296e-05, 5.126399999999531e-05, 5.122200000001742e-05, 5.125000000000268e-05, 5.118099999998349e-05, 5.125000000000268e-05, 5.125000000000268e-05, 5.124999999997493e-05, 5.1235999999982296e-05]</msg>
<status status="PASS" starttime="20201030 11:50:13.201" endtime="20201030 11:50:13.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.196" endtime="20201030 11:50:13.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:12.748" endtime="20201030 11:50:13.204"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:12.673" endtime="20201030 11:50:13.205" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:13.212" endtime="20201030 11:50:13.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.210" endtime="20201030 11:50:13.232"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.247" endtime="20201030 11:50:13.266"></status>
</kw>
<msg timestamp="20201030 11:50:13.267" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.245" endtime="20201030 11:50:13.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.269" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.268" endtime="20201030 11:50:13.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.272" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:13.270" endtime="20201030 11:50:13.273"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.241" endtime="20201030 11:50:13.273"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.239" endtime="20201030 11:50:13.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.238" endtime="20201030 11:50:13.274"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:13.278" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:13.277" endtime="20201030 11:50:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.275" endtime="20201030 11:50:13.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.237" endtime="20201030 11:50:13.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.236" endtime="20201030 11:50:13.279"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.280" endtime="20201030 11:50:13.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.235" endtime="20201030 11:50:13.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.233" endtime="20201030 11:50:13.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.209" endtime="20201030 11:50:13.282"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.291" endtime="20201030 11:50:13.571"></status>
</kw>
<msg timestamp="20201030 11:50:13.572" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.289" endtime="20201030 11:50:13.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.574" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.573" endtime="20201030 11:50:13.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.575" endtime="20201030 11:50:13.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.287" endtime="20201030 11:50:13.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.285" endtime="20201030 11:50:13.578"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.580" endtime="20201030 11:50:13.582"></status>
</kw>
<msg timestamp="20201030 11:50:13.582" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:13.579" endtime="20201030 11:50:13.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.586" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:13.585" endtime="20201030 11:50:13.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.588" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:13.588" endtime="20201030 11:50:13.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.583" endtime="20201030 11:50:13.589"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.593" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:13.592" endtime="20201030 11:50:13.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.595" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:13.594" endtime="20201030 11:50:13.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.590" endtime="20201030 11:50:13.596"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.603" endtime="20201030 11:50:13.906"></status>
</kw>
<msg timestamp="20201030 11:50:13.909" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07616475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076262764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:13.602" endtime="20201030 11:50:13.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.917" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.07616475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.076262764, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:13.910" endtime="20201030 11:50:13.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.919" endtime="20201030 11:50:13.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.598" endtime="20201030 11:50:13.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.596" endtime="20201030 11:50:13.921"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:13.925" level="INFO">${RESULT} = [{'diff': 9.80139999999935e-05}, {'diff': 9.751400000000687e-05}, {'diff': 9.748599999999386e-05}, {'diff': 9.745799999999472e-05}, {'diff': 9.74730000000007e-05}, {'diff': 9.745799999999472e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:13.922" endtime="20201030 11:50:13.926"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:13.930" level="INFO">${OVERHEAD} = {'diff': [9.80139999999935e-05, 9.751400000000687e-05, 9.748599999999386e-05, 9.745799999999472e-05, 9.74730000000007e-05, 9.745799999999472e-05, 9.745899999999419e-05, 9.747200000000122e-05, 9.747200...</msg>
<status status="PASS" starttime="20201030 11:50:13.926" endtime="20201030 11:50:13.930"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.934" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:13.933" endtime="20201030 11:50:13.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.937" level="INFO">VALUE: [9.80139999999935e-05, 9.751400000000687e-05, 9.748599999999386e-05, 9.745799999999472e-05, 9.74730000000007e-05, 9.745799999999472e-05, 9.745899999999419e-05, 9.747200000000122e-05, 9.747200000000122e-05, 9.74730000000007e-05, 9.748700000000721e-05, 9.747199999998735e-05, 9.747300000001458e-05, 9.747300000001458e-05, 9.747199999998735e-05, 9.747199999998735e-05, 9.745799999999472e-05, 9.738900000000328e-05, 9.74720000000151e-05, 9.745899999999419e-05, 9.744400000000208e-05, 9.745899999999419e-05, 9.745799999999472e-05, 9.745799999999472e-05, 9.743100000000893e-05, 9.748600000000773e-05, 0.0001987079999999919, 9.74720000000151e-05, 9.748600000000773e-05, 9.74720000000151e-05, 9.748600000000773e-05, 9.741699999998854e-05, 9.745899999999419e-05, 9.74720000000151e-05, 9.744400000000208e-05, 9.747199999998735e-05, 9.741699999998854e-05, 9.748599999997998e-05, 9.747300000001458e-05, 9.745799999999472e-05, 9.748600000003549e-05, 9.748599999997998e-05, 9.747199999998735e-05, 9.744500000002931e-05, 9.745799999999472e-05, 9.748600000003549e-05, 9.747199999998735e-05, 9.747300000001458e-05, 9.747199999998735e-05, 9.747199999998735e-05]</msg>
<status status="PASS" starttime="20201030 11:50:13.935" endtime="20201030 11:50:13.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.931" endtime="20201030 11:50:13.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.283" endtime="20201030 11:50:13.938"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:13.206" endtime="20201030 11:50:13.939" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:13.947" endtime="20201030 11:50:13.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.945" endtime="20201030 11:50:13.967"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.980" endtime="20201030 11:50:14.000"></status>
</kw>
<msg timestamp="20201030 11:50:14.001" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.979" endtime="20201030 11:50:14.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.003" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.002" endtime="20201030 11:50:14.004"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.006" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:14.004" endtime="20201030 11:50:14.007"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.976" endtime="20201030 11:50:14.007"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:13.974" endtime="20201030 11:50:14.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.973" endtime="20201030 11:50:14.008"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:14.012" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:14.011" endtime="20201030 11:50:14.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.009" endtime="20201030 11:50:14.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.972" endtime="20201030 11:50:14.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.971" endtime="20201030 11:50:14.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.014" endtime="20201030 11:50:14.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.970" endtime="20201030 11:50:14.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.967" endtime="20201030 11:50:14.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.944" endtime="20201030 11:50:14.016"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.025" endtime="20201030 11:50:14.045"></status>
</kw>
<msg timestamp="20201030 11:50:14.046" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.024" endtime="20201030 11:50:14.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.048" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.047" endtime="20201030 11:50:14.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.049" endtime="20201030 11:50:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.021" endtime="20201030 11:50:14.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.019" endtime="20201030 11:50:14.052"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.054" endtime="20201030 11:50:14.057"></status>
</kw>
<msg timestamp="20201030 11:50:14.058" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:14.052" endtime="20201030 11:50:14.058"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.062" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:14.061" endtime="20201030 11:50:14.062"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.064" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:14.063" endtime="20201030 11:50:14.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.058" endtime="20201030 11:50:14.065"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.068" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:14.067" endtime="20201030 11:50:14.069"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.070" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:14.069" endtime="20201030 11:50:14.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.065" endtime="20201030 11:50:14.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.078" endtime="20201030 11:50:14.364"></status>
</kw>
<msg timestamp="20201030 11:50:14.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071633347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.076" endtime="20201030 11:50:14.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.071631806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.071633347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.368" endtime="20201030 11:50:14.375"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.376" endtime="20201030 11:50:14.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.074" endtime="20201030 11:50:14.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.072" endtime="20201030 11:50:14.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.383" level="INFO">${RESULT} = [{'diff': 1.5409999999937973e-06}, {'diff': 1.5550000000003061e-06}, {'diff': 1.5420000000071488e-06}, {'diff': 1.5549999999864283e-06}, {'diff': 1.52800000000064e-06}, {'diff': 1.52800000000064e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:14.379" endtime="20201030 11:50:14.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.388" level="INFO">${OVERHEAD} = {'diff': [1.5409999999937973e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.5549999999864283e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5970000000059548e-06, 1.5...</msg>
<status status="PASS" starttime="20201030 11:50:14.384" endtime="20201030 11:50:14.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.392" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:14.391" endtime="20201030 11:50:14.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.395" level="INFO">VALUE: [1.5409999999937973e-06, 1.5550000000003061e-06, 1.5420000000071488e-06, 1.5549999999864283e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5970000000059548e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.5559999999997798e-06, 1.5000000000015001e-06, 1.52800000000064e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.5410000000076751e-06, 1.5409999999937973e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5420000000071488e-06, 1.5409999999937973e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.5420000000071488e-06, 1.52800000000064e-06, 1.541999999993271e-06, 1.5270000000011663e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5409999999937973e-06, 1.541999999993271e-06, 1.52800000000064e-06, 1.5700000000062886e-06, 1.5269999999872885e-06, 1.5559999999997798e-06, 1.5559999999997798e-06, 1.541999999993271e-06, 1.5410000000076751e-06, 1.4859999999949913e-06, 1.4579999999958515e-06, 1.5410000000076751e-06, 1.5420000000071488e-06, 1.5270000000011663e-06, 1.541999999993271e-06, 1.541999999993271e-06, 1.4859999999949913e-06, 1.541999999993271e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.393" endtime="20201030 11:50:14.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.388" endtime="20201030 11:50:14.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.017" endtime="20201030 11:50:14.396"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:13.941" endtime="20201030 11:50:14.397" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:14.406" endtime="20201030 11:50:14.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.404" endtime="20201030 11:50:14.426"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.440" endtime="20201030 11:50:14.458"></status>
</kw>
<msg timestamp="20201030 11:50:14.459" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.438" endtime="20201030 11:50:14.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.461" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.460" endtime="20201030 11:50:14.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.464" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:14.462" endtime="20201030 11:50:14.465"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:14.435" endtime="20201030 11:50:14.465"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:14.433" endtime="20201030 11:50:14.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.431" endtime="20201030 11:50:14.466"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:14.470" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:14.469" endtime="20201030 11:50:14.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.467" endtime="20201030 11:50:14.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.430" endtime="20201030 11:50:14.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.430" endtime="20201030 11:50:14.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.471" endtime="20201030 11:50:14.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.428" endtime="20201030 11:50:14.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.426" endtime="20201030 11:50:14.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.403" endtime="20201030 11:50:14.474"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.485" endtime="20201030 11:50:14.576"></status>
</kw>
<msg timestamp="20201030 11:50:14.576" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.483" endtime="20201030 11:50:14.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.579" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.577" endtime="20201030 11:50:14.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.580" endtime="20201030 11:50:14.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.480" endtime="20201030 11:50:14.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.477" endtime="20201030 11:50:14.582"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.585" endtime="20201030 11:50:14.587"></status>
</kw>
<msg timestamp="20201030 11:50:14.587" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:14.583" endtime="20201030 11:50:14.587"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.591" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:14.590" endtime="20201030 11:50:14.591"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.593" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:14.592" endtime="20201030 11:50:14.593"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.588" endtime="20201030 11:50:14.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.598" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:14.597" endtime="20201030 11:50:14.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.600" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:14.599" endtime="20201030 11:50:14.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.595" endtime="20201030 11:50:14.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.607" endtime="20201030 11:50:14.900"></status>
</kw>
<msg timestamp="20201030 11:50:14.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073279167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073297056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.605" endtime="20201030 11:50:14.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.911" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.073279167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.073297056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.904" endtime="20201030 11:50:14.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.912" endtime="20201030 11:50:14.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.603" endtime="20201030 11:50:14.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.601" endtime="20201030 11:50:14.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.918" level="INFO">${RESULT} = [{'diff': 1.788899999999316e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.7820000000001723e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.788899999999316e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:14.915" endtime="20201030 11:50:14.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.924" level="INFO">${OVERHEAD} = {'diff': [1.788899999999316e-05, 1.787500000000053e-05, 1.7820000000001723e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.795...</msg>
<status status="PASS" starttime="20201030 11:50:14.919" endtime="20201030 11:50:14.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.928" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:14.927" endtime="20201030 11:50:14.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.930" level="INFO">VALUE: [1.788899999999316e-05, 1.787500000000053e-05, 1.7820000000001723e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.7957999999998475e-05, 1.786099999999402e-05, 1.7902000000000196e-05, 1.78610000000079e-05, 1.781900000000225e-05, 1.7834000000008232e-05, 1.781900000000225e-05, 1.7889000000007038e-05, 1.788899999999316e-05, 1.7846999999987512e-05, 1.787500000000053e-05, 1.788899999999316e-05, 1.790299999999967e-05, 1.790299999999967e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.7861999999993494e-05, 1.786099999999402e-05, 1.790299999999967e-05, 1.784700000000139e-05, 1.788899999999316e-05, 1.787500000000053e-05, 1.781900000000225e-05, 1.787500000000053e-05, 1.790299999999967e-05, 1.783300000000876e-05, 1.7805999999995215e-05, 1.790299999999967e-05, 1.787500000000053e-05, 1.7860999999980143e-05, 1.787500000000053e-05, 1.790299999998579e-05, 1.78610000000079e-05, 1.788899999999316e-05, 1.7847000000015267e-05, 1.779200000001646e-05, 1.787500000000053e-05, 1.78610000000079e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.787500000000053e-05, 1.783299999999488e-05]</msg>
<status status="PASS" starttime="20201030 11:50:14.929" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.924" endtime="20201030 11:50:14.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.475" endtime="20201030 11:50:14.932"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:14.400" endtime="20201030 11:50:14.933" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:14.942" endtime="20201030 11:50:14.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.940" endtime="20201030 11:50:14.961"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.974" endtime="20201030 11:50:14.994"></status>
</kw>
<msg timestamp="20201030 11:50:14.994" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.973" endtime="20201030 11:50:14.994"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.997" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.995" endtime="20201030 11:50:14.997"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.003" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:14.998" endtime="20201030 11:50:15.003"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:14.970" endtime="20201030 11:50:15.004"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:14.968" endtime="20201030 11:50:15.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.967" endtime="20201030 11:50:15.004"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:15.008" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:15.007" endtime="20201030 11:50:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.005" endtime="20201030 11:50:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.966" endtime="20201030 11:50:15.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.965" endtime="20201030 11:50:15.009"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.010" endtime="20201030 11:50:15.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.964" endtime="20201030 11:50:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.962" endtime="20201030 11:50:15.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.939" endtime="20201030 11:50:15.013"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.022" endtime="20201030 11:50:15.308"></status>
</kw>
<msg timestamp="20201030 11:50:15.309" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.020" endtime="20201030 11:50:15.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.314" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.311" endtime="20201030 11:50:15.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.317" endtime="20201030 11:50:15.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.018" endtime="20201030 11:50:15.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.015" endtime="20201030 11:50:15.322"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.327" endtime="20201030 11:50:15.330"></status>
</kw>
<msg timestamp="20201030 11:50:15.331" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:15.324" endtime="20201030 11:50:15.331"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.339" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:15.337" endtime="20201030 11:50:15.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.344" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:15.342" endtime="20201030 11:50:15.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.333" endtime="20201030 11:50:15.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.353" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:15.351" endtime="20201030 11:50:15.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.357" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:15.356" endtime="20201030 11:50:15.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.347" endtime="20201030 11:50:15.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.373" endtime="20201030 11:50:15.672"></status>
</kw>
<msg timestamp="20201030 11:50:15.675" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078222861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078257403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.369" endtime="20201030 11:50:15.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.078222861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.078257403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.676" endtime="20201030 11:50:15.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.684" endtime="20201030 11:50:15.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.364" endtime="20201030 11:50:15.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.361" endtime="20201030 11:50:15.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.692" level="INFO">${RESULT} = [{'diff': 3.454199999999852e-05}, {'diff': 3.4526999999992536e-05}, {'diff': 3.461200000000331e-05}, {'diff': 3.454199999999852e-05}, {'diff': 3.4540999999999045e-05}, {'diff': 3.454199999999852e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:15.689" endtime="20201030 11:50:15.692"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:15.696" level="INFO">${OVERHEAD} = {'diff': [3.454199999999852e-05, 3.4526999999992536e-05, 3.461200000000331e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.454199999999852e-05, 3.455600000000503e-05, 3.452800000000589e-05, 3.45...</msg>
<status status="PASS" starttime="20201030 11:50:15.693" endtime="20201030 11:50:15.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.701" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:15.700" endtime="20201030 11:50:15.701"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.704" level="INFO">VALUE: [3.454199999999852e-05, 3.4526999999992536e-05, 3.461200000000331e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.454199999999852e-05, 3.455600000000503e-05, 3.452800000000589e-05, 3.452799999999201e-05, 3.455500000001943e-05, 3.445799999998722e-05, 3.4554999999991676e-05, 3.456999999998378e-05, 3.4556000000018905e-05, 3.448600000000024e-05, 3.4554999999991676e-05, 3.455599999999115e-05, 3.4556000000018905e-05, 3.4554999999991676e-05, 3.4554999999991676e-05, 3.4556000000018905e-05, 3.449999999999287e-05, 3.4540999999999045e-05, 3.4514000000013256e-05, 3.4540999999999045e-05, 3.455599999999115e-05, 3.458399999997641e-05, 3.463900000000297e-05, 3.454199999999852e-05, 3.454199999999852e-05, 3.4540999999999045e-05, 3.4542000000026274e-05, 3.449999999999287e-05, 0.0001348050000000156, 3.4556000000018905e-05, 3.4527000000006414e-05, 3.452799999997813e-05, 3.451400000004101e-05, 3.454199999997076e-05, 3.454199999997076e-05, 3.4540999999999045e-05, 3.459700000002508e-05, 3.454199999997076e-05, 3.4554999999991676e-05, 3.4542000000026274e-05, 3.46109999999622e-05, 3.4556000000018905e-05, 3.4555999999963394e-05, 3.4556000000018905e-05, 3.4554999999991676e-05]</msg>
<status status="PASS" starttime="20201030 11:50:15.702" endtime="20201030 11:50:15.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.697" endtime="20201030 11:50:15.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.014" endtime="20201030 11:50:15.705"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:14.935" endtime="20201030 11:50:15.706" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:15.716" endtime="20201030 11:50:15.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.714" endtime="20201030 11:50:15.736"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.750" endtime="20201030 11:50:15.769"></status>
</kw>
<msg timestamp="20201030 11:50:15.770" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.748" endtime="20201030 11:50:15.770"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.772" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.771" endtime="20201030 11:50:15.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.776" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:15.774" endtime="20201030 11:50:15.776"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:15.745" endtime="20201030 11:50:15.777"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:15.742" endtime="20201030 11:50:15.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.741" endtime="20201030 11:50:15.777"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:15.781" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:15.781" endtime="20201030 11:50:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.778" endtime="20201030 11:50:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.740" endtime="20201030 11:50:15.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.739" endtime="20201030 11:50:15.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.783" endtime="20201030 11:50:15.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.738" endtime="20201030 11:50:15.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.736" endtime="20201030 11:50:15.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.713" endtime="20201030 11:50:15.786"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.790" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:15.799" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:17.174" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:15.789" endtime="20201030 11:50:17.175"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.177" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:17.176" endtime="20201030 11:50:17.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.787" endtime="20201030 11:50:17.178"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.183" endtime="20201030 11:50:17.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.181" endtime="20201030 11:50:17.203"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.212" endtime="20201030 11:50:17.220"></status>
</kw>
<msg timestamp="20201030 11:50:17.220" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.210" endtime="20201030 11:50:17.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.224" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.222" endtime="20201030 11:50:17.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.225" endtime="20201030 11:50:17.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.207" endtime="20201030 11:50:17.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.205" endtime="20201030 11:50:17.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.236" endtime="20201030 11:50:17.525"></status>
</kw>
<msg timestamp="20201030 11:50:17.528" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018528042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018534597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.234" endtime="20201030 11:50:17.528"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018528042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018534597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.529" endtime="20201030 11:50:17.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.537" endtime="20201030 11:50:17.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.230" endtime="20201030 11:50:17.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.228" endtime="20201030 11:50:17.540"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:17.544" level="INFO">${PHILIP_RES} = [{'diff': 6.554999999998368e-06}, {'diff': 6.5969999999970774e-06}, {'diff': 6.584000000000451e-06}, {'diff': 6.6119999999995904e-06}, {'diff': 6.611000000000117e-06}, {'diff': 6.583000000000977e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:17.541" endtime="20201030 11:50:17.545"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.549" level="INFO">${RESULT} = {'diff': [6.554999999998368e-06, 6.5969999999970774e-06, 6.584000000000451e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.58...</msg>
<status status="PASS" starttime="20201030 11:50:17.545" endtime="20201030 11:50:17.549"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.553" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:17.552" endtime="20201030 11:50:17.554"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.556" level="INFO">VALUE: [6.554999999998368e-06, 6.5969999999970774e-06, 6.584000000000451e-06, 6.6119999999995904e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.5829999999975075e-06, 6.584000000000451e-06, 6.597000000000547e-06, 6.5829999999975075e-06, 6.597000000000547e-06, 6.611000000000117e-06, 6.597000000000547e-06, 6.5980000000000205e-06, 6.583999999996981e-06, 6.597000000000547e-06, 6.639000000002726e-06, 6.597000000000547e-06, 6.583000000000977e-06, 6.583999999996981e-06, 6.6119999999995904e-06, 6.639000000002726e-06, 6.611000000000117e-06, 6.555000000001837e-06, 6.5969999999970774e-06, 6.597000000000547e-06, 6.584000000000451e-06, 6.637999999999783e-06, 6.611000000000117e-06, 6.611000000000117e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.6119999999995904e-06, 6.597000000000547e-06, 6.5969999999970774e-06, 6.583000000000977e-06, 6.597000000000547e-06, 6.638999999999257e-06, 6.5980000000000205e-06, 6.583999999996981e-06, 6.583000000000977e-06, 6.611000000000117e-06, 6.638999999999257e-06, 6.611000000000117e-06, 6.555999999997841e-06, 6.5980000000000205e-06, 6.597000000000547e-06, 6.583000000000977e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.554" endtime="20201030 11:50:17.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.550" endtime="20201030 11:50:17.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.204" endtime="20201030 11:50:17.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.180" endtime="20201030 11:50:17.557"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.560" endtime="20201030 11:50:17.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.558" endtime="20201030 11:50:17.580"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.589" endtime="20201030 11:50:17.598"></status>
</kw>
<msg timestamp="20201030 11:50:17.598" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.588" endtime="20201030 11:50:17.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.601" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.599" endtime="20201030 11:50:17.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.602" endtime="20201030 11:50:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.585" endtime="20201030 11:50:17.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.582" endtime="20201030 11:50:17.605"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.611" endtime="20201030 11:50:17.898"></status>
</kw>
<msg timestamp="20201030 11:50:17.901" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.610" endtime="20201030 11:50:17.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019390431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019403014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.903" endtime="20201030 11:50:17.910"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.911" endtime="20201030 11:50:17.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.607" endtime="20201030 11:50:17.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.605" endtime="20201030 11:50:17.914"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:17.918" level="INFO">${PHILIP_RES} = [{'diff': 1.2583000000000039e-05}, {'diff': 1.2597000000003078e-05}, {'diff': 1.2610999999999178e-05}, {'diff': 1.2597999999999082e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2610999999999178e-...</msg>
<status status="PASS" starttime="20201030 11:50:17.915" endtime="20201030 11:50:17.918"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.923" level="INFO">${RESULT} = {'diff': [1.2583000000000039e-05, 1.2597000000003078e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2625000000002218e-05...</msg>
<status status="PASS" starttime="20201030 11:50:17.919" endtime="20201030 11:50:17.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.928" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:17.927" endtime="20201030 11:50:17.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.930" level="INFO">VALUE: [1.2583000000000039e-05, 1.2597000000003078e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2596999999999609e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2583000000000039e-05, 1.2597000000003078e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2625000000002218e-05, 1.2624999999998748e-05, 1.2638999999998318e-05, 1.2638000000002314e-05, 1.2611999999998652e-05, 1.2667000000000928e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2569000000000469e-05, 1.2610999999999178e-05, 1.2610999999999178e-05, 1.2597999999999082e-05, 1.2583000000000039e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2597000000003078e-05, 1.2597999999999082e-05, 1.2514000000001663e-05, 1.2583000000000039e-05, 1.2610999999999178e-05, 1.2596999999999609e-05, 1.2596999999999609e-05, 1.2583999999999512e-05, 1.2597000000003078e-05, 1.2624999999998748e-05, 1.2596999999999609e-05, 1.2625000000002218e-05, 1.2610999999999178e-05, 1.2666999999997458e-05, 1.2624999999998748e-05, 1.2583000000000039e-05]</msg>
<status status="PASS" starttime="20201030 11:50:17.929" endtime="20201030 11:50:17.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.924" endtime="20201030 11:50:17.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.580" endtime="20201030 11:50:17.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.558" endtime="20201030 11:50:17.932"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:17.934" endtime="20201030 11:50:17.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.933" endtime="20201030 11:50:17.954"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.963" endtime="20201030 11:50:17.971"></status>
</kw>
<msg timestamp="20201030 11:50:17.972" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.961" endtime="20201030 11:50:17.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.974" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.973" endtime="20201030 11:50:17.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.976" endtime="20201030 11:50:17.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.959" endtime="20201030 11:50:17.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.957" endtime="20201030 11:50:17.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.985" endtime="20201030 11:50:18.272"></status>
</kw>
<msg timestamp="20201030 11:50:18.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.983" endtime="20201030 11:50:18.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018598431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018617931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.276" endtime="20201030 11:50:18.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.285" endtime="20201030 11:50:18.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.981" endtime="20201030 11:50:18.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.979" endtime="20201030 11:50:18.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:18.291" level="INFO">${PHILIP_RES} = [{'diff': 1.9500000000002154e-05}, {'diff': 1.9528000000001294e-05}, {'diff': 1.9542000000000864e-05}, {'diff': 1.9513999999998255e-05}, {'diff': 1.955500000000096e-05}, {'diff': 1.956899999999706e-05...</msg>
<status status="PASS" starttime="20201030 11:50:18.288" endtime="20201030 11:50:18.292"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.297" level="INFO">${RESULT} = {'diff': [1.9500000000002154e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 1.9513999999998255e-05, 1.955500000000096e-05, 1.956899999999706e-05, 1.954099999999792e-05, 1.95830000000001e-05, 1.9...</msg>
<status status="PASS" starttime="20201030 11:50:18.293" endtime="20201030 11:50:18.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.301" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:18.300" endtime="20201030 11:50:18.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.304" level="INFO">VALUE: [1.9500000000002154e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 1.9513999999998255e-05, 1.955500000000096e-05, 1.956899999999706e-05, 1.954099999999792e-05, 1.95830000000001e-05, 1.954099999999792e-05, 1.959699999999967e-05, 1.955500000000096e-05, 1.954100000000139e-05, 1.959699999999967e-05, 1.955500000000096e-05, 1.954099999999792e-05, 1.954099999999792e-05, 1.956900000000053e-05, 1.954099999999792e-05, 1.954099999999792e-05, 1.9542000000000864e-05, 1.9528000000001294e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 1.9584000000003043e-05, 1.9527999999997825e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 1.9556000000000434e-05, 1.9542000000000864e-05, 1.9542000000000864e-05, 1.9499999999998685e-05, 1.9570000000000004e-05, 1.9527999999997825e-05, 1.9570000000000004e-05, 1.9555999999996965e-05, 1.9527999999997825e-05, 1.9528000000001294e-05, 1.9556000000000434e-05, 1.9500000000002154e-05, 1.9542000000000864e-05, 1.9528000000001294e-05, 1.9556000000000434e-05, 1.956899999999706e-05, 1.9513999999998255e-05, 1.9541999999997395e-05, 1.945900000000292e-05, 1.9542000000000864e-05, 1.956900000000053e-05, 1.959699999999967e-05]</msg>
<status status="PASS" starttime="20201030 11:50:18.303" endtime="20201030 11:50:18.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.298" endtime="20201030 11:50:18.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.955" endtime="20201030 11:50:18.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.932" endtime="20201030 11:50:18.306"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:18.308" endtime="20201030 11:50:18.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.307" endtime="20201030 11:50:18.328"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.337" endtime="20201030 11:50:18.345"></status>
</kw>
<msg timestamp="20201030 11:50:18.346" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.336" endtime="20201030 11:50:18.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.349" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.347" endtime="20201030 11:50:18.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.350" endtime="20201030 11:50:18.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.332" endtime="20201030 11:50:18.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.330" endtime="20201030 11:50:18.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.361" endtime="20201030 11:50:18.648"></status>
</kw>
<msg timestamp="20201030 11:50:18.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018439333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.359" endtime="20201030 11:50:18.651"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.659" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018439333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018466694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.652" endtime="20201030 11:50:18.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.661" endtime="20201030 11:50:18.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.356" endtime="20201030 11:50:18.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.354" endtime="20201030 11:50:18.663"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:18.667" level="INFO">${PHILIP_RES} = [{'diff': 2.7361000000000052e-05}, {'diff': 2.7374999999999622e-05}, {'diff': 2.741699999999833e-05}, {'diff': 2.7430000000001897e-05}, {'diff': 2.743100000000137e-05}, {'diff': 2.7444000000001467e-05...</msg>
<status status="PASS" starttime="20201030 11:50:18.664" endtime="20201030 11:50:18.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.672" level="INFO">${RESULT} = {'diff': [2.7361000000000052e-05, 2.7374999999999622e-05, 2.741699999999833e-05, 2.7430000000001897e-05, 2.743100000000137e-05, 2.7444000000001467e-05, 2.7415999999998858e-05, 2.740299999999876e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:50:18.668" endtime="20201030 11:50:18.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.676" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:18.675" endtime="20201030 11:50:18.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.679" level="INFO">VALUE: [2.7361000000000052e-05, 2.7374999999999622e-05, 2.741699999999833e-05, 2.7430000000001897e-05, 2.743100000000137e-05, 2.7444000000001467e-05, 2.7415999999998858e-05, 2.740299999999876e-05, 2.74170000000018e-05, 2.7416000000002327e-05, 2.743100000000137e-05, 2.7443999999997998e-05, 2.741699999999833e-05, 2.7458000000001037e-05, 2.7444000000001467e-05, 2.7388999999999192e-05, 2.740299999999876e-05, 2.7415999999998858e-05, 2.740299999999876e-05, 2.740300000000223e-05, 2.7458000000001037e-05, 2.74309999999979e-05, 2.7387999999999718e-05, 2.740300000000223e-05, 2.7486000000000177e-05, 2.7415999999998858e-05, 2.7374999999999622e-05, 2.74309999999979e-05, 2.7416000000002327e-05, 2.74170000000018e-05, 2.74170000000018e-05, 2.7429999999998428e-05, 2.740299999999876e-05, 2.7387999999999718e-05, 2.74170000000018e-05, 2.7388999999999192e-05, 2.7401999999999288e-05, 2.741699999999833e-05, 2.743100000000137e-05, 2.7430000000001897e-05, 2.74170000000018e-05, 2.7429999999998428e-05, 2.7415999999998858e-05, 2.74170000000018e-05, 2.7402000000002757e-05, 2.740299999999876e-05, 2.741699999999833e-05, 2.7401999999999288e-05, 2.743100000000137e-05, 2.743100000000137e-05]</msg>
<status status="PASS" starttime="20201030 11:50:18.677" endtime="20201030 11:50:18.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.673" endtime="20201030 11:50:18.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.329" endtime="20201030 11:50:18.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.306" endtime="20201030 11:50:18.680"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:18.683" endtime="20201030 11:50:18.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.681" endtime="20201030 11:50:18.703"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.712" endtime="20201030 11:50:18.723"></status>
</kw>
<msg timestamp="20201030 11:50:18.723" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.710" endtime="20201030 11:50:18.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.726" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.724" endtime="20201030 11:50:18.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.727" endtime="20201030 11:50:18.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.708" endtime="20201030 11:50:18.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.706" endtime="20201030 11:50:18.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.736" endtime="20201030 11:50:19.023"></status>
</kw>
<msg timestamp="20201030 11:50:19.026" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.735" endtime="20201030 11:50:19.026"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.034" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019427222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019463417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.027" endtime="20201030 11:50:19.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.036" endtime="20201030 11:50:19.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.732" endtime="20201030 11:50:19.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.730" endtime="20201030 11:50:19.038"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:19.042" level="INFO">${PHILIP_RES} = [{'diff': 3.619499999999928e-05}, {'diff': 3.626400000000113e-05}, {'diff': 3.623599999999852e-05}, {'diff': 3.622199999999895e-05}, {'diff': 3.623600000000199e-05}, {'diff': 3.623600000000199e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:19.039" endtime="20201030 11:50:19.043"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.047" level="INFO">${RESULT} = {'diff': [3.619499999999928e-05, 3.626400000000113e-05, 3.623599999999852e-05, 3.622199999999895e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.623599999999852e-05, 3.6236...</msg>
<status status="PASS" starttime="20201030 11:50:19.043" endtime="20201030 11:50:19.047"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.051" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:19.050" endtime="20201030 11:50:19.052"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.054" level="INFO">VALUE: [3.619499999999928e-05, 3.626400000000113e-05, 3.623599999999852e-05, 3.622199999999895e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.623599999999852e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.622299999999842e-05, 3.61520000000011e-05, 3.62780000000007e-05, 3.6167000000000143e-05, 3.623599999999852e-05, 3.62780000000007e-05, 3.616600000000067e-05, 3.623599999999852e-05, 3.622199999999895e-05, 3.623600000000199e-05, 3.625000000000156e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.620899999999885e-05, 3.622299999999842e-05, 3.623600000000199e-05, 3.623600000000199e-05, 3.622200000000242e-05, 3.622299999999842e-05, 3.622199999999895e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.623599999999852e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.624999999999809e-05, 3.624999999999809e-05, 3.623600000000199e-05, 3.619499999999928e-05, 3.622199999999895e-05, 3.623600000000199e-05, 3.622200000000242e-05, 3.623600000000199e-05, 3.624999999999809e-05, 3.625000000000156e-05, 3.623600000000199e-05, 3.623599999999852e-05, 3.6276999999997755e-05, 3.62780000000007e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.052" endtime="20201030 11:50:19.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.048" endtime="20201030 11:50:19.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.704" endtime="20201030 11:50:19.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.681" endtime="20201030 11:50:19.056"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.059" endtime="20201030 11:50:19.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.057" endtime="20201030 11:50:19.079"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.088" endtime="20201030 11:50:19.098"></status>
</kw>
<msg timestamp="20201030 11:50:19.098" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.086" endtime="20201030 11:50:19.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.101" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.099" endtime="20201030 11:50:19.101"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.102" endtime="20201030 11:50:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.083" endtime="20201030 11:50:19.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.081" endtime="20201030 11:50:19.105"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.111" endtime="20201030 11:50:19.398"></status>
</kw>
<msg timestamp="20201030 11:50:19.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01852675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:19.110" endtime="20201030 11:50:19.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018480819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01852675, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:19.402" endtime="20201030 11:50:19.409"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.410" endtime="20201030 11:50:19.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.107" endtime="20201030 11:50:19.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.105" endtime="20201030 11:50:19.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:19.417" level="INFO">${PHILIP_RES} = [{'diff': 4.5931000000002525e-05}, {'diff': 4.592999999999958e-05}, {'diff': 4.595799999999872e-05}, {'diff': 4.592999999999958e-05}, {'diff': 4.597199999999829e-05}, {'diff': 4.598600000000133e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:19.414" endtime="20201030 11:50:19.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.422" level="INFO">${RESULT} = {'diff': [4.5931000000002525e-05, 4.592999999999958e-05, 4.595799999999872e-05, 4.592999999999958e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.5973000000001235e-05, 4.598600000000133e-05, 4.60...</msg>
<status status="PASS" starttime="20201030 11:50:19.418" endtime="20201030 11:50:19.423"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.427" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:19.426" endtime="20201030 11:50:19.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.429" level="INFO">VALUE: [4.5931000000002525e-05, 4.592999999999958e-05, 4.595799999999872e-05, 4.592999999999958e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.5973000000001235e-05, 4.598600000000133e-05, 4.601400000000047e-05, 4.60000000000009e-05, 4.602800000000004e-05, 4.598599999999786e-05, 4.592999999999958e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.60000000000009e-05, 4.601400000000047e-05, 4.5959000000001665e-05, 4.60000000000009e-05, 4.5973000000001235e-05, 4.598600000000133e-05, 4.598599999999786e-05, 4.599999999999743e-05, 4.598600000000133e-05, 4.598599999999786e-05, 4.60000000000009e-05, 4.598600000000133e-05, 4.598600000000133e-05, 4.5987000000000805e-05, 4.598599999999786e-05, 4.598599999999786e-05, 4.598599999999786e-05, 4.599999999999743e-05, 4.598600000000133e-05, 4.60000000000009e-05, 4.60000000000009e-05, 4.602800000000004e-05, 4.5973000000001235e-05, 4.602800000000004e-05, 4.5972999999997766e-05, 4.597199999999829e-05, 4.597199999999829e-05, 4.598600000000133e-05, 4.598600000000133e-05, 4.601400000000047e-05, 4.598600000000133e-05, 4.601400000000047e-05, 4.598600000000133e-05, 4.599999999999743e-05, 4.5916999999999486e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.428" endtime="20201030 11:50:19.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.423" endtime="20201030 11:50:19.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.080" endtime="20201030 11:50:19.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.057" endtime="20201030 11:50:19.431"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.434" endtime="20201030 11:50:19.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.432" endtime="20201030 11:50:19.454"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.462" endtime="20201030 11:50:19.473"></status>
</kw>
<msg timestamp="20201030 11:50:19.474" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.461" endtime="20201030 11:50:19.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.476" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.475" endtime="20201030 11:50:19.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.477" endtime="20201030 11:50:19.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.458" endtime="20201030 11:50:19.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.456" endtime="20201030 11:50:19.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.487" endtime="20201030 11:50:19.772"></status>
</kw>
<msg timestamp="20201030 11:50:19.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018014056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.485" endtime="20201030 11:50:19.776"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018014056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.776" endtime="20201030 11:50:19.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.785" endtime="20201030 11:50:19.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.482" endtime="20201030 11:50:19.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.480" endtime="20201030 11:50:19.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:19.793" level="INFO">${PHILIP_RES} = [{'diff': 5.6652000000000785e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.6679999999999925e-05}, {'diff': 5.6679999999999925e-05}, {'diff': 5.665300000000026e-05}, {'diff': 5.6764000000000814e-05...</msg>
<status status="PASS" starttime="20201030 11:50:19.789" endtime="20201030 11:50:19.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.797" level="INFO">${RESULT} = {'diff': [5.6652000000000785e-05, 5.665300000000026e-05, 5.6679999999999925e-05, 5.6679999999999925e-05, 5.665300000000026e-05, 5.6764000000000814e-05, 5.665300000000026e-05, 5.6750000000001244e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:50:19.794" endtime="20201030 11:50:19.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.801" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:19.800" endtime="20201030 11:50:19.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.804" level="INFO">VALUE: [5.6652000000000785e-05, 5.665300000000026e-05, 5.6679999999999925e-05, 5.6679999999999925e-05, 5.665300000000026e-05, 5.6764000000000814e-05, 5.665300000000026e-05, 5.6750000000001244e-05, 5.6679999999999925e-05, 5.66809999999994e-05, 5.666699999999983e-05, 5.665300000000026e-05, 5.666699999999983e-05, 5.6666000000000355e-05, 5.668100000000287e-05, 5.666699999999983e-05, 5.66809999999994e-05, 5.663899999999722e-05, 5.6679999999999925e-05, 5.663900000000069e-05, 5.6679999999999925e-05, 5.669499999999897e-05, 5.666699999999983e-05, 5.6666000000000355e-05, 5.665300000000026e-05, 5.6679999999999925e-05, 5.6693999999999495e-05, 5.666699999999983e-05, 5.6680000000003394e-05, 5.66809999999994e-05, 5.6679999999999925e-05, 5.6666000000000355e-05, 5.66809999999994e-05, 5.661100000000155e-05, 5.66809999999994e-05, 5.665300000000026e-05, 5.6693999999999495e-05, 5.666699999999983e-05, 5.6665999999996886e-05, 5.6749999999997774e-05, 5.66809999999994e-05, 5.6693999999999495e-05, 5.668100000000287e-05, 5.6679999999999925e-05, 5.66809999999994e-05, 5.66809999999994e-05, 5.6666000000000355e-05, 5.66809999999994e-05, 5.659799999999798e-05, 5.666699999999983e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.803" endtime="20201030 11:50:19.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.798" endtime="20201030 11:50:19.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.454" endtime="20201030 11:50:19.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.431" endtime="20201030 11:50:19.806"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:19.808" endtime="20201030 11:50:19.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.807" endtime="20201030 11:50:19.828"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.837" endtime="20201030 11:50:19.848"></status>
</kw>
<msg timestamp="20201030 11:50:19.849" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.835" endtime="20201030 11:50:19.849"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.851" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.850" endtime="20201030 11:50:19.851"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.852" endtime="20201030 11:50:19.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.833" endtime="20201030 11:50:19.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.831" endtime="20201030 11:50:19.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.865" endtime="20201030 11:50:20.151"></status>
</kw>
<msg timestamp="20201030 11:50:20.155" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017937, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:19.863" endtime="20201030 11:50:20.155"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017937, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018005264, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:20.156" endtime="20201030 11:50:20.164"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.165" endtime="20201030 11:50:20.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.860" endtime="20201030 11:50:20.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.859" endtime="20201030 11:50:20.167"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:20.171" level="INFO">${PHILIP_RES} = [{'diff': 6.826399999999844e-05}, {'diff': 6.829100000000157e-05}, {'diff': 6.829100000000157e-05}, {'diff': 6.830600000000062e-05}, {'diff': 6.829200000000105e-05}, {'diff': 6.829200000000105e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:20.168" endtime="20201030 11:50:20.172"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.176" level="INFO">${RESULT} = {'diff': [6.826399999999844e-05, 6.829100000000157e-05, 6.829100000000157e-05, 6.830600000000062e-05, 6.829200000000105e-05, 6.829200000000105e-05, 6.830499999999767e-05, 6.830599999999715e-05, 6.8292...</msg>
<status status="PASS" starttime="20201030 11:50:20.172" endtime="20201030 11:50:20.176"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.180" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:20.179" endtime="20201030 11:50:20.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.183" level="INFO">VALUE: [6.826399999999844e-05, 6.829100000000157e-05, 6.829100000000157e-05, 6.830600000000062e-05, 6.829200000000105e-05, 6.829200000000105e-05, 6.830499999999767e-05, 6.830599999999715e-05, 6.829200000000105e-05, 6.82909999999981e-05, 6.830500000000114e-05, 6.830600000000062e-05, 6.827800000000148e-05, 6.829100000000157e-05, 6.829200000000105e-05, 6.829200000000105e-05, 6.830600000000062e-05, 6.82909999999981e-05, 6.830599999999715e-05, 6.831899999999724e-05, 6.829200000000105e-05, 6.830500000000114e-05, 6.831900000000071e-05, 6.829200000000105e-05, 6.831900000000071e-05, 6.82909999999981e-05, 6.834699999999985e-05, 6.829200000000105e-05, 6.829199999999758e-05, 6.82909999999981e-05, 6.830600000000062e-05, 6.830600000000062e-05, 6.829100000000157e-05, 6.827699999999853e-05, 6.829200000000105e-05, 6.827800000000148e-05, 6.830500000000114e-05, 6.829199999999758e-05, 6.829199999999758e-05, 6.832000000000019e-05, 6.827699999999853e-05, 6.827799999999801e-05, 6.830600000000062e-05, 6.827800000000148e-05, 6.830500000000114e-05, 6.830600000000062e-05, 6.834699999999985e-05, 6.830500000000114e-05, 6.836099999999942e-05, 6.827799999999801e-05]</msg>
<status status="PASS" starttime="20201030 11:50:20.181" endtime="20201030 11:50:20.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.177" endtime="20201030 11:50:20.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.829" endtime="20201030 11:50:20.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.806" endtime="20201030 11:50:20.186"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.188" endtime="20201030 11:50:20.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.187" endtime="20201030 11:50:20.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.216" endtime="20201030 11:50:20.229"></status>
</kw>
<msg timestamp="20201030 11:50:20.229" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.215" endtime="20201030 11:50:20.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.232" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.230" endtime="20201030 11:50:20.232"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.233" endtime="20201030 11:50:20.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.212" endtime="20201030 11:50:20.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.210" endtime="20201030 11:50:20.236"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.242" endtime="20201030 11:50:20.529"></status>
</kw>
<msg timestamp="20201030 11:50:20.532" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.241" endtime="20201030 11:50:20.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017886333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017967139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.533" endtime="20201030 11:50:20.541"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.542" endtime="20201030 11:50:20.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.238" endtime="20201030 11:50:20.544"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.236" endtime="20201030 11:50:20.544"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:20.548" level="INFO">${PHILIP_RES} = [{'diff': 8.080599999999924e-05}, {'diff': 8.086100000000151e-05}, {'diff': 8.084699999999848e-05}, {'diff': 8.087499999999762e-05}, {'diff': 8.09169999999998e-05}, {'diff': 8.090300000000022e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:20.545" endtime="20201030 11:50:20.549"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.554" level="INFO">${RESULT} = {'diff': [8.080599999999924e-05, 8.086100000000151e-05, 8.084699999999848e-05, 8.087499999999762e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.087500000000108e-05, 8.086099999999805e-05, 8.08609...</msg>
<status status="PASS" starttime="20201030 11:50:20.549" endtime="20201030 11:50:20.554"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.558" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:20.557" endtime="20201030 11:50:20.559"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.561" level="INFO">VALUE: [8.080599999999924e-05, 8.086100000000151e-05, 8.084699999999848e-05, 8.087499999999762e-05, 8.09169999999998e-05, 8.090300000000022e-05, 8.087500000000108e-05, 8.086099999999805e-05, 8.086099999999805e-05, 8.086200000000099e-05, 8.084699999999848e-05, 8.08329999999989e-05, 8.086100000000151e-05, 8.084700000000195e-05, 8.090200000000075e-05, 8.084699999999848e-05, 8.084799999999795e-05, 8.086100000000151e-05, 8.086100000000151e-05, 8.090200000000075e-05, 8.080499999999977e-05, 8.087500000000108e-05, 8.086100000000151e-05, 8.087499999999762e-05, 8.086099999999805e-05, 8.09169999999998e-05, 8.086100000000151e-05, 8.087499999999762e-05, 8.086200000000099e-05, 8.084799999999795e-05, 8.086100000000151e-05, 8.087500000000108e-05, 8.088899999999719e-05, 8.086100000000151e-05, 8.086100000000151e-05, 8.084699999999848e-05, 8.086099999999805e-05, 8.086100000000151e-05, 8.086100000000151e-05, 8.087500000000108e-05, 8.087499999999762e-05, 8.087500000000108e-05, 8.086100000000151e-05, 8.090200000000075e-05, 8.087499999999762e-05, 8.086200000000099e-05, 8.07780000000001e-05, 8.088900000000065e-05, 8.086099999999805e-05, 8.086099999999805e-05]</msg>
<status status="PASS" starttime="20201030 11:50:20.559" endtime="20201030 11:50:20.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.555" endtime="20201030 11:50:20.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.209" endtime="20201030 11:50:20.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.186" endtime="20201030 11:50:20.563"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.565" endtime="20201030 11:50:20.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.564" endtime="20201030 11:50:20.585"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.594" endtime="20201030 11:50:20.607"></status>
</kw>
<msg timestamp="20201030 11:50:20.607" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.592" endtime="20201030 11:50:20.608"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.610" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.608" endtime="20201030 11:50:20.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.611" endtime="20201030 11:50:20.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.589" endtime="20201030 11:50:20.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.587" endtime="20201030 11:50:20.614"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.620" endtime="20201030 11:50:20.907"></status>
</kw>
<msg timestamp="20201030 11:50:20.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018079042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.619" endtime="20201030 11:50:20.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018079042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018173347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.911" endtime="20201030 11:50:20.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.919" endtime="20201030 11:50:20.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.616" endtime="20201030 11:50:20.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.614" endtime="20201030 11:50:20.923"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:20.927" level="INFO">${PHILIP_RES} = [{'diff': 9.430499999999939e-05}, {'diff': 9.434700000000157e-05}, {'diff': 9.438900000000028e-05}, {'diff': 9.436100000000114e-05}, {'diff': 9.441699999999942e-05}, {'diff': 9.437499999999724e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:20.924" endtime="20201030 11:50:20.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.931" level="INFO">${RESULT} = {'diff': [9.430499999999939e-05, 9.434700000000157e-05, 9.438900000000028e-05, 9.436100000000114e-05, 9.441699999999942e-05, 9.437499999999724e-05, 9.4333999999998e-05, 9.436100000000114e-05, 9.437500...</msg>
<status status="PASS" starttime="20201030 11:50:20.928" endtime="20201030 11:50:20.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.935" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:20.934" endtime="20201030 11:50:20.936"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.938" level="INFO">VALUE: [9.430499999999939e-05, 9.434700000000157e-05, 9.438900000000028e-05, 9.436100000000114e-05, 9.441699999999942e-05, 9.437499999999724e-05, 9.4333999999998e-05, 9.436100000000114e-05, 9.437500000000071e-05, 9.434700000000157e-05, 9.438900000000028e-05, 9.43469999999981e-05, 9.436099999999767e-05, 9.437499999999724e-05, 9.436100000000114e-05, 9.431899999999896e-05, 9.443099999999899e-05, 9.436099999999767e-05, 9.43469999999981e-05, 9.434800000000104e-05, 9.43880000000008e-05, 9.431999999999843e-05, 9.436100000000114e-05, 9.433400000000147e-05, 9.442999999999951e-05, 9.438900000000028e-05, 9.436100000000114e-05, 9.436100000000114e-05, 9.436100000000114e-05, 9.436099999999767e-05, 9.433299999999853e-05, 9.437500000000071e-05, 9.436100000000114e-05, 9.436100000000114e-05, 9.436200000000061e-05, 9.436200000000061e-05, 9.436099999999767e-05, 9.437499999999724e-05, 9.440200000000037e-05, 9.436100000000114e-05, 9.440299999999985e-05, 9.436100000000114e-05, 9.436099999999767e-05, 9.437499999999724e-05, 9.438900000000028e-05, 9.438900000000028e-05, 9.434700000000157e-05, 9.431900000000243e-05, 9.443099999999899e-05, 9.436099999999767e-05]</msg>
<status status="PASS" starttime="20201030 11:50:20.936" endtime="20201030 11:50:20.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.932" endtime="20201030 11:50:20.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.586" endtime="20201030 11:50:20.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.563" endtime="20201030 11:50:20.940"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:20.942" endtime="20201030 11:50:20.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.940" endtime="20201030 11:50:20.962"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.970" endtime="20201030 11:50:20.984"></status>
</kw>
<msg timestamp="20201030 11:50:20.984" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.968" endtime="20201030 11:50:20.984"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.987" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.985" endtime="20201030 11:50:20.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.988" endtime="20201030 11:50:20.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.966" endtime="20201030 11:50:20.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.964" endtime="20201030 11:50:20.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.998" endtime="20201030 11:50:21.283"></status>
</kw>
<msg timestamp="20201030 11:50:21.286" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.996" endtime="20201030 11:50:21.286"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.294" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017746472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017855222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.287" endtime="20201030 11:50:21.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.295" endtime="20201030 11:50:21.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.993" endtime="20201030 11:50:21.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.992" endtime="20201030 11:50:21.298"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:21.301" level="INFO">${PHILIP_RES} = [{'diff': 0.00010875000000000121}, {'diff': 0.0001087219999999986}, {'diff': 0.00010881899999999958}, {'diff': 0.00010875000000000121}, {'diff': 0.00010882000000000253}, {'diff': 0.0001088469999999987...</msg>
<status status="PASS" starttime="20201030 11:50:21.298" endtime="20201030 11:50:21.302"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.307" level="INFO">${RESULT} = {'diff': [0.00010875000000000121, 0.0001087219999999986, 0.00010881899999999958, 0.00010875000000000121, 0.00010882000000000253, 0.00010884699999999872, 0.00010886099999999829, 0.00010880599999999949,...</msg>
<status status="PASS" starttime="20201030 11:50:21.303" endtime="20201030 11:50:21.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.316" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:21.314" endtime="20201030 11:50:21.317"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.321" level="INFO">VALUE: [0.00010875000000000121, 0.0001087219999999986, 0.00010881899999999958, 0.00010875000000000121, 0.00010882000000000253, 0.00010884699999999872, 0.00010886099999999829, 0.00010880599999999949, 0.00010883399999999863, 0.00010880500000000001, 0.00010879099999999697, 0.00010879199999999992, 0.00010883399999999863, 0.00010879199999999992, 0.00010880500000000001, 0.00010881899999999958, 0.00010880599999999949, 0.00010880600000000296, 0.00010884699999999872, 0.00010879100000000044, 0.00010880599999999949, 0.00010880599999999949, 0.00010880599999999949, 0.00010880500000000001, 0.00010880500000000001, 0.00010880599999999949, 0.00010881999999999906, 0.00010887500000000133, 0.00010879100000000044, 0.00010877799999999688, 0.00010877800000000035, 0.00010876400000000078, 0.00010884699999999872, 0.00010879100000000044, 0.00010873699999999764, 0.00010880599999999949, 0.00010879200000000339, 0.00010880500000000001, 0.00010880500000000001, 0.00010880599999999949, 0.00010886099999999829, 0.00010881899999999958, 0.00010881899999999958, 0.00010880600000000296, 0.00010880599999999949, 0.00010879199999999992, 0.00010880500000000001, 0.00010881899999999958, 0.00010879199999999992, 0.00010876399999999731]</msg>
<status status="PASS" starttime="20201030 11:50:21.318" endtime="20201030 11:50:21.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.309" endtime="20201030 11:50:21.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.962" endtime="20201030 11:50:21.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.940" endtime="20201030 11:50:21.327"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.332" endtime="20201030 11:50:21.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.329" endtime="20201030 11:50:21.354"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.371" endtime="20201030 11:50:21.389"></status>
</kw>
<msg timestamp="20201030 11:50:21.390" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.368" endtime="20201030 11:50:21.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.395" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.392" endtime="20201030 11:50:21.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.398" endtime="20201030 11:50:21.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.362" endtime="20201030 11:50:21.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.358" endtime="20201030 11:50:21.403"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.416" endtime="20201030 11:50:21.702"></status>
</kw>
<msg timestamp="20201030 11:50:21.705" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0299585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:21.414" endtime="20201030 11:50:21.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.712" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.029834375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0299585, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:21.706" endtime="20201030 11:50:21.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.714" endtime="20201030 11:50:21.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.408" endtime="20201030 11:50:21.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.405" endtime="20201030 11:50:21.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:21.720" level="INFO">${PHILIP_RES} = [{'diff': 0.00012412499999999924}, {'diff': 0.00012418100000000099}, {'diff': 0.00012415300000000185}, {'diff': 0.00012416699999999795}, {'diff': 0.0001241800000000015}, {'diff': 0.0001241800000000015...</msg>
<status status="PASS" starttime="20201030 11:50:21.717" endtime="20201030 11:50:21.720"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.725" level="INFO">${RESULT} = {'diff': [0.00012412499999999924, 0.00012418100000000099, 0.00012415300000000185, 0.00012416699999999795, 0.0001241800000000015, 0.0001241800000000015, 0.00012417999999999804, 0.00012417999999999804, ...</msg>
<status status="PASS" starttime="20201030 11:50:21.721" endtime="20201030 11:50:21.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.729" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:21.728" endtime="20201030 11:50:21.730"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.732" level="INFO">VALUE: [0.00012412499999999924, 0.00012418100000000099, 0.00012415300000000185, 0.00012416699999999795, 0.0001241800000000015, 0.0001241800000000015, 0.00012417999999999804, 0.00012417999999999804, 0.00012416700000000142, 0.00012418100000000099, 0.00012416700000000142, 0.00012418100000000099, 0.00012419399999999414, 0.00012416600000000194, 0.00012416600000000194, 0.00012419500000000055, 0.00012420900000000012, 0.00012416700000000142, 0.00012418099999999405, 0.00012418100000000099, 0.0001241250000000027, 0.00012419400000000108, 0.0001241800000000015, 0.00012419500000000055, 0.0001241250000000027, 0.0001241529999999949, 0.00012416700000000142, 0.00012419400000000108, 0.0001241800000000015, 0.0001241800000000015, 0.0001241800000000015, 0.00012416699999999448, 0.00012418100000000099, 0.00012418100000000099, 0.00012418100000000099, 0.0001241800000000015, 0.0001241800000000015, 0.0001241800000000015, 0.00012419499999999362, 0.00012418100000000099, 0.00012418100000000099, 0.00012419400000000108, 0.00012416700000000142, 0.00012415200000000237, 0.000124165999999995, 0.00012419399999999414, 0.00012418100000000099, 0.00012416700000000142, 0.00012418100000000099, 0.00012415300000000185]</msg>
<status status="PASS" starttime="20201030 11:50:21.730" endtime="20201030 11:50:21.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.726" endtime="20201030 11:50:21.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.355" endtime="20201030 11:50:21.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.327" endtime="20201030 11:50:21.733"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.736" endtime="20201030 11:50:21.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.734" endtime="20201030 11:50:21.756"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.764" endtime="20201030 11:50:21.779"></status>
</kw>
<msg timestamp="20201030 11:50:21.779" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.762" endtime="20201030 11:50:21.780"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.782" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.780" endtime="20201030 11:50:21.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.783" endtime="20201030 11:50:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.760" endtime="20201030 11:50:21.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.758" endtime="20201030 11:50:21.786"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.792" endtime="20201030 11:50:22.078"></status>
</kw>
<msg timestamp="20201030 11:50:22.081" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017608958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017749417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.790" endtime="20201030 11:50:22.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.088" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017608958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017749417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.082" endtime="20201030 11:50:22.089"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.090" endtime="20201030 11:50:22.092"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.788" endtime="20201030 11:50:22.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.786" endtime="20201030 11:50:22.093"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:22.097" level="INFO">${PHILIP_RES} = [{'diff': 0.00014045899999999903}, {'diff': 0.0001404859999999987}, {'diff': 0.00014050000000000173}, {'diff': 0.00014049999999999827}, {'diff': 0.00014052699999999793}, {'diff': 0.0001404859999999987...</msg>
<status status="PASS" starttime="20201030 11:50:22.094" endtime="20201030 11:50:22.097"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.101" level="INFO">${RESULT} = {'diff': [0.00014045899999999903, 0.0001404859999999987, 0.00014050000000000173, 0.00014049999999999827, 0.00014052699999999793, 0.0001404859999999987, 0.0001404720000000026, 0.00014045799999999956, 0...</msg>
<status status="PASS" starttime="20201030 11:50:22.098" endtime="20201030 11:50:22.101"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.105" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:22.104" endtime="20201030 11:50:22.106"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.108" level="INFO">VALUE: [0.00014045899999999903, 0.0001404859999999987, 0.00014050000000000173, 0.00014049999999999827, 0.00014052699999999793, 0.0001404859999999987, 0.0001404720000000026, 0.00014045799999999956, 0.0001405140000000013, 0.0001404309999999999, 0.0001405140000000013, 0.00014054200000000044, 0.00014044399999999999, 0.00014049999999999827, 0.00014050000000000173, 0.00014049999999999827, 0.0001404720000000026, 0.00014050000000000173, 0.0001404859999999987, 0.00014050000000000173, 0.00014049999999999827, 0.00014054200000000044, 0.0001404859999999987, 0.00014052800000000087, 0.00014051399999999784, 0.00014041600000000085, 0.0001405279999999974, 0.00014048600000000216, 0.0001404859999999987, 0.00014048600000000216, 0.00014049999999999827, 0.00014050000000000173, 0.0001404859999999987, 0.0001404859999999987, 0.00014045799999999956, 0.0001404859999999987, 0.0001405140000000013, 0.0001404859999999987, 0.00014050000000000173, 0.0001404729999999986, 0.00014048700000000164, 0.00014049999999999827, 0.00014047300000000207, 0.00014052699999999793, 0.00014048600000000216, 0.0001404859999999987, 0.0001405270000000014, 0.00014049999999999827, 0.00014050000000000173, 0.0001404859999999987]</msg>
<status status="PASS" starttime="20201030 11:50:22.106" endtime="20201030 11:50:22.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.102" endtime="20201030 11:50:22.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.756" endtime="20201030 11:50:22.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.734" endtime="20201030 11:50:22.109"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.112" endtime="20201030 11:50:22.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.110" endtime="20201030 11:50:22.132"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.140" endtime="20201030 11:50:22.155"></status>
</kw>
<msg timestamp="20201030 11:50:22.156" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.138" endtime="20201030 11:50:22.156"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.158" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.157" endtime="20201030 11:50:22.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.159" endtime="20201030 11:50:22.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.136" endtime="20201030 11:50:22.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.134" endtime="20201030 11:50:22.163"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.169" endtime="20201030 11:50:22.455"></status>
</kw>
<msg timestamp="20201030 11:50:22.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017724097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.168" endtime="20201030 11:50:22.458"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017566403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017724097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.459" endtime="20201030 11:50:22.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.467" endtime="20201030 11:50:22.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.165" endtime="20201030 11:50:22.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.163" endtime="20201030 11:50:22.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:22.473" level="INFO">${PHILIP_RES} = [{'diff': 0.0001576939999999999}, {'diff': 0.00015774999999999817}, {'diff': 0.00015776300000000174}, {'diff': 0.00015774999999999817}, {'diff': 0.00015781900000000001}, {'diff': 0.0001578199999999995...</msg>
<status status="PASS" starttime="20201030 11:50:22.470" endtime="20201030 11:50:22.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.477" level="INFO">${RESULT} = {'diff': [0.0001576939999999999, 0.00015774999999999817, 0.00015776300000000174, 0.00015774999999999817, 0.00015781900000000001, 0.0001578199999999995, 0.00015773600000000207, 0.00015774999999999817, ...</msg>
<status status="PASS" starttime="20201030 11:50:22.474" endtime="20201030 11:50:22.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.481" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:22.480" endtime="20201030 11:50:22.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.484" level="INFO">VALUE: [0.0001576939999999999, 0.00015774999999999817, 0.00015776300000000174, 0.00015774999999999817, 0.00015781900000000001, 0.0001578199999999995, 0.00015773600000000207, 0.00015774999999999817, 0.00015775000000000164, 0.00015770799999999946, 0.00015780500000000044, 0.00015773700000000154, 0.0001577220000000025, 0.0001577640000000012, 0.00015769499999999936, 0.00015775000000000164, 0.0001577359999999986, 0.00015775000000000164, 0.00015774999999999817, 0.00015772199999999903, 0.00015776299999999827, 0.00015773600000000207, 0.0001577359999999986, 0.00015775000000000164, 0.0001577359999999986, 0.0001577640000000012, 0.0001577359999999986, 0.00015773600000000207, 0.00015770799999999946, 0.00015772300000000197, 0.0001577779999999973, 0.0001577359999999986, 0.0001577359999999986, 0.0001577359999999986, 0.00015770799999999946, 0.00015779100000000088, 0.00015775000000000164, 0.00015774999999999817, 0.00015776399999999774, 0.00015776399999999774, 0.0001577640000000012, 0.00015774999999999817, 0.00015775000000000164, 0.00015774999999999817, 0.00015775000000000164, 0.0001577359999999986, 0.00015773600000000207, 0.00015776399999999774, 0.0001577640000000012, 0.0001577359999999986]</msg>
<status status="PASS" starttime="20201030 11:50:22.482" endtime="20201030 11:50:22.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.478" endtime="20201030 11:50:22.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.132" endtime="20201030 11:50:22.486"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.110" endtime="20201030 11:50:22.486"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.489" endtime="20201030 11:50:22.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.487" endtime="20201030 11:50:22.509"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.517" endtime="20201030 11:50:22.534"></status>
</kw>
<msg timestamp="20201030 11:50:22.534" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.515" endtime="20201030 11:50:22.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.537" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.535" endtime="20201030 11:50:22.537"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.538" endtime="20201030 11:50:22.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.512" endtime="20201030 11:50:22.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.511" endtime="20201030 11:50:22.540"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.547" endtime="20201030 11:50:22.835"></status>
</kw>
<msg timestamp="20201030 11:50:22.841" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017660181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.545" endtime="20201030 11:50:22.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.859" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017484306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017660181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.844" endtime="20201030 11:50:22.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.861" endtime="20201030 11:50:22.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.543" endtime="20201030 11:50:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.541" endtime="20201030 11:50:22.867"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:22.875" level="INFO">${PHILIP_RES} = [{'diff': 0.00017587499999999895}, {'diff': 0.00017594399999999732}, {'diff': 0.00017599999999999907}, {'diff': 0.00017591700000000113}, {'diff': 0.00017591700000000113}, {'diff': 0.000175916999999997...</msg>
<status status="PASS" starttime="20201030 11:50:22.868" endtime="20201030 11:50:22.875"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:22.885" level="INFO">${RESULT} = {'diff': [0.00017587499999999895, 0.00017594399999999732, 0.00017599999999999907, 0.00017591700000000113, 0.00017591700000000113, 0.00017591699999999766, 0.00017600000000000254, 0.00017587500000000242...</msg>
<status status="PASS" starttime="20201030 11:50:22.877" endtime="20201030 11:50:22.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.894" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:22.892" endtime="20201030 11:50:22.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.899" level="INFO">VALUE: [0.00017587499999999895, 0.00017594399999999732, 0.00017599999999999907, 0.00017591700000000113, 0.00017591700000000113, 0.00017591699999999766, 0.00017600000000000254, 0.00017587500000000242, 0.00017592999999999775, 0.00017594500000000027, 0.0001759310000000007, 0.00017590300000000156, 0.00017594399999999732, 0.00017591600000000165, 0.0001759440000000008, 0.000175889000000002, 0.0001759310000000007, 0.0001759440000000008, 0.00017599999999999907, 0.00017593099999999723, 0.00017595899999999984, 0.0001758469999999998, 0.00017594500000000027, 0.00017592999999999775, 0.00017594500000000027, 0.000175889000000002, 0.0001759590000000033, 0.0001759310000000007, 0.00017595800000000036, 0.00017591599999999818, 0.00017591700000000113, 0.00017595899999999984, 0.000175889000000002, 0.00017594399999999732, 0.00017593000000000122, 0.00017593000000000122, 0.00017595800000000036, 0.00017587499999999895, 0.00017595800000000036, 0.00017595800000000036, 0.00017592999999999775, 0.00017594500000000027, 0.00017594500000000027, 0.00017594500000000027, 0.0001759029999999981, 0.00017591600000000165, 0.00017591600000000165, 0.00017594399999999732, 0.0001759310000000007, 0.00017591700000000113]</msg>
<status status="PASS" starttime="20201030 11:50:22.896" endtime="20201030 11:50:22.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.887" endtime="20201030 11:50:22.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.509" endtime="20201030 11:50:22.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.487" endtime="20201030 11:50:22.903"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:22.908" endtime="20201030 11:50:22.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.905" endtime="20201030 11:50:22.930"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.938" endtime="20201030 11:50:22.956"></status>
</kw>
<msg timestamp="20201030 11:50:22.956" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.936" endtime="20201030 11:50:22.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:22.958" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:22.957" endtime="20201030 11:50:22.959"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.960" endtime="20201030 11:50:22.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.934" endtime="20201030 11:50:22.962"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.932" endtime="20201030 11:50:22.962"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:22.968" endtime="20201030 11:50:23.255"></status>
</kw>
<msg timestamp="20201030 11:50:23.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019067083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019262097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:22.967" endtime="20201030 11:50:23.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019067083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019262097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.259" endtime="20201030 11:50:23.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.267" endtime="20201030 11:50:23.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.964" endtime="20201030 11:50:23.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.963" endtime="20201030 11:50:23.270"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:23.273" level="INFO">${PHILIP_RES} = [{'diff': 0.0001950140000000003}, {'diff': 0.0001950420000000029}, {'diff': 0.00019504199999999944}, {'diff': 0.000195055999999999}, {'diff': 0.0001950689999999991}, {'diff': 0.00019508299999999867}, ...</msg>
<status status="PASS" starttime="20201030 11:50:23.270" endtime="20201030 11:50:23.274"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.278" level="INFO">${RESULT} = {'diff': [0.0001950140000000003, 0.0001950420000000029, 0.00019504199999999944, 0.000195055999999999, 0.0001950689999999991, 0.00019508299999999867, 0.000195055999999999, 0.00019500000000000073, 0.000...</msg>
<status status="PASS" starttime="20201030 11:50:23.275" endtime="20201030 11:50:23.278"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.282" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:23.281" endtime="20201030 11:50:23.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.284" level="INFO">VALUE: [0.0001950140000000003, 0.0001950420000000029, 0.00019504199999999944, 0.000195055999999999, 0.0001950689999999991, 0.00019508299999999867, 0.000195055999999999, 0.00019500000000000073, 0.00019508400000000162, 0.00019512500000000085, 0.00019506999999999858, 0.00019504099999999996, 0.00019505600000000248, 0.00019506900000000257, 0.00019506999999999858, 0.0001950689999999991, 0.000195055999999999, 0.00019505499999999953, 0.00019508300000000214, 0.00019500000000000073, 0.00019504099999999996, 0.0001950420000000029, 0.00019505499999999953, 0.00019505600000000248, 0.00019506900000000257, 0.00019512499999999738, 0.00019505499999999953, 0.000195055999999999, 0.00019502799999999987, 0.00019508299999999867, 0.00019511099999999781, 0.00019513900000000042, 0.00019505499999999953, 0.00019508300000000214, 0.00019505600000000248, 0.00019508300000000214, 0.00019506999999999858, 0.00019504099999999996, 0.000195055999999999, 0.00019504099999999996, 0.00019507000000000205, 0.0001950689999999991, 0.00019509699999999824, 0.0001950689999999991, 0.000195055999999999, 0.0001950689999999991, 0.00019502799999999987, 0.00019500000000000073, 0.00019512500000000085, 0.0001950689999999991]</msg>
<status status="PASS" starttime="20201030 11:50:23.283" endtime="20201030 11:50:23.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.278" endtime="20201030 11:50:23.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.930" endtime="20201030 11:50:23.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:22.904" endtime="20201030 11:50:23.286"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.288" endtime="20201030 11:50:23.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.287" endtime="20201030 11:50:23.308"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.316" endtime="20201030 11:50:23.336"></status>
</kw>
<msg timestamp="20201030 11:50:23.337" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.315" endtime="20201030 11:50:23.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.339" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.338" endtime="20201030 11:50:23.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.340" endtime="20201030 11:50:23.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.312" endtime="20201030 11:50:23.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.310" endtime="20201030 11:50:23.346"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.352" endtime="20201030 11:50:23.641"></status>
</kw>
<msg timestamp="20201030 11:50:23.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.351" endtime="20201030 11:50:23.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017553861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017768944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.650" endtime="20201030 11:50:23.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.668" endtime="20201030 11:50:23.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.348" endtime="20201030 11:50:23.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.346" endtime="20201030 11:50:23.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:23.681" level="INFO">${PHILIP_RES} = [{'diff': 0.00021508299999999786}, {'diff': 0.0002151389999999996}, {'diff': 0.00021504199999999862}, {'diff': 0.0002150970000000009}, {'diff': 0.00021511100000000047}, {'diff': 0.00021512500000000004...</msg>
<status status="PASS" starttime="20201030 11:50:23.674" endtime="20201030 11:50:23.681"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:23.690" level="INFO">${RESULT} = {'diff': [0.00021508299999999786, 0.0002151389999999996, 0.00021504199999999862, 0.0002150970000000009, 0.00021511100000000047, 0.00021512500000000004, 0.00021511100000000047, 0.0002151389999999996, 0...</msg>
<status status="PASS" starttime="20201030 11:50:23.683" endtime="20201030 11:50:23.690"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.698" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:23.696" endtime="20201030 11:50:23.699"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.703" level="INFO">VALUE: [0.00021508299999999786, 0.0002151389999999996, 0.00021504199999999862, 0.0002150970000000009, 0.00021511100000000047, 0.00021512500000000004, 0.00021511100000000047, 0.0002151389999999996, 0.00021513900000000308, 0.00021512500000000004, 0.0002151519999999997, 0.0002151389999999996, 0.0002151389999999996, 0.00021512500000000004, 0.0002151389999999996, 0.00021512500000000004, 0.00021515300000000265, 0.000215110999999997, 0.00021512500000000004, 0.00021511100000000047, 0.00021512500000000004, 0.00021512500000000004, 0.00021512500000000004, 0.00021512500000000004, 0.000215110999999997, 0.00021508399999999733, 0.00021512500000000004, 0.00021515299999999918, 0.00021512500000000004, 0.00021512500000000004, 0.00021512500000000004, 0.0002151389999999996, 0.00021518099999999832, 0.0002151389999999996, 0.00021515300000000265, 0.0002151389999999996, 0.00021512500000000004, 0.00021515299999999918, 0.0002151389999999996, 0.00021515299999999918, 0.00021511100000000047, 0.00021513900000000308, 0.00021512500000000004, 0.0002151389999999996, 0.00021511100000000047, 0.0002151389999999996, 0.00021511199999999994, 0.0002151389999999996, 0.0002151389999999996, 0.00021512500000000004]</msg>
<status status="PASS" starttime="20201030 11:50:23.701" endtime="20201030 11:50:23.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.692" endtime="20201030 11:50:23.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.309" endtime="20201030 11:50:23.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.286" endtime="20201030 11:50:23.709"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:23.714" endtime="20201030 11:50:23.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.711" endtime="20201030 11:50:23.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.744" endtime="20201030 11:50:23.765"></status>
</kw>
<msg timestamp="20201030 11:50:23.765" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.742" endtime="20201030 11:50:23.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:23.767" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:23.766" endtime="20201030 11:50:23.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.768" endtime="20201030 11:50:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.740" endtime="20201030 11:50:23.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.738" endtime="20201030 11:50:23.771"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:23.778" endtime="20201030 11:50:24.064"></status>
</kw>
<msg timestamp="20201030 11:50:24.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019091764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:23.776" endtime="20201030 11:50:24.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019091764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.068" endtime="20201030 11:50:24.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.076" endtime="20201030 11:50:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.773" endtime="20201030 11:50:24.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.772" endtime="20201030 11:50:24.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:24.083" level="INFO">${PHILIP_RES} = [{'diff': 0.00023601399999999967}, {'diff': 0.00023608300000000151}, {'diff': 0.00023618100000000197}, {'diff': 0.00023612500000000022}, {'diff': 0.00025858299999999973}, {'diff': 0.000236138999999999...</msg>
<status status="PASS" starttime="20201030 11:50:24.079" endtime="20201030 11:50:24.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.087" level="INFO">${RESULT} = {'diff': [0.00023601399999999967, 0.00023608300000000151, 0.00023618100000000197, 0.00023612500000000022, 0.00025858299999999973, 0.0002361389999999998, 0.00023611100000000065, 0.00023612500000000022,...</msg>
<status status="PASS" starttime="20201030 11:50:24.084" endtime="20201030 11:50:24.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.092" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:24.091" endtime="20201030 11:50:24.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.094" level="INFO">VALUE: [0.00023601399999999967, 0.00023608300000000151, 0.00023618100000000197, 0.00023612500000000022, 0.00025858299999999973, 0.0002361389999999998, 0.00023611100000000065, 0.00023612500000000022, 0.00023615300000000283, 0.00023612500000000022, 0.00023612500000000022, 0.00023612500000000022, 0.00023611100000000065, 0.00023612499999999675, 0.0002361389999999998, 0.0002361389999999998, 0.00023611100000000065, 0.0002361519999999999, 0.00023611100000000065, 0.00023612500000000022, 0.00023615299999999936, 0.0002361519999999999, 0.00023607000000000142, 0.00023612500000000022, 0.00023612500000000022, 0.00023608399999999752, 0.0002361389999999998, 0.0002361389999999998, 0.00023616699999999893, 0.00023612500000000022, 0.0002361389999999998, 0.0002361389999999998, 0.0002361389999999998, 0.00023612500000000022, 0.00023611099999999718, 0.00023615299999999936, 0.00023612500000000022, 0.00023611100000000065, 0.00023608300000000151, 0.0002361389999999998, 0.0002361389999999998, 0.00023616599999999946, 0.00023612500000000022, 0.00023612500000000022, 0.00023613900000000326, 0.00023612500000000022, 0.00023604200000000228, 0.00023613900000000326, 0.00023609699999999761, 0.0002361250000000037]</msg>
<status status="PASS" starttime="20201030 11:50:24.093" endtime="20201030 11:50:24.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.088" endtime="20201030 11:50:24.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.736" endtime="20201030 11:50:24.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:23.709" endtime="20201030 11:50:24.096"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.098" endtime="20201030 11:50:24.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.097" endtime="20201030 11:50:24.118"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.126" endtime="20201030 11:50:24.149"></status>
</kw>
<msg timestamp="20201030 11:50:24.149" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.125" endtime="20201030 11:50:24.150"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.152" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.150" endtime="20201030 11:50:24.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.153" endtime="20201030 11:50:24.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.122" endtime="20201030 11:50:24.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.120" endtime="20201030 11:50:24.155"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.162" endtime="20201030 11:50:24.452"></status>
</kw>
<msg timestamp="20201030 11:50:24.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017745139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.160" endtime="20201030 11:50:24.460"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017745139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018003194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.462" endtime="20201030 11:50:24.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.480" endtime="20201030 11:50:24.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.158" endtime="20201030 11:50:24.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.156" endtime="20201030 11:50:24.486"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:24.494" level="INFO">${PHILIP_RES} = [{'diff': 0.0002580550000000001}, {'diff': 0.00025806899999999966}, {'diff': 0.0002580550000000001}, {'diff': 0.00025805599999999956}, {'diff': 0.0002580969999999988}, {'diff': 0.0002580700000000026},...</msg>
<status status="PASS" starttime="20201030 11:50:24.487" endtime="20201030 11:50:24.494"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.502" level="INFO">${RESULT} = {'diff': [0.0002580550000000001, 0.00025806899999999966, 0.0002580550000000001, 0.00025805599999999956, 0.0002580969999999988, 0.0002580700000000026, 0.00025805599999999956, 0.0002580550000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:24.496" endtime="20201030 11:50:24.503"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.511" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:24.509" endtime="20201030 11:50:24.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.516" level="INFO">VALUE: [0.0002580550000000001, 0.00025806899999999966, 0.0002580550000000001, 0.00025805599999999956, 0.0002580969999999988, 0.0002580700000000026, 0.00025805599999999956, 0.0002580550000000001, 0.00025805600000000303, 0.0002580550000000001, 0.00025808400000000217, 0.0002580830000000027, 0.0002580550000000001, 0.00025805599999999956, 0.00025806899999999966, 0.0002581250000000014, 0.00025808299999999923, 0.0002580269999999975, 0.00025806999999999913, 0.00025806899999999966, 0.0002580839999999987, 0.00025808299999999923, 0.00025808299999999923, 0.0002580280000000004, 0.00025806899999999966, 0.0002580839999999987, 0.0002580550000000001, 0.00025808299999999923, 0.00025806999999999913, 0.00025808299999999923, 0.0002580280000000004, 0.00025806899999999966, 0.0002580830000000027, 0.00025806900000000313, 0.00025806900000000313, 0.00025805600000000303, 0.00025806899999999966, 0.0002580830000000027, 0.0002580830000000027, 0.00025806899999999966, 0.00025806999999999913, 0.00025806899999999966, 0.000273014000000002, 0.00025806900000000313, 0.00025808400000000217, 0.0002580969999999988, 0.00025808299999999923, 0.0002580700000000026, 0.0002580550000000001, 0.00025806999999999913]</msg>
<status status="PASS" starttime="20201030 11:50:24.513" endtime="20201030 11:50:24.518"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.504" endtime="20201030 11:50:24.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.119" endtime="20201030 11:50:24.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.096" endtime="20201030 11:50:24.520"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.525" endtime="20201030 11:50:24.545"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.522" endtime="20201030 11:50:24.546"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.554" endtime="20201030 11:50:24.576"></status>
</kw>
<msg timestamp="20201030 11:50:24.577" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.552" endtime="20201030 11:50:24.577"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.579" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.578" endtime="20201030 11:50:24.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.580" endtime="20201030 11:50:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.550" endtime="20201030 11:50:24.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.548" endtime="20201030 11:50:24.584"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.590" endtime="20201030 11:50:24.875"></status>
</kw>
<msg timestamp="20201030 11:50:24.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017785042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.588" endtime="20201030 11:50:24.878"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017504139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017785042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.879" endtime="20201030 11:50:24.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.887" endtime="20201030 11:50:24.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.586" endtime="20201030 11:50:24.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.584" endtime="20201030 11:50:24.889"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:24.893" level="INFO">${PHILIP_RES} = [{'diff': 0.0002809030000000025}, {'diff': 0.0002810280000000026}, {'diff': 0.00028095900000000076}, {'diff': 0.0002809450000000012}, {'diff': 0.00028088899999999944}, {'diff': 0.00028094399999999825}...</msg>
<status status="PASS" starttime="20201030 11:50:24.890" endtime="20201030 11:50:24.893"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.897" level="INFO">${RESULT} = {'diff': [0.0002809030000000025, 0.0002810280000000026, 0.00028095900000000076, 0.0002809450000000012, 0.00028088899999999944, 0.00028094399999999825, 0.0002809440000000017, 0.0002809719999999974, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:24.894" endtime="20201030 11:50:24.897"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.901" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:24.900" endtime="20201030 11:50:24.902"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.904" level="INFO">VALUE: [0.0002809030000000025, 0.0002810280000000026, 0.00028095900000000076, 0.0002809450000000012, 0.00028088899999999944, 0.00028094399999999825, 0.0002809440000000017, 0.0002809719999999974, 0.00028097200000000086, 0.0002809580000000013, 0.0002809169999999986, 0.0002809579999999978, 0.0002809440000000017, 0.00028094399999999825, 0.00028098600000000043, 0.00028098600000000043, 0.0002809579999999978, 0.0002809450000000012, 0.0002809450000000012, 0.0002809589999999973, 0.000281, 0.0002809450000000012, 0.0002809169999999986, 0.00028097300000000033, 0.00028093099999999815, 0.0002809579999999978, 0.00028098600000000043, 0.0002809719999999974, 0.00028094399999999825, 0.000280902999999999, 0.00028101399999999957, 0.00028098600000000043, 0.0002809440000000017, 0.00028094399999999825, 0.00028093000000000215, 0.00028093000000000215, 0.00028094399999999825, 0.0002809450000000012, 0.0002809450000000012, 0.0002809449999999977, 0.0002809450000000012, 0.000281, 0.0002809449999999977, 0.0002809450000000012, 0.0002808890000000029, 0.00028101400000000304, 0.00028093099999999815, 0.00028094399999999825, 0.0002809579999999978, 0.00028088899999999944]</msg>
<status status="PASS" starttime="20201030 11:50:24.903" endtime="20201030 11:50:24.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.898" endtime="20201030 11:50:24.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.546" endtime="20201030 11:50:24.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.521" endtime="20201030 11:50:24.906"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:24.909" endtime="20201030 11:50:24.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.907" endtime="20201030 11:50:24.929"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.937" endtime="20201030 11:50:24.960"></status>
</kw>
<msg timestamp="20201030 11:50:24.961" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.935" endtime="20201030 11:50:24.961"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.963" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.962" endtime="20201030 11:50:24.963"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.964" endtime="20201030 11:50:24.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.933" endtime="20201030 11:50:24.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.931" endtime="20201030 11:50:24.967"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.973" endtime="20201030 11:50:25.262"></status>
</kw>
<msg timestamp="20201030 11:50:25.269" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017620444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.971" endtime="20201030 11:50:25.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017620444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017925208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.272" endtime="20201030 11:50:25.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.290" endtime="20201030 11:50:25.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.969" endtime="20201030 11:50:25.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.967" endtime="20201030 11:50:25.295"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:25.303" level="INFO">${PHILIP_RES} = [{'diff': 0.0003047640000000025}, {'diff': 0.0003047779999999986}, {'diff': 0.00030476399999999904}, {'diff': 0.00030476299999999956}, {'diff': 0.00030476399999999904}, {'diff': 0.00030474999999999947...</msg>
<status status="PASS" starttime="20201030 11:50:25.296" endtime="20201030 11:50:25.303"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.313" level="INFO">${RESULT} = {'diff': [0.0003047640000000025, 0.0003047779999999986, 0.00030476399999999904, 0.00030476299999999956, 0.00030476399999999904, 0.00030474999999999947, 0.00030474999999999947, 0.00030476399999999904, ...</msg>
<status status="PASS" starttime="20201030 11:50:25.305" endtime="20201030 11:50:25.314"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.322" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:25.320" endtime="20201030 11:50:25.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.327" level="INFO">VALUE: [0.0003047640000000025, 0.0003047779999999986, 0.00030476399999999904, 0.00030476299999999956, 0.00030476399999999904, 0.00030474999999999947, 0.00030474999999999947, 0.00030476399999999904, 0.00030480599999999775, 0.00030474999999999947, 0.0003047640000000025, 0.0003047640000000025, 0.0003047780000000021, 0.00030476300000000303, 0.0003047640000000025, 0.0003047359999999999, 0.0003047640000000025, 0.0003046940000000012, 0.00030476399999999904, 0.0003047640000000025, 0.00030476399999999904, 0.00030476399999999904, 0.00030474999999999947, 0.00030476399999999904, 0.00030474999999999947, 0.00030476399999999904, 0.00030476399999999904, 0.00030476399999999904, 0.00030476399999999904, 0.00030476299999999956, 0.0003047359999999999, 0.00030476399999999904, 0.00030476399999999904, 0.00030476399999999904, 0.00030480599999999775, 0.00030474999999999947, 0.0003047779999999986, 0.00030480599999999775, 0.00030476399999999904, 0.0003047909999999987, 0.00030476399999999904, 0.00030476399999999904, 0.0003047779999999986, 0.00030476399999999904, 0.00030474999999999947, 0.00030476399999999904, 0.0003047919999999982, 0.00030476399999999904, 0.00030476399999999904, 0.00030474999999999947]</msg>
<status status="PASS" starttime="20201030 11:50:25.324" endtime="20201030 11:50:25.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.315" endtime="20201030 11:50:25.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.929" endtime="20201030 11:50:25.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.907" endtime="20201030 11:50:25.339"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:25.344" endtime="20201030 11:50:25.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.341" endtime="20201030 11:50:25.364"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.372" endtime="20201030 11:50:25.397"></status>
</kw>
<msg timestamp="20201030 11:50:25.398" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.371" endtime="20201030 11:50:25.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.400" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.399" endtime="20201030 11:50:25.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.401" endtime="20201030 11:50:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.368" endtime="20201030 11:50:25.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.366" endtime="20201030 11:50:25.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.410" endtime="20201030 11:50:25.697"></status>
</kw>
<msg timestamp="20201030 11:50:25.700" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017873417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.409" endtime="20201030 11:50:25.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.708" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017543944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017873417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.701" endtime="20201030 11:50:25.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.709" endtime="20201030 11:50:25.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.406" endtime="20201030 11:50:25.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.404" endtime="20201030 11:50:25.712"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:25.715" level="INFO">${PHILIP_RES} = [{'diff': 0.00032947300000000027}, {'diff': 0.00032949999999999993}, {'diff': 0.00032954099999999917}, {'diff': 0.0003294720000000008}, {'diff': 0.0003295139999999995}, {'diff': 0.00032949999999999993...</msg>
<status status="PASS" starttime="20201030 11:50:25.712" endtime="20201030 11:50:25.716"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.719" level="INFO">${RESULT} = {'diff': [0.00032947300000000027, 0.00032949999999999993, 0.00032954099999999917, 0.0003294720000000008, 0.0003295139999999995, 0.00032949999999999993, 0.00032954199999999864, 0.00032949999999999993, ...</msg>
<status status="PASS" starttime="20201030 11:50:25.716" endtime="20201030 11:50:25.720"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.724" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:25.723" endtime="20201030 11:50:25.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.726" level="INFO">VALUE: [0.00032947300000000027, 0.00032949999999999993, 0.00032954099999999917, 0.0003294720000000008, 0.0003295139999999995, 0.00032949999999999993, 0.00032954199999999864, 0.00032949999999999993, 0.0003295269999999996, 0.00032952800000000254, 0.00032949999999999993, 0.00032952799999999907, 0.00032952799999999907, 0.0003295139999999995, 0.0003295269999999996, 0.00032945799999999775, 0.0003295139999999995, 0.00032949999999999993, 0.0003295139999999995, 0.00032954099999999917, 0.00032952700000000307, 0.0003294719999999973, 0.00032949999999999993, 0.0003295139999999995, 0.00032949999999999993, 0.0003295829999999979, 0.00032951300000000003, 0.00032952799999999907, 0.0003295139999999995, 0.0003295139999999995, 0.00032952799999999907, 0.00034540199999999813, 0.00032954199999999864, 0.0003294300000000021, 0.0003295139999999995, 0.00032948699999999984, 0.0003294589999999972, 0.0003295269999999996, 0.0003295560000000017, 0.0003295000000000034, 0.0003295279999999956, 0.0003295420000000021, 0.0003294729999999968, 0.00032951299999999656, 0.00032951400000000297, 0.00032951399999999603, 0.00032952800000000254, 0.00032949999999999646, 0.00032951400000000297, 0.00032952700000000307]</msg>
<status status="PASS" starttime="20201030 11:50:25.725" endtime="20201030 11:50:25.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.720" endtime="20201030 11:50:25.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.365" endtime="20201030 11:50:25.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.340" endtime="20201030 11:50:25.728"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:25.730" endtime="20201030 11:50:25.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.729" endtime="20201030 11:50:25.750"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.758" endtime="20201030 11:50:25.786"></status>
</kw>
<msg timestamp="20201030 11:50:25.786" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.757" endtime="20201030 11:50:25.786"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.788" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.787" endtime="20201030 11:50:25.789"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.789" endtime="20201030 11:50:25.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.754" endtime="20201030 11:50:25.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.752" endtime="20201030 11:50:25.793"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.799" endtime="20201030 11:50:26.091"></status>
</kw>
<msg timestamp="20201030 11:50:26.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017745069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.798" endtime="20201030 11:50:26.098"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017745069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018100222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.100" endtime="20201030 11:50:26.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.118" endtime="20201030 11:50:26.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.795" endtime="20201030 11:50:26.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.794" endtime="20201030 11:50:26.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:26.131" level="INFO">${PHILIP_RES} = [{'diff': 0.0003551530000000004}, {'diff': 0.0003552079999999992}, {'diff': 0.0003552079999999992}, {'diff': 0.00035519399999999965}, {'diff': 0.0003552079999999992}, {'diff': 0.0003552079999999992}, ...</msg>
<status status="PASS" starttime="20201030 11:50:26.125" endtime="20201030 11:50:26.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.140" level="INFO">${RESULT} = {'diff': [0.0003551530000000004, 0.0003552079999999992, 0.0003552079999999992, 0.00035519399999999965, 0.0003552079999999992, 0.0003552079999999992, 0.00035522200000000226, 0.00035522200000000226, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:26.133" endtime="20201030 11:50:26.141"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.149" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:26.147" endtime="20201030 11:50:26.150"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.154" level="INFO">VALUE: [0.0003551530000000004, 0.0003552079999999992, 0.0003552079999999992, 0.00035519399999999965, 0.0003552079999999992, 0.0003552079999999992, 0.00035522200000000226, 0.00035522200000000226, 0.00035519399999999965, 0.00035522200000000226, 0.0003552219999999988, 0.0003552079999999992, 0.00035523599999999836, 0.0003551949999999991, 0.0003551949999999991, 0.0003552219999999988, 0.0003551950000000026, 0.0003551110000000017, 0.0003551950000000026, 0.00035520900000000216, 0.0003552089999999987, 0.00035523699999999783, 0.0003551949999999991, 0.0003551250000000013, 0.0003552089999999987, 0.0003551949999999991, 0.0003551950000000026, 0.00035520900000000216, 0.00035523600000000183, 0.0003552219999999988, 0.0003551949999999991, 0.0003551949999999991, 0.0003552079999999992, 0.0003552219999999988, 0.00035524999999999793, 0.00035523600000000183, 0.00035520799999999575, 0.0003552080000000027, 0.00035520799999999575, 0.0003552080000000027, 0.0003552080000000027, 0.00035522200000000226, 0.00035522200000000226, 0.00035522200000000226, 0.0003552080000000027, 0.00035520799999999575, 0.00035522200000000226, 0.00037674999999999514, 0.0003551950000000026, 0.00035519499999999565]</msg>
<status status="PASS" starttime="20201030 11:50:26.151" endtime="20201030 11:50:26.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.142" endtime="20201030 11:50:26.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.751" endtime="20201030 11:50:26.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.728" endtime="20201030 11:50:26.159"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.164" endtime="20201030 11:50:26.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.161" endtime="20201030 11:50:26.184"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.192" endtime="20201030 11:50:26.220"></status>
</kw>
<msg timestamp="20201030 11:50:26.221" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.191" endtime="20201030 11:50:26.221"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.223" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.222" endtime="20201030 11:50:26.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.224" endtime="20201030 11:50:26.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.188" endtime="20201030 11:50:26.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.186" endtime="20201030 11:50:26.227"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.233" endtime="20201030 11:50:26.519"></status>
</kw>
<msg timestamp="20201030 11:50:26.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018070375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.232" endtime="20201030 11:50:26.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017688569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018070375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.523" endtime="20201030 11:50:26.530"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.531" endtime="20201030 11:50:26.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.229" endtime="20201030 11:50:26.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.227" endtime="20201030 11:50:26.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:26.537" level="INFO">${PHILIP_RES} = [{'diff': 0.0003818059999999984}, {'diff': 0.00038188899999999984}, {'diff': 0.0003818329999999981}, {'diff': 0.00038183300000000156}, {'diff': 0.00038183300000000156}, {'diff': 0.0003818329999999981}...</msg>
<status status="PASS" starttime="20201030 11:50:26.534" endtime="20201030 11:50:26.538"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.542" level="INFO">${RESULT} = {'diff': [0.0003818059999999984, 0.00038188899999999984, 0.0003818329999999981, 0.00038183300000000156, 0.00038183300000000156, 0.0003818329999999981, 0.0003818059999999984, 0.00038183300000000156, 0....</msg>
<status status="PASS" starttime="20201030 11:50:26.538" endtime="20201030 11:50:26.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.547" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:26.546" endtime="20201030 11:50:26.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.549" level="INFO">VALUE: [0.0003818059999999984, 0.00038188899999999984, 0.0003818329999999981, 0.00038183300000000156, 0.00038183300000000156, 0.0003818329999999981, 0.0003818059999999984, 0.00038183300000000156, 0.00038183300000000156, 0.0003818480000000006, 0.0003818189999999985, 0.00038175000000000014, 0.00038183300000000156, 0.000381819000000002, 0.000381819999999998, 0.0003818329999999981, 0.00038188899999999984, 0.00038182000000000146, 0.0003818610000000007, 0.0003818480000000006, 0.0003817909999999994, 0.00038187500000000027, 0.00038187500000000027, 0.00038183300000000156, 0.00038179199999999885, 0.0003817769999999998, 0.00038183300000000156, 0.0003818480000000006, 0.00038184700000000113, 0.00038186099999999723, 0.00038187500000000027, 0.00038183300000000156, 0.00038183399999999756, 0.00038187500000000374, 0.0003818470000000046, 0.0003818480000000041, 0.0003818329999999981, 0.000381819999999998, 0.0003817779999999993, 0.00038184699999999766, 0.00038179199999999885, 0.00038184699999999766, 0.0003818329999999981, 0.0003818189999999985, 0.00038187500000000374, 0.000381819999999998, 0.0003818329999999981, 0.00038184699999999766, 0.0003817779999999993, 0.00038184699999999766]</msg>
<status status="PASS" starttime="20201030 11:50:26.548" endtime="20201030 11:50:26.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.543" endtime="20201030 11:50:26.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.185" endtime="20201030 11:50:26.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.160" endtime="20201030 11:50:26.551"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.553" endtime="20201030 11:50:26.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.552" endtime="20201030 11:50:26.573"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.581" endtime="20201030 11:50:26.611"></status>
</kw>
<msg timestamp="20201030 11:50:26.612" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.580" endtime="20201030 11:50:26.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.614" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.613" endtime="20201030 11:50:26.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.615" endtime="20201030 11:50:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.577" endtime="20201030 11:50:26.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.575" endtime="20201030 11:50:26.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.624" endtime="20201030 11:50:26.921"></status>
</kw>
<msg timestamp="20201030 11:50:26.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017705931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.623" endtime="20201030 11:50:26.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.946" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017705931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018115278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.930" endtime="20201030 11:50:26.947"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.948" endtime="20201030 11:50:26.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.620" endtime="20201030 11:50:26.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.618" endtime="20201030 11:50:26.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:26.961" level="INFO">${PHILIP_RES} = [{'diff': 0.0004093469999999974}, {'diff': 0.00040940299999999916}, {'diff': 0.0004093889999999996}, {'diff': 0.0004094170000000022}, {'diff': 0.0004093889999999996}, {'diff': 0.0004094439999999984}, ...</msg>
<status status="PASS" starttime="20201030 11:50:26.955" endtime="20201030 11:50:26.962"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.970" level="INFO">${RESULT} = {'diff': [0.0004093469999999974, 0.00040940299999999916, 0.0004093889999999996, 0.0004094170000000022, 0.0004093889999999996, 0.0004094439999999984, 0.00040941599999999925, 0.0004094030000000026, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:26.964" endtime="20201030 11:50:26.971"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.977" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:26.976" endtime="20201030 11:50:26.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.979" level="INFO">VALUE: [0.0004093469999999974, 0.00040940299999999916, 0.0004093889999999996, 0.0004094170000000022, 0.0004093889999999996, 0.0004094439999999984, 0.00040941599999999925, 0.0004094030000000026, 0.00040943100000000177, 0.00040941599999999925, 0.0004094019999999997, 0.0004093889999999996, 0.0004094170000000022, 0.00040940299999999916, 0.000409375, 0.0004093889999999996, 0.0004093889999999996, 0.00040931999999999774, 0.0004094019999999997, 0.0004094590000000009, 0.00040940299999999916, 0.00040940299999999916, 0.0004094590000000009, 0.0004093889999999996, 0.00040938900000000306, 0.00040940299999999916, 0.0004094439999999984, 0.00040940299999999916, 0.0004093889999999996, 0.0004094299999999988, 0.0004094160000000027, 0.0004094030000000026, 0.00040941699999999526, 0.0004093610000000039, 0.00040937499999999655, 0.0004094029999999957, 0.0004094030000000026, 0.0004094029999999957, 0.0004094030000000026, 0.0004094590000000009, 0.0004093469999999974, 0.0004094030000000026, 0.0004094030000000026, 0.00040942999999999535, 0.0004094170000000022, 0.0004093889999999961, 0.0004093200000000047, 0.00040938900000000306, 0.0004094029999999957, 0.00040944400000000186]</msg>
<status status="PASS" starttime="20201030 11:50:26.978" endtime="20201030 11:50:26.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.972" endtime="20201030 11:50:26.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.574" endtime="20201030 11:50:26.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.551" endtime="20201030 11:50:26.981"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:26.984" endtime="20201030 11:50:27.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.982" endtime="20201030 11:50:27.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.012" endtime="20201030 11:50:27.044"></status>
</kw>
<msg timestamp="20201030 11:50:27.044" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.010" endtime="20201030 11:50:27.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.047" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.045" endtime="20201030 11:50:27.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.048" endtime="20201030 11:50:27.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.008" endtime="20201030 11:50:27.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.006" endtime="20201030 11:50:27.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.060" endtime="20201030 11:50:27.345"></status>
</kw>
<msg timestamp="20201030 11:50:27.348" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018041514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.058" endtime="20201030 11:50:27.348"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017603653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018041514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.349" endtime="20201030 11:50:27.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.357" endtime="20201030 11:50:27.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.056" endtime="20201030 11:50:27.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.054" endtime="20201030 11:50:27.359"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:27.363" level="INFO">${PHILIP_RES} = [{'diff': 0.0004378610000000012}, {'diff': 0.0004379029999999999}, {'diff': 0.0004379029999999999}, {'diff': 0.0004379169999999995}, {'diff': 0.00043790200000000043}, {'diff': 0.0004379029999999999}, ...</msg>
<status status="PASS" starttime="20201030 11:50:27.360" endtime="20201030 11:50:27.363"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.367" level="INFO">${RESULT} = {'diff': [0.0004378610000000012, 0.0004379029999999999, 0.0004379029999999999, 0.0004379169999999995, 0.00043790200000000043, 0.0004379029999999999, 0.0004379169999999995, 0.0004379029999999999, 0.000...</msg>
<status status="PASS" starttime="20201030 11:50:27.364" endtime="20201030 11:50:27.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.371" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:27.370" endtime="20201030 11:50:27.372"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.374" level="INFO">VALUE: [0.0004378610000000012, 0.0004379029999999999, 0.0004379029999999999, 0.0004379169999999995, 0.00043790200000000043, 0.0004379029999999999, 0.0004379169999999995, 0.0004379029999999999, 0.0004379029999999999, 0.00043784699999999815, 0.00043788900000000033, 0.0004379169999999995, 0.0004378610000000012, 0.0004379310000000025, 0.000437916, 0.00043787500000000076, 0.0004379029999999999, 0.00043791700000000294, 0.0004379029999999999, 0.0004378879999999974, 0.0004379029999999999, 0.00046223700000000076, 0.00043787500000000076, 0.000437916, 0.0004379719999999983, 0.0004379029999999999, 0.00043788800000000086, 0.00043788899999999686, 0.00043790200000000043, 0.000437916999999996, 0.00043790299999999643, 0.0004379020000000039, 0.00043790300000000337, 0.00043788899999999686, 0.00043790300000000337, 0.00043790300000000337, 0.0004378749999999973, 0.00043788899999999686, 0.0004378890000000038, 0.00043791700000000294, 0.000437916999999996, 0.00043791599999999653, 0.0004378890000000038, 0.00043790300000000337, 0.0004378619999999972, 0.00043790299999999643, 0.0004379020000000039, 0.00043788899999999686, 0.000437916999999996, 0.00043790300000000337]</msg>
<status status="PASS" starttime="20201030 11:50:27.372" endtime="20201030 11:50:27.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.368" endtime="20201030 11:50:27.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.004" endtime="20201030 11:50:27.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.982" endtime="20201030 11:50:27.376"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.379" endtime="20201030 11:50:27.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.377" endtime="20201030 11:50:27.398"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.406" endtime="20201030 11:50:27.439"></status>
</kw>
<msg timestamp="20201030 11:50:27.440" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.405" endtime="20201030 11:50:27.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.442" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.441" endtime="20201030 11:50:27.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.443" endtime="20201030 11:50:27.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.402" endtime="20201030 11:50:27.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.400" endtime="20201030 11:50:27.446"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.452" endtime="20201030 11:50:27.749"></status>
</kw>
<msg timestamp="20201030 11:50:27.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017479569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017946889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.451" endtime="20201030 11:50:27.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.774" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017479569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017946889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.758" endtime="20201030 11:50:27.774"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.776" endtime="20201030 11:50:27.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.448" endtime="20201030 11:50:27.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.447" endtime="20201030 11:50:27.781"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:27.787" level="INFO">${PHILIP_RES} = [{'diff': 0.00046732000000000024}, {'diff': 0.0004673469999999999}, {'diff': 0.00046737499999999904}, {'diff': 0.0004673479999999994}, {'diff': 0.00046733300000000033}, {'diff': 0.0004673339999999998}...</msg>
<status status="PASS" starttime="20201030 11:50:27.783" endtime="20201030 11:50:27.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.792" level="INFO">${RESULT} = {'diff': [0.00046732000000000024, 0.0004673469999999999, 0.00046737499999999904, 0.0004673479999999994, 0.00046733300000000033, 0.0004673339999999998, 0.0004673469999999999, 0.0004673339999999998, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:27.788" endtime="20201030 11:50:27.792"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.796" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:27.795" endtime="20201030 11:50:27.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.798" level="INFO">VALUE: [0.00046732000000000024, 0.0004673469999999999, 0.00046737499999999904, 0.0004673479999999994, 0.00046733300000000033, 0.0004673339999999998, 0.0004673469999999999, 0.0004673339999999998, 0.0004673469999999999, 0.00046732000000000024, 0.00046736099999999947, 0.00046734700000000337, 0.00046737499999999904, 0.0004673469999999999, 0.0004673339999999998, 0.00046736099999999947, 0.00046736099999999947, 0.0004954159999999985, 0.00046733300000000033, 0.0004674310000000008, 0.00046737499999999904, 0.0004673339999999998, 0.0004673469999999999, 0.00046731999999999677, 0.00046736099999999947, 0.00046734800000000284, 0.00046736099999999947, 0.00046734800000000284, 0.0004673329999999934, 0.00046736099999999947, 0.00046736099999999947, 0.00046736099999999947, 0.00046736099999999947, 0.00046736099999999947, 0.00046730600000000067, 0.0004673469999999999, 0.00046732000000000024, 0.0004673469999999999, 0.00046736199999999894, 0.00046731900000000076, 0.0004673479999999994, 0.0004673469999999999, 0.00046736099999999947, 0.0004673469999999999, 0.0004673469999999999, 0.0004673469999999999, 0.0004673469999999999, 0.00046736099999999947, 0.0004673469999999999, 0.0004673479999999994]</msg>
<status status="PASS" starttime="20201030 11:50:27.797" endtime="20201030 11:50:27.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.793" endtime="20201030 11:50:27.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.399" endtime="20201030 11:50:27.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.377" endtime="20201030 11:50:27.800"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:27.803" endtime="20201030 11:50:27.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.801" endtime="20201030 11:50:27.823"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.831" endtime="20201030 11:50:27.864"></status>
</kw>
<msg timestamp="20201030 11:50:27.865" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.829" endtime="20201030 11:50:27.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.867" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.866" endtime="20201030 11:50:27.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.868" endtime="20201030 11:50:27.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.827" endtime="20201030 11:50:27.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.825" endtime="20201030 11:50:27.871"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.877" endtime="20201030 11:50:28.163"></status>
</kw>
<msg timestamp="20201030 11:50:28.166" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017843806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.875" endtime="20201030 11:50:28.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017346139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017843806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.167" endtime="20201030 11:50:28.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.175" endtime="20201030 11:50:28.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.873" endtime="20201030 11:50:28.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.871" endtime="20201030 11:50:28.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:28.182" level="INFO">${PHILIP_RES} = [{'diff': 0.0004976670000000002}, {'diff': 0.0004977770000000013}, {'diff': 0.000497721999999999}, {'diff': 0.0004977079999999995}, {'diff': 0.0004977360000000021}, {'diff': 0.000497708000000003}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:28.179" endtime="20201030 11:50:28.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.186" level="INFO">${RESULT} = {'diff': [0.0004976670000000002, 0.0004977770000000013, 0.000497721999999999, 0.0004977079999999995, 0.0004977360000000021, 0.000497708000000003, 0.0004977229999999985, 0.000497721999999999, 0.0004977...</msg>
<status status="PASS" starttime="20201030 11:50:28.183" endtime="20201030 11:50:28.186"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.190" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:28.189" endtime="20201030 11:50:28.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.192" level="INFO">VALUE: [0.0004976670000000002, 0.0004977770000000013, 0.000497721999999999, 0.0004977079999999995, 0.0004977360000000021, 0.000497708000000003, 0.0004977229999999985, 0.000497721999999999, 0.0004977359999999986, 0.000497721999999999, 0.0004976659999999973, 0.0004977359999999986, 0.0004977229999999985, 0.0004976670000000002, 0.000497721999999999, 0.0004977079999999995, 0.0004976800000000003, 0.0004977360000000021, 0.0004977090000000024, 0.000497721999999999, 0.0004977359999999986, 0.0004976530000000007, 0.000497708000000003, 0.0004977359999999986, 0.0004977229999999985, 0.000497721999999999, 0.0004977359999999986, 0.0004976670000000002, 0.000497721999999999, 0.0004977639999999978, 0.000497708999999999, 0.000497721999999999, 0.000497722000000006, 0.000497721999999999, 0.000497721999999999, 0.0004977359999999986, 0.0004977629999999983, 0.0004977499999999982, 0.0004977079999999995, 0.0004977359999999986, 0.000497722000000006, 0.0004977500000000051, 0.000497708999999999, 0.000497721999999999, 0.000497804999999997, 0.000497721999999999, 0.000497721999999999, 0.0004977229999999985, 0.000497721999999999, 0.0004976939999999999]</msg>
<status status="PASS" starttime="20201030 11:50:28.191" endtime="20201030 11:50:28.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.187" endtime="20201030 11:50:28.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.823" endtime="20201030 11:50:28.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.801" endtime="20201030 11:50:28.194"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.197" endtime="20201030 11:50:28.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.195" endtime="20201030 11:50:28.217"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.225" endtime="20201030 11:50:28.261"></status>
</kw>
<msg timestamp="20201030 11:50:28.261" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.223" endtime="20201030 11:50:28.261"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.264" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.262" endtime="20201030 11:50:28.264"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.265" endtime="20201030 11:50:28.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.220" endtime="20201030 11:50:28.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.219" endtime="20201030 11:50:28.268"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.275" endtime="20201030 11:50:28.575"></status>
</kw>
<msg timestamp="20201030 11:50:28.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017651278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.273" endtime="20201030 11:50:28.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.596" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017651278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018180278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.583" endtime="20201030 11:50:28.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.597" endtime="20201030 11:50:28.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.271" endtime="20201030 11:50:28.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.269" endtime="20201030 11:50:28.600"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:28.604" level="INFO">${PHILIP_RES} = [{'diff': 0.0005290000000000017}, {'diff': 0.000529056}, {'diff': 0.0005290270000000014}, {'diff': 0.0005290419999999969}, {'diff': 0.0005290839999999991}, {'diff': 0.0005290550000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:50:28.601" endtime="20201030 11:50:28.604"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.608" level="INFO">${RESULT} = {'diff': [0.0005290000000000017, 0.000529056, 0.0005290270000000014, 0.0005290419999999969, 0.0005290839999999991, 0.0005290550000000005, 0.0005290550000000005, 0.000529056, 0.0005290409999999975, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:28.605" endtime="20201030 11:50:28.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.612" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:28.611" endtime="20201030 11:50:28.612"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.614" level="INFO">VALUE: [0.0005290000000000017, 0.000529056, 0.0005290270000000014, 0.0005290419999999969, 0.0005290839999999991, 0.0005290550000000005, 0.0005290550000000005, 0.000529056, 0.0005290409999999975, 0.0005290550000000005, 0.000529056, 0.0005290280000000008, 0.0005290409999999975, 0.0005290420000000004, 0.0005290699999999995, 0.0005290270000000014, 0.0005290279999999974, 0.0005289860000000021, 0.0005290410000000009, 0.0005290280000000008, 0.0005290280000000008, 0.0005290409999999975, 0.0005290420000000004, 0.0005290420000000004, 0.0005290979999999987, 0.0005290550000000005, 0.0005290280000000008, 0.0005290699999999995, 0.0005290140000000013, 0.0005290420000000004, 0.000529056, 0.0005290829999999996, 0.0005290419999999935, 0.0005290420000000004, 0.0005290140000000013, 0.0005290420000000004, 0.0005290420000000004, 0.0005290280000000008, 0.0005291109999999988, 0.000529056, 0.0005290280000000008, 0.0005289720000000026, 0.0005290829999999996, 0.0005290420000000004, 0.0005290410000000009, 0.0005290420000000004, 0.0005290280000000008, 0.0005290410000000009, 0.0005290690000000001, 0.0005290420000000004]</msg>
<status status="PASS" starttime="20201030 11:50:28.613" endtime="20201030 11:50:28.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.609" endtime="20201030 11:50:28.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.217" endtime="20201030 11:50:28.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.195" endtime="20201030 11:50:28.617"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:28.619" endtime="20201030 11:50:28.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.618" endtime="20201030 11:50:28.639"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.647" endtime="20201030 11:50:28.685"></status>
</kw>
<msg timestamp="20201030 11:50:28.686" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.646" endtime="20201030 11:50:28.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.688" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.687" endtime="20201030 11:50:28.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.689" endtime="20201030 11:50:28.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.643" endtime="20201030 11:50:28.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.641" endtime="20201030 11:50:28.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.698" endtime="20201030 11:50:28.984"></status>
</kw>
<msg timestamp="20201030 11:50:28.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017635236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.697" endtime="20201030 11:50:28.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.995" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017635236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018196486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.988" endtime="20201030 11:50:28.995"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.996" endtime="20201030 11:50:28.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.694" endtime="20201030 11:50:28.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.692" endtime="20201030 11:50:28.999"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.002" level="INFO">${PHILIP_RES} = [{'diff': 0.0005612500000000027}, {'diff': 0.0005613190000000011}, {'diff': 0.000561291999999998}, {'diff': 0.0005612779999999984}, {'diff': 0.0005612639999999988}, {'diff': 0.000561306000000001}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:28.999" endtime="20201030 11:50:29.003"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.007" level="INFO">${RESULT} = {'diff': [0.0005612500000000027, 0.0005613190000000011, 0.000561291999999998, 0.0005612779999999984, 0.0005612639999999988, 0.000561306000000001, 0.0005612920000000014, 0.0005612920000000014, 0.000561...</msg>
<status status="PASS" starttime="20201030 11:50:29.003" endtime="20201030 11:50:29.007"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.012" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.010" endtime="20201030 11:50:29.012"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.014" level="INFO">VALUE: [0.0005612500000000027, 0.0005613190000000011, 0.000561291999999998, 0.0005612779999999984, 0.0005612639999999988, 0.000561306000000001, 0.0005612920000000014, 0.0005612920000000014, 0.0005612639999999988, 0.0005612780000000019, 0.0005612920000000014, 0.0005612920000000014, 0.0005613330000000007, 0.0005612769999999989, 0.0005612769999999989, 0.0005612909999999985, 0.0005613049999999981, 0.0005612909999999985, 0.0005613189999999976, 0.0005613050000000015, 0.0005612920000000014, 0.0005941120000000008, 0.0005612920000000014, 0.000561291999999998, 0.0005613190000000046, 0.0005613190000000046, 0.0005612910000000054, 0.000561305000000005, 0.0005612910000000054, 0.0005612780000000053, 0.0005612909999999985, 0.000561291999999998, 0.000561291999999998, 0.0005613059999999975, 0.000561291999999998, 0.0005613059999999975, 0.0005613199999999971, 0.0005612359999999997, 0.000561291999999998, 0.0005613189999999976, 0.0005612779999999984, 0.000561291999999998, 0.0005612909999999985, 0.0005612909999999985, 0.0005612909999999985, 0.0005613469999999968, 0.0005612909999999985, 0.0005612639999999988, 0.0005612909999999985, 0.0005612779999999984]</msg>
<status status="PASS" starttime="20201030 11:50:29.013" endtime="20201030 11:50:29.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.008" endtime="20201030 11:50:29.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.640" endtime="20201030 11:50:29.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.617" endtime="20201030 11:50:29.016"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.018" endtime="20201030 11:50:29.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.017" endtime="20201030 11:50:29.038"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.046" endtime="20201030 11:50:29.085"></status>
</kw>
<msg timestamp="20201030 11:50:29.085" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.044" endtime="20201030 11:50:29.086"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.088" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.087" endtime="20201030 11:50:29.088"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.089" endtime="20201030 11:50:29.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.042" endtime="20201030 11:50:29.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.040" endtime="20201030 11:50:29.092"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.098" endtime="20201030 11:50:29.401"></status>
</kw>
<msg timestamp="20201030 11:50:29.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017646472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.096" endtime="20201030 11:50:29.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017646472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018240903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.407" endtime="20201030 11:50:29.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.415" endtime="20201030 11:50:29.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.094" endtime="20201030 11:50:29.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.092" endtime="20201030 11:50:29.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.422" level="INFO">${PHILIP_RES} = [{'diff': 0.0005944309999999994}, {'diff': 0.0005944999999999978}, {'diff': 0.0005945000000000013}, {'diff': 0.0005944860000000017}, {'diff': 0.0005945140000000008}, {'diff': 0.0005944859999999982}, {...</msg>
<status status="PASS" starttime="20201030 11:50:29.419" endtime="20201030 11:50:29.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.426" level="INFO">${RESULT} = {'diff': [0.0005944309999999994, 0.0005944999999999978, 0.0005945000000000013, 0.0005944860000000017, 0.0005945140000000008, 0.0005944859999999982, 0.0005944859999999982, 0.0005944439999999995, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:50:29.423" endtime="20201030 11:50:29.426"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.430" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.429" endtime="20201030 11:50:29.430"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.432" level="INFO">VALUE: [0.0005944309999999994, 0.0005944999999999978, 0.0005945000000000013, 0.0005944860000000017, 0.0005945140000000008, 0.0005944859999999982, 0.0005944859999999982, 0.0005944439999999995, 0.0005944860000000017, 0.0005945000000000013, 0.000594459000000002, 0.000630986, 0.000594542, 0.0005944730000000016, 0.0005944169999999999, 0.0005944730000000016, 0.0005945550000000001, 0.0005944999999999978, 0.0005944859999999982, 0.0005944860000000017, 0.0005944860000000017, 0.0005944860000000017, 0.0005945000000000047, 0.0005944860000000052, 0.000594458000000006, 0.0005944860000000052, 0.0005945140000000043, 0.0005944859999999982, 0.0005944859999999982, 0.0005944719999999987, 0.0005944169999999999, 0.0005945549999999966, 0.0005944859999999982, 0.0005944859999999982, 0.0005944859999999982, 0.0005944860000000052, 0.0005945000000000047, 0.0005944860000000052, 0.0005945000000000047, 0.0005945140000000043, 0.0005944869999999977, 0.0005944859999999982, 0.0005944859999999982, 0.0005944859999999982, 0.0005944999999999978, 0.0005944859999999982, 0.0005944859999999982, 0.000594527999999997, 0.0005945000000000047, 0.0005944860000000052]</msg>
<status status="PASS" starttime="20201030 11:50:29.431" endtime="20201030 11:50:29.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.427" endtime="20201030 11:50:29.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.039" endtime="20201030 11:50:29.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.016" endtime="20201030 11:50:29.434"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.437" endtime="20201030 11:50:29.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.435" endtime="20201030 11:50:29.457"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.465" endtime="20201030 11:50:29.506"></status>
</kw>
<msg timestamp="20201030 11:50:29.506" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.463" endtime="20201030 11:50:29.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.509" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.507" endtime="20201030 11:50:29.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.510" endtime="20201030 11:50:29.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.461" endtime="20201030 11:50:29.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.459" endtime="20201030 11:50:29.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.520" endtime="20201030 11:50:29.805"></status>
</kw>
<msg timestamp="20201030 11:50:29.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018123444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.518" endtime="20201030 11:50:29.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017494889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018123444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.809" endtime="20201030 11:50:29.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.817" endtime="20201030 11:50:29.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.516" endtime="20201030 11:50:29.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.514" endtime="20201030 11:50:29.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:29.823" level="INFO">${PHILIP_RES} = [{'diff': 0.0006285549999999994}, {'diff': 0.000628695000000002}, {'diff': 0.0006285419999999993}, {'diff': 0.0006286939999999991}, {'diff': 0.0006286110000000011}, {'diff': 0.0006285969999999981}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:29.820" endtime="20201030 11:50:29.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.827" level="INFO">${RESULT} = {'diff': [0.0006285549999999994, 0.000628695000000002, 0.0006285419999999993, 0.0006286939999999991, 0.0006286110000000011, 0.0006285969999999981, 0.0006286109999999977, 0.0006285559999999989, 0.00062...</msg>
<status status="PASS" starttime="20201030 11:50:29.824" endtime="20201030 11:50:29.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.831" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:29.830" endtime="20201030 11:50:29.831"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.834" level="INFO">VALUE: [0.0006285549999999994, 0.000628695000000002, 0.0006285419999999993, 0.0006286939999999991, 0.0006286110000000011, 0.0006285969999999981, 0.0006286109999999977, 0.0006285559999999989, 0.0006286390000000003, 0.0006286109999999977, 0.0006286109999999977, 0.0006286109999999977, 0.0006286109999999977, 0.0006286249999999972, 0.000628583999999998, 0.0006285969999999981, 0.0006285969999999981, 0.0006285979999999976, 0.0006285969999999981, 0.0006286109999999977, 0.0006286250000000007, 0.0006286110000000011, 0.0006285970000000016, 0.0006286110000000011, 0.000628598000000001, 0.0006286250000000007, 0.000628583000000002, 0.0006286250000000007, 0.0006286110000000011, 0.0006286250000000007, 0.0006286110000000011, 0.0006286110000000011, 0.0006286250000000007, 0.0006285970000000016, 0.0006286110000000011, 0.0006286110000000011, 0.0006286110000000011, 0.0006286110000000011, 0.0006286250000000007, 0.000628583000000002, 0.0006286669999999994, 0.0006286110000000011, 0.0006286120000000006, 0.0006286250000000007, 0.0006286250000000007, 0.0006286250000000007, 0.0006286250000000007, 0.0006285690000000024, 0.0006286250000000007, 0.0006286250000000007]</msg>
<status status="PASS" starttime="20201030 11:50:29.832" endtime="20201030 11:50:29.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.828" endtime="20201030 11:50:29.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.457" endtime="20201030 11:50:29.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.435" endtime="20201030 11:50:29.836"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:29.839" endtime="20201030 11:50:29.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.837" endtime="20201030 11:50:29.859"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.867" endtime="20201030 11:50:29.910"></status>
</kw>
<msg timestamp="20201030 11:50:29.910" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.865" endtime="20201030 11:50:29.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.913" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.911" endtime="20201030 11:50:29.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.914" endtime="20201030 11:50:29.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.863" endtime="20201030 11:50:29.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.861" endtime="20201030 11:50:29.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.923" endtime="20201030 11:50:30.222"></status>
</kw>
<msg timestamp="20201030 11:50:30.225" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017551847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.921" endtime="20201030 11:50:30.226"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017551847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018215458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.226" endtime="20201030 11:50:30.234"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.234" endtime="20201030 11:50:30.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.919" endtime="20201030 11:50:30.236"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.917" endtime="20201030 11:50:30.237"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:30.241" level="INFO">${PHILIP_RES} = [{'diff': 0.0006636110000000014}, {'diff': 0.0006636799999999998}, {'diff': 0.0006636949999999989}, {'diff': 0.0006636809999999993}, {'diff': 0.0006637360000000016}, {'diff': 0.0006636669999999997}, {...</msg>
<status status="PASS" starttime="20201030 11:50:30.238" endtime="20201030 11:50:30.241"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.246" level="INFO">${RESULT} = {'diff': [0.0006636110000000014, 0.0006636799999999998, 0.0006636949999999989, 0.0006636809999999993, 0.0006637360000000016, 0.0006636669999999997, 0.0006636799999999998, 0.0006636660000000003, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:50:30.242" endtime="20201030 11:50:30.246"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.250" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:30.249" endtime="20201030 11:50:30.250"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.252" level="INFO">VALUE: [0.0006636110000000014, 0.0006636799999999998, 0.0006636949999999989, 0.0006636809999999993, 0.0006637360000000016, 0.0006636669999999997, 0.0006636799999999998, 0.0006636660000000003, 0.0006636799999999998, 0.0006636670000000032, 0.0006636949999999989, 0.0006636809999999993, 0.0006636799999999998, 0.0006636799999999998, 0.0006636799999999998, 0.0006636809999999993, 0.0006636949999999989, 0.0006636810000000028, 0.0006636809999999993, 0.0006636940000000029, 0.0006636109999999945, 0.0006636949999999989, 0.0006636669999999997, 0.0006637640000000042, 0.0006636669999999997, 0.000663707999999999, 0.0006636799999999998, 0.0006636939999999994, 0.0006636669999999997, 0.0006636110000000014, 0.0006636530000000002, 0.0006636809999999993, 0.0006636799999999998, 0.0006636660000000003, 0.0006636669999999997, 0.0006636949999999989, 0.0006636799999999998, 0.0006636809999999993, 0.0006636799999999998, 0.0006636800000000068, 0.0006636799999999998, 0.0006636110000000014, 0.0006636809999999993, 0.0006636669999999997, 0.0006636799999999998, 0.0006636660000000003, 0.0006636939999999994, 0.0006636799999999998, 0.0006636949999999989, 0.0006636809999999993]</msg>
<status status="PASS" starttime="20201030 11:50:30.251" endtime="20201030 11:50:30.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.246" endtime="20201030 11:50:30.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.859" endtime="20201030 11:50:30.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.837" endtime="20201030 11:50:30.254"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.257" endtime="20201030 11:50:30.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.255" endtime="20201030 11:50:30.276"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.284" endtime="20201030 11:50:30.330"></status>
</kw>
<msg timestamp="20201030 11:50:30.330" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.283" endtime="20201030 11:50:30.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.332" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.331" endtime="20201030 11:50:30.333"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.334" endtime="20201030 11:50:30.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.280" endtime="20201030 11:50:30.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.278" endtime="20201030 11:50:30.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.343" endtime="20201030 11:50:30.629"></status>
</kw>
<msg timestamp="20201030 11:50:30.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.341" endtime="20201030 11:50:30.632"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017639306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018338958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.633" endtime="20201030 11:50:30.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.641" endtime="20201030 11:50:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.338" endtime="20201030 11:50:30.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.337" endtime="20201030 11:50:30.644"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:30.648" level="INFO">${PHILIP_RES} = [{'diff': 0.0006996519999999985}, {'diff': 0.0006996810000000006}, {'diff': 0.0006996659999999981}, {'diff': 0.0006996950000000002}, {'diff': 0.0006996799999999977}, {'diff': 0.0006996809999999971}, {...</msg>
<status status="PASS" starttime="20201030 11:50:30.644" endtime="20201030 11:50:30.648"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.651" level="INFO">${RESULT} = {'diff': [0.0006996519999999985, 0.0006996810000000006, 0.0006996659999999981, 0.0006996950000000002, 0.0006996799999999977, 0.0006996809999999971, 0.0006996799999999977, 0.0006996669999999976, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:50:30.648" endtime="20201030 11:50:30.652"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.656" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:30.655" endtime="20201030 11:50:30.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.658" level="INFO">VALUE: [0.0006996519999999985, 0.0006996810000000006, 0.0006996659999999981, 0.0006996950000000002, 0.0006996799999999977, 0.0006996809999999971, 0.0006996799999999977, 0.0006996669999999976, 0.0006996659999999981, 0.0006996809999999971, 0.0006996939999999972, 0.0006996950000000002, 0.0006996799999999977, 0.0006997079999999968, 0.0006996669999999976, 0.0006996809999999971, 0.0006997080000000003, 0.0006997359999999994, 0.0006996810000000006, 0.0007259169999999995, 0.0006996940000000007, 0.0006997080000000003, 0.000699667000000001, 0.0006996940000000007, 0.0006996810000000006, 0.0006997080000000003, 0.0006996810000000006, 0.0006996659999999946, 0.000699667000000001, 0.0006996659999999946, 0.0006996250000000023, 0.0006996939999999938, 0.0006996950000000002, 0.000699638999999995, 0.0006996810000000006, 0.0006996940000000007, 0.0006996810000000006, 0.0006997079999999933, 0.0006996950000000002, 0.0006996799999999942, 0.0006996810000000006, 0.0006996799999999942, 0.0006996810000000006, 0.0006996799999999942, 0.0006996810000000006, 0.0006996939999999938, 0.0006996940000000007, 0.0006996810000000006, 0.0006996940000000007, 0.0006996810000000006]</msg>
<status status="PASS" starttime="20201030 11:50:30.657" endtime="20201030 11:50:30.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.652" endtime="20201030 11:50:30.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.277" endtime="20201030 11:50:30.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.255" endtime="20201030 11:50:30.667"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:30.669" endtime="20201030 11:50:30.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.668" endtime="20201030 11:50:30.689"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.698" endtime="20201030 11:50:30.744"></status>
</kw>
<msg timestamp="20201030 11:50:30.745" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.696" endtime="20201030 11:50:30.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.747" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.746" endtime="20201030 11:50:30.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.748" endtime="20201030 11:50:30.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.693" endtime="20201030 11:50:30.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.691" endtime="20201030 11:50:30.754"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.760" endtime="20201030 11:50:31.060"></status>
</kw>
<msg timestamp="20201030 11:50:31.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.759" endtime="20201030 11:50:31.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.071" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017860097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018596736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.064" endtime="20201030 11:50:31.071"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.072" endtime="20201030 11:50:31.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.756" endtime="20201030 11:50:31.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.754" endtime="20201030 11:50:31.075"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.078" level="INFO">${PHILIP_RES} = [{'diff': 0.0007366390000000007}, {'diff': 0.0007366530000000003}, {'diff': 0.0007366250000000012}, {'diff': 0.0007366389999999973}, {'diff': 0.0007366249999999977}, {'diff': 0.0007366390000000007}, {...</msg>
<status status="PASS" starttime="20201030 11:50:31.075" endtime="20201030 11:50:31.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.082" level="INFO">${RESULT} = {'diff': [0.0007366390000000007, 0.0007366530000000003, 0.0007366250000000012, 0.0007366389999999973, 0.0007366249999999977, 0.0007366390000000007, 0.0007366390000000007, 0.0007366250000000012, 0.0007...</msg>
<status status="PASS" starttime="20201030 11:50:31.079" endtime="20201030 11:50:31.082"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.087" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.085" endtime="20201030 11:50:31.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.089" level="INFO">VALUE: [0.0007366390000000007, 0.0007366530000000003, 0.0007366250000000012, 0.0007366389999999973, 0.0007366249999999977, 0.0007366390000000007, 0.0007366390000000007, 0.0007366250000000012, 0.0007366250000000012, 0.0007365830000000025, 0.0007366109999999981, 0.0007366249999999977, 0.0007366530000000003, 0.0007366110000000016, 0.0007366390000000007, 0.0007366520000000008, 0.0007366390000000007, 0.0007366249999999977, 0.0007365839999999985, 0.0007366249999999977, 0.0007366249999999977, 0.0007365969999999986, 0.0007366249999999977, 0.0007365559999999993, 0.0007366250000000046, 0.0007366110000000051, 0.0007366109999999981, 0.0007366249999999977, 0.0007365699999999989, 0.0007366249999999977, 0.0007366249999999977, 0.0007366249999999977, 0.0007366529999999968, 0.0007366249999999977, 0.0007366249999999977, 0.0007366249999999977, 0.0007366120000000045, 0.0007365689999999994, 0.0007366250000000046, 0.0007365550000000068, 0.0007366389999999973, 0.0007366379999999978, 0.0007366249999999977, 0.0007366519999999974, 0.0007366249999999977, 0.0007366389999999973, 0.0007366249999999977, 0.0007366389999999973, 0.0007366109999999981, 0.0007366250000000046]</msg>
<status status="PASS" starttime="20201030 11:50:31.088" endtime="20201030 11:50:31.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.083" endtime="20201030 11:50:31.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.690" endtime="20201030 11:50:31.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.667" endtime="20201030 11:50:31.092"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.094" endtime="20201030 11:50:31.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.093" endtime="20201030 11:50:31.114"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.122" endtime="20201030 11:50:31.171"></status>
</kw>
<msg timestamp="20201030 11:50:31.171" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.120" endtime="20201030 11:50:31.171"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.174" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.172" endtime="20201030 11:50:31.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.175" endtime="20201030 11:50:31.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.118" endtime="20201030 11:50:31.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.116" endtime="20201030 11:50:31.177"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.184" endtime="20201030 11:50:31.469"></status>
</kw>
<msg timestamp="20201030 11:50:31.472" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.182" endtime="20201030 11:50:31.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017672875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018447264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.474" endtime="20201030 11:50:31.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.481" endtime="20201030 11:50:31.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.180" endtime="20201030 11:50:31.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.178" endtime="20201030 11:50:31.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.488" level="INFO">${PHILIP_RES} = [{'diff': 0.0007743890000000003}, {'diff': 0.0007745000000000009}, {'diff': 0.0007745419999999996}, {'diff': 0.0007745129999999975}, {'diff': 0.0007744999999999974}, {'diff': 0.0007744859999999978}, {...</msg>
<status status="PASS" starttime="20201030 11:50:31.485" endtime="20201030 11:50:31.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.493" level="INFO">${RESULT} = {'diff': [0.0007743890000000003, 0.0007745000000000009, 0.0007745419999999996, 0.0007745129999999975, 0.0007744999999999974, 0.0007744859999999978, 0.0007745700000000022, 0.0007744870000000008, 0.0007...</msg>
<status status="PASS" starttime="20201030 11:50:31.489" endtime="20201030 11:50:31.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.497" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.496" endtime="20201030 11:50:31.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.499" level="INFO">VALUE: [0.0007743890000000003, 0.0007745000000000009, 0.0007745419999999996, 0.0007745129999999975, 0.0007744999999999974, 0.0007744859999999978, 0.0007745700000000022, 0.0007744870000000008, 0.0007745140000000005, 0.000774528, 0.0007744439999999991, 0.0007745000000000009, 0.0007744730000000012, 0.0007744860000000013, 0.0007745140000000005, 0.0007745270000000005, 0.0007745000000000009, 0.0007745140000000039, 0.0007745140000000039, 0.0007745140000000039, 0.0007744730000000047, 0.0007745420000000031, 0.0007744999999999974, 0.000774513999999997, 0.0007744999999999974, 0.0007744999999999974, 0.0007745700000000022, 0.0007744999999999974, 0.0007744999999999974, 0.0007744999999999974, 0.0007744999999999974, 0.0007744719999999983, 0.0007744859999999978, 0.0007744999999999974, 0.0007744719999999983, 0.0007960419999999968, 0.000774513999999997, 0.0007744999999999974, 0.0007745279999999966, 0.0007744859999999978, 0.0007744999999999974, 0.0007744999999999974, 0.0007745140000000039, 0.0007745280000000035, 0.0007744860000000048, 0.0007745000000000044, 0.0007745000000000044, 0.0007745000000000044, 0.0007745280000000035, 0.000774527000000004]</msg>
<status status="PASS" starttime="20201030 11:50:31.498" endtime="20201030 11:50:31.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.494" endtime="20201030 11:50:31.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.114" endtime="20201030 11:50:31.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.092" endtime="20201030 11:50:31.501"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.504" endtime="20201030 11:50:31.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.502" endtime="20201030 11:50:31.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.531" endtime="20201030 11:50:31.582"></status>
</kw>
<msg timestamp="20201030 11:50:31.582" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.530" endtime="20201030 11:50:31.582"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.585" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.583" endtime="20201030 11:50:31.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.586" endtime="20201030 11:50:31.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.527" endtime="20201030 11:50:31.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.526" endtime="20201030 11:50:31.588"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.595" endtime="20201030 11:50:31.894"></status>
</kw>
<msg timestamp="20201030 11:50:31.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017565861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.593" endtime="20201030 11:50:31.897"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.905" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017565861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018379139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.898" endtime="20201030 11:50:31.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.906" endtime="20201030 11:50:31.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.591" endtime="20201030 11:50:31.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.589" endtime="20201030 11:50:31.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:31.913" level="INFO">${PHILIP_RES} = [{'diff': 0.0008132780000000006}, {'diff': 0.0008133189999999998}, {'diff': 0.0008133199999999993}, {'diff': 0.0008133329999999994}, {'diff': 0.0008133050000000003}, {'diff': 0.000813361000000002}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:31.910" endtime="20201030 11:50:31.913"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.917" level="INFO">${RESULT} = {'diff': [0.0008132780000000006, 0.0008133189999999998, 0.0008133199999999993, 0.0008133329999999994, 0.0008133050000000003, 0.000813361000000002, 0.0008133199999999993, 0.0008133189999999998, 0.00081...</msg>
<status status="PASS" starttime="20201030 11:50:31.914" endtime="20201030 11:50:31.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.921" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:31.920" endtime="20201030 11:50:31.921"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.923" level="INFO">VALUE: [0.0008132780000000006, 0.0008133189999999998, 0.0008133199999999993, 0.0008133329999999994, 0.0008133050000000003, 0.000813361000000002, 0.0008133199999999993, 0.0008133189999999998, 0.0008133059999999998, 0.0008133330000000029, 0.0008133199999999993, 0.0008133339999999989, 0.0008133189999999998, 0.0008133199999999993, 0.0008461390000000027, 0.0008133199999999959, 0.0008132780000000006, 0.0008133199999999993, 0.0008133059999999998, 0.000813346999999999, 0.0008133610000000055, 0.0008133749999999981, 0.0008133749999999981, 0.0008133199999999993, 0.000813346999999999, 0.000813346999999999, 0.0008133189999999998, 0.0008133329999999994, 0.0008133340000000058, 0.0008133199999999993, 0.0008133329999999994, 0.0008133059999999998, 0.0008132360000000019, 0.0008133189999999998, 0.0008133199999999993, 0.0008133189999999998, 0.0008133340000000058, 0.0008132920000000002, 0.0008133329999999994, 0.0008133339999999989, 0.0008133189999999998, 0.0008133200000000063, 0.0008132780000000006, 0.0008133329999999994, 0.0008133199999999993, 0.000813361999999998, 0.000813346999999999, 0.0008133339999999989, 0.0008133050000000003, 0.0008133330000000064]</msg>
<status status="PASS" starttime="20201030 11:50:31.922" endtime="20201030 11:50:31.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.917" endtime="20201030 11:50:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.524" endtime="20201030 11:50:31.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.501" endtime="20201030 11:50:31.925"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:31.928" endtime="20201030 11:50:31.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.926" endtime="20201030 11:50:31.947"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.955" endtime="20201030 11:50:32.008"></status>
</kw>
<msg timestamp="20201030 11:50:32.009" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.954" endtime="20201030 11:50:32.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.011" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.010" endtime="20201030 11:50:32.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.012" endtime="20201030 11:50:32.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.951" endtime="20201030 11:50:32.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.949" endtime="20201030 11:50:32.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.022" endtime="20201030 11:50:32.303"></status>
</kw>
<msg timestamp="20201030 11:50:32.306" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017608264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.020" endtime="20201030 11:50:32.306"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017608264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018461292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.307" endtime="20201030 11:50:32.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.315" endtime="20201030 11:50:32.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.018" endtime="20201030 11:50:32.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.016" endtime="20201030 11:50:32.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:32.321" level="INFO">${PHILIP_RES} = [{'diff': 0.0008530280000000022}, {'diff': 0.000853098}, {'diff': 0.0008530699999999974}, {'diff': 0.0008530409999999988}, {'diff': 0.0008530840000000005}, {'diff': 0.000853098}, {'diff': 0.0008530699...</msg>
<status status="PASS" starttime="20201030 11:50:32.318" endtime="20201030 11:50:32.322"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.325" level="INFO">${RESULT} = {'diff': [0.0008530280000000022, 0.000853098, 0.0008530699999999974, 0.0008530409999999988, 0.0008530840000000005, 0.000853098, 0.0008530699999999974, 0.0008530419999999983, 0.0008530840000000005, 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:32.322" endtime="20201030 11:50:32.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.330" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:32.329" endtime="20201030 11:50:32.330"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.332" level="INFO">VALUE: [0.0008530280000000022, 0.000853098, 0.0008530699999999974, 0.0008530409999999988, 0.0008530840000000005, 0.000853098, 0.0008530699999999974, 0.0008530419999999983, 0.0008530840000000005, 0.0008530700000000009, 0.0008530840000000005, 0.0008530699999999974, 0.0008530700000000009, 0.0008530700000000009, 0.0008530700000000009, 0.0008530560000000013, 0.0008530560000000048, 0.0008530700000000044, 0.0008530699999999974, 0.0008531109999999967, 0.0008531389999999958, 0.000853083999999997, 0.0008531109999999967, 0.0008531110000000036, 0.000853097000000004, 0.000853084000000004, 0.0008530700000000044, 0.000853083999999997, 0.000853083999999997, 0.0008530559999999979, 0.0008530699999999974, 0.000853083999999997, 0.0008530700000000044, 0.0008530560000000048, 0.0008530700000000044, 0.0008530699999999974, 0.0008530699999999974, 0.0008530699999999974, 0.000853083999999997, 0.0008530699999999974, 0.0008530559999999979, 0.000853084000000004, 0.0008530279999999987, 0.0008530560000000048, 0.0008530559999999979, 0.0008530559999999979, 0.000853083999999997, 0.0008530559999999979, 0.0008530699999999974, 0.0008530699999999905]</msg>
<status status="PASS" starttime="20201030 11:50:32.331" endtime="20201030 11:50:32.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.326" endtime="20201030 11:50:32.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.948" endtime="20201030 11:50:32.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.926" endtime="20201030 11:50:32.335"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.337" endtime="20201030 11:50:32.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.336" endtime="20201030 11:50:32.357"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.365" endtime="20201030 11:50:32.420"></status>
</kw>
<msg timestamp="20201030 11:50:32.420" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.363" endtime="20201030 11:50:32.420"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.423" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.421" endtime="20201030 11:50:32.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.424" endtime="20201030 11:50:32.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.361" endtime="20201030 11:50:32.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.359" endtime="20201030 11:50:32.426"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.433" endtime="20201030 11:50:32.727"></status>
</kw>
<msg timestamp="20201030 11:50:32.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017532708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018426417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.431" endtime="20201030 11:50:32.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.738" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017532708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018426417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.731" endtime="20201030 11:50:32.738"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.739" endtime="20201030 11:50:32.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.429" endtime="20201030 11:50:32.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.427" endtime="20201030 11:50:32.742"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:32.746" level="INFO">${PHILIP_RES} = [{'diff': 0.0008937089999999995}, {'diff': 0.0008937639999999983}, {'diff': 0.0008937640000000018}, {'diff': 0.0008937920000000009}, {'diff': 0.0008937639999999983}, {'diff': 0.0008937780000000013}, {...</msg>
<status status="PASS" starttime="20201030 11:50:32.743" endtime="20201030 11:50:32.746"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.751" level="INFO">${RESULT} = {'diff': [0.0008937089999999995, 0.0008937639999999983, 0.0008937640000000018, 0.0008937920000000009, 0.0008937639999999983, 0.0008937780000000013, 0.0008938060000000005, 0.0008937370000000021, 0.0008...</msg>
<status status="PASS" starttime="20201030 11:50:32.747" endtime="20201030 11:50:32.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.755" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:32.754" endtime="20201030 11:50:32.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.757" level="INFO">VALUE: [0.0008937089999999995, 0.0008937639999999983, 0.0008937640000000018, 0.0008937920000000009, 0.0008937639999999983, 0.0008937780000000013, 0.0008938060000000005, 0.0008937370000000021, 0.0008937639999999983, 0.0008937780000000013, 0.0008937920000000009, 0.0008937640000000018, 0.0008937639999999983, 0.0008936940000000004, 0.0008937630000000023, 0.0008937770000000053, 0.0008937779999999979, 0.000893805999999997, 0.0008937499999999987, 0.0008937920000000044, 0.0008937779999999979, 0.0008937779999999979, 0.0008937629999999988, 0.0008937769999999984, 0.0008937920000000044, 0.0008937779999999979, 0.0008937639999999983, 0.0008937779999999979, 0.0008938340000000031, 0.0008937359999999991, 0.0008938189999999971, 0.000893790999999998, 0.0008937780000000048, 0.0008937219999999996, 0.0008937780000000048, 0.0008937779999999979, 0.0008937499999999987, 0.0008937639999999983, 0.0008937499999999987, 0.0008937500000000057, 0.0008937769999999984, 0.0008937769999999984, 0.0008937499999999987, 0.0008937640000000052, 0.0008937779999999979, 0.0008937499999999987, 0.0008937639999999983, 0.0008937919999999974, 0.0008937629999999919, 0.0008937639999999913]</msg>
<status status="PASS" starttime="20201030 11:50:32.756" endtime="20201030 11:50:32.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.751" endtime="20201030 11:50:32.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.358" endtime="20201030 11:50:32.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.335" endtime="20201030 11:50:32.759"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.761" endtime="20201030 11:50:32.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.760" endtime="20201030 11:50:32.781"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.789" endtime="20201030 11:50:32.846"></status>
</kw>
<msg timestamp="20201030 11:50:32.847" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.788" endtime="20201030 11:50:32.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.849" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.848" endtime="20201030 11:50:32.850"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.850" endtime="20201030 11:50:32.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.785" endtime="20201030 11:50:32.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.783" endtime="20201030 11:50:32.853"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.859" endtime="20201030 11:50:33.146"></status>
</kw>
<msg timestamp="20201030 11:50:33.149" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.858" endtime="20201030 11:50:33.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017520514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018474583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.150" endtime="20201030 11:50:33.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.158" endtime="20201030 11:50:33.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.855" endtime="20201030 11:50:33.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.854" endtime="20201030 11:50:33.160"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:33.164" level="INFO">${PHILIP_RES} = [{'diff': 0.0009540689999999984}, {'diff': 0.0009354310000000005}, {'diff': 0.0009354029999999978}, {'diff': 0.0009353890000000017}, {'diff': 0.0009354019999999984}, {'diff': 0.0009354170000000009}, {...</msg>
<status status="PASS" starttime="20201030 11:50:33.161" endtime="20201030 11:50:33.164"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.168" level="INFO">${RESULT} = {'diff': [0.0009540689999999984, 0.0009354310000000005, 0.0009354029999999978, 0.0009353890000000017, 0.0009354019999999984, 0.0009354170000000009, 0.0009354030000000013, 0.0009353749999999987, 0.0009...</msg>
<status status="PASS" starttime="20201030 11:50:33.165" endtime="20201030 11:50:33.168"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.172" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:33.171" endtime="20201030 11:50:33.173"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.175" level="INFO">VALUE: [0.0009540689999999984, 0.0009354310000000005, 0.0009354029999999978, 0.0009353890000000017, 0.0009354019999999984, 0.0009354170000000009, 0.0009354030000000013, 0.0009353749999999987, 0.0009354020000000018, 0.0009354029999999978, 0.0009354170000000009, 0.0009354029999999978, 0.0009354020000000018, 0.0009354029999999978, 0.0009354170000000009, 0.0009353890000000017, 0.0009353750000000022, 0.0009353889999999948, 0.0009354030000000013, 0.0009354170000000009, 0.0009354160000000014, 0.0009353889999999948, 0.0009353890000000017, 0.0009354580000000001, 0.0009354170000000009, 0.0009354170000000009, 0.0009353200000000034, 0.0009353890000000017, 0.0009353609999999957, 0.0009354030000000013, 0.000935445, 0.0009353890000000017, 0.0009354159999999945, 0.0009354170000000009, 0.0009354030000000013, 0.0009353889999999948, 0.0009353889999999948, 0.0009354170000000009, 0.0009354170000000009, 0.0009354029999999944, 0.0009353890000000017, 0.0009354030000000013, 0.0009353469999999961, 0.0009354029999999944, 0.0009354160000000014, 0.0009353750000000022, 0.0009354170000000078, 0.0009353890000000087, 0.0009353750000000022, 0.0009353889999999948]</msg>
<status status="PASS" starttime="20201030 11:50:33.174" endtime="20201030 11:50:33.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.169" endtime="20201030 11:50:33.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.782" endtime="20201030 11:50:33.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.759" endtime="20201030 11:50:33.177"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.179" endtime="20201030 11:50:33.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.178" endtime="20201030 11:50:33.199"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.207" endtime="20201030 11:50:33.266"></status>
</kw>
<msg timestamp="20201030 11:50:33.267" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.205" endtime="20201030 11:50:33.267"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.269" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.268" endtime="20201030 11:50:33.269"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.270" endtime="20201030 11:50:33.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.203" endtime="20201030 11:50:33.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.201" endtime="20201030 11:50:33.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.280" endtime="20201030 11:50:33.581"></status>
</kw>
<msg timestamp="20201030 11:50:33.584" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018747222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.278" endtime="20201030 11:50:33.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017769361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018747222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.585" endtime="20201030 11:50:33.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.593" endtime="20201030 11:50:33.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.276" endtime="20201030 11:50:33.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.274" endtime="20201030 11:50:33.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:33.599" level="INFO">${PHILIP_RES} = [{'diff': 0.000977861}, {'diff': 0.0009779579999999975}, {'diff': 0.0009779860000000001}, {'diff': 0.0009779720000000006}, {'diff': 0.000977958000000001}, {'diff': 0.0009779170000000018}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:33.596" endtime="20201030 11:50:33.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:33.603" level="INFO">${RESULT} = {'diff': [0.000977861, 0.0009779579999999975, 0.0009779860000000001, 0.0009779720000000006, 0.000977958000000001, 0.0009779170000000018, 0.000977958999999997, 0.0009779860000000001, 0.0009779440000000...</msg>
<status status="PASS" starttime="20201030 11:50:33.600" endtime="20201030 11:50:33.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.608" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:33.607" endtime="20201030 11:50:33.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.610" level="INFO">VALUE: [0.000977861, 0.0009779579999999975, 0.0009779860000000001, 0.0009779720000000006, 0.000977958000000001, 0.0009779170000000018, 0.000977958999999997, 0.0009779860000000001, 0.0009779440000000014, 0.000977958000000001, 0.0009779860000000001, 0.0009779720000000006, 0.0009779860000000001, 0.0009779999999999997, 0.000977973, 0.000977973, 0.000977958000000001, 0.0009779719999999936, 0.000977958000000001, 0.0009779029999999952, 0.0009779440000000014, 0.000977958000000001, 0.0009779589999999935, 0.000977973, 0.000977958000000001, 0.0009779720000000006, 0.0009779720000000006, 0.0009779860000000001, 0.0009779170000000018, 0.0009779860000000001, 0.0009779590000000005, 0.0009779590000000005, 0.000977945000000001, 0.000977958000000001, 0.0009778890000000026, 0.000977957999999994, 0.0009779720000000006, 0.000977958000000001, 0.0009779720000000006, 0.0010191950000000005, 0.000977973, 0.0009779860000000001, 0.0009779720000000006, 0.0009779859999999932, 0.0009779999999999928, 0.000977958000000001, 0.000977958000000001, 0.000977958000000001, 0.000977972999999993, 0.000977944999999994]</msg>
<status status="PASS" starttime="20201030 11:50:33.609" endtime="20201030 11:50:33.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.604" endtime="20201030 11:50:33.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.199" endtime="20201030 11:50:33.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.177" endtime="20201030 11:50:33.613"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:33.615" endtime="20201030 11:50:33.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.614" endtime="20201030 11:50:33.635"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.644" endtime="20201030 11:50:33.706"></status>
</kw>
<msg timestamp="20201030 11:50:33.706" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.642" endtime="20201030 11:50:33.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:33.709" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:33.707" endtime="20201030 11:50:33.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.710" endtime="20201030 11:50:33.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.639" endtime="20201030 11:50:33.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.637" endtime="20201030 11:50:33.712"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:33.718" endtime="20201030 11:50:34.006"></status>
</kw>
<msg timestamp="20201030 11:50:34.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018825764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:33.717" endtime="20201030 11:50:34.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.018825764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019847194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.010" endtime="20201030 11:50:34.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.018" endtime="20201030 11:50:34.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.714" endtime="20201030 11:50:34.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.713" endtime="20201030 11:50:34.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.024" level="INFO">${PHILIP_RES} = [{'diff': 0.0010214300000000003}, {'diff': 0.0010214579999999994}, {'diff': 0.0010214439999999998}, {'diff': 0.0010214859999999985}, {'diff': 0.0010214579999999994}, {'diff': 0.001021471999999999}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:34.021" endtime="20201030 11:50:34.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.029" level="INFO">${RESULT} = {'diff': [0.0010214300000000003, 0.0010214579999999994, 0.0010214439999999998, 0.0010214859999999985, 0.0010214579999999994, 0.001021471999999999, 0.0010214859999999985, 0.001021471999999999, 0.001021...</msg>
<status status="PASS" starttime="20201030 11:50:34.025" endtime="20201030 11:50:34.029"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.034" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.033" endtime="20201030 11:50:34.034"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.037" level="INFO">VALUE: [0.0010214300000000003, 0.0010214579999999994, 0.0010214439999999998, 0.0010214859999999985, 0.0010214579999999994, 0.001021471999999999, 0.0010214859999999985, 0.001021471999999999, 0.0010214579999999994, 0.0010214720000000024, 0.001021471999999999, 0.0010214720000000024, 0.0010215000000000016, 0.0010214310000000032, 0.001021486000000002, 0.0010214720000000024, 0.001021457999999996, 0.001021485999999995, 0.001021472999999995, 0.0010214720000000024, 0.0010214300000000037, 0.0010214580000000029, 0.001021486000000002, 0.0010214720000000024, 0.001021473000000002, 0.001021485999999995, 0.0010214589999999954, 0.001021457999999996, 0.001021473000000002, 0.0010214580000000029, 0.001021486000000002, 0.0010214720000000024, 0.001021473000000002, 0.0010214719999999955, 0.001021472999999995, 0.0010214719999999955, 0.0010214590000000023, 0.0010214720000000024, 0.001021473000000002, 0.0010214440000000033, 0.0010214730000000088, 0.0010214719999999955, 0.001021472999999995, 0.0010214720000000094, 0.0010214730000000088, 0.0010214719999999955, 0.0010214589999999885, 0.0010214719999999955, 0.001021472999999995, 0.001021486000000002]</msg>
<status status="PASS" starttime="20201030 11:50:34.035" endtime="20201030 11:50:34.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.030" endtime="20201030 11:50:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.636" endtime="20201030 11:50:34.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:33.613" endtime="20201030 11:50:34.038"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.041" endtime="20201030 11:50:34.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.039" endtime="20201030 11:50:34.061"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.069" endtime="20201030 11:50:34.133"></status>
</kw>
<msg timestamp="20201030 11:50:34.133" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.067" endtime="20201030 11:50:34.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.136" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.134" endtime="20201030 11:50:34.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.137" endtime="20201030 11:50:34.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.065" endtime="20201030 11:50:34.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.063" endtime="20201030 11:50:34.139"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.149" endtime="20201030 11:50:34.448"></status>
</kw>
<msg timestamp="20201030 11:50:34.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017829458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.146" endtime="20201030 11:50:34.451"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.459" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017829458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018895319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.452" endtime="20201030 11:50:34.459"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.460" endtime="20201030 11:50:34.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.141" endtime="20201030 11:50:34.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.140" endtime="20201030 11:50:34.463"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.467" level="INFO">${PHILIP_RES} = [{'diff': 0.0010658610000000013}, {'diff': 0.0010659309999999991}, {'diff': 0.0010659169999999996}, {'diff': 0.001065916}, {'diff': 0.0010659169999999996}, {'diff': 0.001065917000000003}, {'diff': 0.0...</msg>
<status status="PASS" starttime="20201030 11:50:34.464" endtime="20201030 11:50:34.467"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.470" level="INFO">${RESULT} = {'diff': [0.0010658610000000013, 0.0010659309999999991, 0.0010659169999999996, 0.001065916, 0.0010659169999999996, 0.001065917000000003, 0.0010659580000000023, 0.0010659169999999996, 0.001065916, 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:34.468" endtime="20201030 11:50:34.471"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.475" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.474" endtime="20201030 11:50:34.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.477" level="INFO">VALUE: [0.0010658610000000013, 0.0010659309999999991, 0.0010659169999999996, 0.001065916, 0.0010659169999999996, 0.001065917000000003, 0.0010659580000000023, 0.0010659169999999996, 0.001065916, 0.0010659169999999996, 0.001065903, 0.0010659020000000005, 0.001065903, 0.001065903, 0.0010659299999999997, 0.0010658890000000004, 0.0010658890000000004, 0.0010659299999999997, 0.0010658890000000004, 0.001065916, 0.0010659449999999987, 0.001065903, 0.001065916, 0.0010659169999999996, 0.0010658890000000004, 0.001065903, 0.0010659309999999991, 0.0011089719999999997, 0.0010658750000000008, 0.0010658890000000004, 0.001065903, 0.001065916, 0.0010659169999999996, 0.0010659169999999996, 0.001065916, 0.0010659169999999996, 0.0010658750000000008, 0.0010658890000000004, 0.001065903, 0.001065903000000007, 0.001065902999999993, 0.001065931000000006, 0.0010659300000000066, 0.001065931000000006, 0.0010659169999999996, 0.0010659449999999987, 0.0010659169999999996, 0.0010659580000000057, 0.001065902999999993, 0.0010659169999999996]</msg>
<status status="PASS" starttime="20201030 11:50:34.476" endtime="20201030 11:50:34.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.471" endtime="20201030 11:50:34.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.061" endtime="20201030 11:50:34.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.039" endtime="20201030 11:50:34.479"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.481" endtime="20201030 11:50:34.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.480" endtime="20201030 11:50:34.501"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.510" endtime="20201030 11:50:34.576"></status>
</kw>
<msg timestamp="20201030 11:50:34.576" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.508" endtime="20201030 11:50:34.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.579" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.577" endtime="20201030 11:50:34.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.580" endtime="20201030 11:50:34.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.506" endtime="20201030 11:50:34.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.504" endtime="20201030 11:50:34.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.592" endtime="20201030 11:50:34.877"></status>
</kw>
<msg timestamp="20201030 11:50:34.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.590" endtime="20201030 11:50:34.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017961514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019072778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:34.881" endtime="20201030 11:50:34.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.889" endtime="20201030 11:50:34.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.588" endtime="20201030 11:50:34.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.586" endtime="20201030 11:50:34.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:34.896" level="INFO">${PHILIP_RES} = [{'diff': 0.0011112639999999972}, {'diff': 0.0011112919999999998}, {'diff': 0.0011112770000000008}, {'diff': 0.0011112780000000003}, {'diff': 0.0011112780000000003}, {'diff': 0.0011112919999999998}, {...</msg>
<status status="PASS" starttime="20201030 11:50:34.893" endtime="20201030 11:50:34.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:34.900" level="INFO">${RESULT} = {'diff': [0.0011112639999999972, 0.0011112919999999998, 0.0011112770000000008, 0.0011112780000000003, 0.0011112780000000003, 0.0011112919999999998, 0.001111235999999998, 0.0011112780000000003, 0.00111...</msg>
<status status="PASS" starttime="20201030 11:50:34.897" endtime="20201030 11:50:34.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.904" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:34.903" endtime="20201030 11:50:34.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:34.907" level="INFO">VALUE: [0.0011112639999999972, 0.0011112919999999998, 0.0011112770000000008, 0.0011112780000000003, 0.0011112780000000003, 0.0011112919999999998, 0.001111235999999998, 0.0011112780000000003, 0.0011112500000000011, 0.0011112640000000007, 0.0011113189999999995, 0.0011113469999999986, 0.001111319999999999, 0.0011112910000000004, 0.001111222000000002, 0.0011112919999999998, 0.0011112780000000003, 0.0011112780000000003, 0.0011112910000000004, 0.0011112919999999998, 0.0011112780000000003, 0.0011112919999999998, 0.001111305, 0.0011112640000000007, 0.0011112919999999998, 0.0011112910000000004, 0.0011112919999999998, 0.0011112919999999998, 0.0011112919999999998, 0.001111305, 0.0011112910000000004, 0.0011113059999999994, 0.0011113059999999994, 0.0011112910000000004, 0.0011113189999999995, 0.0011112919999999998, 0.001111320000000006, 0.0011112770000000008, 0.0011112780000000003, 0.0011112919999999998, 0.0011112779999999933, 0.0011112640000000007, 0.0011274169999999917, 0.0011112779999999933, 0.0011112910000000004, 0.0011112770000000077, 0.0011112919999999998, 0.0011112919999999998, 0.0011112359999999877, 0.001111304999999993]</msg>
<status status="PASS" starttime="20201030 11:50:34.905" endtime="20201030 11:50:34.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.901" endtime="20201030 11:50:34.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.502" endtime="20201030 11:50:34.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.479" endtime="20201030 11:50:34.909"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:34.912" endtime="20201030 11:50:34.931"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.910" endtime="20201030 11:50:34.932"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:34.940" endtime="20201030 11:50:35.009"></status>
</kw>
<msg timestamp="20201030 11:50:35.010" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:34.938" endtime="20201030 11:50:35.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.015" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.012" endtime="20201030 11:50:35.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.017" endtime="20201030 11:50:35.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.936" endtime="20201030 11:50:35.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.934" endtime="20201030 11:50:35.023"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.036" endtime="20201030 11:50:35.339"></status>
</kw>
<msg timestamp="20201030 11:50:35.342" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017652917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.033" endtime="20201030 11:50:35.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017652917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018810472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.343" endtime="20201030 11:50:35.350"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.351" endtime="20201030 11:50:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.027" endtime="20201030 11:50:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.024" endtime="20201030 11:50:35.354"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:35.357" level="INFO">${PHILIP_RES} = [{'diff': 0.001157555000000001}, {'diff': 0.0011576380000000025}, {'diff': 0.0011576110000000028}, {'diff': 0.001157639000000002}, {'diff': 0.0011575280000000014}, {'diff': 0.0011576250000000024}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:35.354" endtime="20201030 11:50:35.358"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.362" level="INFO">${RESULT} = {'diff': [0.001157555000000001, 0.0011576380000000025, 0.0011576110000000028, 0.001157639000000002, 0.0011575280000000014, 0.0011576250000000024, 0.0011576250000000024, 0.0011575969999999998, 0.001157...</msg>
<status status="PASS" starttime="20201030 11:50:35.358" endtime="20201030 11:50:35.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.367" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:35.366" endtime="20201030 11:50:35.367"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.369" level="INFO">VALUE: [0.001157555000000001, 0.0011576380000000025, 0.0011576110000000028, 0.001157639000000002, 0.0011575280000000014, 0.0011576250000000024, 0.0011576250000000024, 0.0011575969999999998, 0.0011575969999999998, 0.0011576110000000028, 0.0011821109999999996, 0.001157652999999998, 0.0011575969999999963, 0.0011575980000000027, 0.0011575829999999968, 0.0011576530000000015, 0.0011575979999999958, 0.001157610999999996, 0.001157639000000002, 0.001157610999999996, 0.001157610999999996, 0.001157610999999996, 0.0011575969999999963, 0.0011576529999999946, 0.0011575969999999963, 0.0011576249999999955, 0.0011576120000000023, 0.001157610999999996, 0.001157610999999996, 0.001157610999999996, 0.0011575969999999963, 0.0011576249999999955, 0.0011575969999999963, 0.0011576249999999955, 0.0011576119999999954, 0.0011575699999999967, 0.001157610999999996, 0.0011576380000000025, 0.0011576110000000028, 0.0011576110000000028, 0.0011576110000000028, 0.0011576110000000028, 0.0011576110000000028, 0.0011576250000000093, 0.001157639000000002, 0.0011575980000000097, 0.0011575970000000102, 0.0011576110000000028, 0.0011576110000000028, 0.001157639000000002]</msg>
<status status="PASS" starttime="20201030 11:50:35.368" endtime="20201030 11:50:35.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.363" endtime="20201030 11:50:35.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.932" endtime="20201030 11:50:35.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:34.910" endtime="20201030 11:50:35.371"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.373" endtime="20201030 11:50:35.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.372" endtime="20201030 11:50:35.393"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.401" endtime="20201030 11:50:35.472"></status>
</kw>
<msg timestamp="20201030 11:50:35.473" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.400" endtime="20201030 11:50:35.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.475" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.474" endtime="20201030 11:50:35.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.476" endtime="20201030 11:50:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.397" endtime="20201030 11:50:35.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.395" endtime="20201030 11:50:35.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.485" endtime="20201030 11:50:35.772"></status>
</kw>
<msg timestamp="20201030 11:50:35.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.484" endtime="20201030 11:50:35.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017636833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018841653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.776" endtime="20201030 11:50:35.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.784" endtime="20201030 11:50:35.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.481" endtime="20201030 11:50:35.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.480" endtime="20201030 11:50:35.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:35.791" level="INFO">${PHILIP_RES} = [{'diff': 0.0012048199999999988}, {'diff': 0.001204860999999998}, {'diff': 0.001204875000000001}, {'diff': 0.001204860999999998}, {'diff': 0.0012048610000000015}, {'diff': 0.0012048469999999985}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:35.788" endtime="20201030 11:50:35.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.795" level="INFO">${RESULT} = {'diff': [0.0012048199999999988, 0.001204860999999998, 0.001204875000000001, 0.001204860999999998, 0.0012048610000000015, 0.0012048469999999985, 0.001204860999999998, 0.001244180000000001, 0.001204860...</msg>
<status status="PASS" starttime="20201030 11:50:35.792" endtime="20201030 11:50:35.795"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.799" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:35.798" endtime="20201030 11:50:35.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.801" level="INFO">VALUE: [0.0012048199999999988, 0.001204860999999998, 0.001204875000000001, 0.001204860999999998, 0.0012048610000000015, 0.0012048469999999985, 0.001204860999999998, 0.001244180000000001, 0.001204860999999998, 0.0012048610000000015, 0.001204875000000001, 0.0012048610000000015, 0.0012049309999999994, 0.0012049170000000067, 0.0012048609999999946, 0.001204847000000002, 0.001204875000000001, 0.0012048610000000015, 0.0012048610000000015, 0.0012048609999999946, 0.0012048890000000007, 0.0012048330000000024, 0.0012048610000000015, 0.001204846999999995, 0.001204846999999995, 0.001204847000000002, 0.0012048890000000007, 0.0012048610000000015, 0.0012049309999999994, 0.0012048189999999959, 0.0012048890000000007, 0.0012048890000000007, 0.001204875000000001, 0.0012048610000000015, 0.0012048609999999946, 0.001204875000000001, 0.0012048329999999885, 0.0012048890000000007, 0.0012048610000000015, 0.0012048890000000007, 0.001204875000000008, 0.0012048610000000015, 0.0012048749999999941, 0.0012049310000000063, 0.0012048749999999941, 0.001204875000000008, 0.0012048890000000007, 0.0012048610000000015, 0.0012048610000000015, 0.0012048749999999941]</msg>
<status status="PASS" starttime="20201030 11:50:35.800" endtime="20201030 11:50:35.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.796" endtime="20201030 11:50:35.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.394" endtime="20201030 11:50:35.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.371" endtime="20201030 11:50:35.807"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.810" endtime="20201030 11:50:35.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.808" endtime="20201030 11:50:35.830"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.838" endtime="20201030 11:50:35.912"></status>
</kw>
<msg timestamp="20201030 11:50:35.913" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.836" endtime="20201030 11:50:35.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.918" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.915" endtime="20201030 11:50:35.919"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.921" endtime="20201030 11:50:35.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.834" endtime="20201030 11:50:35.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.832" endtime="20201030 11:50:35.928"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.941" endtime="20201030 11:50:36.244"></status>
</kw>
<msg timestamp="20201030 11:50:36.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018987944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.938" endtime="20201030 11:50:36.247"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.255" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017734958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.018987944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.248" endtime="20201030 11:50:36.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.256" endtime="20201030 11:50:36.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.933" endtime="20201030 11:50:36.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.929" endtime="20201030 11:50:36.258"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:36.262" level="INFO">${PHILIP_RES} = [{'diff': 0.001252986000000001}, {'diff': 0.001253068999999999}, {'diff': 0.0012530699999999985}, {'diff': 0.0012530419999999994}, {'diff': 0.0012529859999999976}, {'diff': 0.001253055999999999}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:36.259" endtime="20201030 11:50:36.263"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.266" level="INFO">${RESULT} = {'diff': [0.001252986000000001, 0.001253068999999999, 0.0012530699999999985, 0.0012530419999999994, 0.0012529859999999976, 0.001253055999999999, 0.0012530549999999994, 0.001253068999999999, 0.00125305...</msg>
<status status="PASS" starttime="20201030 11:50:36.263" endtime="20201030 11:50:36.267"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.271" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:36.270" endtime="20201030 11:50:36.271"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.273" level="INFO">VALUE: [0.001252986000000001, 0.001253068999999999, 0.0012530699999999985, 0.0012530419999999994, 0.0012529859999999976, 0.001253055999999999, 0.0012530549999999994, 0.001253068999999999, 0.0012530549999999994, 0.0012530549999999994, 0.001253055999999999, 0.001253054999999996, 0.0012530419999999959, 0.0012530419999999959, 0.0012530419999999959, 0.001253054999999996, 0.0012530689999999955, 0.0012530689999999955, 0.0012530559999999955, 0.001253069999999995, 0.0012530559999999955, 0.0012530840000000015, 0.0012530139999999967, 0.0012531109999999943, 0.0012877079999999985, 0.001253055000000003, 0.0012530690000000025, 0.001253055000000003, 0.0012530420000000028, 0.001253070000000002, 0.0012530560000000024, 0.001253070000000002, 0.0012530690000000025, 0.0012530690000000025, 0.0012530690000000025, 0.001253054999999989, 0.0012530559999999885, 0.0012530419999999959, 0.0012530559999999885, 0.0012530560000000024, 0.0012530560000000024, 0.001253054999999989, 0.0012530829999999882, 0.0012530689999999955, 0.001253055000000003, 0.0012530689999999955, 0.0012530559999999885, 0.0012530419999999959, 0.0012530419999999959, 0.001253055000000003]</msg>
<status status="PASS" starttime="20201030 11:50:36.272" endtime="20201030 11:50:36.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.267" endtime="20201030 11:50:36.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.830" endtime="20201030 11:50:36.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.807" endtime="20201030 11:50:36.276"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.278" endtime="20201030 11:50:36.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.277" endtime="20201030 11:50:36.298"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.306" endtime="20201030 11:50:36.382"></status>
</kw>
<msg timestamp="20201030 11:50:36.383" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.305" endtime="20201030 11:50:36.383"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.385" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.384" endtime="20201030 11:50:36.386"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.386" endtime="20201030 11:50:36.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.302" endtime="20201030 11:50:36.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.300" endtime="20201030 11:50:36.389"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.395" endtime="20201030 11:50:36.680"></status>
</kw>
<msg timestamp="20201030 11:50:36.683" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017763556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019065708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.394" endtime="20201030 11:50:36.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017763556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019065708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:36.685" endtime="20201030 11:50:36.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.693" endtime="20201030 11:50:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.391" endtime="20201030 11:50:36.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.390" endtime="20201030 11:50:36.696"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:36.700" level="INFO">${PHILIP_RES} = [{'diff': 0.0013021520000000009}, {'diff': 0.0013021530000000003}, {'diff': 0.0013021950000000025}, {'diff': 0.0013022079999999991}, {'diff': 0.00130218}, {'diff': 0.001302194999999999}, {'diff': 0.00...</msg>
<status status="PASS" starttime="20201030 11:50:36.697" endtime="20201030 11:50:36.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:36.705" level="INFO">${RESULT} = {'diff': [0.0013021520000000009, 0.0013021530000000003, 0.0013021950000000025, 0.0013022079999999991, 0.00130218, 0.001302194999999999, 0.0013022639999999974, 0.0013022079999999991, 0.0013021939999999...</msg>
<status status="PASS" starttime="20201030 11:50:36.701" endtime="20201030 11:50:36.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.709" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:36.708" endtime="20201030 11:50:36.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.712" level="INFO">VALUE: [0.0013021520000000009, 0.0013021530000000003, 0.0013021950000000025, 0.0013022079999999991, 0.00130218, 0.001302194999999999, 0.0013022639999999974, 0.0013022079999999991, 0.0013021939999999996, 0.0013022220000000022, 0.0013022089999999986, 0.0013021520000000009, 0.00130218, 0.001302195000000006, 0.001302194999999999, 0.00130218, 0.0013321659999999957, 0.0013022079999999991, 0.0013021809999999995, 0.0013022500000000048, 0.0013022079999999991, 0.0013021939999999996, 0.001302194999999999, 0.0013022219999999987, 0.00130218, 0.0013021939999999996, 0.001302195000000006, 0.0013021809999999995, 0.0013022360000000052, 0.0013022639999999974, 0.0013021809999999995, 0.0013021809999999995, 0.0013021940000000065, 0.0013022219999999918, 0.0013021809999999995, 0.0013022079999999991, 0.0013021939999999926, 0.0013022079999999991, 0.001302195000000006, 0.0013021530000000003, 0.0013021940000000065, 0.0013021809999999995, 0.0013021809999999995, 0.00130218, 0.00130218, 0.0013022089999999986, 0.001302195000000006, 0.00130218, 0.00130218, 0.0013022089999999986]</msg>
<status status="PASS" starttime="20201030 11:50:36.710" endtime="20201030 11:50:36.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.706" endtime="20201030 11:50:36.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.299" endtime="20201030 11:50:36.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.276" endtime="20201030 11:50:36.713"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:36.716" endtime="20201030 11:50:36.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.714" endtime="20201030 11:50:36.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.744" endtime="20201030 11:50:36.823"></status>
</kw>
<msg timestamp="20201030 11:50:36.824" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.742" endtime="20201030 11:50:36.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:36.829" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:36.826" endtime="20201030 11:50:36.829"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.831" endtime="20201030 11:50:36.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.740" endtime="20201030 11:50:36.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.738" endtime="20201030 11:50:36.836"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:36.850" endtime="20201030 11:50:37.154"></status>
</kw>
<msg timestamp="20201030 11:50:37.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01901825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:36.847" endtime="20201030 11:50:37.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.165" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017666097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01901825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:37.158" endtime="20201030 11:50:37.165"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.166" endtime="20201030 11:50:37.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.841" endtime="20201030 11:50:37.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.838" endtime="20201030 11:50:37.169"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:37.173" level="INFO">${PHILIP_RES} = [{'diff': 0.0013521530000000018}, {'diff': 0.0013522639999999989}, {'diff': 0.0013522639999999989}, {'diff': 0.0013522640000000023}, {'diff': 0.0013522500000000028}, {'diff': 0.0013522499999999993}, {...</msg>
<status status="PASS" starttime="20201030 11:50:37.169" endtime="20201030 11:50:37.173"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.177" level="INFO">${RESULT} = {'diff': [0.0013521530000000018, 0.0013522639999999989, 0.0013522639999999989, 0.0013522640000000023, 0.0013522500000000028, 0.0013522499999999993, 0.0013522639999999989, 0.0013522639999999989, 0.0013...</msg>
<status status="PASS" starttime="20201030 11:50:37.174" endtime="20201030 11:50:37.177"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.181" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:37.180" endtime="20201030 11:50:37.181"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.183" level="INFO">VALUE: [0.0013521530000000018, 0.0013522639999999989, 0.0013522639999999989, 0.0013522640000000023, 0.0013522500000000028, 0.0013522499999999993, 0.0013522639999999989, 0.0013522639999999989, 0.0013522639999999989, 0.0013523189999999977, 0.0013522770000000059, 0.0013522629999999994, 0.0013523060000000045, 0.0013522639999999989, 0.0013522639999999989, 0.0013523189999999977, 0.0013522499999999993, 0.0013522369999999992, 0.001352276999999999, 0.0013522779999999984, 0.0013522080000000006, 0.0013522499999999993, 0.0013522639999999989, 0.001352305000000005, 0.0013522639999999989, 0.0013522770000000059, 0.0013522639999999989, 0.0013522639999999989, 0.0013522499999999993, 0.0013522359999999997, 0.0013962920000000004, 0.0013522770000000059, 0.001352292000000005, 0.0013522499999999993, 0.0013522779999999984, 0.0013522630000000063, 0.001352209000000007, 0.001352263999999992, 0.0013523329999999972, 0.0013522779999999984, 0.001352320000000004, 0.0013522640000000058, 0.0013521950000000005, 0.0013521950000000005, 0.0013522499999999993, 0.0013522629999999924, 0.0013522640000000058, 0.0013522640000000058, 0.0013522640000000058, 0.0013522499999999993]</msg>
<status status="PASS" starttime="20201030 11:50:37.182" endtime="20201030 11:50:37.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.177" endtime="20201030 11:50:37.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.736" endtime="20201030 11:50:37.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:36.714" endtime="20201030 11:50:37.185"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:37.188" endtime="20201030 11:50:37.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.186" endtime="20201030 11:50:37.208"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.216" endtime="20201030 11:50:37.297"></status>
</kw>
<msg timestamp="20201030 11:50:37.298" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.214" endtime="20201030 11:50:37.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.300" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:37.299" endtime="20201030 11:50:37.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.301" endtime="20201030 11:50:37.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.212" endtime="20201030 11:50:37.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.210" endtime="20201030 11:50:37.305"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.311" endtime="20201030 11:50:37.596"></status>
</kw>
<msg timestamp="20201030 11:50:37.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017679375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019082597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.310" endtime="20201030 11:50:37.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.607" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017679375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019082597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:37.600" endtime="20201030 11:50:37.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:37.608" endtime="20201030 11:50:37.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.307" endtime="20201030 11:50:37.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.305" endtime="20201030 11:50:37.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:37.614" level="INFO">${PHILIP_RES} = [{'diff': 0.0014032219999999991}, {'diff': 0.0014032639999999978}, {'diff': 0.0014032640000000013}, {'diff': 0.0014032640000000013}, {'diff': 0.0014032640000000013}, {'diff': 0.0014032639999999978}, {...</msg>
<status status="PASS" starttime="20201030 11:50:37.611" endtime="20201030 11:50:37.615"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:37.618" level="INFO">${RESULT} = {'diff': [0.0014032219999999991, 0.0014032639999999978, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032639999999978, 0.0014032639999999978, 0.0014032500000000017, 0.0014...</msg>
<status status="PASS" starttime="20201030 11:50:37.615" endtime="20201030 11:50:37.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.623" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:37.622" endtime="20201030 11:50:37.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.625" level="INFO">VALUE: [0.0014032219999999991, 0.0014032639999999978, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032639999999978, 0.0014032639999999978, 0.0014032500000000017, 0.0014032359999999987, 0.001403304999999997, 0.0014032640000000013, 0.0014032629999999949, 0.0014032360000000021, 0.0014032770000000014, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032780000000009, 0.0014472919999999959, 0.0014031809999999964, 0.0014032769999999944, 0.0014032780000000009, 0.0014032770000000014, 0.0014032500000000017, 0.0014032770000000014, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032640000000013, 0.0014032360000000021, 0.0014032499999999948, 0.0014032639999999874, 0.0014032499999999948, 0.0014032640000000013, 0.0014032640000000013, 0.0014032360000000021, 0.0014032640000000013, 0.0014032500000000087, 0.0014032640000000013, 0.0014032219999999956, 0.0014032499999999948, 0.0014032499999999948, 0.0014032770000000083, 0.0014032640000000013, 0.0014032769999999944, 0.001403277999999994, 0.0014032630000000018]</msg>
<status status="PASS" starttime="20201030 11:50:37.624" endtime="20201030 11:50:37.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.619" endtime="20201030 11:50:37.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.208" endtime="20201030 11:50:37.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.186" endtime="20201030 11:50:37.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.179" endtime="20201030 11:50:37.628"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:15.710" endtime="20201030 11:50:37.629" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:49:52.202" endtime="20201030 11:50:37.638"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:37.708" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:37.717" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:38.819" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:37.707" endtime="20201030 11:50:38.820"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.822" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:38.821" endtime="20201030 11:50:38.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.705" endtime="20201030 11:50:38.823"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:38.825" endtime="20201030 11:50:39.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.824" endtime="20201030 11:50:39.013"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.025" endtime="20201030 11:50:39.045"></status>
</kw>
<msg timestamp="20201030 11:50:39.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebase...</msg>
<status status="PASS" starttime="20201030 11:50:39.024" endtime="20201030 11:50:39.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebase...</msg>
<status status="PASS" starttime="20201030 11:50:39.047" endtime="20201030 11:50:39.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.051" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:39.049" endtime="20201030 11:50:39.052"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.021" endtime="20201030 11:50:39.052"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.019" endtime="20201030 11:50:39.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.018" endtime="20201030 11:50:39.053"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:39.058" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:39.058" endtime="20201030 11:50:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.054" endtime="20201030 11:50:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.017" endtime="20201030 11:50:39.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.017" endtime="20201030 11:50:39.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.060" endtime="20201030 11:50:39.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.015" endtime="20201030 11:50:39.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.063" endtime="20201030 11:50:39.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.014" endtime="20201030 11:50:39.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:37.704" endtime="20201030 11:50:39.065"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.071" endtime="20201030 11:50:39.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.070" endtime="20201030 11:50:39.091"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.106" endtime="20201030 11:50:39.131"></status>
</kw>
<msg timestamp="20201030 11:50:39.132" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.103" endtime="20201030 11:50:39.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.137" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.134" endtime="20201030 11:50:39.138"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.144" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:39.140" endtime="20201030 11:50:39.144"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.100" endtime="20201030 11:50:39.146"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.098" endtime="20201030 11:50:39.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.097" endtime="20201030 11:50:39.147"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:39.155" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:39.154" endtime="20201030 11:50:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.149" endtime="20201030 11:50:39.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.096" endtime="20201030 11:50:39.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.095" endtime="20201030 11:50:39.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.159" endtime="20201030 11:50:39.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.094" endtime="20201030 11:50:39.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.092" endtime="20201030 11:50:39.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.068" endtime="20201030 11:50:39.165"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.187" endtime="20201030 11:50:39.205"></status>
</kw>
<msg timestamp="20201030 11:50:39.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.184" endtime="20201030 11:50:39.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.208" endtime="20201030 11:50:39.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.210" endtime="20201030 11:50:39.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.176" endtime="20201030 11:50:39.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.172" endtime="20201030 11:50:39.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.219" endtime="20201030 11:50:39.517"></status>
</kw>
<msg timestamp="20201030 11:50:39.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109990917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109994264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.218" endtime="20201030 11:50:39.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.529" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.109990917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.109994264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.522" endtime="20201030 11:50:39.529"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.530" endtime="20201030 11:50:39.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.215" endtime="20201030 11:50:39.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.213" endtime="20201030 11:50:39.533"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.537" level="INFO">${RESULT} = [{'diff': 3.347000000000766e-06}, {'diff': 4.541000000010675e-06}, {'diff': 5.165999999987014e-06}, {'diff': 4.52800000000364e-06}, {'diff': 3.29200000000196e-06}, {'diff': 5.221999999999172e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:39.534" endtime="20201030 11:50:39.537"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:39.541" level="INFO">${ACCURACY} = {'diff': [3.347000000000766e-06, 4.541000000010675e-06, 5.165999999987014e-06, 4.52800000000364e-06, 3.29200000000196e-06, 5.221999999999172e-06, 3.26400000000282e-06, 3.347000000000766e-06, 4.5280000...</msg>
<status status="PASS" starttime="20201030 11:50:39.538" endtime="20201030 11:50:39.541"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.546" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:50:39.545" endtime="20201030 11:50:39.547"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.549" level="INFO">VALUE: [3.347000000000766e-06, 4.541000000010675e-06, 5.165999999987014e-06, 4.52800000000364e-06, 3.29200000000196e-06, 5.221999999999172e-06, 3.26400000000282e-06, 3.347000000000766e-06, 4.52800000000364e-06, 5.153000000007735e-06, 4.541999999996271e-06, 3.944000000005721e-06, 3.3329999999942572e-06, 4.569999999995411e-06, 3.319000000001626e-06, 5.167000000000366e-06, 3.957999999998352e-06, 4.485999999997992e-06, 4.513999999997131e-06, 3.360999999993397e-06, 3.945000000005194e-06, 4.541999999996271e-06, 5.153000000007735e-06, 3.347000000000766e-06, 5.208999999992137e-06, 3.333000000008135e-06, 5.180000000007401e-06, 4.540999999996798e-06, 3.9449999999913166e-06, 4.540999999996798e-06, 3.333000000008135e-06, 3.3329999999942572e-06, 3.945000000005194e-06, 4.52800000000364e-06, 3.9449999999913166e-06, 5.152000000008261e-06, 5.139000000001226e-06, 3.333999999993731e-06, 3.902999999999546e-06, 3.3329999999942572e-06, 5.152999999993857e-06, 4.555000000003306e-06, 3.916999999992177e-06, 4.485999999997992e-06, 4.542000000010149e-06, 4.485999999997992e-06, 4.5000000000045e-06, 4.52800000000364e-06, 4.5279999999897624e-06, 3.9449999999913166e-06]</msg>
<status status="PASS" starttime="20201030 11:50:39.548" endtime="20201030 11:50:39.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.542" endtime="20201030 11:50:39.550"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.553" endtime="20201030 11:50:39.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.552" endtime="20201030 11:50:39.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.551" endtime="20201030 11:50:39.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.168" endtime="20201030 11:50:39.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.167" endtime="20201030 11:50:39.574"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.583" endtime="20201030 11:50:39.597"></status>
</kw>
<msg timestamp="20201030 11:50:39.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.581" endtime="20201030 11:50:39.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.599" endtime="20201030 11:50:39.600"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.601" endtime="20201030 11:50:39.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.579" endtime="20201030 11:50:39.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.577" endtime="20201030 11:50:39.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.611" endtime="20201030 11:50:39.896"></status>
</kw>
<msg timestamp="20201030 11:50:39.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.609" endtime="20201030 11:50:39.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021843319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021849708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.900" endtime="20201030 11:50:39.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.908" endtime="20201030 11:50:39.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.606" endtime="20201030 11:50:39.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.604" endtime="20201030 11:50:39.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.915" level="INFO">${RESULT} = [{'diff': 6.388999999999007e-06}, {'diff': 5.153000000000796e-06}, {'diff': 5.735999999999242e-06}, {'diff': 6.930000000002212e-06}, {'diff': 6.374999999999437e-06}, {'diff': 6.959000000000826e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:39.912" endtime="20201030 11:50:39.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:39.920" level="INFO">${ACCURACY} = {'diff': [6.388999999999007e-06, 5.153000000000796e-06, 5.735999999999242e-06, 6.930000000002212e-06, 6.374999999999437e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.2779999999984515e-06, 6.34...</msg>
<status status="PASS" starttime="20201030 11:50:39.916" endtime="20201030 11:50:39.920"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.925" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:50:39.924" endtime="20201030 11:50:39.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.927" level="INFO">VALUE: [6.388999999999007e-06, 5.153000000000796e-06, 5.735999999999242e-06, 6.930000000002212e-06, 6.374999999999437e-06, 6.959000000000826e-06, 6.9719999999974525e-06, 6.2779999999984515e-06, 6.3479999999997705e-06, 5.097000000002516e-06, 6.9719999999974525e-06, 5.152000000001322e-06, 5.1249999999981866e-06, 5.138000000001752e-06, 5.735999999999242e-06, 6.333000000000727e-06, 5.1389999999977565e-06, 5.749999999998812e-06, 6.959000000000826e-06, 6.985999999997022e-06, 6.959000000000826e-06, 6.931000000001686e-06, 5.735999999999242e-06, 6.360999999999867e-06, 6.3479999999997705e-06, 6.306000000001061e-06, 5.153000000000796e-06, 6.943999999998313e-06, 5.749999999998812e-06, 6.958000000001352e-06, 6.292000000001491e-06, 5.736999999998715e-06, 6.360999999999867e-06, 7.0419999999987715e-06, 6.972000000000922e-06, 6.9579999999978825e-06, 5.750000000002281e-06, 5.1389999999977565e-06, 6.9579999999978825e-06, 6.959000000000826e-06, 6.333000000000727e-06, 6.958000000001352e-06, 5.749999999998812e-06, 6.347000000000297e-06, 6.360999999999867e-06, 6.959000000000826e-06, 5.750000000002281e-06, 5.153000000000796e-06, 5.750000000002281e-06, 5.721999999999672e-06]</msg>
<status status="PASS" starttime="20201030 11:50:39.926" endtime="20201030 11:50:39.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.921" endtime="20201030 11:50:39.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.932" endtime="20201030 11:50:39.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.930" endtime="20201030 11:50:39.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.929" endtime="20201030 11:50:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.575" endtime="20201030 11:50:39.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.574" endtime="20201030 11:50:39.952"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.961" endtime="20201030 11:50:39.976"></status>
</kw>
<msg timestamp="20201030 11:50:39.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.959" endtime="20201030 11:50:39.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.977" endtime="20201030 11:50:39.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.980" endtime="20201030 11:50:39.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.957" endtime="20201030 11:50:39.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.955" endtime="20201030 11:50:39.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.989" endtime="20201030 11:50:40.275"></status>
</kw>
<msg timestamp="20201030 11:50:40.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02208925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:39.988" endtime="20201030 11:50:40.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02208925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022097417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:40.280" endtime="20201030 11:50:40.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.288" endtime="20201030 11:50:40.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.985" endtime="20201030 11:50:40.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.984" endtime="20201030 11:50:40.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.295" level="INFO">${RESULT} = [{'diff': 8.166999999999897e-06}, {'diff': 7.570000000001881e-06}, {'diff': 8.791000000001048e-06}, {'diff': 7.555999999998841e-06}, {'diff': 8.764000000001382e-06}, {'diff': 8.792000000000522e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:40.291" endtime="20201030 11:50:40.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:40.299" level="INFO">${ACCURACY} = {'diff': [8.166999999999897e-06, 7.570000000001881e-06, 8.791000000001048e-06, 7.555999999998841e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.111000000001617e-06, 8.764000000001382e-06, 8.7920...</msg>
<status status="PASS" starttime="20201030 11:50:40.296" endtime="20201030 11:50:40.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.303" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:50:40.302" endtime="20201030 11:50:40.304"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.306" level="INFO">VALUE: [8.166999999999897e-06, 7.570000000001881e-06, 8.791000000001048e-06, 7.555999999998841e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.111000000001617e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.764000000001382e-06, 9.374999999998967e-06, 8.138999999997287e-06, 8.166000000000423e-06, 8.165999999996953e-06, 8.166000000000423e-06, 8.777999999997482e-06, 9.389000000002007e-06, 7.568999999998938e-06, 7.5419999999992715e-06, 8.180999999999466e-06, 9.388999999998537e-06, 8.179999999999993e-06, 7.554999999999368e-06, 9.374999999998967e-06, 8.166999999999897e-06, 8.735999999998773e-06, 7.569000000002407e-06, 7.5969999999980775e-06, 8.764000000001382e-06, 8.832999999999758e-06, 7.582999999998508e-06, 7.555999999998841e-06, 8.778000000000952e-06, 8.179999999999993e-06, 9.374999999998967e-06, 7.569999999998411e-06, 8.764000000001382e-06, 8.750000000001812e-06, 9.403000000001577e-06, 8.153000000000327e-06, 8.764000000001382e-06, 8.792000000000522e-06, 8.166999999999897e-06, 7.570000000001881e-06, 7.598000000001021e-06, 8.776999999998009e-06, 8.166999999999897e-06, 8.166999999999897e-06, 8.777000000001478e-06, 8.792000000000522e-06]</msg>
<status status="PASS" starttime="20201030 11:50:40.304" endtime="20201030 11:50:40.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.300" endtime="20201030 11:50:40.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.310" endtime="20201030 11:50:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.309" endtime="20201030 11:50:40.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.308" endtime="20201030 11:50:40.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.953" endtime="20201030 11:50:40.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.953" endtime="20201030 11:50:40.331"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.340" endtime="20201030 11:50:40.355"></status>
</kw>
<msg timestamp="20201030 11:50:40.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.338" endtime="20201030 11:50:40.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.357" endtime="20201030 11:50:40.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.360" endtime="20201030 11:50:40.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.336" endtime="20201030 11:50:40.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.334" endtime="20201030 11:50:40.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.369" endtime="20201030 11:50:40.655"></status>
</kw>
<msg timestamp="20201030 11:50:40.658" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.367" endtime="20201030 11:50:40.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022606569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.659" endtime="20201030 11:50:40.667"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.668" endtime="20201030 11:50:40.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.365" endtime="20201030 11:50:40.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.363" endtime="20201030 11:50:40.670"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:40.674" level="INFO">${RESULT} = [{'diff': 1.1207999999998663e-05}, {'diff': 9.402999999998107e-06}, {'diff': 1.0500000000000093e-05}, {'diff': 1.1195000000002037e-05}, {'diff': 9.972000000000453e-06}, {'diff': 1.0597000000001078e-05...</msg>
<status status="PASS" starttime="20201030 11:50:40.671" endtime="20201030 11:50:40.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:40.678" level="INFO">${ACCURACY} = {'diff': [1.1207999999998663e-05, 9.402999999998107e-06, 1.0500000000000093e-05, 1.1195000000002037e-05, 9.972000000000453e-06, 1.0597000000001078e-05, 1.1179999999999524e-05, 9.986000000000023e-06, 1...</msg>
<status status="PASS" starttime="20201030 11:50:40.675" endtime="20201030 11:50:40.678"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.683" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:50:40.682" endtime="20201030 11:50:40.683"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.685" level="INFO">VALUE: [1.1207999999998663e-05, 9.402999999998107e-06, 1.0500000000000093e-05, 1.1195000000002037e-05, 9.972000000000453e-06, 1.0597000000001078e-05, 1.1179999999999524e-05, 9.986000000000023e-06, 1.0583999999997512e-05, 1.0583000000001508e-05, 9.374999999998967e-06, 9.972000000000453e-06, 1.0542000000002272e-05, 1.0569000000001938e-05, 9.375000000002437e-06, 9.986000000000023e-06, 9.374999999998967e-06, 1.1195000000002037e-05, 1.0597000000001078e-05, 1.0610999999997178e-05, 1.1179999999999524e-05, 1.1193999999999094e-05, 9.958000000000883e-06, 9.388999999998537e-06, 1.1195000000002037e-05, 9.971999999996983e-06, 9.986999999999496e-06, 1.0582999999998038e-05, 1.0596999999997608e-05, 1.0041999999998302e-05, 9.347999999999301e-06, 9.374999999998967e-06, 9.999999999999593e-06, 1.0583000000001508e-05, 9.417000000001147e-06, 1.1180999999998997e-05, 9.986000000000023e-06, 9.360999999999398e-06, 9.972000000000453e-06, 1.0012999999999689e-05, 9.374999999998967e-06, 1.0583000000001508e-05, 1.0569000000001938e-05, 9.375000000002437e-06, 1.0598000000000551e-05, 9.986000000000023e-06, 9.972000000000453e-06, 1.0584000000000982e-05, 1.0583999999997512e-05, 1.0596999999997608e-05]</msg>
<status status="PASS" starttime="20201030 11:50:40.684" endtime="20201030 11:50:40.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.679" endtime="20201030 11:50:40.687"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:40.691" endtime="20201030 11:50:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.689" endtime="20201030 11:50:40.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.688" endtime="20201030 11:50:40.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.332" endtime="20201030 11:50:40.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.331" endtime="20201030 11:50:40.711"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.720" endtime="20201030 11:50:40.736"></status>
</kw>
<msg timestamp="20201030 11:50:40.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.718" endtime="20201030 11:50:40.736"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:40.739" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:40.737" endtime="20201030 11:50:40.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.740" endtime="20201030 11:50:40.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.716" endtime="20201030 11:50:40.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.714" endtime="20201030 11:50:40.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:40.749" endtime="20201030 11:50:41.035"></status>
</kw>
<msg timestamp="20201030 11:50:41.038" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:40.748" endtime="20201030 11:50:41.039"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.047" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022703208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.039" endtime="20201030 11:50:41.047"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.048" endtime="20201030 11:50:41.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.745" endtime="20201030 11:50:41.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.743" endtime="20201030 11:50:41.050"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.054" level="INFO">${RESULT} = [{'diff': 1.2985999999999553e-05}, {'diff': 1.2417000000000677e-05}, {'diff': 1.2403000000001108e-05}, {'diff': 1.2387999999998595e-05}, {'diff': 1.2346999999999358e-05}, {'diff': 1.2987000000002497e-...</msg>
<status status="PASS" starttime="20201030 11:50:41.051" endtime="20201030 11:50:41.055"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.059" level="INFO">${ACCURACY} = {'diff': [1.2985999999999553e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2387999999998595e-05, 1.2346999999999358e-05, 1.2987000000002497e-05, 1.2457999999999914e-05, 1.2999999999999123e-05...</msg>
<status status="PASS" starttime="20201030 11:50:41.055" endtime="20201030 11:50:41.060"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.064" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.063" endtime="20201030 11:50:41.064"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.066" level="INFO">VALUE: [1.2985999999999553e-05, 1.2417000000000677e-05, 1.2403000000001108e-05, 1.2387999999998595e-05, 1.2346999999999358e-05, 1.2987000000002497e-05, 1.2457999999999914e-05, 1.2999999999999123e-05, 1.2916999999997708e-05, 1.2444999999999817e-05, 1.2403000000001108e-05, 1.2388000000002064e-05, 1.2388999999998068e-05, 1.2985999999999553e-05, 1.2985999999999553e-05, 1.1207999999998663e-05, 1.1778000000000483e-05, 1.30689999999975e-05, 1.2958999999999887e-05, 1.2389000000001538e-05, 1.2985999999999553e-05, 1.1805999999999622e-05, 1.2417000000000677e-05, 1.1792000000000052e-05, 1.1833000000002758e-05, 1.2403000000001108e-05, 1.2388999999998068e-05, 1.1792000000000052e-05, 1.2389000000001538e-05, 1.2401999999998164e-05, 1.3013999999998693e-05, 1.1791000000000579e-05, 1.1860999999998428e-05, 1.2402000000001634e-05, 1.2403000000001108e-05, 1.1778000000000483e-05, 1.2985999999999553e-05, 1.1792000000000052e-05, 1.2403000000001108e-05, 1.1791000000000579e-05, 1.1778000000000483e-05, 1.3013999999998693e-05, 1.2415999999997734e-05, 1.1735999999998303e-05, 1.1778000000000483e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.2389000000001538e-05, 1.1180999999998997e-05, 1.3070000000000442e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.065" endtime="20201030 11:50:41.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.060" endtime="20201030 11:50:41.067"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.071" endtime="20201030 11:50:41.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.069" endtime="20201030 11:50:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.068" endtime="20201030 11:50:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.712" endtime="20201030 11:50:41.091"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:40.712" endtime="20201030 11:50:41.091"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.101" endtime="20201030 11:50:41.115"></status>
</kw>
<msg timestamp="20201030 11:50:41.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.099" endtime="20201030 11:50:41.116"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.117" endtime="20201030 11:50:41.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.119" endtime="20201030 11:50:41.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.096" endtime="20201030 11:50:41.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.094" endtime="20201030 11:50:41.122"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.128" endtime="20201030 11:50:41.416"></status>
</kw>
<msg timestamp="20201030 11:50:41.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.127" endtime="20201030 11:50:41.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.427" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022180694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022194889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.420" endtime="20201030 11:50:41.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.428" endtime="20201030 11:50:41.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.124" endtime="20201030 11:50:41.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.123" endtime="20201030 11:50:41.431"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.435" level="INFO">${RESULT} = [{'diff': 1.4194999999998098e-05}, {'diff': 1.3611000000000179e-05}, {'diff': 1.4208999999997668e-05}, {'diff': 1.4848000000001332e-05}, {'diff': 1.3569999999997473e-05}, {'diff': 1.480499999999968e-0...</msg>
<status status="PASS" starttime="20201030 11:50:41.432" endtime="20201030 11:50:41.435"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.439" level="INFO">${ACCURACY} = {'diff': [1.4194999999998098e-05, 1.3611000000000179e-05, 1.4208999999997668e-05, 1.4848000000001332e-05, 1.3569999999997473e-05, 1.480499999999968e-05, 1.481899999999925e-05, 1.4805999999999153e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:41.436" endtime="20201030 11:50:41.439"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.444" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.442" endtime="20201030 11:50:41.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.446" level="INFO">VALUE: [1.4194999999998098e-05, 1.3611000000000179e-05, 1.4208999999997668e-05, 1.4848000000001332e-05, 1.3569999999997473e-05, 1.480499999999968e-05, 1.481899999999925e-05, 1.4805999999999153e-05, 1.3596999999997139e-05, 1.3611000000000179e-05, 1.4250000000000373e-05, 1.4250000000000373e-05, 1.4207999999998194e-05, 1.3598000000000082e-05, 1.358299999999757e-05, 1.480499999999968e-05, 1.4819999999998723e-05, 1.480499999999968e-05, 1.3611999999999652e-05, 1.4208000000001664e-05, 1.4208000000001664e-05, 1.3652999999998888e-05, 1.3611000000000179e-05, 1.2999999999999123e-05, 1.4833000000002289e-05, 1.480499999999968e-05, 1.3624999999999748e-05, 1.3624999999999748e-05, 1.2986000000003023e-05, 1.481899999999925e-05, 1.2999999999999123e-05, 1.4833999999998293e-05, 1.4750000000000874e-05, 1.481899999999925e-05, 1.4847000000001859e-05, 1.4222000000001234e-05, 1.4833000000002289e-05, 1.3638999999999318e-05, 1.2986000000003023e-05, 1.4195000000001567e-05, 1.3611000000000179e-05, 1.4806000000002623e-05, 1.3611000000000179e-05, 1.3611000000000179e-05, 1.4764000000000443e-05, 1.3624999999999748e-05, 1.358299999999757e-05, 1.4195000000001567e-05, 1.4221999999997764e-05, 1.4820000000002193e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.445" endtime="20201030 11:50:41.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.440" endtime="20201030 11:50:41.447"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.450" endtime="20201030 11:50:41.470"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.449" endtime="20201030 11:50:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.448" endtime="20201030 11:50:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.092" endtime="20201030 11:50:41.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.092" endtime="20201030 11:50:41.472"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.480" endtime="20201030 11:50:41.496"></status>
</kw>
<msg timestamp="20201030 11:50:41.497" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.479" endtime="20201030 11:50:41.497"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.499" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.498" endtime="20201030 11:50:41.499"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.500" endtime="20201030 11:50:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.476" endtime="20201030 11:50:41.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.474" endtime="20201030 11:50:41.503"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.509" endtime="20201030 11:50:41.795"></status>
</kw>
<msg timestamp="20201030 11:50:41.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.508" endtime="20201030 11:50:41.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022905361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.799" endtime="20201030 11:50:41.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.807" endtime="20201030 11:50:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.505" endtime="20201030 11:50:41.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.503" endtime="20201030 11:50:41.810"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:41.814" level="INFO">${RESULT} = [{'diff': 1.662499999999928e-05}, {'diff': 1.661099999999971e-05}, {'diff': 1.668100000000103e-05}, {'diff': 1.5415999999997265e-05}, {'diff': 1.5430999999999778e-05}, {'diff': 1.658300000000057e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:41.811" endtime="20201030 11:50:41.814"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:41.818" level="INFO">${ACCURACY} = {'diff': [1.662499999999928e-05, 1.661099999999971e-05, 1.668100000000103e-05, 1.5415999999997265e-05, 1.5430999999999778e-05, 1.658300000000057e-05, 1.541700000000021e-05, 1.5430999999999778e-05, 1.5...</msg>
<status status="PASS" starttime="20201030 11:50:41.815" endtime="20201030 11:50:41.818"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.823" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:50:41.821" endtime="20201030 11:50:41.823"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.825" level="INFO">VALUE: [1.662499999999928e-05, 1.661099999999971e-05, 1.668100000000103e-05, 1.5415999999997265e-05, 1.5430999999999778e-05, 1.658300000000057e-05, 1.541700000000021e-05, 1.5430999999999778e-05, 1.5429999999996835e-05, 1.5430000000000305e-05, 1.5430000000000305e-05, 1.663899999999885e-05, 1.7249999999999904e-05, 1.7236000000000334e-05, 1.5416000000000735e-05, 1.541700000000021e-05, 1.6027999999997794e-05, 1.7236000000000334e-05, 1.662499999999928e-05, 1.663899999999885e-05, 1.663899999999885e-05, 1.5416000000000735e-05, 1.662499999999928e-05, 1.5999999999998654e-05, 1.5471999999999014e-05, 1.602700000000179e-05, 1.5444999999999348e-05, 1.6027999999997794e-05, 1.7194000000001625e-05, 1.5444999999999348e-05, 1.604099999999789e-05, 1.5458000000002914e-05, 1.7264000000002944e-05, 1.661099999999971e-05, 1.662499999999928e-05, 1.541700000000021e-05, 1.7236000000000334e-05, 1.661099999999971e-05, 1.661099999999971e-05, 1.5430999999999778e-05, 1.6013999999998224e-05, 1.5430000000000305e-05, 1.5999999999998654e-05, 1.6028000000001263e-05, 1.661099999999971e-05, 1.662500000000275e-05, 1.5985999999999084e-05, 1.662499999999928e-05, 1.540300000000064e-05, 1.663899999999885e-05]</msg>
<status status="PASS" starttime="20201030 11:50:41.824" endtime="20201030 11:50:41.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.819" endtime="20201030 11:50:41.827"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:41.831" endtime="20201030 11:50:41.850"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.829" endtime="20201030 11:50:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.828" endtime="20201030 11:50:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.472" endtime="20201030 11:50:41.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.472" endtime="20201030 11:50:41.852"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.860" endtime="20201030 11:50:41.875"></status>
</kw>
<msg timestamp="20201030 11:50:41.876" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.859" endtime="20201030 11:50:41.876"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:41.878" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:41.877" endtime="20201030 11:50:41.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.879" endtime="20201030 11:50:41.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.856" endtime="20201030 11:50:41.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.854" endtime="20201030 11:50:41.882"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:41.888" endtime="20201030 11:50:42.174"></status>
</kw>
<msg timestamp="20201030 11:50:42.177" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:41.887" endtime="20201030 11:50:42.177"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.185" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021889528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.178" endtime="20201030 11:50:42.185"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.186" endtime="20201030 11:50:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.884" endtime="20201030 11:50:42.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.883" endtime="20201030 11:50:42.189"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.193" level="INFO">${RESULT} = [{'diff': 1.783300000000182e-05}, {'diff': 1.9013999999997755e-05}, {'diff': 1.7750000000000404e-05}, {'diff': 1.9027999999997325e-05}, {'diff': 1.9027999999997325e-05}, {'diff': 1.9042000000000364e-0...</msg>
<status status="PASS" starttime="20201030 11:50:42.190" endtime="20201030 11:50:42.193"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:42.198" level="INFO">${ACCURACY} = {'diff': [1.783300000000182e-05, 1.9013999999997755e-05, 1.7750000000000404e-05, 1.9027999999997325e-05, 1.9027999999997325e-05, 1.9042000000000364e-05, 1.844499999999888e-05, 1.8429999999999835e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:42.194" endtime="20201030 11:50:42.198"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.202" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:50:42.201" endtime="20201030 11:50:42.203"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.205" level="INFO">VALUE: [1.783300000000182e-05, 1.9013999999997755e-05, 1.7750000000000404e-05, 1.9027999999997325e-05, 1.9027999999997325e-05, 1.9042000000000364e-05, 1.844499999999888e-05, 1.8429999999999835e-05, 1.9042000000000364e-05, 1.7222000000000764e-05, 1.8429999999999835e-05, 1.9055999999999934e-05, 1.783300000000182e-05, 1.8443999999999405e-05, 1.912500000000178e-05, 1.784700000000139e-05, 1.7833999999997824e-05, 1.7249999999999904e-05, 1.844499999999888e-05, 1.7833999999997824e-05, 1.8443999999999405e-05, 1.7249999999999904e-05, 1.8472000000002015e-05, 1.902699999999785e-05, 1.783299999999835e-05, 1.7236999999999808e-05, 1.904099999999742e-05, 1.7902000000000196e-05, 1.8457999999998975e-05, 1.9041999999996895e-05, 1.7236000000000334e-05, 1.9041999999996895e-05, 1.7848000000000863e-05, 1.7223000000000238e-05, 1.7778000000003014e-05, 1.9041999999996895e-05, 1.7209000000000668e-05, 1.784699999999792e-05, 1.905500000000046e-05, 1.9055999999999934e-05, 1.8443999999999405e-05, 1.905500000000046e-05, 1.7263999999999474e-05, 1.8429999999999835e-05, 1.783300000000182e-05, 1.905500000000046e-05, 1.9042000000000364e-05, 1.783300000000182e-05, 1.8443999999999405e-05, 1.7222000000000764e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.203" endtime="20201030 11:50:42.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.199" endtime="20201030 11:50:42.206"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.210" endtime="20201030 11:50:42.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.208" endtime="20201030 11:50:42.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.207" endtime="20201030 11:50:42.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.852" endtime="20201030 11:50:42.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:41.852" endtime="20201030 11:50:42.230"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.239" endtime="20201030 11:50:42.254"></status>
</kw>
<msg timestamp="20201030 11:50:42.254" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.237" endtime="20201030 11:50:42.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.257" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.255" endtime="20201030 11:50:42.257"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.258" endtime="20201030 11:50:42.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.235" endtime="20201030 11:50:42.260"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.233" endtime="20201030 11:50:42.261"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.267" endtime="20201030 11:50:42.555"></status>
</kw>
<msg timestamp="20201030 11:50:42.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.266" endtime="20201030 11:50:42.559"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.567" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021605694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021626556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.559" endtime="20201030 11:50:42.567"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.568" endtime="20201030 11:50:42.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.263" endtime="20201030 11:50:42.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.261" endtime="20201030 11:50:42.570"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.574" level="INFO">${RESULT} = [{'diff': 2.0861999999999964e-05}, {'diff': 2.086100000000049e-05}, {'diff': 2.0235999999999865e-05}, {'diff': 2.0305999999997715e-05}, {'diff': 1.965300000000142e-05}, {'diff': 2.084699999999745e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:42.571" endtime="20201030 11:50:42.575"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:42.578" level="INFO">${ACCURACY} = {'diff': [2.0861999999999964e-05, 2.086100000000049e-05, 2.0235999999999865e-05, 2.0305999999997715e-05, 1.965300000000142e-05, 2.084699999999745e-05, 2.087500000000006e-05, 1.9666000000001516e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:50:42.575" endtime="20201030 11:50:42.579"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.583" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:50:42.582" endtime="20201030 11:50:42.583"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.585" level="INFO">VALUE: [2.0861999999999964e-05, 2.086100000000049e-05, 2.0235999999999865e-05, 2.0305999999997715e-05, 1.965300000000142e-05, 2.084699999999745e-05, 2.087500000000006e-05, 1.9666000000001516e-05, 1.9583999999999574e-05, 1.963899999999838e-05, 1.9638000000002376e-05, 2.145899999999798e-05, 1.968100000000056e-05, 2.086100000000049e-05, 1.968100000000056e-05, 1.966699999999752e-05, 2.086100000000049e-05, 2.0848000000000394e-05, 2.083299999999788e-05, 2.0249999999999435e-05, 1.963900000000185e-05, 1.965300000000142e-05, 1.9665999999998046e-05, 1.965299999999795e-05, 2.084699999999745e-05, 2.086100000000049e-05, 2.0249999999999435e-05, 1.904099999999742e-05, 2.086099999999702e-05, 1.965299999999795e-05, 1.965300000000142e-05, 2.0263999999999005e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2.0834000000000824e-05, 2.0250000000002905e-05, 1.965299999999795e-05, 2.086099999999702e-05, 2.0249999999999435e-05, 2.0235999999999865e-05, 2.0235999999999865e-05, 2.0208000000000725e-05, 1.963900000000185e-05, 2.084700000000092e-05, 1.959700000000314e-05, 2.0305999999997715e-05, 1.9651999999998476e-05, 2.0249999999999435e-05, 1.965299999999795e-05, 1.965300000000142e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.584" endtime="20201030 11:50:42.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.579" endtime="20201030 11:50:42.587"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.590" endtime="20201030 11:50:42.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.589" endtime="20201030 11:50:42.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.588" endtime="20201030 11:50:42.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.231" endtime="20201030 11:50:42.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.231" endtime="20201030 11:50:42.611"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.620" endtime="20201030 11:50:42.636"></status>
</kw>
<msg timestamp="20201030 11:50:42.636" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.618" endtime="20201030 11:50:42.637"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.639" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.637" endtime="20201030 11:50:42.639"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.640" endtime="20201030 11:50:42.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.616" endtime="20201030 11:50:42.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.613" endtime="20201030 11:50:42.642"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.649" endtime="20201030 11:50:42.934"></status>
</kw>
<msg timestamp="20201030 11:50:42.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.647" endtime="20201030 11:50:42.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022668264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022690903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:42.938" endtime="20201030 11:50:42.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.946" endtime="20201030 11:50:42.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.645" endtime="20201030 11:50:42.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.643" endtime="20201030 11:50:42.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.952" level="INFO">${RESULT} = [{'diff': 2.263899999999791e-05}, {'diff': 2.1443999999998936e-05}, {'diff': 2.2735999999998896e-05}, {'diff': 2.1471999999998076e-05}, {'diff': 2.2721999999999326e-05}, {'diff': 2.1430000000002836e-0...</msg>
<status status="PASS" starttime="20201030 11:50:42.949" endtime="20201030 11:50:42.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:42.957" level="INFO">${ACCURACY} = {'diff': [2.263899999999791e-05, 2.1443999999998936e-05, 2.2735999999998896e-05, 2.1471999999998076e-05, 2.2721999999999326e-05, 2.1430000000002836e-05, 2.2014000000000755e-05, 2.1457999999998506e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:42.953" endtime="20201030 11:50:42.957"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.961" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:50:42.960" endtime="20201030 11:50:42.961"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.964" level="INFO">VALUE: [2.263899999999791e-05, 2.1443999999998936e-05, 2.2735999999998896e-05, 2.1471999999998076e-05, 2.2721999999999326e-05, 2.1430000000002836e-05, 2.2014000000000755e-05, 2.1457999999998506e-05, 2.1458000000001975e-05, 2.1457999999998506e-05, 2.266699999999705e-05, 2.1485999999997646e-05, 2.1443999999998936e-05, 2.1457999999998506e-05, 2.144499999999841e-05, 2.1443999999998936e-05, 2.1471999999998076e-05, 2.268100000000009e-05, 2.3276999999998632e-05, 2.1472000000001545e-05, 2.151300000000078e-05, 2.143100000000231e-05, 2.2055999999999465e-05, 2.27229999999988e-05, 2.266700000000052e-05, 2.265300000000095e-05, 2.1457999999998506e-05, 2.208299999999913e-05, 2.145900000000145e-05, 2.211100000000174e-05, 2.266700000000052e-05, 2.1457999999998506e-05, 2.2084000000002074e-05, 2.266700000000052e-05, 2.2083999999998605e-05, 2.265299999999748e-05, 2.2055999999999465e-05, 2.145900000000145e-05, 2.1443999999998936e-05, 2.3249999999998966e-05, 2.1985999999998146e-05, 2.206899999999956e-05, 2.32770000000021e-05, 2.2666000000001046e-05, 2.208299999999913e-05, 2.1472000000001545e-05, 2.2666000000001046e-05, 2.206899999999956e-05, 2.268100000000009e-05, 2.1443999999998936e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.962" endtime="20201030 11:50:42.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.957" endtime="20201030 11:50:42.966"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.969" endtime="20201030 11:50:42.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.968" endtime="20201030 11:50:42.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.967" endtime="20201030 11:50:42.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.612" endtime="20201030 11:50:42.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.611" endtime="20201030 11:50:42.990"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.999" endtime="20201030 11:50:43.013"></status>
</kw>
<msg timestamp="20201030 11:50:43.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.997" endtime="20201030 11:50:43.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.015" endtime="20201030 11:50:43.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.017" endtime="20201030 11:50:43.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.994" endtime="20201030 11:50:43.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.992" endtime="20201030 11:50:43.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.026" endtime="20201030 11:50:43.311"></status>
</kw>
<msg timestamp="20201030 11:50:43.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.025" endtime="20201030 11:50:43.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021817556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021842639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.315" endtime="20201030 11:50:43.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.324" endtime="20201030 11:50:43.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.022" endtime="20201030 11:50:43.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.021" endtime="20201030 11:50:43.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.330" level="INFO">${RESULT} = [{'diff': 2.508300000000213e-05}, {'diff': 2.3820000000000785e-05}, {'diff': 2.4500000000000216e-05}, {'diff': 2.5166000000000077e-05}, {'diff': 2.3262999999999062e-05}, {'diff': 2.5152000000000507e-0...</msg>
<status status="PASS" starttime="20201030 11:50:43.327" endtime="20201030 11:50:43.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:43.335" level="INFO">${ACCURACY} = {'diff': [2.508300000000213e-05, 2.3820000000000785e-05, 2.4500000000000216e-05, 2.5166000000000077e-05, 2.3262999999999062e-05, 2.5152000000000507e-05, 2.3278000000001575e-05, 2.387499999999959e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:43.331" endtime="20201030 11:50:43.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.340" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:50:43.339" endtime="20201030 11:50:43.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.342" level="INFO">VALUE: [2.508300000000213e-05, 2.3820000000000785e-05, 2.4500000000000216e-05, 2.5166000000000077e-05, 2.3262999999999062e-05, 2.5152000000000507e-05, 2.3278000000001575e-05, 2.387499999999959e-05, 2.386100000000002e-05, 2.3792000000001645e-05, 2.3278000000001575e-05, 2.330500000000124e-05, 2.4486000000000646e-05, 2.386100000000002e-05, 2.448700000000012e-05, 2.3249999999998966e-05, 2.388899999999916e-05, 2.3249999999998966e-05, 2.448700000000012e-05, 2.4485999999997177e-05, 2.512500000000084e-05, 2.3861999999999495e-05, 2.5096999999998232e-05, 2.388900000000263e-05, 2.4500000000000216e-05, 2.5068999999999092e-05, 2.334699999999995e-05, 2.387499999999959e-05, 2.4472000000001076e-05, 2.387499999999959e-05, 2.3264000000002005e-05, 2.5082999999998662e-05, 2.4472000000001076e-05, 2.50970000000017e-05, 2.394499999999744e-05, 2.4486000000000646e-05, 2.3292000000001145e-05, 2.4486000000000646e-05, 2.388899999999916e-05, 2.386100000000002e-05, 2.5070000000002035e-05, 2.387499999999959e-05, 2.4486000000000646e-05, 2.4486000000000646e-05, 2.4472000000001076e-05, 2.383300000000088e-05, 2.508300000000213e-05, 2.4486000000000646e-05, 2.5084000000001605e-05, 2.384700000000045e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.341" endtime="20201030 11:50:43.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.336" endtime="20201030 11:50:43.343"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.347" endtime="20201030 11:50:43.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.346" endtime="20201030 11:50:43.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.344" endtime="20201030 11:50:43.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.991" endtime="20201030 11:50:43.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.990" endtime="20201030 11:50:43.368"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.376" endtime="20201030 11:50:43.392"></status>
</kw>
<msg timestamp="20201030 11:50:43.392" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.375" endtime="20201030 11:50:43.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.393" endtime="20201030 11:50:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.396" endtime="20201030 11:50:43.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.372" endtime="20201030 11:50:43.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.370" endtime="20201030 11:50:43.398"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.405" endtime="20201030 11:50:43.692"></status>
</kw>
<msg timestamp="20201030 11:50:43.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.403" endtime="20201030 11:50:43.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.696" endtime="20201030 11:50:43.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.704" endtime="20201030 11:50:43.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.401" endtime="20201030 11:50:43.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.399" endtime="20201030 11:50:43.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:43.711" level="INFO">${RESULT} = [{'diff': 2.690299999999826e-05}, {'diff': 2.57230000000018e-05}, {'diff': 2.570900000000223e-05}, {'diff': 2.568099999999962e-05}, {'diff': 2.508300000000213e-05}, {'diff': 2.6304999999997303e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:43.707" endtime="20201030 11:50:43.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:43.715" level="INFO">${ACCURACY} = {'diff': [2.690299999999826e-05, 2.57230000000018e-05, 2.570900000000223e-05, 2.568099999999962e-05, 2.508300000000213e-05, 2.6304999999997303e-05, 2.6292000000000676e-05, 2.5693999999999717e-05, 2.62...</msg>
<status status="PASS" starttime="20201030 11:50:43.712" endtime="20201030 11:50:43.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.719" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:50:43.718" endtime="20201030 11:50:43.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.722" level="INFO">VALUE: [2.690299999999826e-05, 2.57230000000018e-05, 2.570900000000223e-05, 2.568099999999962e-05, 2.508300000000213e-05, 2.6304999999997303e-05, 2.6292000000000676e-05, 2.5693999999999717e-05, 2.6277999999997637e-05, 2.6888999999998692e-05, 2.5707999999999287e-05, 2.5084000000001605e-05, 2.6278000000001106e-05, 2.6888999999998692e-05, 2.5083999999998136e-05, 2.6306000000000246e-05, 2.6277999999997637e-05, 2.6332999999999912e-05, 2.5680000000000147e-05, 2.5680000000000147e-05, 2.690300000000173e-05, 2.5040999999999952e-05, 2.5680000000000147e-05, 2.6277000000001632e-05, 2.568099999999962e-05, 2.6318999999996873e-05, 2.69170000000013e-05, 2.569499999999919e-05, 2.690299999999826e-05, 2.6292000000000676e-05, 2.5680000000000147e-05, 2.5084000000001605e-05, 2.6291999999997206e-05, 2.5680000000000147e-05, 2.566700000000005e-05, 2.569499999999919e-05, 2.6306000000000246e-05, 2.6887999999999218e-05, 2.5708000000002756e-05, 2.508300000000213e-05, 2.6291000000001202e-05, 2.688900000000216e-05, 2.5680000000000147e-05, 2.6276999999998163e-05, 2.6888999999998692e-05, 2.6874999999999122e-05, 2.5082999999998662e-05, 2.6292000000000676e-05, 2.6888999999998692e-05, 2.5040999999999952e-05]</msg>
<status status="PASS" starttime="20201030 11:50:43.720" endtime="20201030 11:50:43.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.716" endtime="20201030 11:50:43.723"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:43.727" endtime="20201030 11:50:43.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.725" endtime="20201030 11:50:43.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.724" endtime="20201030 11:50:43.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.369" endtime="20201030 11:50:43.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.368" endtime="20201030 11:50:43.747"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.756" endtime="20201030 11:50:43.773"></status>
</kw>
<msg timestamp="20201030 11:50:43.773" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.754" endtime="20201030 11:50:43.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:43.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:43.774" endtime="20201030 11:50:43.776"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.777" endtime="20201030 11:50:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.752" endtime="20201030 11:50:43.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.750" endtime="20201030 11:50:43.779"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:43.786" endtime="20201030 11:50:44.072"></status>
</kw>
<msg timestamp="20201030 11:50:44.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:43.784" endtime="20201030 11:50:44.075"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022783181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022810681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.076" endtime="20201030 11:50:44.083"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.084" endtime="20201030 11:50:44.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.782" endtime="20201030 11:50:44.086"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.780" endtime="20201030 11:50:44.087"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.091" level="INFO">${RESULT} = [{'diff': 2.7499999999999747e-05}, {'diff': 2.8111000000000802e-05}, {'diff': 2.7556000000001496e-05}, {'diff': 2.7486000000000177e-05}, {'diff': 2.7527999999998887e-05}, {'diff': 2.870900000000176e-0...</msg>
<status status="PASS" starttime="20201030 11:50:44.088" endtime="20201030 11:50:44.091"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.095" level="INFO">${ACCURACY} = {'diff': [2.7499999999999747e-05, 2.8111000000000802e-05, 2.7556000000001496e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.870900000000176e-05, 2.7513999999999317e-05, 2.8098000000000706e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:44.092" endtime="20201030 11:50:44.095"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.099" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.098" endtime="20201030 11:50:44.100"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.102" level="INFO">VALUE: [2.7499999999999747e-05, 2.8111000000000802e-05, 2.7556000000001496e-05, 2.7486000000000177e-05, 2.7527999999998887e-05, 2.870900000000176e-05, 2.7513999999999317e-05, 2.8098000000000706e-05, 2.7499999999999747e-05, 2.8721999999998388e-05, 2.9319999999999347e-05, 2.869500000000219e-05, 2.9305999999999777e-05, 2.747300000000008e-05, 2.8084000000001136e-05, 2.9305000000000303e-05, 2.8040999999999483e-05, 2.9319999999999347e-05, 2.7542000000001926e-05, 2.8735999999997958e-05, 2.8112000000000276e-05, 2.7513999999999317e-05, 2.7513999999999317e-05, 2.9319999999999347e-05, 2.8068999999998623e-05, 2.869500000000219e-05, 2.8707999999998818e-05, 2.7514000000002786e-05, 2.9305999999999777e-05, 2.8152999999999512e-05, 2.6901999999998788e-05, 2.8735999999997958e-05, 2.8110999999997333e-05, 2.8707999999998818e-05, 2.869499999999872e-05, 2.8679999999999678e-05, 2.8111000000000802e-05, 2.7486000000000177e-05, 2.7429999999998428e-05, 2.9292000000000207e-05, 2.9305000000000303e-05, 2.872299999999786e-05, 2.744500000000094e-05, 2.7499999999999747e-05, 2.8097000000001232e-05, 2.8721999999998388e-05, 2.7499999999999747e-05, 2.7500000000003216e-05, 2.7528000000002356e-05, 2.9319999999999347e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.100" endtime="20201030 11:50:44.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.096" endtime="20201030 11:50:44.104"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.108" endtime="20201030 11:50:44.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.106" endtime="20201030 11:50:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.105" endtime="20201030 11:50:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.748" endtime="20201030 11:50:44.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:43.748" endtime="20201030 11:50:44.128"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.137" endtime="20201030 11:50:44.153"></status>
</kw>
<msg timestamp="20201030 11:50:44.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.135" endtime="20201030 11:50:44.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.155" endtime="20201030 11:50:44.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.157" endtime="20201030 11:50:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.133" endtime="20201030 11:50:44.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.131" endtime="20201030 11:50:44.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.166" endtime="20201030 11:50:44.451"></status>
</kw>
<msg timestamp="20201030 11:50:44.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.165" endtime="20201030 11:50:44.454"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.462" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021828597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021858514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.455" endtime="20201030 11:50:44.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.463" endtime="20201030 11:50:44.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.162" endtime="20201030 11:50:44.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.160" endtime="20201030 11:50:44.466"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.470" level="INFO">${RESULT} = [{'diff': 2.9916999999997362e-05}, {'diff': 3.10700000000011e-05}, {'diff': 3.0500000000002747e-05}, {'diff': 3.111100000000033e-05}, {'diff': 2.9916000000001358e-05}, {'diff': 3.117999999999871e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:44.467" endtime="20201030 11:50:44.470"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.475" level="INFO">${ACCURACY} = {'diff': [2.9916999999997362e-05, 3.10700000000011e-05, 3.0500000000002747e-05, 3.111100000000033e-05, 2.9916000000001358e-05, 3.117999999999871e-05, 2.9930000000000928e-05, 2.9305999999999777e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:50:44.471" endtime="20201030 11:50:44.475"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.479" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.478" endtime="20201030 11:50:44.480"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.482" level="INFO">VALUE: [2.9916999999997362e-05, 3.10700000000011e-05, 3.0500000000002747e-05, 3.111100000000033e-05, 2.9916000000001358e-05, 3.117999999999871e-05, 2.9930000000000928e-05, 2.9305999999999777e-05, 2.9319999999999347e-05, 3.052799999999842e-05, 3.0513999999998848e-05, 3.0512999999999374e-05, 3.0526999999998944e-05, 3.113899999999947e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.0514000000002317e-05, 2.9931000000000402e-05, 2.9917000000000832e-05, 3.113899999999947e-05, 2.9290999999997264e-05, 2.9332999999999443e-05, 2.9318999999999873e-05, 3.0554999999998084e-05, 3.052800000000189e-05, 2.9319999999999347e-05, 3.052800000000189e-05, 3.0485999999999708e-05, 3.11249999999999e-05, 2.9931000000000402e-05, 2.9361000000002052e-05, 2.9916000000001358e-05, 2.9931000000000402e-05, 3.0513999999998848e-05, 2.9305000000000303e-05, 2.9305999999999777e-05, 2.9305999999999777e-05, 3.11249999999999e-05, 3.0472000000000138e-05, 3.052700000000241e-05, 3.0458000000000568e-05, 3.0514000000002317e-05, 3.052700000000241e-05, 3.0514000000002317e-05, 3.111100000000033e-05, 3.0514000000002317e-05, 3.052799999999842e-05, 3.0514000000002317e-05, 2.991599999999789e-05, 2.9902999999997792e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.480" endtime="20201030 11:50:44.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.476" endtime="20201030 11:50:44.483"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.487" endtime="20201030 11:50:44.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.485" endtime="20201030 11:50:44.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.484" endtime="20201030 11:50:44.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.129" endtime="20201030 11:50:44.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.129" endtime="20201030 11:50:44.507"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.516" endtime="20201030 11:50:44.532"></status>
</kw>
<msg timestamp="20201030 11:50:44.533" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.515" endtime="20201030 11:50:44.533"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.535" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.534" endtime="20201030 11:50:44.536"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.536" endtime="20201030 11:50:44.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.512" endtime="20201030 11:50:44.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.510" endtime="20201030 11:50:44.539"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.545" endtime="20201030 11:50:44.832"></status>
</kw>
<msg timestamp="20201030 11:50:44.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.544" endtime="20201030 11:50:44.835"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022039583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.836" endtime="20201030 11:50:44.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.844" endtime="20201030 11:50:44.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.541" endtime="20201030 11:50:44.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.540" endtime="20201030 11:50:44.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:44.851" level="INFO">${RESULT} = [{'diff': 3.1098000000000237e-05}, {'diff': 3.2346999999998544e-05}, {'diff': 3.2332999999998974e-05}, {'diff': 3.293099999999993e-05}, {'diff': 3.179199999999924e-05}, {'diff': 3.172199999999792e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:44.848" endtime="20201030 11:50:44.851"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:44.855" level="INFO">${ACCURACY} = {'diff': [3.1098000000000237e-05, 3.2346999999998544e-05, 3.2332999999998974e-05, 3.293099999999993e-05, 3.179199999999924e-05, 3.172199999999792e-05, 3.11249999999999e-05, 3.175000000000053e-05, 3.23...</msg>
<status status="PASS" starttime="20201030 11:50:44.852" endtime="20201030 11:50:44.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.860" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:50:44.859" endtime="20201030 11:50:44.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.862" level="INFO">VALUE: [3.1098000000000237e-05, 3.2346999999998544e-05, 3.2332999999998974e-05, 3.293099999999993e-05, 3.179199999999924e-05, 3.172199999999792e-05, 3.11249999999999e-05, 3.175000000000053e-05, 3.234700000000201e-05, 3.293099999999993e-05, 3.29579999999996e-05, 3.293099999999993e-05, 3.293000000000046e-05, 3.293000000000046e-05, 3.2860999999998614e-05, 3.237500000000115e-05, 3.177799999999967e-05, 3.172199999999792e-05, 3.113899999999947e-05, 3.29449999999995e-05, 3.11249999999999e-05, 3.294400000000003e-05, 3.172199999999792e-05, 3.290300000000079e-05, 3.173600000000096e-05, 3.175000000000053e-05, 3.173599999999749e-05, 3.233300000000244e-05, 3.172199999999792e-05, 3.234800000000149e-05, 3.172199999999792e-05, 3.172300000000086e-05, 3.172200000000139e-05, 3.297199999999917e-05, 3.169499999999825e-05, 3.294400000000003e-05, 3.11249999999999e-05, 3.2332999999998974e-05, 3.172199999999792e-05, 3.288899999999775e-05, 3.236100000000158e-05, 3.172200000000139e-05, 3.294400000000003e-05, 3.2346999999998544e-05, 3.2332999999998974e-05, 3.295899999999907e-05, 3.2346999999998544e-05, 3.29449999999995e-05, 3.11249999999999e-05, 3.113899999999947e-05]</msg>
<status status="PASS" starttime="20201030 11:50:44.861" endtime="20201030 11:50:44.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.856" endtime="20201030 11:50:44.864"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:44.867" endtime="20201030 11:50:44.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.866" endtime="20201030 11:50:44.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.864" endtime="20201030 11:50:44.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.508" endtime="20201030 11:50:44.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.508" endtime="20201030 11:50:44.888"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.897" endtime="20201030 11:50:44.913"></status>
</kw>
<msg timestamp="20201030 11:50:44.914" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.895" endtime="20201030 11:50:44.914"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:44.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:44.915" endtime="20201030 11:50:44.917"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.917" endtime="20201030 11:50:44.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.892" endtime="20201030 11:50:44.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.890" endtime="20201030 11:50:44.920"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:44.927" endtime="20201030 11:50:45.211"></status>
</kw>
<msg timestamp="20201030 11:50:45.214" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:44.925" endtime="20201030 11:50:45.215"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.222" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022930056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022964833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.215" endtime="20201030 11:50:45.223"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.224" endtime="20201030 11:50:45.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.922" endtime="20201030 11:50:45.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.921" endtime="20201030 11:50:45.226"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.230" level="INFO">${RESULT} = [{'diff': 3.4776999999999725e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.294500000000297e-05}, {'diff': 3.473600000000049e-05}, {'diff': 3.475000000000006e-05}, {'diff': 3.4124999999999434e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:45.227" endtime="20201030 11:50:45.230"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:45.234" level="INFO">${ACCURACY} = {'diff': [3.4776999999999725e-05, 3.475000000000006e-05, 3.294500000000297e-05, 3.473600000000049e-05, 3.475000000000006e-05, 3.4124999999999434e-05, 3.4110999999999864e-05, 3.355600000000056e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 11:50:45.231" endtime="20201030 11:50:45.235"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.239" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:50:45.238" endtime="20201030 11:50:45.239"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.241" level="INFO">VALUE: [3.4776999999999725e-05, 3.475000000000006e-05, 3.294500000000297e-05, 3.473600000000049e-05, 3.475000000000006e-05, 3.4124999999999434e-05, 3.4110999999999864e-05, 3.355600000000056e-05, 3.413799999999953e-05, 3.354199999999752e-05, 3.409799999999977e-05, 3.357000000000013e-05, 3.354199999999752e-05, 3.4110999999999864e-05, 3.4138999999999003e-05, 3.354200000000099e-05, 3.473600000000049e-05, 3.415300000000204e-05, 3.354200000000099e-05, 3.355600000000056e-05, 3.479199999999877e-05, 3.476399999999963e-05, 3.415300000000204e-05, 3.467999999999874e-05, 3.472199999999745e-05, 3.3555000000001084e-05, 3.475000000000006e-05, 3.481999999999791e-05, 3.468099999999821e-05, 3.475000000000006e-05, 3.3526999999998475e-05, 3.4138999999999003e-05, 3.294400000000003e-05, 3.4152999999998573e-05, 3.41250000000029e-05, 3.3541000000001514e-05, 3.355600000000056e-05, 3.475000000000006e-05, 3.354200000000099e-05, 3.4124999999999434e-05, 3.470799999999788e-05, 3.354200000000099e-05, 3.473600000000049e-05, 3.475000000000006e-05, 3.5346999999998074e-05, 3.355600000000056e-05, 3.4152999999998573e-05, 3.475000000000006e-05, 3.352799999999795e-05, 3.354199999999752e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.240" endtime="20201030 11:50:45.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.235" endtime="20201030 11:50:45.243"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.247" endtime="20201030 11:50:45.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.246" endtime="20201030 11:50:45.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.244" endtime="20201030 11:50:45.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.889" endtime="20201030 11:50:45.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:44.888" endtime="20201030 11:50:45.268"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.276" endtime="20201030 11:50:45.293"></status>
</kw>
<msg timestamp="20201030 11:50:45.293" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.275" endtime="20201030 11:50:45.293"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.295" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.294" endtime="20201030 11:50:45.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.297" endtime="20201030 11:50:45.298"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.272" endtime="20201030 11:50:45.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.270" endtime="20201030 11:50:45.299"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.306" endtime="20201030 11:50:45.591"></status>
</kw>
<msg timestamp="20201030 11:50:45.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.304" endtime="20201030 11:50:45.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021844792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021881986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.595" endtime="20201030 11:50:45.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.603" endtime="20201030 11:50:45.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.301" endtime="20201030 11:50:45.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.300" endtime="20201030 11:50:45.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.610" level="INFO">${RESULT} = [{'diff': 3.719400000000081e-05}, {'diff': 3.594399999999956e-05}, {'diff': 3.7153000000001574e-05}, {'diff': 3.600000000000131e-05}, {'diff': 3.59580000000026e-05}, {'diff': 3.7181000000000713e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:45.607" endtime="20201030 11:50:45.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:45.615" level="INFO">${ACCURACY} = {'diff': [3.719400000000081e-05, 3.594399999999956e-05, 3.7153000000001574e-05, 3.600000000000131e-05, 3.59580000000026e-05, 3.7181000000000713e-05, 3.7167000000001144e-05, 3.59589999999986e-05, 3.719...</msg>
<status status="PASS" starttime="20201030 11:50:45.611" endtime="20201030 11:50:45.615"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.619" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:50:45.618" endtime="20201030 11:50:45.620"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.622" level="INFO">VALUE: [3.719400000000081e-05, 3.594399999999956e-05, 3.7153000000001574e-05, 3.600000000000131e-05, 3.59580000000026e-05, 3.7181000000000713e-05, 3.7167000000001144e-05, 3.59589999999986e-05, 3.7195000000000283e-05, 3.59719999999987e-05, 3.656999999999966e-05, 3.597299999999817e-05, 3.656999999999966e-05, 3.6582999999999755e-05, 3.7152999999998104e-05, 3.6569000000000185e-05, 3.5361000000001114e-05, 3.6569000000000185e-05, 3.65840000000027e-05, 3.5346999999998074e-05, 3.600000000000131e-05, 3.594399999999956e-05, 3.5361000000001114e-05, 3.5361000000001114e-05, 3.594499999999903e-05, 3.594399999999956e-05, 3.6582999999999755e-05, 3.656999999999966e-05, 3.590200000000085e-05, 3.597200000000217e-05, 3.6569000000000185e-05, 3.5361000000001114e-05, 3.5360999999997644e-05, 3.59580000000026e-05, 3.656999999999966e-05, 3.595799999999913e-05, 3.530599999999884e-05, 3.599999999999784e-05, 3.7125000000002434e-05, 3.656999999999966e-05, 3.5290999999999795e-05, 3.658399999999923e-05, 3.655600000000009e-05, 3.71659999999982e-05, 3.595799999999913e-05, 3.593099999999946e-05, 3.5360999999997644e-05, 3.719400000000081e-05, 3.5361000000001114e-05, 3.5347000000001544e-05]</msg>
<status status="PASS" starttime="20201030 11:50:45.620" endtime="20201030 11:50:45.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.616" endtime="20201030 11:50:45.623"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:45.627" endtime="20201030 11:50:45.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.625" endtime="20201030 11:50:45.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.624" endtime="20201030 11:50:45.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.269" endtime="20201030 11:50:45.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.268" endtime="20201030 11:50:45.647"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.656" endtime="20201030 11:50:45.672"></status>
</kw>
<msg timestamp="20201030 11:50:45.673" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.655" endtime="20201030 11:50:45.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:45.674" endtime="20201030 11:50:45.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.676" endtime="20201030 11:50:45.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.652" endtime="20201030 11:50:45.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.650" endtime="20201030 11:50:45.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.685" endtime="20201030 11:50:45.974"></status>
</kw>
<msg timestamp="20201030 11:50:45.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.684" endtime="20201030 11:50:45.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:45.985" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021833361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021872333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:45.978" endtime="20201030 11:50:45.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:45.987" endtime="20201030 11:50:45.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.681" endtime="20201030 11:50:45.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.679" endtime="20201030 11:50:45.989"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:45.993" level="INFO">${RESULT} = [{'diff': 3.89720000000017e-05}, {'diff': 3.8959000000001603e-05}, {'diff': 3.7167000000001144e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.898700000000074e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:45.990" endtime="20201030 11:50:45.993"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:45.997" level="INFO">${ACCURACY} = {'diff': [3.89720000000017e-05, 3.8959000000001603e-05, 3.7167000000001144e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.898700000000074e-05, 3.776399999999916e-05, 3.776399999999916e-05, 3.7...</msg>
<status status="PASS" starttime="20201030 11:50:45.994" endtime="20201030 11:50:45.998"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.002" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.001" endtime="20201030 11:50:46.002"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.004" level="INFO">VALUE: [3.89720000000017e-05, 3.8959000000001603e-05, 3.7167000000001144e-05, 3.8375000000000214e-05, 3.8375000000000214e-05, 3.898700000000074e-05, 3.776399999999916e-05, 3.776399999999916e-05, 3.716600000000167e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.89859999999978e-05, 3.7762999999999686e-05, 3.7167000000001144e-05, 3.8374999999996745e-05, 3.89859999999978e-05, 3.8361000000000645e-05, 3.779200000000177e-05, 3.840199999999988e-05, 3.89859999999978e-05, 3.77780000000022e-05, 3.776399999999916e-05, 3.773600000000002e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.899999999999737e-05, 3.89859999999978e-05, 3.723699999999899e-05, 3.89720000000017e-05, 3.718000000000124e-05, 3.895799999999866e-05, 3.7167000000001144e-05, 3.7776999999999256e-05, 3.8388999999999784e-05, 3.718000000000124e-05, 3.777799999999873e-05, 3.900000000000084e-05, 3.8375000000000214e-05, 3.8388999999999784e-05, 3.8388999999999784e-05, 3.8375000000000214e-05, 3.715199999999863e-05, 3.898600000000127e-05, 3.7153000000001574e-05, 3.719399999999734e-05, 3.898600000000127e-05, 3.8361000000000645e-05, 3.8375000000000214e-05, 3.777799999999873e-05, 3.8403000000002824e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.003" endtime="20201030 11:50:46.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.998" endtime="20201030 11:50:46.006"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.009" endtime="20201030 11:50:46.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.008" endtime="20201030 11:50:46.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.007" endtime="20201030 11:50:46.029"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.648" endtime="20201030 11:50:46.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:45.648" endtime="20201030 11:50:46.030"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.038" endtime="20201030 11:50:46.056"></status>
</kw>
<msg timestamp="20201030 11:50:46.056" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.037" endtime="20201030 11:50:46.057"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.059" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.057" endtime="20201030 11:50:46.059"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.060" endtime="20201030 11:50:46.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.034" endtime="20201030 11:50:46.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.032" endtime="20201030 11:50:46.063"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.069" endtime="20201030 11:50:46.355"></status>
</kw>
<msg timestamp="20201030 11:50:46.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.068" endtime="20201030 11:50:46.358"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022637667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022678458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.359" endtime="20201030 11:50:46.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.368" endtime="20201030 11:50:46.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.065" endtime="20201030 11:50:46.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.063" endtime="20201030 11:50:46.370"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.374" level="INFO">${RESULT} = [{'diff': 4.0790999999998356e-05}, {'diff': 4.073599999999955e-05}, {'diff': 4.018000000000077e-05}, {'diff': 4.0208999999999384e-05}, {'diff': 3.958399999999876e-05}, {'diff': 3.9583000000002755e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:46.371" endtime="20201030 11:50:46.374"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:46.378" level="INFO">${ACCURACY} = {'diff': [4.0790999999998356e-05, 4.073599999999955e-05, 4.018000000000077e-05, 4.0208999999999384e-05, 3.958399999999876e-05, 3.9583000000002755e-05, 4.080600000000087e-05, 3.956999999999919e-05, 4.0...</msg>
<status status="PASS" starttime="20201030 11:50:46.375" endtime="20201030 11:50:46.378"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.383" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.382" endtime="20201030 11:50:46.383"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.385" level="INFO">VALUE: [4.0790999999998356e-05, 4.073599999999955e-05, 4.018000000000077e-05, 4.0208999999999384e-05, 3.958399999999876e-05, 3.9583000000002755e-05, 4.080600000000087e-05, 3.956999999999919e-05, 4.019400000000034e-05, 4.080600000000087e-05, 4.0181000000000244e-05, 3.9638999999997565e-05, 4.08059999999974e-05, 4.0237000000001993e-05, 4.0167000000000674e-05, 4.019400000000034e-05, 4.022199999999948e-05, 4.077800000000173e-05, 3.9582999999999285e-05, 4.079199999999783e-05, 4.080600000000087e-05, 4.019400000000034e-05, 4.077800000000173e-05, 4.025000000000209e-05, 4.0167000000000674e-05, 4.020799999999991e-05, 4.07920000000013e-05, 3.9610999999998425e-05, 4.0208999999999384e-05, 3.9582999999999285e-05, 4.140200000000288e-05, 3.9610999999998425e-05, 3.9555000000000146e-05, 4.020799999999991e-05, 3.9583000000002755e-05, 4.0819000000000966e-05, 4.079199999999783e-05, 4.0181000000000244e-05, 3.899999999999737e-05, 3.9555000000000146e-05, 3.9596999999998855e-05, 4.0776999999998786e-05, 3.957000000000266e-05, 4.140200000000288e-05, 4.08059999999974e-05, 4.079199999999783e-05, 3.9582999999999285e-05, 4.0194999999999814e-05, 3.958400000000223e-05, 3.898600000000127e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.384" endtime="20201030 11:50:46.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.379" endtime="20201030 11:50:46.387"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.391" endtime="20201030 11:50:46.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.389" endtime="20201030 11:50:46.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.388" endtime="20201030 11:50:46.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.031" endtime="20201030 11:50:46.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.030" endtime="20201030 11:50:46.412"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.420" endtime="20201030 11:50:46.437"></status>
</kw>
<msg timestamp="20201030 11:50:46.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.419" endtime="20201030 11:50:46.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.438" endtime="20201030 11:50:46.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.441" endtime="20201030 11:50:46.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.416" endtime="20201030 11:50:46.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.414" endtime="20201030 11:50:46.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.450" endtime="20201030 11:50:46.736"></status>
</kw>
<msg timestamp="20201030 11:50:46.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02200425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:46.448" endtime="20201030 11:50:46.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021961653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02200425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:46.740" endtime="20201030 11:50:46.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.748" endtime="20201030 11:50:46.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.446" endtime="20201030 11:50:46.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.444" endtime="20201030 11:50:46.751"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.755" level="INFO">${RESULT} = [{'diff': 4.2596999999998386e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.200000000000037e-05}, {'diff': 4.1388999999999315e-05}, {'diff': 4.201399999999994e-05}, {'diff': 4.2667000000003175e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:46.751" endtime="20201030 11:50:46.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:46.760" level="INFO">${ACCURACY} = {'diff': [4.2596999999998386e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.1388999999999315e-05, 4.201399999999994e-05, 4.2667000000003175e-05, 4.319399999999987e-05, 4.2611000000001426e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:50:46.756" endtime="20201030 11:50:46.760"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.764" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:50:46.763" endtime="20201030 11:50:46.765"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.767" level="INFO">VALUE: [4.2596999999998386e-05, 4.200000000000037e-05, 4.200000000000037e-05, 4.1388999999999315e-05, 4.201399999999994e-05, 4.2667000000003175e-05, 4.319399999999987e-05, 4.2611000000001426e-05, 4.322200000000248e-05, 4.252800000000001e-05, 4.319399999999987e-05, 4.319399999999987e-05, 4.202799999999951e-05, 4.2611000000001426e-05, 4.201399999999994e-05, 4.2610999999997956e-05, 4.1403000000002355e-05, 4.2597000000001856e-05, 4.3139000000001065e-05, 4.201399999999994e-05, 4.1403000000002355e-05, 4.256999999999872e-05, 4.322199999999901e-05, 4.200000000000037e-05, 4.3208999999998915e-05, 4.1388999999999315e-05, 4.2610999999997956e-05, 4.322199999999901e-05, 4.2625000000000995e-05, 4.258399999999829e-05, 4.3208999999998915e-05, 4.200000000000037e-05, 4.19860000000008e-05, 4.19860000000008e-05, 4.2611000000001426e-05, 4.202799999999951e-05, 4.2611000000001426e-05, 4.200000000000037e-05, 4.2610999999997956e-05, 4.1388999999999315e-05, 4.2624999999997526e-05, 4.320799999999944e-05, 4.202799999999951e-05, 4.1402999999998885e-05, 4.140200000000288e-05, 4.2611000000001426e-05, 4.2597000000001856e-05, 4.319399999999987e-05, 4.2611000000001426e-05, 4.201399999999994e-05]</msg>
<status status="PASS" starttime="20201030 11:50:46.765" endtime="20201030 11:50:46.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.761" endtime="20201030 11:50:46.768"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.772" endtime="20201030 11:50:46.791"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.770" endtime="20201030 11:50:46.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.769" endtime="20201030 11:50:46.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.412" endtime="20201030 11:50:46.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.412" endtime="20201030 11:50:46.792"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.801" endtime="20201030 11:50:46.817"></status>
</kw>
<msg timestamp="20201030 11:50:46.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.799" endtime="20201030 11:50:46.818"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.820" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.819" endtime="20201030 11:50:46.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.821" endtime="20201030 11:50:46.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.797" endtime="20201030 11:50:46.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.795" endtime="20201030 11:50:46.824"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.830" endtime="20201030 11:50:47.117"></status>
</kw>
<msg timestamp="20201030 11:50:47.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02199925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:46.829" endtime="20201030 11:50:47.120"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.128" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02199925, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022044292, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:47.121" endtime="20201030 11:50:47.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.130" endtime="20201030 11:50:47.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.826" endtime="20201030 11:50:47.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.824" endtime="20201030 11:50:47.132"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.136" level="INFO">${RESULT} = [{'diff': 4.504199999999861e-05}, {'diff': 4.4417000000001455e-05}, {'diff': 4.320799999999944e-05}, {'diff': 4.504199999999861e-05}, {'diff': 4.379200000000083e-05}, {'diff': 4.501400000000294e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:47.133" endtime="20201030 11:50:47.136"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:47.140" level="INFO">${ACCURACY} = {'diff': [4.504199999999861e-05, 4.4417000000001455e-05, 4.320799999999944e-05, 4.504199999999861e-05, 4.379200000000083e-05, 4.501400000000294e-05, 4.441600000000198e-05, 4.3208999999998915e-05, 4.38...</msg>
<status status="PASS" starttime="20201030 11:50:47.137" endtime="20201030 11:50:47.140"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.145" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:50:47.144" endtime="20201030 11:50:47.145"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.147" level="INFO">VALUE: [4.504199999999861e-05, 4.4417000000001455e-05, 4.320799999999944e-05, 4.504199999999861e-05, 4.379200000000083e-05, 4.501400000000294e-05, 4.441600000000198e-05, 4.3208999999998915e-05, 4.3833000000000066e-05, 4.501399999999947e-05, 4.4416999999997986e-05, 4.3209000000002384e-05, 4.4417000000001455e-05, 4.3819000000000496e-05, 4.4402999999998416e-05, 4.448599999999983e-05, 4.501399999999947e-05, 4.319399999999987e-05, 4.504200000000208e-05, 4.322199999999901e-05, 4.4403000000001885e-05, 4.3846999999999636e-05, 4.3874999999998776e-05, 4.319399999999987e-05, 4.502799999999904e-05, 4.444400000000112e-05, 4.502800000000251e-05, 4.383399999999954e-05, 4.3180999999999775e-05, 4.3222999999998485e-05, 4.4403000000001885e-05, 4.381999999999997e-05, 4.502800000000251e-05, 4.381899999999703e-05, 4.5111000000000456e-05, 4.502800000000251e-05, 4.5013e-05, 4.502799999999904e-05, 4.377700000000179e-05, 4.4388999999998846e-05, 4.443000000000155e-05, 4.4416999999997986e-05, 4.4431000000001025e-05, 4.381999999999997e-05, 4.4431000000001025e-05, 4.3222999999998485e-05, 4.4416999999997986e-05, 4.3833000000000066e-05, 4.38060000000004e-05, 4.509800000000036e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.146" endtime="20201030 11:50:47.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.141" endtime="20201030 11:50:47.149"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.152" endtime="20201030 11:50:47.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.151" endtime="20201030 11:50:47.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.149" endtime="20201030 11:50:47.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.793" endtime="20201030 11:50:47.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.793" endtime="20201030 11:50:47.173"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.181" endtime="20201030 11:50:47.199"></status>
</kw>
<msg timestamp="20201030 11:50:47.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.180" endtime="20201030 11:50:47.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.202" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.201" endtime="20201030 11:50:47.202"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.203" endtime="20201030 11:50:47.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.177" endtime="20201030 11:50:47.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.175" endtime="20201030 11:50:47.206"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.212" endtime="20201030 11:50:47.498"></status>
</kw>
<msg timestamp="20201030 11:50:47.501" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.211" endtime="20201030 11:50:47.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.509" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022787403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022834292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.502" endtime="20201030 11:50:47.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.510" endtime="20201030 11:50:47.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.208" endtime="20201030 11:50:47.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.206" endtime="20201030 11:50:47.513"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.517" level="INFO">${RESULT} = [{'diff': 4.688899999999788e-05}, {'diff': 4.498600000000033e-05}, {'diff': 4.625000000000115e-05}, {'diff': 4.68329999999996e-05}, {'diff': 4.686199999999821e-05}, {'diff': 4.623600000000158e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:47.513" endtime="20201030 11:50:47.517"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:47.521" level="INFO">${ACCURACY} = {'diff': [4.688899999999788e-05, 4.498600000000033e-05, 4.625000000000115e-05, 4.68329999999996e-05, 4.686199999999821e-05, 4.623600000000158e-05, 4.684799999999864e-05, 4.5639000000000096e-05, 4.6235...</msg>
<status status="PASS" starttime="20201030 11:50:47.518" endtime="20201030 11:50:47.521"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.525" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:50:47.524" endtime="20201030 11:50:47.526"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.528" level="INFO">VALUE: [4.688899999999788e-05, 4.498600000000033e-05, 4.625000000000115e-05, 4.68329999999996e-05, 4.686199999999821e-05, 4.623600000000158e-05, 4.684799999999864e-05, 4.5639000000000096e-05, 4.623599999999811e-05, 4.683399999999907e-05, 4.681900000000003e-05, 4.626400000000072e-05, 4.68329999999996e-05, 4.6237000000001055e-05, 4.5639000000000096e-05, 4.570799999999847e-05, 4.6237000000001055e-05, 4.5639000000000096e-05, 4.5694999999998376e-05, 4.504200000000208e-05, 4.623599999999811e-05, 4.68199999999995e-05, 4.623599999999811e-05, 4.684799999999864e-05, 4.5625000000000526e-05, 4.68329999999996e-05, 4.622200000000201e-05, 4.676400000000122e-05, 4.684699999999917e-05, 4.684800000000211e-05, 4.6237000000001055e-05, 4.623599999999811e-05, 4.6861000000002206e-05, 4.680500000000046e-05, 4.5625000000000526e-05, 4.504200000000208e-05, 4.5625000000000526e-05, 4.68199999999995e-05, 4.5625000000000526e-05, 4.622200000000201e-05, 4.5639000000000096e-05, 4.6223000000001485e-05, 4.501399999999947e-05, 4.5652999999999666e-05, 4.6209000000001915e-05, 4.683399999999907e-05, 4.6875000000001776e-05, 4.623600000000158e-05, 4.5625000000000526e-05, 4.623600000000158e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.526" endtime="20201030 11:50:47.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.522" endtime="20201030 11:50:47.530"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.534" endtime="20201030 11:50:47.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.532" endtime="20201030 11:50:47.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.531" endtime="20201030 11:50:47.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.174" endtime="20201030 11:50:47.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.173" endtime="20201030 11:50:47.554"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.563" endtime="20201030 11:50:47.580"></status>
</kw>
<msg timestamp="20201030 11:50:47.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.561" endtime="20201030 11:50:47.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.581" endtime="20201030 11:50:47.583"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.584" endtime="20201030 11:50:47.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.559" endtime="20201030 11:50:47.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.557" endtime="20201030 11:50:47.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.593" endtime="20201030 11:50:47.878"></status>
</kw>
<msg timestamp="20201030 11:50:47.881" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.591" endtime="20201030 11:50:47.881"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.889" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021910347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021959014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.882" endtime="20201030 11:50:47.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.891" endtime="20201030 11:50:47.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.589" endtime="20201030 11:50:47.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.587" endtime="20201030 11:50:47.893"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:47.897" level="INFO">${RESULT} = [{'diff': 4.866699999999877e-05}, {'diff': 4.865199999999972e-05}, {'diff': 4.7445000000000126e-05}, {'diff': 4.808300000000085e-05}, {'diff': 4.863899999999963e-05}, {'diff': 4.933400000000157e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:50:47.894" endtime="20201030 11:50:47.897"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:47.902" level="INFO">${ACCURACY} = {'diff': [4.866699999999877e-05, 4.865199999999972e-05, 4.7445000000000126e-05, 4.808300000000085e-05, 4.863899999999963e-05, 4.933400000000157e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.745...</msg>
<status status="PASS" starttime="20201030 11:50:47.898" endtime="20201030 11:50:47.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.907" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:50:47.906" endtime="20201030 11:50:47.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.909" level="INFO">VALUE: [4.866699999999877e-05, 4.865199999999972e-05, 4.7445000000000126e-05, 4.808300000000085e-05, 4.863899999999963e-05, 4.933400000000157e-05, 4.744400000000065e-05, 4.744400000000065e-05, 4.745799999999675e-05, 4.865199999999972e-05, 4.7445000000000126e-05, 4.924999999999721e-05, 4.745800000000022e-05, 4.805500000000171e-05, 4.804200000000161e-05, 4.744400000000065e-05, 4.86529999999992e-05, 4.7445000000000126e-05, 4.801400000000247e-05, 4.805500000000171e-05, 4.743000000000108e-05, 4.744400000000065e-05, 4.863899999999963e-05, 4.802799999999857e-05, 4.925000000000068e-05, 4.865199999999972e-05, 4.863899999999963e-05, 4.862500000000006e-05, 4.806900000000128e-05, 4.804100000000214e-05, 4.7431000000000556e-05, 4.805600000000118e-05, 4.7445000000000126e-05, 4.802800000000204e-05, 4.8653000000002666e-05, 4.859699999999745e-05, 4.806899999999781e-05, 4.8667000000002236e-05, 4.7430999999997087e-05, 4.925000000000068e-05, 4.925000000000068e-05, 4.802800000000204e-05, 4.865199999999972e-05, 4.745800000000022e-05, 4.926400000000025e-05, 4.86529999999992e-05, 4.804200000000161e-05, 4.866599999999929e-05, 4.7473000000002735e-05, 4.86529999999992e-05]</msg>
<status status="PASS" starttime="20201030 11:50:47.908" endtime="20201030 11:50:47.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.903" endtime="20201030 11:50:47.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:47.914" endtime="20201030 11:50:47.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.913" endtime="20201030 11:50:47.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.911" endtime="20201030 11:50:47.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.555" endtime="20201030 11:50:47.935"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.555" endtime="20201030 11:50:47.935"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.943" endtime="20201030 11:50:47.961"></status>
</kw>
<msg timestamp="20201030 11:50:47.962" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.942" endtime="20201030 11:50:47.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:47.964" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:47.963" endtime="20201030 11:50:47.964"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.965" endtime="20201030 11:50:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.939" endtime="20201030 11:50:47.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.937" endtime="20201030 11:50:47.968"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:47.974" endtime="20201030 11:50:48.260"></status>
</kw>
<msg timestamp="20201030 11:50:48.263" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:47.973" endtime="20201030 11:50:48.263"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.271" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021859653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021909514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.264" endtime="20201030 11:50:48.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.272" endtime="20201030 11:50:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.970" endtime="20201030 11:50:48.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.968" endtime="20201030 11:50:48.275"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.279" level="INFO">${RESULT} = [{'diff': 4.986100000000174e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.047199999999932e-05}, {'diff': 5.045899999999923e-05}, {'diff': 5.045899999999923e-05}, {'diff': 4.991600000000054e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.275" endtime="20201030 11:50:48.279"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.283" level="INFO">${ACCURACY} = {'diff': [4.986100000000174e-05, 5.106900000000081e-05, 5.047199999999932e-05, 5.045899999999923e-05, 5.045899999999923e-05, 4.991600000000054e-05, 4.984700000000217e-05, 4.98339999999986e-05, 4.98620...</msg>
<status status="PASS" starttime="20201030 11:50:48.280" endtime="20201030 11:50:48.283"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.287" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.286" endtime="20201030 11:50:48.288"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.290" level="INFO">VALUE: [4.986100000000174e-05, 5.106900000000081e-05, 5.047199999999932e-05, 5.045899999999923e-05, 5.045899999999923e-05, 4.991600000000054e-05, 4.984700000000217e-05, 4.98339999999986e-05, 4.986200000000121e-05, 5.048599999999889e-05, 5.104199999999767e-05, 4.98469999999987e-05, 5.047199999999932e-05, 4.98469999999987e-05, 5.107000000000028e-05, 4.987499999999784e-05, 5.107000000000028e-05, 5.047199999999932e-05, 5.105600000000071e-05, 5.047199999999932e-05, 5.106899999999734e-05, 5.104200000000114e-05, 4.987500000000131e-05, 4.92079999999985e-05, 5.106900000000081e-05, 4.986099999999827e-05, 5.106900000000081e-05, 5.106900000000081e-05, 5.045799999999975e-05, 4.926400000000025e-05, 5.045799999999975e-05, 4.98469999999987e-05, 5.045800000000322e-05, 5.048599999999889e-05, 4.9181000000002306e-05, 5.106899999999734e-05, 5.048599999999889e-05, 4.986099999999827e-05, 5.106900000000081e-05, 4.986100000000174e-05, 5.05270000000016e-05, 5.106900000000081e-05, 5.108399999999985e-05, 5.047199999999932e-05, 5.0472999999998797e-05, 5.045799999999975e-05, 4.926400000000025e-05, 4.988900000000088e-05, 4.987500000000131e-05, 4.986099999999827e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.288" endtime="20201030 11:50:48.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.284" endtime="20201030 11:50:48.291"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.295" endtime="20201030 11:50:48.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.293" endtime="20201030 11:50:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.292" endtime="20201030 11:50:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.936" endtime="20201030 11:50:48.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:47.935" endtime="20201030 11:50:48.315"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.324" endtime="20201030 11:50:48.343"></status>
</kw>
<msg timestamp="20201030 11:50:48.343" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.323" endtime="20201030 11:50:48.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.344" endtime="20201030 11:50:48.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.347" endtime="20201030 11:50:48.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.320" endtime="20201030 11:50:48.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.318" endtime="20201030 11:50:48.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.356" endtime="20201030 11:50:48.641"></status>
</kw>
<msg timestamp="20201030 11:50:48.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.354" endtime="20201030 11:50:48.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022895069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022947931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.645" endtime="20201030 11:50:48.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.654" endtime="20201030 11:50:48.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.351" endtime="20201030 11:50:48.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.350" endtime="20201030 11:50:48.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:48.660" level="INFO">${RESULT} = [{'diff': 5.286200000000074e-05}, {'diff': 5.108399999999985e-05}, {'diff': 5.106900000000081e-05}, {'diff': 5.105600000000071e-05}, {'diff': 5.287500000000084e-05}, {'diff': 5.290299999999998e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:48.657" endtime="20201030 11:50:48.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:48.664" level="INFO">${ACCURACY} = {'diff': [5.286200000000074e-05, 5.108399999999985e-05, 5.106900000000081e-05, 5.105600000000071e-05, 5.287500000000084e-05, 5.290299999999998e-05, 5.168099999999787e-05, 5.279099999999995e-05, 5.2276...</msg>
<status status="PASS" starttime="20201030 11:50:48.661" endtime="20201030 11:50:48.665"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.669" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:50:48.668" endtime="20201030 11:50:48.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.671" level="INFO">VALUE: [5.286200000000074e-05, 5.108399999999985e-05, 5.106900000000081e-05, 5.105600000000071e-05, 5.287500000000084e-05, 5.290299999999998e-05, 5.168099999999787e-05, 5.279099999999995e-05, 5.227699999999988e-05, 5.227699999999988e-05, 5.166700000000177e-05, 5.288900000000041e-05, 5.168100000000134e-05, 5.227799999999935e-05, 5.287500000000084e-05, 5.106900000000081e-05, 5.1651999999999254e-05, 5.227799999999935e-05, 5.227800000000282e-05, 5.288900000000041e-05, 5.16530000000022e-05, 5.28470000000017e-05, 5.287500000000084e-05, 5.287500000000084e-05, 5.1707999999997534e-05, 5.229199999999892e-05, 5.169400000000143e-05, 5.163899999999916e-05, 5.2888000000000934e-05, 5.1665999999998824e-05, 5.107000000000028e-05, 5.227799999999935e-05, 5.226399999999978e-05, 5.286100000000127e-05, 5.227799999999935e-05, 5.169499999999744e-05, 5.168100000000134e-05, 5.1665999999998824e-05, 5.1666000000002293e-05, 5.287500000000084e-05, 5.293099999999912e-05, 5.226399999999978e-05, 5.279200000000289e-05, 5.229200000000239e-05, 5.1707999999997534e-05, 5.284800000000117e-05, 5.287500000000084e-05, 5.1679999999998394e-05, 5.226399999999978e-05, 5.286200000000074e-05]</msg>
<status status="PASS" starttime="20201030 11:50:48.670" endtime="20201030 11:50:48.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.665" endtime="20201030 11:50:48.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:48.677" endtime="20201030 11:50:48.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.676" endtime="20201030 11:50:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.675" endtime="20201030 11:50:48.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.316" endtime="20201030 11:50:48.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.316" endtime="20201030 11:50:48.698"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.707" endtime="20201030 11:50:48.723"></status>
</kw>
<msg timestamp="20201030 11:50:48.724" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.705" endtime="20201030 11:50:48.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:48.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:48.725" endtime="20201030 11:50:48.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.727" endtime="20201030 11:50:48.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.702" endtime="20201030 11:50:48.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.700" endtime="20201030 11:50:48.730"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:48.736" endtime="20201030 11:50:49.022"></status>
</kw>
<msg timestamp="20201030 11:50:49.025" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:48.735" endtime="20201030 11:50:49.025"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021940944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021994444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.026" endtime="20201030 11:50:49.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.034" endtime="20201030 11:50:49.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.732" endtime="20201030 11:50:49.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.730" endtime="20201030 11:50:49.037"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.041" level="INFO">${RESULT} = [{'diff': 5.3499999999997994e-05}, {'diff': 5.4707999999997065e-05}, {'diff': 5.3499999999997994e-05}, {'diff': 5.3485999999998424e-05}, {'diff': 5.5263999999999314e-05}, {'diff': 5.3499999999997994e-...</msg>
<status status="PASS" starttime="20201030 11:50:49.038" endtime="20201030 11:50:49.041"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.046" level="INFO">${ACCURACY} = {'diff': [5.3499999999997994e-05, 5.4707999999997065e-05, 5.3499999999997994e-05, 5.3485999999998424e-05, 5.5263999999999314e-05, 5.3499999999997994e-05, 5.348600000000189e-05, 5.5277999999998884e-05,...</msg>
<status status="PASS" starttime="20201030 11:50:49.042" endtime="20201030 11:50:49.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.050" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.049" endtime="20201030 11:50:49.051"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.053" level="INFO">VALUE: [5.3499999999997994e-05, 5.4707999999997065e-05, 5.3499999999997994e-05, 5.3485999999998424e-05, 5.5263999999999314e-05, 5.3499999999997994e-05, 5.348600000000189e-05, 5.5277999999998884e-05, 5.530600000000149e-05, 5.4708000000000534e-05, 5.4680000000001394e-05, 5.408299999999991e-05, 5.350000000000146e-05, 5.4680000000001394e-05, 5.4708000000000534e-05, 5.348600000000189e-05, 5.465300000000173e-05, 5.356899999999984e-05, 5.348600000000189e-05, 5.465300000000173e-05, 5.412499999999862e-05, 5.409699999999948e-05, 5.409799999999895e-05, 5.409800000000242e-05, 5.350000000000146e-05, 5.5291999999998453e-05, 5.3457999999999284e-05, 5.533400000000063e-05, 5.5236000000000174e-05, 5.469500000000044e-05, 5.3485999999998424e-05, 5.469500000000044e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.530600000000149e-05, 5.408399999999938e-05, 5.411100000000252e-05, 5.400000000000196e-05, 5.46809999999974e-05, 5.408299999999991e-05, 5.348600000000189e-05, 5.4694000000000964e-05, 5.469500000000044e-05, 5.469500000000044e-05, 5.529099999999898e-05, 5.4694000000000964e-05, 5.469500000000044e-05, 5.348600000000189e-05, 5.4694000000000964e-05, 5.34730000000018e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.052" endtime="20201030 11:50:49.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.047" endtime="20201030 11:50:49.054"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.058" endtime="20201030 11:50:49.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.056" endtime="20201030 11:50:49.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.055" endtime="20201030 11:50:49.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.699" endtime="20201030 11:50:49.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:48.698" endtime="20201030 11:50:49.079"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.087" endtime="20201030 11:50:49.105"></status>
</kw>
<msg timestamp="20201030 11:50:49.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.086" endtime="20201030 11:50:49.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.108" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.106" endtime="20201030 11:50:49.108"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.109" endtime="20201030 11:50:49.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.083" endtime="20201030 11:50:49.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.081" endtime="20201030 11:50:49.111"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.118" endtime="20201030 11:50:49.406"></status>
</kw>
<msg timestamp="20201030 11:50:49.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.116" endtime="20201030 11:50:49.409"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.417" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021925458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021981403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.410" endtime="20201030 11:50:49.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.419" endtime="20201030 11:50:49.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.114" endtime="20201030 11:50:49.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.112" endtime="20201030 11:50:49.421"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.425" level="INFO">${RESULT} = [{'diff': 5.594500000000169e-05}, {'diff': 5.6500000000000994e-05}, {'diff': 5.7055999999999774e-05}, {'diff': 5.6528000000000134e-05}, {'diff': 5.587500000000037e-05}, {'diff': 5.5291999999998453e-05...</msg>
<status status="PASS" starttime="20201030 11:50:49.422" endtime="20201030 11:50:49.425"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.429" level="INFO">${ACCURACY} = {'diff': [5.594500000000169e-05, 5.6500000000000994e-05, 5.7055999999999774e-05, 5.6528000000000134e-05, 5.587500000000037e-05, 5.5291999999998453e-05, 5.588899999999994e-05, 5.715299999999729e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:50:49.426" endtime="20201030 11:50:49.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.434" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.433" endtime="20201030 11:50:49.434"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.436" level="INFO">VALUE: [5.594500000000169e-05, 5.6500000000000994e-05, 5.7055999999999774e-05, 5.6528000000000134e-05, 5.587500000000037e-05, 5.5291999999998453e-05, 5.588899999999994e-05, 5.715299999999729e-05, 5.590299999999951e-05, 5.7055999999999774e-05, 5.712500000000162e-05, 5.6500000000000994e-05, 5.5277999999998884e-05, 5.6500000000000994e-05, 5.6485999999997955e-05, 5.709699999999901e-05, 5.529200000000192e-05, 5.6514000000000564e-05, 5.711099999999858e-05, 5.590299999999951e-05, 5.590300000000298e-05, 5.593099999999865e-05, 5.6500000000000994e-05, 5.6514000000000564e-05, 5.7180000000000425e-05, 5.711099999999858e-05, 5.588899999999994e-05, 5.5901999999996566e-05, 5.647299999999786e-05, 5.590299999999951e-05, 5.712500000000162e-05, 5.529099999999898e-05, 5.709799999999848e-05, 5.590299999999951e-05, 5.647300000000133e-05, 5.7083999999998913e-05, 5.6513999999997094e-05, 5.709699999999901e-05, 5.6499999999997524e-05, 5.6486000000001424e-05, 5.652700000000066e-05, 5.5277999999998884e-05, 5.6514000000000564e-05, 5.588899999999994e-05, 5.5902000000000035e-05, 5.5888000000000465e-05, 5.5305999999998023e-05, 5.647300000000133e-05, 5.5888000000000465e-05, 5.6514000000000564e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.435" endtime="20201030 11:50:49.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.430" endtime="20201030 11:50:49.437"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.441" endtime="20201030 11:50:49.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.440" endtime="20201030 11:50:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.438" endtime="20201030 11:50:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.079" endtime="20201030 11:50:49.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.079" endtime="20201030 11:50:49.462"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.470" endtime="20201030 11:50:49.489"></status>
</kw>
<msg timestamp="20201030 11:50:49.489" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.469" endtime="20201030 11:50:49.489"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.490" endtime="20201030 11:50:49.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.493" endtime="20201030 11:50:49.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.466" endtime="20201030 11:50:49.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.464" endtime="20201030 11:50:49.495"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.502" endtime="20201030 11:50:49.787"></status>
</kw>
<msg timestamp="20201030 11:50:49.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023019014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.500" endtime="20201030 11:50:49.790"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.798" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022960708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023019014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.791" endtime="20201030 11:50:49.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.799" endtime="20201030 11:50:49.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.498" endtime="20201030 11:50:49.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.496" endtime="20201030 11:50:49.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.806" level="INFO">${RESULT} = [{'diff': 5.8306000000001024e-05}, {'diff': 5.8320000000000594e-05}, {'diff': 5.7708000000000065e-05}, {'diff': 5.709700000000248e-05}, {'diff': 5.888899999999947e-05}, {'diff': 5.893100000000165e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:49.803" endtime="20201030 11:50:49.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:49.810" level="INFO">${ACCURACY} = {'diff': [5.8306000000001024e-05, 5.8320000000000594e-05, 5.7708000000000065e-05, 5.709700000000248e-05, 5.888899999999947e-05, 5.893100000000165e-05, 5.8930000000002175e-05, 5.8929999999998706e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:50:49.807" endtime="20201030 11:50:49.810"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.814" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:50:49.813" endtime="20201030 11:50:49.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.817" level="INFO">VALUE: [5.8306000000001024e-05, 5.8320000000000594e-05, 5.7708000000000065e-05, 5.709700000000248e-05, 5.888899999999947e-05, 5.893100000000165e-05, 5.8930000000002175e-05, 5.8929999999998706e-05, 5.8306000000001024e-05, 5.8915999999999136e-05, 5.831899999999765e-05, 5.770899999999954e-05, 5.7708000000000065e-05, 5.890300000000251e-05, 5.833300000000069e-05, 5.704100000000073e-05, 5.8320000000000594e-05, 5.7750000000002244e-05, 5.8915999999999136e-05, 5.830499999999808e-05, 5.7708000000000065e-05, 5.7735999999999205e-05, 5.891700000000208e-05, 5.891699999999861e-05, 5.831900000000112e-05, 5.893099999999818e-05, 5.7778000000001384e-05, 5.831900000000112e-05, 5.7722000000003104e-05, 5.7666000000001355e-05, 5.891699999999861e-05, 5.831900000000112e-05, 5.890299999999904e-05, 5.7152000000001285e-05, 5.7749999999998775e-05, 5.772300000000258e-05, 5.770899999999954e-05, 5.8944000000001745e-05, 5.831900000000112e-05, 5.886100000000033e-05, 5.8930000000002175e-05, 5.831900000000112e-05, 5.831900000000112e-05, 5.7069999999999343e-05, 5.709700000000248e-05, 5.770899999999954e-05, 5.831899999999765e-05, 5.76810000000004e-05, 5.7750000000002244e-05, 5.8305999999997554e-05]</msg>
<status status="PASS" starttime="20201030 11:50:49.815" endtime="20201030 11:50:49.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.811" endtime="20201030 11:50:49.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:49.823" endtime="20201030 11:50:49.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.821" endtime="20201030 11:50:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.820" endtime="20201030 11:50:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.463" endtime="20201030 11:50:49.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.462" endtime="20201030 11:50:49.843"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.852" endtime="20201030 11:50:49.869"></status>
</kw>
<msg timestamp="20201030 11:50:49.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.850" endtime="20201030 11:50:49.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.870" endtime="20201030 11:50:49.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.873" endtime="20201030 11:50:49.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.848" endtime="20201030 11:50:49.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.846" endtime="20201030 11:50:49.876"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.882" endtime="20201030 11:50:50.169"></status>
</kw>
<msg timestamp="20201030 11:50:50.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:49.881" endtime="20201030 11:50:50.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.180" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0219235, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021983028, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:50.173" endtime="20201030 11:50:50.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.181" endtime="20201030 11:50:50.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.878" endtime="20201030 11:50:50.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.876" endtime="20201030 11:50:50.184"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.188" level="INFO">${RESULT} = [{'diff': 5.9528000000003134e-05}, {'diff': 6.015300000000029e-05}, {'diff': 6.136099999999936e-05}, {'diff': 6.0736000000002205e-05}, {'diff': 5.9542000000002704e-05}, {'diff': 5.9458000000001815e-05...</msg>
<status status="PASS" starttime="20201030 11:50:50.185" endtime="20201030 11:50:50.188"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.193" level="INFO">${ACCURACY} = {'diff': [5.9528000000003134e-05, 6.015300000000029e-05, 6.136099999999936e-05, 6.0736000000002205e-05, 5.9542000000002704e-05, 5.9458000000001815e-05, 5.95689999999989e-05, 5.9527999999999665e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:50:50.189" endtime="20201030 11:50:50.193"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.197" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.196" endtime="20201030 11:50:50.198"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.200" level="INFO">VALUE: [5.9528000000003134e-05, 6.015300000000029e-05, 6.136099999999936e-05, 6.0736000000002205e-05, 5.9542000000002704e-05, 5.9458000000001815e-05, 5.95689999999989e-05, 5.9527999999999665e-05, 5.9527999999999665e-05, 6.012500000000115e-05, 6.073700000000168e-05, 6.011100000000158e-05, 6.0721999999999166e-05, 5.8929999999998706e-05, 5.958300000000194e-05, 5.952700000000019e-05, 5.954099999999976e-05, 6.013899999999725e-05, 6.0735999999998735e-05, 6.0736000000002205e-05, 6.129200000000098e-05, 6.0137999999997777e-05, 6.0819999999999624e-05, 6.013900000000072e-05, 6.012499999999768e-05, 6.013899999999725e-05, 6.0749999999998305e-05, 6.068099999999993e-05, 5.9527999999999665e-05, 6.012499999999768e-05, 6.012500000000115e-05, 5.9556000000002274e-05, 6.012500000000115e-05, 6.012500000000115e-05, 5.954099999999976e-05, 6.0098000000001484e-05, 6.018099999999943e-05, 6.072299999999864e-05, 6.015300000000029e-05, 6.0735999999998735e-05, 5.8943999999998276e-05, 6.0792000000000485e-05, 6.013899999999725e-05, 5.9500000000000525e-05, 6.012499999999768e-05, 5.955499999999933e-05, 6.072300000000211e-05, 6.013900000000072e-05, 6.136099999999936e-05, 6.0736000000002205e-05]</msg>
<status status="PASS" starttime="20201030 11:50:50.199" endtime="20201030 11:50:50.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.194" endtime="20201030 11:50:50.201"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.205" endtime="20201030 11:50:50.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.203" endtime="20201030 11:50:50.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.202" endtime="20201030 11:50:50.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.844" endtime="20201030 11:50:50.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.844" endtime="20201030 11:50:50.226"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.234" endtime="20201030 11:50:50.252"></status>
</kw>
<msg timestamp="20201030 11:50:50.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.233" endtime="20201030 11:50:50.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.254" endtime="20201030 11:50:50.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.256" endtime="20201030 11:50:50.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.230" endtime="20201030 11:50:50.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.228" endtime="20201030 11:50:50.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.265" endtime="20201030 11:50:50.552"></status>
</kw>
<msg timestamp="20201030 11:50:50.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.264" endtime="20201030 11:50:50.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022360153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.556" endtime="20201030 11:50:50.564"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.564" endtime="20201030 11:50:50.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.261" endtime="20201030 11:50:50.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.259" endtime="20201030 11:50:50.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.571" level="INFO">${RESULT} = [{'diff': 6.770899999999913e-05}, {'diff': 6.70839999999985e-05}, {'diff': 6.784699999999935e-05}, {'diff': 6.729100000000057e-05}, {'diff': 6.875000000000284e-05}, {'diff': 6.74160000000007e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:50.568" endtime="20201030 11:50:50.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.575" level="INFO">${ACCURACY} = {'diff': [6.770899999999913e-05, 6.70839999999985e-05, 6.784699999999935e-05, 6.729100000000057e-05, 6.875000000000284e-05, 6.74160000000007e-05, 6.841599999999823e-05, 6.815299999999788e-05, 6.743000...</msg>
<status status="PASS" starttime="20201030 11:50:50.572" endtime="20201030 11:50:50.575"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.579" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.578" endtime="20201030 11:50:50.580"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.582" level="INFO">VALUE: [6.770899999999913e-05, 6.70839999999985e-05, 6.784699999999935e-05, 6.729100000000057e-05, 6.875000000000284e-05, 6.74160000000007e-05, 6.841599999999823e-05, 6.815299999999788e-05, 6.743000000000027e-05, 6.82640000000019e-05, 6.716699999999992e-05, 6.777800000000098e-05, 6.857000000000044e-05, 6.869500000000056e-05, 6.750000000000159e-05, 6.89169999999982e-05, 6.874999999999937e-05, 6.793000000000077e-05, 6.87359999999998e-05, 6.75969999999991e-05, 6.829200000000105e-05, 6.869500000000056e-05, 6.858300000000053e-05, 6.838900000000203e-05, 6.888900000000253e-05, 6.894500000000081e-05, 6.84030000000016e-05, 6.886099999999992e-05, 6.894500000000081e-05, 6.712500000000121e-05, 6.870900000000013e-05, 6.808300000000003e-05, 6.797199999999948e-05, 6.781900000000021e-05, 6.748599999999855e-05, 6.888900000000253e-05, 6.702800000000023e-05, 6.813900000000178e-05, 6.87640000000024e-05, 6.811099999999917e-05, 6.791700000000067e-05, 6.851299999999921e-05, 6.804099999999785e-05, 6.725000000000134e-05, 6.848600000000302e-05, 6.741700000000017e-05, 6.783300000000325e-05, 6.769400000000009e-05, 6.884700000000035e-05, 6.749999999999812e-05]</msg>
<status status="PASS" starttime="20201030 11:50:50.581" endtime="20201030 11:50:50.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.576" endtime="20201030 11:50:50.583"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.587" endtime="20201030 11:50:50.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.585" endtime="20201030 11:50:50.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.584" endtime="20201030 11:50:50.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.227" endtime="20201030 11:50:50.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.226" endtime="20201030 11:50:50.608"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.616" endtime="20201030 11:50:50.635"></status>
</kw>
<msg timestamp="20201030 11:50:50.635" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.615" endtime="20201030 11:50:50.636"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.638" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.636" endtime="20201030 11:50:50.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.639" endtime="20201030 11:50:50.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.612" endtime="20201030 11:50:50.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.610" endtime="20201030 11:50:50.641"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.648" endtime="20201030 11:50:50.932"></status>
</kw>
<msg timestamp="20201030 11:50:50.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.646" endtime="20201030 11:50:50.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022701792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:50.936" endtime="20201030 11:50:50.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.945" endtime="20201030 11:50:50.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.644" endtime="20201030 11:50:50.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.642" endtime="20201030 11:50:50.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:50.951" level="INFO">${RESULT} = [{'diff': 6.922200000000073e-05}, {'diff': 7.070899999999866e-05}, {'diff': 7.083399999999879e-05}, {'diff': 6.943100000000174e-05}, {'diff': 7.080599999999965e-05}, {'diff': 7.027800000000001e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:50.948" endtime="20201030 11:50:50.951"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:50.955" level="INFO">${ACCURACY} = {'diff': [6.922200000000073e-05, 7.070899999999866e-05, 7.083399999999879e-05, 6.943100000000174e-05, 7.080599999999965e-05, 7.027800000000001e-05, 6.975000000000037e-05, 6.933400000000076e-05, 6.9124...</msg>
<status status="PASS" starttime="20201030 11:50:50.952" endtime="20201030 11:50:50.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.960" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:50:50.959" endtime="20201030 11:50:50.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.962" level="INFO">VALUE: [6.922200000000073e-05, 7.070899999999866e-05, 7.083399999999879e-05, 6.943100000000174e-05, 7.080599999999965e-05, 7.027800000000001e-05, 6.975000000000037e-05, 6.933400000000076e-05, 6.912499999999974e-05, 6.990200000000016e-05, 6.929199999999858e-05, 7.052800000000026e-05, 7.069399999999962e-05, 7.048599999999808e-05, 6.919500000000106e-05, 7.07360000000018e-05, 6.927799999999901e-05, 6.990299999999963e-05, 6.924999999999987e-05, 6.915200000000288e-05, 6.911200000000312e-05, 7.016599999999998e-05, 6.970800000000166e-05, 7.072199999999876e-05, 7.015299999999988e-05, 7.086100000000192e-05, 6.937499999999999e-05, 7.044400000000284e-05, 6.970900000000113e-05, 7.00559999999989e-05, 7.044499999999884e-05, 7.036100000000142e-05, 6.995800000000191e-05, 6.983299999999831e-05, 6.906900000000146e-05, 6.956899999999849e-05, 7.052800000000026e-05, 6.90970000000006e-05, 6.959699999999763e-05, 6.983299999999831e-05, 7.091699999999673e-05, 6.931999999999772e-05, 6.980500000000264e-05, 6.993099999999877e-05, 6.980500000000264e-05, 7.093099999999977e-05, 6.911100000000017e-05, 6.972199999999776e-05, 7.044399999999937e-05, 7.04299999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:50:50.961" endtime="20201030 11:50:50.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.956" endtime="20201030 11:50:50.970"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.974" endtime="20201030 11:50:50.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.973" endtime="20201030 11:50:50.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.971" endtime="20201030 11:50:50.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.608" endtime="20201030 11:50:50.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.608" endtime="20201030 11:50:50.995"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.004" endtime="20201030 11:50:51.022"></status>
</kw>
<msg timestamp="20201030 11:50:51.023" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.002" endtime="20201030 11:50:51.023"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.025" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.024" endtime="20201030 11:50:51.026"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.026" endtime="20201030 11:50:51.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.999" endtime="20201030 11:50:51.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.997" endtime="20201030 11:50:51.029"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.035" endtime="20201030 11:50:51.320"></status>
</kw>
<msg timestamp="20201030 11:50:51.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.034" endtime="20201030 11:50:51.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021970083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022042236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.325" endtime="20201030 11:50:51.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.333" endtime="20201030 11:50:51.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.031" endtime="20201030 11:50:51.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.029" endtime="20201030 11:50:51.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.339" level="INFO">${RESULT} = [{'diff': 7.215299999999841e-05}, {'diff': 7.266699999999848e-05}, {'diff': 7.143100000000027e-05}, {'diff': 7.207000000000047e-05}, {'diff': 7.204100000000185e-05}, {'diff': 7.292999999999883e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:51.336" endtime="20201030 11:50:51.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.344" level="INFO">${ACCURACY} = {'diff': [7.215299999999841e-05, 7.266699999999848e-05, 7.143100000000027e-05, 7.207000000000047e-05, 7.204100000000185e-05, 7.292999999999883e-05, 7.112499999999827e-05, 7.176400000000194e-05, 7.2152...</msg>
<status status="PASS" starttime="20201030 11:50:51.340" endtime="20201030 11:50:51.345"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.349" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.348" endtime="20201030 11:50:51.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.351" level="INFO">VALUE: [7.215299999999841e-05, 7.266699999999848e-05, 7.143100000000027e-05, 7.207000000000047e-05, 7.204100000000185e-05, 7.292999999999883e-05, 7.112499999999827e-05, 7.176400000000194e-05, 7.215299999999841e-05, 7.220800000000069e-05, 7.126400000000144e-05, 7.238900000000256e-05, 7.22499999999994e-05, 7.26110000000002e-05, 7.17499999999989e-05, 7.295800000000144e-05, 7.280500000000217e-05, 7.300000000000015e-05, 7.108399999999904e-05, 7.144400000000037e-05, 7.14300000000008e-05, 7.188899999999859e-05, 7.120799999999969e-05, 7.215299999999841e-05, 7.240300000000213e-05, 7.159699999999963e-05, 7.179199999999761e-05, 7.19170000000012e-05, 7.190300000000163e-05, 7.179099999999813e-05, 7.123599999999883e-05, 7.240300000000213e-05, 7.192999999999783e-05, 7.284700000000088e-05, 7.1069e-05, 7.226399999999897e-05, 7.208300000000056e-05, 7.16109999999992e-05, 7.249999999999965e-05, 7.265299999999891e-05, 7.298599999999711e-05, 7.170899999999966e-05, 7.298600000000058e-05, 7.247200000000051e-05, 7.22499999999994e-05, 7.12910000000011e-05, 7.166599999999801e-05, 7.297200000000101e-05, 7.108299999999956e-05, 7.129200000000058e-05]</msg>
<status status="PASS" starttime="20201030 11:50:51.350" endtime="20201030 11:50:51.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.345" endtime="20201030 11:50:51.353"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.356" endtime="20201030 11:50:51.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.355" endtime="20201030 11:50:51.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.354" endtime="20201030 11:50:51.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.996" endtime="20201030 11:50:51.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.995" endtime="20201030 11:50:51.377"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.386" endtime="20201030 11:50:51.404"></status>
</kw>
<msg timestamp="20201030 11:50:51.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.384" endtime="20201030 11:50:51.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.407" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.405" endtime="20201030 11:50:51.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.408" endtime="20201030 11:50:51.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.382" endtime="20201030 11:50:51.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.379" endtime="20201030 11:50:51.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.417" endtime="20201030 11:50:51.704"></status>
</kw>
<msg timestamp="20201030 11:50:51.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.415" endtime="20201030 11:50:51.708"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.716" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021912319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021985389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.708" endtime="20201030 11:50:51.716"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.717" endtime="20201030 11:50:51.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.413" endtime="20201030 11:50:51.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.411" endtime="20201030 11:50:51.719"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:51.723" level="INFO">${RESULT} = [{'diff': 7.307000000000147e-05}, {'diff': 7.465300000000091e-05}, {'diff': 7.411200000000118e-05}, {'diff': 7.480600000000018e-05}, {'diff': 7.330600000000215e-05}, {'diff': 7.41110000000017e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:51.720" endtime="20201030 11:50:51.724"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:51.728" level="INFO">${ACCURACY} = {'diff': [7.307000000000147e-05, 7.465300000000091e-05, 7.411200000000118e-05, 7.480600000000018e-05, 7.330600000000215e-05, 7.41110000000017e-05, 7.429200000000011e-05, 7.459700000000263e-05, 7.47780...</msg>
<status status="PASS" starttime="20201030 11:50:51.724" endtime="20201030 11:50:51.728"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.732" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:50:51.731" endtime="20201030 11:50:51.732"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.734" level="INFO">VALUE: [7.307000000000147e-05, 7.465300000000091e-05, 7.411200000000118e-05, 7.480600000000018e-05, 7.330600000000215e-05, 7.41110000000017e-05, 7.429200000000011e-05, 7.459700000000263e-05, 7.477800000000104e-05, 7.306899999999852e-05, 7.383300000000231e-05, 7.365299999999991e-05, 7.319500000000159e-05, 7.408400000000204e-05, 7.497199999999954e-05, 7.382000000000222e-05, 7.423599999999836e-05, 7.337499999999705e-05, 7.47769999999981e-05, 7.423600000000183e-05, 7.316599999999951e-05, 7.40829999999991e-05, 7.465300000000091e-05, 7.39309999999993e-05, 7.372200000000176e-05, 7.473600000000233e-05, 7.379200000000308e-05, 7.337500000000052e-05, 7.423600000000183e-05, 7.420799999999922e-05, 7.357000000000197e-05, 7.4763999999998e-05, 7.423599999999836e-05, 7.315300000000288e-05, 7.491700000000073e-05, 7.426400000000097e-05, 7.336099999999748e-05, 7.473599999999886e-05, 7.337500000000052e-05, 7.3069999999998e-05, 7.436200000000143e-05, 7.391600000000026e-05, 7.322299999999726e-05, 7.362500000000077e-05, 7.418000000000008e-05, 7.49029999999977e-05, 7.441700000000023e-05, 7.383300000000231e-05, 7.39309999999993e-05, 7.448599999999861e-05]</msg>
<status status="PASS" starttime="20201030 11:50:51.733" endtime="20201030 11:50:51.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.728" endtime="20201030 11:50:51.736"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:51.739" endtime="20201030 11:50:51.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.738" endtime="20201030 11:50:51.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.737" endtime="20201030 11:50:51.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.378" endtime="20201030 11:50:51.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.377" endtime="20201030 11:50:51.760"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.769" endtime="20201030 11:50:51.788"></status>
</kw>
<msg timestamp="20201030 11:50:51.789" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.767" endtime="20201030 11:50:51.789"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:51.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:51.790" endtime="20201030 11:50:51.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.792" endtime="20201030 11:50:51.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.765" endtime="20201030 11:50:51.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.763" endtime="20201030 11:50:51.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:51.801" endtime="20201030 11:50:52.088"></status>
</kw>
<msg timestamp="20201030 11:50:52.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:51.800" endtime="20201030 11:50:52.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.099" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022806472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022882708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.092" endtime="20201030 11:50:52.100"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.100" endtime="20201030 11:50:52.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.797" endtime="20201030 11:50:52.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.795" endtime="20201030 11:50:52.103"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.107" level="INFO">${RESULT} = [{'diff': 7.623600000000036e-05}, {'diff': 7.624999999999993e-05}, {'diff': 7.590199999999922e-05}, {'diff': 7.542999999999786e-05}, {'diff': 7.695800000000197e-05}, {'diff': 7.529200000000111e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:52.104" endtime="20201030 11:50:52.107"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.111" level="INFO">${ACCURACY} = {'diff': [7.623600000000036e-05, 7.624999999999993e-05, 7.590199999999922e-05, 7.542999999999786e-05, 7.695800000000197e-05, 7.529200000000111e-05, 7.559700000000016e-05, 7.594500000000087e-05, 7.6249...</msg>
<status status="PASS" starttime="20201030 11:50:52.108" endtime="20201030 11:50:52.111"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.115" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.114" endtime="20201030 11:50:52.116"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.118" level="INFO">VALUE: [7.623600000000036e-05, 7.624999999999993e-05, 7.590199999999922e-05, 7.542999999999786e-05, 7.695800000000197e-05, 7.529200000000111e-05, 7.559700000000016e-05, 7.594500000000087e-05, 7.624999999999993e-05, 7.65839999999976e-05, 7.667999999999911e-05, 7.527800000000154e-05, 7.599999999999968e-05, 7.601399999999925e-05, 7.581999999999728e-05, 7.573599999999986e-05, 7.595800000000097e-05, 7.673599999999739e-05, 7.534699999999991e-05, 7.609800000000014e-05, 7.637500000000005e-05, 7.552700000000231e-05, 7.626300000000003e-05, 7.670899999999772e-05, 7.667999999999911e-05, 7.629199999999864e-05, 7.545800000000047e-05, 7.513899999999837e-05, 7.692999999999936e-05, 7.509700000000313e-05, 7.64440000000019e-05, 7.593099999999783e-05, 7.683399999999785e-05, 7.693099999999883e-05, 7.651399999999975e-05, 7.595900000000044e-05, 7.670800000000172e-05, 7.591599999999879e-05, 7.611100000000023e-05, 7.69029999999997e-05, 7.6764e-05, 7.69449999999984e-05, 7.559700000000016e-05, 7.59310000000013e-05, 7.574999999999943e-05, 7.69029999999997e-05, 7.659800000000064e-05, 7.531900000000077e-05, 7.572200000000029e-05, 7.511099999999923e-05]</msg>
<status status="PASS" starttime="20201030 11:50:52.117" endtime="20201030 11:50:52.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.112" endtime="20201030 11:50:52.120"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.124" endtime="20201030 11:50:52.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.122" endtime="20201030 11:50:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.121" endtime="20201030 11:50:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.761" endtime="20201030 11:50:52.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:51.760" endtime="20201030 11:50:52.144"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.153" endtime="20201030 11:50:52.172"></status>
</kw>
<msg timestamp="20201030 11:50:52.172" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.151" endtime="20201030 11:50:52.172"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.175" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.173" endtime="20201030 11:50:52.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.176" endtime="20201030 11:50:52.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.149" endtime="20201030 11:50:52.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.147" endtime="20201030 11:50:52.178"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.185" endtime="20201030 11:50:52.470"></status>
</kw>
<msg timestamp="20201030 11:50:52.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.183" endtime="20201030 11:50:52.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.482" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022028944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022106181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.475" endtime="20201030 11:50:52.482"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.483" endtime="20201030 11:50:52.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.181" endtime="20201030 11:50:52.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.179" endtime="20201030 11:50:52.485"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.489" level="INFO">${RESULT} = [{'diff': 7.723699999999736e-05}, {'diff': 7.859700000000316e-05}, {'diff': 7.780500000000024e-05}, {'diff': 7.89580000000005e-05}, {'diff': 7.750000000000118e-05}, {'diff': 7.7457999999999e-05}, {'di...</msg>
<status status="PASS" starttime="20201030 11:50:52.486" endtime="20201030 11:50:52.490"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.494" level="INFO">${ACCURACY} = {'diff': [7.723699999999736e-05, 7.859700000000316e-05, 7.780500000000024e-05, 7.89580000000005e-05, 7.750000000000118e-05, 7.7457999999999e-05, 7.863900000000187e-05, 7.786099999999851e-05, 7.8249999...</msg>
<status status="PASS" starttime="20201030 11:50:52.490" endtime="20201030 11:50:52.495"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.499" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.498" endtime="20201030 11:50:52.499"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.501" level="INFO">VALUE: [7.723699999999736e-05, 7.859700000000316e-05, 7.780500000000024e-05, 7.89580000000005e-05, 7.750000000000118e-05, 7.7457999999999e-05, 7.863900000000187e-05, 7.786099999999851e-05, 7.824999999999846e-05, 7.76250000000013e-05, 7.866700000000101e-05, 7.80839999999991e-05, 7.8458e-05, 7.825000000000193e-05, 7.80969999999992e-05, 7.894400000000093e-05, 7.849999999999871e-05, 7.844400000000043e-05, 7.725000000000093e-05, 7.741699999999976e-05, 7.823600000000236e-05, 7.791700000000026e-05, 7.79449999999994e-05, 7.880500000000124e-05, 7.881899999999734e-05, 7.861099999999926e-05, 7.83190000000003e-05, 7.847199999999957e-05, 7.83190000000003e-05, 7.863900000000187e-05, 7.775000000000143e-05, 7.904200000000139e-05, 7.790299999999722e-05, 7.718099999999908e-05, 7.818100000000008e-05, 7.897200000000007e-05, 7.8458e-05, 7.823599999999889e-05, 7.847199999999957e-05, 7.830500000000074e-05, 7.877800000000157e-05, 7.829200000000064e-05, 7.808299999999962e-05, 7.74449999999989e-05, 7.86389999999984e-05, 7.738900000000062e-05, 7.744500000000237e-05, 7.845899999999947e-05, 7.763900000000087e-05, 7.748599999999814e-05]</msg>
<status status="PASS" starttime="20201030 11:50:52.500" endtime="20201030 11:50:52.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.495" endtime="20201030 11:50:52.503"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.506" endtime="20201030 11:50:52.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.505" endtime="20201030 11:50:52.526"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.504" endtime="20201030 11:50:52.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.145" endtime="20201030 11:50:52.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.145" endtime="20201030 11:50:52.527"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.536" endtime="20201030 11:50:52.554"></status>
</kw>
<msg timestamp="20201030 11:50:52.555" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.534" endtime="20201030 11:50:52.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.557" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.556" endtime="20201030 11:50:52.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.558" endtime="20201030 11:50:52.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.531" endtime="20201030 11:50:52.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.529" endtime="20201030 11:50:52.561"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.567" endtime="20201030 11:50:52.855"></status>
</kw>
<msg timestamp="20201030 11:50:52.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.566" endtime="20201030 11:50:52.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021920361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022000097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.859" endtime="20201030 11:50:52.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.868" endtime="20201030 11:50:52.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.563" endtime="20201030 11:50:52.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.562" endtime="20201030 11:50:52.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:52.874" level="INFO">${RESULT} = [{'diff': 7.973600000000039e-05}, {'diff': 8.005499999999902e-05}, {'diff': 7.981899999999834e-05}, {'diff': 7.945900000000047e-05}, {'diff': 8.000000000000021e-05}, {'diff': 7.947200000000057e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:52.871" endtime="20201030 11:50:52.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:52.878" level="INFO">${ACCURACY} = {'diff': [7.973600000000039e-05, 8.005499999999902e-05, 7.981899999999834e-05, 7.945900000000047e-05, 8.000000000000021e-05, 7.947200000000057e-05, 8.080599999999924e-05, 7.954199999999842e-05, 8.0888...</msg>
<status status="PASS" starttime="20201030 11:50:52.875" endtime="20201030 11:50:52.878"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.883" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:50:52.882" endtime="20201030 11:50:52.883"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.885" level="INFO">VALUE: [7.973600000000039e-05, 8.005499999999902e-05, 7.981899999999834e-05, 7.945900000000047e-05, 8.000000000000021e-05, 7.947200000000057e-05, 8.080599999999924e-05, 7.954199999999842e-05, 8.088899999999719e-05, 8.006999999999806e-05, 7.983400000000085e-05, 8.009699999999773e-05, 8.03329999999984e-05, 7.99580000000015e-05, 7.937499999999958e-05, 8.072199999999835e-05, 8.080499999999977e-05, 7.909799999999967e-05, 8.100000000000121e-05, 8.061200000000074e-05, 8.056999999999856e-05, 8.044400000000243e-05, 7.930500000000174e-05, 8.040200000000025e-05, 8.061100000000126e-05, 8.093100000000283e-05, 7.906899999999759e-05, 8.084700000000195e-05, 8.04169999999993e-05, 8.086100000000151e-05, 8.056999999999856e-05, 8.076400000000053e-05, 8.040200000000025e-05, 7.97909999999992e-05, 8.03329999999984e-05, 7.974999999999996e-05, 7.952799999999885e-05, 8.051400000000028e-05, 8.07780000000001e-05, 7.986100000000051e-05, 8.098600000000164e-05, 7.951399999999928e-05, 8.019500000000165e-05, 7.962499999999983e-05, 8.038900000000015e-05, 8.008300000000163e-05, 8.102800000000035e-05, 7.991599999999932e-05, 8.015299999999947e-05, 7.973600000000039e-05]</msg>
<status status="PASS" starttime="20201030 11:50:52.884" endtime="20201030 11:50:52.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.879" endtime="20201030 11:50:52.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:52.890" endtime="20201030 11:50:52.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.889" endtime="20201030 11:50:52.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.888" endtime="20201030 11:50:52.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.528" endtime="20201030 11:50:52.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.527" endtime="20201030 11:50:52.911"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.919" endtime="20201030 11:50:52.939"></status>
</kw>
<msg timestamp="20201030 11:50:52.940" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.918" endtime="20201030 11:50:52.940"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:52.942" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:52.941" endtime="20201030 11:50:52.942"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.943" endtime="20201030 11:50:52.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.915" endtime="20201030 11:50:52.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.913" endtime="20201030 11:50:52.946"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:52.952" endtime="20201030 11:50:53.238"></status>
</kw>
<msg timestamp="20201030 11:50:53.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:52.951" endtime="20201030 11:50:53.241"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.249" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022696181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.242" endtime="20201030 11:50:53.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.250" endtime="20201030 11:50:53.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.948" endtime="20201030 11:50:53.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.946" endtime="20201030 11:50:53.253"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.257" level="INFO">${RESULT} = [{'diff': 8.276299999999959e-05}, {'diff': 8.269500000000068e-05}, {'diff': 8.230600000000074e-05}, {'diff': 8.143100000000333e-05}, {'diff': 8.24170000000013e-05}, {'diff': 8.199999999999874e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:53.254" endtime="20201030 11:50:53.257"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.261" level="INFO">${ACCURACY} = {'diff': [8.276299999999959e-05, 8.269500000000068e-05, 8.230600000000074e-05, 8.143100000000333e-05, 8.24170000000013e-05, 8.199999999999874e-05, 8.17910000000012e-05, 8.255500000000152e-05, 8.186099...</msg>
<status status="PASS" starttime="20201030 11:50:53.258" endtime="20201030 11:50:53.261"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.266" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.265" endtime="20201030 11:50:53.266"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.268" level="INFO">VALUE: [8.276299999999959e-05, 8.269500000000068e-05, 8.230600000000074e-05, 8.143100000000333e-05, 8.24170000000013e-05, 8.199999999999874e-05, 8.17910000000012e-05, 8.255500000000152e-05, 8.186099999999905e-05, 8.252800000000185e-05, 8.226399999999856e-05, 8.218100000000061e-05, 8.251400000000228e-05, 8.107000000000253e-05, 8.180600000000024e-05, 8.19170000000008e-05, 8.215199999999853e-05, 8.194400000000046e-05, 8.122200000000232e-05, 8.13329999999994e-05, 8.158300000000313e-05, 8.229200000000117e-05, 8.1152999999997e-05, 8.297300000000007e-05, 8.123599999999842e-05, 8.193100000000036e-05, 8.198599999999917e-05, 8.124999999999799e-05, 8.220800000000028e-05, 8.17780000000011e-05, 8.193000000000089e-05, 8.123599999999842e-05, 8.274999999999949e-05, 8.137499999999812e-05, 8.299999999999974e-05, 8.16529999999975e-05, 8.251400000000228e-05, 8.173599999999892e-05, 8.124999999999799e-05, 8.181900000000034e-05, 8.21659999999981e-05, 8.21109999999993e-05, 8.231900000000084e-05, 8.109699999999873e-05, 8.298600000000017e-05, 8.134699999999898e-05, 8.111100000000177e-05, 8.229200000000117e-05, 8.274999999999949e-05, 8.194400000000046e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.267" endtime="20201030 11:50:53.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.262" endtime="20201030 11:50:53.270"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.274" endtime="20201030 11:50:53.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.272" endtime="20201030 11:50:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.271" endtime="20201030 11:50:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.912" endtime="20201030 11:50:53.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:52.911" endtime="20201030 11:50:53.295"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.303" endtime="20201030 11:50:53.322"></status>
</kw>
<msg timestamp="20201030 11:50:53.323" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.302" endtime="20201030 11:50:53.323"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.325" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.324" endtime="20201030 11:50:53.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.326" endtime="20201030 11:50:53.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.299" endtime="20201030 11:50:53.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.297" endtime="20201030 11:50:53.329"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.336" endtime="20201030 11:50:53.621"></status>
</kw>
<msg timestamp="20201030 11:50:53.624" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.334" endtime="20201030 11:50:53.624"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021924181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022009069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.625" endtime="20201030 11:50:53.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.633" endtime="20201030 11:50:53.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.331" endtime="20201030 11:50:53.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.330" endtime="20201030 11:50:53.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.640" level="INFO">${RESULT} = [{'diff': 8.488799999999824e-05}, {'diff': 8.415200000000053e-05}, {'diff': 8.381900000000234e-05}, {'diff': 8.34309999999984e-05}, {'diff': 8.31390000000029e-05}, {'diff': 8.448600000000167e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:53.636" endtime="20201030 11:50:53.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:53.645" level="INFO">${ACCURACY} = {'diff': [8.488799999999824e-05, 8.415200000000053e-05, 8.381900000000234e-05, 8.34309999999984e-05, 8.31390000000029e-05, 8.448600000000167e-05, 8.373600000000092e-05, 8.381899999999887e-05, 8.491700...</msg>
<status status="PASS" starttime="20201030 11:50:53.641" endtime="20201030 11:50:53.645"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.649" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:50:53.648" endtime="20201030 11:50:53.649"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.652" level="INFO">VALUE: [8.488799999999824e-05, 8.415200000000053e-05, 8.381900000000234e-05, 8.34309999999984e-05, 8.31390000000029e-05, 8.448600000000167e-05, 8.373600000000092e-05, 8.381899999999887e-05, 8.491700000000033e-05, 8.39309999999989e-05, 8.497199999999913e-05, 8.452800000000038e-05, 8.447199999999863e-05, 8.450000000000124e-05, 8.341599999999935e-05, 8.499999999999827e-05, 8.390299999999976e-05, 8.477800000000063e-05, 8.502700000000141e-05, 8.330599999999827e-05, 8.370799999999831e-05, 8.391599999999985e-05, 8.493000000000042e-05, 8.412500000000087e-05, 8.338899999999969e-05, 8.344400000000196e-05, 8.427800000000013e-05, 8.387500000000062e-05, 8.39309999999989e-05, 8.411200000000077e-05, 8.487500000000162e-05, 8.450000000000124e-05, 8.459799999999823e-05, 8.43330000000024e-05, 8.369399999999874e-05, 8.372200000000135e-05, 8.431899999999937e-05, 8.329200000000217e-05, 8.42919999999997e-05, 8.433399999999841e-05, 8.351399999999981e-05, 8.490300000000076e-05, 8.468000000000017e-05, 8.474999999999802e-05, 8.465200000000103e-05, 8.312499999999987e-05, 8.344400000000196e-05, 8.355500000000252e-05, 8.358299999999819e-05, 8.387500000000062e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.650" endtime="20201030 11:50:53.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.646" endtime="20201030 11:50:53.653"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.657" endtime="20201030 11:50:53.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.655" endtime="20201030 11:50:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.654" endtime="20201030 11:50:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.295" endtime="20201030 11:50:53.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.295" endtime="20201030 11:50:53.677"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.686" endtime="20201030 11:50:53.705"></status>
</kw>
<msg timestamp="20201030 11:50:53.705" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.684" endtime="20201030 11:50:53.706"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.708" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.706" endtime="20201030 11:50:53.708"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.709" endtime="20201030 11:50:53.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.682" endtime="20201030 11:50:53.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.680" endtime="20201030 11:50:53.711"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.718" endtime="20201030 11:50:54.005"></status>
</kw>
<msg timestamp="20201030 11:50:54.008" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:53.716" endtime="20201030 11:50:54.008"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.016" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021865903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021951514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.009" endtime="20201030 11:50:54.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.017" endtime="20201030 11:50:54.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.714" endtime="20201030 11:50:54.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.712" endtime="20201030 11:50:54.020"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.024" level="INFO">${RESULT} = [{'diff': 8.561099999999933e-05}, {'diff': 8.559699999999976e-05}, {'diff': 8.676399999999959e-05}, {'diff': 8.576399999999859e-05}, {'diff': 8.547199999999963e-05}, {'diff': 8.634699999999704e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:54.021" endtime="20201030 11:50:54.024"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.028" level="INFO">${ACCURACY} = {'diff': [8.561099999999933e-05, 8.559699999999976e-05, 8.676399999999959e-05, 8.576399999999859e-05, 8.547199999999963e-05, 8.634699999999704e-05, 8.580600000000077e-05, 8.677799999999916e-05, 8.6138...</msg>
<status status="PASS" starttime="20201030 11:50:54.025" endtime="20201030 11:50:54.028"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.033" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.032" endtime="20201030 11:50:54.033"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.035" level="INFO">VALUE: [8.561099999999933e-05, 8.559699999999976e-05, 8.676399999999959e-05, 8.576399999999859e-05, 8.547199999999963e-05, 8.634699999999704e-05, 8.580600000000077e-05, 8.677799999999916e-05, 8.613899999999897e-05, 8.694399999999852e-05, 8.56119999999988e-05, 8.569399999999727e-05, 8.544400000000049e-05, 8.523599999999895e-05, 8.624999999999952e-05, 8.52920000000007e-05, 8.676399999999959e-05, 8.686100000000058e-05, 8.648699999999968e-05, 8.615299999999854e-05, 8.526300000000209e-05, 8.574999999999902e-05, 8.64860000000002e-05, 8.56110000000028e-05, 8.629199999999823e-05, 8.611099999999983e-05, 8.644500000000097e-05, 8.591699999999786e-05, 8.59859999999997e-05, 8.544400000000049e-05, 8.541599999999788e-05, 8.558300000000019e-05, 8.540200000000178e-05, 8.527800000000113e-05, 8.593000000000142e-05, 8.586099999999958e-05, 8.554200000000095e-05, 8.54310000000004e-05, 8.64310000000014e-05, 8.675000000000002e-05, 8.590299999999829e-05, 8.63470000000005e-05, 8.650000000000324e-05, 8.533299999999994e-05, 8.618100000000115e-05, 8.558299999999672e-05, 8.645900000000054e-05, 8.608300000000069e-05, 8.590299999999829e-05, 8.569500000000022e-05]</msg>
<status status="PASS" starttime="20201030 11:50:54.034" endtime="20201030 11:50:54.036"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.029" endtime="20201030 11:50:54.036"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.040" endtime="20201030 11:50:54.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.039" endtime="20201030 11:50:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.037" endtime="20201030 11:50:54.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.678" endtime="20201030 11:50:54.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.678" endtime="20201030 11:50:54.061"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.070" endtime="20201030 11:50:54.091"></status>
</kw>
<msg timestamp="20201030 11:50:54.092" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.068" endtime="20201030 11:50:54.092"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.095" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.093" endtime="20201030 11:50:54.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.096" endtime="20201030 11:50:54.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.066" endtime="20201030 11:50:54.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.063" endtime="20201030 11:50:54.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.105" endtime="20201030 11:50:54.390"></status>
</kw>
<msg timestamp="20201030 11:50:54.393" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.103" endtime="20201030 11:50:54.394"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024632333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024720722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.394" endtime="20201030 11:50:54.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.403" endtime="20201030 11:50:54.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.100" endtime="20201030 11:50:54.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.099" endtime="20201030 11:50:54.405"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.409" level="INFO">${RESULT} = [{'diff': 8.838900000000122e-05}, {'diff': 8.81670000000001e-05}, {'diff': 8.759699999999829e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.822199999999891e-05}, {'diff': 8.71669999999991e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:54.406" endtime="20201030 11:50:54.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.413" level="INFO">${ACCURACY} = {'diff': [8.838900000000122e-05, 8.81670000000001e-05, 8.759699999999829e-05, 8.793099999999943e-05, 8.822199999999891e-05, 8.71669999999991e-05, 8.891600000000138e-05, 8.874999999999855e-05, 8.879099...</msg>
<status status="PASS" starttime="20201030 11:50:54.410" endtime="20201030 11:50:54.414"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.418" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.417" endtime="20201030 11:50:54.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.420" level="INFO">VALUE: [8.838900000000122e-05, 8.81670000000001e-05, 8.759699999999829e-05, 8.793099999999943e-05, 8.822199999999891e-05, 8.71669999999991e-05, 8.891600000000138e-05, 8.874999999999855e-05, 8.879099999999779e-05, 8.86800000000007e-05, 8.761099999999786e-05, 8.740299999999979e-05, 8.809699999999879e-05, 8.718100000000215e-05, 8.787500000000115e-05, 8.840299999999732e-05, 8.81389999999975e-05, 8.876399999999812e-05, 8.777700000000069e-05, 8.792999999999995e-05, 8.758300000000219e-05, 8.726400000000009e-05, 8.777800000000016e-05, 8.776400000000059e-05, 8.895800000000009e-05, 8.791699999999986e-05, 8.708399999999769e-05, 8.765300000000004e-05, 8.884699999999954e-05, 8.751399999999687e-05, 8.713899999999997e-05, 8.841600000000088e-05, 8.843000000000045e-05, 8.726400000000009e-05, 8.709699999999779e-05, 8.836100000000208e-05, 8.8945e-05, 8.757000000000209e-05, 8.84860000000022e-05, 8.827699999999772e-05, 8.736100000000108e-05, 8.798599999999823e-05, 8.854200000000048e-05, 8.84999999999983e-05, 8.793099999999943e-05, 8.708299999999822e-05, 8.751399999999687e-05, 8.779199999999973e-05, 8.820799999999934e-05, 8.877700000000169e-05]</msg>
<status status="PASS" starttime="20201030 11:50:54.419" endtime="20201030 11:50:54.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.414" endtime="20201030 11:50:54.423"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.426" endtime="20201030 11:50:54.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.425" endtime="20201030 11:50:54.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.424" endtime="20201030 11:50:54.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.062" endtime="20201030 11:50:54.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.061" endtime="20201030 11:50:54.447"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.455" endtime="20201030 11:50:54.474"></status>
</kw>
<msg timestamp="20201030 11:50:54.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.454" endtime="20201030 11:50:54.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.476" endtime="20201030 11:50:54.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.479" endtime="20201030 11:50:54.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.451" endtime="20201030 11:50:54.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.449" endtime="20201030 11:50:54.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.488" endtime="20201030 11:50:54.774"></status>
</kw>
<msg timestamp="20201030 11:50:54.777" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:54.487" endtime="20201030 11:50:54.777"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.785" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022269347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02235875, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:54.778" endtime="20201030 11:50:54.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.786" endtime="20201030 11:50:54.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.484" endtime="20201030 11:50:54.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.482" endtime="20201030 11:50:54.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:54.793" level="INFO">${RESULT} = [{'diff': 8.940300000000179e-05}, {'diff': 8.925000000000252e-05}, {'diff': 8.94450000000005e-05}, {'diff': 8.952799999999844e-05}, {'diff': 9.062500000000043e-05}, {'diff': 9.06800000000027e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:54.790" endtime="20201030 11:50:54.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:54.798" level="INFO">${ACCURACY} = {'diff': [8.940300000000179e-05, 8.925000000000252e-05, 8.94450000000005e-05, 8.952799999999844e-05, 9.062500000000043e-05, 9.06800000000027e-05, 8.945799999999712e-05, 8.916599999999816e-05, 9.040199...</msg>
<status status="PASS" starttime="20201030 11:50:54.794" endtime="20201030 11:50:54.798"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.803" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:50:54.801" endtime="20201030 11:50:54.803"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.805" level="INFO">VALUE: [8.940300000000179e-05, 8.925000000000252e-05, 8.94450000000005e-05, 8.952799999999844e-05, 9.062500000000043e-05, 9.06800000000027e-05, 8.945799999999712e-05, 8.916599999999816e-05, 9.040199999999984e-05, 8.997200000000066e-05, 8.933300000000047e-05, 9.058299999999825e-05, 9.038899999999975e-05, 8.979199999999826e-05, 9.041700000000236e-05, 9.011099999999689e-05, 9.054099999999954e-05, 9.066699999999914e-05, 9.06939999999988e-05, 9.025000000000005e-05, 8.975000000000302e-05, 8.961099999999986e-05, 8.974999999999955e-05, 9.027800000000266e-05, 9.082000000000187e-05, 9.011100000000036e-05, 8.941699999999789e-05, 9.048699999999674e-05, 9.026399999999962e-05, 8.944400000000102e-05, 8.970799999999737e-05, 8.9945000000001e-05, 8.924999999999905e-05, 8.945800000000059e-05, 9.043100000000193e-05, 9.033400000000094e-05, 8.934799999999951e-05, 9.090299999999982e-05, 9.098600000000123e-05, 9.077799999999969e-05, 8.920800000000034e-05, 9.042999999999898e-05, 8.981899999999793e-05, 8.965300000000204e-05, 9.043099999999846e-05, 9.062500000000043e-05, 9.094499999999853e-05, 9.074999999999708e-05, 9.027699999999972e-05, 8.947200000000016e-05]</msg>
<status status="PASS" starttime="20201030 11:50:54.804" endtime="20201030 11:50:54.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.799" endtime="20201030 11:50:54.806"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:54.810" endtime="20201030 11:50:54.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.808" endtime="20201030 11:50:54.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.807" endtime="20201030 11:50:54.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.448" endtime="20201030 11:50:54.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.447" endtime="20201030 11:50:54.831"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.839" endtime="20201030 11:50:54.859"></status>
</kw>
<msg timestamp="20201030 11:50:54.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.838" endtime="20201030 11:50:54.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:54.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:54.861" endtime="20201030 11:50:54.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.863" endtime="20201030 11:50:54.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.835" endtime="20201030 11:50:54.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.833" endtime="20201030 11:50:54.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:54.872" endtime="20201030 11:50:55.160"></status>
</kw>
<msg timestamp="20201030 11:50:55.163" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:54.871" endtime="20201030 11:50:55.163"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.171" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021849681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021942403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.164" endtime="20201030 11:50:55.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.172" endtime="20201030 11:50:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.868" endtime="20201030 11:50:55.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.866" endtime="20201030 11:50:55.175"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.179" level="INFO">${RESULT} = [{'diff': 9.272199999999994e-05}, {'diff': 9.161100000000186e-05}, {'diff': 9.129200000000323e-05}, {'diff': 9.201299999999843e-05}, {'diff': 9.102700000000047e-05}, {'diff': 9.161099999999839e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:55.175" endtime="20201030 11:50:55.179"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.183" level="INFO">${ACCURACY} = {'diff': [9.272199999999994e-05, 9.161100000000186e-05, 9.129200000000323e-05, 9.201299999999843e-05, 9.102700000000047e-05, 9.161099999999839e-05, 9.283299999999703e-05, 9.211100000000236e-05, 9.2111...</msg>
<status status="PASS" starttime="20201030 11:50:55.180" endtime="20201030 11:50:55.183"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.187" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.186" endtime="20201030 11:50:55.188"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.190" level="INFO">VALUE: [9.272199999999994e-05, 9.161100000000186e-05, 9.129200000000323e-05, 9.201299999999843e-05, 9.102700000000047e-05, 9.161099999999839e-05, 9.283299999999703e-05, 9.211100000000236e-05, 9.211100000000236e-05, 9.124999999999758e-05, 9.159699999999882e-05, 9.215300000000107e-05, 9.175000000000155e-05, 9.249999999999883e-05, 9.281899999999746e-05, 9.240199999999837e-05, 9.159699999999882e-05, 9.180500000000036e-05, 9.202800000000094e-05, 9.261099999999939e-05, 9.145799999999912e-05, 9.25139999999984e-05, 9.209699999999932e-05, 9.194499999999953e-05, 9.188800000000177e-05, 9.177800000000069e-05, 9.1332999999999e-05, 9.229200000000076e-05, 9.223599999999901e-05, 9.25000000000023e-05, 9.29590000000001e-05, 9.244500000000003e-05, 9.290300000000182e-05, 9.183399999999897e-05, 9.291599999999844e-05, 9.16659999999972e-05, 9.227800000000119e-05, 9.241700000000089e-05, 9.243100000000046e-05, 9.223599999999901e-05, 9.109799999999779e-05, 9.243100000000046e-05, 9.222200000000291e-05, 9.159799999999829e-05, 9.20139999999979e-05, 9.243000000000098e-05, 9.156899999999968e-05, 9.201400000000137e-05, 9.276399999999865e-05, 9.215300000000107e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.188" endtime="20201030 11:50:55.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.184" endtime="20201030 11:50:55.191"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.195" endtime="20201030 11:50:55.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.193" endtime="20201030 11:50:55.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.192" endtime="20201030 11:50:55.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.831" endtime="20201030 11:50:55.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:54.831" endtime="20201030 11:50:55.216"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.224" endtime="20201030 11:50:55.244"></status>
</kw>
<msg timestamp="20201030 11:50:55.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.223" endtime="20201030 11:50:55.245"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.246" endtime="20201030 11:50:55.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.248" endtime="20201030 11:50:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.220" endtime="20201030 11:50:55.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.218" endtime="20201030 11:50:55.251"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.257" endtime="20201030 11:50:55.543"></status>
</kw>
<msg timestamp="20201030 11:50:55.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.256" endtime="20201030 11:50:55.547"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022804528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.547" endtime="20201030 11:50:55.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.556" endtime="20201030 11:50:55.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.253" endtime="20201030 11:50:55.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.251" endtime="20201030 11:50:55.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.562" level="INFO">${RESULT} = [{'diff': 9.452799999999997e-05}, {'diff': 9.343000000000198e-05}, {'diff': 9.370800000000137e-05}, {'diff': 9.408300000000175e-05}, {'diff': 9.419500000000178e-05}, {'diff': 9.393099999999849e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:55.559" endtime="20201030 11:50:55.563"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.567" level="INFO">${ACCURACY} = {'diff': [9.452799999999997e-05, 9.343000000000198e-05, 9.370800000000137e-05, 9.408300000000175e-05, 9.419500000000178e-05, 9.393099999999849e-05, 9.406900000000218e-05, 9.426400000000015e-05, 9.3277...</msg>
<status status="PASS" starttime="20201030 11:50:55.563" endtime="20201030 11:50:55.567"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.571" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.570" endtime="20201030 11:50:55.571"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.573" level="INFO">VALUE: [9.452799999999997e-05, 9.343000000000198e-05, 9.370800000000137e-05, 9.408300000000175e-05, 9.419500000000178e-05, 9.393099999999849e-05, 9.406900000000218e-05, 9.426400000000015e-05, 9.327799999999872e-05, 9.348600000000026e-05, 9.418099999999874e-05, 9.46660000000002e-05, 9.322200000000044e-05, 9.463899999999706e-05, 9.362499999999996e-05, 9.336100000000014e-05, 9.495799999999915e-05, 9.35139999999994e-05, 9.363899999999953e-05, 9.495799999999915e-05, 9.41659999999997e-05, 9.352799999999897e-05, 9.306899999999771e-05, 9.402799999999947e-05, 9.443100000000246e-05, 9.408300000000175e-05, 9.499999999999786e-05, 9.423600000000101e-05, 9.309700000000032e-05, 9.429099999999982e-05, 9.441700000000289e-05, 9.345800000000112e-05, 9.493099999999949e-05, 9.359700000000082e-05, 9.441699999999942e-05, 9.344500000000103e-05, 9.461099999999792e-05, 9.480499999999989e-05, 9.376400000000312e-05, 9.441699999999942e-05, 9.409800000000079e-05, 9.386100000000064e-05, 9.477800000000022e-05, 9.341599999999894e-05, 9.333400000000047e-05, 9.440299999999985e-05, 9.387500000000021e-05, 9.436100000000114e-05, 9.31529999999986e-05, 9.426300000000068e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.572" endtime="20201030 11:50:55.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.567" endtime="20201030 11:50:55.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.579" endtime="20201030 11:50:55.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.578" endtime="20201030 11:50:55.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.577" endtime="20201030 11:50:55.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.216" endtime="20201030 11:50:55.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.216" endtime="20201030 11:50:55.600"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.608" endtime="20201030 11:50:55.628"></status>
</kw>
<msg timestamp="20201030 11:50:55.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.607" endtime="20201030 11:50:55.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.629" endtime="20201030 11:50:55.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.632" endtime="20201030 11:50:55.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.604" endtime="20201030 11:50:55.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.602" endtime="20201030 11:50:55.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.641" endtime="20201030 11:50:55.927"></status>
</kw>
<msg timestamp="20201030 11:50:55.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.639" endtime="20201030 11:50:55.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021879903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021975958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:55.931" endtime="20201030 11:50:55.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.940" endtime="20201030 11:50:55.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.637" endtime="20201030 11:50:55.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.635" endtime="20201030 11:50:55.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:55.946" level="INFO">${RESULT} = [{'diff': 9.605500000000114e-05}, {'diff': 9.577800000000122e-05}, {'diff': 9.540200000000137e-05}, {'diff': 9.509700000000232e-05}, {'diff': 9.623599999999954e-05}, {'diff': 9.552800000000097e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:50:55.943" endtime="20201030 11:50:55.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:55.951" level="INFO">${ACCURACY} = {'diff': [9.605500000000114e-05, 9.577800000000122e-05, 9.540200000000137e-05, 9.509700000000232e-05, 9.623599999999954e-05, 9.552800000000097e-05, 9.643100000000099e-05, 9.699999999999986e-05, 9.6152...</msg>
<status status="PASS" starttime="20201030 11:50:55.947" endtime="20201030 11:50:55.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.956" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:50:55.955" endtime="20201030 11:50:55.956"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:55.958" level="INFO">VALUE: [9.605500000000114e-05, 9.577800000000122e-05, 9.540200000000137e-05, 9.509700000000232e-05, 9.623599999999954e-05, 9.552800000000097e-05, 9.643100000000099e-05, 9.699999999999986e-05, 9.615299999999813e-05, 9.543099999999999e-05, 9.508399999999875e-05, 9.651399999999893e-05, 9.626400000000215e-05, 9.683299999999756e-05, 9.623599999999954e-05, 9.613899999999856e-05, 9.601399999999843e-05, 9.694500000000106e-05, 9.688899999999931e-05, 9.594500000000006e-05, 9.659700000000035e-05, 9.633300000000053e-05, 9.674999999999961e-05, 9.594400000000058e-05, 9.674999999999961e-05, 9.543099999999999e-05, 9.626400000000215e-05, 9.61530000000016e-05, 9.509699999999885e-05, 9.701299999999996e-05, 9.583300000000003e-05, 9.681900000000146e-05, 9.597199999999972e-05, 9.699999999999986e-05, 9.56530000000011e-05, 9.612499999999899e-05, 9.663900000000253e-05, 9.616700000000117e-05, 9.638899999999881e-05, 9.608300000000028e-05, 9.640299999999838e-05, 9.579100000000132e-05, 9.513900000000103e-05, 9.526400000000115e-05, 9.55140000000014e-05, 9.581999999999993e-05, 9.531999999999943e-05, 9.659700000000035e-05, 9.525000000000158e-05, 9.669400000000133e-05]</msg>
<status status="PASS" starttime="20201030 11:50:55.957" endtime="20201030 11:50:55.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.952" endtime="20201030 11:50:55.960"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:55.963" endtime="20201030 11:50:55.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.962" endtime="20201030 11:50:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.960" endtime="20201030 11:50:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.601" endtime="20201030 11:50:55.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.600" endtime="20201030 11:50:55.984"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:55.994" endtime="20201030 11:50:56.013"></status>
</kw>
<msg timestamp="20201030 11:50:56.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:55.992" endtime="20201030 11:50:56.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.015" endtime="20201030 11:50:56.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.017" endtime="20201030 11:50:56.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.989" endtime="20201030 11:50:56.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.987" endtime="20201030 11:50:56.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.026" endtime="20201030 11:50:56.315"></status>
</kw>
<msg timestamp="20201030 11:50:56.318" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.025" endtime="20201030 11:50:56.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023091097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023189653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.319" endtime="20201030 11:50:56.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.327" endtime="20201030 11:50:56.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.022" endtime="20201030 11:50:56.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.020" endtime="20201030 11:50:56.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.334" level="INFO">${RESULT} = [{'diff': 9.855599999999964e-05}, {'diff': 9.8721999999999e-05}, {'diff': 9.802700000000053e-05}, {'diff': 9.704199999999857e-05}, {'diff': 9.804199999999957e-05}, {'diff': 9.781900000000246e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:56.331" endtime="20201030 11:50:56.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.338" level="INFO">${ACCURACY} = {'diff': [9.855599999999964e-05, 9.8721999999999e-05, 9.802700000000053e-05, 9.704199999999857e-05, 9.804199999999957e-05, 9.781900000000246e-05, 9.841699999999995e-05, 9.791699999999945e-05, 9.836100...</msg>
<status status="PASS" starttime="20201030 11:50:56.335" endtime="20201030 11:50:56.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.342" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.341" endtime="20201030 11:50:56.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.345" level="INFO">VALUE: [9.855599999999964e-05, 9.8721999999999e-05, 9.802700000000053e-05, 9.704199999999857e-05, 9.804199999999957e-05, 9.781900000000246e-05, 9.841699999999995e-05, 9.791699999999945e-05, 9.836100000000167e-05, 9.79999999999974e-05, 9.880500000000042e-05, 9.777799999999975e-05, 9.890300000000088e-05, 9.836100000000167e-05, 9.795799999999869e-05, 9.893000000000055e-05, 9.758300000000178e-05, 9.873600000000204e-05, 9.775000000000061e-05, 9.834699999999863e-05, 9.863799999999812e-05, 9.768099999999877e-05, 9.755599999999864e-05, 9.726399999999968e-05, 9.712499999999999e-05, 9.725000000000011e-05, 9.826400000000068e-05, 9.72219999999975e-05, 9.7721999999998e-05, 9.837499999999777e-05, 9.762500000000049e-05, 9.786200000000064e-05, 9.800000000000086e-05, 9.720799999999793e-05, 9.891600000000098e-05, 9.819399999999937e-05, 9.75279999999995e-05, 9.890300000000088e-05, 9.786100000000117e-05, 9.707000000000118e-05, 9.802700000000053e-05, 9.875000000000161e-05, 9.813900000000056e-05, 9.79020000000004e-05, 9.827800000000025e-05, 9.740299999999938e-05, 9.765299999999963e-05, 9.859699999999888e-05, 9.832000000000243e-05, 9.81669999999997e-05]</msg>
<status status="PASS" starttime="20201030 11:50:56.344" endtime="20201030 11:50:56.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.339" endtime="20201030 11:50:56.346"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.350" endtime="20201030 11:50:56.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.348" endtime="20201030 11:50:56.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.347" endtime="20201030 11:50:56.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.985" endtime="20201030 11:50:56.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:55.985" endtime="20201030 11:50:56.370"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.379" endtime="20201030 11:50:56.399"></status>
</kw>
<msg timestamp="20201030 11:50:56.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.378" endtime="20201030 11:50:56.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.401" endtime="20201030 11:50:56.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.403" endtime="20201030 11:50:56.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.375" endtime="20201030 11:50:56.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.373" endtime="20201030 11:50:56.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.412" endtime="20201030 11:50:56.699"></status>
</kw>
<msg timestamp="20201030 11:50:56.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.410" endtime="20201030 11:50:56.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022780903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022880236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.703" endtime="20201030 11:50:56.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.711" endtime="20201030 11:50:56.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.408" endtime="20201030 11:50:56.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.406" endtime="20201030 11:50:56.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:56.717" level="INFO">${RESULT} = [{'diff': 9.933300000000006e-05}, {'diff': 9.927799999999778e-05}, {'diff': 9.924999999999864e-05}, {'diff': 9.975000000000261e-05}, {'diff': 9.94999999999989e-05}, {'diff': 0.00010102799999999953}, {...</msg>
<status status="PASS" starttime="20201030 11:50:56.714" endtime="20201030 11:50:56.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:56.721" level="INFO">${ACCURACY} = {'diff': [9.933300000000006e-05, 9.927799999999778e-05, 9.924999999999864e-05, 9.975000000000261e-05, 9.94999999999989e-05, 0.00010102799999999953, 9.95410000000016e-05, 0.00010006900000000124, 0.0001...</msg>
<status status="PASS" starttime="20201030 11:50:56.718" endtime="20201030 11:50:56.721"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.726" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:50:56.725" endtime="20201030 11:50:56.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.728" level="INFO">VALUE: [9.933300000000006e-05, 9.927799999999778e-05, 9.924999999999864e-05, 9.975000000000261e-05, 9.94999999999989e-05, 0.00010102799999999953, 9.95410000000016e-05, 0.00010006900000000124, 0.00010004099999999863, 9.958300000000031e-05, 0.00010093099999999855, 0.00010016699999999823, 9.943100000000052e-05, 9.922200000000297e-05, 0.000100415999999999, 9.906999999999971e-05, 9.927699999999831e-05, 9.977800000000175e-05, 0.0001009159999999995, 0.00010042999999999858, 9.976400000000218e-05, 0.00010015300000000213, 9.926400000000168e-05, 9.983300000000056e-05, 9.911099999999895e-05, 9.931900000000049e-05, 9.931900000000049e-05, 0.00010031900000000149, 9.958300000000031e-05, 0.00010006900000000124, 0.00010020800000000094, 0.00010063899999999959, 9.931999999999996e-05, 0.00010080599999999842, 9.909799999999885e-05, 0.00010044399999999815, 0.00010093000000000255, 9.997200000000026e-05, 0.0001000549999999982, 0.00010045800000000119, 9.923599999999907e-05, 0.00010077799999999928, 0.00010041699999999848, 0.00010097300000000073, 0.00010094400000000212, 0.00010016599999999876, 0.00010092999999999908, 0.00010080499999999895, 0.00010002799999999853, 0.00010059700000000088]</msg>
<status status="PASS" starttime="20201030 11:50:56.727" endtime="20201030 11:50:56.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.722" endtime="20201030 11:50:56.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:56.734" endtime="20201030 11:50:56.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.733" endtime="20201030 11:50:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.731" endtime="20201030 11:50:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.371" endtime="20201030 11:50:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.371" endtime="20201030 11:50:56.755"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.763" endtime="20201030 11:50:56.783"></status>
</kw>
<msg timestamp="20201030 11:50:56.783" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.762" endtime="20201030 11:50:56.783"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.786" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.784" endtime="20201030 11:50:56.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.787" endtime="20201030 11:50:56.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.759" endtime="20201030 11:50:56.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.757" endtime="20201030 11:50:56.789"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.796" endtime="20201030 11:50:57.082"></status>
</kw>
<msg timestamp="20201030 11:50:57.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:56.794" endtime="20201030 11:50:57.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021838736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021941097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.086" endtime="20201030 11:50:57.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.094" endtime="20201030 11:50:57.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.792" endtime="20201030 11:50:57.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.790" endtime="20201030 11:50:57.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.100" level="INFO">${RESULT} = [{'diff': 0.00010236099999999873}, {'diff': 0.00010298599999999936}, {'diff': 0.00010240299999999744}, {'diff': 0.0001015000000000009}, {'diff': 0.00010194399999999965}, {'diff': 0.0001017499999999976...</msg>
<status status="PASS" starttime="20201030 11:50:57.097" endtime="20201030 11:50:57.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.105" level="INFO">${ACCURACY} = {'diff': [0.00010236099999999873, 0.00010298599999999936, 0.00010240299999999744, 0.0001015000000000009, 0.00010194399999999965, 0.00010174999999999768, 0.00010159699999999841, 0.00010225000000000165,...</msg>
<status status="PASS" starttime="20201030 11:50:57.101" endtime="20201030 11:50:57.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.110" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.109" endtime="20201030 11:50:57.110"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.112" level="INFO">VALUE: [0.00010236099999999873, 0.00010298599999999936, 0.00010240299999999744, 0.0001015000000000009, 0.00010194399999999965, 0.00010174999999999768, 0.00010159699999999841, 0.00010225000000000165, 0.00010268000000000083, 0.00010161099999999798, 0.0001015000000000009, 0.0001023199999999995, 0.00010177800000000028, 0.00010122199999999804, 0.00010258299999999984, 0.00010197299999999826, 0.00010202800000000053, 0.00010259699999999941, 0.00010126400000000021, 0.00010226400000000122, 0.00010240300000000091, 0.00010245899999999919, 0.00010224999999999818, 0.00010283399999999956, 0.00010220799999999947, 0.00010258299999999984, 0.00010162499999999755, 0.00010224999999999818, 0.00010152800000000003, 0.00010154100000000013, 0.00010109699999999791, 0.00010297199999999979, 0.00010237500000000177, 0.00010273699999999858, 0.00010294400000000065, 0.000102416000000001, 0.00010166600000000026, 0.00010136099999999773, 0.00010234699999999916, 0.00010106999999999824, 0.00010282, 0.00010197199999999879, 0.00010109800000000085, 0.00010119400000000237, 0.000102416000000001, 0.00010286099999999923, 0.00010201400000000097, 0.00010126400000000021, 0.00010301400000000197, 0.00010188899999999737]</msg>
<status status="PASS" starttime="20201030 11:50:57.111" endtime="20201030 11:50:57.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.106" endtime="20201030 11:50:57.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.117" endtime="20201030 11:50:57.136"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.116" endtime="20201030 11:50:57.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.115" endtime="20201030 11:50:57.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.756" endtime="20201030 11:50:57.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.755" endtime="20201030 11:50:57.138"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.146" endtime="20201030 11:50:57.166"></status>
</kw>
<msg timestamp="20201030 11:50:57.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.145" endtime="20201030 11:50:57.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.168" endtime="20201030 11:50:57.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.170" endtime="20201030 11:50:57.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.142" endtime="20201030 11:50:57.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.140" endtime="20201030 11:50:57.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.179" endtime="20201030 11:50:57.465"></status>
</kw>
<msg timestamp="20201030 11:50:57.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.178" endtime="20201030 11:50:57.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021913306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022017181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.469" endtime="20201030 11:50:57.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.477" endtime="20201030 11:50:57.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.175" endtime="20201030 11:50:57.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.173" endtime="20201030 11:50:57.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.484" level="INFO">${RESULT} = [{'diff': 0.0001038749999999998}, {'diff': 0.00010393100000000155}, {'diff': 0.00010388900000000284}, {'diff': 0.00010495799999999875}, {'diff': 0.000103416000000002}, {'diff': 0.00010386100000000023}...</msg>
<status status="PASS" starttime="20201030 11:50:57.480" endtime="20201030 11:50:57.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.488" level="INFO">${ACCURACY} = {'diff': [0.0001038749999999998, 0.00010393100000000155, 0.00010388900000000284, 0.00010495799999999875, 0.000103416000000002, 0.00010386100000000023, 0.00010469500000000187, 0.00010491699999999951, 0...</msg>
<status status="PASS" starttime="20201030 11:50:57.485" endtime="20201030 11:50:57.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.492" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.491" endtime="20201030 11:50:57.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.495" level="INFO">VALUE: [0.0001038749999999998, 0.00010393100000000155, 0.00010388900000000284, 0.00010495799999999875, 0.000103416000000002, 0.00010386100000000023, 0.00010469500000000187, 0.00010491699999999951, 0.00010376399999999925, 0.00010376399999999925, 0.00010476400000000025, 0.00010358400000000031, 0.00010413899999999962, 0.00010324999999999918, 0.00010430499999999898, 0.0001040139999999995, 0.00010413899999999962, 0.00010379199999999839, 0.00010309699999999991, 0.00010463900000000012, 0.00010377799999999882, 0.00010476400000000025, 0.00010408299999999787, 0.00010441599999999954, 0.00010345800000000072, 0.00010376400000000272, 0.00010344499999999715, 0.0001036810000000013, 0.00010447300000000076, 0.00010376400000000272, 0.00010392999999999861, 0.00010475000000000068, 0.00010368000000000183, 0.00010313899999999862, 0.00010419399999999843, 0.00010311100000000295, 0.00010445799999999825, 0.00010376399999999925, 0.00010413899999999962, 0.00010454099999999966, 0.00010448600000000086, 0.00010312499999999905, 0.00010434799999999717, 0.00010433300000000159, 0.00010326399999999875, 0.0001040139999999995, 0.00010413899999999962, 0.00010354099999999866, 0.00010457000000000174, 0.00010316599999999829]</msg>
<status status="PASS" starttime="20201030 11:50:57.493" endtime="20201030 11:50:57.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.488" endtime="20201030 11:50:57.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.499" endtime="20201030 11:50:57.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.498" endtime="20201030 11:50:57.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.497" endtime="20201030 11:50:57.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.139" endtime="20201030 11:50:57.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.138" endtime="20201030 11:50:57.520"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.529" endtime="20201030 11:50:57.550"></status>
</kw>
<msg timestamp="20201030 11:50:57.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.527" endtime="20201030 11:50:57.550"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.553" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.551" endtime="20201030 11:50:57.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.554" endtime="20201030 11:50:57.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.525" endtime="20201030 11:50:57.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.523" endtime="20201030 11:50:57.556"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.563" endtime="20201030 11:50:57.849"></status>
</kw>
<msg timestamp="20201030 11:50:57.852" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.561" endtime="20201030 11:50:57.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.860" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023103306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023208347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.853" endtime="20201030 11:50:57.860"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.861" endtime="20201030 11:50:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.559" endtime="20201030 11:50:57.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.557" endtime="20201030 11:50:57.864"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:57.867" level="INFO">${RESULT} = [{'diff': 0.00010504100000000016}, {'diff': 0.00010577800000000082}, {'diff': 0.00010584699999999919}, {'diff': 0.00010543099999999958}, {'diff': 0.00010541700000000001}, {'diff': 0.000105083999999998...</msg>
<status status="PASS" starttime="20201030 11:50:57.864" endtime="20201030 11:50:57.868"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:57.871" level="INFO">${ACCURACY} = {'diff': [0.00010504100000000016, 0.00010577800000000082, 0.00010584699999999919, 0.00010543099999999958, 0.00010541700000000001, 0.00010508399999999835, 0.00010627699999999837, 0.00010543000000000011...</msg>
<status status="PASS" starttime="20201030 11:50:57.868" endtime="20201030 11:50:57.872"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.876" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:50:57.875" endtime="20201030 11:50:57.876"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.878" level="INFO">VALUE: [0.00010504100000000016, 0.00010577800000000082, 0.00010584699999999919, 0.00010543099999999958, 0.00010541700000000001, 0.00010508399999999835, 0.00010627699999999837, 0.00010543000000000011, 0.00010623599999999914, 0.00010643000000000111, 0.000105514000000001, 0.00010579200000000039, 0.00010631900000000055, 0.00010526400000000075, 0.00010659800000000288, 0.000106514000000002, 0.00010590300000000094, 0.00010519399999999943, 0.00010690299999999847, 0.00010559699999999894, 0.00010575000000000168, 0.00010676399999999878, 0.00010698599999999989, 0.00010506999999999878, 0.00010675000000000268, 0.00010611100000000248, 0.00010597199999999932, 0.00010554099999999719, 0.0001057360000000021, 0.00010612499999999858, 0.00010597299999999879, 0.00010529199999999989, 0.00010575000000000168, 0.00010598699999999836, 0.00010508299999999887, 0.00010512499999999758, 0.00010590200000000147, 0.00010618000000000086, 0.00010698599999999989, 0.00010623599999999914, 0.00010561100000000198, 0.0001062499999999987, 0.00010584700000000266, 0.00010675000000000268, 0.00010691599999999857, 0.00010676399999999878, 0.00010701399999999903, 0.00010595899999999922, 0.000106514000000002, 0.00010699999999999946]</msg>
<status status="PASS" starttime="20201030 11:50:57.877" endtime="20201030 11:50:57.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.872" endtime="20201030 11:50:57.880"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.884" endtime="20201030 11:50:57.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.883" endtime="20201030 11:50:57.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.881" endtime="20201030 11:50:57.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.521" endtime="20201030 11:50:57.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.520" endtime="20201030 11:50:57.905"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.914" endtime="20201030 11:50:57.934"></status>
</kw>
<msg timestamp="20201030 11:50:57.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.912" endtime="20201030 11:50:57.934"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.935" endtime="20201030 11:50:57.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.938" endtime="20201030 11:50:57.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.909" endtime="20201030 11:50:57.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.907" endtime="20201030 11:50:57.940"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.947" endtime="20201030 11:50:58.233"></status>
</kw>
<msg timestamp="20201030 11:50:58.236" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.945" endtime="20201030 11:50:58.236"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.244" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021899569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022008347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.237" endtime="20201030 11:50:58.244"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.245" endtime="20201030 11:50:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.942" endtime="20201030 11:50:58.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.941" endtime="20201030 11:50:58.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.251" level="INFO">${RESULT} = [{'diff': 0.00010877800000000035}, {'diff': 0.00010895799999999928}, {'diff': 0.00010848599999999792}, {'diff': 0.00010708300000000087}, {'diff': 0.00010747200000000082}, {'diff': 0.000107833000000001...</msg>
<status status="PASS" starttime="20201030 11:50:58.248" endtime="20201030 11:50:58.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.256" level="INFO">${ACCURACY} = {'diff': [0.00010877800000000035, 0.00010895799999999928, 0.00010848599999999792, 0.00010708300000000087, 0.00010747200000000082, 0.00010783300000000162, 0.00010879199999999992, 0.00010899999999999799...</msg>
<status status="PASS" starttime="20201030 11:50:58.252" endtime="20201030 11:50:58.256"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.261" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.260" endtime="20201030 11:50:58.261"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.263" level="INFO">VALUE: [0.00010877800000000035, 0.00010895799999999928, 0.00010848599999999792, 0.00010708300000000087, 0.00010747200000000082, 0.00010783300000000162, 0.00010879199999999992, 0.00010899999999999799, 0.0001083890000000004, 0.00010744399999999821, 0.0001082500000000007, 0.00010850000000000096, 0.00010733299999999765, 0.00010730599999999799, 0.00010884700000000219, 0.0001085699999999988, 0.00010761199999999999, 0.0001082500000000007, 0.00010766699999999879, 0.00010855499999999976, 0.00010865300000000022, 0.00010759700000000094, 0.00010791700000000251, 0.00010718000000000186, 0.00010759800000000042, 0.0001072499999999997, 0.00010861199999999752, 0.00010776399999999978, 0.0001082219999999981, 0.0001080279999999996, 0.00010740299999999897, 0.00010777799999999935, 0.00010812499999999711, 0.00010866600000000032, 0.00010845799999999878, 0.00010808400000000135, 0.00010769400000000193, 0.00010744400000000168, 0.00010791699999999904, 0.00010868099999999936, 0.00010831999999999856, 0.00010704200000000164, 0.00010836099999999779, 0.00010795900000000122, 0.00010897200000000232, 0.00010867999999999989, 0.00010847200000000182, 0.0001070690000000013, 0.00010850000000000096, 0.00010904200000000017]</msg>
<status status="PASS" starttime="20201030 11:50:58.262" endtime="20201030 11:50:58.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.257" endtime="20201030 11:50:58.265"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.268" endtime="20201030 11:50:58.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.267" endtime="20201030 11:50:58.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.265" endtime="20201030 11:50:58.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.906" endtime="20201030 11:50:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.905" endtime="20201030 11:50:58.289"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.297" endtime="20201030 11:50:58.318"></status>
</kw>
<msg timestamp="20201030 11:50:58.319" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.296" endtime="20201030 11:50:58.319"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.321" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.320" endtime="20201030 11:50:58.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.322" endtime="20201030 11:50:58.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.293" endtime="20201030 11:50:58.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.291" endtime="20201030 11:50:58.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.331" endtime="20201030 11:50:58.619"></status>
</kw>
<msg timestamp="20201030 11:50:58.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.329" endtime="20201030 11:50:58.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022365403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022475944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.623" endtime="20201030 11:50:58.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.631" endtime="20201030 11:50:58.632"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.327" endtime="20201030 11:50:58.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.325" endtime="20201030 11:50:58.633"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.637" level="INFO">${RESULT} = [{'diff': 0.00011054100000000219}, {'diff': 0.00011051400000000253}, {'diff': 0.00011026400000000228}, {'diff': 0.00010965299999999775}, {'diff': 0.00010938899999999793}, {'diff': 0.000110695000000000...</msg>
<status status="PASS" starttime="20201030 11:50:58.634" endtime="20201030 11:50:58.637"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:58.641" level="INFO">${ACCURACY} = {'diff': [0.00011054100000000219, 0.00011051400000000253, 0.00011026400000000228, 0.00010965299999999775, 0.00010938899999999793, 0.00011069500000000093, 0.00011065299999999875, 0.00010923699999999814...</msg>
<status status="PASS" starttime="20201030 11:50:58.638" endtime="20201030 11:50:58.641"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.646" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:50:58.645" endtime="20201030 11:50:58.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.648" level="INFO">VALUE: [0.00011054100000000219, 0.00011051400000000253, 0.00011026400000000228, 0.00010965299999999775, 0.00010938899999999793, 0.00011069500000000093, 0.00011065299999999875, 0.00010923699999999814, 0.00010983300000000015, 0.00011067999999999842, 0.00011074999999999974, 0.00010909699999999897, 0.0001105419999999982, 0.00011087499999999986, 0.00011044500000000068, 0.00010968100000000036, 0.00011069399999999799, 0.00011026399999999881, 0.00011031900000000108, 0.00011076399999999931, 0.00010959699999999947, 0.00010959699999999947, 0.00011044500000000068, 0.0001100280000000016, 0.00010958399999999938, 0.00010994399999999724, 0.00010911099999999854, 0.00010915300000000072, 0.00011013900000000215, 0.00010911099999999854, 0.00010926399999999781, 0.00011070800000000103, 0.00011030599999999752, 0.00010994400000000071, 0.00010993000000000114, 0.0001099159999999981, 0.00011016700000000129, 0.00010973599999999917, 0.00011102799999999913, 0.00011026400000000228, 0.00010998599999999942, 0.00010916700000000029, 0.00010925000000000171, 0.00010983300000000015, 0.00011013900000000215, 0.00010909699999999897, 0.00010916699999999682, 0.0001090829999999994, 0.00010933399999999913, 0.0001095699999999998]</msg>
<status status="PASS" starttime="20201030 11:50:58.647" endtime="20201030 11:50:58.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.642" endtime="20201030 11:50:58.649"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.653" endtime="20201030 11:50:58.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.652" endtime="20201030 11:50:58.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.650" endtime="20201030 11:50:58.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.290" endtime="20201030 11:50:58.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.289" endtime="20201030 11:50:58.674"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.682" endtime="20201030 11:50:58.704"></status>
</kw>
<msg timestamp="20201030 11:50:58.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.681" endtime="20201030 11:50:58.704"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.707" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.705" endtime="20201030 11:50:58.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.708" endtime="20201030 11:50:58.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.678" endtime="20201030 11:50:58.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.676" endtime="20201030 11:50:58.710"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.717" endtime="20201030 11:50:59.002"></status>
</kw>
<msg timestamp="20201030 11:50:59.005" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.715" endtime="20201030 11:50:59.005"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022801792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.006" endtime="20201030 11:50:59.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.014" endtime="20201030 11:50:59.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.713" endtime="20201030 11:50:59.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.711" endtime="20201030 11:50:59.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.021" level="INFO">${RESULT} = [{'diff': 0.00011206899999999936}, {'diff': 0.0001122220000000021}, {'diff': 0.00011158299999999843}, {'diff': 0.00011281999999999959}, {'diff': 0.00011138899999999993}, {'diff': 0.0001128060000000000...</msg>
<status status="PASS" starttime="20201030 11:50:59.018" endtime="20201030 11:50:59.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.025" level="INFO">${ACCURACY} = {'diff': [0.00011206899999999936, 0.0001122220000000021, 0.00011158299999999843, 0.00011281999999999959, 0.00011138899999999993, 0.00011280600000000002, 0.00011191699999999957, 0.00011143099999999864,...</msg>
<status status="PASS" starttime="20201030 11:50:59.022" endtime="20201030 11:50:59.026"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.030" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.029" endtime="20201030 11:50:59.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.033" level="INFO">VALUE: [0.00011206899999999936, 0.0001122220000000021, 0.00011158299999999843, 0.00011281999999999959, 0.00011138899999999993, 0.00011280600000000002, 0.00011191699999999957, 0.00011143099999999864, 0.00011111100000000054, 0.00011187500000000086, 0.00011298599999999895, 0.00011143100000000211, 0.00011198600000000142, 0.00011197199999999838, 0.00011291700000000057, 0.00011111100000000054, 0.000112596999999999, 0.00011215300000000025, 0.00011115300000000272, 0.00011284699999999925, 0.00011211100000000154, 0.0001125420000000002, 0.00011248599999999845, 0.00011176400000000031, 0.00011130600000000199, 0.00011180499999999954, 0.00011233400000000213, 0.00011175000000000074, 0.00011215300000000025, 0.00011186100000000129, 0.00011298599999999895, 0.0001127229999999986, 0.00011201300000000108, 0.00011216600000000035, 0.00011248600000000192, 0.00011201399999999709, 0.00011201400000000056, 0.00011112500000000011, 0.00011133399999999766, 0.00011229199999999995, 0.00011126300000000033, 0.00011252699999999768, 0.00011263799999999824, 0.00011236200000000127, 0.0001110969999999975, 0.00011205599999999927, 0.00011212499999999764, 0.0001120700000000023, 0.0001127770000000014, 0.0001130969999999995]</msg>
<status status="PASS" starttime="20201030 11:50:59.031" endtime="20201030 11:50:59.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.026" endtime="20201030 11:50:59.035"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.038" endtime="20201030 11:50:59.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.037" endtime="20201030 11:50:59.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.036" endtime="20201030 11:50:59.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.675" endtime="20201030 11:50:59.059"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.674" endtime="20201030 11:50:59.059"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.068" endtime="20201030 11:50:59.088"></status>
</kw>
<msg timestamp="20201030 11:50:59.089" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.066" endtime="20201030 11:50:59.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.090" endtime="20201030 11:50:59.092"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.092" endtime="20201030 11:50:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.064" endtime="20201030 11:50:59.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.062" endtime="20201030 11:50:59.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.101" endtime="20201030 11:50:59.388"></status>
</kw>
<msg timestamp="20201030 11:50:59.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.100" endtime="20201030 11:50:59.391"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021982208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022095597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.392" endtime="20201030 11:50:59.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.400" endtime="20201030 11:50:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.097" endtime="20201030 11:50:59.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.096" endtime="20201030 11:50:59.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.406" level="INFO">${RESULT} = [{'diff': 0.00011338900000000193}, {'diff': 0.00011308299999999993}, {'diff': 0.00011320800000000006}, {'diff': 0.0001137359999999997}, {'diff': 0.00011348599999999945}, {'diff': 0.0001148340000000011...</msg>
<status status="PASS" starttime="20201030 11:50:59.403" endtime="20201030 11:50:59.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.411" level="INFO">${ACCURACY} = {'diff': [0.00011338900000000193, 0.00011308299999999993, 0.00011320800000000006, 0.0001137359999999997, 0.00011348599999999945, 0.00011483400000000116, 0.00011302799999999766, 0.00011361099999999957,...</msg>
<status status="PASS" starttime="20201030 11:50:59.407" endtime="20201030 11:50:59.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.416" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.415" endtime="20201030 11:50:59.416"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.418" level="INFO">VALUE: [0.00011338900000000193, 0.00011308299999999993, 0.00011320800000000006, 0.0001137359999999997, 0.00011348599999999945, 0.00011483400000000116, 0.00011302799999999766, 0.00011361099999999957, 0.00011433299999999771, 0.00011316700000000082, 0.000113903000000002, 0.00011365299999999828, 0.00011374999999999927, 0.00011330600000000052, 0.00011498600000000095, 0.00011445799999999784, 0.00011343000000000117, 0.00011465299999999928, 0.00011324999999999877, 0.00011411100000000007, 0.00011424999999999977, 0.00011361100000000304, 0.00011413900000000268, 0.00011374999999999927, 0.00011397199999999691, 0.00011368100000000089, 0.00011334699999999975, 0.00011383400000000016, 0.00011462500000000014, 0.00011323600000000267, 0.00011490299999999953, 0.00011434700000000075, 0.00011463800000000024, 0.00011333300000000018, 0.00011500000000000052, 0.00011477799999999941, 0.00011362499999999914, 0.00011433300000000118, 0.00011318100000000039, 0.00011348699999999892, 0.00011495900000000128, 0.00011391599999999863, 0.00011388900000000243, 0.00011408300000000093, 0.0001142360000000002, 0.00011451399999999959, 0.00011345800000000031, 0.00011448600000000045, 0.00011497300000000085, 0.00011305499999999732]</msg>
<status status="PASS" starttime="20201030 11:50:59.417" endtime="20201030 11:50:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.412" endtime="20201030 11:50:59.419"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.423" endtime="20201030 11:50:59.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.422" endtime="20201030 11:50:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.420" endtime="20201030 11:50:59.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.060" endtime="20201030 11:50:59.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.059" endtime="20201030 11:50:59.444"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.453" endtime="20201030 11:50:59.473"></status>
</kw>
<msg timestamp="20201030 11:50:59.473" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.451" endtime="20201030 11:50:59.474"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.475" endtime="20201030 11:50:59.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.477" endtime="20201030 11:50:59.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.448" endtime="20201030 11:50:59.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.446" endtime="20201030 11:50:59.480"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.486" endtime="20201030 11:50:59.775"></status>
</kw>
<msg timestamp="20201030 11:50:59.778" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.485" endtime="20201030 11:50:59.778"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.786" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022070708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.779" endtime="20201030 11:50:59.786"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.787" endtime="20201030 11:50:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.482" endtime="20201030 11:50:59.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.480" endtime="20201030 11:50:59.789"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.793" level="INFO">${RESULT} = [{'diff': 0.00011522200000000163}, {'diff': 0.00011562500000000114}, {'diff': 0.00011597200000000238}, {'diff': 0.00011699999999999905}, {'diff': 0.00011594500000000271}, {'diff': 0.000116944000000000...</msg>
<status status="PASS" starttime="20201030 11:50:59.790" endtime="20201030 11:50:59.793"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:50:59.797" level="INFO">${ACCURACY} = {'diff': [0.00011522200000000163, 0.00011562500000000114, 0.00011597200000000238, 0.00011699999999999905, 0.00011594500000000271, 0.00011694400000000077, 0.00011659699999999953, 0.0001161109999999986,...</msg>
<status status="PASS" starttime="20201030 11:50:59.794" endtime="20201030 11:50:59.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.802" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:50:59.801" endtime="20201030 11:50:59.802"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.804" level="INFO">VALUE: [0.00011522200000000163, 0.00011562500000000114, 0.00011597200000000238, 0.00011699999999999905, 0.00011594500000000271, 0.00011694400000000077, 0.00011659699999999953, 0.0001161109999999986, 0.00011667999999999748, 0.00011549999999999755, 0.00011538900000000046, 0.0001154169999999996, 0.00011679200000000098, 0.00011675000000000227, 0.00011694400000000077, 0.00011547199999999841, 0.0001153750000000009, 0.00011692999999999773, 0.00011508299999999846, 0.00011633299999999971, 0.00011558299999999896, 0.00011644499999999974, 0.00011526400000000034, 0.00011525000000000077, 0.00011626399999999787, 0.00011654200000000073, 0.00011565300000000028, 0.00011668100000000042, 0.00011636100000000232, 0.00011534800000000123, 0.00011580599999999955, 0.00011668000000000095, 0.00011665199999999834, 0.0001155689999999994, 0.00011597199999999891, 0.00011605500000000032, 0.00011522299999999763, 0.0001162360000000022, 0.00011648599999999898, 0.00011609699999999903, 0.00011698599999999948, 0.00011601400000000109, 0.00011508299999999846, 0.00011652800000000116, 0.00011549999999999755, 0.00011538900000000046, 0.0001162499999999983, 0.00011543100000000264, 0.00011595899999999881, 0.00011652800000000116]</msg>
<status status="PASS" starttime="20201030 11:50:59.803" endtime="20201030 11:50:59.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.798" endtime="20201030 11:50:59.805"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.809" endtime="20201030 11:50:59.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.807" endtime="20201030 11:50:59.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.806" endtime="20201030 11:50:59.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.445" endtime="20201030 11:50:59.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.444" endtime="20201030 11:50:59.830"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.838" endtime="20201030 11:50:59.859"></status>
</kw>
<msg timestamp="20201030 11:50:59.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.837" endtime="20201030 11:50:59.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.862" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.861" endtime="20201030 11:50:59.862"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.863" endtime="20201030 11:50:59.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.834" endtime="20201030 11:50:59.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.832" endtime="20201030 11:50:59.866"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.872" endtime="20201030 11:51:00.158"></status>
</kw>
<msg timestamp="20201030 11:51:00.161" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.871" endtime="20201030 11:51:00.161"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022835292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.162" endtime="20201030 11:51:00.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.170" endtime="20201030 11:51:00.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.868" endtime="20201030 11:51:00.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.866" endtime="20201030 11:51:00.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.176" level="INFO">${RESULT} = [{'diff': 0.0001175560000000013}, {'diff': 0.00011886099999999789}, {'diff': 0.00011847199999999794}, {'diff': 0.00011783300000000121}, {'diff': 0.0001189309999999992}, {'diff': 0.00011843100000000217...</msg>
<status status="PASS" starttime="20201030 11:51:00.173" endtime="20201030 11:51:00.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.180" level="INFO">${ACCURACY} = {'diff': [0.0001175560000000013, 0.00011886099999999789, 0.00011847199999999794, 0.00011783300000000121, 0.0001189309999999992, 0.00011843100000000217, 0.00011848600000000098, 0.00011879199999999951, ...</msg>
<status status="PASS" starttime="20201030 11:51:00.177" endtime="20201030 11:51:00.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.185" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.184" endtime="20201030 11:51:00.185"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.187" level="INFO">VALUE: [0.0001175560000000013, 0.00011886099999999789, 0.00011847199999999794, 0.00011783300000000121, 0.0001189309999999992, 0.00011843100000000217, 0.00011848600000000098, 0.00011879199999999951, 0.00011795799999999787, 0.00011709700000000003, 0.00011856899999999893, 0.00011901400000000062, 0.00011769499999999752, 0.00011844499999999827, 0.00011883400000000169, 0.00011858399999999797, 0.00011869400000000252, 0.0001182500000000003, 0.00011790199999999959, 0.00011859700000000153, 0.000118389, 0.00011812500000000017, 0.00011769499999999752, 0.00011743100000000117, 0.00011901400000000062, 0.00011751399999999912, 0.00011709700000000003, 0.00011726399999999887, 0.00011865299999999981, 0.00011812500000000017, 0.00011740300000000203, 0.00011849999999999708, 0.00011763899999999924, 0.00011820800000000159, 0.00011865200000000034, 0.00011745799999999737, 0.00011899999999999758, 0.00011883299999999875, 0.00011773600000000023, 0.00011843100000000217, 0.00011901400000000062, 0.00011763899999999924, 0.00011791599999999916, 0.0001171109999999996, 0.00011863900000000024, 0.00011862500000000067, 0.00011718099999999745, 0.00011741699999999813, 0.00011816699999999888, 0.00011895800000000234]</msg>
<status status="PASS" starttime="20201030 11:51:00.186" endtime="20201030 11:51:00.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.181" endtime="20201030 11:51:00.189"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.193" endtime="20201030 11:51:00.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.192" endtime="20201030 11:51:00.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.190" endtime="20201030 11:51:00.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.831" endtime="20201030 11:51:00.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.830" endtime="20201030 11:51:00.214"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.222" endtime="20201030 11:51:00.242"></status>
</kw>
<msg timestamp="20201030 11:51:00.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.221" endtime="20201030 11:51:00.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.244" endtime="20201030 11:51:00.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.246" endtime="20201030 11:51:00.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.218" endtime="20201030 11:51:00.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.216" endtime="20201030 11:51:00.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.255" endtime="20201030 11:51:00.542"></status>
</kw>
<msg timestamp="20201030 11:51:00.545" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.254" endtime="20201030 11:51:00.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021870056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021989639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.546" endtime="20201030 11:51:00.553"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.554" endtime="20201030 11:51:00.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.251" endtime="20201030 11:51:00.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.250" endtime="20201030 11:51:00.557"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.560" level="INFO">${RESULT} = [{'diff': 0.0001195829999999995}, {'diff': 0.00012043099999999723}, {'diff': 0.00011915300000000031}, {'diff': 0.0001208050000000016}, {'diff': 0.00011966700000000038}, {'diff': 0.00012045800000000037...</msg>
<status status="PASS" starttime="20201030 11:51:00.557" endtime="20201030 11:51:00.561"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.565" level="INFO">${ACCURACY} = {'diff': [0.0001195829999999995, 0.00012043099999999723, 0.00011915300000000031, 0.0001208050000000016, 0.00011966700000000038, 0.00012045800000000037, 0.00012091600000000216, 0.00012001400000000162, ...</msg>
<status status="PASS" starttime="20201030 11:51:00.561" endtime="20201030 11:51:00.566"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.570" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.569" endtime="20201030 11:51:00.570"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.572" level="INFO">VALUE: [0.0001195829999999995, 0.00012043099999999723, 0.00011915300000000031, 0.0001208050000000016, 0.00011966700000000038, 0.00012045800000000037, 0.00012091600000000216, 0.00012001400000000162, 0.00011905499999999986, 0.00012094500000000077, 0.00011918099999999945, 0.00012018099999999698, 0.00012001300000000215, 0.00011924999999999783, 0.00012016600000000141, 0.0001206249999999992, 0.00012016700000000088, 0.0001197500000000018, 0.00012083400000000022, 0.00011919499999999902, 0.00011961099999999864, 0.00012080499999999814, 0.00012029199999999754, 0.0001209029999999986, 0.00012065300000000181, 0.00011936100000000185, 0.00011908400000000194, 0.0001191110000000016, 0.0001203050000000011, 0.0001192769999999975, 0.00012048599999999951, 0.00011937499999999795, 0.00012061099999999964, 0.00012084700000000032, 0.00011949999999999808, 0.0001202639999999984, 0.00012001399999999815, 0.00012065299999999834, 0.00012016700000000088, 0.00012009699999999957, 0.0001207639999999989, 0.00011963900000000124, 0.00012051399999999865, 0.00011980600000000008, 0.00011961099999999864, 0.00011983299999999975, 0.00012023599999999926, 0.00011956899999999993, 0.00011963900000000124, 0.00011963899999999777]</msg>
<status status="PASS" starttime="20201030 11:51:00.571" endtime="20201030 11:51:00.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.566" endtime="20201030 11:51:00.574"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.577" endtime="20201030 11:51:00.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.576" endtime="20201030 11:51:00.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.575" endtime="20201030 11:51:00.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.215" endtime="20201030 11:51:00.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.214" endtime="20201030 11:51:00.598"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.606" endtime="20201030 11:51:00.627"></status>
</kw>
<msg timestamp="20201030 11:51:00.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.605" endtime="20201030 11:51:00.628"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.630" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.629" endtime="20201030 11:51:00.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.631" endtime="20201030 11:51:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.602" endtime="20201030 11:51:00.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.600" endtime="20201030 11:51:00.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.640" endtime="20201030 11:51:00.927"></status>
</kw>
<msg timestamp="20201030 11:51:00.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.639" endtime="20201030 11:51:00.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021807083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021928444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.931" endtime="20201030 11:51:00.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.939" endtime="20201030 11:51:00.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.636" endtime="20201030 11:51:00.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.634" endtime="20201030 11:51:00.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.945" level="INFO">${RESULT} = [{'diff': 0.00012136099999999692}, {'diff': 0.00012211100000000114}, {'diff': 0.000121389000000003}, {'diff': 0.00012181900000000218}, {'diff': 0.00012213900000000028}, {'diff': 0.00012284699999999885...</msg>
<status status="PASS" starttime="20201030 11:51:00.942" endtime="20201030 11:51:00.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:00.949" level="INFO">${ACCURACY} = {'diff': [0.00012136099999999692, 0.00012211100000000114, 0.000121389000000003, 0.00012181900000000218, 0.00012213900000000028, 0.00012284699999999885, 0.00012208400000000147, 0.00012183400000000122, ...</msg>
<status status="PASS" starttime="20201030 11:51:00.946" endtime="20201030 11:51:00.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.954" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:00.953" endtime="20201030 11:51:00.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.956" level="INFO">VALUE: [0.00012136099999999692, 0.00012211100000000114, 0.000121389000000003, 0.00012181900000000218, 0.00012213900000000028, 0.00012284699999999885, 0.00012208400000000147, 0.00012183400000000122, 0.00012208299999999853, 0.00012151399999999965, 0.00012204199999999929, 0.00012293099999999973, 0.00012159800000000054, 0.0001215839999999975, 0.00012225000000000083, 0.00012204099999999982, 0.0001222640000000004, 0.00012184699999999785, 0.00012227799999999997, 0.0001216250000000002, 0.00012208299999999853, 0.00012266700000000338, 0.00012301400000000115, 0.00012123599999999679, 0.00012205499999999939, 0.00012301400000000115, 0.00012161099999999717, 0.00012127799999999897, 0.00012163899999999978, 0.00012223600000000126, 0.00012204099999999982, 0.00012138899999999953, 0.00012179099999999957, 0.00012147199999999747, 0.00012197200000000144, 0.0001212639999999994, 0.00012243099999999923, 0.0001224310000000027, 0.00012223600000000126, 0.00012155499999999889, 0.00012251300000000118, 0.00012134700000000082, 0.00012161100000000064, 0.00012233299999999878, 0.000122083000000002, 0.00012218099999999898, 0.00012192999999999926, 0.00012115199999999937, 0.0001224160000000002, 0.00012277800000000047]</msg>
<status status="PASS" starttime="20201030 11:51:00.955" endtime="20201030 11:51:00.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.950" endtime="20201030 11:51:00.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.961" endtime="20201030 11:51:00.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.960" endtime="20201030 11:51:00.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.959" endtime="20201030 11:51:00.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.599" endtime="20201030 11:51:00.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.598" endtime="20201030 11:51:00.982"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.991" endtime="20201030 11:51:01.013"></status>
</kw>
<msg timestamp="20201030 11:51:01.014" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.989" endtime="20201030 11:51:01.014"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.015" endtime="20201030 11:51:01.016"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.017" endtime="20201030 11:51:01.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.987" endtime="20201030 11:51:01.019"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.984" endtime="20201030 11:51:01.020"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.026" endtime="20201030 11:51:01.313"></status>
</kw>
<msg timestamp="20201030 11:51:01.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.025" endtime="20201030 11:51:01.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022902333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023026056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.317" endtime="20201030 11:51:01.324"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.325" endtime="20201030 11:51:01.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.022" endtime="20201030 11:51:01.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.020" endtime="20201030 11:51:01.328"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.331" level="INFO">${RESULT} = [{'diff': 0.0001237229999999992}, {'diff': 0.00012444399999999786}, {'diff': 0.0001235420000000008}, {'diff': 0.00012429200000000154}, {'diff': 0.0001235969999999996}, {'diff': 0.00012411099999999967}...</msg>
<status status="PASS" starttime="20201030 11:51:01.328" endtime="20201030 11:51:01.332"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.336" level="INFO">${ACCURACY} = {'diff': [0.0001237229999999992, 0.00012444399999999786, 0.0001235420000000008, 0.00012429200000000154, 0.0001235969999999996, 0.00012411099999999967, 0.00012312499999999824, 0.00012426399999999893, 0...</msg>
<status status="PASS" starttime="20201030 11:51:01.332" endtime="20201030 11:51:01.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.340" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.339" endtime="20201030 11:51:01.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.342" level="INFO">VALUE: [0.0001237229999999992, 0.00012444399999999786, 0.0001235420000000008, 0.00012429200000000154, 0.0001235969999999996, 0.00012411099999999967, 0.00012312499999999824, 0.00012426399999999893, 0.00012334700000000282, 0.00012491599999999922, 0.00012448600000000004, 0.00012462499999999974, 0.00012430599999999764, 0.00012395899999999987, 0.00012493099999999827, 0.000123777000000002, 0.00012422200000000022, 0.00012313900000000128, 0.00012377800000000147, 0.00012338899999999806, 0.00012501399999999968, 0.00012501399999999968, 0.00012501399999999968, 0.00012397299999999944, 0.00012377699999999853, 0.0001244160000000022, 0.00012369400000000058, 0.00012424999999999936, 0.0001244450000000008, 0.00012425000000000283, 0.00012359800000000254, 0.00012456900000000146, 0.0001249580000000014, 0.00012491700000000217, 0.0001230969999999991, 0.00012316700000000042, 0.00012326399999999793, 0.00012383399999999975, 0.00012337500000000196, 0.0001240970000000001, 0.00012474999999999986, 0.00012331999999999968, 0.00012454199999999832, 0.0001240970000000001, 0.00012309799999999857, 0.00012413900000000228, 0.0001250000000000001, 0.0001241389999999988, 0.00012412499999999924, 0.00012481899999999824]</msg>
<status status="PASS" starttime="20201030 11:51:01.341" endtime="20201030 11:51:01.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.336" endtime="20201030 11:51:01.345"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.348" endtime="20201030 11:51:01.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.347" endtime="20201030 11:51:01.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.346" endtime="20201030 11:51:01.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.983" endtime="20201030 11:51:01.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.982" endtime="20201030 11:51:01.369"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.377" endtime="20201030 11:51:01.398"></status>
</kw>
<msg timestamp="20201030 11:51:01.399" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.376" endtime="20201030 11:51:01.399"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.401" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.400" endtime="20201030 11:51:01.402"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.403" endtime="20201030 11:51:01.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.373" endtime="20201030 11:51:01.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.371" endtime="20201030 11:51:01.405"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.412" endtime="20201030 11:51:01.699"></status>
</kw>
<msg timestamp="20201030 11:51:01.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.410" endtime="20201030 11:51:01.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022026819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022153403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.703" endtime="20201030 11:51:01.710"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.711" endtime="20201030 11:51:01.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.407" endtime="20201030 11:51:01.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.406" endtime="20201030 11:51:01.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.717" level="INFO">${RESULT} = [{'diff': 0.00012658399999999903}, {'diff': 0.0001250970000000011}, {'diff': 0.0001259169999999997}, {'diff': 0.0001258190000000027}, {'diff': 0.00012543099999999877}, {'diff': 0.00012684699999999938}...</msg>
<status status="PASS" starttime="20201030 11:51:01.714" endtime="20201030 11:51:01.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:01.722" level="INFO">${ACCURACY} = {'diff': [0.00012658399999999903, 0.0001250970000000011, 0.0001259169999999997, 0.0001258190000000027, 0.00012543099999999877, 0.00012684699999999938, 0.00012644399999999986, 0.00012561100000000117, 0...</msg>
<status status="PASS" starttime="20201030 11:51:01.718" endtime="20201030 11:51:01.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.727" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:01.726" endtime="20201030 11:51:01.727"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.729" level="INFO">VALUE: [0.00012658399999999903, 0.0001250970000000011, 0.0001259169999999997, 0.0001258190000000027, 0.00012543099999999877, 0.00012684699999999938, 0.00012644399999999986, 0.00012561100000000117, 0.00012512500000000024, 0.0001254450000000018, 0.00012680600000000014, 0.00012612500000000124, 0.00012584699999999838, 0.00012611100000000167, 0.00012538900000000006, 0.0001250689999999985, 0.00012690200000000165, 0.0001257499999999974, 0.00012618099999999952, 0.0001260000000000011, 0.00012616600000000047, 0.00012634699999999888, 0.00012618000000000004, 0.00012554199999999932, 0.00012513800000000033, 0.00012640300000000063, 0.0001265559999999999, 0.00012545900000000137, 0.0001257629999999975, 0.00012530599999999864, 0.0001258329999999988, 0.00012544499999999834, 0.00012512500000000024, 0.00012568099999999902, 0.0001252360000000008, 0.00012604100000000035, 0.00012526399999999993, 0.0001256390000000003, 0.00012693100000000027, 0.00012594499999999884, 0.00012676399999999796, 0.00012587500000000099, 0.00012631899999999974, 0.0001251800000000025, 0.00012706999999999996, 0.0001266390000000013, 0.00012640300000000063, 0.00012670799999999968, 0.00012606999999999896, 0.0001257360000000013]</msg>
<status status="PASS" starttime="20201030 11:51:01.728" endtime="20201030 11:51:01.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.723" endtime="20201030 11:51:01.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.734" endtime="20201030 11:51:01.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.732" endtime="20201030 11:51:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.731" endtime="20201030 11:51:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.370" endtime="20201030 11:51:01.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.369" endtime="20201030 11:51:01.755"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.763" endtime="20201030 11:51:01.784"></status>
</kw>
<msg timestamp="20201030 11:51:01.785" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.761" endtime="20201030 11:51:01.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.786" endtime="20201030 11:51:01.788"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.788" endtime="20201030 11:51:01.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.759" endtime="20201030 11:51:01.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.757" endtime="20201030 11:51:01.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.797" endtime="20201030 11:51:02.099"></status>
</kw>
<msg timestamp="20201030 11:51:02.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.796" endtime="20201030 11:51:02.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.110" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021933736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022062264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.104" endtime="20201030 11:51:02.111"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.112" endtime="20201030 11:51:02.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.793" endtime="20201030 11:51:02.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.791" endtime="20201030 11:51:02.114"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.118" level="INFO">${RESULT} = [{'diff': 0.00012852800000000275}, {'diff': 0.00012827799999999903}, {'diff': 0.00012862500000000027}, {'diff': 0.0001278620000000029}, {'diff': 0.0001274300000000013}, {'diff': 0.00012845799999999796...</msg>
<status status="PASS" starttime="20201030 11:51:02.115" endtime="20201030 11:51:02.118"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.122" level="INFO">${ACCURACY} = {'diff': [0.00012852800000000275, 0.00012827799999999903, 0.00012862500000000027, 0.0001278620000000029, 0.0001274300000000013, 0.00012845799999999796, 0.00012717999999999757, 0.0001280139999999992, 0...</msg>
<status status="PASS" starttime="20201030 11:51:02.119" endtime="20201030 11:51:02.122"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.127" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.126" endtime="20201030 11:51:02.127"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.129" level="INFO">VALUE: [0.00012852800000000275, 0.00012827799999999903, 0.00012862500000000027, 0.0001278620000000029, 0.0001274300000000013, 0.00012845799999999796, 0.00012717999999999757, 0.0001280139999999992, 0.0001284590000000009, 0.0001272499999999989, 0.0001283330000000013, 0.00012845800000000143, 0.00012822200000000075, 0.0001282499999999999, 0.0001286110000000007, 0.00012802799999999878, 0.00012805499999999845, 0.0001289439999999989, 0.0001287919999999991, 0.000128472000000001, 0.000127165999999998, 0.0001273330000000003, 0.000128472000000001, 0.0001283200000000012, 0.00012799999999999964, 0.00012845800000000143, 0.00012712500000000224, 0.0001287919999999991, 0.0001279720000000005, 0.00012827799999999903, 0.00012709699999999963, 0.0001289720000000015, 0.00012834799999999688, 0.00012876399999999996, 0.00012820800000000118, 0.0001289859999999976, 0.00012762500000000274, 0.00012880599999999867, 0.0001286529999999994, 0.0001289309999999988, 0.0001273200000000002, 0.0001273200000000002, 0.00012836100000000045, 0.00012812499999999977, 0.00012876399999999996, 0.00012895899999999794, 0.00012881999999999824, 0.00012855499999999895, 0.00012786099999999995, 0.0001274300000000013]</msg>
<status status="PASS" starttime="20201030 11:51:02.128" endtime="20201030 11:51:02.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.123" endtime="20201030 11:51:02.130"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.134" endtime="20201030 11:51:02.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.132" endtime="20201030 11:51:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.131" endtime="20201030 11:51:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.755" endtime="20201030 11:51:02.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.755" endtime="20201030 11:51:02.155"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.163" endtime="20201030 11:51:02.185"></status>
</kw>
<msg timestamp="20201030 11:51:02.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.161" endtime="20201030 11:51:02.186"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.188" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.187" endtime="20201030 11:51:02.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.189" endtime="20201030 11:51:02.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.159" endtime="20201030 11:51:02.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.157" endtime="20201030 11:51:02.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.198" endtime="20201030 11:51:02.483"></status>
</kw>
<msg timestamp="20201030 11:51:02.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.196" endtime="20201030 11:51:02.486"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022821306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022951542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.487" endtime="20201030 11:51:02.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.495" endtime="20201030 11:51:02.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.194" endtime="20201030 11:51:02.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.192" endtime="20201030 11:51:02.497"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.501" level="INFO">${RESULT} = [{'diff': 0.00013023599999999885}, {'diff': 0.00012913900000000034}, {'diff': 0.00012995799999999946}, {'diff': 0.00013097200000000003}, {'diff': 0.00013066700000000098}, {'diff': 0.000129486000000001...</msg>
<status status="PASS" starttime="20201030 11:51:02.498" endtime="20201030 11:51:02.502"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.505" level="INFO">${ACCURACY} = {'diff': [0.00013023599999999885, 0.00012913900000000034, 0.00012995799999999946, 0.00013097200000000003, 0.00013066700000000098, 0.00012948600000000157, 0.00012991700000000023, 0.0001302500000000019,...</msg>
<status status="PASS" starttime="20201030 11:51:02.502" endtime="20201030 11:51:02.506"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.510" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.509" endtime="20201030 11:51:02.510"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.512" level="INFO">VALUE: [0.00013023599999999885, 0.00012913900000000034, 0.00012995799999999946, 0.00013097200000000003, 0.00013066700000000098, 0.00012948600000000157, 0.00012991700000000023, 0.0001302500000000019, 0.0001298200000000027, 0.00013002800000000078, 0.00013012500000000177, 0.0001295140000000007, 0.00012966699999999998, 0.00012913900000000034, 0.00012995899999999894, 0.00013082000000000024, 0.00012948699999999758, 0.00013006900000000002, 0.0001303050000000007, 0.00012913900000000034, 0.00013019499999999962, 0.0001299309999999998, 0.0001299309999999998, 0.00013092999999999785, 0.00013009699999999916, 0.00013061099999999923, 0.0001303890000000016, 0.00013037499999999855, 0.00013009699999999916, 0.00013047199999999953, 0.00012929100000000013, 0.0001306669999999975, 0.00013054200000000085, 0.0001300829999999996, 0.00013061099999999923, 0.00013023599999999885, 0.0001295140000000007, 0.00013084799999999938, 0.0001291529999999999, 0.00013000000000000164, 0.00012991600000000075, 0.0001302079999999997, 0.00012976400000000096, 0.00013072199999999978, 0.00012909699999999816, 0.0001295140000000007, 0.00013000000000000164, 0.0001294439999999994, 0.00012962500000000127, 0.00013041600000000125]</msg>
<status status="PASS" starttime="20201030 11:51:02.511" endtime="20201030 11:51:02.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.506" endtime="20201030 11:51:02.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.518" endtime="20201030 11:51:02.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.516" endtime="20201030 11:51:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.515" endtime="20201030 11:51:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.155" endtime="20201030 11:51:02.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.155" endtime="20201030 11:51:02.539"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.547" endtime="20201030 11:51:02.569"></status>
</kw>
<msg timestamp="20201030 11:51:02.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.546" endtime="20201030 11:51:02.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.571" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.570" endtime="20201030 11:51:02.572"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.573" endtime="20201030 11:51:02.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.543" endtime="20201030 11:51:02.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.541" endtime="20201030 11:51:02.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.581" endtime="20201030 11:51:02.867"></status>
</kw>
<msg timestamp="20201030 11:51:02.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.580" endtime="20201030 11:51:02.870"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.878" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021785347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021916903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.871" endtime="20201030 11:51:02.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.879" endtime="20201030 11:51:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.577" endtime="20201030 11:51:02.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.576" endtime="20201030 11:51:02.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.885" level="INFO">${RESULT} = [{'diff': 0.00013155600000000142}, {'diff': 0.00013283399999999834}, {'diff': 0.00013273600000000135}, {'diff': 0.00013155499999999848}, {'diff': 0.00013140199999999921}, {'diff': 0.000132680999999999...</msg>
<status status="PASS" starttime="20201030 11:51:02.882" endtime="20201030 11:51:02.886"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:02.890" level="INFO">${ACCURACY} = {'diff': [0.00013155600000000142, 0.00013283399999999834, 0.00013273600000000135, 0.00013155499999999848, 0.00013140199999999921, 0.00013268099999999908, 0.00013237500000000055, 0.00013213899999999987...</msg>
<status status="PASS" starttime="20201030 11:51:02.886" endtime="20201030 11:51:02.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.895" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:02.894" endtime="20201030 11:51:02.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.897" level="INFO">VALUE: [0.00013155600000000142, 0.00013283399999999834, 0.00013273600000000135, 0.00013155499999999848, 0.00013140199999999921, 0.00013268099999999908, 0.00013237500000000055, 0.00013213899999999987, 0.00013263900000000037, 0.00013223700000000033, 0.000131263999999999, 0.00013234699999999794, 0.0001315279999999988, 0.00013294399999999942, 0.00013261099999999776, 0.0001320279999999993, 0.0001320279999999993, 0.00013283300000000234, 0.0001321250000000003, 0.00013188899999999962, 0.00013129100000000213, 0.0001317639999999995, 0.0001321250000000003, 0.00013255599999999895, 0.0001318470000000009, 0.00013231900000000227, 0.0001325279999999998, 0.00013191599999999928, 0.0001315830000000011, 0.00013113900000000234, 0.00013130600000000117, 0.00013243099999999883, 0.0001329310000000028, 0.0001325969999999982, 0.00013216599999999953, 0.00013244399999999892, 0.00013288900000000062, 0.00013172200000000078, 0.00013227799999999956, 0.00013126400000000246, 0.00013211099999999726, 0.00013190199999999971, 0.00013274999999999745, 0.00013229199999999913, 0.00013261100000000123, 0.00013161100000000023, 0.0001329310000000028, 0.00013291600000000028, 0.0001320969999999977, 0.00013291600000000028]</msg>
<status status="PASS" starttime="20201030 11:51:02.896" endtime="20201030 11:51:02.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.891" endtime="20201030 11:51:02.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.902" endtime="20201030 11:51:02.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.900" endtime="20201030 11:51:02.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.899" endtime="20201030 11:51:02.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.539" endtime="20201030 11:51:02.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.539" endtime="20201030 11:51:02.923"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.931" endtime="20201030 11:51:02.953"></status>
</kw>
<msg timestamp="20201030 11:51:02.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.930" endtime="20201030 11:51:02.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.956" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.954" endtime="20201030 11:51:02.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.957" endtime="20201030 11:51:02.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.927" endtime="20201030 11:51:02.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.925" endtime="20201030 11:51:02.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.966" endtime="20201030 11:51:03.255"></status>
</kw>
<msg timestamp="20201030 11:51:03.258" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:02.964" endtime="20201030 11:51:03.258"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.266" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022062681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02219725, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:03.259" endtime="20201030 11:51:03.266"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.267" endtime="20201030 11:51:03.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.961" endtime="20201030 11:51:03.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.960" endtime="20201030 11:51:03.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.273" level="INFO">${RESULT} = [{'diff': 0.00013456900000000105}, {'diff': 0.00013373599999999888}, {'diff': 0.00013401399999999827}, {'diff': 0.0001340839999999996}, {'diff': 0.00013359800000000213}, {'diff': 0.0001332219999999988...</msg>
<status status="PASS" starttime="20201030 11:51:03.270" endtime="20201030 11:51:03.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.277" level="INFO">${ACCURACY} = {'diff': [0.00013456900000000105, 0.00013373599999999888, 0.00013401399999999827, 0.0001340839999999996, 0.00013359800000000213, 0.00013322199999999881, 0.00013350000000000167, 0.00013462499999999933,...</msg>
<status status="PASS" starttime="20201030 11:51:03.274" endtime="20201030 11:51:03.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.281" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.280" endtime="20201030 11:51:03.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.284" level="INFO">VALUE: [0.00013456900000000105, 0.00013373599999999888, 0.00013401399999999827, 0.0001340839999999996, 0.00013359800000000213, 0.00013322199999999881, 0.00013350000000000167, 0.00013462499999999933, 0.00013441700000000126, 0.0001347779999999986, 0.0001331250000000013, 0.00013422300000000276, 0.00013391600000000128, 0.000133958, 0.00013429200000000113, 0.00013356999999999952, 0.0001339999999999987, 0.00013319499999999915, 0.00013365299999999747, 0.00013363900000000137, 0.00013454200000000138, 0.00013318099999999958, 0.000134167000000001, 0.00013490299999999872, 0.00013386199999999848, 0.00013309800000000163, 0.0001342770000000021, 0.00013356900000000005, 0.000133167, 0.00013431899999999733, 0.0001338060000000002, 0.00013445899999999997, 0.00013444400000000092, 0.00013340199999999774, 0.00013461099999999976, 0.00013462499999999933, 0.00013373599999999888, 0.00013402799999999784, 0.00013438899999999865, 0.00013373600000000235, 0.0001344860000000031, 0.00013451399999999877, 0.000134958000000001, 0.00013466600000000203, 0.00013394399999999695, 0.00013393100000000033, 0.00013354200000000038, 0.00013416600000000153, 0.000134651999999999, 0.00013387499999999858]</msg>
<status status="PASS" starttime="20201030 11:51:03.283" endtime="20201030 11:51:03.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.278" endtime="20201030 11:51:03.285"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.289" endtime="20201030 11:51:03.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.287" endtime="20201030 11:51:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.286" endtime="20201030 11:51:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.924" endtime="20201030 11:51:03.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.923" endtime="20201030 11:51:03.309"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.318" endtime="20201030 11:51:03.341"></status>
</kw>
<msg timestamp="20201030 11:51:03.342" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.316" endtime="20201030 11:51:03.342"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.344" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.343" endtime="20201030 11:51:03.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.345" endtime="20201030 11:51:03.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.314" endtime="20201030 11:51:03.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.312" endtime="20201030 11:51:03.348"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.355" endtime="20201030 11:51:03.641"></status>
</kw>
<msg timestamp="20201030 11:51:03.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.353" endtime="20201030 11:51:03.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022552917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022688792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.646" endtime="20201030 11:51:03.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.654" endtime="20201030 11:51:03.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.350" endtime="20201030 11:51:03.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.349" endtime="20201030 11:51:03.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.660" level="INFO">${RESULT} = [{'diff': 0.00013587500000000058}, {'diff': 0.00013658399999999862}, {'diff': 0.0001352779999999991}, {'diff': 0.00013562500000000033}, {'diff': 0.00013575000000000045}, {'diff': 0.0001360830000000021...</msg>
<status status="PASS" starttime="20201030 11:51:03.657" endtime="20201030 11:51:03.660"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:03.664" level="INFO">${ACCURACY} = {'diff': [0.00013587500000000058, 0.00013658399999999862, 0.0001352779999999991, 0.00013562500000000033, 0.00013575000000000045, 0.00013608300000000212, 0.00013583300000000187, 0.0001361109999999978, ...</msg>
<status status="PASS" starttime="20201030 11:51:03.661" endtime="20201030 11:51:03.664"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.668" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:03.667" endtime="20201030 11:51:03.669"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.671" level="INFO">VALUE: [0.00013587500000000058, 0.00013658399999999862, 0.0001352779999999991, 0.00013562500000000033, 0.00013575000000000045, 0.00013608300000000212, 0.00013583300000000187, 0.0001361109999999978, 0.00013573600000000088, 0.00013511100000000026, 0.00013643099999999936, 0.00013609699999999822, 0.00013659699999999872, 0.0001355419999999989, 0.000136861000000002, 0.00013626399999999705, 0.00013531899999999833, 0.00013593099999999886, 0.00013534700000000094, 0.00013577700000000012, 0.00013623600000000138, 0.00013524999999999995, 0.00013626400000000052, 0.0001364589999999985, 0.0001362230000000013, 0.0001363329999999989, 0.00013630499999999976, 0.00013623600000000138, 0.00013566699999999904, 0.00013676399999999755, 0.00013674999999999798, 0.00013625000000000095, 0.0001370139999999978, 0.00013626400000000052, 0.00013676400000000102, 0.0001350549999999985, 0.00013520900000000072, 0.0001363060000000027, 0.00013638899999999718, 0.00013509800000000016, 0.00013527699999999962, 0.00013611100000000126, 0.00013555600000000195, 0.00013551399999999977, 0.00013569500000000165, 0.00013611200000000073, 0.000135554999999999, 0.00013547200000000106, 0.0001351939999999982, 0.00013680500000000026]</msg>
<status status="PASS" starttime="20201030 11:51:03.669" endtime="20201030 11:51:03.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.665" endtime="20201030 11:51:03.673"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.676" endtime="20201030 11:51:03.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.675" endtime="20201030 11:51:03.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.674" endtime="20201030 11:51:03.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.310" endtime="20201030 11:51:03.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.310" endtime="20201030 11:51:03.697"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.706" endtime="20201030 11:51:03.728"></status>
</kw>
<msg timestamp="20201030 11:51:03.729" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.704" endtime="20201030 11:51:03.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.731" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.730" endtime="20201030 11:51:03.731"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.732" endtime="20201030 11:51:03.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.701" endtime="20201030 11:51:03.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.699" endtime="20201030 11:51:03.735"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.741" endtime="20201030 11:51:04.026"></status>
</kw>
<msg timestamp="20201030 11:51:04.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02217925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:03.739" endtime="20201030 11:51:04.030"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022042014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02217925, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:04.030" endtime="20201030 11:51:04.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.038" endtime="20201030 11:51:04.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.737" endtime="20201030 11:51:04.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.735" endtime="20201030 11:51:04.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.045" level="INFO">${RESULT} = [{'diff': 0.00013723600000000238}, {'diff': 0.00013866700000000204}, {'diff': 0.00013740300000000122}, {'diff': 0.0001381529999999985}, {'diff': 0.00013876399999999955}, {'diff': 0.0001370829999999996...</msg>
<status status="PASS" starttime="20201030 11:51:04.042" endtime="20201030 11:51:04.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.050" level="INFO">${ACCURACY} = {'diff': [0.00013723600000000238, 0.00013866700000000204, 0.00013740300000000122, 0.0001381529999999985, 0.00013876399999999955, 0.00013708299999999965, 0.00013813899999999893, 0.00013874999999999998,...</msg>
<status status="PASS" starttime="20201030 11:51:04.046" endtime="20201030 11:51:04.050"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.054" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.053" endtime="20201030 11:51:04.055"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.057" level="INFO">VALUE: [0.00013723600000000238, 0.00013866700000000204, 0.00013740300000000122, 0.0001381529999999985, 0.00013876399999999955, 0.00013708299999999965, 0.00013813899999999893, 0.00013874999999999998, 0.00013726399999999805, 0.00013720899999999925, 0.00013793100000000086, 0.00013874999999999998, 0.00013715300000000097, 0.0001383330000000009, 0.00013727799999999762, 0.00013858299999999768, 0.00013794500000000043, 0.0001388750000000001, 0.00013770800000000027, 0.00013773599999999941, 0.0001377919999999977, 0.00013873600000000041, 0.0001370970000000027, 0.00013798599999999966, 0.00013786099999999954, 0.0001375979999999992, 0.00013788900000000215, 0.00013766600000000156, 0.0001376390000000019, 0.00013773599999999941, 0.0001371109999999988, 0.0001388339999999974, 0.00013715300000000097, 0.0001371390000000014, 0.0001378330000000004, 0.00013898600000000066, 0.0001378330000000004, 0.00013716700000000054, 0.00013890299999999925, 0.00013709699999999922, 0.0001373329999999999, 0.00013812500000000283, 0.0001379720000000001, 0.00013748599999999916, 0.00013872200000000084, 0.00013793100000000086, 0.00013826399999999905, 0.00013865199999999953, 0.00013872200000000084, 0.00013748599999999916]</msg>
<status status="PASS" starttime="20201030 11:51:04.055" endtime="20201030 11:51:04.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.051" endtime="20201030 11:51:04.058"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.062" endtime="20201030 11:51:04.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.060" endtime="20201030 11:51:04.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.059" endtime="20201030 11:51:04.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.698" endtime="20201030 11:51:04.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.697" endtime="20201030 11:51:04.082"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.091" endtime="20201030 11:51:04.113"></status>
</kw>
<msg timestamp="20201030 11:51:04.113" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.089" endtime="20201030 11:51:04.113"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.116" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.114" endtime="20201030 11:51:04.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.117" endtime="20201030 11:51:04.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.087" endtime="20201030 11:51:04.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.085" endtime="20201030 11:51:04.119"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.126" endtime="20201030 11:51:04.413"></status>
</kw>
<msg timestamp="20201030 11:51:04.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.124" endtime="20201030 11:51:04.416"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021922861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022061917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.417" endtime="20201030 11:51:04.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.425" endtime="20201030 11:51:04.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.121" endtime="20201030 11:51:04.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.120" endtime="20201030 11:51:04.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.431" level="INFO">${RESULT} = [{'diff': 0.00013905600000000198}, {'diff': 0.00014047199999999913}, {'diff': 0.00014029100000000072}, {'diff': 0.000140346999999999}, {'diff': 0.00014019399999999974}, {'diff': 0.00013925000000000048...</msg>
<status status="PASS" starttime="20201030 11:51:04.428" endtime="20201030 11:51:04.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.435" level="INFO">${ACCURACY} = {'diff': [0.00013905600000000198, 0.00014047199999999913, 0.00014029100000000072, 0.000140346999999999, 0.00014019399999999974, 0.00013925000000000048, 0.00014012500000000136, 0.00014091699999999735, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.432" endtime="20201030 11:51:04.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.439" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.438" endtime="20201030 11:51:04.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.442" level="INFO">VALUE: [0.00013905600000000198, 0.00014047199999999913, 0.00014029100000000072, 0.000140346999999999, 0.00014019399999999974, 0.00013925000000000048, 0.00014012500000000136, 0.00014091699999999735, 0.00013997300000000157, 0.00014023599999999845, 0.00013916700000000254, 0.0001400140000000008, 0.00013986199999999754, 0.00014091699999999735, 0.00014045899999999903, 0.00013941699999999932, 0.00014033299999999943, 0.00013934700000000147, 0.00014011099999999832, 0.0001404309999999999, 0.00014086100000000254, 0.0001403339999999989, 0.00014011099999999832, 0.00013976400000000055, 0.00013986099999999807, 0.00013998600000000166, 0.00014048600000000216, 0.0001406249999999984, 0.00013912500000000036, 0.0001393200000000018, 0.00013927799999999962, 0.0001409729999999991, 0.00013933299999999843, 0.00014029199999999672, 0.0001398889999999972, 0.00014043000000000042, 0.00014048600000000216, 0.00013999999999999777, 0.0001398469999999985, 0.00014041699999999685, 0.00013927799999999962, 0.00014045799999999956, 0.0001408050000000008, 0.00013987499999999764, 0.00014072199999999938, 0.00013968099999999914, 0.00013973600000000141, 0.00013941599999999985, 0.0001404720000000026, 0.00014063900000000143]</msg>
<status status="PASS" starttime="20201030 11:51:04.440" endtime="20201030 11:51:04.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.436" endtime="20201030 11:51:04.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.447" endtime="20201030 11:51:04.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.445" endtime="20201030 11:51:04.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.444" endtime="20201030 11:51:04.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.083" endtime="20201030 11:51:04.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.082" endtime="20201030 11:51:04.467"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.476" endtime="20201030 11:51:04.499"></status>
</kw>
<msg timestamp="20201030 11:51:04.500" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.474" endtime="20201030 11:51:04.500"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.502" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.501" endtime="20201030 11:51:04.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.503" endtime="20201030 11:51:04.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.472" endtime="20201030 11:51:04.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.470" endtime="20201030 11:51:04.506"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.513" endtime="20201030 11:51:04.798"></status>
</kw>
<msg timestamp="20201030 11:51:04.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.511" endtime="20201030 11:51:04.802"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.809" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022635958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022778361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.802" endtime="20201030 11:51:04.810"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.811" endtime="20201030 11:51:04.812"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.508" endtime="20201030 11:51:04.813"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.507" endtime="20201030 11:51:04.813"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.817" level="INFO">${RESULT} = [{'diff': 0.00014240299999999928}, {'diff': 0.00014262499999999692}, {'diff': 0.00014159799999999972}, {'diff': 0.00014176399999999909}, {'diff': 0.00014265299999999953}, {'diff': 0.000142055999999998...</msg>
<status status="PASS" starttime="20201030 11:51:04.814" endtime="20201030 11:51:04.817"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:04.821" level="INFO">${ACCURACY} = {'diff': [0.00014240299999999928, 0.00014262499999999692, 0.00014159799999999972, 0.00014176399999999909, 0.00014265299999999953, 0.00014205599999999804, 0.00014215299999999903, 0.00014250000000000027...</msg>
<status status="PASS" starttime="20201030 11:51:04.818" endtime="20201030 11:51:04.821"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.825" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:04.824" endtime="20201030 11:51:04.826"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.828" level="INFO">VALUE: [0.00014240299999999928, 0.00014262499999999692, 0.00014159799999999972, 0.00014176399999999909, 0.00014265299999999953, 0.00014205599999999804, 0.00014215299999999903, 0.00014250000000000027, 0.00014187499999999964, 0.00014241699999999885, 0.00014226399999999959, 0.00014176399999999909, 0.00014149999999999927, 0.00014233299999999796, 0.0001414859999999997, 0.0001425279999999994, 0.00014237500000000014, 0.00014204100000000247, 0.0001417629999999996, 0.00014126400000000205, 0.00014251399999999984, 0.0001425829999999982, 0.00014229199999999873, 0.000141653000000002, 0.0001413339999999999, 0.0001418750000000031, 0.00014108300000000018, 0.0001426250000000004, 0.00014245800000000156, 0.00014240299999999928, 0.0001429310000000024, 0.00014119400000000074, 0.0001414729999999996, 0.0001420279999999989, 0.00014275000000000052, 0.0001417219999999969, 0.00014232000000000133, 0.00014298599999999773, 0.00014165299999999853, 0.00014302700000000043, 0.0001419019999999993, 0.0001429860000000012, 0.00014294400000000249, 0.00014205600000000151, 0.00014174999999999952, 0.0001418340000000004, 0.00014226399999999959, 0.00014129099999999825, 0.00014208300000000118, 0.0001425279999999994]</msg>
<status status="PASS" starttime="20201030 11:51:04.826" endtime="20201030 11:51:04.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.822" endtime="20201030 11:51:04.830"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.834" endtime="20201030 11:51:04.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.832" endtime="20201030 11:51:04.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.831" endtime="20201030 11:51:04.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.468" endtime="20201030 11:51:04.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.468" endtime="20201030 11:51:04.854"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.863" endtime="20201030 11:51:04.885"></status>
</kw>
<msg timestamp="20201030 11:51:04.885" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.861" endtime="20201030 11:51:04.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.886" endtime="20201030 11:51:04.888"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.889" endtime="20201030 11:51:04.890"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.859" endtime="20201030 11:51:04.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.857" endtime="20201030 11:51:04.891"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.898" endtime="20201030 11:51:05.184"></status>
</kw>
<msg timestamp="20201030 11:51:05.187" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.896" endtime="20201030 11:51:05.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.195" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022317778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022462625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.188" endtime="20201030 11:51:05.195"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.196" endtime="20201030 11:51:05.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.894" endtime="20201030 11:51:05.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.892" endtime="20201030 11:51:05.199"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.203" level="INFO">${RESULT} = [{'diff': 0.00014484700000000003}, {'diff': 0.00014326400000000059}, {'diff': 0.00014377799999999719}, {'diff': 0.0001440829999999997}, {'diff': 0.00014466600000000163}, {'diff': 0.0001445830000000002...</msg>
<status status="PASS" starttime="20201030 11:51:05.199" endtime="20201030 11:51:05.203"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.208" level="INFO">${ACCURACY} = {'diff': [0.00014484700000000003, 0.00014326400000000059, 0.00014377799999999719, 0.0001440829999999997, 0.00014466600000000163, 0.0001445830000000002, 0.00014380600000000326, 0.0001434029999999968, 0...</msg>
<status status="PASS" starttime="20201030 11:51:05.204" endtime="20201030 11:51:05.208"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.212" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.211" endtime="20201030 11:51:05.212"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.214" level="INFO">VALUE: [0.00014484700000000003, 0.00014326400000000059, 0.00014377799999999719, 0.0001440829999999997, 0.00014466600000000163, 0.0001445830000000002, 0.00014380600000000326, 0.0001434029999999968, 0.00014426399999999812, 0.00014400000000000177, 0.00014329100000000025, 0.00014479100000000175, 0.0001441250000000019, 0.00014415300000000103, 0.00014379200000000023, 0.00014320900000000178, 0.0001448479999999995, 0.00014437500000000214, 0.00014377800000000066, 0.00014391700000000035, 0.00014423599999999898, 0.0001441670000000006, 0.00014375000000000152, 0.00014402699999999796, 0.00014427800000000116, 0.00014495800000000059, 0.00014411100000000232, 0.000144041000000001, 0.0001446389999999985, 0.00014318099999999917, 0.00014341699999999985, 0.00014494400000000102, 0.00014376400000000109, 0.00014409700000000275, 0.00014311100000000132, 0.00014343099999999942, 0.00014445899999999956, 0.00014411099999999885, 0.00014380500000000032, 0.00014469400000000077, 0.00014451400000000184, 0.00014423599999999898, 0.0001441670000000006, 0.00014329100000000025, 0.0001436250000000014, 0.00014394400000000002, 0.00014491700000000135, 0.00014377800000000066, 0.00014491699999999788, 0.00014309800000000122]</msg>
<status status="PASS" starttime="20201030 11:51:05.213" endtime="20201030 11:51:05.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.209" endtime="20201030 11:51:05.216"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.219" endtime="20201030 11:51:05.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.218" endtime="20201030 11:51:05.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.217" endtime="20201030 11:51:05.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.855" endtime="20201030 11:51:05.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.855" endtime="20201030 11:51:05.240"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.249" endtime="20201030 11:51:05.271"></status>
</kw>
<msg timestamp="20201030 11:51:05.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.247" endtime="20201030 11:51:05.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.274" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.272" endtime="20201030 11:51:05.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.275" endtime="20201030 11:51:05.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.244" endtime="20201030 11:51:05.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.242" endtime="20201030 11:51:05.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.284" endtime="20201030 11:51:05.571"></status>
</kw>
<msg timestamp="20201030 11:51:05.574" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.282" endtime="20201030 11:51:05.574"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.582" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021955319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022101042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.575" endtime="20201030 11:51:05.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.583" endtime="20201030 11:51:05.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.280" endtime="20201030 11:51:05.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.278" endtime="20201030 11:51:05.586"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.589" level="INFO">${RESULT} = [{'diff': 0.00014572300000000038}, {'diff': 0.00014515299999999856}, {'diff': 0.00014524999999999955}, {'diff': 0.000147042}, {'diff': 0.000146139}, {'diff': 0.00014654100000000003}, {'diff': 0.000146...</msg>
<status status="PASS" starttime="20201030 11:51:05.586" endtime="20201030 11:51:05.590"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.593" level="INFO">${ACCURACY} = {'diff': [0.00014572300000000038, 0.00014515299999999856, 0.00014524999999999955, 0.000147042, 0.000146139, 0.00014654100000000003, 0.00014661100000000135, 0.00014654100000000003, 0.000146264000000000...</msg>
<status status="PASS" starttime="20201030 11:51:05.590" endtime="20201030 11:51:05.594"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.598" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.597" endtime="20201030 11:51:05.598"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.600" level="INFO">VALUE: [0.00014572300000000038, 0.00014515299999999856, 0.00014524999999999955, 0.000147042, 0.000146139, 0.00014654100000000003, 0.00014661100000000135, 0.00014654100000000003, 0.00014626400000000012, 0.00014575000000000005, 0.0001459450000000015, 0.00014673600000000148, 0.00014518100000000117, 0.0001458190000000019, 0.0001452769999999992, 0.0001463329999999985, 0.00014543000000000195, 0.00014583300000000146, 0.0001451670000000016, 0.00014545900000000056, 0.00014583400000000094, 0.00014702800000000044, 0.00014629099999999978, 0.00014616599999999966, 0.00014694399999999955, 0.00014595900000000106, 0.00014691699999999988, 0.00014561199999999982, 0.00014612500000000042, 0.00014537499999999967, 0.0001453190000000014, 0.00014677800000000019, 0.0001469450000000025, 0.00014674999999999758, 0.000146139, 0.0001458879999999968, 0.00014627799999999969, 0.0001458190000000019, 0.00014591699999999888, 0.0001455969999999973, 0.0001465000000000008, 0.0001461800000000027, 0.00014672199999999844, 0.0001455830000000012, 0.0001468749999999977, 0.0001468619999999976, 0.00014515300000000203, 0.00014643099999999895, 0.0001466390000000005, 0.0001465969999999983]</msg>
<status status="PASS" starttime="20201030 11:51:05.599" endtime="20201030 11:51:05.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.594" endtime="20201030 11:51:05.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.605" endtime="20201030 11:51:05.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.604" endtime="20201030 11:51:05.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.603" endtime="20201030 11:51:05.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.241" endtime="20201030 11:51:05.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.240" endtime="20201030 11:51:05.626"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.634" endtime="20201030 11:51:05.657"></status>
</kw>
<msg timestamp="20201030 11:51:05.658" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.633" endtime="20201030 11:51:05.658"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.659" endtime="20201030 11:51:05.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.661" endtime="20201030 11:51:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.630" endtime="20201030 11:51:05.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.628" endtime="20201030 11:51:05.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.670" endtime="20201030 11:51:05.956"></status>
</kw>
<msg timestamp="20201030 11:51:05.959" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.669" endtime="20201030 11:51:05.959"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.967" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022769722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022918639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.960" endtime="20201030 11:51:05.967"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.968" endtime="20201030 11:51:05.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.666" endtime="20201030 11:51:05.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.665" endtime="20201030 11:51:05.971"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.975" level="INFO">${RESULT} = [{'diff': 0.00014891700000000188}, {'diff': 0.00014715300000000056}, {'diff': 0.00014898600000000026}, {'diff': 0.00014809799999999929}, {'diff': 0.00014894399999999808}, {'diff': 0.000148042000000001...</msg>
<status status="PASS" starttime="20201030 11:51:05.971" endtime="20201030 11:51:05.975"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:05.979" level="INFO">${ACCURACY} = {'diff': [0.00014891700000000188, 0.00014715300000000056, 0.00014898600000000026, 0.00014809799999999929, 0.00014894399999999808, 0.000148042000000001, 0.00014747200000000266, 0.00014718000000000023, ...</msg>
<status status="PASS" starttime="20201030 11:51:05.976" endtime="20201030 11:51:05.979"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.983" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:05.982" endtime="20201030 11:51:05.983"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.985" level="INFO">VALUE: [0.00014891700000000188, 0.00014715300000000056, 0.00014898600000000026, 0.00014809799999999929, 0.00014894399999999808, 0.000148042000000001, 0.00014747200000000266, 0.00014718000000000023, 0.00014822300000000288, 0.00014884800000000004, 0.00014744400000000005, 0.0001484030000000018, 0.00014877699999999924, 0.00014808300000000024, 0.00014863899999999902, 0.000147139000000001, 0.000147139000000001, 0.0001476390000000015, 0.00014863899999999902, 0.00014831900000000092, 0.00014748599999999876, 0.00014876399999999915, 0.00014865300000000206, 0.00014809799999999929, 0.00014745799999999962, 0.00014748599999999876, 0.00014819399999999733, 0.00014786099999999913, 0.00014724999999999808, 0.00014776399999999815, 0.0001473199999999994, 0.00014751400000000137, 0.00014876400000000262, 0.00014715300000000056, 0.0001483330000000005, 0.00014762500000000192, 0.0001480969999999998, 0.00014809800000000276, 0.00014829100000000178, 0.00014790199999999837, 0.00014820800000000037, 0.00014884700000000056, 0.00014841700000000138, 0.0001482090000000033, 0.00014751400000000137, 0.00014762499999999845, 0.00014876399999999915, 0.0001483330000000005, 0.00014784700000000303, 0.00014843100000000095]</msg>
<status status="PASS" starttime="20201030 11:51:05.984" endtime="20201030 11:51:05.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.979" endtime="20201030 11:51:05.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.991" endtime="20201030 11:51:06.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.990" endtime="20201030 11:51:06.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.989" endtime="20201030 11:51:06.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.627" endtime="20201030 11:51:06.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.626" endtime="20201030 11:51:06.012"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.020" endtime="20201030 11:51:06.043"></status>
</kw>
<msg timestamp="20201030 11:51:06.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.019" endtime="20201030 11:51:06.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.046" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.044" endtime="20201030 11:51:06.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.047" endtime="20201030 11:51:06.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.016" endtime="20201030 11:51:06.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.014" endtime="20201030 11:51:06.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.056" endtime="20201030 11:51:06.341"></status>
</kw>
<msg timestamp="20201030 11:51:06.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.054" endtime="20201030 11:51:06.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022027819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022178736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.345" endtime="20201030 11:51:06.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.353" endtime="20201030 11:51:06.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.051" endtime="20201030 11:51:06.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.050" endtime="20201030 11:51:06.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.360" level="INFO">${RESULT} = [{'diff': 0.0001509170000000004}, {'diff': 0.00015093099999999998}, {'diff': 0.00014938899999999977}, {'diff': 0.0001503750000000012}, {'diff': 0.00014962500000000045}, {'diff': 0.00015013899999999705...</msg>
<status status="PASS" starttime="20201030 11:51:06.357" endtime="20201030 11:51:06.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.365" level="INFO">${ACCURACY} = {'diff': [0.0001509170000000004, 0.00015093099999999998, 0.00014938899999999977, 0.0001503750000000012, 0.00014962500000000045, 0.00015013899999999705, 0.00015099999999999836, 0.00015009699999999834, ...</msg>
<status status="PASS" starttime="20201030 11:51:06.361" endtime="20201030 11:51:06.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.369" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.368" endtime="20201030 11:51:06.370"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.372" level="INFO">VALUE: [0.0001509170000000004, 0.00015093099999999998, 0.00014938899999999977, 0.0001503750000000012, 0.00014962500000000045, 0.00015013899999999705, 0.00015099999999999836, 0.00015009699999999834, 0.00015019500000000227, 0.00015023599999999804, 0.0001493469999999976, 0.00015083299999999952, 0.00015080500000000038, 0.00014963900000000002, 0.00015072199999999897, 0.00014993099999999898, 0.00015095799999999965, 0.00015043100000000295, 0.0001493330000000015, 0.00014940199999999987, 0.0001499299999999995, 0.00015036100000000163, 0.00014958399999999775, 0.00014962500000000045, 0.00014975000000000058, 0.0001502919999999998, 0.00015102800000000097, 0.00014962500000000045, 0.00014993099999999898, 0.00015080599999999986, 0.00014933400000000097, 0.00014979200000000276, 0.0001501530000000001, 0.00015058300000000274, 0.00015025000000000108, 0.0001497919999999993, 0.00015047300000000166, 0.00014954099999999956, 0.00014940299999999934, 0.00014961100000000088, 0.00015094400000000008, 0.00014961100000000088, 0.0001504169999999999, 0.00014944400000000205, 0.00014926300000000017, 0.0001490970000000008, 0.00014925000000000008, 0.00015077799999999725, 0.00015094499999999955, 0.00014961200000000036]</msg>
<status status="PASS" starttime="20201030 11:51:06.370" endtime="20201030 11:51:06.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.366" endtime="20201030 11:51:06.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.383" endtime="20201030 11:51:06.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.381" endtime="20201030 11:51:06.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.380" endtime="20201030 11:51:06.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.013" endtime="20201030 11:51:06.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.012" endtime="20201030 11:51:06.404"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.413" endtime="20201030 11:51:06.434"></status>
</kw>
<msg timestamp="20201030 11:51:06.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.411" endtime="20201030 11:51:06.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.436" endtime="20201030 11:51:06.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.438" endtime="20201030 11:51:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.408" endtime="20201030 11:51:06.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.406" endtime="20201030 11:51:06.441"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.447" endtime="20201030 11:51:06.736"></status>
</kw>
<msg timestamp="20201030 11:51:06.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.445" endtime="20201030 11:51:06.739"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021873514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022024708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.740" endtime="20201030 11:51:06.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.748" endtime="20201030 11:51:06.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.443" endtime="20201030 11:51:06.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.441" endtime="20201030 11:51:06.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.754" level="INFO">${RESULT} = [{'diff': 0.00015119400000000033}, {'diff': 0.00015181900000000095}, {'diff': 0.0001522920000000018}, {'diff': 0.00015243100000000148}, {'diff': 0.00015254200000000204}, {'diff': 0.0001520979999999998...</msg>
<status status="PASS" starttime="20201030 11:51:06.751" endtime="20201030 11:51:06.755"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:06.758" level="INFO">${ACCURACY} = {'diff': [0.00015119400000000033, 0.00015181900000000095, 0.0001522920000000018, 0.00015243100000000148, 0.00015254200000000204, 0.00015209799999999982, 0.00015209700000000034, 0.0001527500000000001, ...</msg>
<status status="PASS" starttime="20201030 11:51:06.755" endtime="20201030 11:51:06.758"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.763" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:06.762" endtime="20201030 11:51:06.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.765" level="INFO">VALUE: [0.00015119400000000033, 0.00015181900000000095, 0.0001522920000000018, 0.00015243100000000148, 0.00015254200000000204, 0.00015209799999999982, 0.00015209700000000034, 0.0001527500000000001, 0.00015181999999999696, 0.00015123599999999904, 0.00015300000000000036, 0.00015216700000000166, 0.000152430999999998, 0.00015302700000000002, 0.0001518750000000027, 0.00015137499999999873, 0.00015143100000000048, 0.00015237499999999973, 0.00015158399999999975, 0.0001514439999999971, 0.00015109699999999934, 0.0001513469999999996, 0.00015291699999999894, 0.0001516109999999994, 0.00015143100000000048, 0.00015161200000000236, 0.00015188900000000227, 0.00015242999999999854, 0.00015216700000000166, 0.00015294500000000155, 0.0001522499999999996, 0.00015218000000000176, 0.00015155500000000113, 0.00015270799999999793, 0.0001529170000000024, 0.0001516109999999994, 0.000152430999999998, 0.00015201399999999893, 0.00015106999999999968, 0.00015247200000000072, 0.00015222200000000047, 0.00015130500000000088, 0.0001525829999999978, 0.0001515829999999968, 0.00015177799999999825, 0.00015112500000000195, 0.0001518470000000001, 0.00015297200000000122, 0.00015283300000000152, 0.00015209699999999687]</msg>
<status status="PASS" starttime="20201030 11:51:06.764" endtime="20201030 11:51:06.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.759" endtime="20201030 11:51:06.766"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.770" endtime="20201030 11:51:06.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.769" endtime="20201030 11:51:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.767" endtime="20201030 11:51:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.405" endtime="20201030 11:51:06.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.404" endtime="20201030 11:51:06.791"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.799" endtime="20201030 11:51:06.822"></status>
</kw>
<msg timestamp="20201030 11:51:06.822" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.798" endtime="20201030 11:51:06.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.825" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.824" endtime="20201030 11:51:06.825"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.826" endtime="20201030 11:51:06.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.795" endtime="20201030 11:51:06.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.793" endtime="20201030 11:51:06.828"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.835" endtime="20201030 11:51:07.121"></status>
</kw>
<msg timestamp="20201030 11:51:07.124" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.833" endtime="20201030 11:51:07.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.131" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022441653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022595083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.125" endtime="20201030 11:51:07.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.133" endtime="20201030 11:51:07.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.831" endtime="20201030 11:51:07.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.829" endtime="20201030 11:51:07.135"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.139" level="INFO">${RESULT} = [{'diff': 0.00015342999999999954}, {'diff': 0.00015308300000000177}, {'diff': 0.0001532500000000006}, {'diff': 0.000154431}, {'diff': 0.0001537639999999972}, {'diff': 0.00015472300000000244}, {'diff':...</msg>
<status status="PASS" starttime="20201030 11:51:07.136" endtime="20201030 11:51:07.140"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.144" level="INFO">${ACCURACY} = {'diff': [0.00015342999999999954, 0.00015308300000000177, 0.0001532500000000006, 0.000154431, 0.0001537639999999972, 0.00015472300000000244, 0.00015408399999999878, 0.0001549440000000006, 0.0001532909...</msg>
<status status="PASS" starttime="20201030 11:51:07.140" endtime="20201030 11:51:07.144"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.149" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.147" endtime="20201030 11:51:07.149"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.151" level="INFO">VALUE: [0.00015342999999999954, 0.00015308300000000177, 0.0001532500000000006, 0.000154431, 0.0001537639999999972, 0.00015472300000000244, 0.00015408399999999878, 0.0001549440000000006, 0.00015329099999999984, 0.00015329099999999984, 0.0001543470000000026, 0.00015312500000000048, 0.000154431, 0.00015342999999999954, 0.00015473599999999907, 0.0001540829999999993, 0.00015461099999999894, 0.00015463900000000155, 0.000153124999999997, 0.00015411099999999844, 0.0001544440000000001, 0.0001544860000000023, 0.00015416600000000072, 0.0001543609999999987, 0.00015312500000000048, 0.00015491699999999747, 0.00015476400000000168, 0.0001532500000000006, 0.00015427800000000075, 0.00015458300000000327, 0.0001548060000000004, 0.000153124999999997, 0.00015326400000000018, 0.0001539020000000009, 0.00015329199999999932, 0.00015359699999999837, 0.00015312500000000048, 0.0001547500000000021, 0.00015402700000000102, 0.00015348700000000076, 0.00015395799999999918, 0.00015412499999999801, 0.00015377800000000025, 0.0001543609999999987, 0.00015344500000000205, 0.0001531669999999992, 0.00015336100000000116, 0.0001531110000000009, 0.00015409699999999887, 0.00015461099999999894]</msg>
<status status="PASS" starttime="20201030 11:51:07.150" endtime="20201030 11:51:07.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.145" endtime="20201030 11:51:07.153"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.157" endtime="20201030 11:51:07.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.156" endtime="20201030 11:51:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.154" endtime="20201030 11:51:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.791" endtime="20201030 11:51:07.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.791" endtime="20201030 11:51:07.178"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.186" endtime="20201030 11:51:07.209"></status>
</kw>
<msg timestamp="20201030 11:51:07.209" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.185" endtime="20201030 11:51:07.209"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.210" endtime="20201030 11:51:07.212"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.213" endtime="20201030 11:51:07.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.182" endtime="20201030 11:51:07.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.180" endtime="20201030 11:51:07.215"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.222" endtime="20201030 11:51:07.507"></status>
</kw>
<msg timestamp="20201030 11:51:07.510" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.220" endtime="20201030 11:51:07.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021946056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022102611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.511" endtime="20201030 11:51:07.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.519" endtime="20201030 11:51:07.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.218" endtime="20201030 11:51:07.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.216" endtime="20201030 11:51:07.522"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.526" level="INFO">${RESULT} = [{'diff': 0.00015655500000000266}, {'diff': 0.00015615300000000262}, {'diff': 0.00015681899999999901}, {'diff': 0.00015665200000000018}, {'diff': 0.00015602799999999903}, {'diff': 0.000156083000000001...</msg>
<status status="PASS" starttime="20201030 11:51:07.523" endtime="20201030 11:51:07.526"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.530" level="INFO">${ACCURACY} = {'diff': [0.00015655500000000266, 0.00015615300000000262, 0.00015681899999999901, 0.00015665200000000018, 0.00015602799999999903, 0.0001560830000000013, 0.000156222000000001, 0.00015598600000000032, 0...</msg>
<status status="PASS" starttime="20201030 11:51:07.527" endtime="20201030 11:51:07.531"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.535" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.534" endtime="20201030 11:51:07.535"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.537" level="INFO">VALUE: [0.00015655500000000266, 0.00015615300000000262, 0.00015681899999999901, 0.00015665200000000018, 0.00015602799999999903, 0.0001560830000000013, 0.000156222000000001, 0.00015598600000000032, 0.00015515199999999868, 0.00015647299999999725, 0.00015524999999999914, 0.00015574999999999964, 0.00015587499999999976, 0.00015529199999999785, 0.00015561099999999994, 0.00015641699999999897, 0.00015593099999999804, 0.00015602799999999903, 0.0001565969999999979, 0.0001564029999999994, 0.00015694500000000208, 0.0001558060000000014, 0.00015644399999999864, 0.00015642999999999907, 0.00015556900000000123, 0.00015648600000000082, 0.00015697200000000175, 0.00015551400000000243, 0.00015561099999999994, 0.00015579200000000182, 0.00015530500000000141, 0.00015580499999999844, 0.00015595900000000065, 0.0001556670000000017, 0.00015533300000000055, 0.00015559700000000037, 0.0001557639999999992, 0.00015648600000000082, 0.00015633300000000155, 0.00015655600000000214, 0.00015561199999999942, 0.0001565969999999979, 0.00015561099999999994, 0.00015662500000000051, 0.0001559310000000015, 0.00015513900000000205, 0.00015579200000000182, 0.0001569310000000025, 0.00015601400000000293, 0.00015659700000000137]</msg>
<status status="PASS" starttime="20201030 11:51:07.536" endtime="20201030 11:51:07.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.531" endtime="20201030 11:51:07.539"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.542" endtime="20201030 11:51:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.541" endtime="20201030 11:51:07.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.540" endtime="20201030 11:51:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.179" endtime="20201030 11:51:07.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.178" endtime="20201030 11:51:07.563"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.572" endtime="20201030 11:51:07.594"></status>
</kw>
<msg timestamp="20201030 11:51:07.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.570" endtime="20201030 11:51:07.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.597" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.595" endtime="20201030 11:51:07.597"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.598" endtime="20201030 11:51:07.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.567" endtime="20201030 11:51:07.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.565" endtime="20201030 11:51:07.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.607" endtime="20201030 11:51:07.893"></status>
</kw>
<msg timestamp="20201030 11:51:07.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.605" endtime="20201030 11:51:07.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021883319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022040694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.897" endtime="20201030 11:51:07.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.905" endtime="20201030 11:51:07.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.603" endtime="20201030 11:51:07.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.601" endtime="20201030 11:51:07.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.912" level="INFO">${RESULT} = [{'diff': 0.00015737500000000126}, {'diff': 0.0001575139999999975}, {'diff': 0.00015902800000000203}, {'diff': 0.0001576809999999998}, {'diff': 0.000158013999999998}, {'diff': 0.00015763900000000108},...</msg>
<status status="PASS" starttime="20201030 11:51:07.908" endtime="20201030 11:51:07.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:07.916" level="INFO">${ACCURACY} = {'diff': [0.00015737500000000126, 0.0001575139999999975, 0.00015902800000000203, 0.0001576809999999998, 0.000158013999999998, 0.00015763900000000108, 0.00015740200000000093, 0.00015788899999999786, 0....</msg>
<status status="PASS" starttime="20201030 11:51:07.913" endtime="20201030 11:51:07.916"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.920" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:07.919" endtime="20201030 11:51:07.920"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.923" level="INFO">VALUE: [0.00015737500000000126, 0.0001575139999999975, 0.00015902800000000203, 0.0001576809999999998, 0.000158013999999998, 0.00015763900000000108, 0.00015740200000000093, 0.00015788899999999786, 0.00015798600000000232, 0.0001582090000000029, 0.00015756999999999924, 0.0001577640000000012, 0.00015874999999999917, 0.00015894400000000114, 0.0001574030000000004, 0.00015862500000000251, 0.00015797299999999875, 0.00015849999999999892, 0.0001585969999999999, 0.00015761099999999847, 0.00015824999999999867, 0.00015868099999999732, 0.00015738900000000083, 0.00015725000000000114, 0.00015720800000000243, 0.00015840200000000193, 0.00015747200000000225, 0.00015765299999999718, 0.00015719499999999886, 0.0001579449999999996, 0.00015893000000000157, 0.00015858300000000033, 0.00015777800000000078, 0.00015713900000000058, 0.00015786099999999872, 0.00015838900000000183, 0.00015866599999999828, 0.00015894400000000114, 0.00015811099999999897, 0.00015883300000000058, 0.00015751400000000096, 0.0001572640000000007, 0.0001580420000000006, 0.00015879100000000188, 0.00015784700000000262, 0.00015840299999999793, 0.00015830600000000042, 0.00015747200000000225, 0.00015766700000000022, 0.00015783400000000253]</msg>
<status status="PASS" starttime="20201030 11:51:07.921" endtime="20201030 11:51:07.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.917" endtime="20201030 11:51:07.924"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.927" endtime="20201030 11:51:07.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.926" endtime="20201030 11:51:07.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.925" endtime="20201030 11:51:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.564" endtime="20201030 11:51:07.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.563" endtime="20201030 11:51:07.948"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.957" endtime="20201030 11:51:07.981"></status>
</kw>
<msg timestamp="20201030 11:51:07.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.955" endtime="20201030 11:51:07.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.984" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.983" endtime="20201030 11:51:07.984"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.985" endtime="20201030 11:51:07.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.952" endtime="20201030 11:51:07.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.950" endtime="20201030 11:51:07.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.994" endtime="20201030 11:51:08.279"></status>
</kw>
<msg timestamp="20201030 11:51:08.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023031042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.992" endtime="20201030 11:51:08.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023031042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023190597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.284" endtime="20201030 11:51:08.291"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.291" endtime="20201030 11:51:08.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.990" endtime="20201030 11:51:08.294"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.988" endtime="20201030 11:51:08.294"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.298" level="INFO">${RESULT} = [{'diff': 0.00015955499999999873}, {'diff': 0.00015976399999999974}, {'diff': 0.00016043099999999907}, {'diff': 0.00015913899999999911}, {'diff': 0.0001591810000000013}, {'diff': 0.0001601390000000001...</msg>
<status status="PASS" starttime="20201030 11:51:08.295" endtime="20201030 11:51:08.298"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.302" level="INFO">${ACCURACY} = {'diff': [0.00015955499999999873, 0.00015976399999999974, 0.00016043099999999907, 0.00015913899999999911, 0.0001591810000000013, 0.00016013900000000011, 0.00016043099999999907, 0.00016034800000000113,...</msg>
<status status="PASS" starttime="20201030 11:51:08.299" endtime="20201030 11:51:08.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.306" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.305" endtime="20201030 11:51:08.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.309" level="INFO">VALUE: [0.00015955499999999873, 0.00015976399999999974, 0.00016043099999999907, 0.00015913899999999911, 0.0001591810000000013, 0.00016013900000000011, 0.00016043099999999907, 0.00016034800000000113, 0.00015919500000000086, 0.00016066600000000028, 0.00015984800000000063, 0.00016018000000000282, 0.00016034700000000165, 0.0001604299999999996, 0.00016068099999999932, 0.0001602909999999999, 0.00015911099999999997, 0.0001603880000000009, 0.00016102800000000056, 0.00016000000000000042, 0.00015972199999999756, 0.00016011200000000045, 0.00016027699999999687, 0.00016029199999999938, 0.00015958300000000133, 0.00015963899999999961, 0.00016029199999999938, 0.0001607230000000015, 0.00015970900000000093, 0.00016077699999999737, 0.00016011100000000097, 0.00016044499999999864, 0.00016048600000000135, 0.00015926399999999924, 0.00015968000000000232, 0.00016026400000000024, 0.0001590970000000004, 0.00015972200000000103, 0.0001592779999999988, 0.000160014, 0.0001596810000000018, 0.00016026300000000077, 0.0001607360000000016, 0.000160707999999999, 0.00015938899999999936, 0.00016086099999999826, 0.0001592499999999962, 0.0001593060000000049, 0.0001608339999999986, 0.00016059699999999844]</msg>
<status status="PASS" starttime="20201030 11:51:08.307" endtime="20201030 11:51:08.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.303" endtime="20201030 11:51:08.311"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.315" endtime="20201030 11:51:08.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.313" endtime="20201030 11:51:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.312" endtime="20201030 11:51:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.949" endtime="20201030 11:51:08.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.948" endtime="20201030 11:51:08.335"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.344" endtime="20201030 11:51:08.366"></status>
</kw>
<msg timestamp="20201030 11:51:08.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.342" endtime="20201030 11:51:08.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.369" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.367" endtime="20201030 11:51:08.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.370" endtime="20201030 11:51:08.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.340" endtime="20201030 11:51:08.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.338" endtime="20201030 11:51:08.372"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.379" endtime="20201030 11:51:08.663"></status>
</kw>
<msg timestamp="20201030 11:51:08.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.377" endtime="20201030 11:51:08.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021753653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021915403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.667" endtime="20201030 11:51:08.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.675" endtime="20201030 11:51:08.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.375" endtime="20201030 11:51:08.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.373" endtime="20201030 11:51:08.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.682" level="INFO">${RESULT} = [{'diff': 0.0001617499999999987}, {'diff': 0.0001612780000000008}, {'diff': 0.00016166700000000075}, {'diff': 0.00016176399999999827}, {'diff': 0.00016301399999999952}, {'diff': 0.00016108299999999937...</msg>
<status status="PASS" starttime="20201030 11:51:08.679" endtime="20201030 11:51:08.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:08.687" level="INFO">${ACCURACY} = {'diff': [0.0001617499999999987, 0.0001612780000000008, 0.00016166700000000075, 0.00016176399999999827, 0.00016301399999999952, 0.00016108299999999937, 0.00016205599999999723, 0.00016215300000000168, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.683" endtime="20201030 11:51:08.687"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.691" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:08.690" endtime="20201030 11:51:08.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.694" level="INFO">VALUE: [0.0001617499999999987, 0.0001612780000000008, 0.00016166700000000075, 0.00016176399999999827, 0.00016301399999999952, 0.00016108299999999937, 0.00016205599999999723, 0.00016215300000000168, 0.00016293100000000157, 0.00016255500000000173, 0.00016191600000000153, 0.00016211100000000297, 0.00016244500000000064, 0.00016259699999999697, 0.0001622499999999992, 0.0001617780000000013, 0.00016304100000000266, 0.00016226399999999877, 0.00016176400000000174, 0.00016230600000000095, 0.00016218100000000082, 0.00016183300000000012, 0.00016226399999999877, 0.0001613889999999979, 0.00016300000000000342, 0.00016229200000000138, 0.00016176399999999827, 0.00016199999999999895, 0.0001618889999999984, 0.00016204200000000113, 0.00016302800000000256, 0.00016245900000000021, 0.0001624170000000015, 0.00016245799999999727, 0.00016192999999999763, 0.00016268000000000185, 0.00016301399999999952, 0.0001615140000000015, 0.00016262499999999958, 0.0001628049999999985, 0.0001615979999999989, 0.00016186099999999926, 0.00016158299999999987, 0.00016186199999999873, 0.0001629309999999981, 0.00016204100000000166, 0.000162014000000002, 0.00016238900000000236, 0.00016208300000000037, 0.00016276399999999927]</msg>
<status status="PASS" starttime="20201030 11:51:08.692" endtime="20201030 11:51:08.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.687" endtime="20201030 11:51:08.695"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.698" endtime="20201030 11:51:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.697" endtime="20201030 11:51:08.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.696" endtime="20201030 11:51:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.336" endtime="20201030 11:51:08.719"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.336" endtime="20201030 11:51:08.719"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.728" endtime="20201030 11:51:08.750"></status>
</kw>
<msg timestamp="20201030 11:51:08.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.726" endtime="20201030 11:51:08.751"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.753" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.752" endtime="20201030 11:51:08.754"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.754" endtime="20201030 11:51:08.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.724" endtime="20201030 11:51:08.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.721" endtime="20201030 11:51:08.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.763" endtime="20201030 11:51:09.050"></status>
</kw>
<msg timestamp="20201030 11:51:09.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.762" endtime="20201030 11:51:09.054"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021806417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021970833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.055" endtime="20201030 11:51:09.062"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.063" endtime="20201030 11:51:09.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.759" endtime="20201030 11:51:09.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.758" endtime="20201030 11:51:09.065"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.069" level="INFO">${RESULT} = [{'diff': 0.0001644159999999971}, {'diff': 0.00016334700000000119}, {'diff': 0.0001642919999999999}, {'diff': 0.00016477799999999737}, {'diff': 0.00016476400000000127}, {'diff': 0.00016342999999999913...</msg>
<status status="PASS" starttime="20201030 11:51:09.066" endtime="20201030 11:51:09.069"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.073" level="INFO">${ACCURACY} = {'diff': [0.0001644159999999971, 0.00016334700000000119, 0.0001642919999999999, 0.00016477799999999737, 0.00016476400000000127, 0.00016342999999999913, 0.00016445799999999927, 0.00016391600000000006, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.070" endtime="20201030 11:51:09.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.077" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.076" endtime="20201030 11:51:09.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.080" level="INFO">VALUE: [0.0001644159999999971, 0.00016334700000000119, 0.0001642919999999999, 0.00016477799999999737, 0.00016476400000000127, 0.00016342999999999913, 0.00016445799999999927, 0.00016391600000000006, 0.00016313899999999965, 0.00016434699999999872, 0.00016445899999999875, 0.00016308400000000084, 0.00016463899999999768, 0.0001648479999999987, 0.00016323600000000063, 0.0001644859999999984, 0.00016394500000000214, 0.00016333299999999815, 0.00016359700000000144, 0.0001645829999999994, 0.00016309700000000094, 0.0001649310000000001, 0.00016382000000000202, 0.00016368100000000232, 0.0001646249999999981, 0.00016441600000000056, 0.00016392999999999963, 0.00016350000000000045, 0.00016436199999999776, 0.00016423600000000163, 0.00016393100000000257, 0.00016355499999999926, 0.00016441700000000004, 0.0001647920000000004, 0.0001640699999999988, 0.0001647500000000017, 0.00016402700000000062, 0.00016440300000000047, 0.000164611000000002, 0.00016391699999999954, 0.00016415300000000022, 0.000163611000000001, 0.00016456899999999983, 0.00016443000000000013, 0.00016490300000000097, 0.00016351400000000002, 0.00016380599999999898, 0.00016501399999999805, 0.0001639020000000005, 0.00016365200000000024]</msg>
<status status="PASS" starttime="20201030 11:51:09.078" endtime="20201030 11:51:09.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.074" endtime="20201030 11:51:09.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.085" endtime="20201030 11:51:09.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.083" endtime="20201030 11:51:09.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.082" endtime="20201030 11:51:09.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.720" endtime="20201030 11:51:09.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.719" endtime="20201030 11:51:09.105"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.114" endtime="20201030 11:51:09.138"></status>
</kw>
<msg timestamp="20201030 11:51:09.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.112" endtime="20201030 11:51:09.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.139" endtime="20201030 11:51:09.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.141" endtime="20201030 11:51:09.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.110" endtime="20201030 11:51:09.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.108" endtime="20201030 11:51:09.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.150" endtime="20201030 11:51:09.436"></status>
</kw>
<msg timestamp="20201030 11:51:09.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.149" endtime="20201030 11:51:09.440"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022704375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022869472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.441" endtime="20201030 11:51:09.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.449" endtime="20201030 11:51:09.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.146" endtime="20201030 11:51:09.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.145" endtime="20201030 11:51:09.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.455" level="INFO">${RESULT} = [{'diff': 0.00016509699999999947}, {'diff': 0.00016541600000000156}, {'diff': 0.00016683299999999818}, {'diff': 0.0001663189999999981}, {'diff': 0.000166709000000001}, {'diff': 0.00016527799999999787}...</msg>
<status status="PASS" starttime="20201030 11:51:09.452" endtime="20201030 11:51:09.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.459" level="INFO">${ACCURACY} = {'diff': [0.00016509699999999947, 0.00016541600000000156, 0.00016683299999999818, 0.0001663189999999981, 0.000166709000000001, 0.00016527799999999787, 0.00016687500000000036, 0.0001658890000000024, 0....</msg>
<status status="PASS" starttime="20201030 11:51:09.456" endtime="20201030 11:51:09.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.463" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.462" endtime="20201030 11:51:09.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.466" level="INFO">VALUE: [0.00016509699999999947, 0.00016541600000000156, 0.00016683299999999818, 0.0001663189999999981, 0.000166709000000001, 0.00016527799999999787, 0.00016687500000000036, 0.0001658890000000024, 0.00016549999999999898, 0.00016644500000000118, 0.00016516700000000079, 0.0001659440000000012, 0.00016537500000000233, 0.00016601400000000252, 0.0001650829999999999, 0.00016534699999999972, 0.00016673600000000066, 0.00016559799999999944, 0.00016544399999999723, 0.0001658479999999997, 0.00016627799999999887, 0.00016627799999999887, 0.00016624999999999973, 0.00016654099999999922, 0.00016641600000000256, 0.00016599999999999948, 0.000165402999999998, 0.0001665830000000014, 0.00016605600000000123, 0.0001669579999999983, 0.00016577800000000184, 0.00016579199999999794, 0.00016675000000000023, 0.00016652799999999912, 0.00016541700000000104, 0.00016584700000000022, 0.00016569399999999748, 0.00016609700000000047, 0.0001669860000000009, 0.00016597200000000034, 0.00016566700000000129, 0.00016513900000000165, 0.00016661100000000054, 0.00016661100000000054, 0.0001661249999999996, 0.0001652920000000009, 0.00016615199999999927, 0.00016579100000000194, 0.0001661519999999958, 0.00016680500000000598]</msg>
<status status="PASS" starttime="20201030 11:51:09.465" endtime="20201030 11:51:09.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.460" endtime="20201030 11:51:09.468"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.472" endtime="20201030 11:51:09.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.470" endtime="20201030 11:51:09.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.469" endtime="20201030 11:51:09.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.106" endtime="20201030 11:51:09.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.106" endtime="20201030 11:51:09.492"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.501" endtime="20201030 11:51:09.524"></status>
</kw>
<msg timestamp="20201030 11:51:09.524" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.499" endtime="20201030 11:51:09.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.527" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.525" endtime="20201030 11:51:09.527"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.528" endtime="20201030 11:51:09.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.497" endtime="20201030 11:51:09.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.495" endtime="20201030 11:51:09.530"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.537" endtime="20201030 11:51:09.821"></status>
</kw>
<msg timestamp="20201030 11:51:09.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.535" endtime="20201030 11:51:09.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021685778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021854528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.825" endtime="20201030 11:51:09.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.833" endtime="20201030 11:51:09.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.533" endtime="20201030 11:51:09.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.531" endtime="20201030 11:51:09.835"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.839" level="INFO">${RESULT} = [{'diff': 0.00016875000000000223}, {'diff': 0.00016898599999999944}, {'diff': 0.00016861099999999907}, {'diff': 0.00016815200000000127}, {'diff': 0.00016901399999999858}, {'diff': 0.000167749999999997...</msg>
<status status="PASS" starttime="20201030 11:51:09.836" endtime="20201030 11:51:09.839"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:09.844" level="INFO">${ACCURACY} = {'diff': [0.00016875000000000223, 0.00016898599999999944, 0.00016861099999999907, 0.00016815200000000127, 0.00016901399999999858, 0.00016774999999999776, 0.00016772300000000157, 0.00016802800000000062...</msg>
<status status="PASS" starttime="20201030 11:51:09.840" endtime="20201030 11:51:09.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.848" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:09.847" endtime="20201030 11:51:09.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.851" level="INFO">VALUE: [0.00016875000000000223, 0.00016898599999999944, 0.00016861099999999907, 0.00016815200000000127, 0.00016901399999999858, 0.00016774999999999776, 0.00016772300000000157, 0.00016802800000000062, 0.00016811100000000204, 0.0001679160000000006, 0.00016743000000000313, 0.00016816700000000032, 0.00016900000000000248, 0.00016711100000000104, 0.00016709700000000147, 0.00016711100000000104, 0.000167096999999998, 0.0001689169999999976, 0.0001675419999999997, 0.00016893100000000064, 0.00016836200000000176, 0.00016870800000000005, 0.00016801400000000105, 0.00016836099999999882, 0.00016752800000000012, 0.00016742999999999966, 0.00016712499999999714, 0.0001671380000000007, 0.00016890299999999803, 0.0001675830000000024, 0.0001680420000000002, 0.0001678749999999979, 0.00016890299999999803, 0.00016802700000000115, 0.00016733300000000215, 0.00016845900000000275, 0.00016781999999999908, 0.00016741699999999957, 0.00016818099999999989, 0.00016883300000000018, 0.00016711100000000104, 0.000168096999999999, 0.0001679310000000031, 0.00016743099999999914, 0.00016831999999999958, 0.00016801399999999758, 0.00016784699999999875, 0.00016704200000000266, 0.0001677640000000008, 0.00016816700000000032]</msg>
<status status="PASS" starttime="20201030 11:51:09.849" endtime="20201030 11:51:09.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.845" endtime="20201030 11:51:09.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.856" endtime="20201030 11:51:09.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.854" endtime="20201030 11:51:09.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.853" endtime="20201030 11:51:09.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.493" endtime="20201030 11:51:09.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.493" endtime="20201030 11:51:09.876"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.885" endtime="20201030 11:51:09.908"></status>
</kw>
<msg timestamp="20201030 11:51:09.908" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.883" endtime="20201030 11:51:09.908"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.911" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.909" endtime="20201030 11:51:09.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.912" endtime="20201030 11:51:09.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.881" endtime="20201030 11:51:09.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.879" endtime="20201030 11:51:09.914"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.921" endtime="20201030 11:51:10.210"></status>
</kw>
<msg timestamp="20201030 11:51:10.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.919" endtime="20201030 11:51:10.213"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.221" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021708792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021879347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.214" endtime="20201030 11:51:10.221"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.222" endtime="20201030 11:51:10.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.917" endtime="20201030 11:51:10.224"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.915" endtime="20201030 11:51:10.225"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.228" level="INFO">${RESULT} = [{'diff': 0.00017055499999999932}, {'diff': 0.0001694450000000007}, {'diff': 0.00017080499999999957}, {'diff': 0.00017094399999999926}, {'diff': 0.00016997200000000087}, {'diff': 0.0001704159999999996...</msg>
<status status="PASS" starttime="20201030 11:51:10.225" endtime="20201030 11:51:10.229"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.232" level="INFO">${ACCURACY} = {'diff': [0.00017055499999999932, 0.0001694450000000007, 0.00017080499999999957, 0.00017094399999999926, 0.00016997200000000087, 0.00017041599999999962, 0.00016933400000000015, 0.00017026399999999983,...</msg>
<status status="PASS" starttime="20201030 11:51:10.229" endtime="20201030 11:51:10.233"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.237" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.236" endtime="20201030 11:51:10.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.239" level="INFO">VALUE: [0.00017055499999999932, 0.0001694450000000007, 0.00017080499999999957, 0.00017094399999999926, 0.00016997200000000087, 0.00017041599999999962, 0.00016933400000000015, 0.00017026399999999983, 0.0001696389999999992, 0.00017030599999999854, 0.00016924999999999926, 0.00017004099999999925, 0.0001698199999999976, 0.00016997300000000035, 0.000170097999999997, 0.00016934799999999972, 0.00017067999999999944, 0.00017016699999999885, 0.0001701109999999971, 0.00016929200000000144, 0.0001690839999999999, 0.00017011200000000004, 0.00016950000000000298, 0.0001706109999999976, 0.00016983300000000118, 0.00017065299999999978, 0.00016998699999999992, 0.00017025000000000026, 0.00016961100000000007, 0.00017015299999999928, 0.00016958299999999746, 0.0001697779999999989, 0.00016932000000000058, 0.0001705000000000005, 0.00016917999999999794, 0.00017076400000000033, 0.00016977800000000237, 0.00016947200000000037, 0.00017002699999999968, 0.0001700559999999983, 0.00017081899999999914, 0.00017018099999999842, 0.0001707779999999999, 0.00017051400000000008, 0.00017080599999999904, 0.0001695129999999996, 0.00017079200000000294, 0.00017034700000000125, 0.00016947200000000037, 0.00017098600000000144]</msg>
<status status="PASS" starttime="20201030 11:51:10.238" endtime="20201030 11:51:10.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.233" endtime="20201030 11:51:10.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.244" endtime="20201030 11:51:10.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.242" endtime="20201030 11:51:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.241" endtime="20201030 11:51:10.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.877" endtime="20201030 11:51:10.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.877" endtime="20201030 11:51:10.265"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.273" endtime="20201030 11:51:10.298"></status>
</kw>
<msg timestamp="20201030 11:51:10.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.272" endtime="20201030 11:51:10.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.299" endtime="20201030 11:51:10.301"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.302" endtime="20201030 11:51:10.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.269" endtime="20201030 11:51:10.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.267" endtime="20201030 11:51:10.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.311" endtime="20201030 11:51:10.597"></status>
</kw>
<msg timestamp="20201030 11:51:10.600" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.309" endtime="20201030 11:51:10.600"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.608" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022963236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023135806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.601" endtime="20201030 11:51:10.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.609" endtime="20201030 11:51:10.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.307" endtime="20201030 11:51:10.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.305" endtime="20201030 11:51:10.611"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.615" level="INFO">${RESULT} = [{'diff': 0.0001725699999999969}, {'diff': 0.0001723750000000024}, {'diff': 0.0001717499999999983}, {'diff': 0.00017209699999999953}, {'diff': 0.00017230599999999707}, {'diff': 0.00017112499999999767}...</msg>
<status status="PASS" starttime="20201030 11:51:10.612" endtime="20201030 11:51:10.616"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:10.619" level="INFO">${ACCURACY} = {'diff': [0.0001725699999999969, 0.0001723750000000024, 0.0001717499999999983, 0.00017209699999999953, 0.00017230599999999707, 0.00017112499999999767, 0.0001726950000000005, 0.00017217999999999747, 0....</msg>
<status status="PASS" starttime="20201030 11:51:10.616" endtime="20201030 11:51:10.620"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.624" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:10.623" endtime="20201030 11:51:10.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.626" level="INFO">VALUE: [0.0001725699999999969, 0.0001723750000000024, 0.0001717499999999983, 0.00017209699999999953, 0.00017230599999999707, 0.00017112499999999767, 0.0001726950000000005, 0.00017217999999999747, 0.00017184799999999875, 0.0001727780000000019, 0.0001729170000000016, 0.0001729720000000004, 0.0001729300000000017, 0.00017211100000000257, 0.00017149999999999804, 0.0001715689999999999, 0.0001724309999999972, 0.000171097000000002, 0.00017186100000000232, 0.00017254100000000175, 0.0001726109999999996, 0.00017195799999999983, 0.00017299999999999954, 0.00017118099999999942, 0.00017195799999999983, 0.00017276399999999886, 0.0001714300000000002, 0.0001715970000000025, 0.00017240299999999806, 0.0001712499999999978, 0.00017158300000000293, 0.0001724719999999999, 0.00017262499999999917, 0.0001721109999999991, 0.00017149999999999804, 0.00017249999999999904, 0.00017156900000000336, 0.0001719580000000033, 0.00017195799999999983, 0.00017284700000000028, 0.00017168099999999992, 0.0001716520000000013, 0.000172694000000001, 0.00017152799999999718, 0.00017248600000000294, 0.00017294500000000074, 0.00017193100000000017, 0.0001724029999999946, 0.0001711939999999995, 0.00017240300000000153]</msg>
<status status="PASS" starttime="20201030 11:51:10.625" endtime="20201030 11:51:10.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.620" endtime="20201030 11:51:10.628"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.632" endtime="20201030 11:51:10.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.631" endtime="20201030 11:51:10.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.629" endtime="20201030 11:51:10.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.266" endtime="20201030 11:51:10.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.265" endtime="20201030 11:51:10.653"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.661" endtime="20201030 11:51:10.685"></status>
</kw>
<msg timestamp="20201030 11:51:10.685" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.660" endtime="20201030 11:51:10.685"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.688" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.686" endtime="20201030 11:51:10.688"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.689" endtime="20201030 11:51:10.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.657" endtime="20201030 11:51:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.655" endtime="20201030 11:51:10.691"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.698" endtime="20201030 11:51:10.983"></status>
</kw>
<msg timestamp="20201030 11:51:10.986" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.696" endtime="20201030 11:51:10.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.994" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021735236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021908806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.987" endtime="20201030 11:51:10.994"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.995" endtime="20201030 11:51:10.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.694" endtime="20201030 11:51:10.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.692" endtime="20201030 11:51:10.997"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.001" level="INFO">${RESULT} = [{'diff': 0.0001735699999999979}, {'diff': 0.00017467999999999997}, {'diff': 0.00017444500000000224}, {'diff': 0.0001745140000000006}, {'diff': 0.00017476400000000086}, {'diff': 0.00017412500000000067...</msg>
<status status="PASS" starttime="20201030 11:51:10.998" endtime="20201030 11:51:11.001"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.006" level="INFO">${ACCURACY} = {'diff': [0.0001735699999999979, 0.00017467999999999997, 0.00017444500000000224, 0.0001745140000000006, 0.00017476400000000086, 0.00017412500000000067, 0.00017473600000000172, 0.00017317999999999847, ...</msg>
<status status="PASS" starttime="20201030 11:51:11.002" endtime="20201030 11:51:11.006"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.010" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.009" endtime="20201030 11:51:11.011"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.013" level="INFO">VALUE: [0.0001735699999999979, 0.00017467999999999997, 0.00017444500000000224, 0.0001745140000000006, 0.00017476400000000086, 0.00017412500000000067, 0.00017473600000000172, 0.00017317999999999847, 0.00017436200000000082, 0.0001745140000000006, 0.0001749309999999997, 0.0001744309999999992, 0.0001738330000000017, 0.00017412500000000067, 0.00017327799999999893, 0.0001736110000000006, 0.00017397300000000088, 0.00017313899999999924, 0.00017429100000000003, 0.00017491600000000065, 0.0001742919999999995, 0.00017480599999999957, 0.000174098000000001, 0.00017391699999999913, 0.00017413900000000024, 0.00017427799999999993, 0.00017456899999999942, 0.0001748469999999988, 0.00017458400000000193, 0.00017497199999999893, 0.00017383299999999824, 0.00017341599999999915, 0.0001743330000000022, 0.00017429200000000297, 0.00017366700000000235, 0.00017327699999999946, 0.0001736659999999994, 0.00017427799999999993, 0.00017409700000000153, 0.0001732780000000024, 0.00017379099999999953, 0.0001747370000000012, 0.00017470800000000258, 0.0001734590000000008, 0.0001743330000000022, 0.00017429200000000297, 0.00017367999999999897, 0.00017337499999999992, 0.0001741659999999999, 0.000173791999999999]</msg>
<status status="PASS" starttime="20201030 11:51:11.011" endtime="20201030 11:51:11.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.007" endtime="20201030 11:51:11.014"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.018" endtime="20201030 11:51:11.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.016" endtime="20201030 11:51:11.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.015" endtime="20201030 11:51:11.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.654" endtime="20201030 11:51:11.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.653" endtime="20201030 11:51:11.038"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.047" endtime="20201030 11:51:11.071"></status>
</kw>
<msg timestamp="20201030 11:51:11.071" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.046" endtime="20201030 11:51:11.071"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.072" endtime="20201030 11:51:11.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.075" endtime="20201030 11:51:11.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.043" endtime="20201030 11:51:11.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.041" endtime="20201030 11:51:11.077"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.083" endtime="20201030 11:51:11.371"></status>
</kw>
<msg timestamp="20201030 11:51:11.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.082" endtime="20201030 11:51:11.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.382" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021848806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022025056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.375" endtime="20201030 11:51:11.382"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.383" endtime="20201030 11:51:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.079" endtime="20201030 11:51:11.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.078" endtime="20201030 11:51:11.386"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.389" level="INFO">${RESULT} = [{'diff': 0.0001762500000000028}, {'diff': 0.00017691699999999866}, {'diff': 0.00017619400000000104}, {'diff': 0.0001751530000000008}, {'diff': 0.00017649999999999957}, {'diff': 0.00017572300000000263...</msg>
<status status="PASS" starttime="20201030 11:51:11.386" endtime="20201030 11:51:11.390"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.393" level="INFO">${ACCURACY} = {'diff': [0.0001762500000000028, 0.00017691699999999866, 0.00017619400000000104, 0.0001751530000000008, 0.00017649999999999957, 0.00017572300000000263, 0.00017642999999999825, 0.000176486, 0.000176429...</msg>
<status status="PASS" starttime="20201030 11:51:11.390" endtime="20201030 11:51:11.394"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.398" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.397" endtime="20201030 11:51:11.398"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.400" level="INFO">VALUE: [0.0001762500000000028, 0.00017691699999999866, 0.00017619400000000104, 0.0001751530000000008, 0.00017649999999999957, 0.00017572300000000263, 0.00017642999999999825, 0.000176486, 0.00017642999999999825, 0.00017623599999999975, 0.00017694500000000127, 0.00017618100000000095, 0.00017602699999999874, 0.00017661100000000013, 0.00017593000000000122, 0.00017645800000000086, 0.00017668000000000197, 0.0001751249999999982, 0.00017600000000000254, 0.0001751530000000008, 0.00017595800000000036, 0.00017541700000000063, 0.00017531999999999964, 0.0001768340000000007, 0.00017645800000000086, 0.00017597199999999993, 0.00017651399999999914, 0.0001756249999999987, 0.00017702799999999921, 0.0001760700000000004, 0.0001762500000000028, 0.00017591599999999818, 0.00017511099999999863, 0.00017666700000000188, 0.0001759310000000007, 0.0001754720000000029, 0.00017697199999999746, 0.0001754720000000029, 0.00017587499999999895, 0.00017644500000000077, 0.0001757639999999984, 0.000175485999999999, 0.0001766249999999997, 0.0001759859999999995, 0.00017608399999999996, 0.0001763189999999977, 0.00017641599999999868, 0.00017527800000000093, 0.00017591600000000165, 0.00017588899999999852]</msg>
<status status="PASS" starttime="20201030 11:51:11.399" endtime="20201030 11:51:11.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.394" endtime="20201030 11:51:11.424"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.428" endtime="20201030 11:51:11.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.426" endtime="20201030 11:51:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.425" endtime="20201030 11:51:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.039" endtime="20201030 11:51:11.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.039" endtime="20201030 11:51:11.448"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.457" endtime="20201030 11:51:11.482"></status>
</kw>
<msg timestamp="20201030 11:51:11.483" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.455" endtime="20201030 11:51:11.483"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.485" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.484" endtime="20201030 11:51:11.485"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.486" endtime="20201030 11:51:11.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.453" endtime="20201030 11:51:11.488"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.451" endtime="20201030 11:51:11.489"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.495" endtime="20201030 11:51:11.781"></status>
</kw>
<msg timestamp="20201030 11:51:11.784" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.493" endtime="20201030 11:51:11.784"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022585014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022763139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.785" endtime="20201030 11:51:11.792"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.793" endtime="20201030 11:51:11.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.491" endtime="20201030 11:51:11.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.489" endtime="20201030 11:51:11.796"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.799" level="INFO">${RESULT} = [{'diff': 0.0001781250000000012}, {'diff': 0.00017733300000000174}, {'diff': 0.00017741699999999916}, {'diff': 0.0001783059999999996}, {'diff': 0.0001780839999999985}, {'diff': 0.00017851399999999767}...</msg>
<status status="PASS" starttime="20201030 11:51:11.796" endtime="20201030 11:51:11.800"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:11.808" level="INFO">${ACCURACY} = {'diff': [0.0001781250000000012, 0.00017733300000000174, 0.00017741699999999916, 0.0001783059999999996, 0.0001780839999999985, 0.00017851399999999767, 0.00017851400000000114, 0.00017715299999999934, 0...</msg>
<status status="PASS" starttime="20201030 11:51:11.801" endtime="20201030 11:51:11.808"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.817" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:11.815" endtime="20201030 11:51:11.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.822" level="INFO">VALUE: [0.0001781250000000012, 0.00017733300000000174, 0.00017741699999999916, 0.0001783059999999996, 0.0001780839999999985, 0.00017851399999999767, 0.00017851400000000114, 0.00017715299999999934, 0.00017895899999999937, 0.0001781669999999999, 0.00017766700000000288, 0.00017838900000000102, 0.00017797200000000193, 0.0001789449999999998, 0.00017897200000000293, 0.00017868099999999998, 0.00017881999999999967, 0.00017801400000000064, 0.00017883299999999977, 0.00017886100000000238, 0.00017729199999999903, 0.00017776300000000092, 0.00017765200000000037, 0.00017852800000000071, 0.00017833299999999927, 0.00017743099999999873, 0.0001777909999999966, 0.00017833299999999927, 0.00017823599999999828, 0.00017804199999999978, 0.00017709700000000106, 0.00017783299999999877, 0.00017843099999999973, 0.00017793099999999923, 0.00017751400000000014, 0.00017718099999999848, 0.00017824999999999785, 0.0001772090000000011, 0.0001778470000000018, 0.00017786100000000138, 0.00017727799999999946, 0.00017788900000000052, 0.0001788060000000001, 0.0001788479999999988, 0.00017761099999999766, 0.00017724999999999685, 0.0001786109999999952, 0.00017876399999999792, 0.00017855599999999638, 0.00017808400000000196]</msg>
<status status="PASS" starttime="20201030 11:51:11.819" endtime="20201030 11:51:11.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.810" endtime="20201030 11:51:11.826"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.834" endtime="20201030 11:51:11.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.831" endtime="20201030 11:51:11.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.828" endtime="20201030 11:51:11.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.449" endtime="20201030 11:51:11.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.449" endtime="20201030 11:51:11.858"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.876" endtime="20201030 11:51:11.902"></status>
</kw>
<msg timestamp="20201030 11:51:11.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.873" endtime="20201030 11:51:11.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.904" endtime="20201030 11:51:11.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.906" endtime="20201030 11:51:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.867" endtime="20201030 11:51:11.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.863" endtime="20201030 11:51:11.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.915" endtime="20201030 11:51:12.201"></status>
</kw>
<msg timestamp="20201030 11:51:12.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035949514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036129222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.914" endtime="20201030 11:51:12.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.035949514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.036129222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.205" endtime="20201030 11:51:12.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.214" endtime="20201030 11:51:12.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.911" endtime="20201030 11:51:12.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.909" endtime="20201030 11:51:12.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.221" level="INFO">${RESULT} = [{'diff': 0.00017970800000000065}, {'diff': 0.00018013900000000277}, {'diff': 0.00018082000000000514}, {'diff': 0.00018056999999999795}, {'diff': 0.0001797779999999985}, {'diff': 0.000179180000000001}...</msg>
<status status="PASS" starttime="20201030 11:51:12.217" endtime="20201030 11:51:12.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.226" level="INFO">${ACCURACY} = {'diff': [0.00017970800000000065, 0.00018013900000000277, 0.00018082000000000514, 0.00018056999999999795, 0.0001797779999999985, 0.000179180000000001, 0.00018013900000000277, 0.0001794999999999991, 0....</msg>
<status status="PASS" starttime="20201030 11:51:12.222" endtime="20201030 11:51:12.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.230" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.229" endtime="20201030 11:51:12.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.233" level="INFO">VALUE: [0.00017970800000000065, 0.00018013900000000277, 0.00018082000000000514, 0.00018056999999999795, 0.0001797779999999985, 0.000179180000000001, 0.00018013900000000277, 0.0001794999999999991, 0.00018041700000000216, 0.00018102700000000027, 0.00018084699999999787, 0.00017968100000000098, 0.00017983300000000424, 0.0001801529999999954, 0.00018086100000000438, 0.00018005600000000482, 0.00018001399999999917, 0.00018094399999999539, 0.00018009700000000406, 0.00018091699999999572, 0.00018048600000000053, 0.00018020800000000115, 0.00017980599999999763, 0.00017963900000000227, 0.000179792000000005, 0.00017974999999999935, 0.0001790700000000034, 0.00017933300000000374, 0.00017943100000000073, 0.00018058299999999805, 0.00017973599999999978, 0.00018044499999999436, 0.000179180000000001, 0.0001804030000000026, 0.00018101400000000017, 0.00017934699999999637, 0.0001799030000000021, 0.00018058399999999752, 0.00018101400000000017, 0.00018073600000000078, 0.00017966699999999447, 0.00017941699999999422, 0.00017970800000000065, 0.00018052799999999924, 0.000179583000000004, 0.00018013899999999583, 0.00017951399999999867, 0.0001801109999999967, 0.00018040299999999565, 0.0001803749999999965]</msg>
<status status="PASS" starttime="20201030 11:51:12.231" endtime="20201030 11:51:12.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.227" endtime="20201030 11:51:12.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.238" endtime="20201030 11:51:12.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.236" endtime="20201030 11:51:12.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.235" endtime="20201030 11:51:12.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.860" endtime="20201030 11:51:12.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.859" endtime="20201030 11:51:12.258"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.267" endtime="20201030 11:51:12.291"></status>
</kw>
<msg timestamp="20201030 11:51:12.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.265" endtime="20201030 11:51:12.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.292" endtime="20201030 11:51:12.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.295" endtime="20201030 11:51:12.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.263" endtime="20201030 11:51:12.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.261" endtime="20201030 11:51:12.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.304" endtime="20201030 11:51:12.591"></status>
</kw>
<msg timestamp="20201030 11:51:12.594" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.302" endtime="20201030 11:51:12.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021986903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022168819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.595" endtime="20201030 11:51:12.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.603" endtime="20201030 11:51:12.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.300" endtime="20201030 11:51:12.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.298" endtime="20201030 11:51:12.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.610" level="INFO">${RESULT} = [{'diff': 0.00018191600000000072}, {'diff': 0.0001820550000000004}, {'diff': 0.00018299999999999914}, {'diff': 0.00018259699999999962}, {'diff': 0.0001825139999999982}, {'diff': 0.0001828330000000003}...</msg>
<status status="PASS" starttime="20201030 11:51:12.607" endtime="20201030 11:51:12.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.614" level="INFO">${ACCURACY} = {'diff': [0.00018191600000000072, 0.0001820550000000004, 0.00018299999999999914, 0.00018259699999999962, 0.0001825139999999982, 0.0001828330000000003, 0.00018173600000000179, 0.0001820139999999977, 0....</msg>
<status status="PASS" starttime="20201030 11:51:12.611" endtime="20201030 11:51:12.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.618" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:12.617" endtime="20201030 11:51:12.618"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.620" level="INFO">VALUE: [0.00018191600000000072, 0.0001820550000000004, 0.00018299999999999914, 0.00018259699999999962, 0.0001825139999999982, 0.0001828330000000003, 0.00018173600000000179, 0.0001820139999999977, 0.00018244499999999983, 0.0001821109999999987, 0.00018206899999999998, 0.00018162500000000123, 0.000182874999999999, 0.00018156999999999895, 0.000182665999999998, 0.00018290200000000215, 0.00018294400000000086, 0.00018193099999999976, 0.0001817780000000005, 0.0001822910000000011, 0.00018259699999999962, 0.0001820139999999977, 0.00018173600000000179, 0.00018134699999999837, 0.00018276399999999846, 0.00018170799999999918, 0.00018193000000000029, 0.00018259699999999962, 0.00018304200000000131, 0.000181584000000002, 0.00018266700000000094, 0.00018156900000000295, 0.000181971999999999, 0.00018118100000000248, 0.0001828200000000002, 0.00018112500000000073, 0.0001828879999999991, 0.0001820000000000016, 0.00018201400000000117, 0.00018116699999999944, 0.00018234799999999884, 0.00018268000000000104, 0.00018176400000000092, 0.0001826940000000006, 0.00018293100000000076, 0.00018154199999999981, 0.0001820979999999986, 0.00018262500000000223, 0.00018201400000000117, 0.0001821529999999974]</msg>
<status status="PASS" starttime="20201030 11:51:12.619" endtime="20201030 11:51:12.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.615" endtime="20201030 11:51:12.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.626" endtime="20201030 11:51:12.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.624" endtime="20201030 11:51:12.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.623" endtime="20201030 11:51:12.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.259" endtime="20201030 11:51:12.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.259" endtime="20201030 11:51:12.646"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.655" endtime="20201030 11:51:12.680"></status>
</kw>
<msg timestamp="20201030 11:51:12.680" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.653" endtime="20201030 11:51:12.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.683" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.681" endtime="20201030 11:51:12.683"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.684" endtime="20201030 11:51:12.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.651" endtime="20201030 11:51:12.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.649" endtime="20201030 11:51:12.686"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.692" endtime="20201030 11:51:12.977"></status>
</kw>
<msg timestamp="20201030 11:51:12.980" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.691" endtime="20201030 11:51:12.980"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.988" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022618194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022801431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.981" endtime="20201030 11:51:12.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.989" endtime="20201030 11:51:12.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.688" endtime="20201030 11:51:12.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.687" endtime="20201030 11:51:12.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.995" level="INFO">${RESULT} = [{'diff': 0.0001832369999999993}, {'diff': 0.00018369500000000108}, {'diff': 0.00018316700000000144}, {'diff': 0.00018302800000000174}, {'diff': 0.0001849309999999993}, {'diff': 0.0001838200000000012}...</msg>
<status status="PASS" starttime="20201030 11:51:12.992" endtime="20201030 11:51:12.996"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:12.999" level="INFO">${ACCURACY} = {'diff': [0.0001832369999999993, 0.00018369500000000108, 0.00018316700000000144, 0.00018302800000000174, 0.0001849309999999993, 0.0001838200000000012, 0.0001849309999999993, 0.00018331900000000123, 0....</msg>
<status status="PASS" starttime="20201030 11:51:12.996" endtime="20201030 11:51:12.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.004" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.003" endtime="20201030 11:51:13.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.006" level="INFO">VALUE: [0.0001832369999999993, 0.00018369500000000108, 0.00018316700000000144, 0.00018302800000000174, 0.0001849309999999993, 0.0001838200000000012, 0.0001849309999999993, 0.00018331900000000123, 0.0001836110000000002, 0.00018357000000000095, 0.0001831529999999984, 0.00018492999999999982, 0.00018363799999999986, 0.00018367999999999857, 0.00018395800000000143, 0.00018468099999999904, 0.0001844720000000015, 0.00018461099999999772, 0.0001846110000000012, 0.00018423600000000082, 0.00018409700000000112, 0.00018462500000000076, 0.00018441699999999922, 0.0001841110000000007, 0.00018447199999999803, 0.0001834309999999978, 0.00018324999999999939, 0.00018376399999999946, 0.00018415199999999993, 0.00018388899999999958, 0.00018436100000000094, 0.00018434700000000137, 0.000183972000000001, 0.00018372300000000022, 0.0001833330000000008, 0.00018420800000000168, 0.00018408299999999808, 0.00018422300000000072, 0.00018438900000000008, 0.00018425000000000039, 0.00018308300000000055, 0.00018462500000000076, 0.00018376399999999946, 0.00018450000000000064, 0.00018449999999999717, 0.0001839580000000049, 0.0001831109999999997, 0.00018373599999999685, 0.00018412500000000026, 0.00018409700000000112]</msg>
<status status="PASS" starttime="20201030 11:51:13.005" endtime="20201030 11:51:13.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.000" endtime="20201030 11:51:13.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.012" endtime="20201030 11:51:13.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.010" endtime="20201030 11:51:13.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.009" endtime="20201030 11:51:13.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.647" endtime="20201030 11:51:13.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.647" endtime="20201030 11:51:13.033"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.041" endtime="20201030 11:51:13.065"></status>
</kw>
<msg timestamp="20201030 11:51:13.065" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.040" endtime="20201030 11:51:13.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.066" endtime="20201030 11:51:13.068"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.069" endtime="20201030 11:51:13.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.037" endtime="20201030 11:51:13.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.035" endtime="20201030 11:51:13.071"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.078" endtime="20201030 11:51:13.363"></status>
</kw>
<msg timestamp="20201030 11:51:13.366" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.076" endtime="20201030 11:51:13.366"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021598903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021785306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.367" endtime="20201030 11:51:13.374"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.375" endtime="20201030 11:51:13.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.074" endtime="20201030 11:51:13.377"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.072" endtime="20201030 11:51:13.377"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.381" level="INFO">${RESULT} = [{'diff': 0.00018640300000000165}, {'diff': 0.00018651399999999874}, {'diff': 0.00018694500000000086}, {'diff': 0.00018591699999999725}, {'diff': 0.00018672200000000028}, {'diff': 0.000185582999999999...</msg>
<status status="PASS" starttime="20201030 11:51:13.378" endtime="20201030 11:51:13.381"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.386" level="INFO">${ACCURACY} = {'diff': [0.00018640300000000165, 0.00018651399999999874, 0.00018694500000000086, 0.00018591699999999725, 0.00018672200000000028, 0.00018558299999999958, 0.00018508300000000255, 0.00018566599999999753...</msg>
<status status="PASS" starttime="20201030 11:51:13.382" endtime="20201030 11:51:13.386"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.391" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.389" endtime="20201030 11:51:13.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.393" level="INFO">VALUE: [0.00018640300000000165, 0.00018651399999999874, 0.00018694500000000086, 0.00018591699999999725, 0.00018672200000000028, 0.00018558299999999958, 0.00018508300000000255, 0.00018566599999999753, 0.00018699999999999967, 0.0001856949999999996, 0.0001855140000000012, 0.00018654100000000187, 0.00018577799999999756, 0.00018508300000000255, 0.00018700000000000314, 0.00018620899999999968, 0.00018623699999999882, 0.0001868889999999991, 0.0001863469999999999, 0.00018643099999999732, 0.00018522199999999878, 0.00018627799999999806, 0.0001860270000000018, 0.0001857920000000006, 0.00018645899999999993, 0.00018554200000000035, 0.00018673599999999985, 0.00018615199999999846, 0.00018642999999999785, 0.0001867920000000016, 0.00018541700000000022, 0.00018679199999999813, 0.00018579099999999765, 0.00018565299999999743, 0.00018511099999999822, 0.0001856949999999996, 0.00018601399999999824, 0.0001862920000000011, 0.00018702699999999933, 0.00018543000000000032, 0.0001862920000000011, 0.00018552800000000078, 0.00018568100000000004, 0.00018668000000000157, 0.0001864859999999996, 0.00018611099999999922, 0.0001864859999999996, 0.0001869310000000013, 0.00018558400000000252, 0.00018627699999999858]</msg>
<status status="PASS" starttime="20201030 11:51:13.392" endtime="20201030 11:51:13.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.387" endtime="20201030 11:51:13.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.398" endtime="20201030 11:51:13.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.396" endtime="20201030 11:51:13.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.395" endtime="20201030 11:51:13.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.033" endtime="20201030 11:51:13.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.033" endtime="20201030 11:51:13.418"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.427" endtime="20201030 11:51:13.451"></status>
</kw>
<msg timestamp="20201030 11:51:13.452" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.426" endtime="20201030 11:51:13.452"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.454" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.453" endtime="20201030 11:51:13.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.455" endtime="20201030 11:51:13.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.423" endtime="20201030 11:51:13.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.421" endtime="20201030 11:51:13.458"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.464" endtime="20201030 11:51:13.753"></status>
</kw>
<msg timestamp="20201030 11:51:13.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.463" endtime="20201030 11:51:13.756"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.763" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021885486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022072569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.757" endtime="20201030 11:51:13.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.765" endtime="20201030 11:51:13.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.460" endtime="20201030 11:51:13.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.459" endtime="20201030 11:51:13.767"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.771" level="INFO">${RESULT} = [{'diff': 0.00018708300000000108}, {'diff': 0.0001874310000000018}, {'diff': 0.00018902699999999786}, {'diff': 0.00018715200000000293}, {'diff': 0.00018848599999999813}, {'diff': 0.0001875830000000015...</msg>
<status status="PASS" starttime="20201030 11:51:13.768" endtime="20201030 11:51:13.771"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:13.775" level="INFO">${ACCURACY} = {'diff': [0.00018708300000000108, 0.0001874310000000018, 0.00018902699999999786, 0.00018715200000000293, 0.00018848599999999813, 0.00018758300000000158, 0.00018855599999999945, 0.00018887499999999807,...</msg>
<status status="PASS" starttime="20201030 11:51:13.772" endtime="20201030 11:51:13.775"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.779" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:13.778" endtime="20201030 11:51:13.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.782" level="INFO">VALUE: [0.00018708300000000108, 0.0001874310000000018, 0.00018902699999999786, 0.00018715200000000293, 0.00018848599999999813, 0.00018758300000000158, 0.00018855599999999945, 0.00018887499999999807, 0.00018847200000000203, 0.0001876799999999991, 0.0001885829999999991, 0.00018904200000000038, 0.0001877630000000005, 0.00018791599999999978, 0.00018727799999999906, 0.0001878470000000014, 0.0001871530000000024, 0.00018901400000000124, 0.00018800000000000067, 0.00018850000000000117, 0.00018859700000000215, 0.00018770900000000118, 0.000187666999999999, 0.0001871249999999998, 0.00018761100000000072, 0.00018711100000000022, 0.0001871249999999998, 0.00018829199999999963, 0.0001890280000000008, 0.00018716599999999903, 0.00018774999999999695, 0.0001874440000000019, 0.000188360999999998, 0.00018841699999999975, 0.00018751399999999974, 0.00018775000000000042, 0.0001889579999999995, 0.00018813900000000036, 0.00018883399999999884, 0.000187764, 0.000187263, 0.00018868100000000304, 0.00018772200000000128, 0.00018816600000000003, 0.00018811100000000122, 0.000187764, 0.00018865300000000043, 0.00018888900000000458, 0.00018837499999999757, 0.00018775000000000042]</msg>
<status status="PASS" starttime="20201030 11:51:13.781" endtime="20201030 11:51:13.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.776" endtime="20201030 11:51:13.783"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.787" endtime="20201030 11:51:13.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.785" endtime="20201030 11:51:13.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.784" endtime="20201030 11:51:13.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.419" endtime="20201030 11:51:13.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.419" endtime="20201030 11:51:13.807"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.816" endtime="20201030 11:51:13.841"></status>
</kw>
<msg timestamp="20201030 11:51:13.841" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.814" endtime="20201030 11:51:13.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.842" endtime="20201030 11:51:13.844"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.845" endtime="20201030 11:51:13.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.812" endtime="20201030 11:51:13.847"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.810" endtime="20201030 11:51:13.848"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.854" endtime="20201030 11:51:14.164"></status>
</kw>
<msg timestamp="20201030 11:51:14.167" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.852" endtime="20201030 11:51:14.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.175" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022986042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023175792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.168" endtime="20201030 11:51:14.175"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.176" endtime="20201030 11:51:14.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.850" endtime="20201030 11:51:14.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.848" endtime="20201030 11:51:14.179"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.183" level="INFO">${RESULT} = [{'diff': 0.00018974999999999895}, {'diff': 0.0001899999999999992}, {'diff': 0.00019009700000000018}, {'diff': 0.00018990199999999874}, {'diff': 0.0001893890000000016}, {'diff': 0.0001908199999999978}...</msg>
<status status="PASS" starttime="20201030 11:51:14.179" endtime="20201030 11:51:14.183"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.187" level="INFO">${ACCURACY} = {'diff': [0.00018974999999999895, 0.0001899999999999992, 0.00019009700000000018, 0.00018990199999999874, 0.0001893890000000016, 0.0001908199999999978, 0.00018977800000000156, 0.00019104099999999943, 0...</msg>
<status status="PASS" starttime="20201030 11:51:14.184" endtime="20201030 11:51:14.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.191" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.190" endtime="20201030 11:51:14.192"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.194" level="INFO">VALUE: [0.00018974999999999895, 0.0001899999999999992, 0.00019009700000000018, 0.00018990199999999874, 0.0001893890000000016, 0.0001908199999999978, 0.00018977800000000156, 0.00019104099999999943, 0.0001900830000000006, 0.00018963900000000186, 0.0001908329999999979, 0.0001891250000000018, 0.00019008400000000009, 0.00019062499999999982, 0.00018918100000000007, 0.0001893190000000003, 0.00019065299999999896, 0.0001897779999999981, 0.0001898890000000021, 0.00019093000000000235, 0.00018990199999999874, 0.00018929199999999716, 0.00018991700000000125, 0.00019104099999999943, 0.0001899020000000022, 0.00018933299999999986, 0.00018945899999999946, 0.0001893060000000002, 0.000189667000000001, 0.00018929099999999768, 0.00019067999999999863, 0.00018973599999999938, 0.0001900280000000018, 0.00018923600000000235, 0.00018961099999999925, 0.00018918100000000007, 0.0001899999999999992, 0.00019024999999999945, 0.0001906809999999981, 0.00019088899999999964, 0.00019068100000000157, 0.00018999999999999573, 0.00018927800000000106, 0.0001899310000000043, 0.000190361, 0.000190361, 0.0001901939999999977, 0.0001905139999999958, 0.0001895139999999948, 0.00019080500000000222]</msg>
<status status="PASS" starttime="20201030 11:51:14.193" endtime="20201030 11:51:14.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.188" endtime="20201030 11:51:14.196"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.200" endtime="20201030 11:51:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.198" endtime="20201030 11:51:14.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.197" endtime="20201030 11:51:14.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.808" endtime="20201030 11:51:14.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.808" endtime="20201030 11:51:14.221"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.230" endtime="20201030 11:51:14.256"></status>
</kw>
<msg timestamp="20201030 11:51:14.256" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.228" endtime="20201030 11:51:14.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.259" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.257" endtime="20201030 11:51:14.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.260" endtime="20201030 11:51:14.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.226" endtime="20201030 11:51:14.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.223" endtime="20201030 11:51:14.263"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.270" endtime="20201030 11:51:14.557"></status>
</kw>
<msg timestamp="20201030 11:51:14.560" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.268" endtime="20201030 11:51:14.560"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.568" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022823069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023014083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.561" endtime="20201030 11:51:14.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.569" endtime="20201030 11:51:14.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.266" endtime="20201030 11:51:14.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.264" endtime="20201030 11:51:14.572"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.576" level="INFO">${RESULT} = [{'diff': 0.00019101399999999977}, {'diff': 0.0001921809999999996}, {'diff': 0.00019256999999999955}, {'diff': 0.0001929719999999996}, {'diff': 0.00019134700000000143}, {'diff': 0.00019298600000000263...</msg>
<status status="PASS" starttime="20201030 11:51:14.573" endtime="20201030 11:51:14.576"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.581" level="INFO">${ACCURACY} = {'diff': [0.00019101399999999977, 0.0001921809999999996, 0.00019256999999999955, 0.0001929719999999996, 0.00019134700000000143, 0.00019298600000000263, 0.00019237500000000157, 0.00019248599999999866, ...</msg>
<status status="PASS" starttime="20201030 11:51:14.577" endtime="20201030 11:51:14.582"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.586" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.585" endtime="20201030 11:51:14.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.588" level="INFO">VALUE: [0.00019101399999999977, 0.0001921809999999996, 0.00019256999999999955, 0.0001929719999999996, 0.00019134700000000143, 0.00019298600000000263, 0.00019237500000000157, 0.00019248599999999866, 0.00019187500000000107, 0.00019117999999999913, 0.0001919580000000025, 0.0001911809999999986, 0.00019258299999999964, 0.00019211100000000175, 0.00019120799999999827, 0.0001929719999999996, 0.00019120800000000174, 0.00019162500000000082, 0.000191361000000001, 0.00019180599999999923, 0.00019288900000000164, 0.00019162500000000082, 0.00019191699999999978, 0.00019269499999999967, 0.0001915549999999995, 0.0001919719999999986, 0.000191361000000001, 0.00019243000000000038, 0.00019194499999999892, 0.00019136200000000048, 0.00019201400000000077, 0.00019179100000000018, 0.00019281900000000032, 0.0001926810000000001, 0.00019119499999999817, 0.00019294400000000045, 0.000192055, 0.0001928329999999999, 0.0001920419999999999, 0.00019225000000000145, 0.00019238900000000114, 0.00019117999999999913, 0.00019291700000000078, 0.00019143099999999885, 0.00019147299999999756, 0.00019158400000000159, 0.0001929439999999935, 0.00019293000000000088, 0.0001910830000000016, 0.000192361000000002]</msg>
<status status="PASS" starttime="20201030 11:51:14.587" endtime="20201030 11:51:14.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.582" endtime="20201030 11:51:14.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.594" endtime="20201030 11:51:14.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.592" endtime="20201030 11:51:14.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.591" endtime="20201030 11:51:14.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.222" endtime="20201030 11:51:14.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.221" endtime="20201030 11:51:14.615"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.623" endtime="20201030 11:51:14.648"></status>
</kw>
<msg timestamp="20201030 11:51:14.648" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.622" endtime="20201030 11:51:14.648"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.651" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.649" endtime="20201030 11:51:14.651"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.652" endtime="20201030 11:51:14.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.619" endtime="20201030 11:51:14.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.617" endtime="20201030 11:51:14.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.661" endtime="20201030 11:51:14.948"></status>
</kw>
<msg timestamp="20201030 11:51:14.951" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.660" endtime="20201030 11:51:14.952"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022239458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022433875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.953" endtime="20201030 11:51:14.960"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.961" endtime="20201030 11:51:14.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.657" endtime="20201030 11:51:14.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.655" endtime="20201030 11:51:14.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.968" level="INFO">${RESULT} = [{'diff': 0.0001944169999999988}, {'diff': 0.00019330599999999726}, {'diff': 0.00019380500000000175}, {'diff': 0.0001947360000000009}, {'diff': 0.00019490299999999974}, {'diff': 0.00019324999999999898...</msg>
<status status="PASS" starttime="20201030 11:51:14.964" endtime="20201030 11:51:14.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:14.972" level="INFO">${ACCURACY} = {'diff': [0.0001944169999999988, 0.00019330599999999726, 0.00019380500000000175, 0.0001947360000000009, 0.00019490299999999974, 0.00019324999999999898, 0.0001943330000000014, 0.00019324999999999898, 0...</msg>
<status status="PASS" starttime="20201030 11:51:14.969" endtime="20201030 11:51:14.972"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.976" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:51:14.975" endtime="20201030 11:51:14.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.979" level="INFO">VALUE: [0.0001944169999999988, 0.00019330599999999726, 0.00019380500000000175, 0.0001947360000000009, 0.00019490299999999974, 0.00019324999999999898, 0.0001943330000000014, 0.00019324999999999898, 0.00019408300000000114, 0.00019427799999999912, 0.00019499999999999726, 0.0001937359999999999, 0.00019312499999999885, 0.00019326399999999855, 0.0001935420000000014, 0.00019398600000000016, 0.0001945139999999998, 0.00019458400000000112, 0.00019484800000000094, 0.00019311100000000275, 0.00019502799999999987, 0.00019494499999999845, 0.00019341700000000128, 0.00019343100000000085, 0.00019412499999999985, 0.00019430499999999878, 0.00019324999999999898, 0.0001943750000000001, 0.00019443100000000185, 0.00019398699999999963, 0.00019472200000000134, 0.0001931810000000006, 0.00019381999999999733, 0.00019440299999999924, 0.00019416699999999856, 0.00019395800000000102, 0.0001934030000000017, 0.0001945559999999985, 0.00019476400000000005, 0.00019345800000000052, 0.00019494399999999898, 0.00019427799999999912, 0.00019434800000000044, 0.0001948330000000019, 0.0001940689999999981, 0.0001946799999999957, 0.00019442999999999544, 0.00019416700000000203, 0.00019357000000000402, 0.00019475000000000048]</msg>
<status status="PASS" starttime="20201030 11:51:14.978" endtime="20201030 11:51:14.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.973" endtime="20201030 11:51:14.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.984" endtime="20201030 11:51:15.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.983" endtime="20201030 11:51:15.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.981" endtime="20201030 11:51:15.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.615" endtime="20201030 11:51:15.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.615" endtime="20201030 11:51:15.005"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.014" endtime="20201030 11:51:15.040"></status>
</kw>
<msg timestamp="20201030 11:51:15.041" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.013" endtime="20201030 11:51:15.041"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.044" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.042" endtime="20201030 11:51:15.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.045" endtime="20201030 11:51:15.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.010" endtime="20201030 11:51:15.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.008" endtime="20201030 11:51:15.047"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.054" endtime="20201030 11:51:15.341"></status>
</kw>
<msg timestamp="20201030 11:51:15.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023795764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023991181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.053" endtime="20201030 11:51:15.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023795764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023991181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.345" endtime="20201030 11:51:15.353"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.353" endtime="20201030 11:51:15.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.050" endtime="20201030 11:51:15.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.048" endtime="20201030 11:51:15.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.360" level="INFO">${RESULT} = [{'diff': 0.0001954169999999998}, {'diff': 0.00019630500000000078}, {'diff': 0.00019608299999999967}, {'diff': 0.00019563900000000092}, {'diff': 0.00019572299999999834}, {'diff': 0.0001966119999999988...</msg>
<status status="PASS" starttime="20201030 11:51:15.357" endtime="20201030 11:51:15.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.364" level="INFO">${ACCURACY} = {'diff': [0.0001954169999999998, 0.00019630500000000078, 0.00019608299999999967, 0.00019563900000000092, 0.00019572299999999834, 0.0001966119999999988, 0.00019615200000000152, 0.00019530500000000325, ...</msg>
<status status="PASS" starttime="20201030 11:51:15.361" endtime="20201030 11:51:15.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.369" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.368" endtime="20201030 11:51:15.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.371" level="INFO">VALUE: [0.0001954169999999998, 0.00019630500000000078, 0.00019608299999999967, 0.00019563900000000092, 0.00019572299999999834, 0.0001966119999999988, 0.00019615200000000152, 0.00019530500000000325, 0.00019566700000000006, 0.00019608300000000314, 0.00019526400000000055, 0.00019531999999999883, 0.0001953469999999985, 0.00019530599999999926, 0.00019633299999999992, 0.0001963339999999994, 0.00019623599999999894, 0.00019519399999999923, 0.00019677799999999815, 0.00019619400000000023, 0.0001958750000000016, 0.00019512500000000085, 0.00019606999999999958, 0.0001954859999999982, 0.0001954299999999999, 0.00019586100000000203, 0.00019562499999999788, 0.0001956799999999967, 0.0001965690000000006, 0.00019616700000000056, 0.0001968339999999999, 0.00019512500000000085, 0.00019661100000000278, 0.000196056, 0.00019611099999999881, 0.00019693100000000088, 0.00019573599999999497, 0.00019530499999999978, 0.0001968610000000065, 0.00019611099999999881, 0.00019576400000000105, 0.0001957089999999953, 0.00019513899999999695, 0.00019509699999999824, 0.00019558299999999917, 0.00019586099999999856, 0.00019676400000000205, 0.00019648700000000213, 0.00019597199999999565, 0.00019536099999999806]</msg>
<status status="PASS" starttime="20201030 11:51:15.370" endtime="20201030 11:51:15.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.365" endtime="20201030 11:51:15.374"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.378" endtime="20201030 11:51:15.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.376" endtime="20201030 11:51:15.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.375" endtime="20201030 11:51:15.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.006" endtime="20201030 11:51:15.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.006" endtime="20201030 11:51:15.398"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.407" endtime="20201030 11:51:15.432"></status>
</kw>
<msg timestamp="20201030 11:51:15.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.406" endtime="20201030 11:51:15.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.435" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.433" endtime="20201030 11:51:15.435"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.436" endtime="20201030 11:51:15.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.403" endtime="20201030 11:51:15.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.401" endtime="20201030 11:51:15.439"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.445" endtime="20201030 11:51:15.732"></status>
</kw>
<msg timestamp="20201030 11:51:15.735" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:15.444" endtime="20201030 11:51:15.735"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.743" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0225655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:15.736" endtime="20201030 11:51:15.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.745" endtime="20201030 11:51:15.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.441" endtime="20201030 11:51:15.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.439" endtime="20201030 11:51:15.747"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.751" level="INFO">${RESULT} = [{'diff': 0.00019818099999999866}, {'diff': 0.00019883399999999843}, {'diff': 0.00019763899999999945}, {'diff': 0.00019833299999999845}, {'diff': 0.00019733299999999745}, {'diff': 0.000198791999999999...</msg>
<status status="PASS" starttime="20201030 11:51:15.748" endtime="20201030 11:51:15.751"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:15.756" level="INFO">${ACCURACY} = {'diff': [0.00019818099999999866, 0.00019883399999999843, 0.00019763899999999945, 0.00019833299999999845, 0.00019733299999999745, 0.00019879199999999972, 0.00019836100000000106, 0.00019773600000000044...</msg>
<status status="PASS" starttime="20201030 11:51:15.752" endtime="20201030 11:51:15.757"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.761" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:51:15.760" endtime="20201030 11:51:15.761"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.764" level="INFO">VALUE: [0.00019818099999999866, 0.00019883399999999843, 0.00019763899999999945, 0.00019833299999999845, 0.00019733299999999745, 0.00019879199999999972, 0.00019836100000000106, 0.00019773600000000044, 0.0001989439999999995, 0.00019898599999999822, 0.00019827799999999965, 0.00019745900000000052, 0.00019826400000000008, 0.00019709700000000024, 0.0001972920000000017, 0.00019801399999999983, 0.00019730600000000126, 0.00019851399999999686, 0.000197847000000001, 0.00019726400000000255, 0.00019863900000000045, 0.00019726399999999908, 0.0001975690000000016, 0.00019751399999999933, 0.00019883300000000242, 0.00019861099999999784, 0.00019855599999999904, 0.00019709799999999972, 0.00019845800000000205, 0.000198750000000001, 0.00019777799999999915, 0.00019768100000000163, 0.0001980279999999994, 0.0001988890000000007, 0.00019881899999999939, 0.00019802800000000287, 0.00019894499999999898, 0.00019880600000000276, 0.00019769399999999826, 0.00019809700000000124, 0.00019813899999999995, 0.0001974730000000001, 0.00019841699999999934, 0.00019827700000000364, 0.00019792999999999894, 0.00019719399999999776, 0.00019819499999999823, 0.0001989720000000056, 0.00019797300000000406, 0.00019730500000000178]</msg>
<status status="PASS" starttime="20201030 11:51:15.762" endtime="20201030 11:51:15.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.757" endtime="20201030 11:51:15.765"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.769" endtime="20201030 11:51:15.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.767" endtime="20201030 11:51:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.766" endtime="20201030 11:51:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.399" endtime="20201030 11:51:15.789"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.399" endtime="20201030 11:51:15.789"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.799" endtime="20201030 11:51:15.824"></status>
</kw>
<msg timestamp="20201030 11:51:15.824" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.797" endtime="20201030 11:51:15.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.827" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.825" endtime="20201030 11:51:15.827"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.828" endtime="20201030 11:51:15.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.794" endtime="20201030 11:51:15.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.792" endtime="20201030 11:51:15.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.837" endtime="20201030 11:51:16.124"></status>
</kw>
<msg timestamp="20201030 11:51:16.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:15.836" endtime="20201030 11:51:16.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.135" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022503, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02270325, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:51:16.128" endtime="20201030 11:51:16.136"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.136" endtime="20201030 11:51:16.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.833" endtime="20201030 11:51:16.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.831" endtime="20201030 11:51:16.139"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.143" level="INFO">${RESULT} = [{'diff': 0.0002002500000000025}, {'diff': 0.00020030599999999732}, {'diff': 0.00020058400000000018}, {'diff': 0.00020097200000000065}, {'diff': 0.0001997639999999981}, {'diff': 0.00020009699999999978...</msg>
<status status="PASS" starttime="20201030 11:51:16.140" endtime="20201030 11:51:16.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.147" level="INFO">${ACCURACY} = {'diff': [0.0002002500000000025, 0.00020030599999999732, 0.00020058400000000018, 0.00020097200000000065, 0.0001997639999999981, 0.00020009699999999978, 0.0001994999999999983, 0.00020023599999999947, 0...</msg>
<status status="PASS" starttime="20201030 11:51:16.144" endtime="20201030 11:51:16.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.152" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.151" endtime="20201030 11:51:16.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.154" level="INFO">VALUE: [0.0002002500000000025, 0.00020030599999999732, 0.00020058400000000018, 0.00020097200000000065, 0.0001997639999999981, 0.00020009699999999978, 0.0001994999999999983, 0.00020023599999999947, 0.00020034700000000003, 0.00020074999999999954, 0.00020027800000000165, 0.00020019500000000023, 0.00020041700000000134, 0.00020097300000000012, 0.00020080500000000182, 0.0001995829999999997, 0.0002005830000000007, 0.00019962499999999841, 0.00019959700000000274, 0.00019962499999999841, 0.00020005600000000054, 0.0002004999999999993, 0.00019965300000000102, 0.0002001120000000023, 0.00020100000000000326, 0.00020055600000000104, 0.0001999440000000005, 0.00019969499999999973, 0.00019951400000000133, 0.000199847000000003, 0.00019920799999999933, 0.00020009699999999978, 0.00019933399999999893, 0.00020041700000000134, 0.00020093100000000141, 0.00019936100000000206, 0.00020032000000000036, 0.00019943099999999991, 0.0002002089999999998, 0.00020061099999999985, 0.00020049999999999582, 0.00019941700000000034, 0.00019962500000000188, 0.00020058400000000365, 0.00019927700000000464, 0.0001994999999999983, 0.00019994499999999998, 0.0001999999999999988, 0.00020052699999999896, 0.000200847000000004]</msg>
<status status="PASS" starttime="20201030 11:51:16.153" endtime="20201030 11:51:16.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.148" endtime="20201030 11:51:16.156"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.160" endtime="20201030 11:51:16.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.158" endtime="20201030 11:51:16.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.157" endtime="20201030 11:51:16.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.790" endtime="20201030 11:51:16.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.790" endtime="20201030 11:51:16.180"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.189" endtime="20201030 11:51:16.215"></status>
</kw>
<msg timestamp="20201030 11:51:16.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.188" endtime="20201030 11:51:16.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.218" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.216" endtime="20201030 11:51:16.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.219" endtime="20201030 11:51:16.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.185" endtime="20201030 11:51:16.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.183" endtime="20201030 11:51:16.222"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.228" endtime="20201030 11:51:16.515"></status>
</kw>
<msg timestamp="20201030 11:51:16.518" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.227" endtime="20201030 11:51:16.518"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.526" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023412569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023613819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.519" endtime="20201030 11:51:16.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.527" endtime="20201030 11:51:16.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.224" endtime="20201030 11:51:16.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.222" endtime="20201030 11:51:16.530"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.534" level="INFO">${RESULT} = [{'diff': 0.00020125000000000004}, {'diff': 0.00020242999999999997}, {'diff': 0.00020184699999999806}, {'diff': 0.00020112499999999991}, {'diff': 0.00020158299999999824}, {'diff': 0.000202013999999996...</msg>
<status status="PASS" starttime="20201030 11:51:16.531" endtime="20201030 11:51:16.534"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.538" level="INFO">${ACCURACY} = {'diff': [0.00020125000000000004, 0.00020242999999999997, 0.00020184699999999806, 0.00020112499999999991, 0.00020158299999999824, 0.0002020139999999969, 0.0002024030000000003, 0.00020261100000000185, ...</msg>
<status status="PASS" starttime="20201030 11:51:16.535" endtime="20201030 11:51:16.538"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.543" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.542" endtime="20201030 11:51:16.543"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.545" level="INFO">VALUE: [0.00020125000000000004, 0.00020242999999999997, 0.00020184699999999806, 0.00020112499999999991, 0.00020158299999999824, 0.0002020139999999969, 0.0002024030000000003, 0.00020261100000000185, 0.00020170800000000183, 0.00020213900000000048, 0.00020261099999999838, 0.00020227800000000018, 0.0002014579999999981, 0.0002025000000000013, 0.00020255599999999957, 0.0002022090000000018, 0.00020244399999999954, 0.00020248599999999825, 0.00020230599999999932, 0.00020283399999999896, 0.00020158400000000118, 0.0002028749999999982, 0.00020301400000000136, 0.00020144499999999801, 0.0002011670000000021, 0.0002017640000000001, 0.00020161100000000085, 0.00020293000000000047, 0.00020127800000000265, 0.00020201400000000036, 0.00020151300000000039, 0.00020140199999999983, 0.00020249999999999782, 0.0002027640000000011, 0.00020277800000000068, 0.00020293099999999994, 0.00020277699999999774, 0.00020211099999999788, 0.00020141700000000234, 0.0002020000000000008, 0.00020118100000000166, 0.00020129099999999928, 0.00020286100000000556, 0.0002012639999999996, 0.00020113899999999602, 0.00020201399999999342, 0.00020265299999999709, 0.00020206899999999917, 0.00020111100000000381, 0.00020262499999999795]</msg>
<status status="PASS" starttime="20201030 11:51:16.544" endtime="20201030 11:51:16.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.539" endtime="20201030 11:51:16.552"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.555" endtime="20201030 11:51:16.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.554" endtime="20201030 11:51:16.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.553" endtime="20201030 11:51:16.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.181" endtime="20201030 11:51:16.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.181" endtime="20201030 11:51:16.576"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.585" endtime="20201030 11:51:16.611"></status>
</kw>
<msg timestamp="20201030 11:51:16.611" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.584" endtime="20201030 11:51:16.611"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.612" endtime="20201030 11:51:16.614"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.615" endtime="20201030 11:51:16.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.581" endtime="20201030 11:51:16.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.579" endtime="20201030 11:51:16.618"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.624" endtime="20201030 11:51:16.911"></status>
</kw>
<msg timestamp="20201030 11:51:16.914" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.623" endtime="20201030 11:51:16.915"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022789889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022994806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.915" endtime="20201030 11:51:16.923"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.924" endtime="20201030 11:51:16.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.620" endtime="20201030 11:51:16.926"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.618" endtime="20201030 11:51:16.926"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.930" level="INFO">${RESULT} = [{'diff': 0.0002049169999999989}, {'diff': 0.00020318000000000072}, {'diff': 0.00020333299999999999}, {'diff': 0.00020449999999999982}, {'diff': 0.00020386099999999963}, {'diff': 0.0002044860000000002...</msg>
<status status="PASS" starttime="20201030 11:51:16.927" endtime="20201030 11:51:16.931"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:16.935" level="INFO">${ACCURACY} = {'diff': [0.0002049169999999989, 0.00020318000000000072, 0.00020333299999999999, 0.00020449999999999982, 0.00020386099999999963, 0.00020448600000000025, 0.0002044299999999985, 0.0002030830000000032, 0...</msg>
<status status="PASS" starttime="20201030 11:51:16.931" endtime="20201030 11:51:16.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.940" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:51:16.939" endtime="20201030 11:51:16.940"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.943" level="INFO">VALUE: [0.0002049169999999989, 0.00020318000000000072, 0.00020333299999999999, 0.00020449999999999982, 0.00020386099999999963, 0.00020448600000000025, 0.0002044299999999985, 0.0002030830000000032, 0.00020394400000000104, 0.00020344500000000001, 0.00020443099999999798, 0.000204026999999999, 0.0002035969999999998, 0.00020363899999999852, 0.00020412499999999945, 0.0002049169999999989, 0.00020334799999999903, 0.00020384700000000006, 0.00020327800000000118, 0.00020324999999999857, 0.0002035839999999997, 0.00020334699999999956, 0.0002041940000000013, 0.00020331900000000042, 0.00020334700000000303, 0.00020358300000000024, 0.0002040970000000003, 0.00020430600000000132, 0.00020374999999999907, 0.00020384700000000006, 0.00020488899999999977, 0.0002043749999999997, 0.0002045139999999994, 0.0002047779999999992, 0.0002035000000000023, 0.00020429200000000175, 0.00020313900000000149, 0.00020313900000000149, 0.00020444500000000448, 0.00020308299999999974, 0.00020361099999999938, 0.00020448600000000372, 0.00020476399999999617, 0.00020461100000000038, 0.00020463899999999952, 0.00020434800000000003, 0.0002040550000000016, 0.00020315300000000452, 0.00020416699999999816, 0.0002032640000000016]</msg>
<status status="PASS" starttime="20201030 11:51:16.941" endtime="20201030 11:51:16.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.936" endtime="20201030 11:51:16.944"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.948" endtime="20201030 11:51:16.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.946" endtime="20201030 11:51:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.945" endtime="20201030 11:51:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.577" endtime="20201030 11:51:16.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.577" endtime="20201030 11:51:16.969"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.978" endtime="20201030 11:51:17.003"></status>
</kw>
<msg timestamp="20201030 11:51:17.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.976" endtime="20201030 11:51:17.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.006" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.004" endtime="20201030 11:51:17.006"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.007" endtime="20201030 11:51:17.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.973" endtime="20201030 11:51:17.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.971" endtime="20201030 11:51:17.010"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.016" endtime="20201030 11:51:17.306"></status>
</kw>
<msg timestamp="20201030 11:51:17.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.015" endtime="20201030 11:51:17.309"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022231028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022436278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.310" endtime="20201030 11:51:17.317"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.318" endtime="20201030 11:51:17.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.012" endtime="20201030 11:51:17.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.010" endtime="20201030 11:51:17.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.325" level="INFO">${RESULT} = [{'diff': 0.00020525000000000057}, {'diff': 0.00020620900000000233}, {'diff': 0.00020677700000000174}, {'diff': 0.0002050970000000013}, {'diff': 0.00020536100000000113}, {'diff': 0.0002060000000000013...</msg>
<status status="PASS" starttime="20201030 11:51:17.322" endtime="20201030 11:51:17.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.329" level="INFO">${ACCURACY} = {'diff': [0.00020525000000000057, 0.00020620900000000233, 0.00020677700000000174, 0.0002050970000000013, 0.00020536100000000113, 0.00020600000000000132, 0.00020512500000000045, 0.00020645799999999964,...</msg>
<status status="PASS" starttime="20201030 11:51:17.326" endtime="20201030 11:51:17.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.334" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.333" endtime="20201030 11:51:17.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.336" level="INFO">VALUE: [0.00020525000000000057, 0.00020620900000000233, 0.00020677700000000174, 0.0002050970000000013, 0.00020536100000000113, 0.00020600000000000132, 0.00020512500000000045, 0.00020645799999999964, 0.00020662499999999848, 0.00020644500000000301, 0.00020593099999999948, 0.00020616700000000016, 0.00020641600000000093, 0.00020563900000000052, 0.00020512500000000045, 0.00020602800000000046, 0.00020623599999999853, 0.00020622199999999896, 0.00020609699999999884, 0.0002061949999999993, 0.00020658299999999977, 0.00020508399999999774, 0.00020665300000000109, 0.00020642999999999703, 0.00020679200000000078, 0.00020533299999999852, 0.00020643099999999998, 0.0002069439999999971, 0.00020583299999999902, 0.0002070560000000006, 0.00020695899999999962, 0.0002055140000000004, 0.00020534700000000156, 0.00020508300000000174, 0.00020552799999999996, 0.0002060689999999997, 0.00020599999999999785, 0.0002061520000000011, 0.00020505499999999913, 0.00020644500000000301, 0.00020529200000000275, 0.00020579099999999684, 0.00020648599999999878, 0.00020659699999999587, 0.00020527799999999624, 0.00020694500000000005, 0.00020633300000000299, 0.00020540200000000036, 0.0002059719999999987, 0.00020599999999999785]</msg>
<status status="PASS" starttime="20201030 11:51:17.335" endtime="20201030 11:51:17.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.330" endtime="20201030 11:51:17.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.341" endtime="20201030 11:51:17.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.340" endtime="20201030 11:51:17.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.339" endtime="20201030 11:51:17.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.969" endtime="20201030 11:51:17.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.969" endtime="20201030 11:51:17.362"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.371" endtime="20201030 11:51:17.397"></status>
</kw>
<msg timestamp="20201030 11:51:17.398" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.370" endtime="20201030 11:51:17.398"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.399" endtime="20201030 11:51:17.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.401" endtime="20201030 11:51:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.367" endtime="20201030 11:51:17.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.365" endtime="20201030 11:51:17.404"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.411" endtime="20201030 11:51:17.696"></status>
</kw>
<msg timestamp="20201030 11:51:17.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.409" endtime="20201030 11:51:17.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.707" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023657444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023864764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.700" endtime="20201030 11:51:17.707"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.708" endtime="20201030 11:51:17.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.406" endtime="20201030 11:51:17.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.405" endtime="20201030 11:51:17.711"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.715" level="INFO">${RESULT} = [{'diff': 0.00020732000000000042}, {'diff': 0.0002080980000000003}, {'diff': 0.00020884699999999812}, {'diff': 0.000207930999999998}, {'diff': 0.00020858300000000177}, {'diff': 0.00020736099999999966}...</msg>
<status status="PASS" starttime="20201030 11:51:17.712" endtime="20201030 11:51:17.715"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:17.719" level="INFO">${ACCURACY} = {'diff': [0.00020732000000000042, 0.0002080980000000003, 0.00020884699999999812, 0.000207930999999998, 0.00020858300000000177, 0.00020736099999999966, 0.0002085980000000008, 0.00020902700000000052, 0....</msg>
<status status="PASS" starttime="20201030 11:51:17.716" endtime="20201030 11:51:17.719"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.724" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:51:17.723" endtime="20201030 11:51:17.724"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.726" level="INFO">VALUE: [0.00020732000000000042, 0.0002080980000000003, 0.00020884699999999812, 0.000207930999999998, 0.00020858300000000177, 0.00020736099999999966, 0.0002085980000000008, 0.00020902700000000052, 0.00020904199999999956, 0.0002078470000000006, 0.00020894500000000205, 0.0002084019999999999, 0.00020763899999999905, 0.00020861099999999744, 0.00020827799999999924, 0.00020899999999999738, 0.00020816699999999869, 0.00020816699999999869, 0.00020716700000000116, 0.00020891699999999944, 0.00020738900000000227, 0.00020819499999999783, 0.00020709699999999984, 0.00020799999999999985, 0.00020763899999999905, 0.00020818099999999826, 0.00020777699999999927, 0.00020859700000000134, 0.00020884699999999812, 0.0002085279999999995, 0.0002074309999999975, 0.000207930999999998, 0.00020787499999999973, 0.00020804200000000203, 0.0002086110000000009, 0.00020843099999999504, 0.0002079170000000019, 0.00020869400000000232, 0.00020715300000000159, 0.00020845900000000112, 0.00020736199999999566, 0.0002084300000000025, 0.0002087080000000019, 0.00020826399999999967, 0.00020761100000000338, 0.00020848599999999384, 0.00020819400000000182, 0.00020812500000000345, 0.00020834699999999762, 0.00020759699999999687]</msg>
<status status="PASS" starttime="20201030 11:51:17.725" endtime="20201030 11:51:17.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.720" endtime="20201030 11:51:17.728"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.732" endtime="20201030 11:51:17.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.731" endtime="20201030 11:51:17.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.729" endtime="20201030 11:51:17.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.363" endtime="20201030 11:51:17.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.363" endtime="20201030 11:51:17.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.166" endtime="20201030 11:51:17.753"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:39.066" endtime="20201030 11:51:17.754" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.763" endtime="20201030 11:51:17.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.762" endtime="20201030 11:51:17.784"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.797" endtime="20201030 11:51:17.817"></status>
</kw>
<msg timestamp="20201030 11:51:17.817" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.796" endtime="20201030 11:51:17.817"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.818" endtime="20201030 11:51:17.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.823" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:17.821" endtime="20201030 11:51:17.823"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:17.793" endtime="20201030 11:51:17.824"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:17.790" endtime="20201030 11:51:17.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.789" endtime="20201030 11:51:17.825"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:17.829" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:17.828" endtime="20201030 11:51:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.826" endtime="20201030 11:51:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.788" endtime="20201030 11:51:17.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.787" endtime="20201030 11:51:17.830"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.830" endtime="20201030 11:51:17.832"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.786" endtime="20201030 11:51:17.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.784" endtime="20201030 11:51:17.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.760" endtime="20201030 11:51:17.833"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.845" endtime="20201030 11:51:17.860"></status>
</kw>
<msg timestamp="20201030 11:51:17.860" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.843" endtime="20201030 11:51:17.860"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.863" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.861" endtime="20201030 11:51:17.864"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.865" endtime="20201030 11:51:17.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.839" endtime="20201030 11:51:17.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.837" endtime="20201030 11:51:17.867"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.874" endtime="20201030 11:51:18.160"></status>
</kw>
<msg timestamp="20201030 11:51:18.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074131194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074140069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.872" endtime="20201030 11:51:18.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.074131194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.074140069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.165" endtime="20201030 11:51:18.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.173" endtime="20201030 11:51:18.175"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.870" endtime="20201030 11:51:18.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.868" endtime="20201030 11:51:18.176"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.180" level="INFO">${RESULT} = [{'diff': 8.875000000005406e-06}, {'diff': 9.499999999995623e-06}, {'diff': 8.847000000006267e-06}, {'diff': 9.472999999995957e-06}, {'diff': 9.485999999989114e-06}, {'diff': 8.902999999990668e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:18.177" endtime="20201030 11:51:18.180"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.185" level="INFO">${ACCURACY} = {'diff': [8.875000000005406e-06, 9.499999999995623e-06, 8.847000000006267e-06, 9.472999999995957e-06, 9.485999999989114e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.347000000005766e-06, 8.8750...</msg>
<status status="PASS" starttime="20201030 11:51:18.181" endtime="20201030 11:51:18.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.190" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.189" endtime="20201030 11:51:18.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.193" level="INFO">VALUE: [8.875000000005406e-06, 9.499999999995623e-06, 8.847000000006267e-06, 9.472999999995957e-06, 9.485999999989114e-06, 8.902999999990668e-06, 8.903000000004546e-06, 8.347000000005766e-06, 8.875000000005406e-06, 8.29200000000696e-06, 8.916000000011581e-06, 9.514000000002132e-06, 9.486000000002992e-06, 1.0097000000000578e-05, 8.874999999991529e-06, 9.486000000002992e-06, 1.0082999999994069e-05, 8.278000000000452e-06, 8.250000000001312e-06, 8.860999999998898e-06, 8.847000000006267e-06, 8.846999999992389e-06, 9.486000000002992e-06, 1.0097000000000578e-05, 8.278000000000452e-06, 1.008400000000742e-05, 9.527999999994763e-06, 9.457999999989974e-06, 1.0082999999994069e-05, 9.471999999996483e-06, 1.0083999999993543e-05, 9.472000000010361e-06, 8.916999999997177e-06, 8.26400000000782e-06, 8.250000000001312e-06, 8.277999999986574e-06, 9.459000000003326e-06, 8.26400000000782e-06, 8.875000000005406e-06, 8.915999999997704e-06, 8.874999999991529e-06, 8.875000000005406e-06, 8.805000000000618e-06, 8.833999999999231e-06, 1.0083000000007947e-05, 9.430000000004712e-06, 1.0082999999994069e-05, 9.471999999996483e-06, 8.875000000005406e-06, 8.347000000005766e-06]</msg>
<status status="PASS" starttime="20201030 11:51:18.191" endtime="20201030 11:51:18.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.185" endtime="20201030 11:51:18.194"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.197" endtime="20201030 11:51:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.196" endtime="20201030 11:51:18.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.194" endtime="20201030 11:51:18.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.835" endtime="20201030 11:51:18.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.835" endtime="20201030 11:51:18.218"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.228" endtime="20201030 11:51:18.242"></status>
</kw>
<msg timestamp="20201030 11:51:18.243" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.225" endtime="20201030 11:51:18.243"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.245" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.244" endtime="20201030 11:51:18.245"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.246" endtime="20201030 11:51:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.223" endtime="20201030 11:51:18.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.220" endtime="20201030 11:51:18.249"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.256" endtime="20201030 11:51:18.542"></status>
</kw>
<msg timestamp="20201030 11:51:18.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.254" endtime="20201030 11:51:18.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022972083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022983375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:18.547" endtime="20201030 11:51:18.555"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.555" endtime="20201030 11:51:18.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.251" endtime="20201030 11:51:18.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.250" endtime="20201030 11:51:18.558"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.562" level="INFO">${RESULT} = [{'diff': 1.1291999999999552e-05}, {'diff': 1.0722000000001203e-05}, {'diff': 1.0652999999999357e-05}, {'diff': 1.0693999999998594e-05}, {'diff': 1.1305999999999122e-05}, {'diff': 1.1291000000000079e-...</msg>
<status status="PASS" starttime="20201030 11:51:18.559" endtime="20201030 11:51:18.562"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.567" level="INFO">${ACCURACY} = {'diff': [1.1291999999999552e-05, 1.0722000000001203e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.1305999999999122e-05, 1.1291000000000079e-05, 1.1903000000000608e-05, 1.1277999999999982e-05...</msg>
<status status="PASS" starttime="20201030 11:51:18.563" endtime="20201030 11:51:18.568"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.572" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.571" endtime="20201030 11:51:18.572"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.575" level="INFO">VALUE: [1.1291999999999552e-05, 1.0722000000001203e-05, 1.0652999999999357e-05, 1.0693999999998594e-05, 1.1305999999999122e-05, 1.1291000000000079e-05, 1.1903000000000608e-05, 1.1277999999999982e-05, 1.1277999999999982e-05, 1.127699999999704e-05, 1.1291999999999552e-05, 1.1277999999999982e-05, 1.0680999999998497e-05, 1.0083000000001008e-05, 1.0679999999999024e-05, 1.1875000000001468e-05, 1.1903000000000608e-05, 1.0681000000001967e-05, 1.0084000000000481e-05, 1.1291000000000079e-05, 1.0666000000002923e-05, 1.1957999999999414e-05, 1.1888999999997568e-05, 1.0694000000002063e-05, 1.0708999999997637e-05, 1.0694000000002063e-05, 1.0069000000001438e-05, 1.0708000000001633e-05, 1.1250000000000843e-05, 1.1292000000003022e-05, 1.1291999999999552e-05, 1.1902000000001134e-05, 1.0098000000000051e-05, 1.1291000000000079e-05, 1.1277999999999982e-05, 1.1903000000000608e-05, 1.0083000000001008e-05, 1.1292000000003022e-05, 1.0680000000002493e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.1847999999998332e-05, 1.1903000000000608e-05, 1.1889000000001038e-05, 1.1862000000001371e-05, 1.1888999999997568e-05, 1.0680999999998497e-05, 1.1903000000000608e-05, 1.1277000000000509e-05, 1.1291999999999552e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.573" endtime="20201030 11:51:18.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.568" endtime="20201030 11:51:18.576"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.579" endtime="20201030 11:51:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.578" endtime="20201030 11:51:18.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.577" endtime="20201030 11:51:18.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.219" endtime="20201030 11:51:18.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.218" endtime="20201030 11:51:18.600"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.610" endtime="20201030 11:51:18.625"></status>
</kw>
<msg timestamp="20201030 11:51:18.625" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.608" endtime="20201030 11:51:18.625"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.626" endtime="20201030 11:51:18.628"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.629" endtime="20201030 11:51:18.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.605" endtime="20201030 11:51:18.631"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.603" endtime="20201030 11:51:18.631"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.638" endtime="20201030 11:51:18.925"></status>
</kw>
<msg timestamp="20201030 11:51:18.928" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:18.637" endtime="20201030 11:51:18.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023079306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023093, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:18.929" endtime="20201030 11:51:18.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.938" endtime="20201030 11:51:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.634" endtime="20201030 11:51:18.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.632" endtime="20201030 11:51:18.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:18.945" level="INFO">${RESULT} = [{'diff': 1.3693999999998124e-05}, {'diff': 1.2486000000002523e-05}, {'diff': 1.3084000000000012e-05}, {'diff': 1.2500000000002093e-05}, {'diff': 1.3124999999999248e-05}, {'diff': 1.2513999999998193e-...</msg>
<status status="PASS" starttime="20201030 11:51:18.941" endtime="20201030 11:51:18.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:18.949" level="INFO">${ACCURACY} = {'diff': [1.3693999999998124e-05, 1.2486000000002523e-05, 1.3084000000000012e-05, 1.2500000000002093e-05, 1.3124999999999248e-05, 1.2513999999998193e-05, 1.3152000000002384e-05, 1.4320000000001692e-05...</msg>
<status status="PASS" starttime="20201030 11:51:18.946" endtime="20201030 11:51:18.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.954" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:18.953" endtime="20201030 11:51:18.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.956" level="INFO">VALUE: [1.3693999999998124e-05, 1.2486000000002523e-05, 1.3084000000000012e-05, 1.2500000000002093e-05, 1.3124999999999248e-05, 1.2513999999998193e-05, 1.3152000000002384e-05, 1.4320000000001692e-05, 1.3709000000000637e-05, 1.3110999999999678e-05, 1.3722000000000734e-05, 1.2499999999998623e-05, 1.3097000000000109e-05, 1.4306000000002123e-05, 1.3097000000000109e-05, 1.3041999999997833e-05, 1.2500000000002093e-05, 1.2499999999998623e-05, 1.3708000000001164e-05, 1.3125000000002718e-05, 1.3695000000001067e-05, 1.3097000000000109e-05, 1.2541000000001329e-05, 1.3708999999997168e-05, 1.3069000000000969e-05, 1.3097000000000109e-05, 1.2499999999998623e-05, 1.2528000000001233e-05, 1.3152999999998388e-05, 1.2513999999998193e-05, 1.3097000000000109e-05, 1.3110999999999678e-05, 1.2500000000002093e-05, 1.3084000000000012e-05, 1.3722000000000734e-05, 1.2499999999998623e-05, 1.2500000000002093e-05, 1.3722000000000734e-05, 1.1889000000001038e-05, 1.1903000000000608e-05, 1.4291999999999083e-05, 1.3111000000003148e-05, 1.2500000000002093e-05, 1.3708000000001164e-05, 1.2528000000001233e-05, 1.3151999999998915e-05, 1.2486000000002523e-05, 1.2527000000001759e-05, 1.3110999999999678e-05, 1.3180000000001524e-05]</msg>
<status status="PASS" starttime="20201030 11:51:18.955" endtime="20201030 11:51:18.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.950" endtime="20201030 11:51:18.957"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.961" endtime="20201030 11:51:18.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.959" endtime="20201030 11:51:18.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.958" endtime="20201030 11:51:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.601" endtime="20201030 11:51:18.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.600" endtime="20201030 11:51:18.982"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.992" endtime="20201030 11:51:19.009"></status>
</kw>
<msg timestamp="20201030 11:51:19.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.990" endtime="20201030 11:51:19.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.012" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.010" endtime="20201030 11:51:19.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.013" endtime="20201030 11:51:19.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.987" endtime="20201030 11:51:19.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.985" endtime="20201030 11:51:19.016"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.022" endtime="20201030 11:51:19.309"></status>
</kw>
<msg timestamp="20201030 11:51:19.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.021" endtime="20201030 11:51:19.312"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.321" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023391431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023406347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.313" endtime="20201030 11:51:19.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.322" endtime="20201030 11:51:19.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.018" endtime="20201030 11:51:19.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.016" endtime="20201030 11:51:19.325"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.329" level="INFO">${RESULT} = [{'diff': 1.4916000000000235e-05}, {'diff': 1.616699999999749e-05}, {'diff': 1.4958000000002414e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.4929999999999805e-05}, {'diff': 1.4305999999998653e-05...</msg>
<status status="PASS" starttime="20201030 11:51:19.326" endtime="20201030 11:51:19.330"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.334" level="INFO">${ACCURACY} = {'diff': [1.4916000000000235e-05, 1.616699999999749e-05, 1.4958000000002414e-05, 1.611099999999921e-05, 1.4929999999999805e-05, 1.4305999999998653e-05, 1.4875000000000999e-05, 1.4943999999999374e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:19.331" endtime="20201030 11:51:19.335"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.339" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.338" endtime="20201030 11:51:19.339"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.341" level="INFO">VALUE: [1.4916000000000235e-05, 1.616699999999749e-05, 1.4958000000002414e-05, 1.611099999999921e-05, 1.4929999999999805e-05, 1.4305999999998653e-05, 1.4875000000000999e-05, 1.4943999999999374e-05, 1.5443999999999874e-05, 1.4903000000000138e-05, 1.4903000000000138e-05, 1.4361000000000929e-05, 1.4319999999998223e-05, 1.4305999999998653e-05, 1.552700000000129e-05, 1.5542000000000333e-05, 1.4929999999999805e-05, 1.613900000000182e-05, 1.4305000000002649e-05, 1.5514000000001194e-05, 1.5542000000000333e-05, 1.615299999999792e-05, 1.431899999999875e-05, 1.5528000000000763e-05, 1.4930999999999278e-05, 1.4903000000000138e-05, 1.4957999999998944e-05, 1.552699999999782e-05, 1.551299999999825e-05, 1.4931000000002748e-05, 1.4236000000000804e-05, 1.4916999999999708e-05, 1.554100000000086e-05, 1.4305999999998653e-05, 1.4888999999997099e-05, 1.4917000000003178e-05, 1.4334000000001262e-05, 1.4930999999999278e-05, 1.5527999999997294e-05, 1.4334000000001262e-05, 1.5527999999997294e-05, 1.4916999999999708e-05, 1.613899999999835e-05, 1.5528000000000763e-05, 1.4360999999997459e-05, 1.4944999999998848e-05, 1.431899999999875e-05, 1.430499999999918e-05, 1.5528000000000763e-05, 1.4929999999999805e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.340" endtime="20201030 11:51:19.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.335" endtime="20201030 11:51:19.344"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.348" endtime="20201030 11:51:19.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.346" endtime="20201030 11:51:19.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.345" endtime="20201030 11:51:19.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.983" endtime="20201030 11:51:19.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.983" endtime="20201030 11:51:19.368"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.377" endtime="20201030 11:51:19.392"></status>
</kw>
<msg timestamp="20201030 11:51:19.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.376" endtime="20201030 11:51:19.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.396" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.394" endtime="20201030 11:51:19.396"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.397" endtime="20201030 11:51:19.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.373" endtime="20201030 11:51:19.399"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.371" endtime="20201030 11:51:19.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.406" endtime="20201030 11:51:19.692"></status>
</kw>
<msg timestamp="20201030 11:51:19.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.405" endtime="20201030 11:51:19.695"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.703" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022482972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022499708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.696" endtime="20201030 11:51:19.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.704" endtime="20201030 11:51:19.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.402" endtime="20201030 11:51:19.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.400" endtime="20201030 11:51:19.707"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:19.711" level="INFO">${RESULT} = [{'diff': 1.6735999999999834e-05}, {'diff': 1.733300000000132e-05}, {'diff': 1.611099999999921e-05}, {'diff': 1.7958000000001945e-05}, {'diff': 1.7320000000001223e-05}, {'diff': 1.7943999999998905e-05...</msg>
<status status="PASS" starttime="20201030 11:51:19.708" endtime="20201030 11:51:19.711"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:19.716" level="INFO">${ACCURACY} = {'diff': [1.6735999999999834e-05, 1.733300000000132e-05, 1.611099999999921e-05, 1.7958000000001945e-05, 1.7320000000001223e-05, 1.7943999999998905e-05, 1.734700000000089e-05, 1.6764000000002444e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:51:19.712" endtime="20201030 11:51:19.717"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.721" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:19.720" endtime="20201030 11:51:19.721"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.724" level="INFO">VALUE: [1.6735999999999834e-05, 1.733300000000132e-05, 1.611099999999921e-05, 1.7958000000001945e-05, 1.7320000000001223e-05, 1.7943999999998905e-05, 1.734700000000089e-05, 1.6764000000002444e-05, 1.793099999999881e-05, 1.6735999999999834e-05, 1.7333999999997324e-05, 1.794499999999838e-05, 1.612499999999878e-05, 1.7943999999998905e-05, 1.6695000000000598e-05, 1.7348000000000363e-05, 1.793100000000228e-05, 1.7333999999997324e-05, 1.6665999999998515e-05, 1.794499999999838e-05, 1.6735999999999834e-05, 1.612499999999878e-05, 1.7333999999997324e-05, 1.734700000000089e-05, 1.7347999999996894e-05, 1.6722000000000264e-05, 1.612499999999878e-05, 1.6749999999999404e-05, 1.6735999999999834e-05, 1.733300000000132e-05, 1.6736999999999308e-05, 1.6735999999999834e-05, 1.791699999999924e-05, 1.615300000000139e-05, 1.790299999999967e-05, 1.733300000000132e-05, 1.7929999999999335e-05, 1.6735999999999834e-05, 1.734700000000089e-05, 1.7944000000002375e-05, 1.6749999999999404e-05, 1.736100000000046e-05, 1.727699999999957e-05, 1.7306000000001653e-05, 1.734700000000089e-05, 1.794499999999838e-05, 1.7320000000001223e-05, 1.7334000000000793e-05, 1.6709000000000168e-05, 1.609699999999964e-05]</msg>
<status status="PASS" starttime="20201030 11:51:19.722" endtime="20201030 11:51:19.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.717" endtime="20201030 11:51:19.725"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:19.729" endtime="20201030 11:51:19.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.727" endtime="20201030 11:51:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.726" endtime="20201030 11:51:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.369" endtime="20201030 11:51:19.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.369" endtime="20201030 11:51:19.750"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.759" endtime="20201030 11:51:19.774"></status>
</kw>
<msg timestamp="20201030 11:51:19.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.757" endtime="20201030 11:51:19.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:19.777" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:19.776" endtime="20201030 11:51:19.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.778" endtime="20201030 11:51:19.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.754" endtime="20201030 11:51:19.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.752" endtime="20201030 11:51:19.781"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:19.788" endtime="20201030 11:51:20.074"></status>
</kw>
<msg timestamp="20201030 11:51:20.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:19.786" endtime="20201030 11:51:20.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022466792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022486528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.078" endtime="20201030 11:51:20.086"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.087" endtime="20201030 11:51:20.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.783" endtime="20201030 11:51:20.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.781" endtime="20201030 11:51:20.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.093" level="INFO">${RESULT} = [{'diff': 1.9735999999999365e-05}, {'diff': 1.854099999999692e-05}, {'diff': 1.8541999999999864e-05}, {'diff': 1.8014000000000224e-05}, {'diff': 1.9750000000002405e-05}, {'diff': 1.8485999999998115e-0...</msg>
<status status="PASS" starttime="20201030 11:51:20.090" endtime="20201030 11:51:20.094"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.098" level="INFO">${ACCURACY} = {'diff': [1.9735999999999365e-05, 1.854099999999692e-05, 1.8541999999999864e-05, 1.8014000000000224e-05, 1.9750000000002405e-05, 1.8485999999998115e-05, 2.030500000000171e-05, 1.9764000000001974e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:20.094" endtime="20201030 11:51:20.098"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.102" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.101" endtime="20201030 11:51:20.103"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.105" level="INFO">VALUE: [1.9735999999999365e-05, 1.854099999999692e-05, 1.8541999999999864e-05, 1.8014000000000224e-05, 1.9750000000002405e-05, 1.8485999999998115e-05, 2.030500000000171e-05, 1.9764000000001974e-05, 1.911099999999874e-05, 1.855499999999996e-05, 1.9792000000001114e-05, 1.913900000000135e-05, 1.8555999999999434e-05, 1.9138000000001876e-05, 1.90829999999996e-05, 1.913900000000135e-05, 1.854099999999692e-05, 1.8555999999999434e-05, 1.913899999999788e-05, 1.913900000000135e-05, 1.854100000000039e-05, 1.913899999999788e-05, 1.915299999999745e-05, 1.8528000000000294e-05, 1.8541999999999864e-05, 1.9806000000000684e-05, 1.8541999999999864e-05, 1.8500000000001154e-05, 1.909699999999917e-05, 1.9764000000001974e-05, 1.915300000000092e-05, 1.9749999999998935e-05, 1.9166000000001016e-05, 1.8597999999998144e-05, 1.9151999999997976e-05, 1.854099999999692e-05, 2.0306000000001184e-05, 1.9735999999999365e-05, 1.794500000000185e-05, 1.8527999999996825e-05, 1.915300000000092e-05, 1.8541999999999864e-05, 1.911099999999874e-05, 1.9806000000000684e-05, 1.8500000000001154e-05, 1.9749999999998935e-05, 1.976299999999903e-05, 1.9749999999998935e-05, 1.8541999999999864e-05, 1.8555999999999434e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.103" endtime="20201030 11:51:20.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.099" endtime="20201030 11:51:20.106"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.110" endtime="20201030 11:51:20.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.109" endtime="20201030 11:51:20.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.107" endtime="20201030 11:51:20.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.750" endtime="20201030 11:51:20.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:19.750" endtime="20201030 11:51:20.131"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.140" endtime="20201030 11:51:20.156"></status>
</kw>
<msg timestamp="20201030 11:51:20.157" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.138" endtime="20201030 11:51:20.157"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.159" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.158" endtime="20201030 11:51:20.160"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.161" endtime="20201030 11:51:20.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.136" endtime="20201030 11:51:20.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.134" endtime="20201030 11:51:20.164"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.172" endtime="20201030 11:51:20.457"></status>
</kw>
<msg timestamp="20201030 11:51:20.460" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.170" endtime="20201030 11:51:20.461"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023397528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023417917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.462" endtime="20201030 11:51:20.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.470" endtime="20201030 11:51:20.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.167" endtime="20201030 11:51:20.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.165" endtime="20201030 11:51:20.473"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.477" level="INFO">${RESULT} = [{'diff': 2.038899999999913e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.0958000000001475e-05}, {'diff': 2.215299999999698e-05}, {'diff': 2.1556000000002434e-05}, {'diff': 2.037499999999956e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:20.474" endtime="20201030 11:51:20.477"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.481" level="INFO">${ACCURACY} = {'diff': [2.038899999999913e-05, 2.0986000000000615e-05, 2.0958000000001475e-05, 2.215299999999698e-05, 2.1556000000002434e-05, 2.037499999999956e-05, 2.1570000000002004e-05, 2.220899999999873e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:20.478" endtime="20201030 11:51:20.481"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.486" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.485" endtime="20201030 11:51:20.486"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.488" level="INFO">VALUE: [2.038899999999913e-05, 2.0986000000000615e-05, 2.0958000000001475e-05, 2.215299999999698e-05, 2.1556000000002434e-05, 2.037499999999956e-05, 2.1570000000002004e-05, 2.220899999999873e-05, 2.158299999999863e-05, 2.0986000000000615e-05, 2.034700000000042e-05, 2.1556000000002434e-05, 2.037499999999956e-05, 2.037499999999956e-05, 2.0971999999997576e-05, 2.0915999999999296e-05, 2.0958000000001475e-05, 2.093100000000181e-05, 2.0361999999999464e-05, 2.037499999999956e-05, 2.0347999999999894e-05, 2.037499999999956e-05, 2.1499999999997216e-05, 2.156899999999906e-05, 2.1583999999998105e-05, 2.1570000000002004e-05, 2.154099999999992e-05, 2.1000000000000185e-05, 2.152700000000035e-05, 2.034700000000042e-05, 2.0971999999997576e-05, 2.2180000000000116e-05, 2.216700000000002e-05, 2.156899999999906e-05, 2.1555999999998965e-05, 2.158299999999863e-05, 2.094500000000138e-05, 2.0957999999998006e-05, 2.219499999999916e-05, 2.036099999999999e-05, 2.156900000000253e-05, 2.036099999999999e-05, 2.04029999999987e-05, 2.154099999999992e-05, 2.095900000000095e-05, 2.088899999999963e-05, 2.0972000000001045e-05, 2.15969999999982e-05, 2.1000000000000185e-05, 2.156900000000253e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.487" endtime="20201030 11:51:20.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.482" endtime="20201030 11:51:20.493"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.497" endtime="20201030 11:51:20.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.495" endtime="20201030 11:51:20.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.494" endtime="20201030 11:51:20.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.132" endtime="20201030 11:51:20.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.131" endtime="20201030 11:51:20.518"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.527" endtime="20201030 11:51:20.542"></status>
</kw>
<msg timestamp="20201030 11:51:20.542" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.525" endtime="20201030 11:51:20.543"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.543" endtime="20201030 11:51:20.545"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.546" endtime="20201030 11:51:20.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.522" endtime="20201030 11:51:20.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.520" endtime="20201030 11:51:20.549"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.555" endtime="20201030 11:51:20.841"></status>
</kw>
<msg timestamp="20201030 11:51:20.844" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.554" endtime="20201030 11:51:20.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022367514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022390875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.845" endtime="20201030 11:51:20.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.854" endtime="20201030 11:51:20.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.551" endtime="20201030 11:51:20.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.549" endtime="20201030 11:51:20.857"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:20.861" level="INFO">${RESULT} = [{'diff': 2.336099999999952e-05}, {'diff': 2.2151999999997507e-05}, {'diff': 2.2764000000001505e-05}, {'diff': 2.395900000000048e-05}, {'diff': 2.216700000000002e-05}, {'diff': 2.3333999999999855e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:20.857" endtime="20201030 11:51:20.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:20.912" level="INFO">${ACCURACY} = {'diff': [2.336099999999952e-05, 2.2151999999997507e-05, 2.2764000000001505e-05, 2.395900000000048e-05, 2.216700000000002e-05, 2.3333999999999855e-05, 2.2179999999996647e-05, 2.2736000000002365e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:20.862" endtime="20201030 11:51:20.913"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.917" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:20.916" endtime="20201030 11:51:20.917"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.920" level="INFO">VALUE: [2.336099999999952e-05, 2.2151999999997507e-05, 2.2764000000001505e-05, 2.395900000000048e-05, 2.216700000000002e-05, 2.3333999999999855e-05, 2.2179999999996647e-05, 2.2736000000002365e-05, 2.2762999999998562e-05, 2.3320000000000285e-05, 2.338899999999866e-05, 2.336099999999952e-05, 2.2750000000001935e-05, 2.4056000000001465e-05, 2.3347999999999425e-05, 2.2791999999997176e-05, 2.4013999999999286e-05, 2.3333999999999855e-05, 2.2778000000001075e-05, 2.2721999999999326e-05, 2.4000000000003185e-05, 2.4027999999998856e-05, 2.22229999999983e-05, 2.337499999999909e-05, 2.216700000000002e-05, 2.215299999999698e-05, 2.3971999999997107e-05, 2.2180000000000116e-05, 2.3972000000000576e-05, 2.2778000000001075e-05, 2.337499999999909e-05, 2.2763999999998036e-05, 2.336099999999952e-05, 2.334699999999995e-05, 2.3986000000000146e-05, 2.2165999999997077e-05, 2.2764000000001505e-05, 2.3957999999997537e-05, 2.2776999999998132e-05, 2.218099999999959e-05, 2.338899999999866e-05, 2.2764000000001505e-05, 2.216700000000002e-05, 2.337500000000256e-05, 2.34030000000017e-05, 2.2792000000000645e-05, 2.337500000000256e-05, 2.3999999999999716e-05, 2.2778000000001075e-05, 2.337499999999909e-05]</msg>
<status status="PASS" starttime="20201030 11:51:20.918" endtime="20201030 11:51:20.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.913" endtime="20201030 11:51:20.921"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:20.925" endtime="20201030 11:51:20.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.923" endtime="20201030 11:51:20.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.922" endtime="20201030 11:51:20.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.518" endtime="20201030 11:51:20.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.518" endtime="20201030 11:51:20.945"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.955" endtime="20201030 11:51:20.971"></status>
</kw>
<msg timestamp="20201030 11:51:20.971" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.953" endtime="20201030 11:51:20.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:20.974" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:20.972" endtime="20201030 11:51:20.974"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.975" endtime="20201030 11:51:20.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.950" endtime="20201030 11:51:20.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.948" endtime="20201030 11:51:20.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:20.985" endtime="20201030 11:51:21.271"></status>
</kw>
<msg timestamp="20201030 11:51:21.274" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:20.983" endtime="20201030 11:51:21.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.282" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.275" endtime="20201030 11:51:21.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.283" endtime="20201030 11:51:21.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.981" endtime="20201030 11:51:21.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.979" endtime="20201030 11:51:21.286"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.290" level="INFO">${RESULT} = [{'diff': 2.465299999999948e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.5832999999999412e-05}, {'diff': 2.512500000000084e-05}, {'diff': 2.4596999999997732e-05}, {'diff': 2.5832999999999412e-05...</msg>
<status status="PASS" starttime="20201030 11:51:21.287" endtime="20201030 11:51:21.290"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.294" level="INFO">${ACCURACY} = {'diff': [2.465299999999948e-05, 2.4596999999997732e-05, 2.5832999999999412e-05, 2.512500000000084e-05, 2.4596999999997732e-05, 2.5832999999999412e-05, 2.458300000000163e-05, 2.512500000000084e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:51:21.291" endtime="20201030 11:51:21.295"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.300" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.298" endtime="20201030 11:51:21.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.302" level="INFO">VALUE: [2.465299999999948e-05, 2.4596999999997732e-05, 2.5832999999999412e-05, 2.512500000000084e-05, 2.4596999999997732e-05, 2.5832999999999412e-05, 2.458300000000163e-05, 2.512500000000084e-05, 2.4582999999998162e-05, 2.519500000000216e-05, 2.519499999999869e-05, 2.5208000000002256e-05, 2.5179999999999647e-05, 2.5778000000000606e-05, 2.4040999999998952e-05, 2.5790999999997233e-05, 2.458300000000163e-05, 2.45970000000012e-05, 2.394500000000091e-05, 2.461100000000077e-05, 2.5762999999998093e-05, 2.4598000000000675e-05, 2.3986000000000146e-05, 2.4598000000000675e-05, 2.4569999999998066e-05, 2.4596999999997732e-05, 2.518099999999912e-05, 2.520900000000173e-05, 2.5193999999999217e-05, 2.5193999999999217e-05, 2.515299999999998e-05, 2.519499999999869e-05, 2.520899999999826e-05, 2.5193999999999217e-05, 2.463899999999991e-05, 2.5792000000000176e-05, 2.5736000000001896e-05, 2.4513999999999786e-05, 2.4513999999999786e-05, 2.5805000000000272e-05, 2.5250000000000966e-05, 2.640299999999776e-05, 2.5805000000000272e-05, 2.5179999999999647e-05, 2.458300000000163e-05, 2.5818999999999842e-05, 2.5805000000000272e-05, 2.5805999999999746e-05, 2.5792000000000176e-05, 2.5194000000002686e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.301" endtime="20201030 11:51:21.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.295" endtime="20201030 11:51:21.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.308" endtime="20201030 11:51:21.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.306" endtime="20201030 11:51:21.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.305" endtime="20201030 11:51:21.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.946" endtime="20201030 11:51:21.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:20.946" endtime="20201030 11:51:21.328"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.337" endtime="20201030 11:51:21.353"></status>
</kw>
<msg timestamp="20201030 11:51:21.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.336" endtime="20201030 11:51:21.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.356" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.355" endtime="20201030 11:51:21.357"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.358" endtime="20201030 11:51:21.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.333" endtime="20201030 11:51:21.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.331" endtime="20201030 11:51:21.361"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.368" endtime="20201030 11:51:21.654"></status>
</kw>
<msg timestamp="20201030 11:51:21.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.366" endtime="20201030 11:51:21.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022582306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.658" endtime="20201030 11:51:21.666"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.667" endtime="20201030 11:51:21.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.363" endtime="20201030 11:51:21.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.361" endtime="20201030 11:51:21.669"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:21.674" level="INFO">${RESULT} = [{'diff': 2.6999999999999247e-05}, {'diff': 2.638899999999819e-05}, {'diff': 2.6999999999999247e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.6999999999999247e-05}, {'diff': 2.7597000000000732e-0...</msg>
<status status="PASS" starttime="20201030 11:51:21.670" endtime="20201030 11:51:21.674"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:21.679" level="INFO">${ACCURACY} = {'diff': [2.6999999999999247e-05, 2.638899999999819e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.7597000000000732e-05, 2.7014000000002286e-05, 2.638899999999819e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:21.675" endtime="20201030 11:51:21.679"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.683" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:21.682" endtime="20201030 11:51:21.684"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.686" level="INFO">VALUE: [2.6999999999999247e-05, 2.638899999999819e-05, 2.6999999999999247e-05, 2.7013999999998817e-05, 2.6999999999999247e-05, 2.7597000000000732e-05, 2.7014000000002286e-05, 2.638899999999819e-05, 2.6999999999999247e-05, 2.7611000000000302e-05, 2.6388000000002187e-05, 2.6999999999999247e-05, 2.6360999999999052e-05, 2.638900000000166e-05, 2.7694000000001717e-05, 2.7611999999999776e-05, 2.6347999999998956e-05, 2.8207999999998318e-05, 2.6333999999999386e-05, 2.640300000000123e-05, 2.818099999999865e-05, 2.7624999999999872e-05, 2.640300000000123e-05, 2.6360999999999052e-05, 2.7611000000000302e-05, 2.8222000000001357e-05, 2.6972000000000107e-05, 2.6346999999999482e-05, 2.64170000000008e-05, 2.6374999999998622e-05, 2.8193999999998748e-05, 2.7611000000000302e-05, 2.7028000000001856e-05, 2.6360999999999052e-05, 2.6999999999999247e-05, 2.638900000000166e-05, 2.7054999999998053e-05, 2.7611000000000302e-05, 2.6332999999999912e-05, 2.64170000000008e-05, 2.7624999999999872e-05, 2.8236000000000927e-05, 2.7611999999999776e-05, 2.638900000000166e-05, 2.7624999999999872e-05, 2.8250000000000497e-05, 2.8208000000001787e-05, 2.7569000000001592e-05, 2.638900000000166e-05, 2.6999999999999247e-05]</msg>
<status status="PASS" starttime="20201030 11:51:21.685" endtime="20201030 11:51:21.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.680" endtime="20201030 11:51:21.692"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:21.696" endtime="20201030 11:51:21.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.694" endtime="20201030 11:51:21.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.693" endtime="20201030 11:51:21.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.329" endtime="20201030 11:51:21.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.329" endtime="20201030 11:51:21.716"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.725" endtime="20201030 11:51:21.741"></status>
</kw>
<msg timestamp="20201030 11:51:21.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.724" endtime="20201030 11:51:21.742"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:21.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:21.743" endtime="20201030 11:51:21.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.745" endtime="20201030 11:51:21.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.721" endtime="20201030 11:51:21.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.719" endtime="20201030 11:51:21.748"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:21.755" endtime="20201030 11:51:22.042"></status>
</kw>
<msg timestamp="20201030 11:51:22.045" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:21.753" endtime="20201030 11:51:22.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.054" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022526403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022556431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.046" endtime="20201030 11:51:22.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.055" endtime="20201030 11:51:22.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.750" endtime="20201030 11:51:22.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.748" endtime="20201030 11:51:22.058"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.062" level="INFO">${RESULT} = [{'diff': 3.0027999999997917e-05}, {'diff': 2.8264000000000067e-05}, {'diff': 2.8818999999999373e-05}, {'diff': 2.8804999999999803e-05}, {'diff': 2.819500000000169e-05}, {'diff': 3.0014000000001817e-0...</msg>
<status status="PASS" starttime="20201030 11:51:22.059" endtime="20201030 11:51:22.062"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.066" level="INFO">${ACCURACY} = {'diff': [3.0027999999997917e-05, 2.8264000000000067e-05, 2.8818999999999373e-05, 2.8804999999999803e-05, 2.819500000000169e-05, 3.0014000000001817e-05, 2.9375000000001622e-05, 2.8749999999997528e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:22.063" endtime="20201030 11:51:22.066"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.071" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.070" endtime="20201030 11:51:22.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.073" level="INFO">VALUE: [3.0027999999997917e-05, 2.8264000000000067e-05, 2.8818999999999373e-05, 2.8804999999999803e-05, 2.819500000000169e-05, 3.0014000000001817e-05, 2.9375000000001622e-05, 2.8749999999997528e-05, 2.9417000000000332e-05, 2.8833000000002412e-05, 2.822299999999736e-05, 2.8277999999999637e-05, 2.8804999999999803e-05, 2.8833000000002412e-05, 2.8207999999998318e-05, 2.9403000000000762e-05, 2.8778000000000137e-05, 2.8804999999999803e-05, 2.8791999999999707e-05, 2.8820000000002316e-05, 2.8236000000000927e-05, 2.9361000000002052e-05, 2.8818999999999373e-05, 2.8222000000001357e-05, 3.0028000000001387e-05, 3.0013999999998348e-05, 2.9417000000000332e-05, 2.9486000000002177e-05, 2.945900000000251e-05, 2.9430000000000428e-05, 2.9362000000001526e-05, 2.9485999999998708e-05, 2.8819999999998847e-05, 2.822299999999736e-05, 2.9443999999999998e-05, 2.9417000000000332e-05, 2.940199999999782e-05, 3.0042000000000957e-05, 3.0028000000001387e-05, 2.8832999999998943e-05, 3.0027999999997917e-05, 3.0013999999998348e-05, 2.8804999999999803e-05, 2.9985999999999208e-05, 2.9958000000000068e-05, 2.9402999999997292e-05, 2.8818999999999373e-05, 2.8208000000001787e-05, 2.8791999999999707e-05, 2.8208000000001787e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.072" endtime="20201030 11:51:22.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.067" endtime="20201030 11:51:22.075"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.079" endtime="20201030 11:51:22.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.077" endtime="20201030 11:51:22.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.076" endtime="20201030 11:51:22.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.717" endtime="20201030 11:51:22.099"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:21.717" endtime="20201030 11:51:22.099"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.108" endtime="20201030 11:51:22.125"></status>
</kw>
<msg timestamp="20201030 11:51:22.125" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.107" endtime="20201030 11:51:22.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.126" endtime="20201030 11:51:22.128"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.129" endtime="20201030 11:51:22.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.104" endtime="20201030 11:51:22.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.102" endtime="20201030 11:51:22.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.138" endtime="20201030 11:51:22.425"></status>
</kw>
<msg timestamp="20201030 11:51:22.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.137" endtime="20201030 11:51:22.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023495681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023526917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.429" endtime="20201030 11:51:22.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.438" endtime="20201030 11:51:22.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.134" endtime="20201030 11:51:22.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.132" endtime="20201030 11:51:22.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.445" level="INFO">${RESULT} = [{'diff': 3.123600000000046e-05}, {'diff': 3.183300000000194e-05}, {'diff': 3.1304999999998834e-05}, {'diff': 3.0014000000001817e-05}, {'diff': 3.062500000000287e-05}, {'diff': 3.184700000000151e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:22.441" endtime="20201030 11:51:22.445"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.449" level="INFO">${ACCURACY} = {'diff': [3.123600000000046e-05, 3.183300000000194e-05, 3.1304999999998834e-05, 3.0014000000001817e-05, 3.062500000000287e-05, 3.184700000000151e-05, 3.065299999999854e-05, 3.183300000000194e-05, 3.18...</msg>
<status status="PASS" starttime="20201030 11:51:22.446" endtime="20201030 11:51:22.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.454" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.452" endtime="20201030 11:51:22.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.457" level="INFO">VALUE: [3.123600000000046e-05, 3.183300000000194e-05, 3.1304999999998834e-05, 3.0014000000001817e-05, 3.062500000000287e-05, 3.184700000000151e-05, 3.065299999999854e-05, 3.183300000000194e-05, 3.181999999999838e-05, 3.063900000000244e-05, 3.183300000000194e-05, 3.065299999999854e-05, 3.125000000000003e-05, 3.066699999999811e-05, 3.06379999999995e-05, 3.1832999999998474e-05, 3.122300000000036e-05, 3.1790999999999764e-05, 3.123600000000046e-05, 3.063899999999897e-05, 3.120799999999785e-05, 3.0041999999997487e-05, 3.177799999999967e-05, 3.125000000000003e-05, 3.1276999999999694e-05, 3.0012999999998874e-05, 3.06249999999994e-05, 3.123599999999699e-05, 3.183400000000142e-05, 3.066599999999864e-05, 3.0013999999998348e-05, 3.1832999999998474e-05, 3.125000000000003e-05, 3.123600000000046e-05, 3.184700000000151e-05, 3.122200000000089e-05, 3.1832999999998474e-05, 3.1832999999998474e-05, 3.065199999999907e-05, 3.123600000000046e-05, 3.123600000000046e-05, 3.06249999999994e-05, 3.0028000000001387e-05, 3.183300000000194e-05, 3.122300000000036e-05, 3.06249999999994e-05, 3.123600000000046e-05, 3.181999999999838e-05, 3.059700000000026e-05, 3.1832999999998474e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.455" endtime="20201030 11:51:22.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.450" endtime="20201030 11:51:22.458"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.462" endtime="20201030 11:51:22.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.461" endtime="20201030 11:51:22.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.459" endtime="20201030 11:51:22.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.100" endtime="20201030 11:51:22.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.100" endtime="20201030 11:51:22.483"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.492" endtime="20201030 11:51:22.509"></status>
</kw>
<msg timestamp="20201030 11:51:22.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.490" endtime="20201030 11:51:22.510"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.512" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.511" endtime="20201030 11:51:22.512"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.513" endtime="20201030 11:51:22.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.488" endtime="20201030 11:51:22.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.486" endtime="20201030 11:51:22.516"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.523" endtime="20201030 11:51:22.808"></status>
</kw>
<msg timestamp="20201030 11:51:22.811" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.521" endtime="20201030 11:51:22.812"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022725931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022758972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.813" endtime="20201030 11:51:22.820"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.821" endtime="20201030 11:51:22.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.518" endtime="20201030 11:51:22.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.516" endtime="20201030 11:51:22.824"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:22.828" level="INFO">${RESULT} = [{'diff': 3.3040999999997545e-05}, {'diff': 3.3624999999998934e-05}, {'diff': 3.302800000000092e-05}, {'diff': 3.363900000000197e-05}, {'diff': 3.3638999999998503e-05}, {'diff': 3.3069000000000154e-05...</msg>
<status status="PASS" starttime="20201030 11:51:22.825" endtime="20201030 11:51:22.828"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:22.833" level="INFO">${ACCURACY} = {'diff': [3.3040999999997545e-05, 3.3624999999998934e-05, 3.302800000000092e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3069000000000154e-05, 3.426399999999913e-05, 3.244399999999953e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:22.829" endtime="20201030 11:51:22.833"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.838" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:22.837" endtime="20201030 11:51:22.838"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.840" level="INFO">VALUE: [3.3040999999997545e-05, 3.3624999999998934e-05, 3.302800000000092e-05, 3.363900000000197e-05, 3.3638999999998503e-05, 3.3069000000000154e-05, 3.426399999999913e-05, 3.244399999999953e-05, 3.304200000000049e-05, 3.302799999999745e-05, 3.305600000000006e-05, 3.244399999999953e-05, 3.241699999999986e-05, 3.2444999999999e-05, 3.372199999999992e-05, 3.3027000000001444e-05, 3.309800000000224e-05, 3.306999999999963e-05, 3.2444999999999e-05, 3.366699999999764e-05, 3.368099999999721e-05, 3.244399999999953e-05, 3.3124999999998433e-05, 3.3624999999998934e-05, 3.304200000000049e-05, 3.370800000000035e-05, 3.424999999999956e-05, 3.423599999999999e-05, 3.304200000000049e-05, 3.238900000000072e-05, 3.311100000000233e-05, 3.366699999999764e-05, 3.363900000000197e-05, 3.247199999999867e-05, 3.244399999999953e-05, 3.365200000000207e-05, 3.243099999999943e-05, 3.3110999999998864e-05, 3.248599999999824e-05, 3.366700000000111e-05, 3.242999999999996e-05, 3.3638999999998503e-05, 3.306999999999963e-05, 3.2444999999999e-05, 3.3638999999998503e-05, 3.3026999999997975e-05, 3.308400000000267e-05, 3.244399999999953e-05, 3.24579999999991e-05, 3.366599999999817e-05]</msg>
<status status="PASS" starttime="20201030 11:51:22.839" endtime="20201030 11:51:22.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.834" endtime="20201030 11:51:22.842"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.846" endtime="20201030 11:51:22.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.844" endtime="20201030 11:51:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.843" endtime="20201030 11:51:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.484" endtime="20201030 11:51:22.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.483" endtime="20201030 11:51:22.866"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.875" endtime="20201030 11:51:22.892"></status>
</kw>
<msg timestamp="20201030 11:51:22.892" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.874" endtime="20201030 11:51:22.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.895" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.893" endtime="20201030 11:51:22.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.896" endtime="20201030 11:51:22.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.871" endtime="20201030 11:51:22.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.869" endtime="20201030 11:51:22.899"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.905" endtime="20201030 11:51:23.193"></status>
</kw>
<msg timestamp="20201030 11:51:23.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:22.904" endtime="20201030 11:51:23.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022527861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.197" endtime="20201030 11:51:23.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.206" endtime="20201030 11:51:23.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.901" endtime="20201030 11:51:23.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.899" endtime="20201030 11:51:23.209"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.213" level="INFO">${RESULT} = [{'diff': 3.550000000000081e-05}, {'diff': 3.429200000000174e-05}, {'diff': 3.545799999999863e-05}, {'diff': 3.4861000000000614e-05}, {'diff': 3.4847000000001044e-05}, {'diff': 3.424999999999956e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:23.209" endtime="20201030 11:51:23.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.217" level="INFO">${ACCURACY} = {'diff': [3.550000000000081e-05, 3.429200000000174e-05, 3.545799999999863e-05, 3.4861000000000614e-05, 3.4847000000001044e-05, 3.424999999999956e-05, 3.548599999999777e-05, 3.4902999999999323e-05, 3.4...</msg>
<status status="PASS" starttime="20201030 11:51:23.214" endtime="20201030 11:51:23.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.222" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.221" endtime="20201030 11:51:23.222"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.224" level="INFO">VALUE: [3.550000000000081e-05, 3.429200000000174e-05, 3.545799999999863e-05, 3.4861000000000614e-05, 3.4847000000001044e-05, 3.424999999999956e-05, 3.548599999999777e-05, 3.4902999999999323e-05, 3.424999999999956e-05, 3.426399999999913e-05, 3.4861000000000614e-05, 3.547300000000114e-05, 3.6083000000002724e-05, 3.547300000000114e-05, 3.4833000000001474e-05, 3.545900000000157e-05, 3.4847000000001044e-05, 3.4861000000000614e-05, 3.4290999999998795e-05, 3.423599999999999e-05, 3.6013000000001405e-05, 3.4861000000000614e-05, 3.4847000000001044e-05, 3.424999999999956e-05, 3.424999999999956e-05, 3.5445000000002e-05, 3.4861000000000614e-05, 3.424999999999956e-05, 3.547200000000167e-05, 3.426399999999913e-05, 3.60840000000022e-05, 3.4832999999998004e-05, 3.548599999999777e-05, 3.544399999999906e-05, 3.6068999999999685e-05, 3.4847000000001044e-05, 3.606999999999916e-05, 3.4861000000000614e-05, 3.426399999999913e-05, 3.605599999999959e-05, 3.423599999999999e-05, 3.547299999999767e-05, 3.60840000000022e-05, 3.54589999999981e-05, 3.420900000000032e-05, 3.4861000000000614e-05, 3.42779999999987e-05, 3.6069000000003154e-05, 3.4276999999999225e-05, 3.601400000000088e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.223" endtime="20201030 11:51:23.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.218" endtime="20201030 11:51:23.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.229" endtime="20201030 11:51:23.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.228" endtime="20201030 11:51:23.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.227" endtime="20201030 11:51:23.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.867" endtime="20201030 11:51:23.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.867" endtime="20201030 11:51:23.250"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.259" endtime="20201030 11:51:23.277"></status>
</kw>
<msg timestamp="20201030 11:51:23.278" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.258" endtime="20201030 11:51:23.278"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.279" endtime="20201030 11:51:23.280"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.281" endtime="20201030 11:51:23.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.255" endtime="20201030 11:51:23.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.253" endtime="20201030 11:51:23.284"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.291" endtime="20201030 11:51:23.576"></status>
</kw>
<msg timestamp="20201030 11:51:23.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023449736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.289" endtime="20201030 11:51:23.579"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.588" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023449736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023487556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.580" endtime="20201030 11:51:23.588"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.589" endtime="20201030 11:51:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.286" endtime="20201030 11:51:23.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.285" endtime="20201030 11:51:23.592"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.596" level="INFO">${RESULT} = [{'diff': 3.782000000000091e-05}, {'diff': 3.726400000000213e-05}, {'diff': 3.7290999999998325e-05}, {'diff': 3.66520000000016e-05}, {'diff': 3.6681000000000213e-05}, {'diff': 3.6667000000000644e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:23.592" endtime="20201030 11:51:23.596"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.600" level="INFO">${ACCURACY} = {'diff': [3.782000000000091e-05, 3.726400000000213e-05, 3.7290999999998325e-05, 3.66520000000016e-05, 3.6681000000000213e-05, 3.6667000000000644e-05, 3.6653000000001074e-05, 3.7874999999999714e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:23.597" endtime="20201030 11:51:23.600"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.605" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.604" endtime="20201030 11:51:23.605"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.608" level="INFO">VALUE: [3.782000000000091e-05, 3.726400000000213e-05, 3.7290999999998325e-05, 3.66520000000016e-05, 3.6681000000000213e-05, 3.6667000000000644e-05, 3.6653000000001074e-05, 3.7874999999999714e-05, 3.6082999999999255e-05, 3.790199999999938e-05, 3.730600000000084e-05, 3.794399999999809e-05, 3.7861000000000145e-05, 3.66520000000016e-05, 3.6681000000000213e-05, 3.669400000000031e-05, 3.7347000000000075e-05, 3.6667000000000644e-05, 3.7861000000000145e-05, 3.7902999999998854e-05, 3.7888999999999284e-05, 3.7889000000002754e-05, 3.6666999999997174e-05, 3.600000000000131e-05, 3.726399999999866e-05, 3.665199999999813e-05, 3.7305000000001365e-05, 3.66659999999977e-05, 3.6068999999999685e-05, 3.727799999999823e-05, 3.72919999999978e-05, 3.672199999999945e-05, 3.727799999999823e-05, 3.6652999999997604e-05, 3.790199999999938e-05, 3.726399999999866e-05, 3.6667000000000644e-05, 3.72780000000017e-05, 3.7916999999998424e-05, 3.668000000000074e-05, 3.7888999999999284e-05, 3.6055000000000115e-05, 3.7874999999999714e-05, 3.7874999999999714e-05, 3.726399999999866e-05, 3.7888999999999284e-05, 3.666600000000117e-05, 3.72780000000017e-05, 3.668000000000074e-05, 3.729200000000127e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.606" endtime="20201030 11:51:23.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.601" endtime="20201030 11:51:23.609"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.613" endtime="20201030 11:51:23.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.612" endtime="20201030 11:51:23.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.610" endtime="20201030 11:51:23.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.251" endtime="20201030 11:51:23.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.251" endtime="20201030 11:51:23.634"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.643" endtime="20201030 11:51:23.660"></status>
</kw>
<msg timestamp="20201030 11:51:23.660" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.641" endtime="20201030 11:51:23.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.663" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:23.661" endtime="20201030 11:51:23.663"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.664" endtime="20201030 11:51:23.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.639" endtime="20201030 11:51:23.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.636" endtime="20201030 11:51:23.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.673" endtime="20201030 11:51:23.958"></status>
</kw>
<msg timestamp="20201030 11:51:23.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.672" endtime="20201030 11:51:23.962"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.970" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022690333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:23.963" endtime="20201030 11:51:23.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:23.971" endtime="20201030 11:51:23.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.669" endtime="20201030 11:51:23.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.667" endtime="20201030 11:51:23.974"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:23.978" level="INFO">${RESULT} = [{'diff': 3.9680999999999744e-05}, {'diff': 3.9054999999999646e-05}, {'diff': 3.9082999999998785e-05}, {'diff': 3.969399999999984e-05}, {'diff': 3.9667000000000174e-05}, {'diff': 3.973600000000202e-05...</msg>
<status status="PASS" starttime="20201030 11:51:23.975" endtime="20201030 11:51:23.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:23.983" level="INFO">${ACCURACY} = {'diff': [3.9680999999999744e-05, 3.9054999999999646e-05, 3.9082999999998785e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.973600000000202e-05, 3.8459000000001103e-05, 3.9709000000002354e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:23.979" endtime="20201030 11:51:23.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.988" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:23.987" endtime="20201030 11:51:23.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:23.991" level="INFO">VALUE: [3.9680999999999744e-05, 3.9054999999999646e-05, 3.9082999999998785e-05, 3.969399999999984e-05, 3.9667000000000174e-05, 3.973600000000202e-05, 3.8459000000001103e-05, 3.9709000000002354e-05, 3.84720000000012e-05, 3.8444999999998064e-05, 3.9708999999998884e-05, 3.9069000000002685e-05, 3.850000000000034e-05, 3.9694999999999314e-05, 3.908399999999826e-05, 3.906999999999869e-05, 3.848600000000077e-05, 3.84720000000012e-05, 3.849999999999687e-05, 3.849999999999687e-05, 3.850000000000034e-05, 3.902799999999998e-05, 3.8402999999999354e-05, 3.9096999999998355e-05, 4.0305000000000896e-05, 3.9097000000001825e-05, 3.848600000000077e-05, 3.9097000000001825e-05, 3.850000000000034e-05, 3.9153000000000104e-05, 3.848600000000077e-05, 3.9068999999999215e-05, 3.848600000000077e-05, 3.9708999999998884e-05, 3.907000000000216e-05, 3.973599999999855e-05, 3.969399999999984e-05, 3.9096999999998355e-05, 3.969399999999984e-05, 3.84720000000012e-05, 3.848600000000077e-05, 3.906999999999869e-05, 3.9680999999999744e-05, 3.848600000000077e-05, 3.848700000000024e-05, 3.84720000000012e-05, 3.96799999999968e-05, 3.9681000000003214e-05, 3.908399999999826e-05, 3.9082999999998785e-05]</msg>
<status status="PASS" starttime="20201030 11:51:23.989" endtime="20201030 11:51:23.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.984" endtime="20201030 11:51:23.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:23.996" endtime="20201030 11:51:24.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.994" endtime="20201030 11:51:24.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.993" endtime="20201030 11:51:24.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.635" endtime="20201030 11:51:24.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:23.634" endtime="20201030 11:51:24.017"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.026" endtime="20201030 11:51:24.042"></status>
</kw>
<msg timestamp="20201030 11:51:24.043" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.024" endtime="20201030 11:51:24.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.044" endtime="20201030 11:51:24.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.047" endtime="20201030 11:51:24.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.021" endtime="20201030 11:51:24.049"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.019" endtime="20201030 11:51:24.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.056" endtime="20201030 11:51:24.344"></status>
</kw>
<msg timestamp="20201030 11:51:24.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.054" endtime="20201030 11:51:24.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.356" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022525458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022566306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.348" endtime="20201030 11:51:24.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.357" endtime="20201030 11:51:24.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.052" endtime="20201030 11:51:24.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.050" endtime="20201030 11:51:24.360"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.364" level="INFO">${RESULT} = [{'diff': 4.084799999999958e-05}, {'diff': 4.0916999999997955e-05}, {'diff': 4.151399999999944e-05}, {'diff': 4.0903000000001855e-05}, {'diff': 4.097200000000023e-05}, {'diff': 4.0903000000001855e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:24.360" endtime="20201030 11:51:24.364"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.368" level="INFO">${ACCURACY} = {'diff': [4.084799999999958e-05, 4.0916999999997955e-05, 4.151399999999944e-05, 4.0903000000001855e-05, 4.097200000000023e-05, 4.0903000000001855e-05, 4.090199999999891e-05, 4.0847000000000105e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:24.365" endtime="20201030 11:51:24.368"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.373" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.371" endtime="20201030 11:51:24.373"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.375" level="INFO">VALUE: [4.084799999999958e-05, 4.0916999999997955e-05, 4.151399999999944e-05, 4.0903000000001855e-05, 4.097200000000023e-05, 4.0903000000001855e-05, 4.090199999999891e-05, 4.0847000000000105e-05, 4.091599999999848e-05, 4.0290999999997856e-05, 4.0903000000001855e-05, 4.149999999999987e-05, 4.0889000000002285e-05, 4.2111000000000925e-05, 4.152800000000248e-05, 4.0916999999997955e-05, 4.149999999999987e-05, 4.0903000000001855e-05, 4.14860000000003e-05, 4.094399999999762e-05, 4.027799999999776e-05, 4.0902999999998385e-05, 4.2111000000000925e-05, 4.151399999999944e-05, 4.0931000000000994e-05, 4.151399999999944e-05, 4.21120000000004e-05, 4.1540999999999106e-05, 4.14860000000003e-05, 4.151399999999944e-05, 4.090199999999891e-05, 4.026399999999819e-05, 4.031999999999994e-05, 4.2111000000000925e-05, 4.0917000000001424e-05, 4.2111000000000925e-05, 4.149999999999987e-05, 4.149999999999987e-05, 4.0903000000001855e-05, 4.088799999999934e-05, 4.030600000000037e-05, 4.0290999999997856e-05, 4.2097000000001356e-05, 4.02920000000008e-05, 4.151399999999944e-05, 4.149999999999987e-05, 4.0903000000001855e-05, 4.023600000000252e-05, 4.0291000000001326e-05, 4.0902999999998385e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.374" endtime="20201030 11:51:24.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.369" endtime="20201030 11:51:24.377"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.380" endtime="20201030 11:51:24.400"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.379" endtime="20201030 11:51:24.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.378" endtime="20201030 11:51:24.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.017" endtime="20201030 11:51:24.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.017" endtime="20201030 11:51:24.401"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.411" endtime="20201030 11:51:24.429"></status>
</kw>
<msg timestamp="20201030 11:51:24.429" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.410" endtime="20201030 11:51:24.429"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.432" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.430" endtime="20201030 11:51:24.432"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.433" endtime="20201030 11:51:24.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.407" endtime="20201030 11:51:24.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.404" endtime="20201030 11:51:24.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.442" endtime="20201030 11:51:24.728"></status>
</kw>
<msg timestamp="20201030 11:51:24.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024572, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:24.441" endtime="20201030 11:51:24.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024572, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024614722, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:24.732" endtime="20201030 11:51:24.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.741" endtime="20201030 11:51:24.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.438" endtime="20201030 11:51:24.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.436" endtime="20201030 11:51:24.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:24.748" level="INFO">${RESULT} = [{'diff': 4.272199999999851e-05}, {'diff': 4.331999999999947e-05}, {'diff': 4.3332999999999566e-05}, {'diff': 4.2722999999997985e-05}, {'diff': 4.3318999999999996e-05}, {'diff': 4.3305000000000426e-05...</msg>
<status status="PASS" starttime="20201030 11:51:24.744" endtime="20201030 11:51:24.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:24.752" level="INFO">${ACCURACY} = {'diff': [4.272199999999851e-05, 4.331999999999947e-05, 4.3332999999999566e-05, 4.2722999999997985e-05, 4.3318999999999996e-05, 4.3305000000000426e-05, 4.273600000000155e-05, 4.273599999999808e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:24.749" endtime="20201030 11:51:24.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.756" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:24.755" endtime="20201030 11:51:24.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.759" level="INFO">VALUE: [4.272199999999851e-05, 4.331999999999947e-05, 4.3332999999999566e-05, 4.2722999999997985e-05, 4.3318999999999996e-05, 4.3305000000000426e-05, 4.273600000000155e-05, 4.273599999999808e-05, 4.33059999999999e-05, 4.270799999999894e-05, 4.3916999999997486e-05, 4.394400000000062e-05, 4.3361000000002176e-05, 4.277800000000026e-05, 4.3917000000000955e-05, 4.275000000000112e-05, 4.3332999999999566e-05, 4.3917000000000955e-05, 4.3346999999999136e-05, 4.33059999999999e-05, 4.3332999999999566e-05, 4.270800000000241e-05, 4.3986999999998805e-05, 4.270800000000241e-05, 4.329200000000033e-05, 4.3931000000000525e-05, 4.3318999999999996e-05, 4.3333000000003036e-05, 4.392999999999758e-05, 4.3318999999999996e-05, 4.326399999999772e-05, 4.269400000000284e-05, 4.33059999999999e-05, 4.2110999999997456e-05, 4.270800000000241e-05, 4.2111000000000925e-05, 4.3846999999999636e-05, 4.3305000000000426e-05, 4.272199999999851e-05, 4.329200000000033e-05, 4.26799999999998e-05, 4.33059999999999e-05, 4.3305000000000426e-05, 4.331999999999947e-05, 4.3318999999999996e-05, 4.33059999999999e-05, 4.390200000000191e-05, 4.2111000000000925e-05, 4.209800000000083e-05, 4.398599999999933e-05]</msg>
<status status="PASS" starttime="20201030 11:51:24.758" endtime="20201030 11:51:24.761"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.753" endtime="20201030 11:51:24.761"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:24.765" endtime="20201030 11:51:24.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.763" endtime="20201030 11:51:24.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.762" endtime="20201030 11:51:24.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.402" endtime="20201030 11:51:24.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.402" endtime="20201030 11:51:24.786"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.795" endtime="20201030 11:51:24.812"></status>
</kw>
<msg timestamp="20201030 11:51:24.812" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.793" endtime="20201030 11:51:24.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:24.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:24.814" endtime="20201030 11:51:24.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.816" endtime="20201030 11:51:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.790" endtime="20201030 11:51:24.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.788" endtime="20201030 11:51:24.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:24.825" endtime="20201030 11:51:25.112"></status>
</kw>
<msg timestamp="20201030 11:51:25.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:24.824" endtime="20201030 11:51:25.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.123" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022741056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.116" endtime="20201030 11:51:25.124"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.125" endtime="20201030 11:51:25.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.821" endtime="20201030 11:51:25.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.819" endtime="20201030 11:51:25.127"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.131" level="INFO">${RESULT} = [{'diff': 4.577700000000032e-05}, {'diff': 4.397199999999976e-05}, {'diff': 4.5125000000000026e-05}, {'diff': 4.573600000000108e-05}, {'diff': 4.573600000000108e-05}, {'diff': 4.634699999999867e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:25.128" endtime="20201030 11:51:25.132"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.136" level="INFO">${ACCURACY} = {'diff': [4.577700000000032e-05, 4.397199999999976e-05, 4.5125000000000026e-05, 4.573600000000108e-05, 4.573600000000108e-05, 4.634699999999867e-05, 4.454199999999811e-05, 4.572200000000151e-05, 4.452...</msg>
<status status="PASS" starttime="20201030 11:51:25.132" endtime="20201030 11:51:25.137"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.141" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.140" endtime="20201030 11:51:25.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.144" level="INFO">VALUE: [4.577700000000032e-05, 4.397199999999976e-05, 4.5125000000000026e-05, 4.573600000000108e-05, 4.573600000000108e-05, 4.634699999999867e-05, 4.454199999999811e-05, 4.572200000000151e-05, 4.452800000000201e-05, 4.452799999999854e-05, 4.392999999999758e-05, 4.3917000000000955e-05, 4.573600000000108e-05, 4.451399999999897e-05, 4.5694999999998376e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.5737000000000555e-05, 4.5138999999999596e-05, 4.5139000000003066e-05, 4.5125000000000026e-05, 4.577799999999979e-05, 4.577799999999979e-05, 4.5737000000000555e-05, 4.44999999999994e-05, 4.5125000000000026e-05, 4.454200000000158e-05, 4.5125000000000026e-05, 4.3846999999999636e-05, 4.630599999999943e-05, 4.5125000000000026e-05, 4.513800000000012e-05, 4.454199999999811e-05, 4.5125000000000026e-05, 4.573600000000108e-05, 4.575000000000065e-05, 4.45129999999995e-05, 4.5723000000000985e-05, 4.570799999999847e-05, 4.573600000000108e-05, 4.452799999999854e-05, 4.573600000000108e-05, 4.5138999999999596e-05, 4.5125000000000026e-05, 4.5138999999999596e-05, 4.454099999999864e-05, 4.452799999999854e-05, 4.5737000000000555e-05, 4.455599999999768e-05, 4.452799999999854e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.142" endtime="20201030 11:51:25.145"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.137" endtime="20201030 11:51:25.145"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.149" endtime="20201030 11:51:25.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.147" endtime="20201030 11:51:25.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.146" endtime="20201030 11:51:25.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.787" endtime="20201030 11:51:25.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:24.786" endtime="20201030 11:51:25.170"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.179" endtime="20201030 11:51:25.195"></status>
</kw>
<msg timestamp="20201030 11:51:25.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.177" endtime="20201030 11:51:25.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.197" endtime="20201030 11:51:25.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.199" endtime="20201030 11:51:25.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.174" endtime="20201030 11:51:25.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.172" endtime="20201030 11:51:25.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.208" endtime="20201030 11:51:25.496"></status>
</kw>
<msg timestamp="20201030 11:51:25.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02247575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:25.207" endtime="20201030 11:51:25.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022428222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02247575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:25.500" endtime="20201030 11:51:25.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.509" endtime="20201030 11:51:25.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.204" endtime="20201030 11:51:25.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.202" endtime="20201030 11:51:25.512"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.516" level="INFO">${RESULT} = [{'diff': 4.752799999999807e-05}, {'diff': 4.755599999999721e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.815199999999922e-05}, {'diff': 4.629199999999986e-05}, {'diff': 4.81529999999987e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:25.512" endtime="20201030 11:51:25.516"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.520" level="INFO">${ACCURACY} = {'diff': [4.752799999999807e-05, 4.755599999999721e-05, 4.813899999999913e-05, 4.815199999999922e-05, 4.629199999999986e-05, 4.81529999999987e-05, 4.695799999999972e-05, 4.755499999999774e-05, 4.69300...</msg>
<status status="PASS" starttime="20201030 11:51:25.517" endtime="20201030 11:51:25.520"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.525" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.524" endtime="20201030 11:51:25.525"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.527" level="INFO">VALUE: [4.752799999999807e-05, 4.755599999999721e-05, 4.813899999999913e-05, 4.815199999999922e-05, 4.629199999999986e-05, 4.81529999999987e-05, 4.695799999999972e-05, 4.755499999999774e-05, 4.693000000000058e-05, 4.63329999999991e-05, 4.634699999999867e-05, 4.754100000000164e-05, 4.6389000000000846e-05, 4.6931000000000056e-05, 4.693000000000058e-05, 4.6973000000002235e-05, 4.6319999999999e-05, 4.634799999999814e-05, 4.634699999999867e-05, 4.694400000000015e-05, 4.81529999999987e-05, 4.631899999999953e-05, 4.756899999999731e-05, 4.756999999999678e-05, 4.75000000000024e-05, 4.690299999999745e-05, 4.629199999999986e-05, 4.755600000000068e-05, 4.755600000000068e-05, 4.695800000000319e-05, 4.8139000000002596e-05, 4.755600000000068e-05, 4.632000000000247e-05, 4.756900000000078e-05, 4.634800000000161e-05, 4.702800000000104e-05, 4.636199999999771e-05, 4.6347000000002136e-05, 4.81529999999987e-05, 4.694400000000015e-05, 4.754200000000111e-05, 4.751299999999903e-05, 4.63329999999991e-05, 4.633399999999857e-05, 4.695799999999972e-05, 4.694400000000015e-05, 4.694400000000015e-05, 4.75269999999986e-05, 4.694400000000015e-05, 4.634699999999867e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.526" endtime="20201030 11:51:25.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.521" endtime="20201030 11:51:25.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.532" endtime="20201030 11:51:25.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.531" endtime="20201030 11:51:25.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.530" endtime="20201030 11:51:25.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.171" endtime="20201030 11:51:25.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.170" endtime="20201030 11:51:25.553"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.562" endtime="20201030 11:51:25.580"></status>
</kw>
<msg timestamp="20201030 11:51:25.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.560" endtime="20201030 11:51:25.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.582" endtime="20201030 11:51:25.584"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.584" endtime="20201030 11:51:25.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.558" endtime="20201030 11:51:25.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.556" endtime="20201030 11:51:25.587"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.594" endtime="20201030 11:51:25.881"></status>
</kw>
<msg timestamp="20201030 11:51:25.884" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.592" endtime="20201030 11:51:25.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023563597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023612958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.885" endtime="20201030 11:51:25.893"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.894" endtime="20201030 11:51:25.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.590" endtime="20201030 11:51:25.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.588" endtime="20201030 11:51:25.896"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.900" level="INFO">${RESULT} = [{'diff': 4.936100000000124e-05}, {'diff': 4.998599999999839e-05}, {'diff': 4.81529999999987e-05}, {'diff': 4.936099999999777e-05}, {'diff': 4.876299999999681e-05}, {'diff': 4.934700000000167e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:25.897" endtime="20201030 11:51:25.901"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.905" level="INFO">${ACCURACY} = {'diff': [4.936100000000124e-05, 4.998599999999839e-05, 4.81529999999987e-05, 4.936099999999777e-05, 4.876299999999681e-05, 4.934700000000167e-05, 4.995899999999873e-05, 4.876399999999975e-05, 4.87359...</msg>
<status status="PASS" starttime="20201030 11:51:25.901" endtime="20201030 11:51:25.905"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.909" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.908" endtime="20201030 11:51:25.910"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.912" level="INFO">VALUE: [4.936100000000124e-05, 4.998599999999839e-05, 4.81529999999987e-05, 4.936099999999777e-05, 4.876299999999681e-05, 4.934700000000167e-05, 4.995899999999873e-05, 4.876399999999975e-05, 4.873599999999714e-05, 4.875000000000018e-05, 4.873600000000061e-05, 4.81529999999987e-05, 4.873600000000061e-05, 4.936099999999777e-05, 4.934799999999767e-05, 4.873600000000061e-05, 4.875000000000018e-05, 4.937500000000081e-05, 4.937500000000081e-05, 4.813899999999913e-05, 4.990200000000097e-05, 4.995799999999925e-05, 4.93469999999982e-05, 4.816599999999879e-05, 4.813799999999965e-05, 4.873600000000061e-05, 4.875000000000018e-05, 4.987500000000131e-05, 4.876399999999975e-05, 5.000000000000143e-05, 4.8125000000003026e-05, 4.876399999999975e-05, 4.881900000000203e-05, 4.876399999999975e-05, 4.877800000000279e-05, 4.876399999999975e-05, 4.876399999999975e-05, 4.93469999999982e-05, 4.995799999999925e-05, 4.876399999999975e-05, 4.936099999999777e-05, 4.936200000000071e-05, 4.995800000000272e-05, 4.995899999999873e-05, 4.998600000000186e-05, 4.936100000000124e-05, 4.934700000000167e-05, 4.876399999999975e-05, 4.879099999999942e-05, 4.81529999999987e-05]</msg>
<status status="PASS" starttime="20201030 11:51:25.910" endtime="20201030 11:51:25.913"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.906" endtime="20201030 11:51:25.914"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.918" endtime="20201030 11:51:25.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.916" endtime="20201030 11:51:25.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.915" endtime="20201030 11:51:25.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.554" endtime="20201030 11:51:25.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.553" endtime="20201030 11:51:25.938"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.948" endtime="20201030 11:51:25.965"></status>
</kw>
<msg timestamp="20201030 11:51:25.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.946" endtime="20201030 11:51:25.966"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.968" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.966" endtime="20201030 11:51:25.968"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.969" endtime="20201030 11:51:25.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.943" endtime="20201030 11:51:25.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.941" endtime="20201030 11:51:25.972"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.978" endtime="20201030 11:51:26.264"></status>
</kw>
<msg timestamp="20201030 11:51:26.268" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.977" endtime="20201030 11:51:26.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.276" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.269" endtime="20201030 11:51:26.276"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.277" endtime="20201030 11:51:26.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.974" endtime="20201030 11:51:26.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.972" endtime="20201030 11:51:26.280"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.284" level="INFO">${RESULT} = [{'diff': 5.12080000000005e-05}, {'diff': 5.118100000000084e-05}, {'diff': 5.056999999999978e-05}, {'diff': 5.179199999999842e-05}, {'diff': 5.176400000000275e-05}, {'diff': 5.183300000000113e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:26.281" endtime="20201030 11:51:26.284"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.289" level="INFO">${ACCURACY} = {'diff': [5.12080000000005e-05, 5.118100000000084e-05, 5.056999999999978e-05, 5.179199999999842e-05, 5.176400000000275e-05, 5.183300000000113e-05, 5.177799999999885e-05, 5.179099999999895e-05, 5.17640...</msg>
<status status="PASS" starttime="20201030 11:51:26.285" endtime="20201030 11:51:26.289"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.294" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.293" endtime="20201030 11:51:26.294"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.296" level="INFO">VALUE: [5.12080000000005e-05, 5.118100000000084e-05, 5.056999999999978e-05, 5.179199999999842e-05, 5.176400000000275e-05, 5.183300000000113e-05, 5.177799999999885e-05, 5.179099999999895e-05, 5.176400000000275e-05, 4.995899999999873e-05, 5.116700000000127e-05, 5.056900000000031e-05, 5.055600000000021e-05, 4.995899999999873e-05, 5.177699999999938e-05, 5.1223000000003016e-05, 5.056900000000031e-05, 5.116700000000127e-05, 5.056999999999978e-05, 5.177800000000232e-05, 5.116600000000179e-05, 5.116700000000127e-05, 5.181900000000156e-05, 5.056900000000031e-05, 5.179199999999842e-05, 5.058299999999988e-05, 5.177800000000232e-05, 5.176400000000275e-05, 5.177799999999885e-05, 5.118099999999737e-05, 5.177800000000232e-05, 5.05270000000016e-05, 5.055600000000021e-05, 5.118100000000084e-05, 5.119500000000041e-05, 5.056999999999978e-05, 5.116700000000127e-05, 5.176400000000275e-05, 5.118100000000084e-05, 5.119400000000093e-05, 5.052699999999813e-05, 5.177799999999885e-05, 5.118100000000084e-05, 5.176399999999928e-05, 5.176400000000275e-05, 5.061099999999902e-05, 5.177800000000232e-05, 5.177800000000232e-05, 5.177799999999885e-05, 5.119500000000041e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.295" endtime="20201030 11:51:26.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.290" endtime="20201030 11:51:26.298"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.302" endtime="20201030 11:51:26.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.300" endtime="20201030 11:51:26.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.299" endtime="20201030 11:51:26.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.939" endtime="20201030 11:51:26.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.939" endtime="20201030 11:51:26.322"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.331" endtime="20201030 11:51:26.348"></status>
</kw>
<msg timestamp="20201030 11:51:26.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.330" endtime="20201030 11:51:26.349"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.351" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.350" endtime="20201030 11:51:26.351"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.352" endtime="20201030 11:51:26.354"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.327" endtime="20201030 11:51:26.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.325" endtime="20201030 11:51:26.355"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.362" endtime="20201030 11:51:26.648"></status>
</kw>
<msg timestamp="20201030 11:51:26.651" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.360" endtime="20201030 11:51:26.652"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022614875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022668417, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.653" endtime="20201030 11:51:26.660"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.661" endtime="20201030 11:51:26.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.357" endtime="20201030 11:51:26.663"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.356" endtime="20201030 11:51:26.664"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.668" level="INFO">${RESULT} = [{'diff': 5.354200000000017e-05}, {'diff': 5.237500000000034e-05}, {'diff': 5.4194000000000464e-05}, {'diff': 5.356999999999931e-05}, {'diff': 5.23470000000012e-05}, {'diff': 5.358400000000235e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:26.665" endtime="20201030 11:51:26.668"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.672" level="INFO">${ACCURACY} = {'diff': [5.354200000000017e-05, 5.237500000000034e-05, 5.4194000000000464e-05, 5.356999999999931e-05, 5.23470000000012e-05, 5.358400000000235e-05, 5.297200000000182e-05, 5.2388000000000434e-05, 5.298...</msg>
<status status="PASS" starttime="20201030 11:51:26.669" endtime="20201030 11:51:26.672"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.677" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.676" endtime="20201030 11:51:26.677"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.679" level="INFO">VALUE: [5.354200000000017e-05, 5.237500000000034e-05, 5.4194000000000464e-05, 5.356999999999931e-05, 5.23470000000012e-05, 5.358400000000235e-05, 5.297200000000182e-05, 5.2388000000000434e-05, 5.298600000000139e-05, 5.300000000000096e-05, 5.359700000000245e-05, 5.4138000000002184e-05, 5.2402000000000004e-05, 5.358400000000235e-05, 5.4194000000000464e-05, 5.305499999999977e-05, 5.357000000000278e-05, 5.298600000000139e-05, 5.238899999999991e-05, 5.359799999999845e-05, 5.358299999999941e-05, 5.418100000000037e-05, 5.41809999999969e-05, 5.4194000000000464e-05, 5.297200000000182e-05, 5.2985999999997924e-05, 5.298600000000139e-05, 5.41670000000008e-05, 5.35419999999967e-05, 5.237500000000034e-05, 5.4194000000000464e-05, 5.237500000000034e-05, 5.297200000000182e-05, 5.362500000000159e-05, 5.236100000000077e-05, 5.300000000000096e-05, 5.358299999999941e-05, 5.358400000000235e-05, 5.306999999999881e-05, 5.238899999999991e-05, 5.36670000000003e-05, 5.361099999999855e-05, 5.237500000000034e-05, 5.238899999999991e-05, 5.2985999999997924e-05, 5.237500000000034e-05, 5.358400000000235e-05, 5.294500000000216e-05, 5.358400000000235e-05, 5.359799999999845e-05]</msg>
<status status="PASS" starttime="20201030 11:51:26.678" endtime="20201030 11:51:26.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.673" endtime="20201030 11:51:26.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.685" endtime="20201030 11:51:26.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.683" endtime="20201030 11:51:26.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.682" endtime="20201030 11:51:26.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.323" endtime="20201030 11:51:26.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.323" endtime="20201030 11:51:26.705"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.714" endtime="20201030 11:51:26.733"></status>
</kw>
<msg timestamp="20201030 11:51:26.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.713" endtime="20201030 11:51:26.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.735" endtime="20201030 11:51:26.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.737" endtime="20201030 11:51:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.710" endtime="20201030 11:51:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.708" endtime="20201030 11:51:26.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.747" endtime="20201030 11:51:27.032"></status>
</kw>
<msg timestamp="20201030 11:51:27.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023490903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.745" endtime="20201030 11:51:27.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.044" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023490903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023545736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.037" endtime="20201030 11:51:27.044"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.045" endtime="20201030 11:51:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.742" endtime="20201030 11:51:27.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.740" endtime="20201030 11:51:27.048"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.052" level="INFO">${RESULT} = [{'diff': 5.483300000000066e-05}, {'diff': 5.4194000000000464e-05}, {'diff': 5.418100000000037e-05}, {'diff': 5.5986000000000924e-05}, {'diff': 5.479100000000195e-05}, {'diff': 5.480499999999805e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:27.049" endtime="20201030 11:51:27.052"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.056" level="INFO">${ACCURACY} = {'diff': [5.483300000000066e-05, 5.4194000000000464e-05, 5.418100000000037e-05, 5.5986000000000924e-05, 5.479100000000195e-05, 5.480499999999805e-05, 5.4777999999998384e-05, 5.412499999999862e-05, 5.4...</msg>
<status status="PASS" starttime="20201030 11:51:27.053" endtime="20201030 11:51:27.057"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.061" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.060" endtime="20201030 11:51:27.061"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.064" level="INFO">VALUE: [5.483300000000066e-05, 5.4194000000000464e-05, 5.418100000000037e-05, 5.5986000000000924e-05, 5.479100000000195e-05, 5.480499999999805e-05, 5.4777999999998384e-05, 5.412499999999862e-05, 5.48609999999998e-05, 5.484700000000023e-05, 5.4194000000000464e-05, 5.5415999999999105e-05, 5.540299999999901e-05, 5.540300000000248e-05, 5.6000000000000494e-05, 5.540300000000248e-05, 5.480600000000099e-05, 5.5986000000000924e-05, 5.6027999999999634e-05, 5.5416000000002574e-05, 5.483300000000066e-05, 5.4791999999997953e-05, 5.538899999999944e-05, 5.5415999999999105e-05, 5.5401999999999535e-05, 5.541699999999858e-05, 5.419499999999994e-05, 5.476400000000228e-05, 5.5430000000002144e-05, 5.5429999999998675e-05, 5.4208000000000034e-05, 5.6014000000000064e-05, 5.5986000000000924e-05, 5.6000000000000494e-05, 5.540299999999901e-05, 5.53610000000003e-05, 5.419499999999994e-05, 5.6000000000000494e-05, 5.479200000000142e-05, 5.6000000000000494e-05, 5.5401999999999535e-05, 5.6027999999999634e-05, 5.5944000000002214e-05, 5.5958000000001784e-05, 5.481899999999762e-05, 5.419499999999994e-05, 5.601300000000059e-05, 5.477800000000185e-05, 5.6000000000000494e-05, 5.482000000000056e-05]</msg>
<status status="PASS" starttime="20201030 11:51:27.062" endtime="20201030 11:51:27.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.057" endtime="20201030 11:51:27.070"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.074" endtime="20201030 11:51:27.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.072" endtime="20201030 11:51:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.071" endtime="20201030 11:51:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.706" endtime="20201030 11:51:27.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.706" endtime="20201030 11:51:27.095"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.104" endtime="20201030 11:51:27.121"></status>
</kw>
<msg timestamp="20201030 11:51:27.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.102" endtime="20201030 11:51:27.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.123" endtime="20201030 11:51:27.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.125" endtime="20201030 11:51:27.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.099" endtime="20201030 11:51:27.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.097" endtime="20201030 11:51:27.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.135" endtime="20201030 11:51:27.421"></status>
</kw>
<msg timestamp="20201030 11:51:27.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.133" endtime="20201030 11:51:27.424"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.433" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022923431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022981292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.425" endtime="20201030 11:51:27.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.434" endtime="20201030 11:51:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.131" endtime="20201030 11:51:27.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.129" endtime="20201030 11:51:27.437"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.441" level="INFO">${RESULT} = [{'diff': 5.786099999999933e-05}, {'diff': 5.7806000000000524e-05}, {'diff': 5.783300000000019e-05}, {'diff': 5.783300000000019e-05}, {'diff': 5.662500000000112e-05}, {'diff': 5.781900000000062e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:27.437" endtime="20201030 11:51:27.441"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.446" level="INFO">${ACCURACY} = {'diff': [5.786099999999933e-05, 5.7806000000000524e-05, 5.783300000000019e-05, 5.783300000000019e-05, 5.662500000000112e-05, 5.781900000000062e-05, 5.661199999999755e-05, 5.7791999999997484e-05, 5.78...</msg>
<status status="PASS" starttime="20201030 11:51:27.442" endtime="20201030 11:51:27.447"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.452" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.450" endtime="20201030 11:51:27.452"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.455" level="INFO">VALUE: [5.786099999999933e-05, 5.7806000000000524e-05, 5.783300000000019e-05, 5.783300000000019e-05, 5.662500000000112e-05, 5.781900000000062e-05, 5.661199999999755e-05, 5.7791999999997484e-05, 5.7806000000000524e-05, 5.720899999999904e-05, 5.781900000000062e-05, 5.661100000000155e-05, 5.7235999999998705e-05, 5.7221999999999135e-05, 5.7235999999998705e-05, 5.7221999999999135e-05, 5.722300000000208e-05, 5.661200000000102e-05, 5.7833999999999663e-05, 5.7250000000001744e-05, 5.7221999999999135e-05, 5.659799999999798e-05, 5.7249999999998274e-05, 5.7207999999999565e-05, 5.661100000000155e-05, 5.661100000000155e-05, 5.7235999999998705e-05, 5.7806000000000524e-05, 5.663899999999722e-05, 5.777699999999844e-05, 5.661099999999808e-05, 5.7193999999999995e-05, 5.720899999999904e-05, 5.662499999999765e-05, 5.783300000000019e-05, 5.659699999999851e-05, 5.722300000000208e-05, 5.661100000000155e-05, 5.7763999999998344e-05, 5.7763999999998344e-05, 5.7221999999999135e-05, 5.7207999999999565e-05, 5.7806000000000524e-05, 5.662500000000112e-05, 5.781900000000062e-05, 5.719499999999947e-05, 5.722300000000208e-05, 5.661100000000155e-05, 5.7764000000001814e-05, 5.783300000000019e-05]</msg>
<status status="PASS" starttime="20201030 11:51:27.453" endtime="20201030 11:51:27.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.448" endtime="20201030 11:51:27.456"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.460" endtime="20201030 11:51:27.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.458" endtime="20201030 11:51:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.457" endtime="20201030 11:51:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.096" endtime="20201030 11:51:27.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.095" endtime="20201030 11:51:27.481"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.490" endtime="20201030 11:51:27.508"></status>
</kw>
<msg timestamp="20201030 11:51:27.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.488" endtime="20201030 11:51:27.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.511" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.509" endtime="20201030 11:51:27.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.512" endtime="20201030 11:51:27.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.485" endtime="20201030 11:51:27.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.483" endtime="20201030 11:51:27.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.521" endtime="20201030 11:51:27.810"></status>
</kw>
<msg timestamp="20201030 11:51:27.814" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.520" endtime="20201030 11:51:27.814"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.822" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022745639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.815" endtime="20201030 11:51:27.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.823" endtime="20201030 11:51:27.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.517" endtime="20201030 11:51:27.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.515" endtime="20201030 11:51:27.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.830" level="INFO">${RESULT} = [{'diff': 5.841700000000158e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.9707999999998596e-05}, {'diff': 5.8472000000000385e-05}, {'diff': 5.840300000000201e-05}, {'diff': 5.962499999999718e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:27.827" endtime="20201030 11:51:27.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.834" level="INFO">${ACCURACY} = {'diff': [5.841700000000158e-05, 5.838899999999897e-05, 5.9707999999998596e-05, 5.8472000000000385e-05, 5.840300000000201e-05, 5.962499999999718e-05, 5.840299999999854e-05, 5.897300000000036e-05, 5.90...</msg>
<status status="PASS" starttime="20201030 11:51:27.831" endtime="20201030 11:51:27.835"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.839" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.838" endtime="20201030 11:51:27.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.842" level="INFO">VALUE: [5.841700000000158e-05, 5.838899999999897e-05, 5.9707999999998596e-05, 5.8472000000000385e-05, 5.840300000000201e-05, 5.962499999999718e-05, 5.840299999999854e-05, 5.897300000000036e-05, 5.9042000000002204e-05, 6.0236000000001705e-05, 5.962499999999718e-05, 5.841700000000158e-05, 5.841699999999811e-05, 5.902699999999969e-05, 6.0194999999999e-05, 5.962500000000065e-05, 6.0264000000000845e-05, 5.843100000000115e-05, 5.8430000000001675e-05, 5.9013999999999595e-05, 5.963900000000022e-05, 5.83749999999994e-05, 5.841699999999811e-05, 5.8444000000001245e-05, 5.840300000000201e-05, 5.8958000000001315e-05, 5.9583999999997944e-05, 5.9013999999999595e-05, 5.963900000000022e-05, 5.840299999999854e-05, 5.9014000000003064e-05, 5.840299999999854e-05, 6.0236000000001705e-05, 5.841699999999811e-05, 5.962500000000065e-05, 5.8416000000002105e-05, 5.962500000000065e-05, 5.904099999999926e-05, 5.9027999999999164e-05, 5.963899999999675e-05, 5.966699999999936e-05, 6.0222000000002135e-05, 6.0193999999999526e-05, 6.026300000000137e-05, 5.902699999999969e-05, 5.8430000000001675e-05, 5.841699999999811e-05, 5.962500000000065e-05, 5.962499999999718e-05, 5.9042000000002204e-05]</msg>
<status status="PASS" starttime="20201030 11:51:27.840" endtime="20201030 11:51:27.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.835" endtime="20201030 11:51:27.843"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.847" endtime="20201030 11:51:27.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.845" endtime="20201030 11:51:27.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.844" endtime="20201030 11:51:27.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.481" endtime="20201030 11:51:27.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.481" endtime="20201030 11:51:27.868"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.877" endtime="20201030 11:51:27.895"></status>
</kw>
<msg timestamp="20201030 11:51:27.896" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.875" endtime="20201030 11:51:27.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.898" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.897" endtime="20201030 11:51:27.899"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.899" endtime="20201030 11:51:27.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.872" endtime="20201030 11:51:27.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.870" endtime="20201030 11:51:27.902"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.909" endtime="20201030 11:51:28.195"></status>
</kw>
<msg timestamp="20201030 11:51:28.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023376861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.907" endtime="20201030 11:51:28.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.207" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023376861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023438306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.199" endtime="20201030 11:51:28.207"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.208" endtime="20201030 11:51:28.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.904" endtime="20201030 11:51:28.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.903" endtime="20201030 11:51:28.210"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.215" level="INFO">${RESULT} = [{'diff': 6.144500000000025e-05}, {'diff': 6.0250000000001275e-05}, {'diff': 6.20690000000014e-05}, {'diff': 6.084700000000276e-05}, {'diff': 6.205599999999784e-05}, {'diff': 6.0264000000000845e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:28.211" endtime="20201030 11:51:28.215"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.219" level="INFO">${ACCURACY} = {'diff': [6.144500000000025e-05, 6.0250000000001275e-05, 6.20690000000014e-05, 6.084700000000276e-05, 6.205599999999784e-05, 6.0264000000000845e-05, 6.084700000000276e-05, 6.195800000000085e-05, 6.084...</msg>
<status status="PASS" starttime="20201030 11:51:28.216" endtime="20201030 11:51:28.219"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.224" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.222" endtime="20201030 11:51:28.224"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.226" level="INFO">VALUE: [6.144500000000025e-05, 6.0250000000001275e-05, 6.20690000000014e-05, 6.084700000000276e-05, 6.205599999999784e-05, 6.0264000000000845e-05, 6.084700000000276e-05, 6.195800000000085e-05, 6.084699999999929e-05, 6.205599999999784e-05, 6.083299999999972e-05, 6.20560000000013e-05, 6.205499999999836e-05, 6.144500000000025e-05, 6.084699999999929e-05, 6.205500000000183e-05, 6.144400000000078e-05, 6.144400000000078e-05, 6.14019999999986e-05, 6.0236000000001705e-05, 6.143100000000068e-05, 6.144400000000078e-05, 6.205599999999784e-05, 6.0848000000002234e-05, 6.149999999999906e-05, 6.0820000000003094e-05, 6.0833999999999194e-05, 6.086099999999886e-05, 6.023700000000118e-05, 6.143100000000068e-05, 6.145800000000035e-05, 6.0236000000001705e-05, 6.147199999999992e-05, 6.205599999999784e-05, 6.083299999999972e-05, 6.144400000000078e-05, 6.204099999999879e-05, 6.0235999999998235e-05, 6.205499999999836e-05, 6.144400000000078e-05, 6.201399999999913e-05, 6.0249999999997805e-05, 6.0819999999999624e-05, 6.144500000000025e-05, 6.084699999999929e-05, 6.20560000000013e-05, 6.13889999999985e-05, 6.083299999999972e-05, 6.14439999999973e-05, 6.083299999999972e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.225" endtime="20201030 11:51:28.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.220" endtime="20201030 11:51:28.228"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.232" endtime="20201030 11:51:28.251"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.231" endtime="20201030 11:51:28.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.229" endtime="20201030 11:51:28.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.869" endtime="20201030 11:51:28.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.868" endtime="20201030 11:51:28.253"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.262" endtime="20201030 11:51:28.280"></status>
</kw>
<msg timestamp="20201030 11:51:28.280" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.260" endtime="20201030 11:51:28.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.283" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.281" endtime="20201030 11:51:28.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.284" endtime="20201030 11:51:28.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.258" endtime="20201030 11:51:28.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.255" endtime="20201030 11:51:28.286"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.293" endtime="20201030 11:51:28.580"></status>
</kw>
<msg timestamp="20201030 11:51:28.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.291" endtime="20201030 11:51:28.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.591" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022566583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022629833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.584" endtime="20201030 11:51:28.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.593" endtime="20201030 11:51:28.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.289" endtime="20201030 11:51:28.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.287" endtime="20201030 11:51:28.595"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.599" level="INFO">${RESULT} = [{'diff': 6.324999999999734e-05}, {'diff': 6.386200000000133e-05}, {'diff': 6.32080000000021e-05}, {'diff': 6.386099999999839e-05}, {'diff': 6.324999999999734e-05}, {'diff': 6.256899999999843e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:28.596" endtime="20201030 11:51:28.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.605" level="INFO">${ACCURACY} = {'diff': [6.324999999999734e-05, 6.386200000000133e-05, 6.32080000000021e-05, 6.386099999999839e-05, 6.324999999999734e-05, 6.256899999999843e-05, 6.265299999999932e-05, 6.327799999999995e-05, 6.38750...</msg>
<status status="PASS" starttime="20201030 11:51:28.600" endtime="20201030 11:51:28.605"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.609" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.608" endtime="20201030 11:51:28.610"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.612" level="INFO">VALUE: [6.324999999999734e-05, 6.386200000000133e-05, 6.32080000000021e-05, 6.386099999999839e-05, 6.324999999999734e-05, 6.256899999999843e-05, 6.265299999999932e-05, 6.327799999999995e-05, 6.387500000000143e-05, 6.326400000000038e-05, 6.265299999999932e-05, 6.3889000000001e-05, 6.384699999999882e-05, 6.265199999999985e-05, 6.32500000000008e-05, 6.266699999999889e-05, 6.20560000000013e-05, 6.326400000000038e-05, 6.32219999999982e-05, 6.323600000000124e-05, 6.204099999999879e-05, 6.205599999999784e-05, 6.323700000000071e-05, 6.324999999999734e-05, 6.380599999999959e-05, 6.386099999999839e-05, 6.327700000000047e-05, 6.384700000000229e-05, 6.204099999999879e-05, 6.32500000000008e-05, 6.204200000000173e-05, 6.386099999999839e-05, 6.265299999999932e-05, 6.384699999999882e-05, 6.386200000000133e-05, 6.265199999999985e-05, 6.263900000000322e-05, 6.206899999999793e-05, 6.32630000000009e-05, 6.265299999999932e-05, 6.324999999999734e-05, 6.265199999999985e-05, 6.259699999999757e-05, 6.386099999999839e-05, 6.265199999999985e-05, 6.265299999999932e-05, 6.386100000000186e-05, 6.32500000000008e-05, 6.204200000000173e-05, 6.266699999999889e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.610" endtime="20201030 11:51:28.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.606" endtime="20201030 11:51:28.613"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.617" endtime="20201030 11:51:28.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.616" endtime="20201030 11:51:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.614" endtime="20201030 11:51:28.637"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.254" endtime="20201030 11:51:28.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.253" endtime="20201030 11:51:28.638"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.647" endtime="20201030 11:51:28.665"></status>
</kw>
<msg timestamp="20201030 11:51:28.665" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.645" endtime="20201030 11:51:28.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.666" endtime="20201030 11:51:28.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.669" endtime="20201030 11:51:28.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.643" endtime="20201030 11:51:28.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.640" endtime="20201030 11:51:28.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.678" endtime="20201030 11:51:28.966"></status>
</kw>
<msg timestamp="20201030 11:51:28.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.677" endtime="20201030 11:51:28.969"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.977" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022706486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022771556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.970" endtime="20201030 11:51:28.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.979" endtime="20201030 11:51:28.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.674" endtime="20201030 11:51:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.672" endtime="20201030 11:51:28.981"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.985" level="INFO">${RESULT} = [{'diff': 6.506999999999694e-05}, {'diff': 6.566700000000189e-05}, {'diff': 6.566699999999842e-05}, {'diff': 6.438899999999803e-05}, {'diff': 6.44440000000003e-05}, {'diff': 6.627799999999948e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:28.982" endtime="20201030 11:51:28.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.990" level="INFO">${ACCURACY} = {'diff': [6.506999999999694e-05, 6.566700000000189e-05, 6.566699999999842e-05, 6.438899999999803e-05, 6.44440000000003e-05, 6.627799999999948e-05, 6.384699999999882e-05, 6.448599999999902e-05, 6.50419...</msg>
<status status="PASS" starttime="20201030 11:51:28.986" endtime="20201030 11:51:28.990"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.994" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.993" endtime="20201030 11:51:28.995"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.997" level="INFO">VALUE: [6.506999999999694e-05, 6.566700000000189e-05, 6.566699999999842e-05, 6.438899999999803e-05, 6.44440000000003e-05, 6.627799999999948e-05, 6.384699999999882e-05, 6.448599999999902e-05, 6.50419999999978e-05, 6.447300000000239e-05, 6.572300000000017e-05, 6.568100000000146e-05, 6.50830000000005e-05, 6.498599999999952e-05, 6.509799999999955e-05, 6.445899999999935e-05, 6.445899999999935e-05, 6.447199999999945e-05, 6.506899999999746e-05, 6.447199999999945e-05, 6.569500000000103e-05, 6.451399999999816e-05, 6.50700000000004e-05, 6.566699999999842e-05, 6.566599999999895e-05, 6.566699999999842e-05, 6.629200000000252e-05, 6.445899999999935e-05, 6.452699999999825e-05, 6.568100000000146e-05, 6.629200000000252e-05, 6.50830000000005e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.50830000000005e-05, 6.447199999999945e-05, 6.445899999999935e-05, 6.505500000000136e-05, 6.566600000000242e-05, 6.509700000000007e-05, 6.566700000000189e-05, 6.44440000000003e-05, 6.566599999999895e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.506900000000093e-05, 6.50700000000004e-05, 6.506900000000093e-05, 6.566700000000189e-05, 6.567999999999852e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.996" endtime="20201030 11:51:28.998"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.991" endtime="20201030 11:51:28.998"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.002" endtime="20201030 11:51:29.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.001" endtime="20201030 11:51:29.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.999" endtime="20201030 11:51:29.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.639" endtime="20201030 11:51:29.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.638" endtime="20201030 11:51:29.023"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.032" endtime="20201030 11:51:29.051"></status>
</kw>
<msg timestamp="20201030 11:51:29.051" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.030" endtime="20201030 11:51:29.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.054" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.053" endtime="20201030 11:51:29.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.055" endtime="20201030 11:51:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.028" endtime="20201030 11:51:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.026" endtime="20201030 11:51:29.058"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.065" endtime="20201030 11:51:29.351"></status>
</kw>
<msg timestamp="20201030 11:51:29.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.063" endtime="20201030 11:51:29.354"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.362" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023323861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023405986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.355" endtime="20201030 11:51:29.363"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.364" endtime="20201030 11:51:29.365"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.060" endtime="20201030 11:51:29.366"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.059" endtime="20201030 11:51:29.366"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.370" level="INFO">${RESULT} = [{'diff': 8.212499999999887e-05}, {'diff': 8.229200000000117e-05}, {'diff': 8.12780000000006e-05}, {'diff': 8.21659999999981e-05}, {'diff': 8.2459e-05}, {'diff': 8.14450000000029e-05}, {'diff': 8.1583...</msg>
<status status="PASS" starttime="20201030 11:51:29.367" endtime="20201030 11:51:29.371"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.375" level="INFO">${ACCURACY} = {'diff': [8.212499999999887e-05, 8.229200000000117e-05, 8.12780000000006e-05, 8.21659999999981e-05, 8.2459e-05, 8.14450000000029e-05, 8.158399999999913e-05, 8.162499999999837e-05, 8.1458000000003e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:29.371" endtime="20201030 11:51:29.375"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.379" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.378" endtime="20201030 11:51:29.380"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.382" level="INFO">VALUE: [8.212499999999887e-05, 8.229200000000117e-05, 8.12780000000006e-05, 8.21659999999981e-05, 8.2459e-05, 8.14450000000029e-05, 8.158399999999913e-05, 8.162499999999837e-05, 8.1458000000003e-05, 8.26109999999998e-05, 8.077700000000063e-05, 8.224999999999899e-05, 8.127799999999713e-05, 8.194400000000046e-05, 8.209699999999973e-05, 8.09450000000024e-05, 8.209699999999973e-05, 8.22780000000016e-05, 8.112500000000133e-05, 8.094499999999893e-05, 8.244400000000096e-05, 8.162499999999837e-05, 8.229099999999823e-05, 8.108299999999916e-05, 8.12780000000006e-05, 8.17780000000011e-05, 8.195800000000003e-05, 8.180600000000024e-05, 8.094499999999893e-05, 8.181900000000034e-05, 8.09450000000024e-05, 8.24170000000013e-05, 8.130500000000027e-05, 8.173599999999892e-05, 8.21109999999993e-05, 8.194400000000046e-05, 8.129200000000017e-05, 8.112500000000133e-05, 8.211100000000277e-05, 8.126400000000103e-05, 8.130599999999974e-05, 8.2459e-05, 8.112499999999787e-05, 8.17780000000011e-05, 8.242999999999792e-05, 8.194400000000046e-05, 8.070799999999878e-05, 8.155500000000052e-05, 8.177799999999763e-05, 8.145799999999953e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.380" endtime="20201030 11:51:29.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.375" endtime="20201030 11:51:29.384"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.388" endtime="20201030 11:51:29.407"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.386" endtime="20201030 11:51:29.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.385" endtime="20201030 11:51:29.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.024" endtime="20201030 11:51:29.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.023" endtime="20201030 11:51:29.408"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.418" endtime="20201030 11:51:29.436"></status>
</kw>
<msg timestamp="20201030 11:51:29.437" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.416" endtime="20201030 11:51:29.437"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.440" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.438" endtime="20201030 11:51:29.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.441" endtime="20201030 11:51:29.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.413" endtime="20201030 11:51:29.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.411" endtime="20201030 11:51:29.443"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.450" endtime="20201030 11:51:29.737"></status>
</kw>
<msg timestamp="20201030 11:51:29.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.448" endtime="20201030 11:51:29.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022532194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022616139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.741" endtime="20201030 11:51:29.749"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.750" endtime="20201030 11:51:29.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.446" endtime="20201030 11:51:29.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.444" endtime="20201030 11:51:29.752"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.756" level="INFO">${RESULT} = [{'diff': 8.394500000000193e-05}, {'diff': 8.27780000000021e-05}, {'diff': 8.37919999999992e-05}, {'diff': 8.387500000000062e-05}, {'diff': 8.445899999999854e-05}, {'diff': 8.366699999999908e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:29.753" endtime="20201030 11:51:29.757"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.762" level="INFO">${ACCURACY} = {'diff': [8.394500000000193e-05, 8.27780000000021e-05, 8.37919999999992e-05, 8.387500000000062e-05, 8.445899999999854e-05, 8.366699999999908e-05, 8.445800000000253e-05, 8.344400000000196e-05, 8.411100...</msg>
<status status="PASS" starttime="20201030 11:51:29.758" endtime="20201030 11:51:29.762"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.766" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.765" endtime="20201030 11:51:29.767"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.769" level="INFO">VALUE: [8.394500000000193e-05, 8.27780000000021e-05, 8.37919999999992e-05, 8.387500000000062e-05, 8.445899999999854e-05, 8.366699999999908e-05, 8.445800000000253e-05, 8.344400000000196e-05, 8.41110000000013e-05, 8.29720000000006e-05, 8.309700000000073e-05, 8.295799999999756e-05, 8.44309999999994e-05, 8.29590000000005e-05, 8.3459000000001e-05, 8.46110000000018e-05, 8.444500000000243e-05, 8.452800000000038e-05, 8.326300000000009e-05, 8.377700000000016e-05, 8.408299999999869e-05, 8.358299999999819e-05, 8.416699999999958e-05, 8.327799999999913e-05, 8.277799999999863e-05, 8.362500000000037e-05, 8.36110000000008e-05, 8.30980000000002e-05, 8.279200000000167e-05, 8.42370000000009e-05, 8.277699999999916e-05, 8.292999999999842e-05, 8.377799999999963e-05, 8.362500000000037e-05, 8.377799999999963e-05, 8.32780000000026e-05, 8.384700000000148e-05, 8.394500000000193e-05, 8.42919999999997e-05, 8.32780000000026e-05, 8.294500000000093e-05, 8.359799999999723e-05, 8.41110000000013e-05, 8.379099999999973e-05, 8.362500000000037e-05, 8.447199999999863e-05, 8.46110000000018e-05, 8.379200000000267e-05, 8.31110000000003e-05, 8.405599999999902e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.767" endtime="20201030 11:51:29.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.763" endtime="20201030 11:51:29.770"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.774" endtime="20201030 11:51:29.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.772" endtime="20201030 11:51:29.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.771" endtime="20201030 11:51:29.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.409" endtime="20201030 11:51:29.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.409" endtime="20201030 11:51:29.795"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.804" endtime="20201030 11:51:29.823"></status>
</kw>
<msg timestamp="20201030 11:51:29.823" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.802" endtime="20201030 11:51:29.823"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.826" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.824" endtime="20201030 11:51:29.826"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.827" endtime="20201030 11:51:29.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.799" endtime="20201030 11:51:29.829"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.797" endtime="20201030 11:51:29.830"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.836" endtime="20201030 11:51:30.123"></status>
</kw>
<msg timestamp="20201030 11:51:30.126" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.835" endtime="20201030 11:51:30.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.134" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022595389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022680639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.127" endtime="20201030 11:51:30.135"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.136" endtime="20201030 11:51:30.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.832" endtime="20201030 11:51:30.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.830" endtime="20201030 11:51:30.138"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.143" level="INFO">${RESULT} = [{'diff': 8.524999999999852e-05}, {'diff': 8.629199999999823e-05}, {'diff': 8.66249999999999e-05}, {'diff': 8.644500000000097e-05}, {'diff': 8.529100000000123e-05}, {'diff': 8.544400000000049e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:30.139" endtime="20201030 11:51:30.143"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.147" level="INFO">${ACCURACY} = {'diff': [8.524999999999852e-05, 8.629199999999823e-05, 8.66249999999999e-05, 8.644500000000097e-05, 8.529100000000123e-05, 8.544400000000049e-05, 8.527700000000166e-05, 8.509699999999926e-05, 8.51110...</msg>
<status status="PASS" starttime="20201030 11:51:30.144" endtime="20201030 11:51:30.147"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.151" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.150" endtime="20201030 11:51:30.152"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.154" level="INFO">VALUE: [8.524999999999852e-05, 8.629199999999823e-05, 8.66249999999999e-05, 8.644500000000097e-05, 8.529100000000123e-05, 8.544400000000049e-05, 8.527700000000166e-05, 8.509699999999926e-05, 8.51110000000023e-05, 8.531999999999984e-05, 8.508299999999969e-05, 8.509700000000273e-05, 8.494499999999947e-05, 8.655499999999858e-05, 8.487499999999815e-05, 8.609799999999973e-05, 8.512500000000187e-05, 8.663899999999947e-05, 8.545800000000006e-05, 8.511099999999883e-05, 8.494399999999999e-05, 8.595800000000056e-05, 8.594500000000047e-05, 8.613900000000244e-05, 8.48330000000029e-05, 8.54310000000004e-05, 8.613900000000244e-05, 8.577700000000216e-05, 8.66249999999999e-05, 8.579099999999826e-05, 8.509699999999926e-05, 8.644400000000149e-05, 8.627800000000213e-05, 8.661100000000033e-05, 8.516599999999763e-05, 8.477800000000063e-05, 8.545899999999954e-05, 8.527700000000166e-05, 8.58050000000013e-05, 8.511099999999883e-05, 8.476399999999759e-05, 8.512500000000187e-05, 8.476400000000106e-05, 8.658300000000119e-05, 8.56110000000028e-05, 8.626399999999909e-05, 8.641599999999888e-05, 8.597300000000307e-05, 8.529199999999723e-05, 8.56249999999989e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.153" endtime="20201030 11:51:30.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.148" endtime="20201030 11:51:30.155"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.159" endtime="20201030 11:51:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.158" endtime="20201030 11:51:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.156" endtime="20201030 11:51:30.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.796" endtime="20201030 11:51:30.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.795" endtime="20201030 11:51:30.180"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.189" endtime="20201030 11:51:30.209"></status>
</kw>
<msg timestamp="20201030 11:51:30.210" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.187" endtime="20201030 11:51:30.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.211" endtime="20201030 11:51:30.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.213" endtime="20201030 11:51:30.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.185" endtime="20201030 11:51:30.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.183" endtime="20201030 11:51:30.216"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.223" endtime="20201030 11:51:30.510"></status>
</kw>
<msg timestamp="20201030 11:51:30.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.221" endtime="20201030 11:51:30.513"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.521" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023459111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023547569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.514" endtime="20201030 11:51:30.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.523" endtime="20201030 11:51:30.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.218" endtime="20201030 11:51:30.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.217" endtime="20201030 11:51:30.525"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.529" level="INFO">${RESULT} = [{'diff': 8.845799999999959e-05}, {'diff': 8.762499999999743e-05}, {'diff': 8.779100000000026e-05}, {'diff': 8.712499999999693e-05}, {'diff': 8.76250000000009e-05}, {'diff': 8.694399999999852e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:30.526" endtime="20201030 11:51:30.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.534" level="INFO">${ACCURACY} = {'diff': [8.845799999999959e-05, 8.762499999999743e-05, 8.779100000000026e-05, 8.712499999999693e-05, 8.76250000000009e-05, 8.694399999999852e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.72640...</msg>
<status status="PASS" starttime="20201030 11:51:30.530" endtime="20201030 11:51:30.534"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.538" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.537" endtime="20201030 11:51:30.539"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.542" level="INFO">VALUE: [8.845799999999959e-05, 8.762499999999743e-05, 8.779100000000026e-05, 8.712499999999693e-05, 8.76250000000009e-05, 8.694399999999852e-05, 8.686100000000058e-05, 8.711100000000083e-05, 8.726400000000009e-05, 8.861099999999886e-05, 8.762499999999743e-05, 8.7944999999999e-05, 8.742999999999945e-05, 8.763900000000047e-05, 8.844400000000002e-05, 8.78059999999993e-05, 8.742999999999945e-05, 8.761100000000133e-05, 8.74449999999985e-05, 8.788900000000072e-05, 8.809699999999879e-05, 8.729199999999923e-05, 8.709800000000073e-05, 8.855499999999711e-05, 8.777700000000069e-05, 8.809699999999879e-05, 8.806900000000312e-05, 8.866699999999714e-05, 8.827800000000066e-05, 8.779199999999973e-05, 8.861100000000233e-05, 8.6944999999998e-05, 8.826400000000109e-05, 8.74449999999985e-05, 8.711100000000083e-05, 8.81670000000001e-05, 8.777700000000069e-05, 8.777800000000016e-05, 8.794399999999952e-05, 8.727799999999966e-05, 8.861099999999886e-05, 8.727800000000313e-05, 8.723600000000095e-05, 8.780600000000277e-05, 8.71120000000003e-05, 8.840199999999784e-05, 8.766700000000308e-05, 8.794400000000299e-05, 8.744400000000249e-05, 8.761099999999786e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.539" endtime="20201030 11:51:30.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.535" endtime="20201030 11:51:30.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.547" endtime="20201030 11:51:30.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.546" endtime="20201030 11:51:30.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.544" endtime="20201030 11:51:30.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.181" endtime="20201030 11:51:30.568"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.180" endtime="20201030 11:51:30.568"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.577" endtime="20201030 11:51:30.596"></status>
</kw>
<msg timestamp="20201030 11:51:30.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.575" endtime="20201030 11:51:30.597"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.599" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.597" endtime="20201030 11:51:30.599"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.600" endtime="20201030 11:51:30.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.573" endtime="20201030 11:51:30.602"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.570" endtime="20201030 11:51:30.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.609" endtime="20201030 11:51:30.896"></status>
</kw>
<msg timestamp="20201030 11:51:30.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.608" endtime="20201030 11:51:30.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022547167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022637111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.901" endtime="20201030 11:51:30.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.909" endtime="20201030 11:51:30.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.605" endtime="20201030 11:51:30.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.603" endtime="20201030 11:51:30.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.916" level="INFO">${RESULT} = [{'diff': 8.994400000000152e-05}, {'diff': 8.927799999999819e-05}, {'diff': 8.979200000000173e-05}, {'diff': 8.911099999999936e-05}, {'diff': 8.977799999999869e-05}, {'diff': 9.025000000000005e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:30.913" endtime="20201030 11:51:30.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.921" level="INFO">${ACCURACY} = {'diff': [8.994400000000152e-05, 8.927799999999819e-05, 8.979200000000173e-05, 8.911099999999936e-05, 8.977799999999869e-05, 9.025000000000005e-05, 8.920899999999982e-05, 8.944399999999755e-05, 8.9443...</msg>
<status status="PASS" starttime="20201030 11:51:30.917" endtime="20201030 11:51:30.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.926" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.925" endtime="20201030 11:51:30.926"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.928" level="INFO">VALUE: [8.994400000000152e-05, 8.927799999999819e-05, 8.979200000000173e-05, 8.911099999999936e-05, 8.977799999999869e-05, 9.025000000000005e-05, 8.920899999999982e-05, 8.944399999999755e-05, 8.944399999999755e-05, 8.995800000000109e-05, 8.895800000000009e-05, 8.940300000000179e-05, 8.947200000000016e-05, 8.977800000000216e-05, 8.872200000000288e-05, 8.877799999999769e-05, 8.98060000000013e-05, 8.880500000000083e-05, 8.976399999999912e-05, 8.944400000000102e-05, 8.886099999999911e-05, 8.879200000000073e-05, 9.01389999999995e-05, 8.977800000000216e-05, 8.894400000000052e-05, 9.058400000000119e-05, 8.941699999999789e-05, 9.03190000000019e-05, 8.877799999999769e-05, 8.93190000000009e-05, 8.940200000000231e-05, 9.062500000000043e-05, 8.927800000000166e-05, 8.909699999999979e-05, 9.044400000000202e-05, 8.945800000000059e-05, 8.8945e-05, 9.01389999999995e-05, 8.995900000000057e-05, 8.877800000000116e-05, 9.011199999999983e-05, 8.923599999999948e-05, 8.992999999999848e-05, 9.027800000000266e-05, 8.876399999999812e-05, 8.877799999999769e-05, 8.894400000000052e-05, 8.908300000000022e-05, 8.994499999999753e-05, 8.94450000000005e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.927" endtime="20201030 11:51:30.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.922" endtime="20201030 11:51:30.930"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.934" endtime="20201030 11:51:30.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.932" endtime="20201030 11:51:30.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.931" endtime="20201030 11:51:30.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.569" endtime="20201030 11:51:30.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.568" endtime="20201030 11:51:30.954"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.963" endtime="20201030 11:51:30.983"></status>
</kw>
<msg timestamp="20201030 11:51:30.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.962" endtime="20201030 11:51:30.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.984" endtime="20201030 11:51:30.986"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.987" endtime="20201030 11:51:30.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.959" endtime="20201030 11:51:30.989"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.957" endtime="20201030 11:51:30.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.996" endtime="20201030 11:51:31.286"></status>
</kw>
<msg timestamp="20201030 11:51:31.290" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.995" endtime="20201030 11:51:31.290"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.298" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022505778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022598083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.291" endtime="20201030 11:51:31.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.299" endtime="20201030 11:51:31.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.992" endtime="20201030 11:51:31.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.990" endtime="20201030 11:51:31.302"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.306" level="INFO">${RESULT} = [{'diff': 9.230500000000086e-05}, {'diff': 9.212499999999846e-05}, {'diff': 9.151400000000087e-05}, {'diff': 9.112500000000093e-05}, {'diff': 9.262499999999896e-05}, {'diff': 9.229199999999729e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:31.303" endtime="20201030 11:51:31.307"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.311" level="INFO">${ACCURACY} = {'diff': [9.230500000000086e-05, 9.212499999999846e-05, 9.151400000000087e-05, 9.112500000000093e-05, 9.262499999999896e-05, 9.229199999999729e-05, 9.117999999999973e-05, 9.211100000000236e-05, 9.0944...</msg>
<status status="PASS" starttime="20201030 11:51:31.307" endtime="20201030 11:51:31.311"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.316" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.315" endtime="20201030 11:51:31.316"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.318" level="INFO">VALUE: [9.230500000000086e-05, 9.212499999999846e-05, 9.151400000000087e-05, 9.112500000000093e-05, 9.262499999999896e-05, 9.229199999999729e-05, 9.117999999999973e-05, 9.211100000000236e-05, 9.094499999999853e-05, 9.194499999999953e-05, 9.227799999999772e-05, 9.162500000000143e-05, 9.261099999999939e-05, 9.180500000000036e-05, 9.127800000000019e-05, 9.076400000000012e-05, 9.094399999999905e-05, 9.126399999999715e-05, 9.176400000000112e-05, 9.129199999999976e-05, 9.105599999999908e-05, 9.14450000000025e-05, 9.209699999999932e-05, 9.092999999999948e-05, 9.141599999999694e-05, 9.175000000000155e-05, 9.159699999999882e-05, 9.079199999999926e-05, 9.0945000000002e-05, 9.241700000000089e-05, 9.122299999999792e-05, 9.111200000000083e-05, 9.194499999999953e-05, 9.177700000000122e-05, 9.129100000000029e-05, 9.229200000000076e-05, 9.179200000000026e-05, 9.261099999999939e-05, 9.262500000000243e-05, 9.112500000000093e-05, 9.077799999999969e-05, 9.122300000000139e-05, 9.127699999999725e-05, 9.077700000000022e-05, 9.223600000000248e-05, 9.129199999999976e-05, 9.261099999999939e-05, 9.179200000000026e-05, 9.211099999999889e-05, 9.194499999999953e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.317" endtime="20201030 11:51:31.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.312" endtime="20201030 11:51:31.320"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.324" endtime="20201030 11:51:31.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.322" endtime="20201030 11:51:31.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.321" endtime="20201030 11:51:31.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.955" endtime="20201030 11:51:31.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.955" endtime="20201030 11:51:31.344"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.353" endtime="20201030 11:51:31.373"></status>
</kw>
<msg timestamp="20201030 11:51:31.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.352" endtime="20201030 11:51:31.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.376" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.375" endtime="20201030 11:51:31.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.378" endtime="20201030 11:51:31.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.349" endtime="20201030 11:51:31.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.347" endtime="20201030 11:51:31.380"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.387" endtime="20201030 11:51:31.674"></status>
</kw>
<msg timestamp="20201030 11:51:31.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.385" endtime="20201030 11:51:31.677"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023437181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023531375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.678" endtime="20201030 11:51:31.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.687" endtime="20201030 11:51:31.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.383" endtime="20201030 11:51:31.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.381" endtime="20201030 11:51:31.689"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.693" level="INFO">${RESULT} = [{'diff': 9.419399999999883e-05}, {'diff': 9.427799999999972e-05}, {'diff': 9.29590000000001e-05}, {'diff': 9.359700000000082e-05}, {'diff': 9.412500000000046e-05}, {'diff': 9.427800000000319e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:31.690" endtime="20201030 11:51:31.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.698" level="INFO">${ACCURACY} = {'diff': [9.419399999999883e-05, 9.427799999999972e-05, 9.29590000000001e-05, 9.359700000000082e-05, 9.412500000000046e-05, 9.427800000000319e-05, 9.34720000000007e-05, 9.376399999999965e-05, 9.433399...</msg>
<status status="PASS" starttime="20201030 11:51:31.694" endtime="20201030 11:51:31.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.702" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.701" endtime="20201030 11:51:31.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.705" level="INFO">VALUE: [9.419399999999883e-05, 9.427799999999972e-05, 9.29590000000001e-05, 9.359700000000082e-05, 9.412500000000046e-05, 9.427800000000319e-05, 9.34720000000007e-05, 9.376399999999965e-05, 9.4333999999998e-05, 9.411100000000089e-05, 9.363899999999953e-05, 9.276399999999865e-05, 9.405599999999861e-05, 9.326399999999915e-05, 9.331899999999796e-05, 9.345800000000112e-05, 9.277699999999875e-05, 9.44859999999978e-05, 9.359700000000082e-05, 9.442999999999951e-05, 9.295800000000062e-05, 9.31940000000013e-05, 9.311099999999989e-05, 9.277800000000169e-05, 9.277800000000169e-05, 9.327800000000219e-05, 9.344499999999756e-05, 9.392999999999901e-05, 9.294400000000105e-05, 9.359700000000082e-05, 9.462499999999749e-05, 9.345800000000112e-05, 9.39720000000012e-05, 9.394499999999806e-05, 9.376400000000312e-05, 9.312500000000293e-05, 9.463899999999706e-05, 9.376300000000018e-05, 9.461100000000139e-05, 9.462500000000096e-05, 9.320800000000087e-05, 9.288899999999878e-05, 9.395800000000162e-05, 9.427800000000319e-05, 9.344499999999756e-05, 9.429199999999929e-05, 9.311200000000283e-05, 9.443100000000246e-05, 9.394400000000205e-05, 9.294400000000105e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.703" endtime="20201030 11:51:31.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.699" endtime="20201030 11:51:31.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.711" endtime="20201030 11:51:31.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.709" endtime="20201030 11:51:31.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.708" endtime="20201030 11:51:31.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.345" endtime="20201030 11:51:31.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.345" endtime="20201030 11:51:31.732"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.741" endtime="20201030 11:51:31.759"></status>
</kw>
<msg timestamp="20201030 11:51:31.760" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.739" endtime="20201030 11:51:31.760"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.761" endtime="20201030 11:51:31.763"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.764" endtime="20201030 11:51:31.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.736" endtime="20201030 11:51:31.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.734" endtime="20201030 11:51:31.766"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.773" endtime="20201030 11:51:32.058"></status>
</kw>
<msg timestamp="20201030 11:51:32.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.771" endtime="20201030 11:51:32.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022567986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022664264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.063" endtime="20201030 11:51:32.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.071" endtime="20201030 11:51:32.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.769" endtime="20201030 11:51:32.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.767" endtime="20201030 11:51:32.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.078" level="INFO">${RESULT} = [{'diff': 9.627799999999825e-05}, {'diff': 9.494500000000253e-05}, {'diff': 9.505600000000308e-05}, {'diff': 9.545899999999913e-05}, {'diff': 9.529100000000082e-05}, {'diff': 9.576399999999818e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:32.075" endtime="20201030 11:51:32.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.083" level="INFO">${ACCURACY} = {'diff': [9.627799999999825e-05, 9.494500000000253e-05, 9.505600000000308e-05, 9.545899999999913e-05, 9.529100000000082e-05, 9.576399999999818e-05, 9.626399999999868e-05, 9.594400000000058e-05, 9.6096...</msg>
<status status="PASS" starttime="20201030 11:51:32.079" endtime="20201030 11:51:32.084"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.088" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.087" endtime="20201030 11:51:32.088"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.090" level="INFO">VALUE: [9.627799999999825e-05, 9.494500000000253e-05, 9.505600000000308e-05, 9.545899999999913e-05, 9.529100000000082e-05, 9.576399999999818e-05, 9.626399999999868e-05, 9.594400000000058e-05, 9.609699999999985e-05, 9.659700000000035e-05, 9.594500000000006e-05, 9.511100000000189e-05, 9.64859999999998e-05, 9.579200000000079e-05, 9.579100000000132e-05, 9.663899999999906e-05, 9.645800000000065e-05, 9.606900000000071e-05, 9.57079999999999e-05, 9.477800000000022e-05, 9.613900000000203e-05, 9.611099999999942e-05, 9.579200000000079e-05, 9.526400000000115e-05, 9.611199999999889e-05, 9.638799999999934e-05, 9.525000000000158e-05, 9.613899999999856e-05, 9.511099999999842e-05, 9.513899999999756e-05, 9.594400000000058e-05, 9.593100000000049e-05, 9.56530000000011e-05, 9.644500000000056e-05, 9.523700000000149e-05, 9.645800000000065e-05, 9.477700000000075e-05, 9.494399999999958e-05, 9.611099999999942e-05, 9.661099999999992e-05, 9.645799999999718e-05, 9.611099999999942e-05, 9.543099999999999e-05, 9.563799999999859e-05, 9.663900000000253e-05, 9.544400000000008e-05, 9.626299999999921e-05, 9.544400000000008e-05, 9.661099999999992e-05, 9.577800000000122e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.089" endtime="20201030 11:51:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.084" endtime="20201030 11:51:32.098"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.102" endtime="20201030 11:51:32.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.100" endtime="20201030 11:51:32.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.099" endtime="20201030 11:51:32.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.733" endtime="20201030 11:51:32.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.732" endtime="20201030 11:51:32.123"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.132" endtime="20201030 11:51:32.151"></status>
</kw>
<msg timestamp="20201030 11:51:32.152" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.130" endtime="20201030 11:51:32.152"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.154" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.153" endtime="20201030 11:51:32.155"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.156" endtime="20201030 11:51:32.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.127" endtime="20201030 11:51:32.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.125" endtime="20201030 11:51:32.158"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.165" endtime="20201030 11:51:32.452"></status>
</kw>
<msg timestamp="20201030 11:51:32.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.164" endtime="20201030 11:51:32.456"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.464" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022641847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022738625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.456" endtime="20201030 11:51:32.464"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.465" endtime="20201030 11:51:32.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.161" endtime="20201030 11:51:32.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.159" endtime="20201030 11:51:32.468"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.472" level="INFO">${RESULT} = [{'diff': 9.677799999999875e-05}, {'diff': 9.756999999999821e-05}, {'diff': 9.812500000000099e-05}, {'diff': 9.777799999999975e-05}, {'diff': 9.859800000000182e-05}, {'diff': 9.861200000000139e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:32.469" endtime="20201030 11:51:32.472"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.476" level="INFO">${ACCURACY} = {'diff': [9.677799999999875e-05, 9.756999999999821e-05, 9.812500000000099e-05, 9.777799999999975e-05, 9.859800000000182e-05, 9.861200000000139e-05, 9.711100000000042e-05, 9.762500000000049e-05, 9.7777...</msg>
<status status="PASS" starttime="20201030 11:51:32.473" endtime="20201030 11:51:32.476"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.481" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.480" endtime="20201030 11:51:32.481"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.483" level="INFO">VALUE: [9.677799999999875e-05, 9.756999999999821e-05, 9.812500000000099e-05, 9.777799999999975e-05, 9.859800000000182e-05, 9.861200000000139e-05, 9.711100000000042e-05, 9.762500000000049e-05, 9.777799999999975e-05, 9.713899999999956e-05, 9.795799999999869e-05, 9.847199999999875e-05, 9.761100000000092e-05, 9.744499999999809e-05, 9.750000000000036e-05, 9.844500000000256e-05, 9.727699999999978e-05, 9.680500000000189e-05, 9.86670000000002e-05, 9.811100000000142e-05, 9.776400000000018e-05, 9.676399999999918e-05, 9.695900000000063e-05, 9.862499999999802e-05, 9.726399999999968e-05, 9.843099999999952e-05, 9.811100000000142e-05, 9.761099999999745e-05, 9.862499999999802e-05, 9.827800000000025e-05, 9.727799999999925e-05, 9.78059999999989e-05, 9.758400000000125e-05, 9.758399999999778e-05, 9.712499999999999e-05, 9.727799999999925e-05, 9.795799999999869e-05, 9.794399999999912e-05, 9.709700000000085e-05, 9.727800000000272e-05, 9.763900000000006e-05, 9.826400000000068e-05, 9.676400000000265e-05, 9.695900000000063e-05, 9.783300000000203e-05, 9.797199999999825e-05, 9.720900000000088e-05, 9.761099999999745e-05, 9.776399999999671e-05, 9.711099999999695e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.482" endtime="20201030 11:51:32.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.477" endtime="20201030 11:51:32.485"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.489" endtime="20201030 11:51:32.508"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.487" endtime="20201030 11:51:32.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.486" endtime="20201030 11:51:32.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.124" endtime="20201030 11:51:32.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.123" endtime="20201030 11:51:32.509"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.519" endtime="20201030 11:51:32.540"></status>
</kw>
<msg timestamp="20201030 11:51:32.540" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.517" endtime="20201030 11:51:32.540"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.543" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.541" endtime="20201030 11:51:32.543"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.544" endtime="20201030 11:51:32.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.514" endtime="20201030 11:51:32.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.512" endtime="20201030 11:51:32.547"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.553" endtime="20201030 11:51:32.839"></status>
</kw>
<msg timestamp="20201030 11:51:32.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.552" endtime="20201030 11:51:32.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.851" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024263736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024364333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.844" endtime="20201030 11:51:32.852"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.852" endtime="20201030 11:51:32.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.549" endtime="20201030 11:51:32.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.547" endtime="20201030 11:51:32.855"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.859" level="INFO">${RESULT} = [{'diff': 0.00010059699999999741}, {'diff': 0.00010061100000000045}, {'diff': 9.994400000000112e-05}, {'diff': 9.979200000000132e-05}, {'diff': 9.911099999999895e-05}, {'diff': 9.944500000000009e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:32.856" endtime="20201030 11:51:32.859"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.863" level="INFO">${ACCURACY} = {'diff': [0.00010059699999999741, 0.00010061100000000045, 9.994400000000112e-05, 9.979200000000132e-05, 9.911099999999895e-05, 9.944500000000009e-05, 9.944500000000009e-05, 9.965299999999816e-05, 9.96...</msg>
<status status="PASS" starttime="20201030 11:51:32.860" endtime="20201030 11:51:32.864"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.868" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.867" endtime="20201030 11:51:32.868"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.871" level="INFO">VALUE: [0.00010059699999999741, 0.00010061100000000045, 9.994400000000112e-05, 9.979200000000132e-05, 9.911099999999895e-05, 9.944500000000009e-05, 9.944500000000009e-05, 9.965299999999816e-05, 9.965299999999816e-05, 9.995800000000069e-05, 9.909699999999938e-05, 0.00010061100000000045, 0.00010015299999999866, 9.893100000000002e-05, 9.911099999999895e-05, 9.877800000000075e-05, 9.945899999999966e-05, 9.915300000000113e-05, 9.895799999999969e-05, 9.981900000000099e-05, 0.00010008300000000081, 9.879200000000032e-05, 0.00010009700000000038, 0.00010066699999999873, 9.961099999999945e-05, 9.927799999999778e-05, 0.00010027799999999878, 9.913800000000209e-05, 9.962499999999902e-05, 0.00010012500000000299, 9.977700000000228e-05, 9.977800000000175e-05, 9.911099999999895e-05, 9.977799999999828e-05, 0.00010026400000000268, 0.00010061100000000045, 0.00010043100000000152, 9.976399999999871e-05, 9.929100000000135e-05, 0.00010011099999999995, 0.00010062500000000002, 0.0001000549999999982, 0.00010027799999999878, 0.00010015300000000213, 0.00010027800000000225, 0.00010059699999999741, 9.926400000000168e-05, 9.876399999999771e-05, 0.00010009700000000038, 9.979100000000185e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.869" endtime="20201030 11:51:32.872"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.864" endtime="20201030 11:51:32.873"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.877" endtime="20201030 11:51:32.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.875" endtime="20201030 11:51:32.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.874" endtime="20201030 11:51:32.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.510" endtime="20201030 11:51:32.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.510" endtime="20201030 11:51:32.897"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.906" endtime="20201030 11:51:32.926"></status>
</kw>
<msg timestamp="20201030 11:51:32.926" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.905" endtime="20201030 11:51:32.927"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.929" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.927" endtime="20201030 11:51:32.929"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.930" endtime="20201030 11:51:32.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.902" endtime="20201030 11:51:32.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.900" endtime="20201030 11:51:32.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.939" endtime="20201030 11:51:33.226"></status>
</kw>
<msg timestamp="20201030 11:51:33.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.938" endtime="20201030 11:51:33.229"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022447708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022549194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.230" endtime="20201030 11:51:33.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.238" endtime="20201030 11:51:33.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.935" endtime="20201030 11:51:33.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.933" endtime="20201030 11:51:33.241"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.245" level="INFO">${RESULT} = [{'diff': 0.00010148600000000133}, {'diff': 0.00010212499999999805}, {'diff': 0.00010227800000000078}, {'diff': 0.000101416}, {'diff': 0.00010144399999999915}, {'diff': 0.00010227800000000078}, {'diff...</msg>
<status status="PASS" starttime="20201030 11:51:33.242" endtime="20201030 11:51:33.245"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.250" level="INFO">${ACCURACY} = {'diff': [0.00010148600000000133, 0.00010212499999999805, 0.00010227800000000078, 0.000101416, 0.00010144399999999915, 0.00010227800000000078, 0.00010113899999999662, 0.00010111100000000095, 0.0001016...</msg>
<status status="PASS" starttime="20201030 11:51:33.246" endtime="20201030 11:51:33.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.255" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.254" endtime="20201030 11:51:33.255"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.257" level="INFO">VALUE: [0.00010148600000000133, 0.00010212499999999805, 0.00010227800000000078, 0.000101416, 0.00010144399999999915, 0.00010227800000000078, 0.00010113899999999662, 0.00010111100000000095, 0.00010161100000000145, 0.00010145899999999819, 0.00010079200000000232, 0.00010109800000000085, 0.00010195799999999922, 0.00010077699999999981, 0.00010162500000000102, 0.00010227800000000078, 0.00010177800000000028, 0.00010244400000000015, 0.00010080599999999842, 0.00010229200000000035, 0.00010079199999999885, 0.00010230500000000045, 0.00010097200000000126, 0.00010227699999999784, 0.00010129099999999988, 0.00010261100000000245, 0.00010113900000000009, 0.00010112500000000052, 0.00010127799999999978, 0.00010107000000000171, 0.00010261099999999898, 0.00010129099999999988, 0.00010095800000000169, 0.00010112500000000052, 0.00010111099999999748, 0.00010087500000000027, 0.00010176400000000071, 0.00010079199999999885, 0.00010077799999999928, 0.00010129200000000282, 0.00010127799999999978, 0.00010159800000000135, 0.00010209699999999891, 0.00010108300000000181, 0.00010131900000000249, 0.00010212500000000152, 0.00010130599999999892, 0.00010180599999999942, 0.00010161100000000145, 0.0001010000000000004]</msg>
<status status="PASS" starttime="20201030 11:51:33.256" endtime="20201030 11:51:33.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.251" endtime="20201030 11:51:33.259"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.262" endtime="20201030 11:51:33.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.261" endtime="20201030 11:51:33.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.260" endtime="20201030 11:51:33.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.898" endtime="20201030 11:51:33.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.898" endtime="20201030 11:51:33.283"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.292" endtime="20201030 11:51:33.312"></status>
</kw>
<msg timestamp="20201030 11:51:33.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.290" endtime="20201030 11:51:33.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.314" endtime="20201030 11:51:33.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.317" endtime="20201030 11:51:33.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.288" endtime="20201030 11:51:33.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.286" endtime="20201030 11:51:33.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.326" endtime="20201030 11:51:33.614"></status>
</kw>
<msg timestamp="20201030 11:51:33.617" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.324" endtime="20201030 11:51:33.617"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.625" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022828139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022931625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.618" endtime="20201030 11:51:33.626"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.626" endtime="20201030 11:51:33.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.322" endtime="20201030 11:51:33.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.320" endtime="20201030 11:51:33.629"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.633" level="INFO">${RESULT} = [{'diff': 0.00010348599999999986}, {'diff': 0.00010427800000000279}, {'diff': 0.00010313899999999862}, {'diff': 0.00010286099999999923}, {'diff': 0.00010397300000000026}, {'diff': 0.000103124999999999...</msg>
<status status="PASS" starttime="20201030 11:51:33.630" endtime="20201030 11:51:33.633"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.637" level="INFO">${ACCURACY} = {'diff': [0.00010348599999999986, 0.00010427800000000279, 0.00010313899999999862, 0.00010286099999999923, 0.00010397300000000026, 0.00010312499999999905, 0.00010344499999999715, 0.00010279100000000138...</msg>
<status status="PASS" starttime="20201030 11:51:33.634" endtime="20201030 11:51:33.637"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.642" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.641" endtime="20201030 11:51:33.642"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.644" level="INFO">VALUE: [0.00010348599999999986, 0.00010427800000000279, 0.00010313899999999862, 0.00010286099999999923, 0.00010397300000000026, 0.00010312499999999905, 0.00010344499999999715, 0.00010279100000000138, 0.00010459700000000141, 0.00010377699999999934, 0.00010355499999999823, 0.00010427799999999932, 0.00010451300000000052, 0.00010461100000000098, 0.00010291700000000098, 0.000103820000000001, 0.00010412500000000005, 0.00010444399999999868, 0.00010429099999999941, 0.00010395800000000122, 0.00010295800000000022, 0.00010462500000000055, 0.00010356900000000127, 0.00010277799999999782, 0.00010281900000000052, 0.00010412500000000005, 0.00010315300000000166, 0.00010313899999999862, 0.00010277699999999834, 0.00010394400000000165, 0.00010297199999999979, 0.00010427799999999932, 0.00010459700000000141, 0.00010379199999999839, 0.00010361099999999998, 0.00010362499999999955, 0.00010361099999999998, 0.00010293000000000108, 0.00010462499999999708, 0.00010358299999999737, 0.00010297199999999979, 0.00010334699999999669, 0.00010461100000000098, 0.00010343100000000105, 0.00010383299999999762, 0.00010426399999999975, 0.00010379100000000238, 0.00010427799999999932, 0.00010365300000000216, 0.00010344400000000115]</msg>
<status status="PASS" starttime="20201030 11:51:33.643" endtime="20201030 11:51:33.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.638" endtime="20201030 11:51:33.646"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.650" endtime="20201030 11:51:33.669"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.648" endtime="20201030 11:51:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.647" endtime="20201030 11:51:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.284" endtime="20201030 11:51:33.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.284" endtime="20201030 11:51:33.670"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.679" endtime="20201030 11:51:33.701"></status>
</kw>
<msg timestamp="20201030 11:51:33.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.678" endtime="20201030 11:51:33.702"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.704" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.702" endtime="20201030 11:51:33.704"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.705" endtime="20201030 11:51:33.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.675" endtime="20201030 11:51:33.707"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.673" endtime="20201030 11:51:33.708"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.715" endtime="20201030 11:51:34.001"></status>
</kw>
<msg timestamp="20201030 11:51:34.004" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.713" endtime="20201030 11:51:34.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023523417, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023630042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.005" endtime="20201030 11:51:34.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.014" endtime="20201030 11:51:34.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.710" endtime="20201030 11:51:34.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.708" endtime="20201030 11:51:34.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.020" level="INFO">${RESULT} = [{'diff': 0.00010662499999999908}, {'diff': 0.00010494500000000212}, {'diff': 0.00010541700000000001}, {'diff': 0.00010623599999999914}, {'diff': 0.00010545799999999925}, {'diff': 0.000105096999999998...</msg>
<status status="PASS" starttime="20201030 11:51:34.017" endtime="20201030 11:51:34.021"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.025" level="INFO">${ACCURACY} = {'diff': [0.00010662499999999908, 0.00010494500000000212, 0.00010541700000000001, 0.00010623599999999914, 0.00010545799999999925, 0.00010509699999999844, 0.00010590300000000094, 0.00010658300000000037...</msg>
<status status="PASS" starttime="20201030 11:51:34.021" endtime="20201030 11:51:34.025"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.029" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.028" endtime="20201030 11:51:34.030"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.033" level="INFO">VALUE: [0.00010662499999999908, 0.00010494500000000212, 0.00010541700000000001, 0.00010623599999999914, 0.00010545799999999925, 0.00010509699999999844, 0.00010590300000000094, 0.00010658300000000037, 0.00010594499999999965, 0.00010579200000000039, 0.00010512500000000105, 0.00010576400000000125, 0.00010561200000000145, 0.00010598599999999889, 0.00010644400000000068, 0.00010644400000000068, 0.00010661099999999951, 0.00010643099999999711, 0.00010636099999999926, 0.00010547299999999829, 0.00010498600000000136, 0.00010550000000000143, 0.00010494399999999918, 0.00010530499999999998, 0.00010659699999999994, 0.00010511100000000148, 0.0001062499999999987, 0.00010645899999999972, 0.00010562500000000155, 0.00010612499999999858, 0.00010595899999999922, 0.00010495800000000222, 0.00010612500000000205, 0.00010533300000000259, 0.00010627799999999785, 0.00010495800000000222, 0.00010479199999999939, 0.00010579200000000039, 0.00010627799999999785, 0.00010544499999999915, 0.00010545799999999925, 0.00010559700000000241, 0.00010629099999999794, 0.00010661100000000298, 0.00010565300000000069, 0.00010594400000000018, 0.00010645899999999972, 0.00010512500000000105, 0.00010525000000000118, 0.00010577800000000082]</msg>
<status status="PASS" starttime="20201030 11:51:34.030" endtime="20201030 11:51:34.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.026" endtime="20201030 11:51:34.034"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.038" endtime="20201030 11:51:34.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.036" endtime="20201030 11:51:34.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.035" endtime="20201030 11:51:34.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.671" endtime="20201030 11:51:34.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.671" endtime="20201030 11:51:34.059"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.068" endtime="20201030 11:51:34.088"></status>
</kw>
<msg timestamp="20201030 11:51:34.088" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.066" endtime="20201030 11:51:34.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.091" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.090" endtime="20201030 11:51:34.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.092" endtime="20201030 11:51:34.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.063" endtime="20201030 11:51:34.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.061" endtime="20201030 11:51:34.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.102" endtime="20201030 11:51:34.388"></status>
</kw>
<msg timestamp="20201030 11:51:34.391" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.100" endtime="20201030 11:51:34.392"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.400" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023062458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023171069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.393" endtime="20201030 11:51:34.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.401" endtime="20201030 11:51:34.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.097" endtime="20201030 11:51:34.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.095" endtime="20201030 11:51:34.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.408" level="INFO">${RESULT} = [{'diff': 0.00010861099999999804}, {'diff': 0.00010763899999999965}, {'diff': 0.00010729099999999894}, {'diff': 0.00010733399999999713}, {'diff': 0.00010677800000000182}, {'diff': 0.000107611000000000...</msg>
<status status="PASS" starttime="20201030 11:51:34.405" endtime="20201030 11:51:34.408"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.413" level="INFO">${ACCURACY} = {'diff': [0.00010861099999999804, 0.00010763899999999965, 0.00010729099999999894, 0.00010733399999999713, 0.00010677800000000182, 0.00010761100000000051, 0.00010811100000000101, 0.00010859699999999847...</msg>
<status status="PASS" starttime="20201030 11:51:34.409" endtime="20201030 11:51:34.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.418" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.417" endtime="20201030 11:51:34.418"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.420" level="INFO">VALUE: [0.00010861099999999804, 0.00010763899999999965, 0.00010729099999999894, 0.00010733399999999713, 0.00010677800000000182, 0.00010761100000000051, 0.00010811100000000101, 0.00010859699999999847, 0.00010694500000000065, 0.00010745799999999778, 0.00010812499999999711, 0.00010844399999999921, 0.00010811100000000101, 0.00010844399999999921, 0.00010761100000000051, 0.00010766599999999932, 0.00010679200000000139, 0.00010795899999999775, 0.00010861200000000099, 0.00010794400000000218, 0.00010827700000000037, 0.00010776399999999978, 0.00010729200000000189, 0.00010677800000000182, 0.00010861100000000151, 0.00010844499999999868, 0.00010862500000000108, 0.00010676399999999878, 0.00010762500000000008, 0.00010798600000000089, 0.00010727799999999885, 0.00010844399999999921, 0.00010850000000000096, 0.00010748699999999986, 0.00010827799999999985, 0.00010743100000000158, 0.00010829099999999994, 0.00010726300000000327, 0.00010694400000000118, 0.0001072499999999997, 0.00010762500000000008, 0.00010713899999999915, 0.00010765299999999922, 0.00010845900000000172, 0.00010847300000000129, 0.0001072629999999998, 0.00010732000000000103, 0.00010680499999999801, 0.00010680499999999801, 0.00010862499999999761]</msg>
<status status="PASS" starttime="20201030 11:51:34.419" endtime="20201030 11:51:34.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.414" endtime="20201030 11:51:34.422"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.426" endtime="20201030 11:51:34.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.424" endtime="20201030 11:51:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.423" endtime="20201030 11:51:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.060" endtime="20201030 11:51:34.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.059" endtime="20201030 11:51:34.447"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.456" endtime="20201030 11:51:34.475"></status>
</kw>
<msg timestamp="20201030 11:51:34.476" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.454" endtime="20201030 11:51:34.476"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.478" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.477" endtime="20201030 11:51:34.479"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.480" endtime="20201030 11:51:34.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.451" endtime="20201030 11:51:34.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.449" endtime="20201030 11:51:34.482"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.489" endtime="20201030 11:51:34.778"></status>
</kw>
<msg timestamp="20201030 11:51:34.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.487" endtime="20201030 11:51:34.781"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.789" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022586569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.782" endtime="20201030 11:51:34.790"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.791" endtime="20201030 11:51:34.792"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.485" endtime="20201030 11:51:34.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.483" endtime="20201030 11:51:34.793"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.797" level="INFO">${RESULT} = [{'diff': 0.00010941700000000054}, {'diff': 0.00011044400000000121}, {'diff': 0.00011061100000000004}, {'diff': 0.00010894499999999918}, {'diff': 0.00011044500000000068}, {'diff': 0.000109111999999998...</msg>
<status status="PASS" starttime="20201030 11:51:34.794" endtime="20201030 11:51:34.798"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.801" level="INFO">${ACCURACY} = {'diff': [0.00010941700000000054, 0.00011044400000000121, 0.00011061100000000004, 0.00010894499999999918, 0.00011044500000000068, 0.00010911199999999802, 0.00011044399999999774, 0.00010881899999999958...</msg>
<status status="PASS" starttime="20201030 11:51:34.798" endtime="20201030 11:51:34.802"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.806" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.805" endtime="20201030 11:51:34.806"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.809" level="INFO">VALUE: [0.00010941700000000054, 0.00011044400000000121, 0.00011061100000000004, 0.00010894499999999918, 0.00011044500000000068, 0.00010911199999999802, 0.00011044399999999774, 0.00010881899999999958, 0.00010947199999999935, 0.00010994400000000071, 0.00010911099999999854, 0.00010977799999999788, 0.00010927799999999738, 0.00010976399999999831, 0.00010911199999999802, 0.00010944400000000021, 0.00011061100000000004, 0.00010927800000000085, 0.00011044399999999774, 0.00011044500000000068, 0.00010994500000000018, 0.00011011099999999954, 0.00010911200000000149, 0.00011059799999999995, 0.000110596999999997, 0.00010894399999999971, 0.00010930599999999999, 0.00010929200000000042, 0.00010927800000000085, 0.00010983300000000015, 0.00010926399999999781, 0.00011009799999999945, 0.00010877800000000035, 0.00010973599999999917, 0.00010992999999999767, 0.00010995800000000028, 0.00010994400000000071, 0.00011037499999999936, 0.00010911100000000201, 0.00010911099999999854, 0.00010927800000000085, 0.00011044399999999774, 0.00011044400000000121, 0.00010877800000000035, 0.00010947199999999935, 0.00011061100000000004, 0.00010944400000000021, 0.00010927799999999738, 0.00011044500000000068, 0.00010993100000000061]</msg>
<status status="PASS" starttime="20201030 11:51:34.807" endtime="20201030 11:51:34.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.802" endtime="20201030 11:51:34.810"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.814" endtime="20201030 11:51:34.833"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.812" endtime="20201030 11:51:34.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.811" endtime="20201030 11:51:34.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.448" endtime="20201030 11:51:34.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.447" endtime="20201030 11:51:34.835"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.844" endtime="20201030 11:51:34.865"></status>
</kw>
<msg timestamp="20201030 11:51:34.865" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.842" endtime="20201030 11:51:34.866"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.866" endtime="20201030 11:51:34.868"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.869" endtime="20201030 11:51:34.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.839" endtime="20201030 11:51:34.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.837" endtime="20201030 11:51:34.872"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.878" endtime="20201030 11:51:35.165"></status>
</kw>
<msg timestamp="20201030 11:51:35.168" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023617694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.877" endtime="20201030 11:51:35.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023617694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023729014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.169" endtime="20201030 11:51:35.177"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.177" endtime="20201030 11:51:35.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.874" endtime="20201030 11:51:35.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.872" endtime="20201030 11:51:35.180"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.184" level="INFO">${RESULT} = [{'diff': 0.00011131999999999809}, {'diff': 0.00011129199999999895}, {'diff': 0.00011227800000000038}, {'diff': 0.00011227800000000038}, {'diff': 0.00011077800000000235}, {'diff': 0.000111471999999997...</msg>
<status status="PASS" starttime="20201030 11:51:35.181" endtime="20201030 11:51:35.184"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.188" level="INFO">${ACCURACY} = {'diff': [0.00011131999999999809, 0.00011129199999999895, 0.00011227800000000038, 0.00011227800000000038, 0.00011077800000000235, 0.00011147199999999788, 0.00011144399999999874, 0.00011243000000000017...</msg>
<status status="PASS" starttime="20201030 11:51:35.185" endtime="20201030 11:51:35.189"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.193" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.192" endtime="20201030 11:51:35.193"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.195" level="INFO">VALUE: [0.00011131999999999809, 0.00011129199999999895, 0.00011227800000000038, 0.00011227800000000038, 0.00011077800000000235, 0.00011147199999999788, 0.00011144399999999874, 0.00011243000000000017, 0.0001107769999999994, 0.00011109700000000097, 0.00011229199999999995, 0.00011161100000000104, 0.00011079199999999845, 0.00011230599999999952, 0.00011080499999999854, 0.00011150000000000049, 0.0001124030000000005, 0.00011098600000000042, 0.00011112500000000011, 0.00011077800000000235, 0.00011129199999999895, 0.00011179199999999945, 0.00011262500000000161, 0.00011147200000000135, 0.00011262500000000161, 0.00011244399999999974, 0.00011194399999999924, 0.00011145800000000178, 0.00011195800000000228, 0.00011145799999999831, 0.00011258400000000238, 0.00011129199999999895, 0.00011145900000000125, 0.00011197199999999838, 0.00011161100000000104, 0.000112290999999997, 0.00011179200000000292, 0.00011127799999999938, 0.00011162499999999714, 0.00011086100000000029, 0.00011095900000000075, 0.00011244399999999974, 0.00011195800000000228, 0.0001124299999999967, 0.00011162500000000061, 0.00011162500000000061, 0.00011177799999999988, 0.00011262500000000161, 0.00011166599999999985, 0.00011245900000000225]</msg>
<status status="PASS" starttime="20201030 11:51:35.194" endtime="20201030 11:51:35.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.189" endtime="20201030 11:51:35.198"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.201" endtime="20201030 11:51:35.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.200" endtime="20201030 11:51:35.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.199" endtime="20201030 11:51:35.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.835" endtime="20201030 11:51:35.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.835" endtime="20201030 11:51:35.222"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.231" endtime="20201030 11:51:35.252"></status>
</kw>
<msg timestamp="20201030 11:51:35.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.230" endtime="20201030 11:51:35.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.253" endtime="20201030 11:51:35.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.256" endtime="20201030 11:51:35.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.227" endtime="20201030 11:51:35.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.225" endtime="20201030 11:51:35.258"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.265" endtime="20201030 11:51:35.551"></status>
</kw>
<msg timestamp="20201030 11:51:35.555" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.264" endtime="20201030 11:51:35.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022487903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.556" endtime="20201030 11:51:35.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.564" endtime="20201030 11:51:35.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.261" endtime="20201030 11:51:35.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.259" endtime="20201030 11:51:35.567"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.572" level="INFO">${RESULT} = [{'diff': 0.00011380500000000154}, {'diff': 0.0001127770000000014}, {'diff': 0.00011427800000000238}, {'diff': 0.00011329200000000095}, {'diff': 0.00011363899999999871}, {'diff': 0.0001143470000000007...</msg>
<status status="PASS" starttime="20201030 11:51:35.568" endtime="20201030 11:51:35.572"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.577" level="INFO">${ACCURACY} = {'diff': [0.00011380500000000154, 0.0001127770000000014, 0.00011427800000000238, 0.00011329200000000095, 0.00011363899999999871, 0.00011434700000000075, 0.00011362500000000261, 0.00011362499999999914,...</msg>
<status status="PASS" starttime="20201030 11:51:35.573" endtime="20201030 11:51:35.577"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.582" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.581" endtime="20201030 11:51:35.582"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.584" level="INFO">VALUE: [0.00011380500000000154, 0.0001127770000000014, 0.00011427800000000238, 0.00011329200000000095, 0.00011363899999999871, 0.00011434700000000075, 0.00011362500000000261, 0.00011362499999999914, 0.00011320800000000006, 0.00011273600000000217, 0.00011394399999999777, 0.00011277800000000088, 0.00011429200000000195, 0.00011416599999999888, 0.00011429199999999848, 0.00011394500000000071, 0.00011359799999999948, 0.000113290999999998, 0.00011427699999999943, 0.00011440199999999956, 0.00011362499999999914, 0.00011312500000000211, 0.00011347299999999935, 0.00011372200000000013, 0.00011462500000000014, 0.00011311200000000202, 0.00011301400000000156, 0.00011294400000000024, 0.0001144299999999987, 0.00011295799999999981, 0.00011447200000000088, 0.00011429199999999848, 0.00011445900000000078, 0.00011379200000000145, 0.00011347199999999988, 0.00011461100000000057, 0.00011463899999999971, 0.00011284700000000272, 0.00011295799999999981, 0.00011427800000000238, 0.00011311100000000254, 0.00011377800000000188, 0.00011377800000000188, 0.00011379200000000145, 0.00011444400000000174, 0.00011295799999999981, 0.00011362500000000261, 0.00011461100000000057, 0.00011363899999999871, 0.00011395900000000028]</msg>
<status status="PASS" starttime="20201030 11:51:35.583" endtime="20201030 11:51:35.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.578" endtime="20201030 11:51:35.586"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.590" endtime="20201030 11:51:35.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.588" endtime="20201030 11:51:35.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.587" endtime="20201030 11:51:35.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.223" endtime="20201030 11:51:35.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.223" endtime="20201030 11:51:35.610"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.619" endtime="20201030 11:51:35.639"></status>
</kw>
<msg timestamp="20201030 11:51:35.640" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.618" endtime="20201030 11:51:35.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.642" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.641" endtime="20201030 11:51:35.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.643" endtime="20201030 11:51:35.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.615" endtime="20201030 11:51:35.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.613" endtime="20201030 11:51:35.646"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.653" endtime="20201030 11:51:35.940"></status>
</kw>
<msg timestamp="20201030 11:51:35.943" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.651" endtime="20201030 11:51:35.944"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022615361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.945" endtime="20201030 11:51:35.952"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.953" endtime="20201030 11:51:35.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.648" endtime="20201030 11:51:35.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.647" endtime="20201030 11:51:35.956"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.960" level="INFO">${RESULT} = [{'diff': 0.00011477799999999941}, {'diff': 0.00011544500000000221}, {'diff': 0.00011577799999999694}, {'diff': 0.00011597199999999891}, {'diff': 0.00011612500000000164}, {'diff': 0.000115805000000000...</msg>
<status status="PASS" starttime="20201030 11:51:35.956" endtime="20201030 11:51:35.960"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.964" level="INFO">${ACCURACY} = {'diff': [0.00011477799999999941, 0.00011544500000000221, 0.00011577799999999694, 0.00011597199999999891, 0.00011612500000000164, 0.00011580500000000007, 0.00011597199999999891, 0.00011511100000000107...</msg>
<status status="PASS" starttime="20201030 11:51:35.961" endtime="20201030 11:51:35.964"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.968" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.967" endtime="20201030 11:51:35.969"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.971" level="INFO">VALUE: [0.00011477799999999941, 0.00011544500000000221, 0.00011577799999999694, 0.00011597199999999891, 0.00011612500000000164, 0.00011580500000000007, 0.00011597199999999891, 0.00011511100000000107, 0.0001166109999999991, 0.00011544500000000221, 0.00011579199999999998, 0.00011629199999999701, 0.00011544500000000221, 0.0001161109999999986, 0.00011477699999999993, 0.00011561100000000157, 0.00011631999999999962, 0.00011627800000000091, 0.00011544499999999874, 0.00011495899999999781, 0.00011525000000000077, 0.00011612500000000164, 0.0001147909999999995, 0.00011627799999999744, 0.00011565300000000028, 0.00011625000000000177, 0.00011562499999999767, 0.00011506999999999837, 0.00011577800000000041, 0.00011512500000000064, 0.000116291000000001, 0.00011630500000000057, 0.00011579199999999998, 0.00011519400000000249, 0.00011562499999999767, 0.00011479199999999898, 0.00011594499999999924, 0.0001166109999999991, 0.00011527799999999991, 0.00011472200000000113, 0.00011580500000000007, 0.00011476399999999984, 0.0001160970000000025, 0.00011476399999999984, 0.00011644499999999974, 0.00011562500000000114, 0.00011579199999999998, 0.00011645799999999984, 0.00011580500000000007, 0.00011611100000000207]</msg>
<status status="PASS" starttime="20201030 11:51:35.970" endtime="20201030 11:51:35.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.965" endtime="20201030 11:51:35.972"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.976" endtime="20201030 11:51:35.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.975" endtime="20201030 11:51:35.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.973" endtime="20201030 11:51:35.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.611" endtime="20201030 11:51:35.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.611" endtime="20201030 11:51:35.997"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.006" endtime="20201030 11:51:36.028"></status>
</kw>
<msg timestamp="20201030 11:51:36.028" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.004" endtime="20201030 11:51:36.028"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.031" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.029" endtime="20201030 11:51:36.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.032" endtime="20201030 11:51:36.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.002" endtime="20201030 11:51:36.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.999" endtime="20201030 11:51:36.035"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.041" endtime="20201030 11:51:36.328"></status>
</kw>
<msg timestamp="20201030 11:51:36.331" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.040" endtime="20201030 11:51:36.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023545667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023662972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.332" endtime="20201030 11:51:36.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.340" endtime="20201030 11:51:36.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.037" endtime="20201030 11:51:36.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.035" endtime="20201030 11:51:36.343"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.347" level="INFO">${RESULT} = [{'diff': 0.00011730500000000157}, {'diff': 0.00011759700000000053}, {'diff': 0.00011861099999999763}, {'diff': 0.0001174309999999977}, {'diff': 0.00011745800000000084}, {'diff': 0.0001169729999999993...</msg>
<status status="PASS" starttime="20201030 11:51:36.344" endtime="20201030 11:51:36.347"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.351" level="INFO">${ACCURACY} = {'diff': [0.00011730500000000157, 0.00011759700000000053, 0.00011861099999999763, 0.0001174309999999977, 0.00011745800000000084, 0.00011697299999999938, 0.00011830600000000205, 0.00011827799999999944,...</msg>
<status status="PASS" starttime="20201030 11:51:36.348" endtime="20201030 11:51:36.351"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.356" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.355" endtime="20201030 11:51:36.356"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.358" level="INFO">VALUE: [0.00011730500000000157, 0.00011759700000000053, 0.00011861099999999763, 0.0001174309999999977, 0.00011745800000000084, 0.00011697299999999938, 0.00011830600000000205, 0.00011827799999999944, 0.00011794400000000177, 0.00011768099999999795, 0.00011861099999999763, 0.0001184439999999988, 0.00011695800000000034, 0.00011727800000000191, 0.0001178889999999995, 0.0001169170000000011, 0.0001184439999999988, 0.00011829099999999954, 0.00011795799999999787, 0.0001176110000000001, 0.0001171109999999996, 0.00011679199999999751, 0.00011777799999999894, 0.00011744500000000074, 0.00011712500000000264, 0.00011859700000000153, 0.00011800000000000005, 0.0001185690000000024, 0.00011792999999999873, 0.000118389, 0.00011786100000000035, 0.00011777799999999894, 0.00011727699999999897, 0.00011745800000000084, 0.00011726399999999887, 0.0001178049999999986, 0.00011690300000000153, 0.00011797200000000091, 0.00011677799999999794, 0.00011786100000000035, 0.00011812500000000017, 0.00011709799999999951, 0.00011749999999999955, 0.00011701399999999862, 0.00011812500000000017, 0.00011827800000000291, 0.0001181110000000006, 0.0001181110000000006, 0.00011719399999999755, 0.00011763799999999977]</msg>
<status status="PASS" starttime="20201030 11:51:36.357" endtime="20201030 11:51:36.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.352" endtime="20201030 11:51:36.360"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.364" endtime="20201030 11:51:36.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.363" endtime="20201030 11:51:36.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.361" endtime="20201030 11:51:36.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.998" endtime="20201030 11:51:36.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.997" endtime="20201030 11:51:36.385"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.394" endtime="20201030 11:51:36.415"></status>
</kw>
<msg timestamp="20201030 11:51:36.415" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.393" endtime="20201030 11:51:36.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.416" endtime="20201030 11:51:36.418"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.419" endtime="20201030 11:51:36.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.390" endtime="20201030 11:51:36.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.388" endtime="20201030 11:51:36.421"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.428" endtime="20201030 11:51:36.714"></status>
</kw>
<msg timestamp="20201030 11:51:36.717" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02269575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:36.427" endtime="20201030 11:51:36.718"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.726" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022576611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02269575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:36.719" endtime="20201030 11:51:36.726"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.727" endtime="20201030 11:51:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.424" endtime="20201030 11:51:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.422" endtime="20201030 11:51:36.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.734" level="INFO">${RESULT} = [{'diff': 0.00011913900000000074}, {'diff': 0.0001206249999999992}, {'diff': 0.00011898599999999801}, {'diff': 0.00011995899999999934}, {'diff': 0.00012033300000000025}, {'diff': 0.0001189579999999988...</msg>
<status status="PASS" starttime="20201030 11:51:36.730" endtime="20201030 11:51:36.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.739" level="INFO">${ACCURACY} = {'diff': [0.00011913900000000074, 0.0001206249999999992, 0.00011898599999999801, 0.00011995899999999934, 0.00012033300000000025, 0.00011895799999999887, 0.00011879100000000004, 0.00012043000000000123,...</msg>
<status status="PASS" starttime="20201030 11:51:36.735" endtime="20201030 11:51:36.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.743" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.742" endtime="20201030 11:51:36.744"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.746" level="INFO">VALUE: [0.00011913900000000074, 0.0001206249999999992, 0.00011898599999999801, 0.00011995899999999934, 0.00012033300000000025, 0.00011895799999999887, 0.00011879100000000004, 0.00012043000000000123, 0.00012061099999999964, 0.00011995799999999987, 0.00011961099999999864, 0.00011923599999999826, 0.00011874999999999733, 0.00011897199999999844, 0.00011976400000000137, 0.0001197500000000018, 0.00011877799999999994, 0.00011936200000000133, 0.00012032000000000015, 0.00012029199999999754, 0.00011930599999999958, 0.0001191110000000016, 0.00012044500000000027, 0.00011892999999999973, 0.0001196110000000021, 0.00012061099999999964, 0.00011926400000000087, 0.00011911099999999814, 0.00012062500000000267, 0.00012027800000000144, 0.0001188049999999996, 0.00011979100000000104, 0.00011913900000000074, 0.00011961099999999864, 0.00011872200000000166, 0.00012059700000000007, 0.00011995899999999934, 0.0001191249999999977, 0.00011955599999999983, 0.0001204310000000007, 0.0001206249999999992, 0.0001196110000000021, 0.00012012500000000217, 0.00012063899999999877, 0.00011913900000000074, 0.00012013900000000174, 0.00011945899999999884, 0.0001206249999999992, 0.00011943000000000023, 0.0001189439999999993]</msg>
<status status="PASS" starttime="20201030 11:51:36.745" endtime="20201030 11:51:36.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.740" endtime="20201030 11:51:36.747"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.751" endtime="20201030 11:51:36.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.750" endtime="20201030 11:51:36.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.748" endtime="20201030 11:51:36.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.386" endtime="20201030 11:51:36.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.385" endtime="20201030 11:51:36.772"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.781" endtime="20201030 11:51:36.802"></status>
</kw>
<msg timestamp="20201030 11:51:36.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.779" endtime="20201030 11:51:36.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.804" endtime="20201030 11:51:36.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.806" endtime="20201030 11:51:36.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.777" endtime="20201030 11:51:36.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.774" endtime="20201030 11:51:36.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.816" endtime="20201030 11:51:37.103"></status>
</kw>
<msg timestamp="20201030 11:51:37.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.814" endtime="20201030 11:51:37.107"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.115" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022911069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023033014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.107" endtime="20201030 11:51:37.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.116" endtime="20201030 11:51:37.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.812" endtime="20201030 11:51:37.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.810" endtime="20201030 11:51:37.119"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.123" level="INFO">${RESULT} = [{'diff': 0.00012194500000000177}, {'diff': 0.00012163899999999978}, {'diff': 0.00012165199999999987}, {'diff': 0.00012095900000000034}, {'diff': 0.0001219579999999984}, {'diff': 0.0001212639999999994...</msg>
<status status="PASS" starttime="20201030 11:51:37.119" endtime="20201030 11:51:37.123"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.127" level="INFO">${ACCURACY} = {'diff': [0.00012194500000000177, 0.00012163899999999978, 0.00012165199999999987, 0.00012095900000000034, 0.0001219579999999984, 0.0001212639999999994, 0.0001218189999999987, 0.00012080600000000108, 0...</msg>
<status status="PASS" starttime="20201030 11:51:37.124" endtime="20201030 11:51:37.127"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.131" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.130" endtime="20201030 11:51:37.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.134" level="INFO">VALUE: [0.00012194500000000177, 0.00012163899999999978, 0.00012165199999999987, 0.00012095900000000034, 0.0001219579999999984, 0.0001212639999999994, 0.0001218189999999987, 0.00012080600000000108, 0.0001224579999999989, 0.00012208299999999853, 0.00012144500000000127, 0.00012247199999999847, 0.00012195800000000187, 0.00012095800000000087, 0.00012233299999999878, 0.0001224440000000028, 0.0001222359999999978, 0.00012095900000000034, 0.00012211099999999767, 0.0001219449999999983, 0.00012262499999999774, 0.00012159700000000107, 0.00012247200000000194, 0.00012166699999999891, 0.0001211249999999997, 0.00012079200000000151, 0.00012201400000000015, 0.00012136100000000039, 0.00012177799999999947, 0.00012179099999999957, 0.0001211249999999997, 0.00012179200000000251, 0.0001226250000000012, 0.00012179200000000251, 0.00012079200000000151, 0.00012127799999999897, 0.00012180599999999861, 0.00012159700000000107, 0.0001212769999999995, 0.00012213900000000028, 0.00012077800000000194, 0.00012161100000000064, 0.00012111099999999667, 0.00012095900000000034, 0.00012109800000000004, 0.00012197200000000144, 0.00012079099999999857, 0.0001217639999999999, 0.00012161100000000064, 0.00012227799999999997]</msg>
<status status="PASS" starttime="20201030 11:51:37.133" endtime="20201030 11:51:37.139"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.128" endtime="20201030 11:51:37.139"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.143" endtime="20201030 11:51:37.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.142" endtime="20201030 11:51:37.163"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.140" endtime="20201030 11:51:37.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.773" endtime="20201030 11:51:37.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.772" endtime="20201030 11:51:37.164"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.173" endtime="20201030 11:51:37.195"></status>
</kw>
<msg timestamp="20201030 11:51:37.195" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.172" endtime="20201030 11:51:37.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.196" endtime="20201030 11:51:37.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.199" endtime="20201030 11:51:37.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.169" endtime="20201030 11:51:37.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.167" endtime="20201030 11:51:37.202"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.208" endtime="20201030 11:51:37.495"></status>
</kw>
<msg timestamp="20201030 11:51:37.498" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023485681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.207" endtime="20201030 11:51:37.498"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023485681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023608639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.499" endtime="20201030 11:51:37.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.507" endtime="20201030 11:51:37.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.204" endtime="20201030 11:51:37.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.202" endtime="20201030 11:51:37.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.514" level="INFO">${RESULT} = [{'diff': 0.0001229579999999994}, {'diff': 0.0001231250000000017}, {'diff': 0.0001239450000000003}, {'diff': 0.00012361199999999864}, {'diff': 0.00012411099999999967}, {'diff': 0.0001231250000000017},...</msg>
<status status="PASS" starttime="20201030 11:51:37.511" endtime="20201030 11:51:37.515"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.518" level="INFO">${ACCURACY} = {'diff': [0.0001229579999999994, 0.0001231250000000017, 0.0001239450000000003, 0.00012361199999999864, 0.00012411099999999967, 0.0001231250000000017, 0.0001229579999999994, 0.0001229579999999994, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:37.515" endtime="20201030 11:51:37.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.523" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.522" endtime="20201030 11:51:37.523"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.526" level="INFO">VALUE: [0.0001229579999999994, 0.0001231250000000017, 0.0001239450000000003, 0.00012361199999999864, 0.00012411099999999967, 0.0001231250000000017, 0.0001229579999999994, 0.0001229579999999994, 0.00012462499999999974, 0.00012277800000000047, 0.00012447299999999994, 0.00012280500000000014, 0.00012427699999999903, 0.0001236250000000022, 0.00012277800000000047, 0.00012366700000000092, 0.0001236389999999983, 0.00012461100000000017, 0.00012345899999999937, 0.0001241380000000028, 0.0001242909999999986, 0.0001242770000000025, 0.0001244580000000009, 0.000123777999999998, 0.00012394400000000083, 0.00012365300000000135, 0.00012412499999999924, 0.00012447200000000047, 0.0001244160000000022, 0.00012398599999999954, 0.0001242779999999985, 0.0001232640000000014, 0.00012429200000000154, 0.00012395899999999987, 0.00012395899999999987, 0.00012457000000000093, 0.00012430499999999817, 0.00012380500000000114, 0.00012395799999999693, 0.00012344399999999686, 0.00012426399999999893, 0.0001242359999999998, 0.00012354199999999732, 0.00012397199999999997, 0.00012306899999999996, 0.00012347199999999947, 0.0001230969999999991, 0.00012443000000000176, 0.00012343100000000023, 0.00012329199999999707]</msg>
<status status="PASS" starttime="20201030 11:51:37.524" endtime="20201030 11:51:37.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.519" endtime="20201030 11:51:37.528"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.532" endtime="20201030 11:51:37.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.530" endtime="20201030 11:51:37.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.529" endtime="20201030 11:51:37.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.165" endtime="20201030 11:51:37.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.165" endtime="20201030 11:51:37.552"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.561" endtime="20201030 11:51:37.582"></status>
</kw>
<msg timestamp="20201030 11:51:37.583" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.560" endtime="20201030 11:51:37.583"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.585" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.584" endtime="20201030 11:51:37.585"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.586" endtime="20201030 11:51:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.557" endtime="20201030 11:51:37.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.555" endtime="20201030 11:51:37.589"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.596" endtime="20201030 11:51:37.883"></status>
</kw>
<msg timestamp="20201030 11:51:37.886" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.595" endtime="20201030 11:51:37.886"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.894" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022433597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022559889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.887" endtime="20201030 11:51:37.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.895" endtime="20201030 11:51:37.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.592" endtime="20201030 11:51:37.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.590" endtime="20201030 11:51:37.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.902" level="INFO">${RESULT} = [{'diff': 0.00012629200000000007}, {'diff': 0.0001252779999999995}, {'diff': 0.00012512500000000024}, {'diff': 0.00012612500000000124}, {'diff': 0.00012544400000000233}, {'diff': 0.0001252909999999996...</msg>
<status status="PASS" starttime="20201030 11:51:37.899" endtime="20201030 11:51:37.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.907" level="INFO">${ACCURACY} = {'diff': [0.00012629200000000007, 0.0001252779999999995, 0.00012512500000000024, 0.00012612500000000124, 0.00012544400000000233, 0.0001252909999999996, 0.00012658299999999956, 0.0001265970000000026, 0...</msg>
<status status="PASS" starttime="20201030 11:51:37.903" endtime="20201030 11:51:37.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.912" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.911" endtime="20201030 11:51:37.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.915" level="INFO">VALUE: [0.00012629200000000007, 0.0001252779999999995, 0.00012512500000000024, 0.00012612500000000124, 0.00012544400000000233, 0.0001252909999999996, 0.00012658299999999956, 0.0001265970000000026, 0.00012561100000000117, 0.00012538900000000006, 0.00012625000000000136, 0.0001264589999999989, 0.00012662499999999827, 0.00012547200000000147, 0.0001261109999999982, 0.0001259299999999998, 0.00012629200000000007, 0.00012544499999999834, 0.00012580599999999914, 0.0001262780000000005, 0.0001257910000000001, 0.00012644399999999986, 0.00012615300000000038, 0.0001250000000000001, 0.00012544400000000233, 0.00012590300000000013, 0.00012572299999999773, 0.00012580499999999967, 0.00012527700000000003, 0.00012544399999999886, 0.0001252779999999995, 0.0001251109999999972, 0.000124777999999999, 0.00012544499999999834, 0.0001253190000000022, 0.00012613799999999786, 0.00012577700000000053, 0.00012477699999999953, 0.00012645799999999943, 0.0001256109999999977, 0.00012543100000000224, 0.00012579199999999957, 0.00012512500000000024, 0.00012631899999999974, 0.00012505499999999892, 0.00012544399999999886, 0.00012644399999999986, 0.00012611100000000167, 0.000124777999999999, 0.000126471999999999]</msg>
<status status="PASS" starttime="20201030 11:51:37.913" endtime="20201030 11:51:37.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.908" endtime="20201030 11:51:37.916"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.920" endtime="20201030 11:51:37.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.918" endtime="20201030 11:51:37.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.917" endtime="20201030 11:51:37.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.553" endtime="20201030 11:51:37.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.553" endtime="20201030 11:51:37.940"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.949" endtime="20201030 11:51:37.970"></status>
</kw>
<msg timestamp="20201030 11:51:37.970" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.948" endtime="20201030 11:51:37.971"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.973" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.971" endtime="20201030 11:51:37.973"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.974" endtime="20201030 11:51:37.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.945" endtime="20201030 11:51:37.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.943" endtime="20201030 11:51:37.977"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.983" endtime="20201030 11:51:38.274"></status>
</kw>
<msg timestamp="20201030 11:51:38.277" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.982" endtime="20201030 11:51:38.277"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.285" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022555431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022682208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.278" endtime="20201030 11:51:38.285"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.286" endtime="20201030 11:51:38.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.979" endtime="20201030 11:51:38.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.977" endtime="20201030 11:51:38.289"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.293" level="INFO">${RESULT} = [{'diff': 0.00012677699999999806}, {'diff': 0.00012845799999999796}, {'diff': 0.00012759700000000013}, {'diff': 0.0001282919999999986}, {'diff': 0.00012759700000000013}, {'diff': 0.0001286110000000007...</msg>
<status status="PASS" starttime="20201030 11:51:38.290" endtime="20201030 11:51:38.293"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.297" level="INFO">${ACCURACY} = {'diff': [0.00012677699999999806, 0.00012845799999999796, 0.00012759700000000013, 0.0001282919999999986, 0.00012759700000000013, 0.0001286110000000007, 0.0001279590000000004, 0.00012812499999999977, 0...</msg>
<status status="PASS" starttime="20201030 11:51:38.294" endtime="20201030 11:51:38.297"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.302" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.301" endtime="20201030 11:51:38.302"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.304" level="INFO">VALUE: [0.00012677699999999806, 0.00012845799999999796, 0.00012759700000000013, 0.0001282919999999986, 0.00012759700000000013, 0.0001286110000000007, 0.0001279590000000004, 0.00012812499999999977, 0.00012763899999999884, 0.00012829099999999913, 0.000126778000000001, 0.00012862500000000027, 0.0001281110000000002, 0.00012763899999999884, 0.0001283049999999987, 0.0001267910000000011, 0.00012729099999999813, 0.00012742999999999782, 0.00012680600000000014, 0.00012694499999999984, 0.000127778000000002, 0.0001286110000000007, 0.00012729200000000107, 0.00012762499999999927, 0.00012762499999999927, 0.000126778000000001, 0.00012777799999999853, 0.00012838900000000306, 0.0001272780000000015, 0.00012844500000000134, 0.00012695799999999993, 0.0001271109999999992, 0.00012763899999999884, 0.00012845800000000143, 0.0001283200000000012, 0.00012762500000000274, 0.0001269589999999994, 0.00012730600000000064, 0.00012761199999999917, 0.0001279439999999979, 0.0001281110000000002, 0.0001282780000000025, 0.00012744400000000086, 0.00012697200000000297, 0.0001282919999999986, 0.00012729200000000107, 0.00012744400000000086, 0.00012744400000000086, 0.00012694400000000036, 0.0001282780000000025]</msg>
<status status="PASS" starttime="20201030 11:51:38.303" endtime="20201030 11:51:38.305"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.298" endtime="20201030 11:51:38.306"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.309" endtime="20201030 11:51:38.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.308" endtime="20201030 11:51:38.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.307" endtime="20201030 11:51:38.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.941" endtime="20201030 11:51:38.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.941" endtime="20201030 11:51:38.330"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.339" endtime="20201030 11:51:38.361"></status>
</kw>
<msg timestamp="20201030 11:51:38.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.337" endtime="20201030 11:51:38.362"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.363" endtime="20201030 11:51:38.364"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.365" endtime="20201030 11:51:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.335" endtime="20201030 11:51:38.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.333" endtime="20201030 11:51:38.368"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.375" endtime="20201030 11:51:38.660"></status>
</kw>
<msg timestamp="20201030 11:51:38.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.373" endtime="20201030 11:51:38.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023434139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023563431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.665" endtime="20201030 11:51:38.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.673" endtime="20201030 11:51:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.370" endtime="20201030 11:51:38.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.368" endtime="20201030 11:51:38.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.680" level="INFO">${RESULT} = [{'diff': 0.0001292919999999996}, {'diff': 0.00013029099999999766}, {'diff': 0.00012945799999999896}, {'diff': 0.00012877799999999953}, {'diff': 0.00012945799999999896}, {'diff': 0.0001291249999999973...</msg>
<status status="PASS" starttime="20201030 11:51:38.677" endtime="20201030 11:51:38.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.684" level="INFO">${ACCURACY} = {'diff': [0.0001292919999999996, 0.00013029099999999766, 0.00012945799999999896, 0.00012877799999999953, 0.00012945799999999896, 0.0001291249999999973, 0.00012912500000000077, 0.00012959700000000213, ...</msg>
<status status="PASS" starttime="20201030 11:51:38.681" endtime="20201030 11:51:38.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.689" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.688" endtime="20201030 11:51:38.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.691" level="INFO">VALUE: [0.0001292919999999996, 0.00013029099999999766, 0.00012945799999999896, 0.00012877799999999953, 0.00012945799999999896, 0.0001291249999999973, 0.00012912500000000077, 0.00012959700000000213, 0.0001291249999999973, 0.00013013900000000134, 0.00012941600000000025, 0.00012927800000000003, 0.00013027800000000103, 0.00013040300000000116, 0.00012897300000000098, 0.00012877799999999953, 0.0001301249999999983, 0.00013027700000000156, 0.0001296530000000004, 0.00013062500000000227, 0.00013029199999999713, 0.00012927800000000003, 0.00012877799999999953, 0.00012995899999999894, 0.00012898600000000107, 0.00012961099999999823, 0.00012990300000000066, 0.0001291110000000012, 0.00012945799999999896, 0.00012977800000000053, 0.0001298200000000027, 0.00012984700000000238, 0.00012929100000000013, 0.00012974999999999792, 0.00012926400000000046, 0.0001296249999999978, 0.000128778000000003, 0.00012913900000000034, 0.00012944500000000234, 0.00013011099999999873, 0.0001287500000000004, 0.00013029100000000113, 0.0001301249999999983, 0.00012961099999999823, 0.0001294439999999994, 0.00012877799999999953, 0.0001294590000000019, 0.0001303890000000016, 0.0001303050000000007, 0.00013029099999999766]</msg>
<status status="PASS" starttime="20201030 11:51:38.690" endtime="20201030 11:51:38.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.685" endtime="20201030 11:51:38.694"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.697" endtime="20201030 11:51:38.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.696" endtime="20201030 11:51:38.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.695" endtime="20201030 11:51:38.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.331" endtime="20201030 11:51:38.718"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.330" endtime="20201030 11:51:38.718"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.727" endtime="20201030 11:51:38.749"></status>
</kw>
<msg timestamp="20201030 11:51:38.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.725" endtime="20201030 11:51:38.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.752" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.750" endtime="20201030 11:51:38.752"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.753" endtime="20201030 11:51:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.723" endtime="20201030 11:51:38.755"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.720" endtime="20201030 11:51:38.756"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.762" endtime="20201030 11:51:39.048"></status>
</kw>
<msg timestamp="20201030 11:51:39.052" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:38.761" endtime="20201030 11:51:39.052"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.060" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022870625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300275, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:39.053" endtime="20201030 11:51:39.060"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.061" endtime="20201030 11:51:39.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.758" endtime="20201030 11:51:39.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.756" endtime="20201030 11:51:39.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.068" level="INFO">${RESULT} = [{'diff': 0.0001321250000000003}, {'diff': 0.000131957999999998}, {'diff': 0.00013130600000000117}, {'diff': 0.0001317090000000007}, {'diff': 0.0001311379999999994}, {'diff': 0.00013180499999999873}, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.065" endtime="20201030 11:51:39.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.073" level="INFO">${ACCURACY} = {'diff': [0.0001321250000000003, 0.000131957999999998, 0.00013130600000000117, 0.0001317090000000007, 0.0001311379999999994, 0.00013180499999999873, 0.00013195800000000146, 0.00013176400000000296, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:39.069" endtime="20201030 11:51:39.073"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.077" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.076" endtime="20201030 11:51:39.078"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.080" level="INFO">VALUE: [0.0001321250000000003, 0.000131957999999998, 0.00013130600000000117, 0.0001317090000000007, 0.0001311379999999994, 0.00013180499999999873, 0.00013195800000000146, 0.00013176400000000296, 0.00013143000000000182, 0.000132264, 0.0001312920000000016, 0.00013155600000000142, 0.0001326250000000008, 0.00013238799999999717, 0.00013261100000000123, 0.00013080600000000067, 0.00013251400000000024, 0.0001316249999999998, 0.0001321250000000003, 0.00013109700000000016, 0.00013241700000000273, 0.00013163900000000284, 0.00013105500000000145, 0.0001307920000000011, 0.00013245800000000196, 0.00013145900000000044, 0.00013111099999999973, 0.0001326250000000008, 0.0001316249999999998, 0.00013180600000000167, 0.00013227799999999956, 0.00013092999999999785, 0.00013261099999999776, 0.00013245899999999797, 0.0001322920000000026, 0.00013127799999999856, 0.0001311110000000032, 0.00013242999999999935, 0.000130957999999997, 0.00013222200000000128, 0.0001312920000000016, 0.00013145900000000044, 0.00013159800000000013, 0.00013245800000000196, 0.00013245800000000196, 0.0001314860000000001, 0.00013147200000000053, 0.00013261100000000123, 0.00013229199999999913, 0.00013250000000000067]</msg>
<status status="PASS" starttime="20201030 11:51:39.079" endtime="20201030 11:51:39.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.074" endtime="20201030 11:51:39.081"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.085" endtime="20201030 11:51:39.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.084" endtime="20201030 11:51:39.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.082" endtime="20201030 11:51:39.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.719" endtime="20201030 11:51:39.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.718" endtime="20201030 11:51:39.106"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.115" endtime="20201030 11:51:39.137"></status>
</kw>
<msg timestamp="20201030 11:51:39.137" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.113" endtime="20201030 11:51:39.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.138" endtime="20201030 11:51:39.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.141" endtime="20201030 11:51:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.111" endtime="20201030 11:51:39.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.108" endtime="20201030 11:51:39.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.150" endtime="20201030 11:51:39.438"></status>
</kw>
<msg timestamp="20201030 11:51:39.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:39.149" endtime="20201030 11:51:39.441"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.449" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022866792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02300125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:39.442" endtime="20201030 11:51:39.450"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.450" endtime="20201030 11:51:39.452"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.146" endtime="20201030 11:51:39.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.144" endtime="20201030 11:51:39.453"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.457" level="INFO">${RESULT} = [{'diff': 0.0001344580000000005}, {'diff': 0.00013323599999999838}, {'diff': 0.00013379200000000063}, {'diff': 0.00013395899999999947}, {'diff': 0.00013334699999999894}, {'diff': 0.0001338049999999972...</msg>
<status status="PASS" starttime="20201030 11:51:39.454" endtime="20201030 11:51:39.457"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.461" level="INFO">${ACCURACY} = {'diff': [0.0001344580000000005, 0.00013323599999999838, 0.00013379200000000063, 0.00013395899999999947, 0.00013334699999999894, 0.00013380499999999726, 0.0001343190000000008, 0.00013361099999999876, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.458" endtime="20201030 11:51:39.461"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.466" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.465" endtime="20201030 11:51:39.466"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.469" level="INFO">VALUE: [0.0001344580000000005, 0.00013323599999999838, 0.00013379200000000063, 0.00013395899999999947, 0.00013334699999999894, 0.00013380499999999726, 0.0001343190000000008, 0.00013361099999999876, 0.00013277800000000006, 0.0001330969999999987, 0.0001336250000000018, 0.00013279199999999963, 0.0001334579999999995, 0.00013334699999999894, 0.0001327640000000005, 0.00013429200000000113, 0.00013345800000000296, 0.000132957999999999, 0.00013393100000000033, 0.00013277800000000006, 0.0001334860000000021, 0.00013298599999999813, 0.0001336250000000018, 0.00013430599999999723, 0.00013462499999999933, 0.0001329449999999989, 0.00013361099999999876, 0.00013295899999999847, 0.00013440199999999874, 0.0001334579999999995, 0.0001337640000000015, 0.00013461099999999976, 0.00013397199999999956, 0.00013461099999999976, 0.00013311199999999773, 0.00013394400000000042, 0.00013462499999999933, 0.0001344580000000005, 0.00013462499999999933, 0.0001328059999999992, 0.0001330969999999987, 0.00013322200000000228, 0.00013327800000000056, 0.000133958, 0.00013362499999999833, 0.00013362499999999833, 0.00013394400000000042, 0.00013344399999999992, 0.00013379200000000063, 0.00013415200000000196]</msg>
<status status="PASS" starttime="20201030 11:51:39.467" endtime="20201030 11:51:39.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.462" endtime="20201030 11:51:39.470"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.474" endtime="20201030 11:51:39.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.472" endtime="20201030 11:51:39.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.471" endtime="20201030 11:51:39.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.107" endtime="20201030 11:51:39.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.106" endtime="20201030 11:51:39.495"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.504" endtime="20201030 11:51:39.525"></status>
</kw>
<msg timestamp="20201030 11:51:39.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.502" endtime="20201030 11:51:39.526"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.528" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.527" endtime="20201030 11:51:39.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.529" endtime="20201030 11:51:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.499" endtime="20201030 11:51:39.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.497" endtime="20201030 11:51:39.532"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.539" endtime="20201030 11:51:39.825"></status>
</kw>
<msg timestamp="20201030 11:51:39.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023732931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.537" endtime="20201030 11:51:39.828"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.836" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023596792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023732931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.829" endtime="20201030 11:51:39.837"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.837" endtime="20201030 11:51:39.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.534" endtime="20201030 11:51:39.840"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.533" endtime="20201030 11:51:39.840"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.844" level="INFO">${RESULT} = [{'diff': 0.0001361390000000004}, {'diff': 0.00013629199999999966}, {'diff': 0.00013647200000000206}, {'diff': 0.00013644400000000292}, {'diff': 0.00013544399999999845}, {'diff': 0.0001359720000000015...</msg>
<status status="PASS" starttime="20201030 11:51:39.841" endtime="20201030 11:51:39.844"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.848" level="INFO">${ACCURACY} = {'diff': [0.0001361390000000004, 0.00013629199999999966, 0.00013647200000000206, 0.00013644400000000292, 0.00013544399999999845, 0.00013597200000000156, 0.00013612500000000083, 0.0001358060000000022, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.845" endtime="20201030 11:51:39.849"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.853" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.852" endtime="20201030 11:51:39.853"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.855" level="INFO">VALUE: [0.0001361390000000004, 0.00013629199999999966, 0.00013647200000000206, 0.00013644400000000292, 0.00013544399999999845, 0.00013597200000000156, 0.00013612500000000083, 0.0001358060000000022, 0.00013512499999999983, 0.00013511199999999973, 0.00013562500000000033, 0.00013595799999999852, 0.00013629199999999966, 0.00013544399999999845, 0.00013511100000000026, 0.000134958999999997, 0.00013495900000000047, 0.00013611100000000126, 0.00013543000000000235, 0.0001366390000000009, 0.00013562500000000033, 0.0001356109999999973, 0.0001357779999999996, 0.00013561100000000076, 0.0001354580000000015, 0.00013616699999999954, 0.00013545799999999802, 0.0001366109999999983, 0.00013477800000000206, 0.00013527800000000256, 0.00013662500000000133, 0.00013612500000000083, 0.0001366390000000009, 0.00013511100000000026, 0.00013665300000000047, 0.00013511100000000026, 0.00013477800000000206, 0.00013529200000000213, 0.00013611100000000126, 0.00013512499999999983, 0.0001347909999999987, 0.00013597200000000156, 0.00013562500000000033, 0.00013625000000000095, 0.00013579199999999916, 0.0001362780000000001, 0.00013581899999999883, 0.00013526300000000005, 0.00013611100000000126, 0.00013511100000000026]</msg>
<status status="PASS" starttime="20201030 11:51:39.854" endtime="20201030 11:51:39.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.849" endtime="20201030 11:51:39.858"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.861" endtime="20201030 11:51:39.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.860" endtime="20201030 11:51:39.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.859" endtime="20201030 11:51:39.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.495" endtime="20201030 11:51:39.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.495" endtime="20201030 11:51:39.882"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.891" endtime="20201030 11:51:39.913"></status>
</kw>
<msg timestamp="20201030 11:51:39.913" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.889" endtime="20201030 11:51:39.913"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.916" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.914" endtime="20201030 11:51:39.916"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.917" endtime="20201030 11:51:39.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.887" endtime="20201030 11:51:39.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.885" endtime="20201030 11:51:39.919"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.926" endtime="20201030 11:51:40.212"></status>
</kw>
<msg timestamp="20201030 11:51:40.215" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.925" endtime="20201030 11:51:40.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022394556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022532319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.216" endtime="20201030 11:51:40.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.225" endtime="20201030 11:51:40.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.922" endtime="20201030 11:51:40.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.920" endtime="20201030 11:51:40.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.232" level="INFO">${RESULT} = [{'diff': 0.00013776299999999908}, {'diff': 0.0001371390000000014}, {'diff': 0.0001379720000000001}, {'diff': 0.00013676400000000102}, {'diff': 0.00013780600000000073}, {'diff': 0.0001382919999999982}...</msg>
<status status="PASS" starttime="20201030 11:51:40.228" endtime="20201030 11:51:40.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.237" level="INFO">${ACCURACY} = {'diff': [0.00013776299999999908, 0.0001371390000000014, 0.0001379720000000001, 0.00013676400000000102, 0.00013780600000000073, 0.0001382919999999982, 0.0001377919999999977, 0.00013693099999999986, 0....</msg>
<status status="PASS" starttime="20201030 11:51:40.233" endtime="20201030 11:51:40.237"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.241" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.240" endtime="20201030 11:51:40.242"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.244" level="INFO">VALUE: [0.00013776299999999908, 0.0001371390000000014, 0.0001379720000000001, 0.00013676400000000102, 0.00013780600000000073, 0.0001382919999999982, 0.0001377919999999977, 0.00013693099999999986, 0.0001381109999999998, 0.00013756900000000058, 0.00013729200000000066, 0.00013743100000000036, 0.0001374589999999995, 0.00013694499999999943, 0.00013729200000000066, 0.00013784699999999997, 0.00013729099999999772, 0.00013712500000000183, 0.00013772199999999984, 0.00013674999999999798, 0.00013827799999999862, 0.0001377780000000016, 0.0001377780000000016, 0.00013745800000000002, 0.0001381109999999998, 0.00013761100000000276, 0.00013841699999999832, 0.0001376109999999993, 0.00013745900000000297, 0.00013680500000000026, 0.00013861099999999682, 0.00013827699999999915, 0.00013712499999999836, 0.00013774999999999898, 0.0001376109999999993, 0.00013726400000000152, 0.0001382919999999982, 0.0001374719999999996, 0.00013847199999999713, 0.0001372780000000011, 0.00013795800000000052, 0.0001384720000000006, 0.0001384590000000005, 0.0001368060000000032, 0.00013812499999999936, 0.00013727700000000162, 0.0001381109999999998, 0.00013695799999999952, 0.00013712499999999836, 0.00013844500000000093]</msg>
<status status="PASS" starttime="20201030 11:51:40.242" endtime="20201030 11:51:40.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.238" endtime="20201030 11:51:40.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.249" endtime="20201030 11:51:40.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.247" endtime="20201030 11:51:40.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.246" endtime="20201030 11:51:40.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.883" endtime="20201030 11:51:40.270"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.882" endtime="20201030 11:51:40.270"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.279" endtime="20201030 11:51:40.300"></status>
</kw>
<msg timestamp="20201030 11:51:40.301" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.277" endtime="20201030 11:51:40.301"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.303" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.302" endtime="20201030 11:51:40.304"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.305" endtime="20201030 11:51:40.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.275" endtime="20201030 11:51:40.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.272" endtime="20201030 11:51:40.307"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.314" endtime="20201030 11:51:40.601"></status>
</kw>
<msg timestamp="20201030 11:51:40.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.312" endtime="20201030 11:51:40.604"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022474819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022614444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.605" endtime="20201030 11:51:40.613"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.614" endtime="20201030 11:51:40.615"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.310" endtime="20201030 11:51:40.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.308" endtime="20201030 11:51:40.616"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.620" level="INFO">${RESULT} = [{'diff': 0.00013962500000000086}, {'diff': 0.00013877699999999965}, {'diff': 0.00013926400000000005}, {'diff': 0.0001392919999999992}, {'diff': 0.00013874999999999998}, {'diff': 0.0001389310000000018...</msg>
<status status="PASS" starttime="20201030 11:51:40.617" endtime="20201030 11:51:40.621"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.625" level="INFO">${ACCURACY} = {'diff': [0.00013962500000000086, 0.00013877699999999965, 0.00013926400000000005, 0.0001392919999999992, 0.00013874999999999998, 0.00013893100000000186, 0.00014045899999999903, 0.0001398049999999998, ...</msg>
<status status="PASS" starttime="20201030 11:51:40.621" endtime="20201030 11:51:40.625"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.629" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.628" endtime="20201030 11:51:40.630"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.632" level="INFO">VALUE: [0.00013962500000000086, 0.00013877699999999965, 0.00013926400000000005, 0.0001392919999999992, 0.00013874999999999998, 0.00013893100000000186, 0.00014045899999999903, 0.0001398049999999998, 0.00013968099999999914, 0.00013942999999999942, 0.00013942999999999942, 0.0001391249999999969, 0.00013874999999999998, 0.00014013900000000093, 0.0001401249999999979, 0.00013929099999999972, 0.00013927700000000015, 0.0001394720000000016, 0.0001391110000000008, 0.000140653000000001, 0.00013895899999999753, 0.0001391110000000008, 0.0001396110000000013, 0.00013962500000000086, 0.0001406249999999984, 0.00013874999999999998, 0.00013909699999999775, 0.00014009700000000222, 0.00013962500000000086, 0.000138959000000001, 0.00013912500000000036, 0.00014011099999999832, 0.00013930600000000223, 0.0001391110000000008, 0.00013877799999999912, 0.00013876399999999955, 0.0001396119999999973, 0.0001396110000000013, 0.00013944399999999899, 0.00013958299999999868, 0.00013912500000000036, 0.00013895799999999806, 0.0001394859999999977, 0.0001391529999999995, 0.0001394019999999968, 0.0001398049999999998, 0.00014027800000000062, 0.0001396110000000013, 0.00013945799999999856, 0.00013995899999999853]</msg>
<status status="PASS" starttime="20201030 11:51:40.630" endtime="20201030 11:51:40.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.625" endtime="20201030 11:51:40.633"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.637" endtime="20201030 11:51:40.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.635" endtime="20201030 11:51:40.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.634" endtime="20201030 11:51:40.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.271" endtime="20201030 11:51:40.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.270" endtime="20201030 11:51:40.658"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.667" endtime="20201030 11:51:40.690"></status>
</kw>
<msg timestamp="20201030 11:51:40.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.666" endtime="20201030 11:51:40.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.693" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.691" endtime="20201030 11:51:40.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.694" endtime="20201030 11:51:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.663" endtime="20201030 11:51:40.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.661" endtime="20201030 11:51:40.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.703" endtime="20201030 11:51:40.989"></status>
</kw>
<msg timestamp="20201030 11:51:40.992" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.702" endtime="20201030 11:51:40.992"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.000" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023769514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023911361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.993" endtime="20201030 11:51:41.001"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.002" endtime="20201030 11:51:41.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.699" endtime="20201030 11:51:41.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.697" endtime="20201030 11:51:41.004"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.008" level="INFO">${RESULT} = [{'diff': 0.0001418470000000005}, {'diff': 0.00014231900000000186}, {'diff': 0.00014245800000000156}, {'diff': 0.00014161099999999982}, {'diff': 0.00014145800000000056}, {'diff': 0.0001412919999999977...</msg>
<status status="PASS" starttime="20201030 11:51:41.005" endtime="20201030 11:51:41.009"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.013" level="INFO">${ACCURACY} = {'diff': [0.0001418470000000005, 0.00014231900000000186, 0.00014245800000000156, 0.00014161099999999982, 0.00014145800000000056, 0.00014129199999999772, 0.00014145900000000003, 0.0001416249999999994, ...</msg>
<status status="PASS" starttime="20201030 11:51:41.009" endtime="20201030 11:51:41.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.017" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.016" endtime="20201030 11:51:41.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.020" level="INFO">VALUE: [0.0001418470000000005, 0.00014231900000000186, 0.00014245800000000156, 0.00014161099999999982, 0.00014145800000000056, 0.00014129199999999772, 0.00014145900000000003, 0.0001416249999999994, 0.00014177699999999918, 0.0001421249999999999, 0.00014194400000000149, 0.00014077800000000112, 0.0001421249999999999, 0.00014095899999999953, 0.00014256999999999811, 0.0001421249999999999, 0.0001426250000000004, 0.00014226399999999959, 0.00014134799999999947, 0.00014179199999999823, 0.0001416249999999994, 0.00014162500000000286, 0.00014244500000000146, 0.00014227700000000315, 0.00014251399999999984, 0.00014095800000000006, 0.00014127800000000162, 0.00014195900000000053, 0.0001416249999999994, 0.00014127799999999816, 0.00014227699999999968, 0.0001419860000000002, 0.0001416249999999994, 0.00014111099999999932, 0.00014226400000000305, 0.00014245900000000103, 0.00014095899999999953, 0.00014161099999999982, 0.00014187499999999964, 0.0001407920000000007, 0.00014181999999999736, 0.00014111099999999932, 0.00014250000000000027, 0.000142138, 0.00014077699999999818, 0.00014261100000000082, 0.00014080600000000026, 0.0001422920000000022, 0.00014263899999999996, 0.0001418750000000031]</msg>
<status status="PASS" starttime="20201030 11:51:41.018" endtime="20201030 11:51:41.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.013" endtime="20201030 11:51:41.022"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.026" endtime="20201030 11:51:41.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.024" endtime="20201030 11:51:41.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.023" endtime="20201030 11:51:41.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.659" endtime="20201030 11:51:41.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.659" endtime="20201030 11:51:41.047"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.056" endtime="20201030 11:51:41.078"></status>
</kw>
<msg timestamp="20201030 11:51:41.078" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.054" endtime="20201030 11:51:41.078"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.081" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.079" endtime="20201030 11:51:41.081"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.082" endtime="20201030 11:51:41.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.051" endtime="20201030 11:51:41.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.049" endtime="20201030 11:51:41.084"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.091" endtime="20201030 11:51:41.377"></status>
</kw>
<msg timestamp="20201030 11:51:41.380" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02286025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:41.090" endtime="20201030 11:51:41.381"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022717306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02286025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:41.382" endtime="20201030 11:51:41.389"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.390" endtime="20201030 11:51:41.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.087" endtime="20201030 11:51:41.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.085" endtime="20201030 11:51:41.393"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.397" level="INFO">${RESULT} = [{'diff': 0.00014294399999999902}, {'diff': 0.000143444999999999}, {'diff': 0.00014409699999999928}, {'diff': 0.00014397199999999916}, {'diff': 0.00014462499999999892}, {'diff': 0.00014329100000000025...</msg>
<status status="PASS" starttime="20201030 11:51:41.393" endtime="20201030 11:51:41.397"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.402" level="INFO">${ACCURACY} = {'diff': [0.00014294399999999902, 0.000143444999999999, 0.00014409699999999928, 0.00014397199999999916, 0.00014462499999999892, 0.00014329100000000025, 0.00014361099999999835, 0.0001441250000000019, 0...</msg>
<status status="PASS" starttime="20201030 11:51:41.398" endtime="20201030 11:51:41.402"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.406" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.405" endtime="20201030 11:51:41.407"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.409" level="INFO">VALUE: [0.00014294399999999902, 0.000143444999999999, 0.00014409699999999928, 0.00014397199999999916, 0.00014462499999999892, 0.00014329100000000025, 0.00014361099999999835, 0.0001441250000000019, 0.00014327800000000016, 0.00014326400000000059, 0.0001446120000000023, 0.00014379100000000075, 0.00014327800000000016, 0.00014311100000000132, 0.00014362499999999792, 0.00014412499999999842, 0.00014411100000000232, 0.00014412499999999842, 0.00014345799999999909, 0.00014294399999999902, 0.00014427799999999769, 0.00014329100000000025, 0.00014295799999999859, 0.0001436250000000014, 0.00014429200000000073, 0.00014361099999999835, 0.00014279099999999975, 0.00014294399999999902, 0.00014327800000000016, 0.000144445, 0.00014413900000000146, 0.00014409799999999875, 0.00014361100000000182, 0.00014397199999999916, 0.00014395799999999959, 0.0001440829999999997, 0.00014445800000000009, 0.00014361099999999835, 0.00014311100000000132, 0.00014459799999999925, 0.00014313900000000046, 0.00014430500000000082, 0.00014304200000000294, 0.0001438059999999998, 0.00014462499999999892, 0.00014279199999999923, 0.00014444399999999705, 0.00014361100000000182, 0.00014279099999999975, 0.00014345799999999909]</msg>
<status status="PASS" starttime="20201030 11:51:41.408" endtime="20201030 11:51:41.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.403" endtime="20201030 11:51:41.410"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.414" endtime="20201030 11:51:41.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.413" endtime="20201030 11:51:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.411" endtime="20201030 11:51:41.434"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.048" endtime="20201030 11:51:41.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.047" endtime="20201030 11:51:41.435"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.444" endtime="20201030 11:51:41.466"></status>
</kw>
<msg timestamp="20201030 11:51:41.467" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.442" endtime="20201030 11:51:41.467"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.468" endtime="20201030 11:51:41.469"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.470" endtime="20201030 11:51:41.472"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.440" endtime="20201030 11:51:41.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.437" endtime="20201030 11:51:41.473"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.480" endtime="20201030 11:51:41.770"></status>
</kw>
<msg timestamp="20201030 11:51:41.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.478" endtime="20201030 11:51:41.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022968611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023114569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.774" endtime="20201030 11:51:41.782"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.783" endtime="20201030 11:51:41.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.475" endtime="20201030 11:51:41.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.474" endtime="20201030 11:51:41.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.789" level="INFO">${RESULT} = [{'diff': 0.0001459580000000016}, {'diff': 0.0001452769999999992}, {'diff': 0.00014583400000000094}, {'diff': 0.00014544399999999805}, {'diff': 0.0001448060000000008}, {'diff': 0.0001466939999999993},...</msg>
<status status="PASS" starttime="20201030 11:51:41.786" endtime="20201030 11:51:41.790"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.794" level="INFO">${ACCURACY} = {'diff': [0.0001459580000000016, 0.0001452769999999992, 0.00014583400000000094, 0.00014544399999999805, 0.0001448060000000008, 0.0001466939999999993, 0.00014609800000000076, 0.00014562499999999992, 0....</msg>
<status status="PASS" starttime="20201030 11:51:41.790" endtime="20201030 11:51:41.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.798" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.797" endtime="20201030 11:51:41.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.801" level="INFO">VALUE: [0.0001459580000000016, 0.0001452769999999992, 0.00014583400000000094, 0.00014544399999999805, 0.0001448060000000008, 0.0001466939999999993, 0.00014609800000000076, 0.00014562499999999992, 0.00014512499999999942, 0.00014577799999999919, 0.00014577799999999919, 0.00014479200000000123, 0.00014527800000000216, 0.00014495900000000006, 0.00014662500000000092, 0.00014612500000000042, 0.00014609700000000128, 0.0001466390000000005, 0.00014595900000000106, 0.00014662499999999745, 0.00014561199999999982, 0.00014545799999999762, 0.00014562499999999992, 0.00014544400000000152, 0.00014477800000000166, 0.00014629200000000273, 0.00014512499999999942, 0.00014612500000000042, 0.00014547200000000066, 0.00014580500000000232, 0.00014497200000000016, 0.000145041999999998, 0.0001449999999999993, 0.00014555600000000155, 0.00014662500000000092, 0.0001464580000000021, 0.00014630499999999935, 0.00014629099999999978, 0.00014627799999999969, 0.0001459580000000016, 0.00014497299999999963, 0.00014495900000000006, 0.00014562499999999992, 0.00014530499999999835, 0.00014479100000000175, 0.00014484800000000297, 0.00014594399999999855, 0.00014580599999999833, 0.00014495900000000006, 0.00014662500000000092]</msg>
<status status="PASS" starttime="20201030 11:51:41.799" endtime="20201030 11:51:41.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.794" endtime="20201030 11:51:41.802"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.806" endtime="20201030 11:51:41.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.804" endtime="20201030 11:51:41.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.803" endtime="20201030 11:51:41.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.436" endtime="20201030 11:51:41.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.435" endtime="20201030 11:51:41.827"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.836" endtime="20201030 11:51:41.858"></status>
</kw>
<msg timestamp="20201030 11:51:41.858" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.834" endtime="20201030 11:51:41.859"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.861" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.859" endtime="20201030 11:51:41.861"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.862" endtime="20201030 11:51:41.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.831" endtime="20201030 11:51:41.864"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.829" endtime="20201030 11:51:41.865"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.871" endtime="20201030 11:51:42.157"></status>
</kw>
<msg timestamp="20201030 11:51:42.160" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023405611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.870" endtime="20201030 11:51:42.160"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.169" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023405611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023552403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.161" endtime="20201030 11:51:42.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.170" endtime="20201030 11:51:42.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.867" endtime="20201030 11:51:42.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.865" endtime="20201030 11:51:42.173"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.177" level="INFO">${RESULT} = [{'diff': 0.00014679199999999976}, {'diff': 0.00014809799999999929}, {'diff': 0.00014812500000000242}, {'diff': 0.00014706899999999967}, {'diff': 0.00014812499999999895}, {'diff': 0.000146791999999999...</msg>
<status status="PASS" starttime="20201030 11:51:42.174" endtime="20201030 11:51:42.177"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.181" level="INFO">${ACCURACY} = {'diff': [0.00014679199999999976, 0.00014809799999999929, 0.00014812500000000242, 0.00014706899999999967, 0.00014812499999999895, 0.00014679199999999976, 0.00014786099999999913, 0.00014712500000000142...</msg>
<status status="PASS" starttime="20201030 11:51:42.178" endtime="20201030 11:51:42.181"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.185" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.184" endtime="20201030 11:51:42.186"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.188" level="INFO">VALUE: [0.00014679199999999976, 0.00014809799999999929, 0.00014812500000000242, 0.00014706899999999967, 0.00014812499999999895, 0.00014679199999999976, 0.00014786099999999913, 0.00014712500000000142, 0.00014727800000000069, 0.00014745799999999962, 0.000147139000000001, 0.0001485970000000003, 0.0001469580000000026, 0.000147139000000001, 0.0001486659999999987, 0.0001484590000000001, 0.00014712499999999795, 0.00014712500000000142, 0.00014758299999999974, 0.00014797200000000316, 0.00014779200000000076, 0.00014777800000000119, 0.00014694499999999902, 0.00014862499999999945, 0.00014745799999999962, 0.00014693099999999945, 0.00014836099999999963, 0.00014812499999999895, 0.0001482919999999978, 0.00014863800000000302, 0.00014692999999999998, 0.0001482770000000022, 0.0001467220000000019, 0.00014779200000000076, 0.0001472359999999985, 0.00014695900000000206, 0.0001476520000000016, 0.00014711100000000185, 0.00014722199999999894, 0.00014677800000000019, 0.00014679199999999976, 0.0001475969999999993, 0.00014745900000000256, 0.00014811199999999886, 0.0001481810000000007, 0.00014744400000000005, 0.00014812499999999895, 0.00014694399999999955, 0.0001482919999999978, 0.00014730599999999983]</msg>
<status status="PASS" starttime="20201030 11:51:42.187" endtime="20201030 11:51:42.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.182" endtime="20201030 11:51:42.195"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.199" endtime="20201030 11:51:42.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.197" endtime="20201030 11:51:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.196" endtime="20201030 11:51:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.828" endtime="20201030 11:51:42.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.827" endtime="20201030 11:51:42.220"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.229" endtime="20201030 11:51:42.252"></status>
</kw>
<msg timestamp="20201030 11:51:42.252" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.227" endtime="20201030 11:51:42.253"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.255" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.254" endtime="20201030 11:51:42.255"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.256" endtime="20201030 11:51:42.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.225" endtime="20201030 11:51:42.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.222" endtime="20201030 11:51:42.259"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.266" endtime="20201030 11:51:42.551"></status>
</kw>
<msg timestamp="20201030 11:51:42.554" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.264" endtime="20201030 11:51:42.555"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.563" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022797944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022948389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.555" endtime="20201030 11:51:42.563"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.564" endtime="20201030 11:51:42.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.261" endtime="20201030 11:51:42.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.259" endtime="20201030 11:51:42.566"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.571" level="INFO">${RESULT} = [{'diff': 0.00015044499999999905}, {'diff': 0.0001497919999999993}, {'diff': 0.00015043099999999948}, {'diff': 0.00015045799999999915}, {'diff': 0.00015027700000000074}, {'diff': 0.0001489580000000011...</msg>
<status status="PASS" starttime="20201030 11:51:42.567" endtime="20201030 11:51:42.571"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.576" level="INFO">${ACCURACY} = {'diff': [0.00015044499999999905, 0.0001497919999999993, 0.00015043099999999948, 0.00015045799999999915, 0.00015027700000000074, 0.00014895800000000112, 0.00015062500000000145, 0.00015044500000000252,...</msg>
<status status="PASS" starttime="20201030 11:51:42.572" endtime="20201030 11:51:42.576"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.580" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.579" endtime="20201030 11:51:42.581"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.583" level="INFO">VALUE: [0.00015044499999999905, 0.0001497919999999993, 0.00015043099999999948, 0.00015045799999999915, 0.00015027700000000074, 0.00014895800000000112, 0.00015062500000000145, 0.00015044500000000252, 0.00014945899999999762, 0.0001497919999999993, 0.00014944400000000205, 0.00014922199999999747, 0.00014930600000000183, 0.00014977799999999972, 0.0001502919999999998, 0.0001487919999999983, 0.00014977800000000319, 0.00015062499999999798, 0.00015009699999999834, 0.00014911100000000038, 0.00014997199999999822, 0.00015012500000000095, 0.00015044499999999905, 0.0001487909999999988, 0.00014943000000000248, 0.00014977799999999972, 0.00015062499999999798, 0.00014895800000000112, 0.0001494590000000011, 0.00014927800000000269, 0.0001490689999999982, 0.00015047199999999872, 0.00014966700000000263, 0.0001489720000000007, 0.00014930599999999836, 0.0001494590000000011, 0.00015045899999999862, 0.0001494720000000012, 0.00015055500000000013, 0.00014912499999999995, 0.00014912499999999995, 0.00014995899999999812, 0.00015012500000000095, 0.00015026400000000065, 0.00014879100000000228, 0.00014931899999999845, 0.0001503620000000011, 0.00014906900000000167, 0.00014925000000000008, 0.00014897300000000016]</msg>
<status status="PASS" starttime="20201030 11:51:42.581" endtime="20201030 11:51:42.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.577" endtime="20201030 11:51:42.584"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.588" endtime="20201030 11:51:42.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.586" endtime="20201030 11:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.585" endtime="20201030 11:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.221" endtime="20201030 11:51:42.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.220" endtime="20201030 11:51:42.609"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.617" endtime="20201030 11:51:42.640"></status>
</kw>
<msg timestamp="20201030 11:51:42.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.616" endtime="20201030 11:51:42.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.642" endtime="20201030 11:51:42.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.644" endtime="20201030 11:51:42.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.613" endtime="20201030 11:51:42.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.611" endtime="20201030 11:51:42.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.654" endtime="20201030 11:51:42.946"></status>
</kw>
<msg timestamp="20201030 11:51:42.949" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.652" endtime="20201030 11:51:42.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.958" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022761792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022913167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.950" endtime="20201030 11:51:42.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.959" endtime="20201030 11:51:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.649" endtime="20201030 11:51:42.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.648" endtime="20201030 11:51:42.961"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.966" level="INFO">${RESULT} = [{'diff': 0.0001513750000000022}, {'diff': 0.00015112500000000195}, {'diff': 0.00015161100000000288}, {'diff': 0.00015194400000000108}, {'diff': 0.00015234800000000007}, {'diff': 0.0001516249999999989...</msg>
<status status="PASS" starttime="20201030 11:51:42.962" endtime="20201030 11:51:42.966"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.970" level="INFO">${ACCURACY} = {'diff': [0.0001513750000000022, 0.00015112500000000195, 0.00015161100000000288, 0.00015194400000000108, 0.00015234800000000007, 0.00015162499999999898, 0.00015112499999999848, 0.00015162500000000245,...</msg>
<status status="PASS" starttime="20201030 11:51:42.967" endtime="20201030 11:51:42.970"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.974" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.973" endtime="20201030 11:51:42.975"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.977" level="INFO">VALUE: [0.0001513750000000022, 0.00015112500000000195, 0.00015161100000000288, 0.00015194400000000108, 0.00015234800000000007, 0.00015162499999999898, 0.00015112499999999848, 0.00015162500000000245, 0.00015245900000000062, 0.00015227699999999927, 0.0001524439999999981, 0.0001521109999999999, 0.0001512920000000008, 0.00015075000000000158, 0.00015212499999999948, 0.00015226400000000265, 0.00015229099999999884, 0.0001526530000000026, 0.00015258300000000127, 0.00015080599999999986, 0.0001516660000000017, 0.00015222299999999994, 0.00015195799999999718, 0.00015201399999999893, 0.00015180500000000138, 0.00015179199999999782, 0.00015129199999999732, 0.00015209700000000034, 0.00015179199999999782, 0.0001512079999999999, 0.00015127699999999827, 0.0001516109999999994, 0.00015162500000000245, 0.00015151399999999843, 0.00015113899999999805, 0.00015245800000000115, 0.00015227699999999927, 0.00015195800000000065, 0.00015094400000000008, 0.00015145800000000015, 0.00015212499999999948, 0.00015209799999999982, 0.00015112500000000195, 0.00015208300000000077, 0.00015262499999999998, 0.00015112499999999848, 0.00015223600000000004, 0.0001526110000000004, 0.00015112499999999848, 0.00015245799999999768]</msg>
<status status="PASS" starttime="20201030 11:51:42.976" endtime="20201030 11:51:42.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.970" endtime="20201030 11:51:42.978"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.982" endtime="20201030 11:51:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.980" endtime="20201030 11:51:43.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.979" endtime="20201030 11:51:43.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.609" endtime="20201030 11:51:43.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.609" endtime="20201030 11:51:43.003"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.012" endtime="20201030 11:51:43.035"></status>
</kw>
<msg timestamp="20201030 11:51:43.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.010" endtime="20201030 11:51:43.036"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.038" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.037" endtime="20201030 11:51:43.039"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.039" endtime="20201030 11:51:43.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.008" endtime="20201030 11:51:43.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.005" endtime="20201030 11:51:43.042"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.049" endtime="20201030 11:51:43.336"></status>
</kw>
<msg timestamp="20201030 11:51:43.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.047" endtime="20201030 11:51:43.339"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023821653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023974764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.340" endtime="20201030 11:51:43.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.348" endtime="20201030 11:51:43.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.045" endtime="20201030 11:51:43.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.043" endtime="20201030 11:51:43.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.355" level="INFO">${RESULT} = [{'diff': 0.00015311099999999744}, {'diff': 0.00015377800000000025}, {'diff': 0.0001540699999999992}, {'diff': 0.00015295799999999818}, {'diff': 0.00015329099999999984}, {'diff': 0.0001542919999999968...</msg>
<status status="PASS" starttime="20201030 11:51:43.352" endtime="20201030 11:51:43.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.359" level="INFO">${ACCURACY} = {'diff': [0.00015311099999999744, 0.00015377800000000025, 0.0001540699999999992, 0.00015295799999999818, 0.00015329099999999984, 0.00015429199999999685, 0.00015461099999999894, 0.00015345900000000162,...</msg>
<status status="PASS" starttime="20201030 11:51:43.356" endtime="20201030 11:51:43.360"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.364" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.363" endtime="20201030 11:51:43.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.366" level="INFO">VALUE: [0.00015311099999999744, 0.00015377800000000025, 0.0001540699999999992, 0.00015295799999999818, 0.00015329099999999984, 0.00015429199999999685, 0.00015461099999999894, 0.00015345900000000162, 0.00015445900000000262, 0.00015447199999999925, 0.0001543059999999999, 0.00015413899999999758, 0.00015442999999999707, 0.0001543059999999999, 0.00015295899999999765, 0.00015445800000000315, 0.000153915999999997, 0.00015313900000000005, 0.00015362500000000098, 0.00015365300000000012, 0.0001531110000000009, 0.0001543059999999999, 0.0001538470000000021, 0.00015331899999999898, 0.00015362500000000098, 0.00015468100000000026, 0.0001534439999999991, 0.00015329199999999932, 0.00015459799999999885, 0.00015312500000000048, 0.000153430000000003, 0.0001546809999999968, 0.00015463899999999808, 0.00015377800000000025, 0.00015377800000000025, 0.00015379199999999982, 0.0001537500000000011, 0.0001536249999999975, 0.00015329199999999932, 0.00015379199999999982, 0.00015461099999999894, 0.00015341699999999944, 0.00015377800000000025, 0.00015429099999999737, 0.00015281899999999848, 0.00015273599999999707, 0.00015294500000000155, 0.0001538059999999994, 0.00015361099999999794, 0.0001536249999999975]</msg>
<status status="PASS" starttime="20201030 11:51:43.365" endtime="20201030 11:51:43.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.360" endtime="20201030 11:51:43.369"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.372" endtime="20201030 11:51:43.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.371" endtime="20201030 11:51:43.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.370" endtime="20201030 11:51:43.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.004" endtime="20201030 11:51:43.393"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.003" endtime="20201030 11:51:43.393"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.402" endtime="20201030 11:51:43.425"></status>
</kw>
<msg timestamp="20201030 11:51:43.426" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.401" endtime="20201030 11:51:43.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.428" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.427" endtime="20201030 11:51:43.429"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.429" endtime="20201030 11:51:43.431"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.398" endtime="20201030 11:51:43.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.396" endtime="20201030 11:51:43.432"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.439" endtime="20201030 11:51:43.725"></status>
</kw>
<msg timestamp="20201030 11:51:43.728" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.437" endtime="20201030 11:51:43.729"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.737" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022744681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022899625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.730" endtime="20201030 11:51:43.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.738" endtime="20201030 11:51:43.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.435" endtime="20201030 11:51:43.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.433" endtime="20201030 11:51:43.741"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.745" level="INFO">${RESULT} = [{'diff': 0.0001549440000000006}, {'diff': 0.00015481999999999996}, {'diff': 0.00015545900000000015}, {'diff': 0.00015581900000000148}, {'diff': 0.00015529100000000184}, {'diff': 0.0001566110000000009...</msg>
<status status="PASS" starttime="20201030 11:51:43.741" endtime="20201030 11:51:43.745"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.750" level="INFO">${ACCURACY} = {'diff': [0.0001549440000000006, 0.00015481999999999996, 0.00015545900000000015, 0.00015581900000000148, 0.00015529100000000184, 0.00015661100000000094, 0.00015597200000000075, 0.0001554449999999971, ...</msg>
<status status="PASS" starttime="20201030 11:51:43.746" endtime="20201030 11:51:43.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.754" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.753" endtime="20201030 11:51:43.755"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.757" level="INFO">VALUE: [0.0001549440000000006, 0.00015481999999999996, 0.00015545900000000015, 0.00015581900000000148, 0.00015529100000000184, 0.00015661100000000094, 0.00015597200000000075, 0.0001554449999999971, 0.00015494500000000008, 0.00015529200000000132, 0.00015529100000000184, 0.00015509699999999987, 0.00015644399999999864, 0.00015477799999999778, 0.00015612500000000001, 0.00015522299999999947, 0.00015611199999999992, 0.00015561099999999994, 0.00015597199999999728, 0.0001562639999999997, 0.0001553060000000009, 0.00015645900000000115, 0.00015529200000000132, 0.00015647200000000125, 0.00015661099999999747, 0.00015497199999999975, 0.00015580599999999792, 0.00015656999999999824, 0.00015580599999999792, 0.0001549310000000005, 0.00015513899999999858, 0.00015579099999999887, 0.0001559440000000016, 0.00015544500000000058, 0.00015545900000000015, 0.00015545900000000015, 0.0001564440000000021, 0.00015561099999999994, 0.00015545800000000068, 0.00015527799999999828, 0.00015644500000000158, 0.0001561380000000001, 0.00015609800000000035, 0.00015630500000000241, 0.00015529099999999837, 0.00015518100000000076, 0.00015559700000000037, 0.0001558890000000028, 0.00015612500000000001, 0.0001556670000000017]</msg>
<status status="PASS" starttime="20201030 11:51:43.756" endtime="20201030 11:51:43.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.751" endtime="20201030 11:51:43.758"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.762" endtime="20201030 11:51:43.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.761" endtime="20201030 11:51:43.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.759" endtime="20201030 11:51:43.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.394" endtime="20201030 11:51:43.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.394" endtime="20201030 11:51:43.783"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.792" endtime="20201030 11:51:43.814"></status>
</kw>
<msg timestamp="20201030 11:51:43.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.790" endtime="20201030 11:51:43.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.817" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.816" endtime="20201030 11:51:43.818"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.818" endtime="20201030 11:51:43.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.788" endtime="20201030 11:51:43.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.786" endtime="20201030 11:51:43.821"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.828" endtime="20201030 11:51:44.115"></status>
</kw>
<msg timestamp="20201030 11:51:44.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.826" endtime="20201030 11:51:44.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022499944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022658403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.120" endtime="20201030 11:51:44.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.128" endtime="20201030 11:51:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.824" endtime="20201030 11:51:44.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.822" endtime="20201030 11:51:44.131"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.135" level="INFO">${RESULT} = [{'diff': 0.00015845899999999968}, {'diff': 0.00015795899999999918}, {'diff': 0.0001571380000000011}, {'diff': 0.00015751400000000096}, {'diff': 0.00015813899999999811}, {'diff': 0.0001572919999999998...</msg>
<status status="PASS" starttime="20201030 11:51:44.132" endtime="20201030 11:51:44.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.139" level="INFO">${ACCURACY} = {'diff': [0.00015845899999999968, 0.00015795899999999918, 0.0001571380000000011, 0.00015751400000000096, 0.00015813899999999811, 0.00015729199999999985, 0.0001569449999999986, 0.0001575000000000014, 0...</msg>
<status status="PASS" starttime="20201030 11:51:44.136" endtime="20201030 11:51:44.139"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.144" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.143" endtime="20201030 11:51:44.144"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.146" level="INFO">VALUE: [0.00015845899999999968, 0.00015795899999999918, 0.0001571380000000011, 0.00015751400000000096, 0.00015813899999999811, 0.00015729199999999985, 0.0001569449999999986, 0.0001575000000000014, 0.00015711100000000144, 0.00015726299999999777, 0.00015812499999999854, 0.00015812500000000201, 0.00015747200000000225, 0.00015761100000000194, 0.00015712500000000101, 0.00015747199999999878, 0.00015744399999999964, 0.00015680499999999944, 0.0001580969999999994, 0.00015813899999999811, 0.00015680599999999892, 0.00015833300000000008, 0.0001579579999999997, 0.00015779100000000088, 0.00015762500000000151, 0.00015761100000000194, 0.00015761100000000194, 0.00015729199999999985, 0.00015695899999999818, 0.0001569440000000026, 0.00015793000000000057, 0.00015741699999999997, 0.0001579579999999997, 0.0001572640000000007, 0.00015804199999999713, 0.00015833300000000008, 0.0001574579999999992, 0.0001585969999999999, 0.00015797199999999928, 0.00015762499999999804, 0.00015812499999999854, 0.00015711099999999797, 0.0001567770000000003, 0.00015805499999999723, 0.00015677799999999978, 0.00015733399999999856, 0.00015862499999999904, 0.00015715300000000015, 0.00015762499999999804, 0.00015748599999999835]</msg>
<status status="PASS" starttime="20201030 11:51:44.145" endtime="20201030 11:51:44.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.140" endtime="20201030 11:51:44.148"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.151" endtime="20201030 11:51:44.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.150" endtime="20201030 11:51:44.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.149" endtime="20201030 11:51:44.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.784" endtime="20201030 11:51:44.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.783" endtime="20201030 11:51:44.172"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.181" endtime="20201030 11:51:44.205"></status>
</kw>
<msg timestamp="20201030 11:51:44.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.180" endtime="20201030 11:51:44.206"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.208" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.206" endtime="20201030 11:51:44.208"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.209" endtime="20201030 11:51:44.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.177" endtime="20201030 11:51:44.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.175" endtime="20201030 11:51:44.212"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.218" endtime="20201030 11:51:44.505"></status>
</kw>
<msg timestamp="20201030 11:51:44.508" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024033972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02419425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:44.217" endtime="20201030 11:51:44.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.516" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024033972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02419425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:44.509" endtime="20201030 11:51:44.516"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.517" endtime="20201030 11:51:44.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.214" endtime="20201030 11:51:44.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.212" endtime="20201030 11:51:44.520"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.524" level="INFO">${RESULT} = [{'diff': 0.0001602779999999998}, {'diff': 0.00016029199999999938}, {'diff': 0.00015883299999999712}, {'diff': 0.00015995799999999824}, {'diff': 0.00015980499999999898}, {'diff': 0.0001601670000000027...</msg>
<status status="PASS" starttime="20201030 11:51:44.521" endtime="20201030 11:51:44.524"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.528" level="INFO">${ACCURACY} = {'diff': [0.0001602779999999998, 0.00016029199999999938, 0.00015883299999999712, 0.00015995799999999824, 0.00015980499999999898, 0.00016016700000000272, 0.00015912499999999954, 0.00016048600000000135,...</msg>
<status status="PASS" starttime="20201030 11:51:44.525" endtime="20201030 11:51:44.528"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.533" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.532" endtime="20201030 11:51:44.533"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.536" level="INFO">VALUE: [0.0001602779999999998, 0.00016029199999999938, 0.00015883299999999712, 0.00015995799999999824, 0.00015980499999999898, 0.00016016700000000272, 0.00015912499999999954, 0.00016048600000000135, 0.00016044500000000211, 0.00016013800000000064, 0.00015911099999999997, 0.00015920900000000043, 0.00015912499999999954, 0.0001587779999999983, 0.00015998700000000032, 0.00016062500000000104, 0.00015980499999999898, 0.00015913899999999911, 0.00015994399999999867, 0.0001594580000000012, 0.00016044499999999864, 0.0001592779999999988, 0.00015963800000000014, 0.00015949999999999992, 0.00016062500000000104, 0.00015994399999999867, 0.0001599580000000017, 0.00015912499999999954, 0.00015962500000000004, 0.000159013999999999, 0.0001600689999999988, 0.00016013900000000011, 0.00015879200000000135, 0.00016047300000000125, 0.00015962500000000004, 0.00016025000000000067, 0.0001592770000000028, 0.00015912499999999954, 0.00015894399999999767, 0.00015998700000000032, 0.00015943100000000154, 0.00015957000000000124, 0.00015944399999999817, 0.00015965300000000265, 0.00015963900000000308, 0.00016030499999999948, 0.00015994500000000161, 0.00016056999999999877, 0.00015980499999999898, 0.0001594439999999947]</msg>
<status status="PASS" starttime="20201030 11:51:44.534" endtime="20201030 11:51:44.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.529" endtime="20201030 11:51:44.538"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.541" endtime="20201030 11:51:44.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.540" endtime="20201030 11:51:44.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.539" endtime="20201030 11:51:44.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.173" endtime="20201030 11:51:44.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.173" endtime="20201030 11:51:44.562"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.571" endtime="20201030 11:51:44.593"></status>
</kw>
<msg timestamp="20201030 11:51:44.594" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.569" endtime="20201030 11:51:44.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.596" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.595" endtime="20201030 11:51:44.596"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.597" endtime="20201030 11:51:44.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.567" endtime="20201030 11:51:44.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.565" endtime="20201030 11:51:44.600"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.607" endtime="20201030 11:51:44.893"></status>
</kw>
<msg timestamp="20201030 11:51:44.896" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.605" endtime="20201030 11:51:44.896"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.904" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022387111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022548403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.897" endtime="20201030 11:51:44.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.905" endtime="20201030 11:51:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.602" endtime="20201030 11:51:44.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.600" endtime="20201030 11:51:44.908"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.912" level="INFO">${RESULT} = [{'diff': 0.00016129200000000038}, {'diff': 0.00016129200000000038}, {'diff': 0.00016222299999999953}, {'diff': 0.00016113900000000111}, {'diff': 0.00016127699999999787}, {'diff': 0.000161292000000000...</msg>
<status status="PASS" starttime="20201030 11:51:44.909" endtime="20201030 11:51:44.912"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.917" level="INFO">${ACCURACY} = {'diff': [0.00016129200000000038, 0.00016129200000000038, 0.00016222299999999953, 0.00016113900000000111, 0.00016127699999999787, 0.00016129200000000038, 0.00016176400000000174, 0.00016130599999999995...</msg>
<status status="PASS" starttime="20201030 11:51:44.913" endtime="20201030 11:51:44.917"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.921" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.920" endtime="20201030 11:51:44.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.924" level="INFO">VALUE: [0.00016129200000000038, 0.00016129200000000038, 0.00016222299999999953, 0.00016113900000000111, 0.00016127699999999787, 0.00016129200000000038, 0.00016176400000000174, 0.00016130599999999995, 0.000161610999999999, 0.0001609580000000027, 0.0001607910000000004, 0.00016090300000000043, 0.00016147200000000278, 0.00016080599999999945, 0.00016219400000000092, 0.00016145899999999921, 0.00016176399999999827, 0.00016245800000000074, 0.00016208300000000037, 0.0001622919999999979, 0.00016212499999999908, 0.00016095900000000218, 0.00016165300000000118, 0.00016230500000000148, 0.00016113900000000111, 0.0001607780000000003, 0.00016194500000000014, 0.00016145899999999921, 0.00016263899999999915, 0.00016129099999999744, 0.00016245800000000074, 0.00016212499999999908, 0.00016109699999999894, 0.0001611109999999985, 0.00016162499999999858, 0.00016112499999999808, 0.00016127799999999734, 0.00016227799999999834, 0.00016130599999999995, 0.00016195899999999971, 0.00016162500000000204, 0.00016090200000000096, 0.0001623889999999989, 0.00016144400000000017, 0.0001607780000000003, 0.00016245900000000021, 0.00016156999999999977, 0.00016212499999999908, 0.00016144400000000017, 0.00016095799999999924]</msg>
<status status="PASS" starttime="20201030 11:51:44.923" endtime="20201030 11:51:44.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.918" endtime="20201030 11:51:44.925"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.929" endtime="20201030 11:51:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.928" endtime="20201030 11:51:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.926" endtime="20201030 11:51:44.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.563" endtime="20201030 11:51:44.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.562" endtime="20201030 11:51:44.950"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.959" endtime="20201030 11:51:44.982"></status>
</kw>
<msg timestamp="20201030 11:51:44.982" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.957" endtime="20201030 11:51:44.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.983" endtime="20201030 11:51:44.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.986" endtime="20201030 11:51:44.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.955" endtime="20201030 11:51:44.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.952" endtime="20201030 11:51:44.988"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.995" endtime="20201030 11:51:45.284"></status>
</kw>
<msg timestamp="20201030 11:51:45.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.994" endtime="20201030 11:51:45.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022629569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022792708, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.289" endtime="20201030 11:51:45.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.297" endtime="20201030 11:51:45.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.991" endtime="20201030 11:51:45.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.989" endtime="20201030 11:51:45.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.304" level="INFO">${RESULT} = [{'diff': 0.00016313899999999965}, {'diff': 0.0001637500000000007}, {'diff': 0.00016363900000000015}, {'diff': 0.00016395799999999877}, {'diff': 0.00016345899999999774}, {'diff': 0.0001632919999999989...</msg>
<status status="PASS" starttime="20201030 11:51:45.300" endtime="20201030 11:51:45.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.308" level="INFO">${ACCURACY} = {'diff': [0.00016313899999999965, 0.0001637500000000007, 0.00016363900000000015, 0.00016395799999999877, 0.00016345899999999774, 0.0001632919999999989, 0.00016362500000000058, 0.00016397199999999834, ...</msg>
<status status="PASS" starttime="20201030 11:51:45.305" endtime="20201030 11:51:45.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.313" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.312" endtime="20201030 11:51:45.313"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.315" level="INFO">VALUE: [0.00016313899999999965, 0.0001637500000000007, 0.00016363900000000015, 0.00016395799999999877, 0.00016345899999999774, 0.0001632919999999989, 0.00016362500000000058, 0.00016397199999999834, 0.00016280599999999798, 0.00016336100000000076, 0.00016377799999999984, 0.00016330599999999848, 0.00016379099999999994, 0.00016345799999999827, 0.0001640829999999989, 0.0001646249999999981, 0.0001642080000000025, 0.00016316600000000278, 0.00016294500000000114, 0.0001634439999999987, 0.00016390299999999997, 0.00016362500000000058, 0.00016312500000000008, 0.0001641110000000015, 0.0001644309999999996, 0.0001627499999999997, 0.0001631110000000005, 0.0001629439999999982, 0.00016412500000000108, 0.00016312500000000008, 0.00016397199999999834, 0.00016447199999999884, 0.00016344400000000217, 0.0001632500000000002, 0.00016363900000000015, 0.00016362500000000058, 0.00016397300000000128, 0.0001634859999999974, 0.0001634439999999987, 0.0001646249999999981, 0.00016280600000000145, 0.00016294500000000114, 0.00016362500000000058, 0.00016445899999999875, 0.00016345800000000174, 0.00016329099999999944, 0.00016329200000000238, 0.0001645410000000007, 0.00016365200000000024, 0.0001634309999999986]</msg>
<status status="PASS" starttime="20201030 11:51:45.314" endtime="20201030 11:51:45.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.309" endtime="20201030 11:51:45.317"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.320" endtime="20201030 11:51:45.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.319" endtime="20201030 11:51:45.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.318" endtime="20201030 11:51:45.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.951" endtime="20201030 11:51:45.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.950" endtime="20201030 11:51:45.341"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.350" endtime="20201030 11:51:45.374"></status>
</kw>
<msg timestamp="20201030 11:51:45.374" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.348" endtime="20201030 11:51:45.375"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.375" endtime="20201030 11:51:45.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.378" endtime="20201030 11:51:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.346" endtime="20201030 11:51:45.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.344" endtime="20201030 11:51:45.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.388" endtime="20201030 11:51:45.674"></status>
</kw>
<msg timestamp="20201030 11:51:45.677" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.386" endtime="20201030 11:51:45.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023489542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023655819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.679" endtime="20201030 11:51:45.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.687" endtime="20201030 11:51:45.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.383" endtime="20201030 11:51:45.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.381" endtime="20201030 11:51:45.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.694" level="INFO">${RESULT} = [{'diff': 0.00016627700000000287}, {'diff': 0.000165305000000001}, {'diff': 0.0001647920000000004}, {'diff': 0.0001647920000000004}, {'diff': 0.0001653890000000019}, {'diff': 0.00016529199999999744}, ...</msg>
<status status="PASS" starttime="20201030 11:51:45.690" endtime="20201030 11:51:45.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.698" level="INFO">${ACCURACY} = {'diff': [0.00016627700000000287, 0.000165305000000001, 0.0001647920000000004, 0.0001647920000000004, 0.0001653890000000019, 0.00016529199999999744, 0.00016626299999999983, 0.0001650280000000011, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:45.695" endtime="20201030 11:51:45.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.702" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.701" endtime="20201030 11:51:45.703"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.705" level="INFO">VALUE: [0.00016627700000000287, 0.000165305000000001, 0.0001647920000000004, 0.0001647920000000004, 0.0001653890000000019, 0.00016529199999999744, 0.00016626299999999983, 0.0001650280000000011, 0.00016509799999999894, 0.0001662220000000006, 0.0001647920000000004, 0.000164708999999999, 0.00016479099999999747, 0.00016526400000000177, 0.00016577799999999837, 0.0001664440000000017, 0.0001656249999999991, 0.00016559799999999944, 0.00016531900000000058, 0.00016638899999999943, 0.00016501400000000152, 0.0001652920000000009, 0.00016644500000000118, 0.00016644500000000118, 0.0001654440000000007, 0.0001661249999999996, 0.00016663899999999968, 0.00016645800000000127, 0.00016627800000000234, 0.00016497299999999882, 0.00016645900000000075, 0.00016661099999999707, 0.000165305000000001, 0.00016629199999999844, 0.00016658299999999793, 0.00016559699999999997, 0.0001647920000000004, 0.00016527700000000187, 0.00016497199999999934, 0.00016561099999999954, 0.00016512500000000208, 0.0001656249999999991, 0.00016574999999999923, 0.00016590199999999902, 0.00016598600000000338, 0.00016480600000000345, 0.00016597200000000034, 0.00016619400000000145, 0.0001660980000000034, 0.0001663189999999981]</msg>
<status status="PASS" starttime="20201030 11:51:45.703" endtime="20201030 11:51:45.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.699" endtime="20201030 11:51:45.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.711" endtime="20201030 11:51:45.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.709" endtime="20201030 11:51:45.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.708" endtime="20201030 11:51:45.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.342" endtime="20201030 11:51:45.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.341" endtime="20201030 11:51:45.732"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.741" endtime="20201030 11:51:45.764"></status>
</kw>
<msg timestamp="20201030 11:51:45.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.739" endtime="20201030 11:51:45.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.765" endtime="20201030 11:51:45.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.768" endtime="20201030 11:51:45.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.737" endtime="20201030 11:51:45.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.734" endtime="20201030 11:51:45.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.777" endtime="20201030 11:51:46.063"></status>
</kw>
<msg timestamp="20201030 11:51:46.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.775" endtime="20201030 11:51:46.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022811958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.067" endtime="20201030 11:51:46.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.075" endtime="20201030 11:51:46.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.773" endtime="20201030 11:51:46.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.771" endtime="20201030 11:51:46.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.082" level="INFO">${RESULT} = [{'diff': 0.0001681250000000016}, {'diff': 0.0001683190000000001}, {'diff': 0.0001671250000000006}, {'diff': 0.00016747200000000184}, {'diff': 0.00016759700000000197}, {'diff': 0.00016697199999999787}...</msg>
<status status="PASS" starttime="20201030 11:51:46.079" endtime="20201030 11:51:46.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.087" level="INFO">${ACCURACY} = {'diff': [0.0001681250000000016, 0.0001683190000000001, 0.0001671250000000006, 0.00016747200000000184, 0.00016759700000000197, 0.00016697199999999787, 0.0001679579999999993, 0.00016794399999999973, 0....</msg>
<status status="PASS" starttime="20201030 11:51:46.083" endtime="20201030 11:51:46.088"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.092" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.091" endtime="20201030 11:51:46.092"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.095" level="INFO">VALUE: [0.0001681250000000016, 0.0001683190000000001, 0.0001671250000000006, 0.00016747200000000184, 0.00016759700000000197, 0.00016697199999999787, 0.0001679579999999993, 0.00016794399999999973, 0.0001674579999999988, 0.00016856999999999983, 0.0001672920000000029, 0.00016777800000000037, 0.00016827699999999793, 0.0001684579999999998, 0.00016695800000000177, 0.00016713900000000018, 0.00016677799999999937, 0.00016777800000000037, 0.00016729099999999997, 0.000167790999999997, 0.0001669440000000022, 0.00016695899999999778, 0.0001684449999999997, 0.00016763900000000068, 0.0001684160000000011, 0.0001669579999999983, 0.0001671250000000006, 0.00016679199999999894, 0.00016829200000000044, 0.00016795900000000225, 0.00016862499999999864, 0.0001684579999999998, 0.0001674440000000027, 0.00016762499999999764, 0.00016779199999999994, 0.00016845900000000275, 0.00016743099999999914, 0.00016830500000000054, 0.0001686250000000021, 0.0001686250000000021, 0.00016847199999999937, 0.00016744500000000218, 0.00016715299999999975, 0.00016844400000000023, 0.00016727799999999987, 0.00016766699999999982, 0.00016777800000000037, 0.00016827800000000087, 0.0001675839999999984, 0.00016681900000000555]</msg>
<status status="PASS" starttime="20201030 11:51:46.093" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.088" endtime="20201030 11:51:46.096"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.100" endtime="20201030 11:51:46.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.098" endtime="20201030 11:51:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.097" endtime="20201030 11:51:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.733" endtime="20201030 11:51:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.732" endtime="20201030 11:51:46.120"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.129" endtime="20201030 11:51:46.153"></status>
</kw>
<msg timestamp="20201030 11:51:46.153" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.128" endtime="20201030 11:51:46.153"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.156" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.154" endtime="20201030 11:51:46.156"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.157" endtime="20201030 11:51:46.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.125" endtime="20201030 11:51:46.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.123" endtime="20201030 11:51:46.160"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.167" endtime="20201030 11:51:46.454"></status>
</kw>
<msg timestamp="20201030 11:51:46.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.165" endtime="20201030 11:51:46.457"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022560194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022730486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.458" endtime="20201030 11:51:46.465"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.466" endtime="20201030 11:51:46.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.162" endtime="20201030 11:51:46.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.160" endtime="20201030 11:51:46.469"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.473" level="INFO">${RESULT} = [{'diff': 0.00017029200000000244}, {'diff': 0.0001704169999999991}, {'diff': 0.0001696389999999992}, {'diff': 0.00016963900000000268}, {'diff': 0.00016988899999999946}, {'diff': 0.0001696389999999992}...</msg>
<status status="PASS" starttime="20201030 11:51:46.470" endtime="20201030 11:51:46.473"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.477" level="INFO">${ACCURACY} = {'diff': [0.00017029200000000244, 0.0001704169999999991, 0.0001696389999999992, 0.00016963900000000268, 0.00016988899999999946, 0.0001696389999999992, 0.0001687359999999992, 0.00017012500000000014, 0....</msg>
<status status="PASS" starttime="20201030 11:51:46.474" endtime="20201030 11:51:46.477"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.482" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.481" endtime="20201030 11:51:46.482"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.484" level="INFO">VALUE: [0.00017029200000000244, 0.0001704169999999991, 0.0001696389999999992, 0.00016963900000000268, 0.00016988899999999946, 0.0001696389999999992, 0.0001687359999999992, 0.00017012500000000014, 0.00016879200000000094, 0.0001692779999999984, 0.0001704589999999978, 0.00017020900000000103, 0.00016945799999999733, 0.00016930599999999754, 0.0001701389999999997, 0.00016895899999999978, 0.00016880500000000104, 0.00017062500000000064, 0.00017045799999999833, 0.00017012500000000014, 0.0001692359999999997, 0.00016995900000000078, 0.0001694580000000008, 0.00017, 0.0001706390000000002, 0.00016979200000000194, 0.00017029199999999897, 0.00016911099999999957, 0.00016924999999999926, 0.0001699719999999974, 0.00016979100000000247, 0.0001706109999999976, 0.00016895899999999978, 0.00016895899999999978, 0.00016980499999999857, 0.0001704580000000018, 0.0001692779999999984, 0.00016961100000000007, 0.00016951399999999908, 0.00016979199999999847, 0.00016930500000000154, 0.00016979100000000247, 0.00016912499999999914, 0.00016944400000000123, 0.00016911099999999957, 0.00017011100000000057, 0.000169612000000003, 0.00017027699999999993, 0.00017045799999999833, 0.000169097]</msg>
<status status="PASS" starttime="20201030 11:51:46.483" endtime="20201030 11:51:46.485"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.478" endtime="20201030 11:51:46.486"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.489" endtime="20201030 11:51:46.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.488" endtime="20201030 11:51:46.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.487" endtime="20201030 11:51:46.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.121" endtime="20201030 11:51:46.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.121" endtime="20201030 11:51:46.510"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.519" endtime="20201030 11:51:46.544"></status>
</kw>
<msg timestamp="20201030 11:51:46.545" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.518" endtime="20201030 11:51:46.545"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.547" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.546" endtime="20201030 11:51:46.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.548" endtime="20201030 11:51:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.515" endtime="20201030 11:51:46.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.513" endtime="20201030 11:51:46.551"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.558" endtime="20201030 11:51:46.844"></status>
</kw>
<msg timestamp="20201030 11:51:46.847" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.556" endtime="20201030 11:51:46.847"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.855" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023688069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023859361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.848" endtime="20201030 11:51:46.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.857" endtime="20201030 11:51:46.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.553" endtime="20201030 11:51:46.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.551" endtime="20201030 11:51:46.859"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.863" level="INFO">${RESULT} = [{'diff': 0.00017129199999999997}, {'diff': 0.0001722499999999988}, {'diff': 0.00017134699999999878}, {'diff': 0.00017161199999999807}, {'diff': 0.00017162499999999817}, {'diff': 0.0001712910000000005...</msg>
<status status="PASS" starttime="20201030 11:51:46.860" endtime="20201030 11:51:46.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.867" level="INFO">${ACCURACY} = {'diff': [0.00017129199999999997, 0.0001722499999999988, 0.00017134699999999878, 0.00017161199999999807, 0.00017162499999999817, 0.0001712910000000005, 0.0001709580000000023, 0.00017162500000000164, 0...</msg>
<status status="PASS" starttime="20201030 11:51:46.864" endtime="20201030 11:51:46.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.872" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.871" endtime="20201030 11:51:46.872"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.875" level="INFO">VALUE: [0.00017129199999999997, 0.0001722499999999988, 0.00017134699999999878, 0.00017161199999999807, 0.00017162499999999817, 0.0001712910000000005, 0.0001709580000000023, 0.00017162500000000164, 0.0001714589999999988, 0.00017079199999999947, 0.000170791, 0.0001718329999999997, 0.00017179200000000047, 0.00017095799999999883, 0.00017179200000000047, 0.00017079199999999947, 0.00017081899999999914, 0.0001712910000000005, 0.0001712780000000004, 0.0001726390000000022, 0.00017194499999999974, 0.00017195799999999983, 0.0001726109999999996, 0.00017145799999999933, 0.00017095799999999883, 0.00017097200000000187, 0.00017212499999999867, 0.00017129199999999997, 0.00017179099999999753, 0.00017247200000000337, 0.00017129199999999997, 0.00017106999999999886, 0.0001714450000000027, 0.00017161199999999807, 0.0001709580000000023, 0.00017252799999999818, 0.0001707779999999999, 0.0001719589999999993, 0.0001722780000000014, 0.00017163799999999826, 0.00017111100000000157, 0.0001712910000000005, 0.00017094399999999926, 0.0001718620000000018, 0.00017080599999999557, 0.0001724719999999999, 0.00017194400000000026, 0.00017245800000000033, 0.00017227799999999793, 0.000171306000000003]</msg>
<status status="PASS" starttime="20201030 11:51:46.873" endtime="20201030 11:51:46.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.868" endtime="20201030 11:51:46.877"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.881" endtime="20201030 11:51:46.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.879" endtime="20201030 11:51:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.878" endtime="20201030 11:51:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.511" endtime="20201030 11:51:46.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.510" endtime="20201030 11:51:46.901"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.910" endtime="20201030 11:51:46.934"></status>
</kw>
<msg timestamp="20201030 11:51:46.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.909" endtime="20201030 11:51:46.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.937" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.936" endtime="20201030 11:51:46.937"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.938" endtime="20201030 11:51:46.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.906" endtime="20201030 11:51:46.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.904" endtime="20201030 11:51:46.941"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.948" endtime="20201030 11:51:47.234"></status>
</kw>
<msg timestamp="20201030 11:51:47.237" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.946" endtime="20201030 11:51:47.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.245" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022675528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022848319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.238" endtime="20201030 11:51:47.246"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.247" endtime="20201030 11:51:47.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.944" endtime="20201030 11:51:47.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.942" endtime="20201030 11:51:47.249"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.253" level="INFO">${RESULT} = [{'diff': 0.00017279099999999853}, {'diff': 0.00017312500000000314}, {'diff': 0.00017295800000000083}, {'diff': 0.0001731110000000001}, {'diff': 0.00017329200000000197}, {'diff': 0.0001734449999999977...</msg>
<status status="PASS" starttime="20201030 11:51:47.250" endtime="20201030 11:51:47.253"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.258" level="INFO">${ACCURACY} = {'diff': [0.00017279099999999853, 0.00017312500000000314, 0.00017295800000000083, 0.0001731110000000001, 0.00017329200000000197, 0.00017344499999999777, 0.00017402799999999968, 0.00017345800000000133,...</msg>
<status status="PASS" starttime="20201030 11:51:47.254" endtime="20201030 11:51:47.258"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.263" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.262" endtime="20201030 11:51:47.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.265" level="INFO">VALUE: [0.00017279099999999853, 0.00017312500000000314, 0.00017295800000000083, 0.0001731110000000001, 0.00017329200000000197, 0.00017344499999999777, 0.00017402799999999968, 0.00017345800000000133, 0.00017312499999999967, 0.0001745270000000007, 0.00017418000000000294, 0.00017327799999999893, 0.00017429100000000003, 0.00017323600000000022, 0.00017312499999999967, 0.0001734590000000008, 0.00017462500000000117, 0.00017462500000000117, 0.00017412500000000067, 0.00017295800000000083, 0.00017277799999999843, 0.00017366700000000235, 0.00017312499999999967, 0.00017402799999999968, 0.00017294400000000126, 0.00017280500000000157, 0.00017394400000000226, 0.0001732919999999985, 0.000172888999999999, 0.0001733049999999986, 0.00017359700000000103, 0.00017462500000000117, 0.00017362500000000017, 0.00017280599999999757, 0.00017313899999999924, 0.0001746249999999977, 0.00017462500000000117, 0.0001734720000000009, 0.0001736110000000006, 0.0001743330000000022, 0.0001735139999999996, 0.00017329200000000197, 0.0001744720000000019, 0.00017381899999999867, 0.00017326399999999936, 0.00017312499999999967, 0.00017347300000000038, 0.0001729720000000004, 0.00017329099999999903, 0.00017461100000000507]</msg>
<status status="PASS" starttime="20201030 11:51:47.264" endtime="20201030 11:51:47.272"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.259" endtime="20201030 11:51:47.273"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.277" endtime="20201030 11:51:47.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.275" endtime="20201030 11:51:47.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.274" endtime="20201030 11:51:47.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.902" endtime="20201030 11:51:47.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.902" endtime="20201030 11:51:47.297"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.306" endtime="20201030 11:51:47.329"></status>
</kw>
<msg timestamp="20201030 11:51:47.330" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.305" endtime="20201030 11:51:47.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.332" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.331" endtime="20201030 11:51:47.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.333" endtime="20201030 11:51:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.302" endtime="20201030 11:51:47.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.300" endtime="20201030 11:51:47.336"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.343" endtime="20201030 11:51:47.630"></status>
</kw>
<msg timestamp="20201030 11:51:47.633" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.341" endtime="20201030 11:51:47.633"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.641" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022424806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022601097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.634" endtime="20201030 11:51:47.642"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.642" endtime="20201030 11:51:47.644"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.338" endtime="20201030 11:51:47.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.337" endtime="20201030 11:51:47.645"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.649" level="INFO">${RESULT} = [{'diff': 0.00017629100000000203}, {'diff': 0.0001761249999999992}, {'diff': 0.00017509699999999906}, {'diff': 0.00017645800000000086}, {'diff': 0.0001759729999999994}, {'diff': 0.00017595899999999984...</msg>
<status status="PASS" starttime="20201030 11:51:47.646" endtime="20201030 11:51:47.649"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.653" level="INFO">${ACCURACY} = {'diff': [0.00017629100000000203, 0.0001761249999999992, 0.00017509699999999906, 0.00017645800000000086, 0.0001759729999999994, 0.00017595899999999984, 0.0001753050000000006, 0.00017661100000000013, 0...</msg>
<status status="PASS" starttime="20201030 11:51:47.650" endtime="20201030 11:51:47.654"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.658" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.657" endtime="20201030 11:51:47.658"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.660" level="INFO">VALUE: [0.00017629100000000203, 0.0001761249999999992, 0.00017509699999999906, 0.00017645800000000086, 0.0001759729999999994, 0.00017595899999999984, 0.0001753050000000006, 0.00017661100000000013, 0.0001764579999999974, 0.00017493100000000317, 0.0001751249999999982, 0.00017544499999999977, 0.0001754440000000003, 0.00017495799999999936, 0.00017545799999999986, 0.0001761249999999992, 0.00017579199999999753, 0.00017559699999999956, 0.0001754440000000003, 0.0001752920000000005, 0.00017545799999999986, 0.0001749590000000023, 0.00017647200000000043, 0.00017647200000000043, 0.0001764579999999974, 0.00017584800000000275, 0.00017632000000000064, 0.0001752920000000005, 0.00017645800000000086, 0.0001758050000000011, 0.00017606900000000092, 0.0001764440000000013, 0.0001761249999999992, 0.0001766249999999997, 0.00017529100000000103, 0.0001757769999999985, 0.00017491700000000013, 0.00017513900000000124, 0.00017595800000000036, 0.00017595899999999984, 0.00017645900000000034, 0.00017659700000000056, 0.00017595800000000036, 0.00017645800000000086, 0.0001756249999999987, 0.00017594500000000027, 0.00017495899999999884, 0.00017644399999999782, 0.000175583, 0.00017611099999999963]</msg>
<status status="PASS" starttime="20201030 11:51:47.659" endtime="20201030 11:51:47.661"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.654" endtime="20201030 11:51:47.662"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.666" endtime="20201030 11:51:47.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.664" endtime="20201030 11:51:47.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.663" endtime="20201030 11:51:47.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.298" endtime="20201030 11:51:47.686"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.298" endtime="20201030 11:51:47.686"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.696" endtime="20201030 11:51:47.720"></status>
</kw>
<msg timestamp="20201030 11:51:47.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.694" endtime="20201030 11:51:47.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.721" endtime="20201030 11:51:47.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.724" endtime="20201030 11:51:47.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.691" endtime="20201030 11:51:47.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.689" endtime="20201030 11:51:47.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.734" endtime="20201030 11:51:48.020"></status>
</kw>
<msg timestamp="20201030 11:51:48.023" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023850403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.732" endtime="20201030 11:51:48.024"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023671708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023850403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.024" endtime="20201030 11:51:48.032"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.033" endtime="20201030 11:51:48.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.729" endtime="20201030 11:51:48.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.727" endtime="20201030 11:51:48.036"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.040" level="INFO">${RESULT} = [{'diff': 0.00017869499999999955}, {'diff': 0.00017758299999999852}, {'diff': 0.0001783059999999996}, {'diff': 0.00017702799999999921}, {'diff': 0.0001781250000000012}, {'diff': 0.0001769860000000005}...</msg>
<status status="PASS" starttime="20201030 11:51:48.036" endtime="20201030 11:51:48.040"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.044" level="INFO">${ACCURACY} = {'diff': [0.00017869499999999955, 0.00017758299999999852, 0.0001783059999999996, 0.00017702799999999921, 0.0001781250000000012, 0.0001769860000000005, 0.00017862499999999823, 0.00017812499999999773, 0...</msg>
<status status="PASS" starttime="20201030 11:51:48.041" endtime="20201030 11:51:48.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.048" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.047" endtime="20201030 11:51:48.049"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.052" level="INFO">VALUE: [0.00017869499999999955, 0.00017758299999999852, 0.0001783059999999996, 0.00017702799999999921, 0.0001781250000000012, 0.0001769860000000005, 0.00017862499999999823, 0.00017812499999999773, 0.00017816600000000044, 0.00017795899999999837, 0.00017847200000000243, 0.0001771250000000002, 0.0001781250000000012, 0.00017775000000000082, 0.00017677800000000243, 0.00017729199999999903, 0.00017697199999999746, 0.0001785410000000008, 0.0001776669999999994, 0.00017752700000000024, 0.00017843099999999973, 0.00017795899999999837, 0.0001781250000000012, 0.00017751400000000014, 0.00017811099999999816, 0.0001772639999999999, 0.0001779030000000001, 0.00017745900000000134, 0.00017742999999999925, 0.0001781250000000012, 0.00017745800000000186, 0.00017777799999999996, 0.00017695899999999737, 0.00017823599999999828, 0.0001786389999999978, 0.0001774440000000023, 0.00017715299999999934, 0.0001780700000000024, 0.00017795899999999837, 0.00017745899999999787, 0.00017711100000000063, 0.00017848599999999853, 0.00017776400000000386, 0.0001784449999999993, 0.00017745899999999787, 0.00017847199999999896, 0.00017709700000000106, 0.0001771250000000002, 0.0001773340000000012, 0.00017713899999999977]</msg>
<status status="PASS" starttime="20201030 11:51:48.050" endtime="20201030 11:51:48.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.045" endtime="20201030 11:51:48.053"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.057" endtime="20201030 11:51:48.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.055" endtime="20201030 11:51:48.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.054" endtime="20201030 11:51:48.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.687" endtime="20201030 11:51:48.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.687" endtime="20201030 11:51:48.078"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.087" endtime="20201030 11:51:48.111"></status>
</kw>
<msg timestamp="20201030 11:51:48.111" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.085" endtime="20201030 11:51:48.111"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.114" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.112" endtime="20201030 11:51:48.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.115" endtime="20201030 11:51:48.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.082" endtime="20201030 11:51:48.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.080" endtime="20201030 11:51:48.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.124" endtime="20201030 11:51:48.410"></status>
</kw>
<msg timestamp="20201030 11:51:48.413" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.123" endtime="20201030 11:51:48.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022492792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022672583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.414" endtime="20201030 11:51:48.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.423" endtime="20201030 11:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.120" endtime="20201030 11:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.118" endtime="20201030 11:51:48.426"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.429" level="INFO">${RESULT} = [{'diff': 0.0001797909999999986}, {'diff': 0.00017968100000000098}, {'diff': 0.0001788060000000001}, {'diff': 0.00018012499999999973}, {'diff': 0.00017895900000000284}, {'diff': 0.00017879200000000053...</msg>
<status status="PASS" starttime="20201030 11:51:48.426" endtime="20201030 11:51:48.430"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.435" level="INFO">${ACCURACY} = {'diff': [0.0001797909999999986, 0.00017968100000000098, 0.0001788060000000001, 0.00018012499999999973, 0.00017895900000000284, 0.00017879200000000053, 0.00017980500000000163, 0.00017979199999999806, ...</msg>
<status status="PASS" starttime="20201030 11:51:48.430" endtime="20201030 11:51:48.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.439" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.438" endtime="20201030 11:51:48.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.442" level="INFO">VALUE: [0.0001797909999999986, 0.00017968100000000098, 0.0001788060000000001, 0.00018012499999999973, 0.00017895900000000284, 0.00017879200000000053, 0.00017980500000000163, 0.00017979199999999806, 0.00017994399999999786, 0.00018009800000000006, 0.00017879200000000053, 0.00018013900000000277, 0.00017876399999999792, 0.00017879199999999706, 0.0001804719999999975, 0.00018012499999999973, 0.0001789579999999999, 0.00017997200000000046, 0.00017993000000000176, 0.00018011100000000016, 0.0001789449999999998, 0.00018058399999999752, 0.00017962499999999923, 0.00017962499999999923, 0.00017929100000000156, 0.0001788060000000001, 0.00018029199999999856, 0.00017938899999999855, 0.00017991599999999872, 0.00018012499999999973, 0.00017947199999999996, 0.00017994399999999786, 0.00017988899999999905, 0.00018062500000000023, 0.00017902799999999774, 0.00017879100000000106, 0.00018029199999999856, 0.0001788060000000001, 0.00017977800000000196, 0.00018038800000000008, 0.0001802909999999991, 0.00017961099999999966, 0.00017979200000000153, 0.00017929199999999756, 0.00018029200000000203, 0.00017979200000000153, 0.0001802909999999991, 0.00017923599999999928, 0.0001797779999999985, 0.00017945899999999987]</msg>
<status status="PASS" starttime="20201030 11:51:48.440" endtime="20201030 11:51:48.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.436" endtime="20201030 11:51:48.443"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.447" endtime="20201030 11:51:48.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.445" endtime="20201030 11:51:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.444" endtime="20201030 11:51:48.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.079" endtime="20201030 11:51:48.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.078" endtime="20201030 11:51:48.468"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.477" endtime="20201030 11:51:48.500"></status>
</kw>
<msg timestamp="20201030 11:51:48.501" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.475" endtime="20201030 11:51:48.501"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.503" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.502" endtime="20201030 11:51:48.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.504" endtime="20201030 11:51:48.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.473" endtime="20201030 11:51:48.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.470" endtime="20201030 11:51:48.507"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.514" endtime="20201030 11:51:48.803"></status>
</kw>
<msg timestamp="20201030 11:51:48.806" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.512" endtime="20201030 11:51:48.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022667528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022849764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.808" endtime="20201030 11:51:48.815"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.816" endtime="20201030 11:51:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.509" endtime="20201030 11:51:48.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.507" endtime="20201030 11:51:48.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.823" level="INFO">${RESULT} = [{'diff': 0.00018223600000000229}, {'diff': 0.0001814589999999984}, {'diff': 0.00018095799999999843}, {'diff': 0.00018227699999999805}, {'diff': 0.00018177799999999703}, {'diff': 0.0001807919999999990...</msg>
<status status="PASS" starttime="20201030 11:51:48.819" endtime="20201030 11:51:48.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.827" level="INFO">${ACCURACY} = {'diff': [0.00018223600000000229, 0.0001814589999999984, 0.00018095799999999843, 0.00018227699999999805, 0.00018177799999999703, 0.00018079199999999906, 0.00018234699999999937, 0.0001809589999999979, ...</msg>
<status status="PASS" starttime="20201030 11:51:48.824" endtime="20201030 11:51:48.827"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.831" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.830" endtime="20201030 11:51:48.832"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.834" level="INFO">VALUE: [0.00018223600000000229, 0.0001814589999999984, 0.00018095799999999843, 0.00018227699999999805, 0.00018177799999999703, 0.00018079199999999906, 0.00018234699999999937, 0.0001809589999999979, 0.00018162499999999776, 0.00018080499999999916, 0.00018132000000000217, 0.0001815130000000012, 0.0001817780000000005, 0.00018180500000000016, 0.00018095799999999843, 0.0001817780000000005, 0.00018155600000000285, 0.00018144499999999883, 0.00018162499999999776, 0.0001824589999999994, 0.000181971999999999, 0.00018112500000000073, 0.00018090299999999962, 0.00018202800000000074, 0.00018227799999999753, 0.00018148600000000153, 0.00018145799999999893, 0.0001817919999999966, 0.00018258300000000005, 0.00018080599999999863, 0.00018262499999999876, 0.00018245799999999993, 0.00018198600000000204, 0.00018112500000000073, 0.00018172199999999875, 0.0001814589999999984, 0.00018111199999999716, 0.00018112500000000073, 0.00018212500000000173, 0.00018162499999999776, 0.00018261100000000266, 0.00018261100000000266, 0.0001824719999999995, 0.00018084700000000134, 0.00018248599999999907, 0.00018144499999999536, 0.00018179200000000006, 0.00018130499999999966, 0.00018262499999999876, 0.0001822910000000011]</msg>
<status status="PASS" starttime="20201030 11:51:48.832" endtime="20201030 11:51:48.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.828" endtime="20201030 11:51:48.835"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.839" endtime="20201030 11:51:48.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.838" endtime="20201030 11:51:48.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.836" endtime="20201030 11:51:48.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.469" endtime="20201030 11:51:48.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.468" endtime="20201030 11:51:48.860"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.869" endtime="20201030 11:51:48.894"></status>
</kw>
<msg timestamp="20201030 11:51:48.894" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.867" endtime="20201030 11:51:48.894"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.897" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.895" endtime="20201030 11:51:48.897"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.898" endtime="20201030 11:51:48.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.865" endtime="20201030 11:51:48.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.862" endtime="20201030 11:51:48.900"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.907" endtime="20201030 11:51:49.193"></status>
</kw>
<msg timestamp="20201030 11:51:49.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023393111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.905" endtime="20201030 11:51:49.196"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023393111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023575972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.197" endtime="20201030 11:51:49.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.206" endtime="20201030 11:51:49.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.903" endtime="20201030 11:51:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.901" endtime="20201030 11:51:49.208"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.212" level="INFO">${RESULT} = [{'diff': 0.00018286099999999944}, {'diff': 0.0001834309999999978}, {'diff': 0.00018379099999999912}, {'diff': 0.00018312499999999926}, {'diff': 0.0001842919999999991}, {'diff': 0.00018458399999999806...</msg>
<status status="PASS" starttime="20201030 11:51:49.209" endtime="20201030 11:51:49.213"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.216" level="INFO">${ACCURACY} = {'diff': [0.00018286099999999944, 0.0001834309999999978, 0.00018379099999999912, 0.00018312499999999926, 0.0001842919999999991, 0.00018458399999999806, 0.00018330500000000166, 0.00018362500000000323, ...</msg>
<status status="PASS" starttime="20201030 11:51:49.213" endtime="20201030 11:51:49.217"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.221" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.220" endtime="20201030 11:51:49.221"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.224" level="INFO">VALUE: [0.00018286099999999944, 0.0001834309999999978, 0.00018379099999999912, 0.00018312499999999926, 0.0001842919999999991, 0.00018458399999999806, 0.00018330500000000166, 0.00018362500000000323, 0.00018312499999999926, 0.00018362499999999976, 0.00018377799999999903, 0.0001828200000000002, 0.00018329200000000156, 0.0001831109999999997, 0.0001836110000000002, 0.00018395800000000143, 0.0001827780000000015, 0.00018366600000000247, 0.00018286099999999944, 0.00018295800000000043, 0.00018295799999999696, 0.00018330600000000113, 0.00018345800000000093, 0.0001837919999999986, 0.00018447199999999803, 0.0001828049999999977, 0.0001837919999999986, 0.00018312500000000273, 0.00018422200000000125, 0.0001834590000000004, 0.00018381900000000173, 0.00018463900000000033, 0.00018312500000000273, 0.0001836110000000002, 0.00018413899999999983, 0.0001842919999999991, 0.0001834439999999979, 0.00018395799999999796, 0.00018298599999999957, 0.00018280600000000063, 0.00018381899999999826, 0.00018398600000000404, 0.00018298600000000304, 0.00018329200000000156, 0.00018412500000000026, 0.00018362499999999976, 0.0001834309999999978, 0.00018298600000000304, 0.0001843330000000018, 0.00018358300000000105]</msg>
<status status="PASS" starttime="20201030 11:51:49.222" endtime="20201030 11:51:49.225"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.217" endtime="20201030 11:51:49.226"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.230" endtime="20201030 11:51:49.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.228" endtime="20201030 11:51:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.227" endtime="20201030 11:51:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.861" endtime="20201030 11:51:49.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.860" endtime="20201030 11:51:49.250"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.259" endtime="20201030 11:51:49.284"></status>
</kw>
<msg timestamp="20201030 11:51:49.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.258" endtime="20201030 11:51:49.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.286" endtime="20201030 11:51:49.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.288" endtime="20201030 11:51:49.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.255" endtime="20201030 11:51:49.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.253" endtime="20201030 11:51:49.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.298" endtime="20201030 11:51:49.584"></status>
</kw>
<msg timestamp="20201030 11:51:49.587" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.296" endtime="20201030 11:51:49.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022790208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022976083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.588" endtime="20201030 11:51:49.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.596" endtime="20201030 11:51:49.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.293" endtime="20201030 11:51:49.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.291" endtime="20201030 11:51:49.599"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.603" level="INFO">${RESULT} = [{'diff': 0.000185875000000002}, {'diff': 0.00018524999999999792}, {'diff': 0.00018512500000000126}, {'diff': 0.0001857920000000006}, {'diff': 0.00018645899999999993}, {'diff': 0.00018594399999999692}...</msg>
<status status="PASS" starttime="20201030 11:51:49.600" endtime="20201030 11:51:49.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.608" level="INFO">${ACCURACY} = {'diff': [0.000185875000000002, 0.00018524999999999792, 0.00018512500000000126, 0.0001857920000000006, 0.00018645899999999993, 0.00018594399999999692, 0.00018540300000000065, 0.0001856249999999983, 0....</msg>
<status status="PASS" starttime="20201030 11:51:49.604" endtime="20201030 11:51:49.608"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.613" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.612" endtime="20201030 11:51:49.613"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.615" level="INFO">VALUE: [0.000185875000000002, 0.00018524999999999792, 0.00018512500000000126, 0.0001857920000000006, 0.00018645899999999993, 0.00018594399999999692, 0.00018540300000000065, 0.0001856249999999983, 0.0001847919999999996, 0.00018525000000000139, 0.0001866249999999993, 0.00018498600000000157, 0.00018545799999999946, 0.00018512500000000126, 0.0001861249999999988, 0.00018611099999999922, 0.00018612500000000226, 0.00018530599999999967, 0.00018595799999999996, 0.00018544499999999936, 0.00018545899999999893, 0.00018576400000000146, 0.00018629100000000162, 0.00018513900000000083, 0.00018590299999999768, 0.00018581999999999974, 0.0001864729999999995, 0.0001854859999999986, 0.00018479100000000012, 0.00018497199999999853, 0.0001859859999999991, 0.0001861249999999988, 0.0001863750000000025, 0.00018513899999999736, 0.00018613899999999836, 0.00018562500000000176, 0.000184972999999998, 0.00018479200000000306, 0.0001866249999999993, 0.00018509699999999865, 0.00018595799999999996, 0.00018480599999999917, 0.00018645899999999993, 0.00018495800000000243, 0.00018477700000000402, 0.0001857079999999997, 0.00018547199999999903, 0.00018479200000000306, 0.00018611099999999575, 0.00018668100000000104]</msg>
<status status="PASS" starttime="20201030 11:51:49.614" endtime="20201030 11:51:49.616"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.609" endtime="20201030 11:51:49.617"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.620" endtime="20201030 11:51:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.619" endtime="20201030 11:51:49.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.618" endtime="20201030 11:51:49.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.251" endtime="20201030 11:51:49.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.251" endtime="20201030 11:51:49.641"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.651" endtime="20201030 11:51:49.675"></status>
</kw>
<msg timestamp="20201030 11:51:49.675" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.649" endtime="20201030 11:51:49.675"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.676" endtime="20201030 11:51:49.678"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.679" endtime="20201030 11:51:49.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.646" endtime="20201030 11:51:49.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.644" endtime="20201030 11:51:49.681"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.688" endtime="20201030 11:51:49.975"></status>
</kw>
<msg timestamp="20201030 11:51:49.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023414333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.687" endtime="20201030 11:51:49.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023414333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023601778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.979" endtime="20201030 11:51:49.987"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.988" endtime="20201030 11:51:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.684" endtime="20201030 11:51:49.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.682" endtime="20201030 11:51:49.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.995" level="INFO">${RESULT} = [{'diff': 0.00018744500000000136}, {'diff': 0.00018724999999999992}, {'diff': 0.00018693000000000182}, {'diff': 0.00018847199999999856}, {'diff': 0.00018861099999999825}, {'diff': 0.000187638999999999...</msg>
<status status="PASS" starttime="20201030 11:51:49.991" endtime="20201030 11:51:49.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.999" level="INFO">${ACCURACY} = {'diff': [0.00018744500000000136, 0.00018724999999999992, 0.00018693000000000182, 0.00018847199999999856, 0.00018861099999999825, 0.00018763899999999986, 0.00018811100000000122, 0.0001879860000000011,...</msg>
<status status="PASS" starttime="20201030 11:51:49.996" endtime="20201030 11:51:49.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.004" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.002" endtime="20201030 11:51:50.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.006" level="INFO">VALUE: [0.00018744500000000136, 0.00018724999999999992, 0.00018693000000000182, 0.00018847199999999856, 0.00018861099999999825, 0.00018763899999999986, 0.00018811100000000122, 0.0001879860000000011, 0.00018779099999999965, 0.00018779199999999913, 0.000188667, 0.0001871249999999998, 0.00018845899999999846, 0.00018813900000000036, 0.00018783300000000183, 0.00018847200000000203, 0.00018741699999999875, 0.0001872920000000021, 0.00018779099999999965, 0.0001879440000000024, 0.00018713899999999936, 0.0001881250000000008, 0.00018813900000000036, 0.00018863799999999792, 0.00018797199999999806, 0.00018765299999999943, 0.00018673599999999985, 0.0001877920000000026, 0.0001884449999999989, 0.00018861099999999825, 0.00018761100000000072, 0.00018695800000000096, 0.0001868059999999977, 0.0001872920000000021, 0.00018697199999999706, 0.00018777700000000008, 0.00018697200000000053, 0.0001881389999999969, 0.00018851400000000074, 0.00018738899999999614, 0.0001886389999999974, 0.00018674999999999942, 0.00018818100000000254, 0.0001887080000000027, 0.0001881110000000047, 0.0001869860000000001, 0.00018779099999999965, 0.00018779199999999913, 0.00018676399999999899, 0.00018727799999999906]</msg>
<status status="PASS" starttime="20201030 11:51:50.005" endtime="20201030 11:51:50.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.000" endtime="20201030 11:51:50.007"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.011" endtime="20201030 11:51:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.010" endtime="20201030 11:51:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.008" endtime="20201030 11:51:50.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.642" endtime="20201030 11:51:50.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.641" endtime="20201030 11:51:50.032"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.041" endtime="20201030 11:51:50.065"></status>
</kw>
<msg timestamp="20201030 11:51:50.066" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.039" endtime="20201030 11:51:50.066"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.068" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.067" endtime="20201030 11:51:50.069"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.069" endtime="20201030 11:51:50.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.037" endtime="20201030 11:51:50.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.035" endtime="20201030 11:51:50.072"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.079" endtime="20201030 11:51:50.364"></status>
</kw>
<msg timestamp="20201030 11:51:50.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023515028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.077" endtime="20201030 11:51:50.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023515028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023704972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.368" endtime="20201030 11:51:50.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.376" endtime="20201030 11:51:50.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.075" endtime="20201030 11:51:50.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.073" endtime="20201030 11:51:50.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.383" level="INFO">${RESULT} = [{'diff': 0.00018994400000000092}, {'diff': 0.00018879200000000013}, {'diff': 0.0001892219999999993}, {'diff': 0.00018945900000000293}, {'diff': 0.00018938800000000214}, {'diff': 0.000190667000000002}...</msg>
<status status="PASS" starttime="20201030 11:51:50.380" endtime="20201030 11:51:50.384"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.387" level="INFO">${ACCURACY} = {'diff': [0.00018994400000000092, 0.00018879200000000013, 0.0001892219999999993, 0.00018945900000000293, 0.00018938800000000214, 0.000190667000000002, 0.00019026399999999902, 0.00019047200000000056, 0...</msg>
<status status="PASS" starttime="20201030 11:51:50.384" endtime="20201030 11:51:50.388"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.392" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.391" endtime="20201030 11:51:50.392"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.395" level="INFO">VALUE: [0.00018994400000000092, 0.00018879200000000013, 0.0001892219999999993, 0.00018945900000000293, 0.00018938800000000214, 0.000190667000000002, 0.00019026399999999902, 0.00019047200000000056, 0.0001903060000000012, 0.00018919400000000017, 0.000189458, 0.00019012499999999932, 0.00018979200000000113, 0.00019044499999999742, 0.00019029200000000163, 0.00019058299999999764, 0.00019061100000000025, 0.0001899999999999992, 0.0001899450000000004, 0.00018962499999999882, 0.0001904450000000009, 0.00018912499999999832, 0.00018947199999999956, 0.00018929200000000063, 0.00018962499999999882, 0.00019061199999999973, 0.00018983300000000036, 0.00018879099999999718, 0.00018876399999999752, 0.00018897199999999906, 0.00018995899999999996, 0.000189458, 0.00018924999999999845, 0.00019066699999999853, 0.00018879200000000013, 0.00018929200000000063, 0.0001906120000000032, 0.00018984699999999993, 0.00018897199999999906, 0.00019045800000000446, 0.00018927800000000106, 0.00018894500000000286, 0.00018893000000000382, 0.0001894440000000039, 0.00018877800000000056, 0.00019027800000000206, 0.00019048700000000307, 0.00019012499999999932, 0.00018952799999999437, 0.00018877800000000056]</msg>
<status status="PASS" starttime="20201030 11:51:50.393" endtime="20201030 11:51:50.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.388" endtime="20201030 11:51:50.397"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.401" endtime="20201030 11:51:50.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.399" endtime="20201030 11:51:50.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.398" endtime="20201030 11:51:50.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.033" endtime="20201030 11:51:50.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.032" endtime="20201030 11:51:50.421"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.430" endtime="20201030 11:51:50.455"></status>
</kw>
<msg timestamp="20201030 11:51:50.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.429" endtime="20201030 11:51:50.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.456" endtime="20201030 11:51:50.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.459" endtime="20201030 11:51:50.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.426" endtime="20201030 11:51:50.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.424" endtime="20201030 11:51:50.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.468" endtime="20201030 11:51:50.753"></status>
</kw>
<msg timestamp="20201030 11:51:50.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.467" endtime="20201030 11:51:50.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022729597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022921236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.758" endtime="20201030 11:51:50.765"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.766" endtime="20201030 11:51:50.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.464" endtime="20201030 11:51:50.768"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.462" endtime="20201030 11:51:50.769"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.773" level="INFO">${RESULT} = [{'diff': 0.0001916390000000004}, {'diff': 0.00019162500000000082}, {'diff': 0.0001908060000000017}, {'diff': 0.0001920139999999973}, {'diff': 0.00019177700000000061}, {'diff': 0.00019147200000000156}...</msg>
<status status="PASS" starttime="20201030 11:51:50.769" endtime="20201030 11:51:50.773"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.778" level="INFO">${ACCURACY} = {'diff': [0.0001916390000000004, 0.00019162500000000082, 0.0001908060000000017, 0.0001920139999999973, 0.00019177700000000061, 0.00019147200000000156, 0.00019079199999999866, 0.00019126300000000054, 0...</msg>
<status status="PASS" starttime="20201030 11:51:50.774" endtime="20201030 11:51:50.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.782" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.781" endtime="20201030 11:51:50.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.785" level="INFO">VALUE: [0.0001916390000000004, 0.00019162500000000082, 0.0001908060000000017, 0.0001920139999999973, 0.00019177700000000061, 0.00019147200000000156, 0.00019079199999999866, 0.00019126300000000054, 0.00019108400000000109, 0.00019212500000000132, 0.0001921390000000009, 0.00019229100000000068, 0.00019195799999999902, 0.00019077800000000256, 0.0001919450000000024, 0.00019262499999999835, 0.0001914719999999981, 0.00019159700000000168, 0.00019144499999999842, 0.00019262499999999835, 0.00019129100000000315, 0.00019129100000000315, 0.00019261099999999878, 0.0001913060000000022, 0.0001917780000000001, 0.00019095900000000096, 0.0001911389999999999, 0.00019144400000000242, 0.00019112500000000032, 0.00019180599999999923, 0.00019155600000000245, 0.00019079099999999918, 0.0001924030000000007, 0.00019161099999999778, 0.00019245799999999952, 0.00019147300000000103, 0.00019130499999999925, 0.00019081899999999832, 0.00019151400000000027, 0.00019193099999999935, 0.00019216600000000056, 0.00019126300000000054, 0.00019195799999999902, 0.0001924719999999991, 0.00019111100000000075, 0.00019112500000000032, 0.00019176399999999705, 0.00019162500000000082, 0.00019097200000000453, 0.00019197200000000553]</msg>
<status status="PASS" starttime="20201030 11:51:50.784" endtime="20201030 11:51:50.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.778" endtime="20201030 11:51:50.786"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.791" endtime="20201030 11:51:50.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.789" endtime="20201030 11:51:50.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.788" endtime="20201030 11:51:50.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.422" endtime="20201030 11:51:50.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.422" endtime="20201030 11:51:50.812"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.821" endtime="20201030 11:51:50.845"></status>
</kw>
<msg timestamp="20201030 11:51:50.845" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.819" endtime="20201030 11:51:50.846"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.848" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.846" endtime="20201030 11:51:50.848"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.849" endtime="20201030 11:51:50.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.816" endtime="20201030 11:51:50.851"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.814" endtime="20201030 11:51:50.852"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.858" endtime="20201030 11:51:51.145"></status>
</kw>
<msg timestamp="20201030 11:51:51.148" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.857" endtime="20201030 11:51:51.149"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.157" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022625625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022819764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.150" endtime="20201030 11:51:51.157"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.158" endtime="20201030 11:51:51.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.854" endtime="20201030 11:51:51.160"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.852" endtime="20201030 11:51:51.161"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.165" level="INFO">${RESULT} = [{'diff': 0.00019413899999999942}, {'diff': 0.0001933330000000004}, {'diff': 0.00019362499999999935}, {'diff': 0.00019445800000000152}, {'diff': 0.00019358300000000064}, {'diff': 0.0001937920000000016...</msg>
<status status="PASS" starttime="20201030 11:51:51.161" endtime="20201030 11:51:51.165"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.169" level="INFO">${ACCURACY} = {'diff': [0.00019413899999999942, 0.0001933330000000004, 0.00019362499999999935, 0.00019445800000000152, 0.00019358300000000064, 0.00019379200000000166, 0.00019279200000000066, 0.00019377799999999862,...</msg>
<status status="PASS" starttime="20201030 11:51:51.166" endtime="20201030 11:51:51.169"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.174" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.173" endtime="20201030 11:51:51.174"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.176" level="INFO">VALUE: [0.00019413899999999942, 0.0001933330000000004, 0.00019362499999999935, 0.00019445800000000152, 0.00019358300000000064, 0.00019379200000000166, 0.00019279200000000066, 0.00019377799999999862, 0.0001929589999999995, 0.00019390200000000274, 0.00019298599999999916, 0.00019295800000000002, 0.00019383299999999742, 0.00019295800000000002, 0.00019380500000000175, 0.00019427799999999912, 0.00019345800000000052, 0.0001929589999999995, 0.00019454199999999894, 0.00019380499999999828, 0.00019291599999999784, 0.00019330599999999726, 0.00019312500000000232, 0.00019444500000000142, 0.00019363800000000292, 0.00019363899999999892, 0.00019394400000000145, 0.00019444500000000142, 0.00019380600000000123, 0.0001942919999999987, 0.00019295800000000002, 0.0001935970000000002, 0.0001934720000000001, 0.0001932919999999977, 0.00019434700000000096, 0.00019445799999999805, 0.00019299999999999873, 0.0001928199999999998, 0.0001929589999999995, 0.00019349999999999923, 0.00019315199999999852, 0.00019345800000000052, 0.00019311100000000275, 0.00019380599999999776, 0.00019397300000000006, 0.0001932229999999993, 0.00019427699999999964, 0.0001927919999999972, 0.00019350000000000617, 0.0001942919999999987]</msg>
<status status="PASS" starttime="20201030 11:51:51.175" endtime="20201030 11:51:51.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.170" endtime="20201030 11:51:51.178"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.181" endtime="20201030 11:51:51.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.180" endtime="20201030 11:51:51.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.179" endtime="20201030 11:51:51.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.813" endtime="20201030 11:51:51.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.812" endtime="20201030 11:51:51.202"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.211" endtime="20201030 11:51:51.237"></status>
</kw>
<msg timestamp="20201030 11:51:51.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.210" endtime="20201030 11:51:51.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.238" endtime="20201030 11:51:51.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.241" endtime="20201030 11:51:51.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.207" endtime="20201030 11:51:51.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.205" endtime="20201030 11:51:51.244"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.250" endtime="20201030 11:51:51.538"></status>
</kw>
<msg timestamp="20201030 11:51:51.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.249" endtime="20201030 11:51:51.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023626403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023821514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.542" endtime="20201030 11:51:51.550"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.550" endtime="20201030 11:51:51.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.246" endtime="20201030 11:51:51.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.244" endtime="20201030 11:51:51.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.557" level="INFO">${RESULT} = [{'diff': 0.00019511099999999781}, {'diff': 0.00019512500000000085}, {'diff': 0.00019562499999999788}, {'diff': 0.00019561100000000178}, {'diff': 0.00019530499999999978}, {'diff': 0.000196111000000002...</msg>
<status status="PASS" starttime="20201030 11:51:51.554" endtime="20201030 11:51:51.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.561" level="INFO">${ACCURACY} = {'diff': [0.00019511099999999781, 0.00019512500000000085, 0.00019562499999999788, 0.00019561100000000178, 0.00019530499999999978, 0.00019611100000000228, 0.00019612499999999838, 0.0001949720000000016,...</msg>
<status status="PASS" starttime="20201030 11:51:51.558" endtime="20201030 11:51:51.562"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.566" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.565" endtime="20201030 11:51:51.566"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.569" level="INFO">VALUE: [0.00019511099999999781, 0.00019512500000000085, 0.00019562499999999788, 0.00019561100000000178, 0.00019530499999999978, 0.00019611100000000228, 0.00019612499999999838, 0.0001949720000000016, 0.00019597199999999912, 0.00019480499999999928, 0.00019663900000000192, 0.00019562500000000135, 0.0001949590000000015, 0.00019565299999999702, 0.00019511100000000128, 0.00019547199999999862, 0.00019545799999999905, 0.00019544499999999895, 0.00019512500000000085, 0.00019625000000000198, 0.00019663899999999845, 0.00019630600000000026, 0.0001947919999999992, 0.00019531899999999935, 0.00019563900000000092, 0.0001965690000000006, 0.0001952919999999997, 0.00019594499999999945, 0.00019597300000000206, 0.00019595799999999955, 0.00019630499999999731, 0.00019530599999999926, 0.0001947919999999992, 0.00019527700000000064, 0.00019627700000000164, 0.00019629100000000121, 0.00019530599999999926, 0.0001961669999999971, 0.00019577800000000062, 0.00019512499999999738, 0.0001964720000000031, 0.00019479099999999971, 0.00019562500000000482, 0.00019511100000000475, 0.00019545899999999505, 0.0001962219999999959, 0.00019613899999999795, 0.0001959720000000026, 0.0001956390000000044, 0.00019512500000000432]</msg>
<status status="PASS" starttime="20201030 11:51:51.567" endtime="20201030 11:51:51.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.562" endtime="20201030 11:51:51.571"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.575" endtime="20201030 11:51:51.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.573" endtime="20201030 11:51:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.572" endtime="20201030 11:51:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.203" endtime="20201030 11:51:51.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.203" endtime="20201030 11:51:51.595"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.604" endtime="20201030 11:51:51.629"></status>
</kw>
<msg timestamp="20201030 11:51:51.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.603" endtime="20201030 11:51:51.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.632" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.630" endtime="20201030 11:51:51.632"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.633" endtime="20201030 11:51:51.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.600" endtime="20201030 11:51:51.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.598" endtime="20201030 11:51:51.636"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.642" endtime="20201030 11:51:51.928"></status>
</kw>
<msg timestamp="20201030 11:51:51.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.641" endtime="20201030 11:51:51.931"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.939" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022563208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022761639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.932" endtime="20201030 11:51:51.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.940" endtime="20201030 11:51:51.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.638" endtime="20201030 11:51:51.943"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.636" endtime="20201030 11:51:51.943"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.947" level="INFO">${RESULT} = [{'diff': 0.00019843099999999891}, {'diff': 0.00019863900000000045}, {'diff': 0.0001967920000000012}, {'diff': 0.00019779099999999925}, {'diff': 0.0001982920000000027}, {'diff': 0.0001983059999999988}...</msg>
<status status="PASS" starttime="20201030 11:51:51.944" endtime="20201030 11:51:51.947"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.952" level="INFO">${ACCURACY} = {'diff': [0.00019843099999999891, 0.00019863900000000045, 0.0001967920000000012, 0.00019779099999999925, 0.0001982920000000027, 0.0001983059999999988, 0.0001978059999999983, 0.00019745900000000052, 0....</msg>
<status status="PASS" starttime="20201030 11:51:51.948" endtime="20201030 11:51:51.953"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.957" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.956" endtime="20201030 11:51:51.957"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.959" level="INFO">VALUE: [0.00019843099999999891, 0.00019863900000000045, 0.0001967920000000012, 0.00019779099999999925, 0.0001982920000000027, 0.0001983059999999988, 0.0001978059999999983, 0.00019745900000000052, 0.000198443999999999, 0.00019762499999999988, 0.00019847200000000162, 0.00019795899999999755, 0.00019762499999999988, 0.00019730500000000178, 0.0001968339999999999, 0.00019695800000000055, 0.00019745800000000105, 0.0001979730000000006, 0.00019744400000000148, 0.00019829099999999975, 0.0001967920000000012, 0.00019859699999999827, 0.0001967920000000012, 0.0001986120000000008, 0.000198443999999999, 0.00019827799999999965, 0.00019693100000000088, 0.00019762499999999988, 0.00019847200000000162, 0.00019712500000000285, 0.00019695800000000055, 0.00019711099999999981, 0.00019787500000000013, 0.00019765199999999955, 0.00019729099999999875, 0.00019862500000000088, 0.00019762499999999988, 0.00019863900000000045, 0.00019795900000000102, 0.00019744400000000148, 0.00019680500000000128, 0.000198153000000003, 0.00019809700000000124, 0.00019845899999999805, 0.00019863900000000045, 0.00019712500000000632, 0.00019745799999999758, 0.00019695799999999708, 0.00019811100000000081, 0.00019798599999999722]</msg>
<status status="PASS" starttime="20201030 11:51:51.958" endtime="20201030 11:51:51.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.953" endtime="20201030 11:51:51.961"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.965" endtime="20201030 11:51:51.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.963" endtime="20201030 11:51:51.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.962" endtime="20201030 11:51:51.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.596" endtime="20201030 11:51:51.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.596" endtime="20201030 11:51:51.985"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.994" endtime="20201030 11:51:52.019"></status>
</kw>
<msg timestamp="20201030 11:51:52.020" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.993" endtime="20201030 11:51:52.020"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.021" endtime="20201030 11:51:52.022"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.023" endtime="20201030 11:51:52.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.990" endtime="20201030 11:51:52.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.988" endtime="20201030 11:51:52.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.033" endtime="20201030 11:51:52.322"></status>
</kw>
<msg timestamp="20201030 11:51:52.325" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.031" endtime="20201030 11:51:52.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022550472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022749778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.326" endtime="20201030 11:51:52.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.335" endtime="20201030 11:51:52.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.028" endtime="20201030 11:51:52.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.027" endtime="20201030 11:51:52.337"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.341" level="INFO">${RESULT} = [{'diff': 0.0001993059999999998}, {'diff': 0.00019988899999999823}, {'diff': 0.00019993000000000094}, {'diff': 0.0002001670000000011}, {'diff': 0.00019897200000000212}, {'diff': 0.00019993100000000041...</msg>
<status status="PASS" starttime="20201030 11:51:52.338" endtime="20201030 11:51:52.342"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.346" level="INFO">${ACCURACY} = {'diff': [0.0001993059999999998, 0.00019988899999999823, 0.00019993000000000094, 0.0002001670000000011, 0.00019897200000000212, 0.00019993100000000041, 0.00019947299999999862, 0.00020018100000000066, ...</msg>
<status status="PASS" starttime="20201030 11:51:52.342" endtime="20201030 11:51:52.346"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.350" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.349" endtime="20201030 11:51:52.351"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.353" level="INFO">VALUE: [0.0001993059999999998, 0.00019988899999999823, 0.00019993000000000094, 0.0002001670000000011, 0.00019897200000000212, 0.00019993100000000041, 0.00019947299999999862, 0.00020018100000000066, 0.00019995800000000008, 0.00019945799999999958, 0.00019912499999999791, 0.0001994730000000021, 0.0001995280000000009, 0.00019880499999999982, 0.00019913900000000095, 0.0001990410000000005, 0.00020027800000000165, 0.00019979100000000125, 0.00019963900000000145, 0.0002005830000000007, 0.00020029200000000122, 0.00019962499999999841, 0.00020016599999999815, 0.00020045800000000058, 0.00019962500000000188, 0.00020047200000000015, 0.00019929200000000022, 0.00019979200000000072, 0.00019880499999999982, 0.00020061099999999985, 0.0001989439999999995, 0.00019961099999999884, 0.00020061099999999985, 0.00019879100000000025, 0.00020012500000000238, 0.00019929200000000022, 0.0001998060000000003, 0.00019912500000000138, 0.00019944499999999948, 0.00020012499999999891, 0.00019961099999999884, 0.00019930600000000326, 0.00019931899999999642, 0.00019983300000000342, 0.00019961100000000231, 0.00020012499999999545, 0.00020012500000000238, 0.000199847000000003, 0.0001991800000000002, 0.00020061100000000331]</msg>
<status status="PASS" starttime="20201030 11:51:52.351" endtime="20201030 11:51:52.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.346" endtime="20201030 11:51:52.359"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.362" endtime="20201030 11:51:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.361" endtime="20201030 11:51:52.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.360" endtime="20201030 11:51:52.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.986" endtime="20201030 11:51:52.383"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.986" endtime="20201030 11:51:52.383"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.392" endtime="20201030 11:51:52.418"></status>
</kw>
<msg timestamp="20201030 11:51:52.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.390" endtime="20201030 11:51:52.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.420" endtime="20201030 11:51:52.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.423" endtime="20201030 11:51:52.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.388" endtime="20201030 11:51:52.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.386" endtime="20201030 11:51:52.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.432" endtime="20201030 11:51:52.718"></status>
</kw>
<msg timestamp="20201030 11:51:52.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.430" endtime="20201030 11:51:52.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.730" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023809986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024011111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.723" endtime="20201030 11:51:52.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.731" endtime="20201030 11:51:52.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.428" endtime="20201030 11:51:52.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.426" endtime="20201030 11:51:52.734"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.738" level="INFO">${RESULT} = [{'diff': 0.00020112499999999991}, {'diff': 0.00020213899999999702}, {'diff': 0.00020145900000000105}, {'diff': 0.0002026380000000015}, {'diff': 0.00020095800000000108}, {'diff': 0.0002014580000000015...</msg>
<status status="PASS" starttime="20201030 11:51:52.735" endtime="20201030 11:51:52.738"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.742" level="INFO">${ACCURACY} = {'diff': [0.00020112499999999991, 0.00020213899999999702, 0.00020145900000000105, 0.0002026380000000015, 0.00020095800000000108, 0.00020145800000000158, 0.00020112499999999991, 0.00020262499999999795,...</msg>
<status status="PASS" starttime="20201030 11:51:52.739" endtime="20201030 11:51:52.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.747" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.746" endtime="20201030 11:51:52.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.749" level="INFO">VALUE: [0.00020112499999999991, 0.00020213899999999702, 0.00020145900000000105, 0.0002026380000000015, 0.00020095800000000108, 0.00020145800000000158, 0.00020112499999999991, 0.00020262499999999795, 0.00020195899999999808, 0.00020080499999999835, 0.00020130599999999832, 0.00020212500000000092, 0.00020079200000000172, 0.00020229200000000322, 0.00020129099999999928, 0.00020247200000000215, 0.0002019440000000025, 0.00020179200000000272, 0.00020211200000000082, 0.0002013610000000006, 0.000201444000000002, 0.00020241699999999987, 0.00020245899999999858, 0.00020113900000000295, 0.00020261099999999838, 0.00020079199999999825, 0.00020179199999999925, 0.00020129199999999875, 0.00020129199999999875, 0.00020129099999999928, 0.0002014029999999993, 0.00020179200000000272, 0.00020095800000000108, 0.00020163899999999998, 0.00020147200000000115, 0.00020161099999999738, 0.00020106899999999817, 0.00020227800000000018, 0.00020079199999999825, 0.0002008749999999962, 0.00020080499999999835, 0.00020230599999999932, 0.00020227800000000018, 0.00020262500000000488, 0.0002026120000000048, 0.00020145799999999464, 0.00020198600000000122, 0.00020213899999999702, 0.00020251400000000086, 0.00020147200000000115]</msg>
<status status="PASS" starttime="20201030 11:51:52.748" endtime="20201030 11:51:52.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.743" endtime="20201030 11:51:52.751"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.755" endtime="20201030 11:51:52.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.754" endtime="20201030 11:51:52.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.752" endtime="20201030 11:51:52.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.384" endtime="20201030 11:51:52.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.384" endtime="20201030 11:51:52.776"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.785" endtime="20201030 11:51:52.810"></status>
</kw>
<msg timestamp="20201030 11:51:52.811" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.783" endtime="20201030 11:51:52.811"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.812" endtime="20201030 11:51:52.814"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.814" endtime="20201030 11:51:52.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.780" endtime="20201030 11:51:52.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.778" endtime="20201030 11:51:52.817"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.825" endtime="20201030 11:51:53.111"></status>
</kw>
<msg timestamp="20201030 11:51:53.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023189625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:52.823" endtime="20201030 11:51:53.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0229855, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023189625, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:53.115" endtime="20201030 11:51:53.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.124" endtime="20201030 11:51:53.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.820" endtime="20201030 11:51:53.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.818" endtime="20201030 11:51:53.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.130" level="INFO">${RESULT} = [{'diff': 0.00020412499999999945}, {'diff': 0.00020468000000000222}, {'diff': 0.00020413899999999902}, {'diff': 0.00020412499999999945}, {'diff': 0.00020362499999999895}, {'diff': 0.000203292000000000...</msg>
<status status="PASS" starttime="20201030 11:51:53.127" endtime="20201030 11:51:53.131"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.135" level="INFO">${ACCURACY} = {'diff': [0.00020412499999999945, 0.00020468000000000222, 0.00020413899999999902, 0.00020412499999999945, 0.00020362499999999895, 0.00020329200000000075, 0.00020299999999999832, 0.00020329100000000128...</msg>
<status status="PASS" starttime="20201030 11:51:53.131" endtime="20201030 11:51:53.136"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.140" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.139" endtime="20201030 11:51:53.141"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.143" level="INFO">VALUE: [0.00020412499999999945, 0.00020468000000000222, 0.00020413899999999902, 0.00020412499999999945, 0.00020362499999999895, 0.00020329200000000075, 0.00020299999999999832, 0.00020329100000000128, 0.00020431899999999795, 0.0002037909999999983, 0.0002029579999999996, 0.00020412499999999945, 0.00020395900000000008, 0.00020463899999999952, 0.000203929999999998, 0.0002044719999999972, 0.00020294499999999951, 0.00020463800000000004, 0.0002039580000000006, 0.00020397200000000018, 0.0002039580000000006, 0.00020461100000000038, 0.00020362500000000242, 0.0002029579999999996, 0.00020394400000000104, 0.0002044580000000011, 0.00020394499999999705, 0.00020340299999999784, 0.00020362499999999895, 0.0002042909999999988, 0.0002038200000000004, 0.00020380599999999735, 0.00020311099999999888, 0.00020280500000000035, 0.00020395799999999714, 0.00020329200000000075, 0.0002034580000000001, 0.00020462499999999995, 0.00020363900000000199, 0.00020430500000000185, 0.00020347200000000315, 0.00020379200000000125, 0.00020395899999999662, 0.0002039719999999967, 0.0002028049999999934, 0.00020283399999999896, 0.00020345800000000358, 0.00020430600000000132, 0.00020411199999999935, 0.00020329100000000128]</msg>
<status status="PASS" starttime="20201030 11:51:53.141" endtime="20201030 11:51:53.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.136" endtime="20201030 11:51:53.144"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.148" endtime="20201030 11:51:53.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.146" endtime="20201030 11:51:53.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.145" endtime="20201030 11:51:53.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.777" endtime="20201030 11:51:53.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.776" endtime="20201030 11:51:53.169"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.178" endtime="20201030 11:51:53.202"></status>
</kw>
<msg timestamp="20201030 11:51:53.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.176" endtime="20201030 11:51:53.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.204" endtime="20201030 11:51:53.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.207" endtime="20201030 11:51:53.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.173" endtime="20201030 11:51:53.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.171" endtime="20201030 11:51:53.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.216" endtime="20201030 11:51:53.503"></status>
</kw>
<msg timestamp="20201030 11:51:53.506" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:53.214" endtime="20201030 11:51:53.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0224945, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022699667, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:53.507" endtime="20201030 11:51:53.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.515" endtime="20201030 11:51:53.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.212" endtime="20201030 11:51:53.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.210" endtime="20201030 11:51:53.518"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.522" level="INFO">${RESULT} = [{'diff': 0.00020516699999999916}, {'diff': 0.00020665300000000109}, {'diff': 0.00020595900000000208}, {'diff': 0.00020500000000000032}, {'diff': 0.0002047909999999993}, {'diff': 0.0002062920000000002...</msg>
<status status="PASS" starttime="20201030 11:51:53.519" endtime="20201030 11:51:53.522"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.526" level="INFO">${ACCURACY} = {'diff': [0.00020516699999999916, 0.00020665300000000109, 0.00020595900000000208, 0.00020500000000000032, 0.0002047909999999993, 0.00020629200000000028, 0.00020561100000000138, 0.0002052909999999998, ...</msg>
<status status="PASS" starttime="20201030 11:51:53.523" endtime="20201030 11:51:53.526"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.531" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.530" endtime="20201030 11:51:53.531"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.533" level="INFO">VALUE: [0.00020516699999999916, 0.00020665300000000109, 0.00020595900000000208, 0.00020500000000000032, 0.0002047909999999993, 0.00020629200000000028, 0.00020561100000000138, 0.0002052909999999998, 0.0002063049999999969, 0.00020494400000000204, 0.00020559699999999834, 0.00020630599999999985, 0.00020548600000000125, 0.0002059580000000026, 0.00020545799999999864, 0.0002059169999999999, 0.00020648700000000172, 0.00020561100000000138, 0.00020562499999999748, 0.00020663900000000152, 0.00020629200000000028, 0.00020565300000000009, 0.00020647300000000215, 0.0002052909999999998, 0.00020662499999999848, 0.00020534800000000103, 0.00020512500000000045, 0.00020563900000000052, 0.0002057910000000003, 0.00020511100000000088, 0.00020630599999999985, 0.0002059580000000026, 0.00020504199999999903, 0.0002054580000000021, 0.00020544399999999907, 0.00020477800000000268, 0.00020545799999999864, 0.00020563900000000052, 0.0002059019999999974, 0.0002054719999999982, 0.00020645799999999617, 0.00020545899999999812, 0.00020495899999999762, 0.00020565300000000009, 0.0002047770000000032, 0.00020633400000000246, 0.0002049719999999977, 0.00020627800000000418, 0.00020630500000000385, 0.00020577699999999727]</msg>
<status status="PASS" starttime="20201030 11:51:53.532" endtime="20201030 11:51:53.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.527" endtime="20201030 11:51:53.535"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.538" endtime="20201030 11:51:53.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.537" endtime="20201030 11:51:53.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.536" endtime="20201030 11:51:53.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.170" endtime="20201030 11:51:53.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.169" endtime="20201030 11:51:53.559"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.568" endtime="20201030 11:51:53.595"></status>
</kw>
<msg timestamp="20201030 11:51:53.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.567" endtime="20201030 11:51:53.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.596" endtime="20201030 11:51:53.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.599" endtime="20201030 11:51:53.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.564" endtime="20201030 11:51:53.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.562" endtime="20201030 11:51:53.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.608" endtime="20201030 11:51:53.894"></status>
</kw>
<msg timestamp="20201030 11:51:53.897" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023907625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.607" endtime="20201030 11:51:53.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023907625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024115944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.898" endtime="20201030 11:51:53.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.907" endtime="20201030 11:51:53.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.604" endtime="20201030 11:51:53.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.602" endtime="20201030 11:51:53.909"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.914" level="INFO">${RESULT} = [{'diff': 0.00020831900000000195}, {'diff': 0.0002067910000000013}, {'diff': 0.00020812499999999998}, {'diff': 0.0002079720000000007}, {'diff': 0.0002082919999999988}, {'diff': 0.0002080699999999977},...</msg>
<status status="PASS" starttime="20201030 11:51:53.910" endtime="20201030 11:51:53.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.918" level="INFO">${ACCURACY} = {'diff': [0.00020831900000000195, 0.0002067910000000013, 0.00020812499999999998, 0.0002079720000000007, 0.0002082919999999988, 0.0002080699999999977, 0.0002075279999999985, 0.00020748599999999978, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:53.915" endtime="20201030 11:51:53.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.922" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.921" endtime="20201030 11:51:53.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.925" level="INFO">VALUE: [0.00020831900000000195, 0.0002067910000000013, 0.00020812499999999998, 0.0002079720000000007, 0.0002082919999999988, 0.0002080699999999977, 0.0002075279999999985, 0.00020748599999999978, 0.0002076109999999999, 0.00020679200000000078, 0.00020745900000000012, 0.0002083049999999989, 0.00020713899999999855, 0.00020811099999999694, 0.00020812499999999998, 0.00020813899999999955, 0.00020845800000000164, 0.00020762499999999948, 0.00020681999999999992, 0.0002086669999999992, 0.00020813800000000007, 0.00020862500000000048, 0.00020763899999999905, 0.00020862500000000048, 0.00020845799999999817, 0.0002081110000000004, 0.0002067910000000013, 0.00020726399999999867, 0.00020813899999999955, 0.00020763900000000252, 0.00020767999999999828, 0.0002078049999999984, 0.00020815299999999912, 0.00020695799999999667, 0.0002077919999999983, 0.00020847300000000069, 0.0002079720000000007, 0.0002079720000000007, 0.00020698599999999928, 0.0002084449999999946, 0.00020680600000000382, 0.0002081249999999965, 0.00020847199999999427, 0.00020705499999999766, 0.00020861099999999744, 0.00020811099999999694, 0.00020845800000000164, 0.000208624999999997, 0.0002075550000000051, 0.00020744500000000055]</msg>
<status status="PASS" starttime="20201030 11:51:53.924" endtime="20201030 11:51:53.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.919" endtime="20201030 11:51:53.927"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.931" endtime="20201030 11:51:53.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.929" endtime="20201030 11:51:53.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.928" endtime="20201030 11:51:53.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.560" endtime="20201030 11:51:53.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.560" endtime="20201030 11:51:53.952"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.961" endtime="20201030 11:51:53.985"></status>
</kw>
<msg timestamp="20201030 11:51:53.986" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.959" endtime="20201030 11:51:53.986"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.988" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.987" endtime="20201030 11:51:53.989"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.990" endtime="20201030 11:51:53.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.956" endtime="20201030 11:51:53.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.954" endtime="20201030 11:51:53.992"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.999" endtime="20201030 11:51:54.285"></status>
</kw>
<msg timestamp="20201030 11:51:54.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.997" endtime="20201030 11:51:54.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022410958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022619917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.289" endtime="20201030 11:51:54.296"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.297" endtime="20201030 11:51:54.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.995" endtime="20201030 11:51:54.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.993" endtime="20201030 11:51:54.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.304" level="INFO">${RESULT} = [{'diff': 0.00020895899999999815}, {'diff': 0.00021013900000000155}, {'diff': 0.00020963900000000105}, {'diff': 0.0002103059999999969}, {'diff': 0.0002098340000000025}, {'diff': 0.0002097920000000003}...</msg>
<status status="PASS" starttime="20201030 11:51:54.301" endtime="20201030 11:51:54.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.309" level="INFO">${ACCURACY} = {'diff': [0.00020895899999999815, 0.00021013900000000155, 0.00020963900000000105, 0.0002103059999999969, 0.0002098340000000025, 0.0002097920000000003, 0.00021044399999999713, 0.00021013899999999808, 0...</msg>
<status status="PASS" starttime="20201030 11:51:54.305" endtime="20201030 11:51:54.310"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.314" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.313" endtime="20201030 11:51:54.315"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.317" level="INFO">VALUE: [0.00020895899999999815, 0.00021013900000000155, 0.00020963900000000105, 0.0002103059999999969, 0.0002098340000000025, 0.0002097920000000003, 0.00021044399999999713, 0.00021013899999999808, 0.00021045800000000017, 0.00020980599999999988, 0.00021012500000000198, 0.00021027700000000177, 0.00020992999999999706, 0.0002102920000000008, 0.00020994499999999958, 0.00020977800000000074, 0.00020895799999999867, 0.00020929100000000034, 0.0002092919999999998, 0.00021030600000000038, 0.00020881899999999898, 0.00020945799999999917, 0.00020929100000000034, 0.00020927800000000024, 0.00021001299999999848, 0.00020912500000000098, 0.00021002799999999752, 0.00020940300000000037, 0.00020877799999999974, 0.00021048600000000278, 0.00020965200000000114, 0.0002087500000000006, 0.00020879099999999984, 0.00021061099999999944, 0.0002087919999999993, 0.000210624999999999, 0.00020895799999999867, 0.00020895799999999867, 0.000210624999999999, 0.00021011099999999894, 0.00020913800000000107, 0.00020977699999999433, 0.00020944400000000307, 0.00020995800000000314, 0.00021012500000000545, 0.0002101950000000033, 0.0002103050000000009, 0.0002093049999999999, 0.00021065299999999815, 0.00020981999999999945]</msg>
<status status="PASS" starttime="20201030 11:51:54.315" endtime="20201030 11:51:54.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.310" endtime="20201030 11:51:54.318"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.322" endtime="20201030 11:51:54.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.320" endtime="20201030 11:51:54.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.319" endtime="20201030 11:51:54.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.953" endtime="20201030 11:51:54.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.952" endtime="20201030 11:51:54.343"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.352" endtime="20201030 11:51:54.377"></status>
</kw>
<msg timestamp="20201030 11:51:54.378" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.350" endtime="20201030 11:51:54.378"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.381" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.379" endtime="20201030 11:51:54.381"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.382" endtime="20201030 11:51:54.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.348" endtime="20201030 11:51:54.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.345" endtime="20201030 11:51:54.385"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.393" endtime="20201030 11:51:54.681"></status>
</kw>
<msg timestamp="20201030 11:51:54.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.391" endtime="20201030 11:51:54.684"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022734875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022946361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.685" endtime="20201030 11:51:54.693"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.694" endtime="20201030 11:51:54.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.388" endtime="20201030 11:51:54.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.386" endtime="20201030 11:51:54.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.701" level="INFO">${RESULT} = [{'diff': 0.00021148599999999684}, {'diff': 0.00021141700000000194}, {'diff': 0.00021244500000000208}, {'diff': 0.000212625000000001}, {'diff': 0.00021213900000000008}, {'diff': 0.0002117920000000023}...</msg>
<status status="PASS" starttime="20201030 11:51:54.697" endtime="20201030 11:51:54.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.705" level="INFO">${ACCURACY} = {'diff': [0.00021148599999999684, 0.00021141700000000194, 0.00021244500000000208, 0.000212625000000001, 0.00021213900000000008, 0.0002117920000000023, 0.00021163899999999958, 0.000212625000000001, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:54.702" endtime="20201030 11:51:54.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.709" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.708" endtime="20201030 11:51:54.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.712" level="INFO">VALUE: [0.00021148599999999684, 0.00021141700000000194, 0.00021244500000000208, 0.000212625000000001, 0.00021213900000000008, 0.0002117920000000023, 0.00021163899999999958, 0.000212625000000001, 0.0002115700000000012, 0.00021261100000000144, 0.000212625000000001, 0.0002119579999999982, 0.00021127800000000224, 0.0002115419999999986, 0.00021112500000000298, 0.00021180499999999894, 0.00021179199999999884, 0.0002111249999999995, 0.000212625000000001, 0.00021175000000000013, 0.00021244399999999913, 0.00021113899999999908, 0.00021227799999999977, 0.0002112769999999993, 0.0002118610000000007, 0.00021077799999999827, 0.00021231999999999848, 0.00021112500000000298, 0.00021247200000000174, 0.0002124999999999974, 0.00021095800000000067, 0.00021195800000000167, 0.00021233299999999858, 0.00021250000000000088, 0.00021263900000000058, 0.00021124999999999963, 0.00021087499999999926, 0.00021247299999999775, 0.00021195899999999768, 0.0002124029999999999, 0.0002119449999999981, 0.00021252699999999708, 0.00021166599999999924, 0.00021184700000000112, 0.000211625, 0.0002118329999999946, 0.00021261100000000144, 0.00021211100000000094, 0.000211625, 0.00021194400000000557]</msg>
<status status="PASS" starttime="20201030 11:51:54.711" endtime="20201030 11:51:54.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.706" endtime="20201030 11:51:54.713"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.717" endtime="20201030 11:51:54.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.716" endtime="20201030 11:51:54.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.714" endtime="20201030 11:51:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.344" endtime="20201030 11:51:54.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.343" endtime="20201030 11:51:54.738"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.747" endtime="20201030 11:51:54.773"></status>
</kw>
<msg timestamp="20201030 11:51:54.774" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.746" endtime="20201030 11:51:54.774"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.776" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.775" endtime="20201030 11:51:54.777"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.777" endtime="20201030 11:51:54.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.743" endtime="20201030 11:51:54.780"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.741" endtime="20201030 11:51:54.780"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.787" endtime="20201030 11:51:55.073"></status>
</kw>
<msg timestamp="20201030 11:51:55.076" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.785" endtime="20201030 11:51:55.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023530056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023744556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.078" endtime="20201030 11:51:55.085"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.086" endtime="20201030 11:51:55.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.783" endtime="20201030 11:51:55.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.781" endtime="20201030 11:51:55.089"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.093" level="INFO">${RESULT} = [{'diff': 0.0002144999999999994}, {'diff': 0.0002131250000000015}, {'diff': 0.00021345800000000317}, {'diff': 0.00021394400000000063}, {'diff': 0.00021397199999999977}, {'diff': 0.0002141250000000025}...</msg>
<status status="PASS" starttime="20201030 11:51:55.090" endtime="20201030 11:51:55.093"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.097" level="INFO">${ACCURACY} = {'diff': [0.0002144999999999994, 0.0002131250000000015, 0.00021345800000000317, 0.00021394400000000063, 0.00021397199999999977, 0.0002141250000000025, 0.00021430599999999744, 0.00021462499999999954, 0...</msg>
<status status="PASS" starttime="20201030 11:51:55.094" endtime="20201030 11:51:55.097"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.102" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.101" endtime="20201030 11:51:55.102"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.105" level="INFO">VALUE: [0.0002144999999999994, 0.0002131250000000015, 0.00021345800000000317, 0.00021394400000000063, 0.00021397199999999977, 0.0002141250000000025, 0.00021430599999999744, 0.00021462499999999954, 0.00021444400000000113, 0.0002129579999999992, 0.00021462499999999954, 0.00021445900000000018, 0.0002129579999999992, 0.0002142779999999983, 0.0002131250000000015, 0.0002146389999999991, 0.0002145840000000003, 0.000213319, 0.00021308299999999933, 0.00021462499999999954, 0.00021461099999999997, 0.00021411199999999894, 0.0002134579999999997, 0.0002143619999999992, 0.0002137779999999978, 0.00021397299999999925, 0.0002139450000000001, 0.00021366700000000072, 0.00021279199999999984, 0.00021329200000000034, 0.00021309799999999837, 0.00021280499999999994, 0.00021279100000000037, 0.0002139580000000002, 0.00021383400000000302, 0.0002137779999999978, 0.000214625000000003, 0.00021280499999999647, 0.0002132920000000038, 0.00021347199999999927, 0.00021329199999999687, 0.000213625000000002, 0.00021362499999999507, 0.0002132779999999973, 0.000213625000000002, 0.00021463900000000258, 0.0002129579999999992, 0.0002141250000000025, 0.00021282000000000245, 0.00021277800000000374]</msg>
<status status="PASS" starttime="20201030 11:51:55.103" endtime="20201030 11:51:55.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.098" endtime="20201030 11:51:55.107"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.110" endtime="20201030 11:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.109" endtime="20201030 11:51:55.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.108" endtime="20201030 11:51:55.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.739" endtime="20201030 11:51:55.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.738" endtime="20201030 11:51:55.131"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.140" endtime="20201030 11:51:55.166"></status>
</kw>
<msg timestamp="20201030 11:51:55.166" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.139" endtime="20201030 11:51:55.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.169" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.167" endtime="20201030 11:51:55.169"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.170" endtime="20201030 11:51:55.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.136" endtime="20201030 11:51:55.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.134" endtime="20201030 11:51:55.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.179" endtime="20201030 11:51:55.466"></status>
</kw>
<msg timestamp="20201030 11:51:55.469" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023023389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023239861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.178" endtime="20201030 11:51:55.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.477" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023023389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023239861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.470" endtime="20201030 11:51:55.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.478" endtime="20201030 11:51:55.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.175" endtime="20201030 11:51:55.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.173" endtime="20201030 11:51:55.481"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.485" level="INFO">${RESULT} = [{'diff': 0.00021647200000000227}, {'diff': 0.0002155970000000014}, {'diff': 0.00021613899999999714}, {'diff': 0.00021562500000000054}, {'diff': 0.0002154719999999978}, {'diff': 0.00021662500000000154...</msg>
<status status="PASS" starttime="20201030 11:51:55.481" endtime="20201030 11:51:55.485"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.490" level="INFO">${ACCURACY} = {'diff': [0.00021647200000000227, 0.0002155970000000014, 0.00021613899999999714, 0.00021562500000000054, 0.0002154719999999978, 0.00021662500000000154, 0.00021562500000000054, 0.0002158199999999985, 0...</msg>
<status status="PASS" starttime="20201030 11:51:55.486" endtime="20201030 11:51:55.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.495" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.493" endtime="20201030 11:51:55.495"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.497" level="INFO">VALUE: [0.00021647200000000227, 0.0002155970000000014, 0.00021613899999999714, 0.00021562500000000054, 0.0002154719999999978, 0.00021662500000000154, 0.00021562500000000054, 0.0002158199999999985, 0.00021529200000000234, 0.00021495799999999773, 0.0002157779999999998, 0.00021579199999999937, 0.00021608399999999833, 0.0002152770000000033, 0.00021595799999999873, 0.00021579200000000284, 0.0002151389999999996, 0.00021647300000000175, 0.0002159580000000022, 0.0002157909999999999, 0.00021648599999999837, 0.0002154580000000017, 0.00021562499999999707, 0.0002151389999999996, 0.0002161390000000006, 0.0002159719999999983, 0.00021561100000000097, 0.00021498600000000034, 0.0002154580000000017, 0.0002158329999999986, 0.00021562500000000054, 0.00021545900000000118, 0.00021566599999999977, 0.00021512500000000004, 0.00021562500000000054, 0.00021629199999999987, 0.00021479199999999837, 0.00021595900000000168, 0.0002152909999999994, 0.0002166109999999985, 0.00021569399999999544, 0.0002160979999999979, 0.00021651400000000098, 0.0002164580000000027, 0.00021479199999999837, 0.00021630600000000638, 0.00021511100000000394, 0.00021581899999999904, 0.00021540199999999649, 0.00021662499999999807]</msg>
<status status="PASS" starttime="20201030 11:51:55.496" endtime="20201030 11:51:55.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.491" endtime="20201030 11:51:55.498"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.502" endtime="20201030 11:51:55.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.501" endtime="20201030 11:51:55.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.499" endtime="20201030 11:51:55.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.132" endtime="20201030 11:51:55.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.131" endtime="20201030 11:51:55.523"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.532" endtime="20201030 11:51:55.558"></status>
</kw>
<msg timestamp="20201030 11:51:55.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.530" endtime="20201030 11:51:55.558"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.561" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.559" endtime="20201030 11:51:55.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.562" endtime="20201030 11:51:55.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.528" endtime="20201030 11:51:55.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.526" endtime="20201030 11:51:55.565"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.571" endtime="20201030 11:51:55.861"></status>
</kw>
<msg timestamp="20201030 11:51:55.864" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.570" endtime="20201030 11:51:55.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.873" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022495083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.866" endtime="20201030 11:51:55.874"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.874" endtime="20201030 11:51:55.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.567" endtime="20201030 11:51:55.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.565" endtime="20201030 11:51:55.877"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.881" level="INFO">${RESULT} = [{'diff': 0.00021847300000000028}, {'diff': 0.00021680500000000047}, {'diff': 0.00021729099999999793}, {'diff': 0.00021745799999999676}, {'diff': 0.00021697299999999878}, {'diff': 0.000218472000000000...</msg>
<status status="PASS" starttime="20201030 11:51:55.878" endtime="20201030 11:51:55.882"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.886" level="INFO">${ACCURACY} = {'diff': [0.00021847300000000028, 0.00021680500000000047, 0.00021729099999999793, 0.00021745799999999676, 0.00021697299999999878, 0.0002184720000000008, 0.00021748599999999937, 0.00021700000000000191,...</msg>
<status status="PASS" starttime="20201030 11:51:55.883" endtime="20201030 11:51:55.886"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.890" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.889" endtime="20201030 11:51:55.891"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.893" level="INFO">VALUE: [0.00021847300000000028, 0.00021680500000000047, 0.00021729099999999793, 0.00021745799999999676, 0.00021697299999999878, 0.0002184720000000008, 0.00021748599999999937, 0.00021700000000000191, 0.0002178200000000005, 0.00021813899999999914, 0.00021776400000000223, 0.0002169300000000006, 0.00021776399999999876, 0.0002182919999999984, 0.00021763899999999864, 0.00021745800000000023, 0.00021818099999999785, 0.00021730600000000044, 0.00021694499999999964, 0.0002169589999999992, 0.000218111, 0.0002181390000000026, 0.00021680599999999994, 0.000217110999999999, 0.0002179170000000015, 0.00021748599999999937, 0.00021829099999999893, 0.00021863899999999964, 0.00021762499999999907, 0.0002169589999999992, 0.0002172499999999987, 0.00021815300000000218, 0.0002178200000000005, 0.00021720799999999998, 0.0002174719999999998, 0.0002179439999999977, 0.00021809700000000043, 0.00021715300000000118, 0.0002174729999999958, 0.00021863899999999964, 0.00021695799999999626, 0.00021829200000000187, 0.00021812499999999957, 0.00021779200000000137, 0.0002182910000000024, 0.0002173889999999984, 0.0002185690000000018, 0.00021862500000000007, 0.00021763799999999917, 0.0002172780000000013]</msg>
<status status="PASS" starttime="20201030 11:51:55.891" endtime="20201030 11:51:55.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.887" endtime="20201030 11:51:55.894"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.898" endtime="20201030 11:51:55.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.897" endtime="20201030 11:51:55.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.895" endtime="20201030 11:51:55.918"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.524" endtime="20201030 11:51:55.919"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.523" endtime="20201030 11:51:55.919"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.928" endtime="20201030 11:51:55.955"></status>
</kw>
<msg timestamp="20201030 11:51:55.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.926" endtime="20201030 11:51:55.955"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.958" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.956" endtime="20201030 11:51:55.958"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.959" endtime="20201030 11:51:55.960"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.924" endtime="20201030 11:51:55.961"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.921" endtime="20201030 11:51:55.961"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.968" endtime="20201030 11:51:56.253"></status>
</kw>
<msg timestamp="20201030 11:51:56.257" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.966" endtime="20201030 11:51:56.257"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023429361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023649514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.258" endtime="20201030 11:51:56.265"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.266" endtime="20201030 11:51:56.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.964" endtime="20201030 11:51:56.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.962" endtime="20201030 11:51:56.269"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.273" level="INFO">${RESULT} = [{'diff': 0.0002201530000000007}, {'diff': 0.00021930600000000244}, {'diff': 0.00021936099999999778}, {'diff': 0.0002189720000000013}, {'diff': 0.00021879099999999943}, {'diff': 0.00022047199999999934...</msg>
<status status="PASS" starttime="20201030 11:51:56.270" endtime="20201030 11:51:56.273"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.277" level="INFO">${ACCURACY} = {'diff': [0.0002201530000000007, 0.00021930600000000244, 0.00021936099999999778, 0.0002189720000000013, 0.00021879099999999943, 0.00022047199999999934, 0.0002199590000000022, 0.00022013800000000167, 0...</msg>
<status status="PASS" starttime="20201030 11:51:56.274" endtime="20201030 11:51:56.277"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.281" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.280" endtime="20201030 11:51:56.282"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.284" level="INFO">VALUE: [0.0002201530000000007, 0.00021930600000000244, 0.00021936099999999778, 0.0002189720000000013, 0.00021879099999999943, 0.00022047199999999934, 0.0002199590000000022, 0.00022013800000000167, 0.0002196249999999976, 0.0002196530000000002, 0.00021913900000000014, 0.00022013899999999767, 0.00021962500000000107, 0.00021963899999999717, 0.00022011099999999853, 0.00022026400000000126, 0.00021962500000000107, 0.00021931899999999907, 0.00022045800000000323, 0.00022063899999999817, 0.00021913900000000014, 0.00022045899999999924, 0.00021929099999999993, 0.00021913900000000014, 0.00021895800000000173, 0.0002187919999999989, 0.0002197919999999999, 0.00021927700000000036, 0.00021883400000000108, 0.00022012500000000157, 0.0002194590000000017, 0.00022031900000000007, 0.00021952800000000008, 0.00021994400000000316, 0.00022058400000000283, 0.00021994499999999917, 0.00021892999999999913, 0.0002187910000000029, 0.000219111000000001, 0.00021944499999999867, 0.00021997300000000525, 0.00021880500000000247, 0.00021912500000000057, 0.00021913900000000014, 0.00021913900000000014, 0.00021886100000000075, 0.00021912500000000057, 0.00021913900000000014, 0.0002197780000000038, 0.00021950000000000441]</msg>
<status status="PASS" starttime="20201030 11:51:56.283" endtime="20201030 11:51:56.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.278" endtime="20201030 11:51:56.286"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.290" endtime="20201030 11:51:56.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.288" endtime="20201030 11:51:56.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.287" endtime="20201030 11:51:56.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.920" endtime="20201030 11:51:56.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.919" endtime="20201030 11:51:56.311"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.320" endtime="20201030 11:51:56.346"></status>
</kw>
<msg timestamp="20201030 11:51:56.346" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.318" endtime="20201030 11:51:56.346"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.349" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.347" endtime="20201030 11:51:56.349"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.350" endtime="20201030 11:51:56.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.316" endtime="20201030 11:51:56.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.313" endtime="20201030 11:51:56.353"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.359" endtime="20201030 11:51:56.645"></status>
</kw>
<msg timestamp="20201030 11:51:56.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023168389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.358" endtime="20201030 11:51:56.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.657" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022946222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023168389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.649" endtime="20201030 11:51:56.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.658" endtime="20201030 11:51:56.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.355" endtime="20201030 11:51:56.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.353" endtime="20201030 11:51:56.660"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.664" level="INFO">${RESULT} = [{'diff': 0.00022216700000000228}, {'diff': 0.00022129099999999846}, {'diff': 0.00022219499999999795}, {'diff': 0.00022127800000000183}, {'diff': 0.0002209579999999968}, {'diff': 0.0002219720000000008...</msg>
<status status="PASS" starttime="20201030 11:51:56.661" endtime="20201030 11:51:56.665"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.670" level="INFO">${ACCURACY} = {'diff': [0.00022216700000000228, 0.00022129099999999846, 0.00022219499999999795, 0.00022127800000000183, 0.0002209579999999968, 0.00022197200000000084, 0.00022195899999999727, 0.0002216530000000022, ...</msg>
<status status="PASS" starttime="20201030 11:51:56.665" endtime="20201030 11:51:56.670"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.674" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.673" endtime="20201030 11:51:56.675"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.677" level="INFO">VALUE: [0.00022216700000000228, 0.00022129099999999846, 0.00022219499999999795, 0.00022127800000000183, 0.0002209579999999968, 0.00022197200000000084, 0.00022195899999999727, 0.0002216530000000022, 0.00022216700000000228, 0.0002224579999999983, 0.00022145900000000024, 0.00022245900000000124, 0.00022159700000000046, 0.00022127800000000183, 0.00022195900000000074, 0.00022211099999999706, 0.0002221250000000001, 0.00022147200000000034, 0.00022084799999999918, 0.000221805999999998, 0.00022263900000000017, 0.0002214440000000012, 0.00022161100000000003, 0.00022229199999999893, 0.0002207920000000009, 0.00022095899999999974, 0.00022225000000000023, 0.00022129199999999793, 0.00022263900000000017, 0.0002211530000000017, 0.0002208189999999971, 0.0002216249999999996, 0.00022097199999999984, 0.0002211249999999991, 0.00022181999999999757, 0.0002217769999999994, 0.00022163900000000264, 0.0002213059999999975, 0.00022094500000000017, 0.000220805999999997, 0.00022113900000000214, 0.00022162500000000307, 0.0002212780000000053, 0.00022229199999999893, 0.0002214859999999999, 0.00022088899999999495, 0.00022083399999999614, 0.0002219310000000016, 0.00022229199999999893, 0.00022212499999999663]</msg>
<status status="PASS" starttime="20201030 11:51:56.675" endtime="20201030 11:51:56.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.670" endtime="20201030 11:51:56.678"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.682" endtime="20201030 11:51:56.701"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.680" endtime="20201030 11:51:56.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.679" endtime="20201030 11:51:56.702"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.312" endtime="20201030 11:51:56.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.311" endtime="20201030 11:51:56.703"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.834" endtime="20201030 11:51:56.703"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:17.757" endtime="20201030 11:51:56.704" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:37.661" endtime="20201030 11:51:56.709"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.764" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:56.773" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:57.943" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:56.763" endtime="20201030 11:51:57.943"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.946" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:57.944" endtime="20201030 11:51:57.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.762" endtime="20201030 11:51:57.947"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.949" endtime="20201030 11:51:58.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.947" endtime="20201030 11:51:58.194"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.206" endtime="20201030 11:51:58.227"></status>
</kw>
<msg timestamp="20201030 11:51:58.228" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['vel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forups...</msg>
<status status="PASS" starttime="20201030 11:51:58.205" endtime="20201030 11:51:58.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.230" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['vel-1584-g3cd31-forupstream_xtimer_simplification_rebased)\n', 'Welcome to RIOT!\n', '&gt; get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forups...</msg>
<status status="PASS" starttime="20201030 11:51:58.229" endtime="20201030 11:51:58.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.234" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:58.231" endtime="20201030 11:51:58.234"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:58.202" endtime="20201030 11:51:58.235"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:58.200" endtime="20201030 11:51:58.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.199" endtime="20201030 11:51:58.236"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:58.239" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:58.239" endtime="20201030 11:51:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.236" endtime="20201030 11:51:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.198" endtime="20201030 11:51:58.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.197" endtime="20201030 11:51:58.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.241" endtime="20201030 11:51:58.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.196" endtime="20201030 11:51:58.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.244" endtime="20201030 11:51:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.195" endtime="20201030 11:51:58.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.760" endtime="20201030 11:51:58.254"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.260" endtime="20201030 11:51:58.279"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.259" endtime="20201030 11:51:58.280"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.294" endtime="20201030 11:51:58.313"></status>
</kw>
<msg timestamp="20201030 11:51:58.313" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.292" endtime="20201030 11:51:58.314"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.316" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.314" endtime="20201030 11:51:58.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.320" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:58.317" endtime="20201030 11:51:58.320"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:58.289" endtime="20201030 11:51:58.321"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:58.287" endtime="20201030 11:51:58.322"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.286" endtime="20201030 11:51:58.322"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:58.326" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:58.325" endtime="20201030 11:51:58.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.323" endtime="20201030 11:51:58.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.285" endtime="20201030 11:51:58.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.284" endtime="20201030 11:51:58.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.328" endtime="20201030 11:51:58.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.283" endtime="20201030 11:51:58.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.281" endtime="20201030 11:51:58.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.257" endtime="20201030 11:51:58.330"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.340" endtime="20201030 11:52:10.563"></status>
</kw>
<msg timestamp="20201030 11:52:10.564" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.338" endtime="20201030 11:52:10.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.569" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.566" endtime="20201030 11:52:10.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.571" endtime="20201030 11:52:10.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.335" endtime="20201030 11:52:10.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.333" endtime="20201030 11:52:10.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.583" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 11:52:10.579" endtime="20201030 11:52:10.584"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.593" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:10.590" endtime="20201030 11:52:10.593"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.597" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:10.595" endtime="20201030 11:52:10.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.585" endtime="20201030 11:52:10.599"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.608" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:10.605" endtime="20201030 11:52:10.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.612" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:10.610" endtime="20201030 11:52:10.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.600" endtime="20201030 11:52:10.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.622" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:10.620" endtime="20201030 11:52:10.623"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.627" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:52:10.625" endtime="20201030 11:52:10.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.615" endtime="20201030 11:52:10.629"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.643" endtime="20201030 11:52:10.950"></status>
</kw>
<msg timestamp="20201030 11:52:10.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070155917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270205444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.640" endtime="20201030 11:52:10.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070155917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270205444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.954" endtime="20201030 11:52:10.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.962" endtime="20201030 11:52:10.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.634" endtime="20201030 11:52:10.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.630" endtime="20201030 11:52:10.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:10.969" level="INFO">${FILTERED} = [{'diff': 0.200049527}, {'diff': 0.20001649999999999}, {'diff': 0.20002263800000003}, {'diff': 0.200022653}, {'diff': 0.20002263900000006}, {'diff': 0.20002268}, {'diff': 0.20002266700000004}, {'diff'...</msg>
<status status="PASS" starttime="20201030 11:52:10.966" endtime="20201030 11:52:10.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.973" level="INFO">${RESULT} = {'diff': [0.200049527, 0.20001649999999999, 0.20002263800000003, 0.200022653, 0.20002263900000006, 0.20002268, 0.20002266700000004, 0.20002266599999996, 0.2000226249999999, 0.200022653, 0.20002268, 0....</msg>
<status status="PASS" starttime="20201030 11:52:10.970" endtime="20201030 11:52:10.974"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.978" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:10.976" endtime="20201030 11:52:10.978"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.980" level="INFO">VALUE: [0.200049527, 0.20001649999999999, 0.20002263800000003, 0.200022653, 0.20002263900000006, 0.20002268, 0.20002266700000004, 0.20002266599999996, 0.2000226249999999, 0.200022653, 0.20002268, 0.20002269399999983, 0.20002263900000017, 0.20002269499999992, 0.20002266700000026, 0.20002263899999972, 0.20002266600000018, 0.20002254200000014, 0.20002252799999987, 0.20002255500000032, 0.20002254199999925, 0.2000225130000004, 0.20002252800000075, 0.20002252800000075, 0.20002255500000032, 0.20002252799999987, 0.20002252700000067, 0.20002252800000075, 0.20002251400000048, 0.20002255500000032, 0.20002252799999987, 0.20002255500000032, 0.20002254200000014, 0.2000225560000004, 0.20002254100000005, 0.20002254200000014, 0.20002254200000014, 0.2000225130000004, 0.20002254200000014, 0.20002252799999987, 0.20002254099999917, 0.2000225560000004, 0.2000225560000004, 0.20002254099999917, 0.20002252799999987, 0.20002252799999987, 0.20002254100000094, 0.20002255500000032, 0.2000225829999991, 0.20002254100000094, 0.20002254200000102]</msg>
<status status="PASS" starttime="20201030 11:52:10.979" endtime="20201030 11:52:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.974" endtime="20201030 11:52:10.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.331" endtime="20201030 11:52:10.982"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:58.254" endtime="20201030 11:52:10.983" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.992" endtime="20201030 11:52:11.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.990" endtime="20201030 11:52:11.012"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.026" endtime="20201030 11:52:11.045"></status>
</kw>
<msg timestamp="20201030 11:52:11.046" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.025" endtime="20201030 11:52:11.046"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.048" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.047" endtime="20201030 11:52:11.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.052" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:11.050" endtime="20201030 11:52:11.052"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:11.022" endtime="20201030 11:52:11.053"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:11.019" endtime="20201030 11:52:11.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.017" endtime="20201030 11:52:11.054"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:11.057" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:11.057" endtime="20201030 11:52:11.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.054" endtime="20201030 11:52:11.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.016" endtime="20201030 11:52:11.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.016" endtime="20201030 11:52:11.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.059" endtime="20201030 11:52:11.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.014" endtime="20201030 11:52:11.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.012" endtime="20201030 11:52:11.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.989" endtime="20201030 11:52:11.062"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.071" endtime="20201030 11:52:23.295"></status>
</kw>
<msg timestamp="20201030 11:52:23.296" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.070" endtime="20201030 11:52:23.297"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.302" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.298" endtime="20201030 11:52:23.302"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.304" endtime="20201030 11:52:23.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.067" endtime="20201030 11:52:23.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.065" endtime="20201030 11:52:23.310"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.316" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 11:52:23.312" endtime="20201030 11:52:23.316"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.325" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:23.323" endtime="20201030 11:52:23.326"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.330" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:23.327" endtime="20201030 11:52:23.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.318" endtime="20201030 11:52:23.332"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.342" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:23.338" endtime="20201030 11:52:23.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.347" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:23.345" endtime="20201030 11:52:23.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.333" endtime="20201030 11:52:23.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.354" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:23.353" endtime="20201030 11:52:23.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.356" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:52:23.355" endtime="20201030 11:52:23.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.350" endtime="20201030 11:52:23.357"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.364" endtime="20201030 11:52:23.661"></status>
</kw>
<msg timestamp="20201030 11:52:23.664" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070295486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270425319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.362" endtime="20201030 11:52:23.664"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.672" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070295486, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270425319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.665" endtime="20201030 11:52:23.672"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.673" endtime="20201030 11:52:23.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.359" endtime="20201030 11:52:23.676"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.358" endtime="20201030 11:52:23.676"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:23.680" level="INFO">${FILTERED} = [{'diff': 0.20012983299999998}, {'diff': 0.19994359700000003}, {'diff': 0.20002055600000002}, {'diff': 0.20002252799999998}, {'diff': 0.2000225269999999}, {'diff': 0.20002254200000014}, {'diff': 0.200...</msg>
<status status="PASS" starttime="20201030 11:52:23.677" endtime="20201030 11:52:23.680"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.684" level="INFO">${RESULT} = {'diff': [0.20012983299999998, 0.19994359700000003, 0.20002055600000002, 0.20002252799999998, 0.2000225269999999, 0.20002254200000014, 0.20002251400000004, 0.20002252799999987, 0.20002254200000014, 0....</msg>
<status status="PASS" starttime="20201030 11:52:23.681" endtime="20201030 11:52:23.684"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.689" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:23.688" endtime="20201030 11:52:23.689"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.692" level="INFO">VALUE: [0.20012983299999998, 0.19994359700000003, 0.20002055600000002, 0.20002252799999998, 0.2000225269999999, 0.20002254200000014, 0.20002251400000004, 0.20002252799999987, 0.20002254200000014, 0.20002252799999987, 0.200022417, 0.20002238799999983, 0.20002243100000028, 0.200022417, 0.2000224450000001, 0.20002243100000028, 0.20002240299999974, 0.2000224450000001, 0.20002241599999993, 0.20002249999999977, 0.20002241700000045, 0.20002248599999994, 0.2000224579999994, 0.2000223889999999, 0.20002243099999983, 0.2000223889999999, 0.20002244400000002, 0.2000223889999999, 0.20002243099999983, 0.20002240300000018, 0.20002242999999975, 0.20002241599999948, 0.20002243099999983, 0.20002243099999983, 0.20002243099999983, 0.20002241699999956, 0.2000224020000001, 0.2000224580000003, 0.20002241699999956, 0.20002241700000045, 0.20002244499999833, 0.20002240300000018, 0.20002244400000002, 0.20002244400000002, 0.20002247199999879, 0.20002244499999833, 0.20002243100000072, 0.2000224450000001, 0.20002243100000072, 0.20002244400000002, 0.20002244400000002]</msg>
<status status="PASS" starttime="20201030 11:52:23.690" endtime="20201030 11:52:23.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.685" endtime="20201030 11:52:23.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.063" endtime="20201030 11:52:23.693"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:10.986" endtime="20201030 11:52:23.694" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.704" endtime="20201030 11:52:23.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.702" endtime="20201030 11:52:23.724"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.738" endtime="20201030 11:52:23.757"></status>
</kw>
<msg timestamp="20201030 11:52:23.757" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.736" endtime="20201030 11:52:23.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.760" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.758" endtime="20201030 11:52:23.760"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.763" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:23.761" endtime="20201030 11:52:23.763"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:23.733" endtime="20201030 11:52:23.764"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:23.731" endtime="20201030 11:52:23.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.729" endtime="20201030 11:52:23.765"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:23.769" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:23.768" endtime="20201030 11:52:23.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.766" endtime="20201030 11:52:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.729" endtime="20201030 11:52:23.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.728" endtime="20201030 11:52:23.770"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.771" endtime="20201030 11:52:23.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.727" endtime="20201030 11:52:23.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.725" endtime="20201030 11:52:23.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.700" endtime="20201030 11:52:23.773"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.786" endtime="20201030 11:52:36.010"></status>
</kw>
<msg timestamp="20201030 11:52:36.011" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.781" endtime="20201030 11:52:36.012"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.017" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.013" endtime="20201030 11:52:36.017"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.019" endtime="20201030 11:52:36.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.778" endtime="20201030 11:52:36.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.776" endtime="20201030 11:52:36.025"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.031" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 11:52:36.027" endtime="20201030 11:52:36.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.040" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:36.038" endtime="20201030 11:52:36.041"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.044" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:36.042" endtime="20201030 11:52:36.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.033" endtime="20201030 11:52:36.046"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.055" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:36.053" endtime="20201030 11:52:36.056"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.059" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:36.057" endtime="20201030 11:52:36.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.048" endtime="20201030 11:52:36.061"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.070" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:36.067" endtime="20201030 11:52:36.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.074" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:52:36.072" endtime="20201030 11:52:36.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.063" endtime="20201030 11:52:36.076"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.083" endtime="20201030 11:52:36.383"></status>
</kw>
<msg timestamp="20201030 11:52:36.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072661097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.272887403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.081" endtime="20201030 11:52:36.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.072661097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.272887403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.387" endtime="20201030 11:52:36.394"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.395" endtime="20201030 11:52:36.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.078" endtime="20201030 11:52:36.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.076" endtime="20201030 11:52:36.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:36.402" level="INFO">${FILTERED} = [{'diff': 0.20022630599999997}, {'diff': 0.19985305600000003}, {'diff': 0.200024667}, {'diff': 0.200022708}, {'diff': 0.20002268099999987}, {'diff': 0.20002263899999995}, {'diff': 0.200022653}, {'diff...</msg>
<status status="PASS" starttime="20201030 11:52:36.398" endtime="20201030 11:52:36.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.407" level="INFO">${RESULT} = {'diff': [0.20022630599999997, 0.19985305600000003, 0.200024667, 0.200022708, 0.20002268099999987, 0.20002263899999995, 0.200022653, 0.20002265200000013, 0.2000226249999999, 0.20002262500000012, 0.200...</msg>
<status status="PASS" starttime="20201030 11:52:36.403" endtime="20201030 11:52:36.407"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.411" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:36.410" endtime="20201030 11:52:36.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.413" level="INFO">VALUE: [0.20022630599999997, 0.19985305600000003, 0.200024667, 0.200022708, 0.20002268099999987, 0.20002263899999995, 0.200022653, 0.20002265200000013, 0.2000226249999999, 0.20002262500000012, 0.200022653, 0.2000226249999999, 0.2000226249999999, 0.2000227090000002, 0.2000226810000001, 0.20002263899999972, 0.20002263800000009, 0.20002252799999987, 0.20002250000000021, 0.20002258299999953, 0.20002254200000014, 0.20002252799999987, 0.20002252799999987, 0.20002252799999987, 0.20002251400000048, 0.20002257000000068, 0.2000225689999997, 0.2000225139999996, 0.20002254200000014, 0.20002255500000032, 0.20002255599999952, 0.20002255500000032, 0.20002254099999917, 0.20002252800000075, 0.20002252799999987, 0.2000225130000004, 0.20002254200000014, 0.20002255599999952, 0.20002259700000025, 0.2000225000000011, 0.2000225560000004, 0.2000225139999987, 0.20002252699999978, 0.20002254200000102, 0.20002252799999987, 0.20002252799999987, 0.20002254199999925, 0.20002254199999925, 0.2000225560000004, 0.20002254099999917, 0.2000225689999997]</msg>
<status status="PASS" starttime="20201030 11:52:36.412" endtime="20201030 11:52:36.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.408" endtime="20201030 11:52:36.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.774" endtime="20201030 11:52:36.415"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:23.697" endtime="20201030 11:52:36.416" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.425" endtime="20201030 11:52:36.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.424" endtime="20201030 11:52:36.445"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.459" endtime="20201030 11:52:36.478"></status>
</kw>
<msg timestamp="20201030 11:52:36.479" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.457" endtime="20201030 11:52:36.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.481" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.480" endtime="20201030 11:52:36.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.485" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:36.482" endtime="20201030 11:52:36.486"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:36.454" endtime="20201030 11:52:36.486"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:36.452" endtime="20201030 11:52:36.487"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.451" endtime="20201030 11:52:36.487"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:36.491" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:36.490" endtime="20201030 11:52:36.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.488" endtime="20201030 11:52:36.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.450" endtime="20201030 11:52:36.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.449" endtime="20201030 11:52:36.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.493" endtime="20201030 11:52:36.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.448" endtime="20201030 11:52:36.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.446" endtime="20201030 11:52:36.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.422" endtime="20201030 11:52:36.496"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.505" endtime="20201030 11:52:48.729"></status>
</kw>
<msg timestamp="20201030 11:52:48.730" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.503" endtime="20201030 11:52:48.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.735" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:48.732" endtime="20201030 11:52:48.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.738" endtime="20201030 11:52:48.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.500" endtime="20201030 11:52:48.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.498" endtime="20201030 11:52:48.743"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:48.749" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 11:52:48.746" endtime="20201030 11:52:48.750"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.758" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:48.756" endtime="20201030 11:52:48.759"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.763" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:48.761" endtime="20201030 11:52:48.764"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.751" endtime="20201030 11:52:48.765"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.773" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:48.771" endtime="20201030 11:52:48.774"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.778" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:48.776" endtime="20201030 11:52:48.779"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.766" endtime="20201030 11:52:48.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.788" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:48.786" endtime="20201030 11:52:48.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:48.793" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:52:48.791" endtime="20201030 11:52:48.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.781" endtime="20201030 11:52:48.795"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:48.803" endtime="20201030 11:52:49.101"></status>
</kw>
<msg timestamp="20201030 11:52:49.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070088611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270464542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:48.801" endtime="20201030 11:52:49.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.070088611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270464542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:49.105" endtime="20201030 11:52:49.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.113" endtime="20201030 11:52:49.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.798" endtime="20201030 11:52:49.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:48.796" endtime="20201030 11:52:49.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:49.120" level="INFO">${FILTERED} = [{'diff': 0.20037593099999998}, {'diff': 0.20008807}, {'diff': 0.19964476399999997}, {'diff': 0.2000225}, {'diff': 0.2000225280000001}, {'diff': 0.20002254199999991}, {'diff': 0.200022527}, {'diff': 0...</msg>
<status status="PASS" starttime="20201030 11:52:49.117" endtime="20201030 11:52:49.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:49.124" level="INFO">${RESULT} = {'diff': [0.20037593099999998, 0.20008807, 0.19964476399999997, 0.2000225, 0.2000225280000001, 0.20002254199999991, 0.200022527, 0.20002252799999987, 0.20002254100000005, 0.20002255600000018, 0.200022...</msg>
<status status="PASS" starttime="20201030 11:52:49.121" endtime="20201030 11:52:49.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.128" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:49.127" endtime="20201030 11:52:49.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.131" level="INFO">VALUE: [0.20037593099999998, 0.20008807, 0.19964476399999997, 0.2000225, 0.2000225280000001, 0.20002254199999991, 0.200022527, 0.20002252799999987, 0.20002254100000005, 0.20002255600000018, 0.20002254200000014, 0.20002252799999987, 0.20002256900000015, 0.20002254100000005, 0.20002251400000004, 0.20002252799999987, 0.20002252799999987, 0.20002237500000009, 0.20002234800000007, 0.20002236099999982, 0.200022347, 0.20002236100000026, 0.200022347, 0.200022347, 0.200022347, 0.20002233299999972, 0.200022347, 0.2000223340000007, 0.20002234800000007, 0.200022347, 0.20002231899999945, 0.200022347, 0.200022347, 0.200022347, 0.20002237499999964, 0.20002234800000007, 0.20002241699999956, 0.20002236100000026, 0.2000223889999999, 0.20002236099999937, 0.20002232000000042, 0.20002236100000026, 0.20002236100000026, 0.20002233299999972, 0.20002236100000026, 0.20002232000000042, 0.20002231900000034, 0.20002237499999964, 0.20002237499999964, 0.20002236100000026, 0.20002236199999857]</msg>
<status status="PASS" starttime="20201030 11:52:49.130" endtime="20201030 11:52:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.125" endtime="20201030 11:52:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.497" endtime="20201030 11:52:49.133"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:36.419" endtime="20201030 11:52:49.134" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.143" endtime="20201030 11:52:49.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.141" endtime="20201030 11:52:49.163"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.177" endtime="20201030 11:52:49.196"></status>
</kw>
<msg timestamp="20201030 11:52:49.196" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.176" endtime="20201030 11:52:49.197"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.199" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.198" endtime="20201030 11:52:49.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.202" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:49.200" endtime="20201030 11:52:49.203"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:49.173" endtime="20201030 11:52:49.203"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:49.169" endtime="20201030 11:52:49.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.168" endtime="20201030 11:52:49.204"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:49.208" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:49.207" endtime="20201030 11:52:49.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.205" endtime="20201030 11:52:49.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.167" endtime="20201030 11:52:49.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.167" endtime="20201030 11:52:49.209"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.210" endtime="20201030 11:52:49.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.165" endtime="20201030 11:52:49.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.164" endtime="20201030 11:52:49.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.139" endtime="20201030 11:52:49.213"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.222" endtime="20201030 11:53:01.445"></status>
</kw>
<msg timestamp="20201030 11:53:01.447" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.220" endtime="20201030 11:53:01.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.452" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.449" endtime="20201030 11:53:01.453"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.455" endtime="20201030 11:53:01.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.217" endtime="20201030 11:53:01.459"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.215" endtime="20201030 11:53:01.460"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.467" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 11:53:01.463" endtime="20201030 11:53:01.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.475" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:01.473" endtime="20201030 11:53:01.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.480" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:01.478" endtime="20201030 11:53:01.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.468" endtime="20201030 11:53:01.482"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.490" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:01.488" endtime="20201030 11:53:01.491"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.495" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:01.493" endtime="20201030 11:53:01.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.483" endtime="20201030 11:53:01.497"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.505" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:01.503" endtime="20201030 11:53:01.506"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.512" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:53:01.508" endtime="20201030 11:53:01.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.498" endtime="20201030 11:53:01.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.528" endtime="20201030 11:53:01.828"></status>
</kw>
<msg timestamp="20201030 11:53:01.831" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069760722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270318347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.525" endtime="20201030 11:53:01.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.069760722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.270318347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:01.832" endtime="20201030 11:53:01.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.840" endtime="20201030 11:53:01.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.519" endtime="20201030 11:53:01.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.516" endtime="20201030 11:53:01.843"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:01.847" level="INFO">${FILTERED} = [{'diff': 0.20055762500000002}, {'diff': 0.20009867999999997}, {'diff': 0.199457944}, {'diff': 0.20002259700000002}, {'diff': 0.20002261100000007}, {'diff': 0.20002258399999984}, {'diff': 0.2000226249...</msg>
<status status="PASS" starttime="20201030 11:53:01.844" endtime="20201030 11:53:01.847"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:01.851" level="INFO">${RESULT} = {'diff': [0.20055762500000002, 0.20009867999999997, 0.199457944, 0.20002259700000002, 0.20002261100000007, 0.20002258399999984, 0.2000226249999999, 0.20002261100000007, 0.20002261199999993, 0.20002261...</msg>
<status status="PASS" starttime="20201030 11:53:01.848" endtime="20201030 11:53:01.851"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.855" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:01.854" endtime="20201030 11:53:01.855"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.858" level="INFO">VALUE: [0.20055762500000002, 0.20009867999999997, 0.199457944, 0.20002259700000002, 0.20002261100000007, 0.20002258399999984, 0.2000226249999999, 0.20002261100000007, 0.20002261199999993, 0.20002261100000007, 0.20002259700000025, 0.2000226249999999, 0.20002261100000007, 0.20002261100000007, 0.20002263899999972, 0.2000226249999999, 0.20002263899999972, 0.20002251400000004, 0.200022417, 0.20002240300000018, 0.20002244400000002, 0.2000224020000001, 0.20002240300000018, 0.2000224450000001, 0.20002244400000002, 0.20002240300000018, 0.20002244400000002, 0.20002242999999975, 0.20002241699999956, 0.20002243100000072, 0.20002248700000003, 0.20002240300000018, 0.20002241699999956, 0.2000224580000003, 0.20002244400000002, 0.20002241600000037, 0.20002243000000064, 0.2000224450000001, 0.20002247199999967, 0.20002247200000056, 0.20002251400000048, 0.2000224450000001, 0.20002243100000072, 0.2000224589999995, 0.20002241699999956, 0.2000224450000001, 0.20002243100000072, 0.20002249999999933, 0.20002244400000002, 0.20002243000000064, 0.20002244400000002]</msg>
<status status="PASS" starttime="20201030 11:53:01.856" endtime="20201030 11:53:01.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.852" endtime="20201030 11:53:01.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.213" endtime="20201030 11:53:01.860"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:49.137" endtime="20201030 11:53:01.864" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:01.872" endtime="20201030 11:53:01.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.871" endtime="20201030 11:53:01.903"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.917" endtime="20201030 11:53:01.937"></status>
</kw>
<msg timestamp="20201030 11:53:01.937" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.915" endtime="20201030 11:53:01.937"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.940" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['nucleo-f091rc', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.938" endtime="20201030 11:53:01.940"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:01.943" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:01.941" endtime="20201030 11:53:01.943"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:01.912" endtime="20201030 11:53:01.944"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:01.910" endtime="20201030 11:53:01.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.909" endtime="20201030 11:53:01.944"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:01.948" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:01.947" endtime="20201030 11:53:01.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.945" endtime="20201030 11:53:01.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.908" endtime="20201030 11:53:01.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.907" endtime="20201030 11:53:01.949"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.950" endtime="20201030 11:53:01.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.906" endtime="20201030 11:53:01.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.904" endtime="20201030 11:53:01.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.870" endtime="20201030 11:53:01.953"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:01.962" endtime="20201030 11:53:14.185"></status>
</kw>
<msg timestamp="20201030 11:53:14.186" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:01.960" endtime="20201030 11:53:14.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.192" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:14.189" endtime="20201030 11:53:14.192"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.194" endtime="20201030 11:53:14.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.957" endtime="20201030 11:53:14.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.955" endtime="20201030 11:53:14.199"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.205" level="INFO">${RESULT} = {'bg-timer-interval': 20000, 'main-timer-interval': 100000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 11:53:14.202" endtime="20201030 11:53:14.206"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.214" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:14.212" endtime="20201030 11:53:14.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.218" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:14.216" endtime="20201030 11:53:14.219"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.207" endtime="20201030 11:53:14.220"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.228" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:14.226" endtime="20201030 11:53:14.229"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.233" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:14.231" endtime="20201030 11:53:14.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.221" endtime="20201030 11:53:14.234"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.242" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:14.240" endtime="20201030 11:53:14.243"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.247" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:53:14.245" endtime="20201030 11:53:14.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.236" endtime="20201030 11:53:14.250"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.260" endtime="20201030 11:53:14.559"></status>
</kw>
<msg timestamp="20201030 11:53:14.562" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080991681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.281780056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.258" endtime="20201030 11:53:14.562"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.080991681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.281780056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:14.563" endtime="20201030 11:53:14.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:14.571" endtime="20201030 11:53:14.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.255" endtime="20201030 11:53:14.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.251" endtime="20201030 11:53:14.574"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:14.578" level="INFO">${FILTERED} = [{'diff': 0.20078837500000002}, {'diff': 0.200098361}, {'diff': 0.19923493000000003}, {'diff': 0.20002251400000004}, {'diff': 0.20002247299999998}, {'diff': 0.2000225280000001}, {'diff': 0.20002248599...</msg>
<status status="PASS" starttime="20201030 11:53:14.574" endtime="20201030 11:53:14.578"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:14.583" level="INFO">${RESULT} = {'diff': [0.20078837500000002, 0.200098361, 0.19923493000000003, 0.20002251400000004, 0.20002247299999998, 0.2000225280000001, 0.20002248599999994, 0.20002248599999994, 0.20002254200000014, 0.20002247...</msg>
<status status="PASS" starttime="20201030 11:53:14.579" endtime="20201030 11:53:14.583"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.587" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:14.586" endtime="20201030 11:53:14.587"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:14.589" level="INFO">VALUE: [0.20078837500000002, 0.200098361, 0.19923493000000003, 0.20002251400000004, 0.20002247299999998, 0.2000225280000001, 0.20002248599999994, 0.20002248599999994, 0.20002254200000014, 0.20002247200000012, 0.20002248599999994, 0.20002251400000004, 0.20002247299999976, 0.20002248599999994, 0.20002250000000021, 0.20002248599999994, 0.20002251400000004, 0.200022417, 0.2000222909999998, 0.20002231900000034, 0.20002229199999988, 0.20002232000000042, 0.20002229199999988, 0.20002229199999988, 0.20002231899999945, 0.20002230600000015, 0.200022347, 0.20002231899999945, 0.20002230500000007, 0.20002231899999945, 0.20002231900000034, 0.20002230500000007, 0.20002233299999972, 0.20002230500000007, 0.2000223330000006, 0.20002229199999988, 0.20002230600000015, 0.2000223889999999, 0.20002234800000007, 0.2000223340000007, 0.20002231900000034, 0.2000223890000008, 0.20002234700000088, 0.20002230500000096, 0.20002234700000088, 0.20002231899999856, 0.20002231900000034, 0.2000223330000015, 0.20002244400000002, 0.20002256900000148, 0.20002254100000094]</msg>
<status status="PASS" starttime="20201030 11:53:14.588" endtime="20201030 11:53:14.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:14.583" endtime="20201030 11:53:14.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:01.953" endtime="20201030 11:53:14.591"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_nucleo-f091rc</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:01.866" endtime="20201030 11:53:14.592" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:56.719" endtime="20201030 11:53:14.599"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">nucleo-f091rc</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201030 11:49:50.135" endtime="20201030 11:53:14.631"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_nucleo-f091rc</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
