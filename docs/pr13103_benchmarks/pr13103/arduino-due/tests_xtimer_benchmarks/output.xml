<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 3.1.2 (Python 3.7.3 on linux)" generated="20201030 11:49:55.052" rpa="false">
<suite id="s1" name="tests_xtimer_benchmarks" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests">
<suite id="s1-s1" name="Timer Version" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/00__timer_version.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:49:58.653" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:49:58.662" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:49:59.786" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:49:58.652" endtime="20201030 11:49:59.787"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:49:59.789" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:49:59.788" endtime="20201030 11:49:59.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.650" endtime="20201030 11:49:59.790"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:49:59.792" endtime="20201030 11:50:00.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:59.791" endtime="20201030 11:50:00.009"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:00.022" endtime="20201030 11:50:03.049"></status>
</kw>
<msg timestamp="20201030 11:50:03.050" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:00.020" endtime="20201030 11:50:03.051"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.055" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.052" endtime="20201030 11:50:03.056"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:03.062" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:03.058" endtime="20201030 11:50:03.063"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:00.018" endtime="20201030 11:50:03.064"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:00.015" endtime="20201030 11:50:03.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.014" endtime="20201030 11:50:03.066"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:03.075" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:03.072" endtime="20201030 11:50:03.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.068" endtime="20201030 11:50:03.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.013" endtime="20201030 11:50:03.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.013" endtime="20201030 11:50:03.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.078" endtime="20201030 11:50:03.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.011" endtime="20201030 11:50:03.082"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.084" endtime="20201030 11:50:03.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:00.010" endtime="20201030 11:50:03.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:49:58.648" endtime="20201030 11:50:03.089"></status>
</kw>
<test id="s1-s1-t1" name="Save Timer Version">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:03.102" endtime="20201030 11:50:03.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.098" endtime="20201030 11:50:03.125"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:03.155" endtime="20201030 11:50:06.184"></status>
</kw>
<msg timestamp="20201030 11:50:06.185" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:03.153" endtime="20201030 11:50:06.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.190" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.187" endtime="20201030 11:50:06.191"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.197" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:06.193" endtime="20201030 11:50:06.198"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:03.147" endtime="20201030 11:50:06.199"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:03.139" endtime="20201030 11:50:06.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.136" endtime="20201030 11:50:06.201"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:06.209" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:06.208" endtime="20201030 11:50:06.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.203" endtime="20201030 11:50:06.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.133" endtime="20201030 11:50:06.211"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.132" endtime="20201030 11:50:06.211"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.213" endtime="20201030 11:50:06.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.129" endtime="20201030 11:50:06.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.126" endtime="20201030 11:50:06.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:03.096" endtime="20201030 11:50:06.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Get Timer Version</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Timer Version" library="DutDeviceIf">
<doc>Get the version of timer used</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.239" endtime="20201030 11:50:06.254"></status>
</kw>
<msg timestamp="20201030 11:50:06.255" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.235" endtime="20201030 11:50:06.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.261" level="INFO">${RESULT} = {'cmd': 'get_timer_version', 'msg': ['get_timer_version\r\n'], 'data': ['xtimer'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:06.258" endtime="20201030 11:50:06.262"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:06.264" endtime="20201030 11:50:06.267"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.227" endtime="20201030 11:50:06.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.222" endtime="20201030 11:50:06.269"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-version</arg>
<arg>${RESULT['data'][0]}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.278" level="INFO">NAME: timer-version</msg>
<status status="PASS" starttime="20201030 11:50:06.276" endtime="20201030 11:50:06.279"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.283" level="INFO">VALUE: xtimer</msg>
<status status="PASS" starttime="20201030 11:50:06.281" endtime="20201030 11:50:06.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.271" endtime="20201030 11:50:06.285"></status>
</kw>
<doc>Record the timer version</doc>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:03.090" endtime="20201030 11:50:06.287" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:49:55.162" endtime="20201030 11:50:06.294"></status>
</suite>
<suite id="s1-s2" name="Timer Overhead" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/01__timer_overhead.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:06.355" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:06.363" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:07.434" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:06.353" endtime="20201030 11:50:07.434"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:07.437" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:07.435" endtime="20201030 11:50:07.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.352" endtime="20201030 11:50:07.438"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:07.440" endtime="20201030 11:50:07.662"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.439" endtime="20201030 11:50:07.662"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:07.674" endtime="20201030 11:50:10.702"></status>
</kw>
<msg timestamp="20201030 11:50:10.703" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:07.673" endtime="20201030 11:50:10.703"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.708" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.705" endtime="20201030 11:50:10.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:10.714" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:10.710" endtime="20201030 11:50:10.715"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:07.670" endtime="20201030 11:50:10.716"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:07.668" endtime="20201030 11:50:10.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.667" endtime="20201030 11:50:10.718"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:10.725" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:10.724" endtime="20201030 11:50:10.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.720" endtime="20201030 11:50:10.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.666" endtime="20201030 11:50:10.727"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.666" endtime="20201030 11:50:10.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.729" endtime="20201030 11:50:10.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.664" endtime="20201030 11:50:10.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.734" endtime="20201030 11:50:10.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:07.663" endtime="20201030 11:50:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:06.351" endtime="20201030 11:50:10.739"></status>
</kw>
<test id="s1-s2-t1" name="Measure GPIO">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:10.752" endtime="20201030 11:50:10.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.748" endtime="20201030 11:50:10.773"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:10.787" endtime="20201030 11:50:13.814"></status>
</kw>
<msg timestamp="20201030 11:50:13.815" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:10.785" endtime="20201030 11:50:13.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.820" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.817" endtime="20201030 11:50:13.821"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.827" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:13.822" endtime="20201030 11:50:13.827"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:10.782" endtime="20201030 11:50:13.828"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:10.780" endtime="20201030 11:50:13.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.779" endtime="20201030 11:50:13.830"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:13.838" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:13.836" endtime="20201030 11:50:13.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.832" endtime="20201030 11:50:13.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.778" endtime="20201030 11:50:13.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.777" endtime="20201030 11:50:13.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.841" endtime="20201030 11:50:13.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.776" endtime="20201030 11:50:13.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.774" endtime="20201030 11:50:13.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:10.745" endtime="20201030 11:50:13.847"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.865" endtime="20201030 11:50:13.883"></status>
</kw>
<msg timestamp="20201030 11:50:13.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.862" endtime="20201030 11:50:13.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:13.889" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:13.886" endtime="20201030 11:50:13.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.891" endtime="20201030 11:50:13.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.857" endtime="20201030 11:50:13.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.853" endtime="20201030 11:50:13.896"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:13.909" endtime="20201030 11:50:14.189"></status>
</kw>
<msg timestamp="20201030 11:50:14.191" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104448431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:13.906" endtime="20201030 11:50:14.191"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.196" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104448431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:14.192" endtime="20201030 11:50:14.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.197" endtime="20201030 11:50:14.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.901" endtime="20201030 11:50:14.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.897" endtime="20201030 11:50:14.200"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.203" level="INFO">${RESULT} = [{'diff': 9.430999999615608e-06}, {'diff': 9.110999999784042e-06}, {'diff': 1.1194999999908362e-05}, {'diff': 6.695000000167539e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 6.9160000002455035e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:14.200" endtime="20201030 11:50:14.204"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.207" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.430999999615608e-06, 9.110999999784042e-06, 1.1194999999908362e-05, 6.695000000167539e-06, 5.4309999999446745e-06, 6.9160000002455035e-06, 4.625000000313406e-06, 1.1889000000042671e-05, 8....</msg>
<status status="PASS" starttime="20201030 11:50:14.204" endtime="20201030 11:50:14.207"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.211" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:14.210" endtime="20201030 11:50:14.211"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.213" level="INFO">VALUE: [9.430999999615608e-06, 9.110999999784042e-06, 1.1194999999908362e-05, 6.695000000167539e-06, 5.4309999999446745e-06, 6.9160000002455035e-06, 4.625000000313406e-06, 1.1889000000042671e-05, 8.193999999850377e-06, 9.361000000041031e-06, 7.167000000141144e-06, 1.0624999999819806e-05, 1.0763999999774398e-05, 7.77800000006934e-06, 6.34799999987834e-06, 7.416999999954044e-06, 8.486000000029748e-06, 7.652999999940846e-06, 8.055000000339874e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.207999999676474e-06, 1.1209000000178548e-05, 1.0000000000065512e-05, 8.763999999938932e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.212" endtime="20201030 11:50:14.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.207" endtime="20201030 11:50:14.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.850" endtime="20201030 11:50:14.214"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.849" endtime="20201030 11:50:14.215"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.222" endtime="20201030 11:50:14.233"></status>
</kw>
<msg timestamp="20201030 11:50:14.234" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.221" endtime="20201030 11:50:14.234"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.236" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.235" endtime="20201030 11:50:14.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.237" endtime="20201030 11:50:14.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.218" endtime="20201030 11:50:14.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.217" endtime="20201030 11:50:14.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.247" endtime="20201030 11:50:14.548"></status>
</kw>
<msg timestamp="20201030 11:50:14.551" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104448431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:14.246" endtime="20201030 11:50:14.551"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.559" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104439, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.104448431, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:50:14.552" endtime="20201030 11:50:14.560"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.560" endtime="20201030 11:50:14.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.243" endtime="20201030 11:50:14.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.241" endtime="20201030 11:50:14.563"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.567" level="INFO">${RESULT} = [{'diff': 9.430999999615608e-06}, {'diff': 9.110999999784042e-06}, {'diff': 1.1194999999908362e-05}, {'diff': 6.695000000167539e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 6.9160000002455035e-06}...</msg>
<status status="PASS" starttime="20201030 11:50:14.564" endtime="20201030 11:50:14.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.571" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.430999999615608e-06, 9.110999999784042e-06, 1.1194999999908362e-05, 6.695000000167539e-06, 5.4309999999446745e-06, 6.9160000002455035e-06, 4.625000000313406e-06, 1.1889000000042671e-05, 8....</msg>
<status status="PASS" starttime="20201030 11:50:14.568" endtime="20201030 11:50:14.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.576" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:14.575" endtime="20201030 11:50:14.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.578" level="INFO">VALUE: [9.430999999615608e-06, 9.110999999784042e-06, 1.1194999999908362e-05, 6.695000000167539e-06, 5.4309999999446745e-06, 6.9160000002455035e-06, 4.625000000313406e-06, 1.1889000000042671e-05, 8.193999999850377e-06, 9.361000000041031e-06, 7.167000000141144e-06, 1.0624999999819806e-05, 1.0763999999774398e-05, 7.77800000006934e-06, 6.34799999987834e-06, 7.416999999954044e-06, 8.486000000029748e-06, 7.652999999940846e-06, 8.055000000339874e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.207999999676474e-06, 1.1209000000178548e-05, 1.0000000000065512e-05, 8.763999999938932e-06, 9.041000000209465e-06, 8.91700000016371e-06, 9.347000000214933e-06, 7.1390000000448595e-06, 7.639000000114748e-06, 9.332999999944747e-06, 1.0722000000296106e-05, 8.333000000249058e-06, 4.346999999960133e-06, 1.1902999999868769e-05, 8.916999999719621e-06, 6.264000000033576e-06, 9.0699999999444e-06, 9.749999999808523e-06, 1.0694999999838473e-05, 9.083000000131847e-06, 7.791999999895438e-06, 7.708000000050674e-06, 1.1556000000023658e-05, 6.068999999886415e-06, 1.1290999999857831e-05, 8.72200000001655e-06, 7.7769999999866e-06, 6.777999999929563e-06, 1.0195000000212673e-05]</msg>
<status status="PASS" starttime="20201030 11:50:14.577" endtime="20201030 11:50:14.579"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.572" endtime="20201030 11:50:14.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.215" endtime="20201030 11:50:14.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.215" endtime="20201030 11:50:14.580"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.588" endtime="20201030 11:50:14.598"></status>
</kw>
<msg timestamp="20201030 11:50:14.599" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.586" endtime="20201030 11:50:14.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.601" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.600" endtime="20201030 11:50:14.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.602" endtime="20201030 11:50:14.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.584" endtime="20201030 11:50:14.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.582" endtime="20201030 11:50:14.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.611" endtime="20201030 11:50:14.922"></status>
</kw>
<msg timestamp="20201030 11:50:14.925" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104635125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.10464575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:14.609" endtime="20201030 11:50:14.926"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104635125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.10464575, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:14.926" endtime="20201030 11:50:14.936"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.936" endtime="20201030 11:50:14.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.607" endtime="20201030 11:50:14.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.605" endtime="20201030 11:50:14.939"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:14.943" level="INFO">${RESULT} = [{'diff': 1.0624999999819806e-05}, {'diff': 1.0763999999774398e-05}, {'diff': 7.77800000006934e-06}, {'diff': 6.34799999987834e-06}, {'diff': 7.416999999954044e-06}, {'diff': 8.486000000029748e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:14.940" endtime="20201030 11:50:14.943"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:14.948" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0624999999819806e-05, 1.0763999999774398e-05, 7.77800000006934e-06, 6.34799999987834e-06, 7.416999999954044e-06, 8.486000000029748e-06, 7.652999999940846e-06, 8.055000000339874e-06, 4.6529...</msg>
<status status="PASS" starttime="20201030 11:50:14.944" endtime="20201030 11:50:14.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.953" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:14.952" endtime="20201030 11:50:14.953"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.955" level="INFO">VALUE: [1.0624999999819806e-05, 1.0763999999774398e-05, 7.77800000006934e-06, 6.34799999987834e-06, 7.416999999954044e-06, 8.486000000029748e-06, 7.652999999940846e-06, 8.055000000339874e-06, 4.652999999965601e-06, 9.193999999990154e-06, 8.207999999676474e-06, 1.1209000000178548e-05, 1.0000000000065512e-05, 8.763999999938932e-06, 9.041000000209465e-06, 8.91700000016371e-06, 9.347000000214933e-06, 7.1390000000448595e-06, 7.639000000114748e-06, 9.332999999944747e-06, 1.0722000000296106e-05, 8.333000000249058e-06, 4.346999999960133e-06, 1.1902999999868769e-05, 8.916999999719621e-06, 6.264000000033576e-06, 9.0699999999444e-06, 9.749999999808523e-06, 1.0694999999838473e-05, 9.083000000131847e-06, 7.791999999895438e-06, 7.708000000050674e-06, 1.1556000000023658e-05, 6.068999999886415e-06, 1.1290999999857831e-05, 8.72200000001655e-06, 7.7769999999866e-06, 6.777999999929563e-06, 1.0195000000212673e-05, 7.098000000205218e-06, 1.1069999999779867e-05, 8.055999999978525e-06, 9.125000000054229e-06, 9.193999999990154e-06, 8.208000000120563e-06, 7.985999999959859e-06, 8.653000000080624e-06, 7.985999999959859e-06, 8.193999999850377e-06, 6.847999999948229e-06, 1.0930999999825275e-05, 7.5549999998258954e-06, 7.221999999806883e-06, 4.944000000062232e-06, 6.444000000271899e-06, 8.568999999791771e-06, 6.610999999878686e-06, 1.263899999992546e-05, 9.598000000110574e-06, 9.402999999963413e-06, 6.833000000039391e-06, 9.334000000027487e-06, 6.500000000020378e-06, 7.194000000154688e-06]</msg>
<status status="PASS" starttime="20201030 11:50:14.954" endtime="20201030 11:50:14.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.950" endtime="20201030 11:50:14.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.581" endtime="20201030 11:50:14.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.581" endtime="20201030 11:50:14.957"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.965" endtime="20201030 11:50:14.975"></status>
</kw>
<msg timestamp="20201030 11:50:14.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.963" endtime="20201030 11:50:14.975"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:14.978" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:14.976" endtime="20201030 11:50:14.978"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.979" endtime="20201030 11:50:14.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.961" endtime="20201030 11:50:14.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.959" endtime="20201030 11:50:14.981"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:14.988" endtime="20201030 11:50:15.301"></status>
</kw>
<msg timestamp="20201030 11:50:15.305" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.449299819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.449306083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:14.986" endtime="20201030 11:50:15.305"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.314" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.449299819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.449306083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.306" endtime="20201030 11:50:15.315"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.316" endtime="20201030 11:50:15.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.983" endtime="20201030 11:50:15.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.982" endtime="20201030 11:50:15.318"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.322" level="INFO">${RESULT} = [{'diff': 6.264000000033576e-06}, {'diff': 9.0699999999444e-06}, {'diff': 9.749999999808523e-06}, {'diff': 1.0694999999838473e-05}, {'diff': 9.083000000131847e-06}, {'diff': 7.791999999895438e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:15.319" endtime="20201030 11:50:15.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:15.327" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.264000000033576e-06, 9.0699999999444e-06, 9.749999999808523e-06, 1.0694999999838473e-05, 9.083000000131847e-06, 7.791999999895438e-06, 7.708000000050674e-06, 1.1556000000023658e-05, 6.0689...</msg>
<status status="PASS" starttime="20201030 11:50:15.323" endtime="20201030 11:50:15.327"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.331" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:15.330" endtime="20201030 11:50:15.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.334" level="INFO">VALUE: [6.264000000033576e-06, 9.0699999999444e-06, 9.749999999808523e-06, 1.0694999999838473e-05, 9.083000000131847e-06, 7.791999999895438e-06, 7.708000000050674e-06, 1.1556000000023658e-05, 6.068999999886415e-06, 1.1290999999857831e-05, 8.72200000001655e-06, 7.7769999999866e-06, 6.777999999929563e-06, 1.0195000000212673e-05, 7.098000000205218e-06, 1.1069999999779867e-05, 8.055999999978525e-06, 9.125000000054229e-06, 9.193999999990154e-06, 8.208000000120563e-06, 7.985999999959859e-06, 8.653000000080624e-06, 7.985999999959859e-06, 8.193999999850377e-06, 6.847999999948229e-06, 1.0930999999825275e-05, 7.5549999998258954e-06, 7.221999999806883e-06, 4.944000000062232e-06, 6.444000000271899e-06, 8.568999999791771e-06, 6.610999999878686e-06, 1.263899999992546e-05, 9.598000000110574e-06, 9.402999999963413e-06, 6.833000000039391e-06, 9.334000000027487e-06, 6.500000000020378e-06, 7.194000000154688e-06, 1.0486999999947955e-05, 7.48599999944588e-06, 7.985999999959859e-06, 7.917000000468022e-06, 1.084800000050734e-05, 1.0846999999536422e-05, 1.1082999999523224e-05, 6.847999999948229e-06, 4.1800000003533455e-06, 7.693999999780488e-06, 9.4170000002336e-06, 6.471999999924094e-06, 9.9169999998594e-06, 1.0194000000574022e-05, 1.1124999999445606e-05, 8.764000000383021e-06, 5.05499999992054e-06, 7.346999999491288e-06, 9.902999999589213e-06, 5.709000000742037e-06, 7.903000000197835e-06, 1.0709000000552749e-05, 1.1999999999900979e-05, 7.346999999491288e-06, 7.263999999729265e-06]</msg>
<status status="PASS" starttime="20201030 11:50:15.332" endtime="20201030 11:50:15.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.328" endtime="20201030 11:50:15.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.958" endtime="20201030 11:50:15.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:14.957" endtime="20201030 11:50:15.335"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.344" endtime="20201030 11:50:15.356"></status>
</kw>
<msg timestamp="20201030 11:50:15.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.342" endtime="20201030 11:50:15.356"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.359" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.357" endtime="20201030 11:50:15.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.360" endtime="20201030 11:50:15.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.339" endtime="20201030 11:50:15.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.338" endtime="20201030 11:50:15.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.368" endtime="20201030 11:50:15.682"></status>
</kw>
<msg timestamp="20201030 11:50:15.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804941347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804952278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.367" endtime="20201030 11:50:15.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.804941347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.804952278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.687" endtime="20201030 11:50:15.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.696" endtime="20201030 11:50:15.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.364" endtime="20201030 11:50:15.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.363" endtime="20201030 11:50:15.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:15.703" level="INFO">${RESULT} = [{'diff': 1.0930999999825275e-05}, {'diff': 7.5549999998258954e-06}, {'diff': 7.221999999806883e-06}, {'diff': 4.944000000062232e-06}, {'diff': 6.444000000271899e-06}, {'diff': 8.568999999791771e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:15.700" endtime="20201030 11:50:15.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:15.708" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.0930999999825275e-05, 7.5549999998258954e-06, 7.221999999806883e-06, 4.944000000062232e-06, 6.444000000271899e-06, 8.568999999791771e-06, 6.610999999878686e-06, 1.263899999992546e-05, 9.59...</msg>
<status status="PASS" starttime="20201030 11:50:15.704" endtime="20201030 11:50:15.709"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.713" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:15.712" endtime="20201030 11:50:15.713"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.715" level="INFO">VALUE: [1.0930999999825275e-05, 7.5549999998258954e-06, 7.221999999806883e-06, 4.944000000062232e-06, 6.444000000271899e-06, 8.568999999791771e-06, 6.610999999878686e-06, 1.263899999992546e-05, 9.598000000110574e-06, 9.402999999963413e-06, 6.833000000039391e-06, 9.334000000027487e-06, 6.500000000020378e-06, 7.194000000154688e-06, 1.0486999999947955e-05, 7.48599999944588e-06, 7.985999999959859e-06, 7.917000000468022e-06, 1.084800000050734e-05, 1.0846999999536422e-05, 1.1082999999523224e-05, 6.847999999948229e-06, 4.1800000003533455e-06, 7.693999999780488e-06, 9.4170000002336e-06, 6.471999999924094e-06, 9.9169999998594e-06, 1.0194000000574022e-05, 1.1124999999445606e-05, 8.764000000383021e-06, 5.05499999992054e-06, 7.346999999491288e-06, 9.902999999589213e-06, 5.709000000742037e-06, 7.903000000197835e-06, 1.0709000000552749e-05, 1.1999999999900979e-05, 7.346999999491288e-06, 7.263999999729265e-06, 8.513000000043291e-06, 8.487000000556577e-06, 8.499999999855845e-06, 8.139000000184637e-06, 7.513999999986254e-06, 5.290999999907342e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 1.2111000000203376e-05, 7.137999999962119e-06, 1.020799999995603e-05, 7.5700000001788226e-06, 8.638999999810437e-06, 7.63899999967066e-06, 7.764000000243243e-06, 7.056000000282836e-06, 5.389000000022293e-06, 9.625000000568207e-06, 1.0568999999627238e-05, 5.902999999918279e-06, 9.47199999945525e-06, 8.818999999604671e-06, 1.2124999999585384e-05, 7.125000000662851e-06, 7.847000000005266e-06]</msg>
<status status="PASS" starttime="20201030 11:50:15.714" endtime="20201030 11:50:15.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.710" endtime="20201030 11:50:15.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.336" endtime="20201030 11:50:15.717"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.336" endtime="20201030 11:50:15.717"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.724" endtime="20201030 11:50:15.736"></status>
</kw>
<msg timestamp="20201030 11:50:15.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.723" endtime="20201030 11:50:15.737"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:15.739" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:15.737" endtime="20201030 11:50:15.739"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.740" endtime="20201030 11:50:15.741"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.720" endtime="20201030 11:50:15.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.719" endtime="20201030 11:50:15.742"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:15.749" endtime="20201030 11:50:16.060"></status>
</kw>
<msg timestamp="20201030 11:50:16.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172576111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172582583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:15.747" endtime="20201030 11:50:16.064"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.172576111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.172582583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.065" endtime="20201030 11:50:16.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.075" endtime="20201030 11:50:16.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.745" endtime="20201030 11:50:16.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.743" endtime="20201030 11:50:16.078"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.082" level="INFO">${RESULT} = [{'diff': 6.471999999924094e-06}, {'diff': 9.9169999998594e-06}, {'diff': 1.0194000000574022e-05}, {'diff': 1.1124999999445606e-05}, {'diff': 8.764000000383021e-06}, {'diff': 5.05499999992054e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:16.078" endtime="20201030 11:50:16.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.088" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.471999999924094e-06, 9.9169999998594e-06, 1.0194000000574022e-05, 1.1124999999445606e-05, 8.764000000383021e-06, 5.05499999992054e-06, 7.346999999491288e-06, 9.902999999589213e-06, 5.70900...</msg>
<status status="PASS" starttime="20201030 11:50:16.083" endtime="20201030 11:50:16.089"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.093" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:16.092" endtime="20201030 11:50:16.093"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.095" level="INFO">VALUE: [6.471999999924094e-06, 9.9169999998594e-06, 1.0194000000574022e-05, 1.1124999999445606e-05, 8.764000000383021e-06, 5.05499999992054e-06, 7.346999999491288e-06, 9.902999999589213e-06, 5.709000000742037e-06, 7.903000000197835e-06, 1.0709000000552749e-05, 1.1999999999900979e-05, 7.346999999491288e-06, 7.263999999729265e-06, 8.513000000043291e-06, 8.487000000556577e-06, 8.499999999855845e-06, 8.139000000184637e-06, 7.513999999986254e-06, 5.290999999907342e-06, 6.9859999998200806e-06, 8.638999999810437e-06, 1.2111000000203376e-05, 7.137999999962119e-06, 1.020799999995603e-05, 7.5700000001788226e-06, 8.638999999810437e-06, 7.63899999967066e-06, 7.764000000243243e-06, 7.056000000282836e-06, 5.389000000022293e-06, 9.625000000568207e-06, 1.0568999999627238e-05, 5.902999999918279e-06, 9.47199999945525e-06, 8.818999999604671e-06, 1.2124999999585384e-05, 7.125000000662851e-06, 7.847000000005266e-06, 1.0778000000044585e-05, 7.221999999806883e-06, 6.041999999872871e-06, 5.69400000038911e-06, 1.105599999995377e-05, 6.19500000009765e-06, 9.707999999442052e-06, 9.679999999789857e-06, 5.555000000434518e-06, 1.0778000000044585e-05, 1.0624999999819806e-05, 1.1333999999862954e-05, 7.708000000050674e-06, 1.0639000000089993e-05, 7.472000000063872e-06, 7.791999999895438e-06, 9.11100000067222e-06, 6.403000000432257e-06, 8.347999999713807e-06, 8.000000000230045e-06, 6.972000000438072e-06, 1.0264000000148599e-05, 1.026399999926042e-05, 9.70900000041297e-06, 7.209000000507615e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.094" endtime="20201030 11:50:16.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.090" endtime="20201030 11:50:16.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.718" endtime="20201030 11:50:16.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:15.717" endtime="20201030 11:50:16.097"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.105" endtime="20201030 11:50:16.116"></status>
</kw>
<msg timestamp="20201030 11:50:16.117" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.103" endtime="20201030 11:50:16.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.119" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.118" endtime="20201030 11:50:16.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.120" endtime="20201030 11:50:16.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.101" endtime="20201030 11:50:16.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.099" endtime="20201030 11:50:16.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.129" endtime="20201030 11:50:16.444"></status>
</kw>
<msg timestamp="20201030 11:50:16.448" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543006458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543014028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.128" endtime="20201030 11:50:16.448"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.457" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.543006458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.543014028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.449" endtime="20201030 11:50:16.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.459" endtime="20201030 11:50:16.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.125" endtime="20201030 11:50:16.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.123" endtime="20201030 11:50:16.461"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.465" level="INFO">${RESULT} = [{'diff': 7.5700000001788226e-06}, {'diff': 8.638999999810437e-06}, {'diff': 7.63899999967066e-06}, {'diff': 7.764000000243243e-06}, {'diff': 7.056000000282836e-06}, {'diff': 5.389000000022293e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:16.462" endtime="20201030 11:50:16.465"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.470" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.5700000001788226e-06, 8.638999999810437e-06, 7.63899999967066e-06, 7.764000000243243e-06, 7.056000000282836e-06, 5.389000000022293e-06, 9.625000000568207e-06, 1.0568999999627238e-05, 5.902...</msg>
<status status="PASS" starttime="20201030 11:50:16.466" endtime="20201030 11:50:16.470"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.474" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:16.473" endtime="20201030 11:50:16.475"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.477" level="INFO">VALUE: [7.5700000001788226e-06, 8.638999999810437e-06, 7.63899999967066e-06, 7.764000000243243e-06, 7.056000000282836e-06, 5.389000000022293e-06, 9.625000000568207e-06, 1.0568999999627238e-05, 5.902999999918279e-06, 9.47199999945525e-06, 8.818999999604671e-06, 1.2124999999585384e-05, 7.125000000662851e-06, 7.847000000005266e-06, 1.0778000000044585e-05, 7.221999999806883e-06, 6.041999999872871e-06, 5.69400000038911e-06, 1.105599999995377e-05, 6.19500000009765e-06, 9.707999999442052e-06, 9.679999999789857e-06, 5.555000000434518e-06, 1.0778000000044585e-05, 1.0624999999819806e-05, 1.1333999999862954e-05, 7.708000000050674e-06, 1.0639000000089993e-05, 7.472000000063872e-06, 7.791999999895438e-06, 9.11100000067222e-06, 6.403000000432257e-06, 8.347999999713807e-06, 8.000000000230045e-06, 6.972000000438072e-06, 1.0264000000148599e-05, 1.026399999926042e-05, 9.70900000041297e-06, 7.209000000507615e-06, 6.901999999975317e-06, 9.846999999396644e-06, 8.485999999585658e-06, 7.48599999944588e-06, 1.1333000000668392e-05, 7.820000000435812e-06, 6.7770000002909114e-06, 6.8469999998654885e-06, 9.41600000015086e-06, 1.0639000000089993e-05, 9.76399999963462e-06, 8.097000000262256e-06, 9.152999999706424e-06, 7.847000000005266e-06, 8.069999999804622e-06, 5.4309999999446745e-06, 1.3069000000420772e-05, 1.2415999999682015e-05, 5.221999999527327e-06, 9.556000000188192e-06, 7.693999999780488e-06, 8.91600000052506e-06, 8.763999999494843e-06, 7.569000000096082e-06, 7.33400000019202e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.475" endtime="20201030 11:50:16.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.471" endtime="20201030 11:50:16.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.098" endtime="20201030 11:50:16.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.097" endtime="20201030 11:50:16.478"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.487" endtime="20201030 11:50:16.499"></status>
</kw>
<msg timestamp="20201030 11:50:16.499" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.485" endtime="20201030 11:50:16.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.501" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.500" endtime="20201030 11:50:16.502"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.503" endtime="20201030 11:50:16.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.482" endtime="20201030 11:50:16.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.480" endtime="20201030 11:50:16.505"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.511" endtime="20201030 11:50:16.828"></status>
</kw>
<msg timestamp="20201030 11:50:16.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913334708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913346042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.510" endtime="20201030 11:50:16.832"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.913334708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.913346042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:16.833" endtime="20201030 11:50:16.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.843" endtime="20201030 11:50:16.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.507" endtime="20201030 11:50:16.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.506" endtime="20201030 11:50:16.845"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:16.850" level="INFO">${RESULT} = [{'diff': 1.1333999999862954e-05}, {'diff': 7.708000000050674e-06}, {'diff': 1.0639000000089993e-05}, {'diff': 7.472000000063872e-06}, {'diff': 7.791999999895438e-06}, {'diff': 9.11100000067222e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:16.846" endtime="20201030 11:50:16.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:16.855" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1333999999862954e-05, 7.708000000050674e-06, 1.0639000000089993e-05, 7.472000000063872e-06, 7.791999999895438e-06, 9.11100000067222e-06, 6.403000000432257e-06, 8.347999999713807e-06, 8.000...</msg>
<status status="PASS" starttime="20201030 11:50:16.850" endtime="20201030 11:50:16.855"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.859" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:16.858" endtime="20201030 11:50:16.860"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.862" level="INFO">VALUE: [1.1333999999862954e-05, 7.708000000050674e-06, 1.0639000000089993e-05, 7.472000000063872e-06, 7.791999999895438e-06, 9.11100000067222e-06, 6.403000000432257e-06, 8.347999999713807e-06, 8.000000000230045e-06, 6.972000000438072e-06, 1.0264000000148599e-05, 1.026399999926042e-05, 9.70900000041297e-06, 7.209000000507615e-06, 6.901999999975317e-06, 9.846999999396644e-06, 8.485999999585658e-06, 7.48599999944588e-06, 1.1333000000668392e-05, 7.820000000435812e-06, 6.7770000002909114e-06, 6.8469999998654885e-06, 9.41600000015086e-06, 1.0639000000089993e-05, 9.76399999963462e-06, 8.097000000262256e-06, 9.152999999706424e-06, 7.847000000005266e-06, 8.069999999804622e-06, 5.4309999999446745e-06, 1.3069000000420772e-05, 1.2415999999682015e-05, 5.221999999527327e-06, 9.556000000188192e-06, 7.693999999780488e-06, 8.91600000052506e-06, 8.763999999494843e-06, 7.569000000096082e-06, 7.33400000019202e-06, 8.06900000061006e-06, 6.332999999969502e-06, 9.26400000000882e-06, 9.194999999628806e-06, 1.1193999999825621e-05, 6.34699999935151e-06, 1.020799999995603e-05, 9.319999999313211e-06, 1.2348000000272918e-05, 8.47200000020365e-06, 1.248600000014477e-05, 9.694000000060043e-06, 1.1278000000558563e-05, 1.1277999999670385e-05, 9.26400000000882e-06, 7.0690000004702824e-06, 4.762999999741169e-06, 7.347999999574029e-06, 8.47200000020365e-06, 1.0430999999755386e-05, 8.625000000428429e-06, 8.792000000035216e-06, 8.778000000653208e-06, 9.138999999436237e-06, 7.3890000003018486e-06]</msg>
<status status="PASS" starttime="20201030 11:50:16.860" endtime="20201030 11:50:16.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.856" endtime="20201030 11:50:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.479" endtime="20201030 11:50:16.863"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.479" endtime="20201030 11:50:16.863"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.871" endtime="20201030 11:50:16.883"></status>
</kw>
<msg timestamp="20201030 11:50:16.883" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.869" endtime="20201030 11:50:16.884"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:16.886" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:16.885" endtime="20201030 11:50:16.886"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.887" endtime="20201030 11:50:16.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.867" endtime="20201030 11:50:16.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.865" endtime="20201030 11:50:16.890"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:16.896" endtime="20201030 11:50:17.212"></status>
</kw>
<msg timestamp="20201030 11:50:17.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.28532875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.285336847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:16.894" endtime="20201030 11:50:17.216"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.226" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.28532875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.285336847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:17.217" endtime="20201030 11:50:17.226"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.227" endtime="20201030 11:50:17.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.892" endtime="20201030 11:50:17.229"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.890" endtime="20201030 11:50:17.230"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.234" level="INFO">${RESULT} = [{'diff': 8.097000000262256e-06}, {'diff': 9.152999999706424e-06}, {'diff': 7.847000000005266e-06}, {'diff': 8.069999999804622e-06}, {'diff': 5.4309999999446745e-06}, {'diff': 1.3069000000420772e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:17.230" endtime="20201030 11:50:17.234"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:17.240" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.097000000262256e-06, 9.152999999706424e-06, 7.847000000005266e-06, 8.069999999804622e-06, 5.4309999999446745e-06, 1.3069000000420772e-05, 1.2415999999682015e-05, 5.221999999527327e-06, 9.5...</msg>
<status status="PASS" starttime="20201030 11:50:17.235" endtime="20201030 11:50:17.240"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.244" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:17.243" endtime="20201030 11:50:17.244"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.247" level="INFO">VALUE: [8.097000000262256e-06, 9.152999999706424e-06, 7.847000000005266e-06, 8.069999999804622e-06, 5.4309999999446745e-06, 1.3069000000420772e-05, 1.2415999999682015e-05, 5.221999999527327e-06, 9.556000000188192e-06, 7.693999999780488e-06, 8.91600000052506e-06, 8.763999999494843e-06, 7.569000000096082e-06, 7.33400000019202e-06, 8.06900000061006e-06, 6.332999999969502e-06, 9.26400000000882e-06, 9.194999999628806e-06, 1.1193999999825621e-05, 6.34699999935151e-06, 1.020799999995603e-05, 9.319999999313211e-06, 1.2348000000272918e-05, 8.47200000020365e-06, 1.248600000014477e-05, 9.694000000060043e-06, 1.1278000000558563e-05, 1.1277999999670385e-05, 9.26400000000882e-06, 7.0690000004702824e-06, 4.762999999741169e-06, 7.347999999574029e-06, 8.47200000020365e-06, 1.0430999999755386e-05, 8.625000000428429e-06, 8.792000000035216e-06, 8.778000000653208e-06, 9.138999999436237e-06, 7.3890000003018486e-06, 1.040200000002045e-05, 8.27700000005649e-06, 6.360999999621697e-06, 7.597000000636456e-06, 1.0445000000025573e-05, 8.638000000615875e-06, 5.416999999674488e-06, 8.985999999211458e-06, 5.625000000009095e-06, 9.61100000029802e-06, 7.764000000243243e-06, 6.1389999999050815e-06, 6.9169999994400655e-06, 9.847000000284822e-06, 7.124999999774673e-06, 7.305999999651647e-06, 7.069999999664844e-06, 1.0681000000012375e-05, 7.33300000010928e-06, 9.000000000369823e-06, 9.638000000755653e-06, 6.499999999576289e-06, 5.401999999321561e-06, 9.792000000174994e-06, 8.486000000473837e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.245" endtime="20201030 11:50:17.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.241" endtime="20201030 11:50:17.247"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.864" endtime="20201030 11:50:17.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:16.864" endtime="20201030 11:50:17.248"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.256" endtime="20201030 11:50:17.267"></status>
</kw>
<msg timestamp="20201030 11:50:17.268" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.254" endtime="20201030 11:50:17.268"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.270" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.269" endtime="20201030 11:50:17.270"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.271" endtime="20201030 11:50:17.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.252" endtime="20201030 11:50:17.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.250" endtime="20201030 11:50:17.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.281" endtime="20201030 11:50:17.601"></status>
</kw>
<msg timestamp="20201030 11:50:17.604" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.65669725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.656706944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:17.279" endtime="20201030 11:50:17.605"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.614" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.65669725, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.656706944, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:17.605" endtime="20201030 11:50:17.615"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.615" endtime="20201030 11:50:17.617"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.276" endtime="20201030 11:50:17.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.274" endtime="20201030 11:50:17.618"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:17.622" level="INFO">${RESULT} = [{'diff': 9.694000000060043e-06}, {'diff': 1.1278000000558563e-05}, {'diff': 1.1277999999670385e-05}, {'diff': 9.26400000000882e-06}, {'diff': 7.0690000004702824e-06}, {'diff': 4.762999999741169e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:17.619" endtime="20201030 11:50:17.622"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:17.627" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.694000000060043e-06, 1.1278000000558563e-05, 1.1277999999670385e-05, 9.26400000000882e-06, 7.0690000004702824e-06, 4.762999999741169e-06, 7.347999999574029e-06, 8.47200000020365e-06, 1.043...</msg>
<status status="PASS" starttime="20201030 11:50:17.623" endtime="20201030 11:50:17.627"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.631" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:17.630" endtime="20201030 11:50:17.632"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.634" level="INFO">VALUE: [9.694000000060043e-06, 1.1278000000558563e-05, 1.1277999999670385e-05, 9.26400000000882e-06, 7.0690000004702824e-06, 4.762999999741169e-06, 7.347999999574029e-06, 8.47200000020365e-06, 1.0430999999755386e-05, 8.625000000428429e-06, 8.792000000035216e-06, 8.778000000653208e-06, 9.138999999436237e-06, 7.3890000003018486e-06, 1.040200000002045e-05, 8.27700000005649e-06, 6.360999999621697e-06, 7.597000000636456e-06, 1.0445000000025573e-05, 8.638000000615875e-06, 5.416999999674488e-06, 8.985999999211458e-06, 5.625000000009095e-06, 9.61100000029802e-06, 7.764000000243243e-06, 6.1389999999050815e-06, 6.9169999994400655e-06, 9.847000000284822e-06, 7.124999999774673e-06, 7.305999999651647e-06, 7.069999999664844e-06, 1.0681000000012375e-05, 7.33300000010928e-06, 9.000000000369823e-06, 9.638000000755653e-06, 6.499999999576289e-06, 5.401999999321561e-06, 9.792000000174994e-06, 8.486000000473837e-06, 1.1569999999849756e-05, 1.0611000000437798e-05, 6.34699999935151e-06, 1.070799999958183e-05, 9.846999999396644e-06, 1.2209000000318326e-05, 1.1417000000513156e-05, 8.000000000230045e-06, 8.597999999970796e-06, 5.152999999147312e-06, 8.000000000230045e-06, 8.112000000615183e-06, 9.985999999351236e-06, 9.41600000015086e-06, 9.277999999390829e-06, 9.485999999725436e-06, 5.930999999570474e-06, 7.68100000048122e-06, 6.972000000438072e-06, 8.361000000789431e-06, 6.555999999768858e-06, 8.207999999676474e-06, 9.334000000471576e-06, 7.125000000662851e-06, 9.291999999661016e-06]</msg>
<status status="PASS" starttime="20201030 11:50:17.632" endtime="20201030 11:50:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.628" endtime="20201030 11:50:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.249" endtime="20201030 11:50:17.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.248" endtime="20201030 11:50:17.636"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.644" endtime="20201030 11:50:17.654"></status>
</kw>
<msg timestamp="20201030 11:50:17.655" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.642" endtime="20201030 11:50:17.655"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.657" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:17.656" endtime="20201030 11:50:17.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.658" endtime="20201030 11:50:17.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.640" endtime="20201030 11:50:17.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.638" endtime="20201030 11:50:17.661"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:17.667" endtime="20201030 11:50:17.986"></status>
</kw>
<msg timestamp="20201030 11:50:17.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.030600528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.030606667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.665" endtime="20201030 11:50:17.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:17.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.030600528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.030606667, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:17.991" endtime="20201030 11:50:18.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.001" endtime="20201030 11:50:18.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.663" endtime="20201030 11:50:18.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.661" endtime="20201030 11:50:18.003"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.007" level="INFO">${RESULT} = [{'diff': 6.1389999999050815e-06}, {'diff': 6.9169999994400655e-06}, {'diff': 9.847000000284822e-06}, {'diff': 7.124999999774673e-06}, {'diff': 7.305999999651647e-06}, {'diff': 7.069999999664844e-06},...</msg>
<status status="PASS" starttime="20201030 11:50:18.004" endtime="20201030 11:50:18.008"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:18.013" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.1389999999050815e-06, 6.9169999994400655e-06, 9.847000000284822e-06, 7.124999999774673e-06, 7.305999999651647e-06, 7.069999999664844e-06, 1.0681000000012375e-05, 7.33300000010928e-06, 9.00...</msg>
<status status="PASS" starttime="20201030 11:50:18.008" endtime="20201030 11:50:18.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.017" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:18.016" endtime="20201030 11:50:18.018"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.020" level="INFO">VALUE: [6.1389999999050815e-06, 6.9169999994400655e-06, 9.847000000284822e-06, 7.124999999774673e-06, 7.305999999651647e-06, 7.069999999664844e-06, 1.0681000000012375e-05, 7.33300000010928e-06, 9.000000000369823e-06, 9.638000000755653e-06, 6.499999999576289e-06, 5.401999999321561e-06, 9.792000000174994e-06, 8.486000000473837e-06, 1.1569999999849756e-05, 1.0611000000437798e-05, 6.34699999935151e-06, 1.070799999958183e-05, 9.846999999396644e-06, 1.2209000000318326e-05, 1.1417000000513156e-05, 8.000000000230045e-06, 8.597999999970796e-06, 5.152999999147312e-06, 8.000000000230045e-06, 8.112000000615183e-06, 9.985999999351236e-06, 9.41600000015086e-06, 9.277999999390829e-06, 9.485999999725436e-06, 5.930999999570474e-06, 7.68100000048122e-06, 6.972000000438072e-06, 8.361000000789431e-06, 6.555999999768858e-06, 8.207999999676474e-06, 9.334000000471576e-06, 7.125000000662851e-06, 9.291999999661016e-06, 4.986999999623265e-06, 6.778000000373652e-06, 1.11940000007138e-05, 6.638999999530881e-06, 7.486000000334059e-06, 8.709000000273193e-06, 8.486999999668399e-06, 1.020799999995603e-05, 7.915999999497103e-06, 8.847000000145044e-06, 1.21939999999654e-05, 1.1221999999477816e-05, 8.417000000093822e-06, 7.513999999986254e-06, 7.499999999716067e-06, 8.833999999957598e-06, 9.95800000058722e-06, 8.47200000020365e-06, 8.97199999982945e-06, 5.805000000691507e-06, 7.068999999582104e-06, 9.000000000369823e-06, 7.5700000001788226e-06, 8.499999999855845e-06, 7.499999999716067e-06]</msg>
<status status="PASS" starttime="20201030 11:50:18.018" endtime="20201030 11:50:18.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.014" endtime="20201030 11:50:18.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.637" endtime="20201030 11:50:18.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:17.636" endtime="20201030 11:50:18.021"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.029" endtime="20201030 11:50:18.040"></status>
</kw>
<msg timestamp="20201030 11:50:18.040" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.027" endtime="20201030 11:50:18.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.042" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.041" endtime="20201030 11:50:18.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.043" endtime="20201030 11:50:18.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.025" endtime="20201030 11:50:18.046"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.023" endtime="20201030 11:50:18.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.052" endtime="20201030 11:50:18.370"></status>
</kw>
<msg timestamp="20201030 11:50:18.374" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.404966319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.404974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.051" endtime="20201030 11:50:18.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.404966319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.404974431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.375" endtime="20201030 11:50:18.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.385" endtime="20201030 11:50:18.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.048" endtime="20201030 11:50:18.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.047" endtime="20201030 11:50:18.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.392" level="INFO">${RESULT} = [{'diff': 8.112000000615183e-06}, {'diff': 9.985999999351236e-06}, {'diff': 9.41600000015086e-06}, {'diff': 9.277999999390829e-06}, {'diff': 9.485999999725436e-06}, {'diff': 5.930999999570474e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:18.388" endtime="20201030 11:50:18.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:18.397" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.112000000615183e-06, 9.985999999351236e-06, 9.41600000015086e-06, 9.277999999390829e-06, 9.485999999725436e-06, 5.930999999570474e-06, 7.68100000048122e-06, 6.972000000438072e-06, 8.361000...</msg>
<status status="PASS" starttime="20201030 11:50:18.393" endtime="20201030 11:50:18.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.401" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:18.400" endtime="20201030 11:50:18.402"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.404" level="INFO">VALUE: [8.112000000615183e-06, 9.985999999351236e-06, 9.41600000015086e-06, 9.277999999390829e-06, 9.485999999725436e-06, 5.930999999570474e-06, 7.68100000048122e-06, 6.972000000438072e-06, 8.361000000789431e-06, 6.555999999768858e-06, 8.207999999676474e-06, 9.334000000471576e-06, 7.125000000662851e-06, 9.291999999661016e-06, 4.986999999623265e-06, 6.778000000373652e-06, 1.11940000007138e-05, 6.638999999530881e-06, 7.486000000334059e-06, 8.709000000273193e-06, 8.486999999668399e-06, 1.020799999995603e-05, 7.915999999497103e-06, 8.847000000145044e-06, 1.21939999999654e-05, 1.1221999999477816e-05, 8.417000000093822e-06, 7.513999999986254e-06, 7.499999999716067e-06, 8.833999999957598e-06, 9.95800000058722e-06, 8.47200000020365e-06, 8.97199999982945e-06, 5.805000000691507e-06, 7.068999999582104e-06, 9.000000000369823e-06, 7.5700000001788226e-06, 8.499999999855845e-06, 7.499999999716067e-06, 1.2708999999944126e-05, 8.055000000339874e-06, 6.695000000611628e-06, 9.207999999816252e-06, 7.625000000288651e-06, 6.568999999956304e-06, 5.1389999997653035e-06, 1.1277999999670385e-05, 1.0568999999627238e-05, 8.264000000757221e-06, 8.9170000006078e-06, 6.29200000012986e-06, 8.62499999954025e-06, 8.945000000259995e-06, 1.0000000000509601e-05, 9.0699999999444e-06, 8.02799999988224e-06, 8.611000000158242e-06, 8.347000000519245e-06, 8.554999999965673e-06, 6.555999999768858e-06, 1.2929999999578001e-05, 7.209000000507615e-06, 8.915999999636881e-06, 7.6120000001012045e-06]</msg>
<status status="PASS" starttime="20201030 11:50:18.402" endtime="20201030 11:50:18.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.398" endtime="20201030 11:50:18.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.022" endtime="20201030 11:50:18.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.021" endtime="20201030 11:50:18.406"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.414" endtime="20201030 11:50:18.424"></status>
</kw>
<msg timestamp="20201030 11:50:18.424" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.412" endtime="20201030 11:50:18.425"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.427" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.425" endtime="20201030 11:50:18.427"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.428" endtime="20201030 11:50:18.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.409" endtime="20201030 11:50:18.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.408" endtime="20201030 11:50:18.430"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.437" endtime="20201030 11:50:18.749"></status>
</kw>
<msg timestamp="20201030 11:50:18.752" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.781744542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.781755764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.435" endtime="20201030 11:50:18.753"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.762" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.781744542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.781755764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:18.753" endtime="20201030 11:50:18.762"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.763" endtime="20201030 11:50:18.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.433" endtime="20201030 11:50:18.765"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.431" endtime="20201030 11:50:18.766"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:18.770" level="INFO">${RESULT} = [{'diff': 1.1221999999477816e-05}, {'diff': 8.417000000093822e-06}, {'diff': 7.513999999986254e-06}, {'diff': 7.499999999716067e-06}, {'diff': 8.833999999957598e-06}, {'diff': 9.95800000058722e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:18.767" endtime="20201030 11:50:18.770"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:18.775" level="INFO">${GPIO_OVERHEAD} = {'diff': [1.1221999999477816e-05, 8.417000000093822e-06, 7.513999999986254e-06, 7.499999999716067e-06, 8.833999999957598e-06, 9.95800000058722e-06, 8.47200000020365e-06, 8.97199999982945e-06, 5.805000...</msg>
<status status="PASS" starttime="20201030 11:50:18.771" endtime="20201030 11:50:18.776"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.780" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:18.779" endtime="20201030 11:50:18.780"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.782" level="INFO">VALUE: [1.1221999999477816e-05, 8.417000000093822e-06, 7.513999999986254e-06, 7.499999999716067e-06, 8.833999999957598e-06, 9.95800000058722e-06, 8.47200000020365e-06, 8.97199999982945e-06, 5.805000000691507e-06, 7.068999999582104e-06, 9.000000000369823e-06, 7.5700000001788226e-06, 8.499999999855845e-06, 7.499999999716067e-06, 1.2708999999944126e-05, 8.055000000339874e-06, 6.695000000611628e-06, 9.207999999816252e-06, 7.625000000288651e-06, 6.568999999956304e-06, 5.1389999997653035e-06, 1.1277999999670385e-05, 1.0568999999627238e-05, 8.264000000757221e-06, 8.9170000006078e-06, 6.29200000012986e-06, 8.62499999954025e-06, 8.945000000259995e-06, 1.0000000000509601e-05, 9.0699999999444e-06, 8.02799999988224e-06, 8.611000000158242e-06, 8.347000000519245e-06, 8.554999999965673e-06, 6.555999999768858e-06, 1.2929999999578001e-05, 7.209000000507615e-06, 8.915999999636881e-06, 7.6120000001012045e-06, 9.9169999998594e-06, 9.749999999364434e-06, 1.0846999999536422e-05, 7.068999999582104e-06, 6.972000000438072e-06, 9.207999999816252e-06, 1.0194999999768584e-05, 1.1291999999940572e-05, 1.1388999999972782e-05, 7.847000000005266e-06, 6.124999999634895e-06, 8.290999999438498e-06, 6.638999999530881e-06, 7.263999999729265e-06, 1.08470000004246e-05, 1.1194999999908362e-05, 6.528000000116663e-06, 1.2348000000272918e-05, 9.486999999808177e-06, 6.471999999924094e-06, 1.0568999999627238e-05, 8.12499999991445e-06, 1.0346999999910622e-05, 6.6939999996407096e-06, 6.5000000004644676e-06]</msg>
<status status="PASS" starttime="20201030 11:50:18.781" endtime="20201030 11:50:18.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.776" endtime="20201030 11:50:18.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.406" endtime="20201030 11:50:18.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.406" endtime="20201030 11:50:18.784"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.791" endtime="20201030 11:50:18.803"></status>
</kw>
<msg timestamp="20201030 11:50:18.804" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.790" endtime="20201030 11:50:18.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:18.806" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:18.805" endtime="20201030 11:50:18.806"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.807" endtime="20201030 11:50:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.787" endtime="20201030 11:50:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.786" endtime="20201030 11:50:18.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:18.816" endtime="20201030 11:50:19.129"></status>
</kw>
<msg timestamp="20201030 11:50:19.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.156943458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.15694975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:18.814" endtime="20201030 11:50:19.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.143" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.156943458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.15694975, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:50:19.134" endtime="20201030 11:50:19.143"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.144" endtime="20201030 11:50:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.812" endtime="20201030 11:50:19.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.810" endtime="20201030 11:50:19.147"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.151" level="INFO">${RESULT} = [{'diff': 6.29200000012986e-06}, {'diff': 8.62499999954025e-06}, {'diff': 8.945000000259995e-06}, {'diff': 1.0000000000509601e-05}, {'diff': 9.0699999999444e-06}, {'diff': 8.02799999988224e-06}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:50:19.147" endtime="20201030 11:50:19.151"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.156" level="INFO">${GPIO_OVERHEAD} = {'diff': [6.29200000012986e-06, 8.62499999954025e-06, 8.945000000259995e-06, 1.0000000000509601e-05, 9.0699999999444e-06, 8.02799999988224e-06, 8.611000000158242e-06, 8.347000000519245e-06, 8.55499999...</msg>
<status status="PASS" starttime="20201030 11:50:19.152" endtime="20201030 11:50:19.157"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.161" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:19.160" endtime="20201030 11:50:19.161"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.163" level="INFO">VALUE: [6.29200000012986e-06, 8.62499999954025e-06, 8.945000000259995e-06, 1.0000000000509601e-05, 9.0699999999444e-06, 8.02799999988224e-06, 8.611000000158242e-06, 8.347000000519245e-06, 8.554999999965673e-06, 6.555999999768858e-06, 1.2929999999578001e-05, 7.209000000507615e-06, 8.915999999636881e-06, 7.6120000001012045e-06, 9.9169999998594e-06, 9.749999999364434e-06, 1.0846999999536422e-05, 7.068999999582104e-06, 6.972000000438072e-06, 9.207999999816252e-06, 1.0194999999768584e-05, 1.1291999999940572e-05, 1.1388999999972782e-05, 7.847000000005266e-06, 6.124999999634895e-06, 8.290999999438498e-06, 6.638999999530881e-06, 7.263999999729265e-06, 1.08470000004246e-05, 1.1194999999908362e-05, 6.528000000116663e-06, 1.2348000000272918e-05, 9.486999999808177e-06, 6.471999999924094e-06, 1.0568999999627238e-05, 8.12499999991445e-06, 1.0346999999910622e-05, 6.6939999996407096e-06, 6.5000000004644676e-06, 8.62499999954025e-06, 9.430999999615608e-06, 1.2568999999906794e-05, 4.416000000340148e-06, 8.679999999650079e-06, 9.804999999474262e-06, 8.847000000145044e-06, 9.846999999396644e-06, 9.986000000239414e-06, 8.499999999855845e-06, 1.0138000000381453e-05, 5.999999999950489e-06, 1.2014000000171166e-05, 1.1819000000024005e-05, 7.124999999774673e-06, 5.917000000188466e-06, 1.0334000000611354e-05, 7.444000000411677e-06, 6.056000000143058e-06, 9.208999999898992e-06, 1.1972000000248784e-05, 5.125000000383295e-06, 1.0124999999305828e-05, 9.056000000562392e-06, 1.1263000000205636e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.162" endtime="20201030 11:50:19.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.158" endtime="20201030 11:50:19.164"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.784" endtime="20201030 11:50:19.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:18.784" endtime="20201030 11:50:19.165"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.173" endtime="20201030 11:50:19.184"></status>
</kw>
<msg timestamp="20201030 11:50:19.184" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.171" endtime="20201030 11:50:19.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.187" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.185" endtime="20201030 11:50:19.187"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.188" endtime="20201030 11:50:19.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.169" endtime="20201030 11:50:19.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.167" endtime="20201030 11:50:19.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.197" endtime="20201030 11:50:19.517"></status>
</kw>
<msg timestamp="20201030 11:50:19.520" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.530530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.530538694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.195" endtime="20201030 11:50:19.521"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.530" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.530530403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.530538694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.522" endtime="20201030 11:50:19.531"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.532" endtime="20201030 11:50:19.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.193" endtime="20201030 11:50:19.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.191" endtime="20201030 11:50:19.534"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.538" level="INFO">${RESULT} = [{'diff': 8.290999999438498e-06}, {'diff': 6.638999999530881e-06}, {'diff': 7.263999999729265e-06}, {'diff': 1.08470000004246e-05}, {'diff': 1.1194999999908362e-05}, {'diff': 6.528000000116663e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:19.535" endtime="20201030 11:50:19.539"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.543" level="INFO">${GPIO_OVERHEAD} = {'diff': [8.290999999438498e-06, 6.638999999530881e-06, 7.263999999729265e-06, 1.08470000004246e-05, 1.1194999999908362e-05, 6.528000000116663e-06, 1.2348000000272918e-05, 9.486999999808177e-06, 6.471...</msg>
<status status="PASS" starttime="20201030 11:50:19.539" endtime="20201030 11:50:19.543"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.547" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:19.546" endtime="20201030 11:50:19.548"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.550" level="INFO">VALUE: [8.290999999438498e-06, 6.638999999530881e-06, 7.263999999729265e-06, 1.08470000004246e-05, 1.1194999999908362e-05, 6.528000000116663e-06, 1.2348000000272918e-05, 9.486999999808177e-06, 6.471999999924094e-06, 1.0568999999627238e-05, 8.12499999991445e-06, 1.0346999999910622e-05, 6.6939999996407096e-06, 6.5000000004644676e-06, 8.62499999954025e-06, 9.430999999615608e-06, 1.2568999999906794e-05, 4.416000000340148e-06, 8.679999999650079e-06, 9.804999999474262e-06, 8.847000000145044e-06, 9.846999999396644e-06, 9.986000000239414e-06, 8.499999999855845e-06, 1.0138000000381453e-05, 5.999999999950489e-06, 1.2014000000171166e-05, 1.1819000000024005e-05, 7.124999999774673e-06, 5.917000000188466e-06, 1.0334000000611354e-05, 7.444000000411677e-06, 6.056000000143058e-06, 9.208999999898992e-06, 1.1972000000248784e-05, 5.125000000383295e-06, 1.0124999999305828e-05, 9.056000000562392e-06, 1.1263000000205636e-05, 7.055000001088274e-06, 7.013999999472276e-06, 8.846999998368688e-06, 7.34699999860311e-06, 6.276999998888755e-06, 6.985999998931902e-06, 7.138999999156681e-06, 5.7770000001511335e-06, 1.0987000001350111e-05, 1.0583999999980165e-05, 5.499999998548333e-06, 7.18100000085542e-06, 8.749999999224656e-06, 6.917000000328244e-06, 5.387999999939552e-06, 1.0277999999530607e-05, 9.736000000870604e-06, 7.082999999852291e-06, 7.249999999459078e-06, 1.0416000000290637e-05, 6.055000000060318e-06, 1.0430999999755386e-05, 5.208000001033497e-06, 7.916999999579843e-06, 6.666999999183076e-06]</msg>
<status status="PASS" starttime="20201030 11:50:19.549" endtime="20201030 11:50:19.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.544" endtime="20201030 11:50:19.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.166" endtime="20201030 11:50:19.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.165" endtime="20201030 11:50:19.551"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.560" endtime="20201030 11:50:19.571"></status>
</kw>
<msg timestamp="20201030 11:50:19.571" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.558" endtime="20201030 11:50:19.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.575" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.572" endtime="20201030 11:50:19.576"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.577" endtime="20201030 11:50:19.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.555" endtime="20201030 11:50:19.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.553" endtime="20201030 11:50:19.583"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.597" endtime="20201030 11:50:19.917"></status>
</kw>
<msg timestamp="20201030 11:50:19.921" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.897811042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.897817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.594" endtime="20201030 11:50:19.921"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.897811042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.897817042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.922" endtime="20201030 11:50:19.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.932" endtime="20201030 11:50:19.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.588" endtime="20201030 11:50:19.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.585" endtime="20201030 11:50:19.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:19.939" level="INFO">${RESULT} = [{'diff': 5.999999999950489e-06}, {'diff': 1.2014000000171166e-05}, {'diff': 1.1819000000024005e-05}, {'diff': 7.124999999774673e-06}, {'diff': 5.917000000188466e-06}, {'diff': 1.0334000000611354e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:19.935" endtime="20201030 11:50:19.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:19.944" level="INFO">${GPIO_OVERHEAD} = {'diff': [5.999999999950489e-06, 1.2014000000171166e-05, 1.1819000000024005e-05, 7.124999999774673e-06, 5.917000000188466e-06, 1.0334000000611354e-05, 7.444000000411677e-06, 6.056000000143058e-06, 9.2...</msg>
<status status="PASS" starttime="20201030 11:50:19.940" endtime="20201030 11:50:19.944"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.948" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:19.947" endtime="20201030 11:50:19.949"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.951" level="INFO">VALUE: [5.999999999950489e-06, 1.2014000000171166e-05, 1.1819000000024005e-05, 7.124999999774673e-06, 5.917000000188466e-06, 1.0334000000611354e-05, 7.444000000411677e-06, 6.056000000143058e-06, 9.208999999898992e-06, 1.1972000000248784e-05, 5.125000000383295e-06, 1.0124999999305828e-05, 9.056000000562392e-06, 1.1263000000205636e-05, 7.055000001088274e-06, 7.013999999472276e-06, 8.846999998368688e-06, 7.34699999860311e-06, 6.276999998888755e-06, 6.985999998931902e-06, 7.138999999156681e-06, 5.7770000001511335e-06, 1.0987000001350111e-05, 1.0583999999980165e-05, 5.499999998548333e-06, 7.18100000085542e-06, 8.749999999224656e-06, 6.917000000328244e-06, 5.387999999939552e-06, 1.0277999999530607e-05, 9.736000000870604e-06, 7.082999999852291e-06, 7.249999999459078e-06, 1.0416000000290637e-05, 6.055000000060318e-06, 1.0430999999755386e-05, 5.208000001033497e-06, 7.916999999579843e-06, 6.666999999183076e-06, 9.70800000033023e-06, 6.1389999999050815e-06, 8.278000001027408e-06, 1.0556000001216148e-05, 6.487000000277021e-06, 1.213900000074375e-05, 6.8469999998654885e-06, 1.1054999999871029e-05, 8.291000000326676e-06, 7.5549999998258954e-06, 4.8050000014399075e-06, 9.555999998411835e-06, 1.1860999999058208e-05, 9.485999999725436e-06, 9.542000000806183e-06, 8.417000000093822e-06, 8.790999999064297e-06, 1.0070000000084178e-05, 8.417000000093822e-06, 7.055999999394658e-06, 1.0264000000148599e-05, 1.2806000000864515e-05, 5.320000001418634e-06, 5.819000000073515e-06, 1.0346999999910622e-05]</msg>
<status status="PASS" starttime="20201030 11:50:19.949" endtime="20201030 11:50:19.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.945" endtime="20201030 11:50:19.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.552" endtime="20201030 11:50:19.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.552" endtime="20201030 11:50:19.952"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.960" endtime="20201030 11:50:19.972"></status>
</kw>
<msg timestamp="20201030 11:50:19.972" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.958" endtime="20201030 11:50:19.972"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:19.975" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:19.973" endtime="20201030 11:50:19.975"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.976" endtime="20201030 11:50:19.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.956" endtime="20201030 11:50:19.978"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.954" endtime="20201030 11:50:19.978"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:19.984" endtime="20201030 11:50:20.299"></status>
</kw>
<msg timestamp="20201030 11:50:20.302" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.268867847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.268875028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:19.983" endtime="20201030 11:50:20.303"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.268867847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.268875028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.304" endtime="20201030 11:50:20.313"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.313" endtime="20201030 11:50:20.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.980" endtime="20201030 11:50:20.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.979" endtime="20201030 11:50:20.316"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.321" level="INFO">${RESULT} = [{'diff': 7.18100000085542e-06}, {'diff': 8.749999999224656e-06}, {'diff': 6.917000000328244e-06}, {'diff': 5.387999999939552e-06}, {'diff': 1.0277999999530607e-05}, {'diff': 9.736000000870604e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:20.317" endtime="20201030 11:50:20.321"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:20.326" level="INFO">${GPIO_OVERHEAD} = {'diff': [7.18100000085542e-06, 8.749999999224656e-06, 6.917000000328244e-06, 5.387999999939552e-06, 1.0277999999530607e-05, 9.736000000870604e-06, 7.082999999852291e-06, 7.249999999459078e-06, 1.0416...</msg>
<status status="PASS" starttime="20201030 11:50:20.322" endtime="20201030 11:50:20.326"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.330" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:20.329" endtime="20201030 11:50:20.331"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.333" level="INFO">VALUE: [7.18100000085542e-06, 8.749999999224656e-06, 6.917000000328244e-06, 5.387999999939552e-06, 1.0277999999530607e-05, 9.736000000870604e-06, 7.082999999852291e-06, 7.249999999459078e-06, 1.0416000000290637e-05, 6.055000000060318e-06, 1.0430999999755386e-05, 5.208000001033497e-06, 7.916999999579843e-06, 6.666999999183076e-06, 9.70800000033023e-06, 6.1389999999050815e-06, 8.278000001027408e-06, 1.0556000001216148e-05, 6.487000000277021e-06, 1.213900000074375e-05, 6.8469999998654885e-06, 1.1054999999871029e-05, 8.291000000326676e-06, 7.5549999998258954e-06, 4.8050000014399075e-06, 9.555999998411835e-06, 1.1860999999058208e-05, 9.485999999725436e-06, 9.542000000806183e-06, 8.417000000093822e-06, 8.790999999064297e-06, 1.0070000000084178e-05, 8.417000000093822e-06, 7.055999999394658e-06, 1.0264000000148599e-05, 1.2806000000864515e-05, 5.320000001418634e-06, 5.819000000073515e-06, 1.0346999999910622e-05, 6.610999999878686e-06, 6.791999998867482e-06, 7.417000000842222e-06, 1.0750000001280569e-05, 6.055000000060318e-06, 8.347000001407423e-06, 1.016699999922821e-05, 8.819999999687411e-06, 7.790999999812698e-06, 9.485999999725436e-06, 9.054999999591473e-06, 9.834000000097376e-06, 1.2625000000099362e-05, 1.1916000000056215e-05, 6.056000000143058e-06, 1.070899999966457e-05, 1.1417000001401334e-05, 8.459000000016204e-06, 8.125000000802629e-06, 8.639000000698616e-06, 1.0042000001320162e-05, 8.347999999713807e-06, 9.721999999712239e-06, 7.999999999341867e-06, 9.915999999776659e-06]</msg>
<status status="PASS" starttime="20201030 11:50:20.331" endtime="20201030 11:50:20.333"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.327" endtime="20201030 11:50:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.953" endtime="20201030 11:50:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:19.953" endtime="20201030 11:50:20.334"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.342" endtime="20201030 11:50:20.353"></status>
</kw>
<msg timestamp="20201030 11:50:20.353" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.340" endtime="20201030 11:50:20.353"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.356" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.354" endtime="20201030 11:50:20.356"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.357" endtime="20201030 11:50:20.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.338" endtime="20201030 11:50:20.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.336" endtime="20201030 11:50:20.359"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.367" endtime="20201030 11:50:20.678"></status>
</kw>
<msg timestamp="20201030 11:50:20.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.645335319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.645344875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.365" endtime="20201030 11:50:20.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.691" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.645335319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.645344875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.683" endtime="20201030 11:50:20.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.693" endtime="20201030 11:50:20.694"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.362" endtime="20201030 11:50:20.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.360" endtime="20201030 11:50:20.695"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:20.699" level="INFO">${RESULT} = [{'diff': 9.555999998411835e-06}, {'diff': 1.1860999999058208e-05}, {'diff': 9.485999999725436e-06}, {'diff': 9.542000000806183e-06}, {'diff': 8.417000000093822e-06}, {'diff': 8.790999999064297e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:50:20.696" endtime="20201030 11:50:20.700"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:20.704" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.555999998411835e-06, 1.1860999999058208e-05, 9.485999999725436e-06, 9.542000000806183e-06, 8.417000000093822e-06, 8.790999999064297e-06, 1.0070000000084178e-05, 8.417000000093822e-06, 7.05...</msg>
<status status="PASS" starttime="20201030 11:50:20.701" endtime="20201030 11:50:20.705"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.709" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:20.708" endtime="20201030 11:50:20.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.712" level="INFO">VALUE: [9.555999998411835e-06, 1.1860999999058208e-05, 9.485999999725436e-06, 9.542000000806183e-06, 8.417000000093822e-06, 8.790999999064297e-06, 1.0070000000084178e-05, 8.417000000093822e-06, 7.055999999394658e-06, 1.0264000000148599e-05, 1.2806000000864515e-05, 5.320000001418634e-06, 5.819000000073515e-06, 1.0346999999910622e-05, 6.610999999878686e-06, 6.791999998867482e-06, 7.417000000842222e-06, 1.0750000001280569e-05, 6.055000000060318e-06, 8.347000001407423e-06, 1.016699999922821e-05, 8.819999999687411e-06, 7.790999999812698e-06, 9.485999999725436e-06, 9.054999999591473e-06, 9.834000000097376e-06, 1.2625000000099362e-05, 1.1916000000056215e-05, 6.056000000143058e-06, 1.070899999966457e-05, 1.1417000001401334e-05, 8.459000000016204e-06, 8.125000000802629e-06, 8.639000000698616e-06, 1.0042000001320162e-05, 8.347999999713807e-06, 9.721999999712239e-06, 7.999999999341867e-06, 9.915999999776659e-06, 8.486000000473837e-06, 8.680000000538257e-06, 1.1125000000333785e-05, 1.1153000000874158e-05, 6.278000000747852e-06, 8.77799999976503e-06, 1.1694000001227778e-05, 6.764000000103465e-06, 8.041999999264249e-06, 6.69499999972345e-06, 7.708000000050674e-06, 4.915999999965948e-06, 7.625000000288651e-06, 4.625000000757495e-06, 1.0193999999685843e-05, 8.48599999869748e-06, 8.9170000006078e-06, 9.054999999591473e-06, 9.986000000239414e-06, 1.158300000092538e-05, 7.415999998983125e-06, 7.318999999839093e-06, 7.4310000002242305e-06, 7.000000000090267e-06, 6.917000000328244e-06]</msg>
<status status="PASS" starttime="20201030 11:50:20.710" endtime="20201030 11:50:20.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.705" endtime="20201030 11:50:20.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.335" endtime="20201030 11:50:20.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.335" endtime="20201030 11:50:20.713"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.721" endtime="20201030 11:50:20.733"></status>
</kw>
<msg timestamp="20201030 11:50:20.733" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.720" endtime="20201030 11:50:20.733"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:20.736" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:20.734" endtime="20201030 11:50:20.736"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.737" endtime="20201030 11:50:20.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.717" endtime="20201030 11:50:20.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.715" endtime="20201030 11:50:20.739"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:20.745" endtime="20201030 11:50:21.059"></status>
</kw>
<msg timestamp="20201030 11:50:21.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.035453708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.035463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:20.744" endtime="20201030 11:50:21.063"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.072" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.035453708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.035463542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.064" endtime="20201030 11:50:21.073"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.073" endtime="20201030 11:50:21.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.742" endtime="20201030 11:50:21.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.740" endtime="20201030 11:50:21.076"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.080" level="INFO">${RESULT} = [{'diff': 9.834000000097376e-06}, {'diff': 1.2625000000099362e-05}, {'diff': 1.1916000000056215e-05}, {'diff': 6.056000000143058e-06}, {'diff': 1.070899999966457e-05}, {'diff': 1.1417000001401334e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:21.077" endtime="20201030 11:50:21.081"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.086" level="INFO">${GPIO_OVERHEAD} = {'diff': [9.834000000097376e-06, 1.2625000000099362e-05, 1.1916000000056215e-05, 6.056000000143058e-06, 1.070899999966457e-05, 1.1417000001401334e-05, 8.459000000016204e-06, 8.125000000802629e-06, 8.6...</msg>
<status status="PASS" starttime="20201030 11:50:21.082" endtime="20201030 11:50:21.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.090" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:21.089" endtime="20201030 11:50:21.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.093" level="INFO">VALUE: [9.834000000097376e-06, 1.2625000000099362e-05, 1.1916000000056215e-05, 6.056000000143058e-06, 1.070899999966457e-05, 1.1417000001401334e-05, 8.459000000016204e-06, 8.125000000802629e-06, 8.639000000698616e-06, 1.0042000001320162e-05, 8.347999999713807e-06, 9.721999999712239e-06, 7.999999999341867e-06, 9.915999999776659e-06, 8.486000000473837e-06, 8.680000000538257e-06, 1.1125000000333785e-05, 1.1153000000874158e-05, 6.278000000747852e-06, 8.77799999976503e-06, 1.1694000001227778e-05, 6.764000000103465e-06, 8.041999999264249e-06, 6.69499999972345e-06, 7.708000000050674e-06, 4.915999999965948e-06, 7.625000000288651e-06, 4.625000000757495e-06, 1.0193999999685843e-05, 8.48599999869748e-06, 8.9170000006078e-06, 9.054999999591473e-06, 9.986000000239414e-06, 1.158300000092538e-05, 7.415999998983125e-06, 7.318999999839093e-06, 7.4310000002242305e-06, 7.000000000090267e-06, 6.917000000328244e-06, 5.652000000466728e-06, 1.0471999999595027e-05, 1.1805999999836558e-05, 8.277999999251051e-06, 7.360999999761475e-06, 1.0638999999201815e-05, 5.193999999875132e-06, 7.165999999614314e-06, 8.48599999869748e-06, 8.291000000326676e-06, 9.332999999500657e-06, 1.1082999998635046e-05, 9.473000000426168e-06, 9.277000000196267e-06, 8.403000000711813e-06, 9.125000000054229e-06, 1.08470000004246e-05, 5.708999999853859e-06, 1.065300000036018e-05, 8.77799999976503e-06, 9.90200000039465e-06, 7.791999999895438e-06, 6.083000000600691e-06, 1.0638000000895431e-05, 6.416999999814266e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.091" endtime="20201030 11:50:21.093"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.087" endtime="20201030 11:50:21.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.714" endtime="20201030 11:50:21.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:20.714" endtime="20201030 11:50:21.094"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure GPIO Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead GPIO</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Gpio" library="DutDeviceIf">
<doc>Run the GPIO toggling overhead benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.102" endtime="20201030 11:50:21.113"></status>
</kw>
<msg timestamp="20201030 11:50:21.114" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.100" endtime="20201030 11:50:21.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.116" level="INFO">${RESULT} = {'cmd': 'gpio overhead', 'msg': ['overhead_gpio\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.115" endtime="20201030 11:50:21.116"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.117" endtime="20201030 11:50:21.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.098" endtime="20201030 11:50:21.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.096" endtime="20201030 11:50:21.120"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.126" endtime="20201030 11:50:21.440"></status>
</kw>
<msg timestamp="20201030 11:50:21.444" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.408383667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.408388583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.124" endtime="20201030 11:50:21.444"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.454" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.408383667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.408388583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:21.445" endtime="20201030 11:50:21.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.455" endtime="20201030 11:50:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.122" endtime="20201030 11:50:21.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.120" endtime="20201030 11:50:21.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:21.462" level="INFO">${RESULT} = [{'diff': 4.915999999965948e-06}, {'diff': 7.625000000288651e-06}, {'diff': 4.625000000757495e-06}, {'diff': 1.0193999999685843e-05}, {'diff': 8.48599999869748e-06}, {'diff': 8.9170000006078e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:50:21.459" endtime="20201030 11:50:21.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${GPIO_OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:21.467" level="INFO">${GPIO_OVERHEAD} = {'diff': [4.915999999965948e-06, 7.625000000288651e-06, 4.625000000757495e-06, 1.0193999999685843e-05, 8.48599999869748e-06, 8.9170000006078e-06, 9.054999999591473e-06, 9.986000000239414e-06, 1.158300...</msg>
<status status="PASS" starttime="20201030 11:50:21.463" endtime="20201030 11:50:21.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-00-gpio</arg>
<arg>${GPIO_OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.471" level="INFO">NAME: overhead-00-gpio</msg>
<status status="PASS" starttime="20201030 11:50:21.470" endtime="20201030 11:50:21.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:21.474" level="INFO">VALUE: [4.915999999965948e-06, 7.625000000288651e-06, 4.625000000757495e-06, 1.0193999999685843e-05, 8.48599999869748e-06, 8.9170000006078e-06, 9.054999999591473e-06, 9.986000000239414e-06, 1.158300000092538e-05, 7.415999998983125e-06, 7.318999999839093e-06, 7.4310000002242305e-06, 7.000000000090267e-06, 6.917000000328244e-06, 5.652000000466728e-06, 1.0471999999595027e-05, 1.1805999999836558e-05, 8.277999999251051e-06, 7.360999999761475e-06, 1.0638999999201815e-05, 5.193999999875132e-06, 7.165999999614314e-06, 8.48599999869748e-06, 8.291000000326676e-06, 9.332999999500657e-06, 1.1082999998635046e-05, 9.473000000426168e-06, 9.277000000196267e-06, 8.403000000711813e-06, 9.125000000054229e-06, 1.08470000004246e-05, 5.708999999853859e-06, 1.065300000036018e-05, 8.77799999976503e-06, 9.90200000039465e-06, 7.791999999895438e-06, 6.083000000600691e-06, 1.0638000000895431e-05, 6.416999999814266e-06, 6.8469999998654885e-06, 1.0264000000148599e-05, 6.7230000002638235e-06, 8.069999999804622e-06, 8.944000001065433e-06, 7.709000000133415e-06, 1.1917000000138955e-05, 1.0931000000269364e-05, 5.638999999391103e-06, 7.013000001165892e-06, 1.0834000001125332e-05, 1.1291999999940572e-05, 6.6249999992606945e-06, 8.597000000776234e-06, 5.486000000942681e-06, 8.929999999907068e-06, 9.277000000196267e-06, 8.040999999181508e-06, 8.417000000093822e-06, 1.0986000001267371e-05, 7.473000000146612e-06, 1.1499999999387e-05, 7.957999999419485e-06, 1.1930999999520964e-05, 7.776999998654333e-06]</msg>
<status status="PASS" starttime="20201030 11:50:21.472" endtime="20201030 11:50:21.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.468" endtime="20201030 11:50:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.095" endtime="20201030 11:50:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.094" endtime="20201030 11:50:21.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:13.848" endtime="20201030 11:50:21.475"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:10.740" endtime="20201030 11:50:21.476" critical="yes"></status>
</test>
<test id="s1-s2-t2" name="Measure Overhead TIMER_NOW">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:21.483" endtime="20201030 11:50:21.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.482" endtime="20201030 11:50:21.503"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:21.517" endtime="20201030 11:50:24.544"></status>
</kw>
<msg timestamp="20201030 11:50:24.545" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:21.515" endtime="20201030 11:50:24.546"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.550" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.548" endtime="20201030 11:50:24.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.557" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:24.553" endtime="20201030 11:50:24.557"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.513" endtime="20201030 11:50:24.559"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:21.511" endtime="20201030 11:50:24.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.509" endtime="20201030 11:50:24.560"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:24.573" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:24.566" endtime="20201030 11:50:24.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.562" endtime="20201030 11:50:24.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.509" endtime="20201030 11:50:24.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.508" endtime="20201030 11:50:24.575"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.577" endtime="20201030 11:50:24.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.506" endtime="20201030 11:50:24.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.504" endtime="20201030 11:50:24.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:21.480" endtime="20201030 11:50:24.582"></status>
</kw>
<kw name="${_} IN RANGE [ 20 ]" type="for">
<kw name="${_} = 0" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.601" endtime="20201030 11:50:24.617"></status>
</kw>
<msg timestamp="20201030 11:50:24.617" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.598" endtime="20201030 11:50:24.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.622" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.620" endtime="20201030 11:50:24.623"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.625" endtime="20201030 11:50:24.628"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.592" endtime="20201030 11:50:24.629"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.589" endtime="20201030 11:50:24.630"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.644" endtime="20201030 11:50:24.932"></status>
</kw>
<msg timestamp="20201030 11:50:24.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108438875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108440375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.642" endtime="20201030 11:50:24.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108438875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108440375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.937" endtime="20201030 11:50:24.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.945" endtime="20201030 11:50:24.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.635" endtime="20201030 11:50:24.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.631" endtime="20201030 11:50:24.948"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:24.951" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4870000000222205e-06}, {'diff': 1.4450000000998386e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.4859999999394802e-...</msg>
<status status="PASS" starttime="20201030 11:50:24.948" endtime="20201030 11:50:24.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:24.955" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4870000000222205e-06, 1.4450000000998386e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4859999999394802e-06, 1.4860000003835694e-06, 1.500000000209667e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:24.952" endtime="20201030 11:50:24.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.960" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:24.959" endtime="20201030 11:50:24.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.962" level="INFO">VALUE: [1.4999999997655777e-06, 1.4870000000222205e-06, 1.4450000000998386e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4859999999394802e-06, 1.4860000003835694e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.5129999999530241e-06, 1.4300000001910007e-06, 1.5139999995916753e-06, 1.4589999999259362e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06]</msg>
<status status="PASS" starttime="20201030 11:50:24.961" endtime="20201030 11:50:24.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.956" endtime="20201030 11:50:24.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.586" endtime="20201030 11:50:24.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.585" endtime="20201030 11:50:24.964"></status>
</kw>
<kw name="${_} = 1" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.972" endtime="20201030 11:50:24.985"></status>
</kw>
<msg timestamp="20201030 11:50:24.985" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.970" endtime="20201030 11:50:24.985"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:24.988" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:24.986" endtime="20201030 11:50:24.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.989" endtime="20201030 11:50:24.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.968" endtime="20201030 11:50:24.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.966" endtime="20201030 11:50:24.991"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:24.998" endtime="20201030 11:50:25.309"></status>
</kw>
<msg timestamp="20201030 11:50:25.312" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108648347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:24.996" endtime="20201030 11:50:25.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.322" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.108646847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.108648347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.313" endtime="20201030 11:50:25.323"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.323" endtime="20201030 11:50:25.325"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.993" endtime="20201030 11:50:25.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.992" endtime="20201030 11:50:25.326"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.330" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-...</msg>
<status status="PASS" starttime="20201030 11:50:25.327" endtime="20201030 11:50:25.331"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:25.335" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.4999999997655777e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:25.331" endtime="20201030 11:50:25.336"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.340" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:25.339" endtime="20201030 11:50:25.340"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.342" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.5420000001320489e-06, 1.500000000209667e-06, 1.4720000001133826e-06, 1.4859999999394802e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.500000000209667e-06, 1.4729999997520338e-06, 1.5129999999530241e-06, 1.4170000000035543e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4440000000170983e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4579999998431958e-06, 1.4579999998431958e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:25.341" endtime="20201030 11:50:25.343"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.336" endtime="20201030 11:50:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.965" endtime="20201030 11:50:25.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.964" endtime="20201030 11:50:25.344"></status>
</kw>
<kw name="${_} = 2" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.352" endtime="20201030 11:50:25.363"></status>
</kw>
<msg timestamp="20201030 11:50:25.363" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.350" endtime="20201030 11:50:25.363"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.365" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.364" endtime="20201030 11:50:25.366"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.366" endtime="20201030 11:50:25.368"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.348" endtime="20201030 11:50:25.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.346" endtime="20201030 11:50:25.369"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.375" endtime="20201030 11:50:25.695"></status>
</kw>
<msg timestamp="20201030 11:50:25.699" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.469178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.469179903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.374" endtime="20201030 11:50:25.699"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.469178403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.469179903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.700" endtime="20201030 11:50:25.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.710" endtime="20201030 11:50:25.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.371" endtime="20201030 11:50:25.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.370" endtime="20201030 11:50:25.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:25.717" level="INFO">${RESULT} = [{'diff': 1.500000000209667e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.500000000209667e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:25.713" endtime="20201030 11:50:25.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:25.724" level="INFO">${OVERHEAD} = {'diff': [1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:25.718" endtime="20201030 11:50:25.724"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.728" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:25.727" endtime="20201030 11:50:25.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.731" level="INFO">VALUE: [1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.458000000287285e-06, 1.458000000287285e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.569999999784244e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5139999995916753e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4870000000222205e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4719999996692934e-06, 1.4999999997655777e-06, 1.500000000209667e-06, 1.4859999999394802e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.5410000000493085e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.5550000003194953e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999999394802e-06, 1.4999999997655777e-06, 1.5690000001455928e-06, 1.4589999999259362e-06, 1.5140000000357645e-06, 1.4870000000222205e-06, 1.4859999999394802e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.5269999997791217e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.5139999995916753e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.500000000209667e-06]</msg>
<status status="PASS" starttime="20201030 11:50:25.729" endtime="20201030 11:50:25.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.725" endtime="20201030 11:50:25.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.345" endtime="20201030 11:50:25.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.344" endtime="20201030 11:50:25.733"></status>
</kw>
<kw name="${_} = 3" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.742" endtime="20201030 11:50:25.754"></status>
</kw>
<msg timestamp="20201030 11:50:25.755" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.740" endtime="20201030 11:50:25.755"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:25.757" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:25.756" endtime="20201030 11:50:25.758"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.758" endtime="20201030 11:50:25.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.737" endtime="20201030 11:50:25.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.735" endtime="20201030 11:50:25.761"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:25.767" endtime="20201030 11:50:26.080"></status>
</kw>
<msg timestamp="20201030 11:50:26.084" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.837450569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.837452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:25.766" endtime="20201030 11:50:26.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.094" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.837450569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.837452028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.085" endtime="20201030 11:50:26.095"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.095" endtime="20201030 11:50:26.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.763" endtime="20201030 11:50:26.098"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.761" endtime="20201030 11:50:26.098"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.102" level="INFO">${RESULT} = [{'diff': 1.4589999999259362e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4870000000222205e-06}, {'diff': 1.4859999999394802e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.500000000209667e-0...</msg>
<status status="PASS" starttime="20201030 11:50:26.099" endtime="20201030 11:50:26.102"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:26.107" level="INFO">${OVERHEAD} = {'diff': [1.4589999999259362e-06, 1.5140000000357645e-06, 1.4870000000222205e-06, 1.4859999999394802e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.5269999997791217e-06, 1.5140000000357645e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:26.103" endtime="20201030 11:50:26.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.111" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:26.110" endtime="20201030 11:50:26.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.113" level="INFO">VALUE: [1.4589999999259362e-06, 1.5140000000357645e-06, 1.4870000000222205e-06, 1.4859999999394802e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.5269999997791217e-06, 1.5140000000357645e-06, 1.500000000209667e-06, 1.5139999995916753e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.500000000209667e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4870000004663098e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.542000000576138e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4300000001910007e-06, 1.4720000001133826e-06, 1.4870000004663098e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4580000007313743e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5000000006537562e-06, 1.513999999147586e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5280000003059513e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.112" endtime="20201030 11:50:26.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.108" endtime="20201030 11:50:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.734" endtime="20201030 11:50:26.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:25.734" endtime="20201030 11:50:26.115"></status>
</kw>
<kw name="${_} = 4" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.124" endtime="20201030 11:50:26.135"></status>
</kw>
<msg timestamp="20201030 11:50:26.136" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.122" endtime="20201030 11:50:26.136"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.138" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.137" endtime="20201030 11:50:26.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.139" endtime="20201030 11:50:26.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.119" endtime="20201030 11:50:26.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.117" endtime="20201030 11:50:26.142"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.149" endtime="20201030 11:50:26.466"></status>
</kw>
<msg timestamp="20201030 11:50:26.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217635083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217636583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.148" endtime="20201030 11:50:26.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.217635083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.217636583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.471" endtime="20201030 11:50:26.480"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.481" endtime="20201030 11:50:26.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.145" endtime="20201030 11:50:26.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.142" endtime="20201030 11:50:26.483"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.488" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:26.484" endtime="20201030 11:50:26.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:26.493" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06...</msg>
<status status="PASS" starttime="20201030 11:50:26.489" endtime="20201030 11:50:26.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.497" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:26.496" endtime="20201030 11:50:26.497"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.500" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4719999992252042e-06, 1.5000000006537562e-06, 1.5129999999530241e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.498" endtime="20201030 11:50:26.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.494" endtime="20201030 11:50:26.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.116" endtime="20201030 11:50:26.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.115" endtime="20201030 11:50:26.501"></status>
</kw>
<kw name="${_} = 5" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.509" endtime="20201030 11:50:26.522"></status>
</kw>
<msg timestamp="20201030 11:50:26.522" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.508" endtime="20201030 11:50:26.522"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.525" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.523" endtime="20201030 11:50:26.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.526" endtime="20201030 11:50:26.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.505" endtime="20201030 11:50:26.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.503" endtime="20201030 11:50:26.528"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.534" endtime="20201030 11:50:26.839"></status>
</kw>
<msg timestamp="20201030 11:50:26.843" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.589353944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.589355444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.533" endtime="20201030 11:50:26.843"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.853" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.589353944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.589355444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.844" endtime="20201030 11:50:26.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.854" endtime="20201030 11:50:26.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.531" endtime="20201030 11:50:26.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.529" endtime="20201030 11:50:26.856"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:26.861" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:26.857" endtime="20201030 11:50:26.861"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:26.866" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:26.862" endtime="20201030 11:50:26.866"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.870" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:26.869" endtime="20201030 11:50:26.871"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.873" level="INFO">VALUE: [1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.542000000576138e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4870000004663098e-06, 1.5000000006537562e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4579999998431958e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.443999999573009e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.5559999999581464e-06]</msg>
<status status="PASS" starttime="20201030 11:50:26.871" endtime="20201030 11:50:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.867" endtime="20201030 11:50:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.502" endtime="20201030 11:50:26.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.502" endtime="20201030 11:50:26.875"></status>
</kw>
<kw name="${_} = 6" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.882" endtime="20201030 11:50:26.895"></status>
</kw>
<msg timestamp="20201030 11:50:26.895" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.881" endtime="20201030 11:50:26.895"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:26.898" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:26.896" endtime="20201030 11:50:26.898"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.899" endtime="20201030 11:50:26.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.878" endtime="20201030 11:50:26.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.877" endtime="20201030 11:50:26.901"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:26.908" endtime="20201030 11:50:27.228"></status>
</kw>
<msg timestamp="20201030 11:50:27.232" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.966532958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.966534458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:26.906" endtime="20201030 11:50:27.232"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 4.966532958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 4.966534458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.233" endtime="20201030 11:50:27.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.243" endtime="20201030 11:50:27.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.903" endtime="20201030 11:50:27.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.902" endtime="20201030 11:50:27.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.249" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.443999999573009e-06}, {'diff': 1.5000000006537562e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-0...</msg>
<status status="PASS" starttime="20201030 11:50:27.246" endtime="20201030 11:50:27.250"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:27.254" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.5140000000357645e-06, 1.443999999573009e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.554999999875406e-06, ...</msg>
<status status="PASS" starttime="20201030 11:50:27.250" endtime="20201030 11:50:27.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.258" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:27.257" endtime="20201030 11:50:27.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.261" level="INFO">VALUE: [1.4999999997655777e-06, 1.5140000000357645e-06, 1.443999999573009e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.554999999875406e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5129999999530241e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5279999994177729e-06, 1.5700000002283332e-06, 1.4860000003835694e-06, 1.4870000004663098e-06, 1.5140000000357645e-06, 1.5129999999530241e-06, 1.5000000006537562e-06, 1.542000000576138e-06, 1.4860000003835694e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.485999999495391e-06, 1.4579999998431958e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4580000007313743e-06, 1.542000000576138e-06, 1.485999999495391e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.4999999997655777e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:27.259" endtime="20201030 11:50:27.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.255" endtime="20201030 11:50:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.875" endtime="20201030 11:50:27.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:26.875" endtime="20201030 11:50:27.263"></status>
</kw>
<kw name="${_} = 7" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.271" endtime="20201030 11:50:27.283"></status>
</kw>
<msg timestamp="20201030 11:50:27.283" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.270" endtime="20201030 11:50:27.283"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.286" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.284" endtime="20201030 11:50:27.286"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.287" endtime="20201030 11:50:27.288"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.267" endtime="20201030 11:50:27.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.265" endtime="20201030 11:50:27.289"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.295" endtime="20201030 11:50:27.618"></status>
</kw>
<msg timestamp="20201030 11:50:27.622" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.329866319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.329867819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.294" endtime="20201030 11:50:27.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.632" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.329866319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.329867819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.623" endtime="20201030 11:50:27.633"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.633" endtime="20201030 11:50:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.291" endtime="20201030 11:50:27.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.290" endtime="20201030 11:50:27.636"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:27.640" level="INFO">${RESULT} = [{'diff': 1.5000000006537562e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4720000001133826e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:27.637" endtime="20201030 11:50:27.640"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:27.645" level="INFO">${OVERHEAD} = {'diff': [1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06...</msg>
<status status="PASS" starttime="20201030 11:50:27.641" endtime="20201030 11:50:27.646"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.650" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:27.649" endtime="20201030 11:50:27.650"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.652" level="INFO">VALUE: [1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5279999994177729e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4579999998431958e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4720000001133826e-06, 1.4870000004663098e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5000000006537562e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.485999999495391e-06, 1.4589999999259362e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:27.651" endtime="20201030 11:50:27.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.646" endtime="20201030 11:50:27.653"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.263" endtime="20201030 11:50:27.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.263" endtime="20201030 11:50:27.654"></status>
</kw>
<kw name="${_} = 8" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.662" endtime="20201030 11:50:27.673"></status>
</kw>
<msg timestamp="20201030 11:50:27.673" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.660" endtime="20201030 11:50:27.673"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:27.675" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:27.674" endtime="20201030 11:50:27.676"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.677" endtime="20201030 11:50:27.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.658" endtime="20201030 11:50:27.679"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.656" endtime="20201030 11:50:27.679"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:27.685" endtime="20201030 11:50:27.999"></status>
</kw>
<msg timestamp="20201030 11:50:28.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.709650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.709652028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:27.684" endtime="20201030 11:50:28.004"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.013" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 5.709650514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 5.709652028, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.004" endtime="20201030 11:50:28.013"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.014" endtime="20201030 11:50:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.681" endtime="20201030 11:50:28.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.680" endtime="20201030 11:50:28.017"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.022" level="INFO">${RESULT} = [{'diff': 1.5140000000357645e-06}, {'diff': 1.485999999495391e-06}, {'diff': 1.4589999999259362e-06}, {'diff': 1.5000000006537562e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5140000000357645e-0...</msg>
<status status="PASS" starttime="20201030 11:50:28.018" endtime="20201030 11:50:28.022"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:28.027" level="INFO">${OVERHEAD} = {'diff': [1.5140000000357645e-06, 1.485999999495391e-06, 1.4589999999259362e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.4999999997655777e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:28.023" endtime="20201030 11:50:28.027"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.031" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:28.030" endtime="20201030 11:50:28.031"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.033" level="INFO">VALUE: [1.5140000000357645e-06, 1.485999999495391e-06, 1.4589999999259362e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5419999996879596e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4869999995781313e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4580000007313743e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.542000000576138e-06, 1.4860000003835694e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.415999999920814e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.485999999495391e-06, 1.485999999495391e-06, 1.4580000007313743e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:28.032" endtime="20201030 11:50:28.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.027" endtime="20201030 11:50:28.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.655" endtime="20201030 11:50:28.035"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:27.654" endtime="20201030 11:50:28.035"></status>
</kw>
<kw name="${_} = 9" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.043" endtime="20201030 11:50:28.054"></status>
</kw>
<msg timestamp="20201030 11:50:28.055" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.041" endtime="20201030 11:50:28.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.057" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.056" endtime="20201030 11:50:28.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.058" endtime="20201030 11:50:28.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.039" endtime="20201030 11:50:28.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.037" endtime="20201030 11:50:28.061"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.068" endtime="20201030 11:50:28.386"></status>
</kw>
<msg timestamp="20201030 11:50:28.389" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.089153806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.089155264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.067" endtime="20201030 11:50:28.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.399" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.089153806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.089155264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.391" endtime="20201030 11:50:28.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.400" endtime="20201030 11:50:28.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.063" endtime="20201030 11:50:28.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.061" endtime="20201030 11:50:28.403"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.407" level="INFO">${RESULT} = [{'diff': 1.4580000007313743e-06}, {'diff': 1.5000000006537562e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:28.404" endtime="20201030 11:50:28.407"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:28.412" level="INFO">${OVERHEAD} = {'diff': [1.4580000007313743e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:28.408" endtime="20201030 11:50:28.412"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.417" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:28.415" endtime="20201030 11:50:28.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.419" level="INFO">VALUE: [1.4580000007313743e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5559999999581464e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4309999993855627e-06, 1.4870000004663098e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.513999999147586e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4580000007313743e-06, 1.5279999994177729e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.431000000273741e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5129999999530241e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:28.418" endtime="20201030 11:50:28.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.413" endtime="20201030 11:50:28.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.036" endtime="20201030 11:50:28.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.035" endtime="20201030 11:50:28.421"></status>
</kw>
<kw name="${_} = 10" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.429" endtime="20201030 11:50:28.441"></status>
</kw>
<msg timestamp="20201030 11:50:28.442" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.427" endtime="20201030 11:50:28.442"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.444" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.443" endtime="20201030 11:50:28.444"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.445" endtime="20201030 11:50:28.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.425" endtime="20201030 11:50:28.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.423" endtime="20201030 11:50:28.448"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.454" endtime="20201030 11:50:28.768"></status>
</kw>
<msg timestamp="20201030 11:50:28.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.460302778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.460304278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.452" endtime="20201030 11:50:28.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.782" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.460302778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.460304278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.773" endtime="20201030 11:50:28.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.784" endtime="20201030 11:50:28.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.450" endtime="20201030 11:50:28.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.448" endtime="20201030 11:50:28.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:28.791" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4860000003835694e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:28.787" endtime="20201030 11:50:28.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:28.797" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.485999999495391e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:28.792" endtime="20201030 11:50:28.797"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.801" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:28.800" endtime="20201030 11:50:28.801"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.803" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.4869999995781313e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5409999996052193e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5129999999530241e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4579999998431958e-06, 1.5129999999530241e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5000000006537562e-06, 1.5279999994177729e-06, 1.5140000000357645e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:28.802" endtime="20201030 11:50:28.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.798" endtime="20201030 11:50:28.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.422" endtime="20201030 11:50:28.805"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.421" endtime="20201030 11:50:28.805"></status>
</kw>
<kw name="${_} = 11" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.813" endtime="20201030 11:50:28.824"></status>
</kw>
<msg timestamp="20201030 11:50:28.825" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.811" endtime="20201030 11:50:28.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:28.827" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:28.826" endtime="20201030 11:50:28.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.828" endtime="20201030 11:50:28.830"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.809" endtime="20201030 11:50:28.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.807" endtime="20201030 11:50:28.831"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:28.837" endtime="20201030 11:50:29.160"></status>
</kw>
<msg timestamp="20201030 11:50:29.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.835527514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.835529014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:28.836" endtime="20201030 11:50:29.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.174" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 6.835527514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 6.835529014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.165" endtime="20201030 11:50:29.174"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.175" endtime="20201030 11:50:29.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.833" endtime="20201030 11:50:29.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.832" endtime="20201030 11:50:29.178"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.182" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.473000000196123e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4579999998431958e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.5140000000357645e-0...</msg>
<status status="PASS" starttime="20201030 11:50:29.179" endtime="20201030 11:50:29.182"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.187" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:29.183" endtime="20201030 11:50:29.187"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.191" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.190" endtime="20201030 11:50:29.191"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.193" level="INFO">VALUE: [1.4999999997655777e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.5000000006537562e-06, 1.5279999994177729e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5129999999530241e-06, 1.5000000006537562e-06, 1.4309999993855627e-06, 1.4309999993855627e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.473000000196123e-06, 1.5000000006537562e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4580000007313743e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5409999996052193e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.192" endtime="20201030 11:50:29.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.187" endtime="20201030 11:50:29.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.806" endtime="20201030 11:50:29.195"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:28.805" endtime="20201030 11:50:29.195"></status>
</kw>
<kw name="${_} = 12" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.204" endtime="20201030 11:50:29.217"></status>
</kw>
<msg timestamp="20201030 11:50:29.218" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.201" endtime="20201030 11:50:29.218"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.220" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.219" endtime="20201030 11:50:29.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.221" endtime="20201030 11:50:29.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.199" endtime="20201030 11:50:29.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.197" endtime="20201030 11:50:29.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.230" endtime="20201030 11:50:29.545"></status>
</kw>
<msg timestamp="20201030 11:50:29.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.209622708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.209624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.228" endtime="20201030 11:50:29.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.558" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.209622708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.209624208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.550" endtime="20201030 11:50:29.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.560" endtime="20201030 11:50:29.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.226" endtime="20201030 11:50:29.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.224" endtime="20201030 11:50:29.562"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.566" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5000000006537562e-06}, {'diff': 1.5140000000357645e-06}, {'diff': 1.4860000003835694e-...</msg>
<status status="PASS" starttime="20201030 11:50:29.563" endtime="20201030 11:50:29.567"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.572" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:29.567" endtime="20201030 11:50:29.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.576" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.575" endtime="20201030 11:50:29.576"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.578" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.5829999995276012e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5419999996879596e-06, 1.5140000000357645e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5000000006537562e-06, 1.5000000006537562e-06, 1.5419999996879596e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.577" endtime="20201030 11:50:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.572" endtime="20201030 11:50:29.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.196" endtime="20201030 11:50:29.586"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.195" endtime="20201030 11:50:29.586"></status>
</kw>
<kw name="${_} = 13" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.594" endtime="20201030 11:50:29.606"></status>
</kw>
<msg timestamp="20201030 11:50:29.607" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.592" endtime="20201030 11:50:29.607"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.609" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.608" endtime="20201030 11:50:29.610"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.610" endtime="20201030 11:50:29.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.590" endtime="20201030 11:50:29.612"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.588" endtime="20201030 11:50:29.613"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.619" endtime="20201030 11:50:29.931"></status>
</kw>
<msg timestamp="20201030 11:50:29.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.590598889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.590600389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.618" endtime="20201030 11:50:29.935"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.945" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.590598889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.590600389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.936" endtime="20201030 11:50:29.945"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.946" endtime="20201030 11:50:29.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.615" endtime="20201030 11:50:29.948"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.613" endtime="20201030 11:50:29.949"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:29.953" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:29.950" endtime="20201030 11:50:29.953"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:29.959" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:29.954" endtime="20201030 11:50:29.959"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.963" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:29.962" endtime="20201030 11:50:29.963"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.965" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.473000000196123e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4440000004611875e-06, 1.4999999997655777e-06, 1.5129999999530241e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4720000001133826e-06, 1.5129999999530241e-06, 1.5410000004933977e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4719999992252042e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.485999999495391e-06, 1.5140000000357645e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5140000000357645e-06, 1.4860000003835694e-06, 1.542000000576138e-06, 1.5000000006537562e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4300000001910007e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4860000003835694e-06]</msg>
<status status="PASS" starttime="20201030 11:50:29.964" endtime="20201030 11:50:29.966"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.959" endtime="20201030 11:50:29.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.587" endtime="20201030 11:50:29.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.586" endtime="20201030 11:50:29.967"></status>
</kw>
<kw name="${_} = 14" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.975" endtime="20201030 11:50:29.987"></status>
</kw>
<msg timestamp="20201030 11:50:29.987" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.973" endtime="20201030 11:50:29.987"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:29.990" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:29.988" endtime="20201030 11:50:29.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.991" endtime="20201030 11:50:29.992"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.971" endtime="20201030 11:50:29.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.969" endtime="20201030 11:50:29.993"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:29.999" endtime="20201030 11:50:30.312"></status>
</kw>
<msg timestamp="20201030 11:50:30.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.969748819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.969750319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:29.998" endtime="20201030 11:50:30.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 7.969748819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 7.969750319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.317" endtime="20201030 11:50:30.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.327" endtime="20201030 11:50:30.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.995" endtime="20201030 11:50:30.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.994" endtime="20201030 11:50:30.329"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.334" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4300000001910007e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:30.330" endtime="20201030 11:50:30.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:30.338" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4300000001910007e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06...</msg>
<status status="PASS" starttime="20201030 11:50:30.335" endtime="20201030 11:50:30.339"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.342" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:30.341" endtime="20201030 11:50:30.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.345" level="INFO">VALUE: [1.4999999997655777e-06, 1.4300000001910007e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000006537562e-06, 1.5140000000357645e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.485999999495391e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.5420000014643165e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.5129999990648457e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.5000000015419346e-06, 1.4719999992252042e-06, 1.4860000003835694e-06, 1.555999999069968e-06, 1.4860000003835694e-06, 1.415999999920814e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4730000010843014e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.4859999986072125e-06, 1.5560000008463248e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.444999998767571e-06]</msg>
<status status="PASS" starttime="20201030 11:50:30.343" endtime="20201030 11:50:30.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.339" endtime="20201030 11:50:30.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.968" endtime="20201030 11:50:30.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:29.967" endtime="20201030 11:50:30.347"></status>
</kw>
<kw name="${_} = 15" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.355" endtime="20201030 11:50:30.368"></status>
</kw>
<msg timestamp="20201030 11:50:30.368" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.354" endtime="20201030 11:50:30.368"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.370" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.369" endtime="20201030 11:50:30.371"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.371" endtime="20201030 11:50:30.373"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.350" endtime="20201030 11:50:30.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.349" endtime="20201030 11:50:30.374"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.380" endtime="20201030 11:50:30.688"></status>
</kw>
<msg timestamp="20201030 11:50:30.692" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.340578472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.340579972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.379" endtime="20201030 11:50:30.692"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.702" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.340578472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.340579972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.693" endtime="20201030 11:50:30.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.703" endtime="20201030 11:50:30.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.376" endtime="20201030 11:50:30.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.375" endtime="20201030 11:50:30.706"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:30.710" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4860000003835694e-06}, {'diff': 1.4860000003835694e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.514000000923943e-06}, {'diff': 1.4999999997655777e-0...</msg>
<status status="PASS" starttime="20201030 11:50:30.707" endtime="20201030 11:50:30.710"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:30.715" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.4859999986072125e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:30.711" endtime="20201030 11:50:30.715"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.719" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:30.718" endtime="20201030 11:50:30.720"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.722" level="INFO">VALUE: [1.4999999997655777e-06, 1.4860000003835694e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.4859999986072125e-06, 1.5560000008463248e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.444999998767571e-06, 1.5000000015419346e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.486999998689953e-06, 1.4999999997655777e-06, 1.5279999985295944e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.472000001001561e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.4860000003835694e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.5549999989872276e-06, 1.4580000016195527e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4730000010843014e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4870000004663098e-06, 1.4999999997655777e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:30.720" endtime="20201030 11:50:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.716" endtime="20201030 11:50:30.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.348" endtime="20201030 11:50:30.724"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.347" endtime="20201030 11:50:30.724"></status>
</kw>
<kw name="${_} = 16" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.731" endtime="20201030 11:50:30.744"></status>
</kw>
<msg timestamp="20201030 11:50:30.745" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.730" endtime="20201030 11:50:30.745"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:30.747" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:30.746" endtime="20201030 11:50:30.748"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.748" endtime="20201030 11:50:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.727" endtime="20201030 11:50:30.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.726" endtime="20201030 11:50:30.751"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:30.757" endtime="20201030 11:50:31.073"></status>
</kw>
<msg timestamp="20201030 11:50:31.077" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.711785458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.711786931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:30.756" endtime="20201030 11:50:31.077"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.087" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 8.711785458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 8.711786931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.078" endtime="20201030 11:50:31.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.088" endtime="20201030 11:50:31.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.753" endtime="20201030 11:50:31.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.751" endtime="20201030 11:50:31.090"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.095" level="INFO">${RESULT} = [{'diff': 1.4730000010843014e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.5419999996879596e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-...</msg>
<status status="PASS" starttime="20201030 11:50:31.091" endtime="20201030 11:50:31.095"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:31.100" level="INFO">${OVERHEAD} = {'diff': [1.4730000010843014e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06...</msg>
<status status="PASS" starttime="20201030 11:50:31.096" endtime="20201030 11:50:31.100"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.104" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:31.103" endtime="20201030 11:50:31.105"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.107" level="INFO">VALUE: [1.4730000010843014e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4870000004663098e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5130000008412026e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4870000004663098e-06, 1.514000000923943e-06, 1.4860000003835694e-06, 1.4719999992252042e-06, 1.4730000010843014e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4730000010843014e-06, 1.4860000003835694e-06, 1.4450000005439279e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:31.105" endtime="20201030 11:50:31.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.101" endtime="20201030 11:50:31.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.724" endtime="20201030 11:50:31.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:30.724" endtime="20201030 11:50:31.109"></status>
</kw>
<kw name="${_} = 17" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.117" endtime="20201030 11:50:31.129"></status>
</kw>
<msg timestamp="20201030 11:50:31.129" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.115" endtime="20201030 11:50:31.129"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.131" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.130" endtime="20201030 11:50:31.132"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.133" endtime="20201030 11:50:31.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.112" endtime="20201030 11:50:31.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.111" endtime="20201030 11:50:31.135"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.142" endtime="20201030 11:50:31.460"></status>
</kw>
<msg timestamp="20201030 11:50:31.463" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.079056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.079057958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.141" endtime="20201030 11:50:31.464"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.473" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.079056458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.079057958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.465" endtime="20201030 11:50:31.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.475" endtime="20201030 11:50:31.476"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.137" endtime="20201030 11:50:31.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.136" endtime="20201030 11:50:31.477"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.481" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.514000000923943e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4999999997655777e-0...</msg>
<status status="PASS" starttime="20201030 11:50:31.478" endtime="20201030 11:50:31.482"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:31.486" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4730000010843014e-06, 1.4860000003835694e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:31.482" endtime="20201030 11:50:31.486"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.490" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:31.489" endtime="20201030 11:50:31.490"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.493" level="INFO">VALUE: [1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4730000010843014e-06, 1.4860000003835694e-06, 1.4450000005439279e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.514000000923943e-06, 1.4859999986072125e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.5409999996052193e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5129999990648457e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4309999993855627e-06, 1.4860000003835694e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.4859999986072125e-06, 1.513999999147586e-06, 1.5560000008463248e-06, 1.4999999997655777e-06, 1.5000000015419346e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:31.491" endtime="20201030 11:50:31.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.487" endtime="20201030 11:50:31.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.110" endtime="20201030 11:50:31.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.109" endtime="20201030 11:50:31.495"></status>
</kw>
<kw name="${_} = 18" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.503" endtime="20201030 11:50:31.515"></status>
</kw>
<msg timestamp="20201030 11:50:31.515" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.501" endtime="20201030 11:50:31.515"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.518" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.516" endtime="20201030 11:50:31.518"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.519" endtime="20201030 11:50:31.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.499" endtime="20201030 11:50:31.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.497" endtime="20201030 11:50:31.521"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.527" endtime="20201030 11:50:31.831"></status>
</kw>
<msg timestamp="20201030 11:50:31.835" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.451825514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.451827014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.526" endtime="20201030 11:50:31.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.845" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.451825514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.451827014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.837" endtime="20201030 11:50:31.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.847" endtime="20201030 11:50:31.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.523" endtime="20201030 11:50:31.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.522" endtime="20201030 11:50:31.849"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:31.854" level="INFO">${RESULT} = [{'diff': 1.4999999997655777e-06}, {'diff': 1.5000000015419346e-06}, {'diff': 1.5000000015419346e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.514000000923943e-06}, {'diff': 1.4860000003835694e-0...</msg>
<status status="PASS" starttime="20201030 11:50:31.850" endtime="20201030 11:50:31.854"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:31.859" level="INFO">${OVERHEAD} = {'diff': [1.4999999997655777e-06, 1.5000000015419346e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06,...</msg>
<status status="PASS" starttime="20201030 11:50:31.855" endtime="20201030 11:50:31.859"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.863" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:31.862" endtime="20201030 11:50:31.863"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.866" level="INFO">VALUE: [1.4999999997655777e-06, 1.5000000015419346e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.527000000223211e-06, 1.4999999997655777e-06, 1.583000001303958e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5419999996879596e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5279999985295944e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.472000001001561e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5000000015419346e-06, 1.4860000003835694e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06]</msg>
<status status="PASS" starttime="20201030 11:50:31.864" endtime="20201030 11:50:31.866"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.860" endtime="20201030 11:50:31.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.496" endtime="20201030 11:50:31.867"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.495" endtime="20201030 11:50:31.868"></status>
</kw>
<kw name="${_} = 19" type="foritem">
<kw name="Measure Timer Now Overhead">
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer Now</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer Now" library="DutDeviceIf">
<doc>Run the overhead timer_now function benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.875" endtime="20201030 11:50:31.888"></status>
</kw>
<msg timestamp="20201030 11:50:31.888" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.874" endtime="20201030 11:50:31.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:31.891" level="INFO">${RESULT} = {'cmd': 'overhead timer now', 'msg': ['overhead_timer_now\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:31.889" endtime="20201030 11:50:31.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.892" endtime="20201030 11:50:31.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.871" endtime="20201030 11:50:31.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.870" endtime="20201030 11:50:31.894"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:31.900" endtime="20201030 11:50:32.214"></status>
</kw>
<msg timestamp="20201030 11:50:32.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.827030736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.827032222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:31.899" endtime="20201030 11:50:32.219"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.228" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 9.827030736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 9.827032222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:32.219" endtime="20201030 11:50:32.229"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.230" endtime="20201030 11:50:32.231"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.896" endtime="20201030 11:50:32.232"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.895" endtime="20201030 11:50:32.232"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:32.236" level="INFO">${RESULT} = [{'diff': 1.4860000003835694e-06}, {'diff': 1.4999999997655777e-06}, {'diff': 1.4579999998431958e-06}, {'diff': 1.5000000015419346e-06}, {'diff': 1.4860000003835694e-06}, {'diff': 1.4589999999259362e-...</msg>
<status status="PASS" starttime="20201030 11:50:32.233" endtime="20201030 11:50:32.237"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:32.241" level="INFO">${OVERHEAD} = {'diff': [1.4860000003835694e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5000000015419346e-06, 1.4860000003835694e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.4859999986072125e-06...</msg>
<status status="PASS" starttime="20201030 11:50:32.237" endtime="20201030 11:50:32.241"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-01-timer-now</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.245" level="INFO">NAME: overhead-01-timer-now</msg>
<status status="PASS" starttime="20201030 11:50:32.244" endtime="20201030 11:50:32.245"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:32.248" level="INFO">VALUE: [1.4860000003835694e-06, 1.4999999997655777e-06, 1.4579999998431958e-06, 1.5000000015419346e-06, 1.4860000003835694e-06, 1.4589999999259362e-06, 1.4999999997655777e-06, 1.4859999986072125e-06, 1.5000000015419346e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.5410000013815761e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.5129999990648457e-06, 1.513999999147586e-06, 1.513999999147586e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.472000001001561e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.555999999069968e-06, 1.5280000003059513e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.5550000007635845e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.514000000923943e-06, 1.514000000923943e-06, 1.513999999147586e-06, 1.513999999147586e-06, 1.527000000223211e-06, 1.5000000015419346e-06, 1.5000000015419346e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4860000003835694e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.4999999997655777e-06, 1.513999999147586e-06, 1.4860000003835694e-06]</msg>
<status status="PASS" starttime="20201030 11:50:32.246" endtime="20201030 11:50:32.248"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.242" endtime="20201030 11:50:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.868" endtime="20201030 11:50:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:31.868" endtime="20201030 11:50:32.249"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:24.583" endtime="20201030 11:50:32.250"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:21.478" endtime="20201030 11:50:32.250" critical="yes"></status>
</test>
<test id="s1-s2-t3" name="Measure Overhead Set First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:32.258" endtime="20201030 11:50:32.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.256" endtime="20201030 11:50:32.278"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:32.293" endtime="20201030 11:50:35.321"></status>
</kw>
<msg timestamp="20201030 11:50:35.322" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:32.292" endtime="20201030 11:50:35.322"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.327" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.324" endtime="20201030 11:50:35.328"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.333" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:35.329" endtime="20201030 11:50:35.334"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:32.289" endtime="20201030 11:50:35.335"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:32.287" endtime="20201030 11:50:35.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.286" endtime="20201030 11:50:35.337"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:35.344" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:35.343" endtime="20201030 11:50:35.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.339" endtime="20201030 11:50:35.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.285" endtime="20201030 11:50:35.346"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.284" endtime="20201030 11:50:35.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.348" endtime="20201030 11:50:35.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.280" endtime="20201030 11:50:35.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.279" endtime="20201030 11:50:35.353"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:32.255" endtime="20201030 11:50:35.353"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>02</arg>
<arg>set</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.372" endtime="20201030 11:50:35.395"></status>
</kw>
<msg timestamp="20201030 11:50:35.396" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.368" endtime="20201030 11:50:35.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.400" level="INFO">${RESULT} = {'cmd': 'timer overhead: set first timer', 'msg': ['overhead_timer set first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.398" endtime="20201030 11:50:35.400"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.401" endtime="20201030 11:50:35.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.363" endtime="20201030 11:50:35.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.359" endtime="20201030 11:50:35.410"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.412" endtime="20201030 11:50:35.414"></status>
</kw>
<msg timestamp="20201030 11:50:35.414" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:35.411" endtime="20201030 11:50:35.415"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.418" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:35.417" endtime="20201030 11:50:35.419"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.422" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:35.420" endtime="20201030 11:50:35.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.415" endtime="20201030 11:50:35.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.426" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:35.425" endtime="20201030 11:50:35.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.428" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:35.427" endtime="20201030 11:50:35.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.423" endtime="20201030 11:50:35.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.435" endtime="20201030 11:50:35.728"></status>
</kw>
<msg timestamp="20201030 11:50:35.731" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105443278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.434" endtime="20201030 11:50:35.731"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.739" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105438931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105443278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:35.732" endtime="20201030 11:50:35.740"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.740" endtime="20201030 11:50:35.742"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.431" endtime="20201030 11:50:35.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.430" endtime="20201030 11:50:35.743"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:35.747" level="INFO">${RESULT} = [{'diff': 4.346999999960133e-06}, {'diff': 4.402000000069961e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.416999999978799e-06}, {'diff': 4.401999999625872e-06}, {'diff': 4.388999999882515e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:35.744" endtime="20201030 11:50:35.747"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:35.751" level="INFO">${OVERHEAD} = {'diff': [4.346999999960133e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.401999999625872e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.402...</msg>
<status status="PASS" starttime="20201030 11:50:35.748" endtime="20201030 11:50:35.751"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.756" level="INFO">NAME: overhead-02-set-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:35.755" endtime="20201030 11:50:35.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:35.759" level="INFO">VALUE: [4.346999999960133e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.416999999978799e-06, 4.401999999625872e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.375000000056417e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.4030000001527014e-06, 4.431000000248986e-06, 4.388999999882515e-06, 4.4030000001527014e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.415999999896059e-06, 4.402000000069961e-06, 4.388999999882515e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.388999999882515e-06, 4.416999999978799e-06, 4.4030000001527014e-06, 4.402999999708612e-06, 4.389000000326604e-06, 4.416000000340148e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.4030000001527014e-06, 4.416999999978799e-06, 4.415999999896059e-06, 4.415999999896059e-06, 4.375000000056417e-06, 4.415999999896059e-06, 4.402000000069961e-06, 4.389000000326604e-06, 4.402999999708612e-06, 4.402000000069961e-06, 4.416999999978799e-06, 4.402000000069961e-06, 4.4030000001527014e-06, 4.402000000069961e-06, 4.402999999708612e-06, 4.402999999708612e-06, 4.388999999882515e-06, 4.3880000002438635e-06, 4.388999999882515e-06]</msg>
<status status="PASS" starttime="20201030 11:50:35.757" endtime="20201030 11:50:35.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.752" endtime="20201030 11:50:35.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.355" endtime="20201030 11:50:35.760"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:32.252" endtime="20201030 11:50:35.761" critical="yes"></status>
</test>
<test id="s1-s2-t4" name="Measure Overhead Set Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:35.768" endtime="20201030 11:50:35.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.767" endtime="20201030 11:50:35.788"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:35.801" endtime="20201030 11:50:38.829"></status>
</kw>
<msg timestamp="20201030 11:50:38.830" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:35.800" endtime="20201030 11:50:38.831"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.835" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.833" endtime="20201030 11:50:38.836"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.842" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:38.838" endtime="20201030 11:50:38.842"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:35.797" endtime="20201030 11:50:38.844"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:35.795" endtime="20201030 11:50:38.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.793" endtime="20201030 11:50:38.845"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:38.853" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:38.851" endtime="20201030 11:50:38.853"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.847" endtime="20201030 11:50:38.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.793" endtime="20201030 11:50:38.854"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.792" endtime="20201030 11:50:38.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.856" endtime="20201030 11:50:38.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.791" endtime="20201030 11:50:38.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.789" endtime="20201030 11:50:38.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:35.765" endtime="20201030 11:50:38.862"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>03</arg>
<arg>set</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.882" endtime="20201030 11:50:38.940"></status>
</kw>
<msg timestamp="20201030 11:50:38.940" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.877" endtime="20201030 11:50:38.941"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.943" level="INFO">${RESULT} = {'cmd': 'timer overhead: set middle timer', 'msg': ['overhead_timer set middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:38.941" endtime="20201030 11:50:38.943"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.944" endtime="20201030 11:50:38.945"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.871" endtime="20201030 11:50:38.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.867" endtime="20201030 11:50:38.947"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.949" endtime="20201030 11:50:38.951"></status>
</kw>
<msg timestamp="20201030 11:50:38.951" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:38.948" endtime="20201030 11:50:38.951"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.955" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:38.954" endtime="20201030 11:50:38.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.957" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:38.956" endtime="20201030 11:50:38.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.952" endtime="20201030 11:50:38.958"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.962" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:38.961" endtime="20201030 11:50:38.962"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:38.964" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:38.963" endtime="20201030 11:50:38.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.958" endtime="20201030 11:50:38.964"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:38.971" endtime="20201030 11:50:39.270"></status>
</kw>
<msg timestamp="20201030 11:50:39.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106948528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106974958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:38.969" endtime="20201030 11:50:39.274"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.106948528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106974958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:39.274" endtime="20201030 11:50:39.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.282" endtime="20201030 11:50:39.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.967" endtime="20201030 11:50:39.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.965" endtime="20201030 11:50:39.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:39.289" level="INFO">${RESULT} = [{'diff': 2.6429999999688647e-05}, {'diff': 2.6597999999822264e-05}, {'diff': 2.6582999999913426e-05}, {'diff': 2.6596999999739523e-05}, {'diff': 2.661200000009245e-05}, {'diff': 2.6500000000151402e-0...</msg>
<status status="PASS" starttime="20201030 11:50:39.286" endtime="20201030 11:50:39.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:39.294" level="INFO">${OVERHEAD} = {'diff': [2.6429999999688647e-05, 2.6597999999822264e-05, 2.6582999999913426e-05, 2.6596999999739523e-05, 2.661200000009245e-05, 2.6500000000151402e-05, 2.6652999999932092e-05, 2.656900000008733e-05, ...</msg>
<status status="PASS" starttime="20201030 11:50:39.290" endtime="20201030 11:50:39.294"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.298" level="INFO">NAME: overhead-03-set-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:39.297" endtime="20201030 11:50:39.299"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:39.301" level="INFO">VALUE: [2.6429999999688647e-05, 2.6597999999822264e-05, 2.6582999999913426e-05, 2.6596999999739523e-05, 2.661200000009245e-05, 2.6500000000151402e-05, 2.6652999999932092e-05, 2.656900000008733e-05, 2.657000000017007e-05, 2.6582999999913426e-05, 2.6597000000183613e-05, 2.666600000011954e-05, 2.656900000008733e-05, 2.6542000000073784e-05, 2.661100000000971e-05, 2.661100000000971e-05, 2.6583000000357515e-05, 2.656899999964324e-05, 2.656900000008733e-05, 2.661100000000971e-05, 2.6582999999913426e-05, 2.6597000000183613e-05, 2.6597000000183613e-05, 2.656899999964324e-05, 2.6596999999739523e-05, 2.656900000008733e-05, 2.6583999999996166e-05, 2.6582999999913426e-05, 2.6598000000266353e-05, 2.6582999999913426e-05, 2.6652999999932092e-05, 2.6542000000073784e-05, 2.6596999999739523e-05, 2.6528000000247687e-05, 2.656900000008733e-05, 2.661100000000971e-05, 2.6583000000357515e-05, 2.6582999999913426e-05, 2.6582999999913426e-05, 2.6596999999739523e-05, 2.6596999999739523e-05, 2.6582999999913426e-05, 2.6596999999739523e-05, 2.6597999999822264e-05, 2.6582999999913426e-05, 2.6582999999913426e-05, 2.6583000000357515e-05, 2.6639000000105995e-05, 2.656900000008733e-05, 2.656900000008733e-05]</msg>
<status status="PASS" starttime="20201030 11:50:39.299" endtime="20201030 11:50:39.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.295" endtime="20201030 11:50:39.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:38.863" endtime="20201030 11:50:39.302"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:35.763" endtime="20201030 11:50:39.303" critical="yes"></status>
</test>
<test id="s1-s2-t5" name="Measure Overhead Set Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:39.311" endtime="20201030 11:50:39.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.309" endtime="20201030 11:50:39.331"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:39.343" endtime="20201030 11:50:42.370"></status>
</kw>
<msg timestamp="20201030 11:50:42.371" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:39.342" endtime="20201030 11:50:42.372"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.377" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.374" endtime="20201030 11:50:42.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.383" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:42.379" endtime="20201030 11:50:42.383"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.339" endtime="20201030 11:50:42.385"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:39.337" endtime="20201030 11:50:42.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.336" endtime="20201030 11:50:42.387"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:42.394" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:42.392" endtime="20201030 11:50:42.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.388" endtime="20201030 11:50:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.335" endtime="20201030 11:50:42.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.334" endtime="20201030 11:50:42.398"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.399" endtime="20201030 11:50:42.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.333" endtime="20201030 11:50:42.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.331" endtime="20201030 11:50:42.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:39.308" endtime="20201030 11:50:42.405"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>04</arg>
<arg>set</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.423" endtime="20201030 11:50:42.579"></status>
</kw>
<msg timestamp="20201030 11:50:42.579" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.420" endtime="20201030 11:50:42.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.582" level="INFO">${RESULT} = {'cmd': 'timer overhead: set last timer', 'msg': ['overhead_timer set last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.580" endtime="20201030 11:50:42.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.583" endtime="20201030 11:50:42.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.415" endtime="20201030 11:50:42.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.410" endtime="20201030 11:50:42.585"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.588" endtime="20201030 11:50:42.590"></status>
</kw>
<msg timestamp="20201030 11:50:42.590" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:42.587" endtime="20201030 11:50:42.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.594" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:42.593" endtime="20201030 11:50:42.594"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.596" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:42.595" endtime="20201030 11:50:42.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.591" endtime="20201030 11:50:42.597"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.601" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:42.600" endtime="20201030 11:50:42.601"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.603" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:42.602" endtime="20201030 11:50:42.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.597" endtime="20201030 11:50:42.603"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.610" endtime="20201030 11:50:42.907"></status>
</kw>
<msg timestamp="20201030 11:50:42.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1068085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106858875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:42.608" endtime="20201030 11:50:42.911"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.1068085, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.106858875, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:50:42.911" endtime="20201030 11:50:42.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.919" endtime="20201030 11:50:42.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.606" endtime="20201030 11:50:42.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.604" endtime="20201030 11:50:42.922"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:42.927" level="INFO">${RESULT} = [{'diff': 5.0374999999824865e-05}, {'diff': 5.015300000010825e-05}, {'diff': 5.015300000010825e-05}, {'diff': 5.0125000000011966e-05}, {'diff': 5.013899999983806e-05}, {'diff': 5.013899999983806e-05},...</msg>
<status status="PASS" starttime="20201030 11:50:42.923" endtime="20201030 11:50:42.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:42.931" level="INFO">${OVERHEAD} = {'diff': [5.0374999999824865e-05, 5.015300000010825e-05, 5.015300000010825e-05, 5.0125000000011966e-05, 5.013899999983806e-05, 5.013899999983806e-05, 5.013900000028215e-05, 5.0082999999645494e-05, 5.0...</msg>
<status status="PASS" starttime="20201030 11:50:42.928" endtime="20201030 11:50:42.931"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.935" level="INFO">NAME: overhead-04-set-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:42.934" endtime="20201030 11:50:42.935"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:42.938" level="INFO">VALUE: [5.0374999999824865e-05, 5.015300000010825e-05, 5.015300000010825e-05, 5.0125000000011966e-05, 5.013899999983806e-05, 5.013899999983806e-05, 5.013900000028215e-05, 5.0082999999645494e-05, 5.011100000018587e-05, 5.013900000028215e-05, 5.0125000000011966e-05, 5.013900000028215e-05, 5.0125000000011966e-05, 5.019500000003063e-05, 5.013899999983806e-05, 5.0125000000011966e-05, 5.013899999983806e-05, 5.015300000010825e-05, 5.013899999983806e-05, 5.0125000000011966e-05, 5.011099999974178e-05, 5.005599999963195e-05, 5.0125000000011966e-05, 5.013900000028215e-05, 5.013899999983806e-05, 5.011099999974178e-05, 5.013900000028215e-05, 5.0125000000011966e-05, 5.011099999974178e-05, 5.0125000000011966e-05, 5.0125000000011966e-05, 5.019399999994789e-05, 5.0180999999760445e-05, 5.009699999991568e-05, 5.013899999983806e-05, 5.015200000002551e-05, 5.013899999983806e-05, 5.013899999983806e-05, 5.013899999983806e-05, 5.013899999983806e-05, 5.0125000000011966e-05, 5.013899999983806e-05, 5.0125000000011966e-05, 5.011099999974178e-05, 5.0125000000011966e-05, 5.0166000000295696e-05, 5.015300000010825e-05, 5.013900000028215e-05, 5.0125000000011966e-05, 5.015300000010825e-05]</msg>
<status status="PASS" starttime="20201030 11:50:42.936" endtime="20201030 11:50:42.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.932" endtime="20201030 11:50:42.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.406" endtime="20201030 11:50:42.939"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:39.305" endtime="20201030 11:50:42.940" critical="yes"></status>
</test>
<test id="s1-s2-t6" name="Measure Overhead Remove First Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:42.947" endtime="20201030 11:50:42.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.946" endtime="20201030 11:50:42.968"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:42.981" endtime="20201030 11:50:46.008"></status>
</kw>
<msg timestamp="20201030 11:50:46.009" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:42.980" endtime="20201030 11:50:46.010"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.014" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.011" endtime="20201030 11:50:46.015"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.020" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:46.017" endtime="20201030 11:50:46.021"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:42.976" endtime="20201030 11:50:46.022"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:42.974" endtime="20201030 11:50:46.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.972" endtime="20201030 11:50:46.024"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:46.032" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:46.030" endtime="20201030 11:50:46.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.026" endtime="20201030 11:50:46.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.972" endtime="20201030 11:50:46.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.971" endtime="20201030 11:50:46.034"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.035" endtime="20201030 11:50:46.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.970" endtime="20201030 11:50:46.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.968" endtime="20201030 11:50:46.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:42.945" endtime="20201030 11:50:46.041"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>05</arg>
<arg>remove</arg>
<arg>first</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.059" endtime="20201030 11:50:46.084"></status>
</kw>
<msg timestamp="20201030 11:50:46.085" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.056" endtime="20201030 11:50:46.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.090" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove first timer', 'msg': ['overhead_timer remove first\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.087" endtime="20201030 11:50:46.090"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.092" endtime="20201030 11:50:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.050" endtime="20201030 11:50:46.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.046" endtime="20201030 11:50:46.097"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.102" endtime="20201030 11:50:46.106"></status>
</kw>
<msg timestamp="20201030 11:50:46.107" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:46.099" endtime="20201030 11:50:46.107"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.115" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:46.113" endtime="20201030 11:50:46.115"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.119" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:46.117" endtime="20201030 11:50:46.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.108" endtime="20201030 11:50:46.121"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.128" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:46.126" endtime="20201030 11:50:46.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.132" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:46.131" endtime="20201030 11:50:46.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.122" endtime="20201030 11:50:46.134"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.141" endtime="20201030 11:50:46.431"></status>
</kw>
<msg timestamp="20201030 11:50:46.435" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103840875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103841764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.140" endtime="20201030 11:50:46.435"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103840875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.103841764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:46.436" endtime="20201030 11:50:46.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.444" endtime="20201030 11:50:46.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.136" endtime="20201030 11:50:46.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.134" endtime="20201030 11:50:46.446"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:46.450" level="INFO">${RESULT} = [{'diff': 8.88999999837381e-07}, {'diff': 8.88999999837381e-07}, {'diff': 8.049999999926172e-07}, {'diff': 8.750000000112834e-07}, {'diff': 7.9200000024926e-07}, {'diff': 9.020000000248274e-07}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:50:46.447" endtime="20201030 11:50:46.450"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:46.454" level="INFO">${OVERHEAD} = {'diff': [8.88999999837381e-07, 8.88999999837381e-07, 8.049999999926172e-07, 8.750000000112834e-07, 7.9200000024926e-07, 9.020000000248274e-07, 8.609999997410966e-07, 7.910000001665196e-07, 8.75000000...</msg>
<status status="PASS" starttime="20201030 11:50:46.451" endtime="20201030 11:50:46.454"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.459" level="INFO">NAME: overhead-05-remove-first-timer</msg>
<status status="PASS" starttime="20201030 11:50:46.458" endtime="20201030 11:50:46.459"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:46.461" level="INFO">VALUE: [8.88999999837381e-07, 8.88999999837381e-07, 8.049999999926172e-07, 8.750000000112834e-07, 7.9200000024926e-07, 9.020000000248274e-07, 8.609999997410966e-07, 7.910000001665196e-07, 8.750000000112834e-07, 8.890000002814702e-07, 8.890000002814702e-07, 8.750000000112834e-07, 8.88999999837381e-07, 9.439999999472093e-07, 8.88999999837381e-07, 8.750000000112834e-07, 8.049999999926172e-07, 8.890000002814702e-07, 8.750000000112834e-07, 8.469999999149991e-07, 8.610000001851859e-07, 8.750000000112834e-07, 8.339999997275527e-07, 8.88999999837381e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.890000002814702e-07, 8.610000001851859e-07, 8.88999999837381e-07, 9.450000000299497e-07, 8.880000001987298e-07, 8.890000002814702e-07, 8.750000000112834e-07, 9.030000001075678e-07, 8.609999997410966e-07, 9.029999996634785e-07, 8.750000000112834e-07, 8.059999996312683e-07, 8.750000000112834e-07, 8.88999999837381e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.88999999837381e-07, 8.610000001851859e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.750000000112834e-07, 8.060000000753575e-07, 8.88999999837381e-07, 9.169999999336653e-07]</msg>
<status status="PASS" starttime="20201030 11:50:46.460" endtime="20201030 11:50:46.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.455" endtime="20201030 11:50:46.462"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.042" endtime="20201030 11:50:46.462"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:42.942" endtime="20201030 11:50:46.464" critical="yes"></status>
</test>
<test id="s1-s2-t7" name="Measure Overhead Remove Middle Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:46.471" endtime="20201030 11:50:46.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.470" endtime="20201030 11:50:46.491"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:46.505" endtime="20201030 11:50:49.533"></status>
</kw>
<msg timestamp="20201030 11:50:49.534" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:46.503" endtime="20201030 11:50:49.534"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.539" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.536" endtime="20201030 11:50:49.539"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.545" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:49.541" endtime="20201030 11:50:49.545"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:46.501" endtime="20201030 11:50:49.547"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:46.498" endtime="20201030 11:50:49.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.497" endtime="20201030 11:50:49.549"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:49.556" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:49.555" endtime="20201030 11:50:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.550" endtime="20201030 11:50:49.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.496" endtime="20201030 11:50:49.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.496" endtime="20201030 11:50:49.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.559" endtime="20201030 11:50:49.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.494" endtime="20201030 11:50:49.563"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.492" endtime="20201030 11:50:49.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:46.468" endtime="20201030 11:50:49.565"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>06</arg>
<arg>remove</arg>
<arg>middle</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.583" endtime="20201030 11:50:49.640"></status>
</kw>
<msg timestamp="20201030 11:50:49.641" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.580" endtime="20201030 11:50:49.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.643" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove middle timer', 'msg': ['overhead_timer remove middle\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:49.642" endtime="20201030 11:50:49.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.644" endtime="20201030 11:50:49.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.575" endtime="20201030 11:50:49.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.570" endtime="20201030 11:50:49.647"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.649" endtime="20201030 11:50:49.652"></status>
</kw>
<msg timestamp="20201030 11:50:49.652" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:49.648" endtime="20201030 11:50:49.653"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.657" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:49.655" endtime="20201030 11:50:49.657"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.659" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:49.658" endtime="20201030 11:50:49.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.653" endtime="20201030 11:50:49.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.663" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:49.662" endtime="20201030 11:50:49.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.665" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:49.664" endtime="20201030 11:50:49.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.660" endtime="20201030 11:50:49.666"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.672" endtime="20201030 11:50:49.971"></status>
</kw>
<msg timestamp="20201030 11:50:49.974" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105164431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105171764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.671" endtime="20201030 11:50:49.974"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.105164431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.105171764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:49.975" endtime="20201030 11:50:49.982"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:49.983" endtime="20201030 11:50:49.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.668" endtime="20201030 11:50:49.985"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.667" endtime="20201030 11:50:49.985"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:49.989" level="INFO">${RESULT} = [{'diff': 7.33300000010928e-06}, {'diff': 7.306000000095736e-06}, {'diff': 7.3050000000129955e-06}, {'diff': 7.306000000095736e-06}, {'diff': 7.318999999839093e-06}, {'diff': 7.306000000095736e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:49.986" endtime="20201030 11:50:49.990"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:49.994" level="INFO">${OVERHEAD} = {'diff': [7.33300000010928e-06, 7.306000000095736e-06, 7.3050000000129955e-06, 7.306000000095736e-06, 7.318999999839093e-06, 7.306000000095736e-06, 7.306000000095736e-06, 7.291999999825549e-06, 7.2919...</msg>
<status status="PASS" starttime="20201030 11:50:49.990" endtime="20201030 11:50:49.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:49.999" level="INFO">NAME: overhead-06-remove-middle-timer</msg>
<status status="PASS" starttime="20201030 11:50:49.998" endtime="20201030 11:50:49.999"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:50.001" level="INFO">VALUE: [7.33300000010928e-06, 7.306000000095736e-06, 7.3050000000129955e-06, 7.306000000095736e-06, 7.318999999839093e-06, 7.306000000095736e-06, 7.306000000095736e-06, 7.291999999825549e-06, 7.291999999825549e-06, 7.33300000010928e-06, 7.320000000365923e-06, 7.319000000283182e-06, 7.3050000000129955e-06, 7.3199999999218335e-06, 7.306000000095736e-06, 7.23600000007707e-06, 7.3199999999218335e-06, 7.3050000000129955e-06, 7.3469999999353774e-06, 7.3050000000129955e-06, 7.306000000095736e-06, 7.291999999825549e-06, 7.306000000095736e-06, 7.306000000095736e-06, 7.306000000095736e-06, 7.319000000283182e-06, 7.306000000095736e-06, 7.306000000095736e-06, 7.3050000000129955e-06, 7.291000000186898e-06, 7.306000000095736e-06, 7.290999999742809e-06, 7.292000000269638e-06, 7.318999999839093e-06, 7.305999999651647e-06, 7.291000000186898e-06, 7.306000000095736e-06, 7.318999999839093e-06, 7.263000000090614e-06, 7.318999999839093e-06, 7.3199999999218335e-06, 7.319000000283182e-06, 7.306000000095736e-06, 7.318999999839093e-06, 7.2779999999994516e-06, 7.2779999999994516e-06, 7.3050000000129955e-06, 7.333999999747931e-06, 7.318999999839093e-06, 7.3199999999218335e-06]</msg>
<status status="PASS" starttime="20201030 11:50:50.000" endtime="20201030 11:50:50.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.995" endtime="20201030 11:50:50.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:49.567" endtime="20201030 11:50:50.002"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:46.465" endtime="20201030 11:50:50.004" critical="yes"></status>
</test>
<test id="s1-s2-t8" name="Measure Overhead Remove Last Timer">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:50.011" endtime="20201030 11:50:50.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.009" endtime="20201030 11:50:50.031"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:50.044" endtime="20201030 11:50:53.071"></status>
</kw>
<msg timestamp="20201030 11:50:53.072" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:50.042" endtime="20201030 11:50:53.073"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.077" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.074" endtime="20201030 11:50:53.078"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.083" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:53.080" endtime="20201030 11:50:53.084"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:50.040" endtime="20201030 11:50:53.085"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:50.037" endtime="20201030 11:50:53.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.036" endtime="20201030 11:50:53.087"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:53.095" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:53.093" endtime="20201030 11:50:53.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.089" endtime="20201030 11:50:53.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.035" endtime="20201030 11:50:53.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.035" endtime="20201030 11:50:53.097"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.098" endtime="20201030 11:50:53.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.033" endtime="20201030 11:50:53.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.032" endtime="20201030 11:50:53.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:50.008" endtime="20201030 11:50:53.104"></status>
</kw>
<kw name="Measure Timer Overhead">
<arguments>
<arg>07</arg>
<arg>remove</arg>
<arg>last</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Overhead Timer</arg>
<arg>${method}</arg>
<arg>${position}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Overhead Timer" library="DutDeviceIf">
<doc>Run the overhead timer benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.128" endtime="20201030 11:50:53.284"></status>
</kw>
<msg timestamp="20201030 11:50:53.285" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.125" endtime="20201030 11:50:53.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.288" level="INFO">${RESULT} = {'cmd': 'timer overhead: remove last timer', 'msg': ['overhead_timer remove last\r\n'], 'data': [{'timer count': '100'}, {'sample count': '50'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.286" endtime="20201030 11:50:53.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.289" endtime="20201030 11:50:53.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.119" endtime="20201030 11:50:53.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.109" endtime="20201030 11:50:53.291"></status>
</kw>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>DutDeviceIf.Compress Result</arg>
<arg>data=${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>data=${RESULT['data']}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.294" endtime="20201030 11:50:53.295"></status>
</kw>
<msg timestamp="20201030 11:50:53.296" level="INFO">${RESULT} = {'timer count': 100, 'sample count': 50}</msg>
<status status="PASS" starttime="20201030 11:50:53.292" endtime="20201030 11:50:53.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>timer-count</arg>
<arg>${RESULT['timer count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.300" level="INFO">NAME: timer-count</msg>
<status status="PASS" starttime="20201030 11:50:53.299" endtime="20201030 11:50:53.300"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.302" level="INFO">VALUE: 100</msg>
<status status="PASS" starttime="20201030 11:50:53.301" endtime="20201030 11:50:53.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.296" endtime="20201030 11:50:53.302"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>sample-count</arg>
<arg>${RESULT['sample count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.306" level="INFO">NAME: sample-count</msg>
<status status="PASS" starttime="20201030 11:50:53.305" endtime="20201030 11:50:53.307"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.308" level="INFO">VALUE: 50</msg>
<status status="PASS" starttime="20201030 11:50:53.307" endtime="20201030 11:50:53.309"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.303" endtime="20201030 11:50:53.309"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.315" endtime="20201030 11:50:53.620"></status>
</kw>
<msg timestamp="20201030 11:50:53.623" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111666083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.11168, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:53.314" endtime="20201030 11:50:53.623"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111666083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.11168, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:50:53.624" endtime="20201030 11:50:53.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.632" endtime="20201030 11:50:53.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.311" endtime="20201030 11:50:53.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.310" endtime="20201030 11:50:53.635"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:53.639" level="INFO">${RESULT} = [{'diff': 1.3916999999974422e-05}, {'diff': 1.3861000000225943e-05}, {'diff': 1.3832999999685569e-05}, {'diff': 1.3847000000399845e-05}, {'diff': 1.3861000000225943e-05}, {'diff': 1.3860999999781853e-...</msg>
<status status="PASS" starttime="20201030 11:50:53.635" endtime="20201030 11:50:53.639"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${OVERHEAD}</var>
</assign>
<msg timestamp="20201030 11:50:53.644" level="INFO">${OVERHEAD} = {'diff': [1.3916999999974422e-05, 1.3861000000225943e-05, 1.3832999999685569e-05, 1.3847000000399845e-05, 1.3861000000225943e-05, 1.3860999999781853e-05, 1.3861000000225943e-05, 1.3861000000225943e-05...</msg>
<status status="PASS" starttime="20201030 11:50:53.640" endtime="20201030 11:50:53.644"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>overhead-${no}-${method}-${position}-timer</arg>
<arg>${OVERHEAD['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.648" level="INFO">NAME: overhead-07-remove-last-timer</msg>
<status status="PASS" starttime="20201030 11:50:53.647" endtime="20201030 11:50:53.648"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:53.651" level="INFO">VALUE: [1.3916999999974422e-05, 1.3861000000225943e-05, 1.3832999999685569e-05, 1.3847000000399845e-05, 1.3861000000225943e-05, 1.3860999999781853e-05, 1.3861000000225943e-05, 1.3861000000225943e-05, 1.387500000005204e-05, 1.3846999999955756e-05, 1.3846999999955756e-05, 1.3846999999955756e-05, 1.3861000000225943e-05, 1.3846999999955756e-05, 1.3861000000225943e-05, 1.3861000000225943e-05, 1.3860999999781853e-05, 1.3861000000225943e-05, 1.3861000000225943e-05, 1.3860999999781853e-05, 1.3846999999955756e-05, 1.3861000000225943e-05, 1.3846999999955756e-05, 1.3832999999685569e-05, 1.3916999999974422e-05, 1.3860999999781853e-05, 1.3903000000148324e-05, 1.3846999999955756e-05, 1.3846999999955756e-05, 1.3861999999864594e-05, 1.3861000000225943e-05, 1.3846999999955756e-05, 1.3861000000225943e-05, 1.383399999976831e-05, 1.3861000000225943e-05, 1.3791000000207276e-05, 1.3889000000322227e-05, 1.3846999999955756e-05, 1.3874999999607951e-05, 1.3833000000129658e-05, 1.3861000000225943e-05, 1.3846999999955756e-05, 1.387500000005204e-05, 1.3860999999781853e-05, 1.3791999999845928e-05, 1.3861000000225943e-05, 1.3846999999955756e-05, 1.3846999999955756e-05, 1.3848000000038496e-05, 1.3860999999781853e-05]</msg>
<status status="PASS" starttime="20201030 11:50:53.649" endtime="20201030 11:50:53.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.644" endtime="20201030 11:50:53.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.105" endtime="20201030 11:50:53.652"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:50.005" endtime="20201030 11:50:53.653" critical="yes"></status>
</test>
<test id="s1-s2-t9" name="Measure Add Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:53.660" endtime="20201030 11:50:53.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.659" endtime="20201030 11:50:53.680"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:53.693" endtime="20201030 11:50:56.720"></status>
</kw>
<msg timestamp="20201030 11:50:56.721" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:53.691" endtime="20201030 11:50:56.722"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.726" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:56.723" endtime="20201030 11:50:56.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.734" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:50:56.728" endtime="20201030 11:50:56.734"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:53.689" endtime="20201030 11:50:56.736"></status>
</kw>
<status status="FAIL" starttime="20201030 11:50:53.687" endtime="20201030 11:50:56.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.685" endtime="20201030 11:50:56.738"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:50:56.745" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:50:56.744" endtime="20201030 11:50:56.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.739" endtime="20201030 11:50:56.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.685" endtime="20201030 11:50:56.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.684" endtime="20201030 11:50:56.747"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:56.749" endtime="20201030 11:50:56.751"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.683" endtime="20201030 11:50:56.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.681" endtime="20201030 11:50:56.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:53.658" endtime="20201030 11:50:56.754"></status>
</kw>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:50:56.762" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:50:56.778" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:50:57.873" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:50:56.759" endtime="20201030 11:50:57.874"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.876" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:50:57.875" endtime="20201030 11:50:57.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:56.756" endtime="20201030 11:50:57.877"></status>
</kw>
<kw name="${n} IN RANGE [ 1 | 51 ]" type="for">
<kw name="${n} = 1" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:57.881" endtime="20201030 11:50:57.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.879" endtime="20201030 11:50:57.901"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.909" endtime="20201030 11:50:57.918"></status>
</kw>
<msg timestamp="20201030 11:50:57.918" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.908" endtime="20201030 11:50:57.919"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:57.921" level="INFO">${RESULT} = {'cmd': 'list_ops 1', 'msg': ['list_ops 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:57.920" endtime="20201030 11:50:57.922"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.922" endtime="20201030 11:50:57.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.905" endtime="20201030 11:50:57.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.903" endtime="20201030 11:50:57.925"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:57.931" endtime="20201030 11:50:58.222"></status>
</kw>
<msg timestamp="20201030 11:50:58.229" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017027264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:57.930" endtime="20201030 11:50:58.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.248" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017022708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017027264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.232" endtime="20201030 11:50:58.248"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.250" endtime="20201030 11:50:58.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.927" endtime="20201030 11:50:58.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.925" endtime="20201030 11:50:58.255"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:58.264" level="INFO">${PHILIP_RES} = [{'diff': 4.555999999999311e-06}, {'diff': 4.500000000001031e-06}, {'diff': 4.500000000001031e-06}, {'diff': 4.500000000001031e-06}, {'diff': 4.514000000000601e-06}, {'diff': 4.512999999997658e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:50:58.257" endtime="20201030 11:50:58.264"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.275" level="INFO">${RESULT} = {'diff': [4.555999999999311e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.512999999997658e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.49...</msg>
<status status="PASS" starttime="20201030 11:50:58.266" endtime="20201030 11:50:58.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.283" level="INFO">NAME: 1-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:58.281" endtime="20201030 11:50:58.284"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.289" level="INFO">VALUE: [4.555999999999311e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.512999999997658e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.485999999997992e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.528000000000171e-06, 4.472000000001891e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.486000000001461e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.471999999998422e-06, 4.485999999997992e-06, 4.485999999997992e-06, 4.528000000000171e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.485999999997992e-06, 4.513999999997131e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.4999999999975615e-06, 4.500000000001031e-06, 4.514000000000601e-06, 4.514000000000601e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.500000000001031e-06, 4.486000000001461e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.286" endtime="20201030 11:50:58.289"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.276" endtime="20201030 11:50:58.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.902" endtime="20201030 11:50:58.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.879" endtime="20201030 11:50:58.292"></status>
</kw>
<kw name="${n} = 2" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.297" endtime="20201030 11:50:58.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.294" endtime="20201030 11:50:58.318"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.326" endtime="20201030 11:50:58.335"></status>
</kw>
<msg timestamp="20201030 11:50:58.336" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.325" endtime="20201030 11:50:58.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.338" level="INFO">${RESULT} = {'cmd': 'list_ops 2', 'msg': ['list_ops 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.337" endtime="20201030 11:50:58.339"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.339" endtime="20201030 11:50:58.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.322" endtime="20201030 11:50:58.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.320" endtime="20201030 11:50:58.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.348" endtime="20201030 11:50:58.636"></status>
</kw>
<msg timestamp="20201030 11:50:58.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017810222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.347" endtime="20201030 11:50:58.639"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.647" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017810222, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017818403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.640" endtime="20201030 11:50:58.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.649" endtime="20201030 11:50:58.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.344" endtime="20201030 11:50:58.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.342" endtime="20201030 11:50:58.651"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:58.655" level="INFO">${PHILIP_RES} = [{'diff': 8.180999999999466e-06}, {'diff': 8.110999999998147e-06}, {'diff': 8.138000000001283e-06}, {'diff': 8.08400000000195e-06}, {'diff': 8.111000000001617e-06}, {'diff': 8.110999999998147e-06}, {'...</msg>
<status status="PASS" starttime="20201030 11:50:58.652" endtime="20201030 11:50:58.655"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:58.659" level="INFO">${RESULT} = {'diff': [8.180999999999466e-06, 8.110999999998147e-06, 8.138000000001283e-06, 8.08400000000195e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.139000000000757e-06, 8.09699...</msg>
<status status="PASS" starttime="20201030 11:50:58.656" endtime="20201030 11:50:58.659"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.663" level="INFO">NAME: 2-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:58.662" endtime="20201030 11:50:58.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.666" level="INFO">VALUE: [8.180999999999466e-06, 8.110999999998147e-06, 8.138000000001283e-06, 8.08400000000195e-06, 8.111000000001617e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.139000000000757e-06, 8.096999999998578e-06, 8.11200000000109e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.125000000001187e-06, 8.096999999998578e-06, 8.124999999997717e-06, 8.166999999999897e-06, 8.097000000002047e-06, 8.124999999997717e-06, 8.082999999999008e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.097999999998051e-06, 8.111000000001617e-06, 8.125000000001187e-06, 8.153000000000327e-06, 8.111000000001617e-06, 8.082999999999008e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.097000000002047e-06, 8.138999999997287e-06, 8.110999999998147e-06, 8.097000000002047e-06, 8.111000000001617e-06, 8.137999999997814e-06, 8.08400000000195e-06, 8.111000000001617e-06, 8.124999999997717e-06, 8.179999999999993e-06, 8.097000000002047e-06, 8.096999999998578e-06, 8.111999999997621e-06, 8.111000000001617e-06, 8.097000000002047e-06, 8.124999999997717e-06, 8.042000000003241e-06, 8.096999999998578e-06, 8.110999999998147e-06, 8.09800000000152e-06]</msg>
<status status="PASS" starttime="20201030 11:50:58.665" endtime="20201030 11:50:58.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.660" endtime="20201030 11:50:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.319" endtime="20201030 11:50:58.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.293" endtime="20201030 11:50:58.667"></status>
</kw>
<kw name="${n} = 3" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:58.670" endtime="20201030 11:50:58.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.668" endtime="20201030 11:50:58.690"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.706" endtime="20201030 11:50:58.716"></status>
</kw>
<msg timestamp="20201030 11:50:58.717" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.696" endtime="20201030 11:50:58.717"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:58.719" level="INFO">${RESULT} = {'cmd': 'list_ops 3', 'msg': ['list_ops 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:58.718" endtime="20201030 11:50:58.720"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.720" endtime="20201030 11:50:58.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.694" endtime="20201030 11:50:58.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.692" endtime="20201030 11:50:58.723"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:58.729" endtime="20201030 11:50:59.015"></status>
</kw>
<msg timestamp="20201030 11:50:59.018" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:58.728" endtime="20201030 11:50:59.019"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.027" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024687583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024699819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.019" endtime="20201030 11:50:59.027"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.028" endtime="20201030 11:50:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.725" endtime="20201030 11:50:59.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.723" endtime="20201030 11:50:59.030"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.034" level="INFO">${PHILIP_RES} = [{'diff': 1.2236000000002273e-05}, {'diff': 1.2180999999999997e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.2194000000000094e-05}, {'diff': 1.2166999999996958e-05}, {'diff': 1.2207999999999664e-...</msg>
<status status="PASS" starttime="20201030 11:50:59.031" endtime="20201030 11:50:59.035"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.038" level="INFO">${RESULT} = {'diff': [1.2236000000002273e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2166999999996958e-05, 1.2207999999999664e-05, 1.2167000000000427e-05, 1.2125000000001718e-05...</msg>
<status status="PASS" starttime="20201030 11:50:59.035" endtime="20201030 11:50:59.039"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.043" level="INFO">NAME: 3-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.042" endtime="20201030 11:50:59.044"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.046" level="INFO">VALUE: [1.2236000000002273e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.2166999999996958e-05, 1.2207999999999664e-05, 1.2167000000000427e-05, 1.2125000000001718e-05, 1.2180999999999997e-05, 1.2180999999999997e-05, 1.2111000000002148e-05, 1.2180999999999997e-05, 1.2166000000000954e-05, 1.2194999999999567e-05, 1.2166000000000954e-05, 1.2180999999999997e-05, 1.2194000000000094e-05, 1.2223000000002177e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2235999999998803e-05, 1.2194000000000094e-05, 1.2180999999999997e-05, 1.2250000000001843e-05, 1.2180999999999997e-05, 1.2207999999999664e-05, 1.2207999999999664e-05, 1.2194999999999567e-05, 1.2180000000000524e-05, 1.2249999999998373e-05, 1.2180000000000524e-05, 1.2194999999999567e-05, 1.2235999999998803e-05, 1.2209000000002607e-05, 1.2207999999999664e-05, 1.2167000000000427e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2235999999998803e-05, 1.2194000000000094e-05, 1.2194999999999567e-05, 1.2194000000000094e-05, 1.2195000000003037e-05, 1.2180000000000524e-05, 1.2207999999999664e-05, 1.2180999999999997e-05, 1.2180000000000524e-05, 1.2180999999999997e-05, 1.2166000000000954e-05, 1.2180999999999997e-05]</msg>
<status status="PASS" starttime="20201030 11:50:59.045" endtime="20201030 11:50:59.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.039" endtime="20201030 11:50:59.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.690" endtime="20201030 11:50:59.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:58.668" endtime="20201030 11:50:59.048"></status>
</kw>
<kw name="${n} = 4" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.050" endtime="20201030 11:50:59.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.049" endtime="20201030 11:50:59.070"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.078" endtime="20201030 11:50:59.088"></status>
</kw>
<msg timestamp="20201030 11:50:59.089" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.077" endtime="20201030 11:50:59.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.091" level="INFO">${RESULT} = {'cmd': 'list_ops 4', 'msg': ['list_ops 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.090" endtime="20201030 11:50:59.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.092" endtime="20201030 11:50:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.074" endtime="20201030 11:50:59.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.072" endtime="20201030 11:50:59.095"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.101" endtime="20201030 11:50:59.387"></status>
</kw>
<msg timestamp="20201030 11:50:59.390" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016950431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.099" endtime="20201030 11:50:59.390"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.398" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016933625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016950431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.391" endtime="20201030 11:50:59.399"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.399" endtime="20201030 11:50:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.097" endtime="20201030 11:50:59.401"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.095" endtime="20201030 11:50:59.402"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.406" level="INFO">${PHILIP_RES} = [{'diff': 1.6805999999997684e-05}, {'diff': 1.6763999999998974e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.6735999999999834e-05}, {'diff': 1.6763999999998974e-...</msg>
<status status="PASS" starttime="20201030 11:50:59.403" endtime="20201030 11:50:59.406"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.411" level="INFO">${RESULT} = {'diff': [1.6805999999997684e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6735999999999834e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6735999999999834e-05...</msg>
<status status="PASS" starttime="20201030 11:50:59.407" endtime="20201030 11:50:59.411"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.415" level="INFO">NAME: 4-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.414" endtime="20201030 11:50:59.415"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.418" level="INFO">VALUE: [1.6805999999997684e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6735999999999834e-05, 1.6763999999998974e-05, 1.6749999999999404e-05, 1.6735999999999834e-05, 1.6764000000002444e-05, 1.6778000000002014e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6763999999998974e-05, 1.67629999999995e-05, 1.6778000000002014e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.6764000000002444e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6777999999998544e-05, 1.6763999999998974e-05, 1.6834000000000293e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.67629999999995e-05, 1.6749999999999404e-05, 1.6750000000002874e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.6763999999998974e-05, 1.6750000000002874e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6749999999999404e-05, 1.6736999999999308e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.6764000000002444e-05, 1.6735999999999834e-05, 1.6735999999999834e-05, 1.6749999999999404e-05, 1.6763999999998974e-05, 1.6764000000002444e-05, 1.6737000000002777e-05, 1.666699999999799e-05]</msg>
<status status="PASS" starttime="20201030 11:50:59.416" endtime="20201030 11:50:59.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.412" endtime="20201030 11:50:59.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.070" endtime="20201030 11:50:59.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.048" endtime="20201030 11:50:59.419"></status>
</kw>
<kw name="${n} = 5" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.421" endtime="20201030 11:50:59.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.420" endtime="20201030 11:50:59.441"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.450" endtime="20201030 11:50:59.458"></status>
</kw>
<msg timestamp="20201030 11:50:59.459" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.448" endtime="20201030 11:50:59.459"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.461" level="INFO">${RESULT} = {'cmd': 'list_ops 5', 'msg': ['list_ops 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.460" endtime="20201030 11:50:59.462"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.462" endtime="20201030 11:50:59.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.446" endtime="20201030 11:50:59.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.444" endtime="20201030 11:50:59.465"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.471" endtime="20201030 11:50:59.756"></status>
</kw>
<msg timestamp="20201030 11:50:59.759" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017078069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017099944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.470" endtime="20201030 11:50:59.759"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017078069, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017099944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.760" endtime="20201030 11:50:59.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.769" endtime="20201030 11:50:59.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.467" endtime="20201030 11:50:59.772"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.466" endtime="20201030 11:50:59.772"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:50:59.776" level="INFO">${PHILIP_RES} = [{'diff': 2.187499999999759e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.1778000000000075e-05}, {'diff': 2.180499999999974e-05}, {'diff': 2.1721999999998326e-05}, {'diff': 2.180499999999974e-05}...</msg>
<status status="PASS" starttime="20201030 11:50:59.773" endtime="20201030 11:50:59.776"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:50:59.780" level="INFO">${RESULT} = {'diff': [2.187499999999759e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.180499999999974e-05, 2.1721999999998326e-05, 2.180499999999974e-05, 2.180499999999974e-05, 2.1791999999999645e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:50:59.777" endtime="20201030 11:50:59.780"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.784" level="INFO">NAME: 5-timer-trace</msg>
<status status="PASS" starttime="20201030 11:50:59.783" endtime="20201030 11:50:59.785"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.787" level="INFO">VALUE: [2.187499999999759e-05, 2.1778000000000075e-05, 2.1778000000000075e-05, 2.180499999999974e-05, 2.1721999999998326e-05, 2.180499999999974e-05, 2.180499999999974e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.184700000000192e-05, 2.1764000000000505e-05, 2.1764000000000505e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1778000000000075e-05, 2.1805999999999215e-05, 2.17770000000006e-05, 2.1750000000000935e-05, 2.180499999999974e-05, 2.1778000000000075e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.184699999999845e-05, 2.1805999999999215e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.184700000000192e-05, 2.179100000000017e-05, 2.1791999999999645e-05, 2.1763999999997036e-05, 2.1791999999999645e-05, 2.1777999999996606e-05, 2.1749999999997466e-05, 2.180499999999974e-05, 2.1861999999997495e-05, 2.1750000000000935e-05, 2.1736000000001365e-05, 2.1805999999999215e-05, 2.180499999999974e-05, 2.1791999999999645e-05, 2.179100000000017e-05, 2.1722000000001795e-05, 2.179100000000017e-05, 2.1778000000000075e-05, 2.184700000000192e-05, 2.1791999999999645e-05, 2.1791999999999645e-05, 2.1764000000000505e-05, 2.1806000000002684e-05]</msg>
<status status="PASS" starttime="20201030 11:50:59.785" endtime="20201030 11:50:59.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.781" endtime="20201030 11:50:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.442" endtime="20201030 11:50:59.788"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.419" endtime="20201030 11:50:59.788"></status>
</kw>
<kw name="${n} = 6" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:50:59.791" endtime="20201030 11:50:59.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.789" endtime="20201030 11:50:59.811"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.819" endtime="20201030 11:50:59.829"></status>
</kw>
<msg timestamp="20201030 11:50:59.830" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.817" endtime="20201030 11:50:59.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:50:59.832" level="INFO">${RESULT} = {'cmd': 'list_ops 6', 'msg': ['list_ops 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:50:59.831" endtime="20201030 11:50:59.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.833" endtime="20201030 11:50:59.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.815" endtime="20201030 11:50:59.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.813" endtime="20201030 11:50:59.837"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:50:59.843" endtime="20201030 11:51:00.129"></status>
</kw>
<msg timestamp="20201030 11:51:00.133" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016490528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016517889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:50:59.841" endtime="20201030 11:51:00.133"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.141" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016490528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016517889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.134" endtime="20201030 11:51:00.141"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.142" endtime="20201030 11:51:00.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.839" endtime="20201030 11:51:00.144"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.837" endtime="20201030 11:51:00.145"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:00.149" level="INFO">${PHILIP_RES} = [{'diff': 2.7361000000000052e-05}, {'diff': 2.7235999999999927e-05}, {'diff': 2.7319000000001342e-05}, {'diff': 2.7292000000001676e-05}, {'diff': 2.7305000000001772e-05}, {'diff': 2.7305000000001772e-...</msg>
<status status="PASS" starttime="20201030 11:51:00.145" endtime="20201030 11:51:00.149"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.153" level="INFO">${RESULT} = {'diff': [2.7361000000000052e-05, 2.7235999999999927e-05, 2.7319000000001342e-05, 2.7292000000001676e-05, 2.7305000000001772e-05, 2.7305000000001772e-05, 2.7361999999999526e-05, 2.7306000000001246e-05...</msg>
<status status="PASS" starttime="20201030 11:51:00.150" endtime="20201030 11:51:00.153"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.157" level="INFO">NAME: 6-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:00.156" endtime="20201030 11:51:00.157"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.160" level="INFO">VALUE: [2.7361000000000052e-05, 2.7235999999999927e-05, 2.7319000000001342e-05, 2.7292000000001676e-05, 2.7305000000001772e-05, 2.7305000000001772e-05, 2.7361999999999526e-05, 2.7306000000001246e-05, 2.7305999999997776e-05, 2.7304999999998303e-05, 2.7290999999998733e-05, 2.7305999999997776e-05, 2.7347999999999956e-05, 2.7319999999997346e-05, 2.7305999999997776e-05, 2.7318999999997873e-05, 2.7333000000000912e-05, 2.7318999999997873e-05, 2.7319999999997346e-05, 2.7305999999997776e-05, 2.7318999999997873e-05, 2.7304999999998303e-05, 2.7290999999998733e-05, 2.7291999999998207e-05, 2.7306000000001246e-05, 2.7291999999998207e-05, 2.7304999999998303e-05, 2.7290999999998733e-05, 2.7347000000000482e-05, 2.7292000000001676e-05, 2.7292000000001676e-05, 2.7306000000001246e-05, 2.7292000000001676e-05, 2.7222000000000357e-05, 2.7291000000002202e-05, 2.7347999999999956e-05, 2.7290999999998733e-05, 2.7306000000001246e-05, 2.7292000000001676e-05, 2.7249999999999497e-05, 2.7305000000001772e-05, 2.7292000000001676e-05, 2.7320000000000816e-05, 2.7292000000001676e-05, 2.7305000000001772e-05, 2.7290999999998733e-05, 2.7305000000001772e-05, 2.7291999999998207e-05, 2.7306000000001246e-05, 2.7319000000001342e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.158" endtime="20201030 11:51:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.154" endtime="20201030 11:51:00.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.811" endtime="20201030 11:51:00.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:59.789" endtime="20201030 11:51:00.162"></status>
</kw>
<kw name="${n} = 7" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.164" endtime="20201030 11:51:00.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.163" endtime="20201030 11:51:00.184"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.192" endtime="20201030 11:51:00.203"></status>
</kw>
<msg timestamp="20201030 11:51:00.203" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.191" endtime="20201030 11:51:00.203"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.206" level="INFO">${RESULT} = {'cmd': 'list_ops 7', 'msg': ['list_ops 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.204" endtime="20201030 11:51:00.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.207" endtime="20201030 11:51:00.208"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.188" endtime="20201030 11:51:00.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.187" endtime="20201030 11:51:00.209"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.216" endtime="20201030 11:51:00.501"></status>
</kw>
<msg timestamp="20201030 11:51:00.504" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01646425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:00.214" endtime="20201030 11:51:00.504"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.512" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016430903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01646425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:00.505" endtime="20201030 11:51:00.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.513" endtime="20201030 11:51:00.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.212" endtime="20201030 11:51:00.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.210" endtime="20201030 11:51:00.516"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:00.520" level="INFO">${PHILIP_RES} = [{'diff': 3.3346999999999544e-05}, {'diff': 3.3319000000000404e-05}, {'diff': 3.326399999999813e-05}, {'diff': 3.329200000000074e-05}, {'diff': 3.3304999999997364e-05}, {'diff': 3.329200000000074e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:00.517" endtime="20201030 11:51:00.520"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.525" level="INFO">${RESULT} = {'diff': [3.3346999999999544e-05, 3.3319000000000404e-05, 3.326399999999813e-05, 3.329200000000074e-05, 3.3304999999997364e-05, 3.329200000000074e-05, 3.329200000000074e-05, 3.329200000000074e-05, 3.3...</msg>
<status status="PASS" starttime="20201030 11:51:00.521" endtime="20201030 11:51:00.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.529" level="INFO">NAME: 7-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:00.528" endtime="20201030 11:51:00.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.532" level="INFO">VALUE: [3.3346999999999544e-05, 3.3319000000000404e-05, 3.326399999999813e-05, 3.329200000000074e-05, 3.3304999999997364e-05, 3.329200000000074e-05, 3.329200000000074e-05, 3.329200000000074e-05, 3.3291000000001264e-05, 3.331999999999988e-05, 3.329200000000074e-05, 3.3290999999997795e-05, 3.330600000000031e-05, 3.329200000000074e-05, 3.326399999999813e-05, 3.3305000000000834e-05, 3.3360999999999114e-05, 3.329200000000074e-05, 3.3276999999998225e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.3332999999999974e-05, 3.325000000000203e-05, 3.329199999999727e-05, 3.3305000000000834e-05, 3.32640000000016e-05, 3.329200000000074e-05, 3.331999999999988e-05, 3.3276999999998225e-05, 3.329200000000074e-05, 3.331999999999988e-05, 3.3346999999999544e-05, 3.3305000000000834e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.32779999999977e-05, 3.327800000000117e-05, 3.329199999999727e-05, 3.3291000000001264e-05, 3.329200000000074e-05, 3.323599999999899e-05, 3.3291000000001264e-05, 3.329199999999727e-05, 3.329200000000074e-05, 3.327800000000117e-05, 3.3276999999998225e-05, 3.3332999999999974e-05, 3.32779999999977e-05, 3.3291000000001264e-05, 3.330600000000031e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.530" endtime="20201030 11:51:00.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.526" endtime="20201030 11:51:00.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.185" endtime="20201030 11:51:00.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.162" endtime="20201030 11:51:00.533"></status>
</kw>
<kw name="${n} = 8" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.536" endtime="20201030 11:51:00.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.534" endtime="20201030 11:51:00.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.564" endtime="20201030 11:51:00.576"></status>
</kw>
<msg timestamp="20201030 11:51:00.576" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.562" endtime="20201030 11:51:00.576"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.578" level="INFO">${RESULT} = {'cmd': 'list_ops 8', 'msg': ['list_ops 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.577" endtime="20201030 11:51:00.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.579" endtime="20201030 11:51:00.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.560" endtime="20201030 11:51:00.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.558" endtime="20201030 11:51:00.582"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.588" endtime="20201030 11:51:00.877"></status>
</kw>
<msg timestamp="20201030 11:51:00.880" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016513792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016553556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.587" endtime="20201030 11:51:00.880"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.888" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016513792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016553556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.881" endtime="20201030 11:51:00.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.890" endtime="20201030 11:51:00.891"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.584" endtime="20201030 11:51:00.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.583" endtime="20201030 11:51:00.892"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:00.896" level="INFO">${PHILIP_RES} = [{'diff': 3.976400000000116e-05}, {'diff': 3.976399999999769e-05}, {'diff': 3.974999999999812e-05}, {'diff': 3.976400000000116e-05}, {'diff': 3.9805000000000396e-05}, {'diff': 3.973600000000202e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:00.893" endtime="20201030 11:51:00.896"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:00.900" level="INFO">${RESULT} = {'diff': [3.976400000000116e-05, 3.976399999999769e-05, 3.974999999999812e-05, 3.976400000000116e-05, 3.9805000000000396e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.973...</msg>
<status status="PASS" starttime="20201030 11:51:00.897" endtime="20201030 11:51:00.900"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.904" level="INFO">NAME: 8-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:00.903" endtime="20201030 11:51:00.905"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.907" level="INFO">VALUE: [3.976400000000116e-05, 3.976399999999769e-05, 3.974999999999812e-05, 3.976400000000116e-05, 3.9805000000000396e-05, 3.973600000000202e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.973599999999855e-05, 3.972199999999898e-05, 3.976400000000116e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.975000000000159e-05, 3.983399999999901e-05, 3.981999999999944e-05, 3.973599999999855e-05, 3.975000000000159e-05, 3.976400000000116e-05, 3.9694999999999314e-05, 3.9681000000003214e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.973599999999855e-05, 3.973600000000202e-05, 3.9680999999999744e-05, 3.976400000000116e-05, 3.973599999999855e-05, 3.974999999999812e-05, 3.9776999999997786e-05, 3.9818999999999966e-05, 3.9763000000001686e-05, 3.9763000000001686e-05, 3.976400000000116e-05, 3.977800000000073e-05, 3.974999999999812e-05, 3.973599999999855e-05, 3.976400000000116e-05, 3.973600000000202e-05, 3.976400000000116e-05, 3.974999999999812e-05, 3.974999999999812e-05, 3.976399999999769e-05, 3.974999999999812e-05, 3.9694999999999314e-05, 3.97920000000003e-05, 3.976400000000116e-05, 3.976400000000116e-05, 3.973599999999855e-05]</msg>
<status status="PASS" starttime="20201030 11:51:00.905" endtime="20201030 11:51:00.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.901" endtime="20201030 11:51:00.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.556" endtime="20201030 11:51:00.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.534" endtime="20201030 11:51:00.909"></status>
</kw>
<kw name="${n} = 9" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:00.911" endtime="20201030 11:51:00.930"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.909" endtime="20201030 11:51:00.931"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.939" endtime="20201030 11:51:00.949"></status>
</kw>
<msg timestamp="20201030 11:51:00.950" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.937" endtime="20201030 11:51:00.950"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:00.952" level="INFO">${RESULT} = {'cmd': 'list_ops 9', 'msg': ['list_ops 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:00.951" endtime="20201030 11:51:00.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.953" endtime="20201030 11:51:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.935" endtime="20201030 11:51:00.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.933" endtime="20201030 11:51:00.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:00.963" endtime="20201030 11:51:01.269"></status>
</kw>
<msg timestamp="20201030 11:51:01.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016441819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:00.961" endtime="20201030 11:51:01.273"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.281" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016441819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016488486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.274" endtime="20201030 11:51:01.281"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.282" endtime="20201030 11:51:01.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.959" endtime="20201030 11:51:01.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.957" endtime="20201030 11:51:01.285"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:01.288" level="INFO">${PHILIP_RES} = [{'diff': 4.6667000000000236e-05}, {'diff': 4.6708999999998946e-05}, {'diff': 4.6709000000002415e-05}, {'diff': 4.670799999999947e-05}, {'diff': 4.663899999999763e-05}, {'diff': 4.6667000000000236e-05...</msg>
<status status="PASS" starttime="20201030 11:51:01.285" endtime="20201030 11:51:01.289"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.292" level="INFO">${RESULT} = {'diff': [4.6667000000000236e-05, 4.6708999999998946e-05, 4.6709000000002415e-05, 4.670799999999947e-05, 4.663899999999763e-05, 4.6667000000000236e-05, 4.672199999999904e-05, 4.6695000000002845e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:51:01.289" endtime="20201030 11:51:01.293"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.297" level="INFO">NAME: 9-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:01.296" endtime="20201030 11:51:01.297"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.299" level="INFO">VALUE: [4.6667000000000236e-05, 4.6708999999998946e-05, 4.6709000000002415e-05, 4.670799999999947e-05, 4.663899999999763e-05, 4.6667000000000236e-05, 4.672199999999904e-05, 4.6695000000002845e-05, 4.672200000000251e-05, 4.66939999999999e-05, 4.670799999999947e-05, 4.66939999999999e-05, 4.6709000000002415e-05, 4.6695000000002845e-05, 4.670799999999947e-05, 4.668000000000033e-05, 4.6611000000001956e-05, 4.6695000000002845e-05, 4.6709000000002415e-05, 4.666599999999729e-05, 4.670799999999947e-05, 4.66939999999999e-05, 4.6653000000000666e-05, 4.6680999999999806e-05, 4.663899999999763e-05, 4.668000000000033e-05, 4.6680999999999806e-05, 4.6694999999999376e-05, 4.6680999999999806e-05, 4.66939999999999e-05, 4.668000000000033e-05, 4.670799999999947e-05, 4.6695000000002845e-05, 4.6709000000002415e-05, 4.6680999999999806e-05, 4.668000000000033e-05, 4.66939999999999e-05, 4.670799999999947e-05, 4.6694999999999376e-05, 4.6680999999999806e-05, 4.66939999999999e-05, 4.66939999999999e-05, 4.66939999999999e-05, 4.6694999999999376e-05, 4.6653000000000666e-05, 4.668000000000033e-05, 4.6639000000001096e-05, 4.668000000000033e-05, 4.6681000000003275e-05, 4.6694999999999376e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.298" endtime="20201030 11:51:01.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.293" endtime="20201030 11:51:01.301"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.931" endtime="20201030 11:51:01.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:00.909" endtime="20201030 11:51:01.302"></status>
</kw>
<kw name="${n} = 10" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.304" endtime="20201030 11:51:01.323"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.303" endtime="20201030 11:51:01.324"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.332" endtime="20201030 11:51:01.342"></status>
</kw>
<msg timestamp="20201030 11:51:01.343" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.331" endtime="20201030 11:51:01.343"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.345" level="INFO">${RESULT} = {'cmd': 'list_ops 10', 'msg': ['list_ops 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.344" endtime="20201030 11:51:01.346"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.346" endtime="20201030 11:51:01.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.328" endtime="20201030 11:51:01.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.326" endtime="20201030 11:51:01.349"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.355" endtime="20201030 11:51:01.640"></status>
</kw>
<msg timestamp="20201030 11:51:01.644" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016586847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016641014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.354" endtime="20201030 11:51:01.644"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.652" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016586847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016641014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.645" endtime="20201030 11:51:01.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.653" endtime="20201030 11:51:01.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.351" endtime="20201030 11:51:01.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.349" endtime="20201030 11:51:01.656"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:01.660" level="INFO">${PHILIP_RES} = [{'diff': 5.41670000000008e-05}, {'diff': 5.405600000000024e-05}, {'diff': 5.411099999999905e-05}, {'diff': 5.411199999999852e-05}, {'diff': 5.412500000000209e-05}, {'diff': 5.409699999999948e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:01.657" endtime="20201030 11:51:01.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:01.665" level="INFO">${RESULT} = {'diff': [5.41670000000008e-05, 5.405600000000024e-05, 5.411099999999905e-05, 5.411199999999852e-05, 5.412500000000209e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.406999999999981e-05, 5.40840...</msg>
<status status="PASS" starttime="20201030 11:51:01.661" endtime="20201030 11:51:01.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.670" level="INFO">NAME: 10-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:01.669" endtime="20201030 11:51:01.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.672" level="INFO">VALUE: [5.41670000000008e-05, 5.405600000000024e-05, 5.411099999999905e-05, 5.411199999999852e-05, 5.412500000000209e-05, 5.409699999999948e-05, 5.408299999999991e-05, 5.406999999999981e-05, 5.408400000000285e-05, 5.4137999999998715e-05, 5.413900000000166e-05, 5.411100000000252e-05, 5.411099999999905e-05, 5.405600000000024e-05, 5.411099999999905e-05, 5.411100000000252e-05, 5.411200000000199e-05, 5.409699999999948e-05, 5.409699999999948e-05, 5.404200000000067e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.4137999999998715e-05, 5.413900000000166e-05, 5.408299999999991e-05, 5.411100000000252e-05, 5.412499999999862e-05, 5.411100000000252e-05, 5.413899999999819e-05, 5.409799999999895e-05, 5.411100000000252e-05, 5.411099999999905e-05, 5.411100000000252e-05, 5.411099999999905e-05, 5.411099999999905e-05, 5.412499999999862e-05, 5.411199999999852e-05, 5.412500000000209e-05, 5.40280000000011e-05, 5.412500000000209e-05, 5.412499999999862e-05, 5.406999999999981e-05, 5.409799999999895e-05, 5.412499999999862e-05, 5.412500000000209e-05, 5.413899999999819e-05, 5.409699999999948e-05, 5.409699999999948e-05, 5.412499999999862e-05, 5.411100000000252e-05]</msg>
<status status="PASS" starttime="20201030 11:51:01.671" endtime="20201030 11:51:01.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.666" endtime="20201030 11:51:01.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.325" endtime="20201030 11:51:01.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.302" endtime="20201030 11:51:01.674"></status>
</kw>
<kw name="${n} = 11" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:01.677" endtime="20201030 11:51:01.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.675" endtime="20201030 11:51:01.697"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.704" endtime="20201030 11:51:01.715"></status>
</kw>
<msg timestamp="20201030 11:51:01.716" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.703" endtime="20201030 11:51:01.716"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:01.718" level="INFO">${RESULT} = {'cmd': 'list_ops 11', 'msg': ['list_ops 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:01.717" endtime="20201030 11:51:01.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.719" endtime="20201030 11:51:01.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.701" endtime="20201030 11:51:01.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.699" endtime="20201030 11:51:01.722"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:01.728" endtime="20201030 11:51:02.028"></status>
</kw>
<msg timestamp="20201030 11:51:02.035" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016528889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016590944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:01.727" endtime="20201030 11:51:02.035"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016528889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016590944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.037" endtime="20201030 11:51:02.054"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.055" endtime="20201030 11:51:02.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.724" endtime="20201030 11:51:02.058"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.722" endtime="20201030 11:51:02.059"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:02.062" level="INFO">${PHILIP_RES} = [{'diff': 6.205499999999836e-05}, {'diff': 6.20699999999974e-05}, {'diff': 6.20140000000026e-05}, {'diff': 6.194499999999728e-05}, {'diff': 6.201399999999913e-05}, {'diff': 6.199999999999956e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:02.059" endtime="20201030 11:51:02.063"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.067" level="INFO">${RESULT} = {'diff': [6.205499999999836e-05, 6.20699999999974e-05, 6.20140000000026e-05, 6.194499999999728e-05, 6.201399999999913e-05, 6.199999999999956e-05, 6.198599999999999e-05, 6.201399999999913e-05, 6.201399...</msg>
<status status="PASS" starttime="20201030 11:51:02.063" endtime="20201030 11:51:02.067"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.071" level="INFO">NAME: 11-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:02.070" endtime="20201030 11:51:02.071"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.073" level="INFO">VALUE: [6.205499999999836e-05, 6.20699999999974e-05, 6.20140000000026e-05, 6.194499999999728e-05, 6.201399999999913e-05, 6.199999999999956e-05, 6.198599999999999e-05, 6.201399999999913e-05, 6.201399999999913e-05, 6.20140000000026e-05, 6.199999999999956e-05, 6.201399999999913e-05, 6.201399999999913e-05, 6.199999999999956e-05, 6.192999999999824e-05, 6.201399999999913e-05, 6.200000000000302e-05, 6.198599999999999e-05, 6.201399999999913e-05, 6.20140000000026e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.201399999999913e-05, 6.204200000000173e-05, 6.201399999999913e-05, 6.194400000000128e-05, 6.200000000000302e-05, 6.199999999999956e-05, 6.198699999999946e-05, 6.201399999999913e-05, 6.198599999999999e-05, 6.199999999999956e-05, 6.195800000000085e-05, 6.20140000000026e-05, 6.20560000000013e-05, 6.199999999999956e-05, 6.202800000000216e-05, 6.200000000000302e-05, 6.195800000000085e-05, 6.199999999999956e-05, 6.20140000000026e-05, 6.201399999999913e-05, 6.201399999999913e-05, 6.195900000000032e-05, 6.199999999999956e-05, 6.199999999999956e-05, 6.20279999999987e-05, 6.198599999999999e-05, 6.199999999999956e-05, 6.20279999999987e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.072" endtime="20201030 11:51:02.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.067" endtime="20201030 11:51:02.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.697" endtime="20201030 11:51:02.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:01.674" endtime="20201030 11:51:02.075"></status>
</kw>
<kw name="${n} = 12" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.077" endtime="20201030 11:51:02.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.076" endtime="20201030 11:51:02.097"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.105" endtime="20201030 11:51:02.116"></status>
</kw>
<msg timestamp="20201030 11:51:02.116" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.104" endtime="20201030 11:51:02.117"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.119" level="INFO">${RESULT} = {'cmd': 'list_ops 12', 'msg': ['list_ops 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.117" endtime="20201030 11:51:02.119"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.120" endtime="20201030 11:51:02.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.101" endtime="20201030 11:51:02.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.099" endtime="20201030 11:51:02.123"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.130" endtime="20201030 11:51:02.415"></status>
</kw>
<msg timestamp="20201030 11:51:02.418" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016496042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.128" endtime="20201030 11:51:02.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016496042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016566486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.419" endtime="20201030 11:51:02.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.427" endtime="20201030 11:51:02.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.125" endtime="20201030 11:51:02.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.124" endtime="20201030 11:51:02.430"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:02.434" level="INFO">${PHILIP_RES} = [{'diff': 7.044399999999937e-05}, {'diff': 7.037500000000099e-05}, {'diff': 7.037500000000099e-05}, {'diff': 7.038900000000056e-05}, {'diff': 7.038900000000056e-05}, {'diff': 7.038900000000056e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:02.431" endtime="20201030 11:51:02.434"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.438" level="INFO">${RESULT} = {'diff': [7.044399999999937e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.034699999999838e-05, 7.038900000000056e-05, 7.0375...</msg>
<status status="PASS" starttime="20201030 11:51:02.435" endtime="20201030 11:51:02.438"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.442" level="INFO">NAME: 12-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:02.441" endtime="20201030 11:51:02.442"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.444" level="INFO">VALUE: [7.044399999999937e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.034699999999838e-05, 7.038900000000056e-05, 7.037500000000099e-05, 7.040300000000013e-05, 7.040300000000013e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.038900000000056e-05, 7.043099999999927e-05, 7.040300000000013e-05, 7.036099999999795e-05, 7.037500000000099e-05, 7.044499999999884e-05, 7.038899999999709e-05, 7.038900000000056e-05, 7.040300000000013e-05, 7.038899999999709e-05, 7.040300000000013e-05, 7.036100000000142e-05, 7.037499999999752e-05, 7.030499999999967e-05, 7.037500000000099e-05, 7.037499999999752e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.036099999999795e-05, 7.037500000000099e-05, 7.038900000000056e-05, 7.037499999999752e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.038900000000056e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.037499999999752e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.036099999999795e-05, 7.037500000000099e-05, 7.037500000000099e-05, 7.037499999999752e-05, 7.040199999999719e-05, 7.038900000000056e-05, 7.037500000000099e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.443" endtime="20201030 11:51:02.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.439" endtime="20201030 11:51:02.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.098" endtime="20201030 11:51:02.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.075" endtime="20201030 11:51:02.447"></status>
</kw>
<kw name="${n} = 13" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.449" endtime="20201030 11:51:02.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.448" endtime="20201030 11:51:02.469"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.477" endtime="20201030 11:51:02.489"></status>
</kw>
<msg timestamp="20201030 11:51:02.490" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.476" endtime="20201030 11:51:02.490"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.492" level="INFO">${RESULT} = {'cmd': 'list_ops 13', 'msg': ['list_ops 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.491" endtime="20201030 11:51:02.492"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.493" endtime="20201030 11:51:02.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.473" endtime="20201030 11:51:02.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.471" endtime="20201030 11:51:02.496"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.502" endtime="20201030 11:51:02.788"></status>
</kw>
<msg timestamp="20201030 11:51:02.791" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017076861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017156139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.500" endtime="20201030 11:51:02.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017076861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017156139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.792" endtime="20201030 11:51:02.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.800" endtime="20201030 11:51:02.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.498" endtime="20201030 11:51:02.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.496" endtime="20201030 11:51:02.803"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:02.806" level="INFO">${PHILIP_RES} = [{'diff': 7.927800000000207e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.920800000000075e-05}, {'diff': 7.929199999999817e-05}, {'diff': 7.920800000000075e-05}, {'diff': 7.922200000000032e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:02.803" endtime="20201030 11:51:02.807"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:02.811" level="INFO">${RESULT} = {'diff': [7.927800000000207e-05, 7.923599999999989e-05, 7.920800000000075e-05, 7.929199999999817e-05, 7.920800000000075e-05, 7.922200000000032e-05, 7.924999999999946e-05, 7.929199999999817e-05, 7.9209...</msg>
<status status="PASS" starttime="20201030 11:51:02.807" endtime="20201030 11:51:02.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.816" level="INFO">NAME: 13-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:02.815" endtime="20201030 11:51:02.816"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.818" level="INFO">VALUE: [7.927800000000207e-05, 7.923599999999989e-05, 7.920800000000075e-05, 7.929199999999817e-05, 7.920800000000075e-05, 7.922200000000032e-05, 7.924999999999946e-05, 7.929199999999817e-05, 7.920900000000022e-05, 7.924999999999946e-05, 7.922200000000032e-05, 7.922200000000032e-05, 7.922199999999685e-05, 7.922200000000032e-05, 7.922200000000032e-05, 7.920899999999675e-05, 7.923699999999936e-05, 7.923599999999989e-05, 7.922200000000032e-05, 7.920800000000075e-05, 7.919400000000118e-05, 7.922200000000032e-05, 7.923599999999989e-05, 7.920800000000075e-05, 7.920900000000022e-05, 7.92640000000025e-05, 7.922200000000032e-05, 7.923599999999989e-05, 7.920799999999728e-05, 7.922200000000032e-05, 7.923600000000336e-05, 7.922200000000032e-05, 7.922200000000032e-05, 7.92229999999998e-05, 7.920900000000022e-05, 7.920900000000022e-05, 7.915300000000194e-05, 7.922200000000032e-05, 7.920800000000075e-05, 7.922200000000032e-05, 7.920800000000075e-05, 7.923600000000336e-05, 7.924999999999946e-05, 7.92229999999998e-05, 7.927699999999913e-05, 7.920800000000075e-05, 7.920800000000075e-05, 7.923599999999989e-05, 7.922200000000032e-05, 7.922200000000032e-05]</msg>
<status status="PASS" starttime="20201030 11:51:02.817" endtime="20201030 11:51:02.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.812" endtime="20201030 11:51:02.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.470" endtime="20201030 11:51:02.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.447" endtime="20201030 11:51:02.820"></status>
</kw>
<kw name="${n} = 14" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:02.822" endtime="20201030 11:51:02.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.821" endtime="20201030 11:51:02.842"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.850" endtime="20201030 11:51:02.862"></status>
</kw>
<msg timestamp="20201030 11:51:02.863" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.849" endtime="20201030 11:51:02.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:02.865" level="INFO">${RESULT} = {'cmd': 'list_ops 14', 'msg': ['list_ops 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:02.864" endtime="20201030 11:51:02.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.866" endtime="20201030 11:51:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.846" endtime="20201030 11:51:02.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.844" endtime="20201030 11:51:02.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:02.875" endtime="20201030 11:51:03.161"></status>
</kw>
<msg timestamp="20201030 11:51:03.164" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016607097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016695681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:02.873" endtime="20201030 11:51:03.164"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.172" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016607097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016695681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.165" endtime="20201030 11:51:03.173"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.173" endtime="20201030 11:51:03.176"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.871" endtime="20201030 11:51:03.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.869" endtime="20201030 11:51:03.177"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:03.181" level="INFO">${PHILIP_RES} = [{'diff': 8.858399999999919e-05}, {'diff': 8.854200000000048e-05}, {'diff': 8.858299999999972e-05}, {'diff': 8.852699999999797e-05}, {'diff': 8.855500000000058e-05}, {'diff': 8.856900000000015e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:03.178" endtime="20201030 11:51:03.181"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.185" level="INFO">${RESULT} = {'diff': [8.858399999999919e-05, 8.854200000000048e-05, 8.858299999999972e-05, 8.852699999999797e-05, 8.855500000000058e-05, 8.856900000000015e-05, 8.854199999999701e-05, 8.859799999999876e-05, 8.8528...</msg>
<status status="PASS" starttime="20201030 11:51:03.182" endtime="20201030 11:51:03.185"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.189" level="INFO">NAME: 14-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:03.188" endtime="20201030 11:51:03.190"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.192" level="INFO">VALUE: [8.858399999999919e-05, 8.854200000000048e-05, 8.858299999999972e-05, 8.852699999999797e-05, 8.855500000000058e-05, 8.856900000000015e-05, 8.854199999999701e-05, 8.859799999999876e-05, 8.852800000000091e-05, 8.854200000000048e-05, 8.856999999999962e-05, 8.854200000000048e-05, 8.854200000000048e-05, 8.850000000000177e-05, 8.854099999999754e-05, 8.854100000000101e-05, 8.854100000000101e-05, 8.847199999999916e-05, 8.854200000000048e-05, 8.854199999999701e-05, 8.855600000000005e-05, 8.855600000000005e-05, 8.855600000000005e-05, 8.854200000000048e-05, 8.84730000000021e-05, 8.854100000000101e-05, 8.856900000000015e-05, 8.854099999999754e-05, 8.858399999999919e-05, 8.859799999999876e-05, 8.852799999999744e-05, 8.855600000000005e-05, 8.854200000000048e-05, 8.854200000000048e-05, 8.848700000000168e-05, 8.858299999999972e-05, 8.855500000000058e-05, 8.856900000000015e-05, 8.861100000000233e-05, 8.84860000000022e-05, 8.855600000000005e-05, 8.854200000000048e-05, 8.854200000000048e-05, 8.854200000000048e-05, 8.856900000000015e-05, 8.852800000000091e-05, 8.859700000000276e-05, 8.859699999999929e-05, 8.858299999999972e-05, 8.855500000000058e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.190" endtime="20201030 11:51:03.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.186" endtime="20201030 11:51:03.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.843" endtime="20201030 11:51:03.193"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:02.820" endtime="20201030 11:51:03.193"></status>
</kw>
<kw name="${n} = 15" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.196" endtime="20201030 11:51:03.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.194" endtime="20201030 11:51:03.216"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.224" endtime="20201030 11:51:03.239"></status>
</kw>
<msg timestamp="20201030 11:51:03.239" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.222" endtime="20201030 11:51:03.240"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.242" level="INFO">${RESULT} = {'cmd': 'list_ops 15', 'msg': ['list_ops 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.240" endtime="20201030 11:51:03.242"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.243" endtime="20201030 11:51:03.245"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.220" endtime="20201030 11:51:03.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.218" endtime="20201030 11:51:03.246"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.252" endtime="20201030 11:51:03.538"></status>
</kw>
<msg timestamp="20201030 11:51:03.541" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016580708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016679125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.251" endtime="20201030 11:51:03.541"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016580708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016679125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.542" endtime="20201030 11:51:03.549"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.550" endtime="20201030 11:51:03.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.248" endtime="20201030 11:51:03.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.247" endtime="20201030 11:51:03.553"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:03.557" level="INFO">${PHILIP_RES} = [{'diff': 9.841699999999995e-05}, {'diff': 9.833300000000253e-05}, {'diff': 9.837499999999777e-05}, {'diff': 9.836100000000167e-05}, {'diff': 9.834699999999863e-05}, {'diff': 9.836199999999767e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:03.553" endtime="20201030 11:51:03.557"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.561" level="INFO">${RESULT} = {'diff': [9.841699999999995e-05, 9.833300000000253e-05, 9.837499999999777e-05, 9.836100000000167e-05, 9.834699999999863e-05, 9.836199999999767e-05, 9.834800000000157e-05, 9.83609999999982e-05, 9.83329...</msg>
<status status="PASS" starttime="20201030 11:51:03.558" endtime="20201030 11:51:03.561"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.565" level="INFO">NAME: 15-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:03.564" endtime="20201030 11:51:03.565"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.567" level="INFO">VALUE: [9.841699999999995e-05, 9.833300000000253e-05, 9.837499999999777e-05, 9.836100000000167e-05, 9.834699999999863e-05, 9.836199999999767e-05, 9.834800000000157e-05, 9.83609999999982e-05, 9.833299999999906e-05, 9.831899999999949e-05, 9.830499999999992e-05, 9.833300000000253e-05, 9.83609999999982e-05, 9.833299999999906e-05, 9.834699999999863e-05, 9.836199999999767e-05, 9.830499999999992e-05, 9.834699999999863e-05, 9.836100000000167e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.831900000000296e-05, 9.831899999999949e-05, 9.83479999999981e-05, 9.834800000000157e-05, 9.83059999999994e-05, 9.8334000000002e-05, 9.834699999999863e-05, 9.833299999999906e-05, 9.837500000000124e-05, 9.833299999999906e-05, 9.837500000000124e-05, 9.834699999999863e-05, 9.834699999999863e-05, 9.838800000000134e-05, 9.83479999999981e-05, 9.834800000000157e-05, 9.834699999999863e-05, 9.83609999999982e-05, 9.833299999999906e-05, 9.833299999999906e-05, 9.833299999999906e-05, 9.833299999999906e-05, 9.834699999999863e-05, 9.832000000000243e-05, 9.83479999999981e-05, 9.836100000000167e-05, 9.834699999999863e-05, 9.83609999999982e-05, 9.833300000000253e-05]</msg>
<status status="PASS" starttime="20201030 11:51:03.566" endtime="20201030 11:51:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.561" endtime="20201030 11:51:03.569"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.216" endtime="20201030 11:51:03.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.194" endtime="20201030 11:51:03.570"></status>
</kw>
<kw name="${n} = 16" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.572" endtime="20201030 11:51:03.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.571" endtime="20201030 11:51:03.592"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.600" endtime="20201030 11:51:03.615"></status>
</kw>
<msg timestamp="20201030 11:51:03.615" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.599" endtime="20201030 11:51:03.615"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.618" level="INFO">${RESULT} = {'cmd': 'list_ops 16', 'msg': ['list_ops 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.616" endtime="20201030 11:51:03.618"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.619" endtime="20201030 11:51:03.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.596" endtime="20201030 11:51:03.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.594" endtime="20201030 11:51:03.621"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.628" endtime="20201030 11:51:03.913"></status>
</kw>
<msg timestamp="20201030 11:51:03.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016764167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016872833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.626" endtime="20201030 11:51:03.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016764167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016872833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:03.917" endtime="20201030 11:51:03.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.925" endtime="20201030 11:51:03.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.624" endtime="20201030 11:51:03.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.622" endtime="20201030 11:51:03.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:03.931" level="INFO">${PHILIP_RES} = [{'diff': 0.00010866600000000032}, {'diff': 0.00010861099999999804}, {'diff': 0.00010861099999999804}, {'diff': 0.00010859800000000142}, {'diff': 0.00010861100000000151}, {'diff': 0.000108624999999997...</msg>
<status status="PASS" starttime="20201030 11:51:03.928" endtime="20201030 11:51:03.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:03.936" level="INFO">${RESULT} = {'diff': [0.00010866600000000032, 0.00010861099999999804, 0.00010861099999999804, 0.00010859800000000142, 0.00010861100000000151, 0.00010862499999999761, 0.00010861100000000151, 0.00010862500000000108...</msg>
<status status="PASS" starttime="20201030 11:51:03.932" endtime="20201030 11:51:03.936"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.940" level="INFO">NAME: 16-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:03.939" endtime="20201030 11:51:03.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:03.943" level="INFO">VALUE: [0.00010866600000000032, 0.00010861099999999804, 0.00010861099999999804, 0.00010859800000000142, 0.00010861100000000151, 0.00010862499999999761, 0.00010861100000000151, 0.00010862500000000108, 0.00010859699999999847, 0.00010862499999999761, 0.00010861100000000151, 0.00010859700000000194, 0.00010862500000000108, 0.00010868099999999936, 0.00010862500000000108, 0.00010861200000000099, 0.00010861199999999752, 0.00010861200000000099, 0.00010861100000000151, 0.00010859700000000194, 0.00010863899999999718, 0.00010862499999999761, 0.00010861100000000151, 0.00010861100000000151, 0.00010861099999999804, 0.00010861100000000151, 0.00010859700000000194, 0.00010863900000000065, 0.00010861199999999752, 0.00010861100000000151, 0.0001085699999999988, 0.00010862500000000108, 0.00010862499999999761, 0.0001085690000000028, 0.0001085699999999988, 0.00010863900000000065, 0.00010861099999999804, 0.00010861100000000151, 0.00010862500000000108, 0.00010861100000000151, 0.00010861099999999804, 0.00010859800000000142, 0.00010861100000000151, 0.00010863899999999718, 0.00010862500000000108, 0.00010863900000000065, 0.00010865300000000022, 0.00010861099999999804, 0.00010861099999999804, 0.00010862500000000108]</msg>
<status status="PASS" starttime="20201030 11:51:03.941" endtime="20201030 11:51:03.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.937" endtime="20201030 11:51:03.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.593" endtime="20201030 11:51:03.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.570" endtime="20201030 11:51:03.950"></status>
</kw>
<kw name="${n} = 17" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:03.953" endtime="20201030 11:51:03.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.951" endtime="20201030 11:51:03.973"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:03.981" endtime="20201030 11:51:03.997"></status>
</kw>
<msg timestamp="20201030 11:51:03.997" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.979" endtime="20201030 11:51:03.997"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.000" level="INFO">${RESULT} = {'cmd': 'list_ops 17', 'msg': ['list_ops 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:03.998" endtime="20201030 11:51:04.000"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.001" endtime="20201030 11:51:04.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.977" endtime="20201030 11:51:04.003"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.975" endtime="20201030 11:51:04.003"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.010" endtime="20201030 11:51:04.296"></status>
</kw>
<msg timestamp="20201030 11:51:04.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016609806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.008" endtime="20201030 11:51:04.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016609806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016729222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.300" endtime="20201030 11:51:04.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.308" endtime="20201030 11:51:04.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.006" endtime="20201030 11:51:04.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.004" endtime="20201030 11:51:04.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:04.315" level="INFO">${PHILIP_RES} = [{'diff': 0.00011941599999999719}, {'diff': 0.00011937499999999795}, {'diff': 0.0001194309999999997}, {'diff': 0.00011936199999999786}, {'diff': 0.00011937500000000142}, {'diff': 0.0001193749999999979...</msg>
<status status="PASS" starttime="20201030 11:51:04.312" endtime="20201030 11:51:04.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.319" level="INFO">${RESULT} = {'diff': [0.00011941599999999719, 0.00011937499999999795, 0.0001194309999999997, 0.00011936199999999786, 0.00011937500000000142, 0.00011937499999999795, 0.00011936099999999839, 0.00011937500000000142,...</msg>
<status status="PASS" starttime="20201030 11:51:04.316" endtime="20201030 11:51:04.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.323" level="INFO">NAME: 17-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:04.322" endtime="20201030 11:51:04.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.325" level="INFO">VALUE: [0.00011941599999999719, 0.00011937499999999795, 0.0001194309999999997, 0.00011936199999999786, 0.00011937500000000142, 0.00011937499999999795, 0.00011936099999999839, 0.00011937500000000142, 0.00011936099999999839, 0.00011936100000000185, 0.00011940200000000109, 0.00011934699999999882, 0.00011943000000000023, 0.00011934699999999882, 0.00011937500000000142, 0.00011936099999999839, 0.00011936100000000185, 0.000119389000000001, 0.00011933299999999925, 0.00011940200000000109, 0.00011936099999999839, 0.000119389000000001, 0.00011937499999999795, 0.00011936200000000133, 0.00011941700000000013, 0.00011936199999999786, 0.00011937500000000142, 0.00011936099999999839, 0.00011933299999999925, 0.000119389000000001, 0.00011934699999999882, 0.000119389000000001, 0.00011937499999999795, 0.00011936100000000185, 0.00011937500000000142, 0.00011940300000000056, 0.00011936100000000185, 0.00011940300000000056, 0.000119389000000001, 0.00011937500000000142, 0.0001193050000000001, 0.00011934700000000228, 0.00011936099999999839, 0.00011936100000000185, 0.00011936099999999839, 0.00011937500000000142, 0.00011943000000000023, 0.00011937500000000142, 0.00011936100000000185, 0.00011937499999999795]</msg>
<status status="PASS" starttime="20201030 11:51:04.324" endtime="20201030 11:51:04.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.320" endtime="20201030 11:51:04.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.973" endtime="20201030 11:51:04.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:03.951" endtime="20201030 11:51:04.327"></status>
</kw>
<kw name="${n} = 18" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.330" endtime="20201030 11:51:04.349"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.328" endtime="20201030 11:51:04.350"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.358" endtime="20201030 11:51:04.374"></status>
</kw>
<msg timestamp="20201030 11:51:04.374" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.356" endtime="20201030 11:51:04.374"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.377" level="INFO">${RESULT} = {'cmd': 'list_ops 18', 'msg': ['list_ops 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.375" endtime="20201030 11:51:04.377"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.378" endtime="20201030 11:51:04.380"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.354" endtime="20201030 11:51:04.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.352" endtime="20201030 11:51:04.381"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.387" endtime="20201030 11:51:04.673"></status>
</kw>
<msg timestamp="20201030 11:51:04.676" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01664125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:04.386" endtime="20201030 11:51:04.676"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.684" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016510583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01664125, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:04.677" endtime="20201030 11:51:04.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.685" endtime="20201030 11:51:04.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.383" endtime="20201030 11:51:04.687"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.382" endtime="20201030 11:51:04.688"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:04.691" level="INFO">${PHILIP_RES} = [{'diff': 0.00013066700000000098}, {'diff': 0.00013061099999999923}, {'diff': 0.0001305830000000001}, {'diff': 0.0001305830000000001}, {'diff': 0.00013061099999999923}, {'diff': 0.00013063900000000184...</msg>
<status status="PASS" starttime="20201030 11:51:04.688" endtime="20201030 11:51:04.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:04.695" level="INFO">${RESULT} = {'diff': [0.00013066700000000098, 0.00013061099999999923, 0.0001305830000000001, 0.0001305830000000001, 0.00013061099999999923, 0.00013063900000000184, 0.00013059799999999913, 0.00013058399999999956, ...</msg>
<status status="PASS" starttime="20201030 11:51:04.692" endtime="20201030 11:51:04.696"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.700" level="INFO">NAME: 18-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:04.699" endtime="20201030 11:51:04.700"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.703" level="INFO">VALUE: [0.00013066700000000098, 0.00013061099999999923, 0.0001305830000000001, 0.0001305830000000001, 0.00013061099999999923, 0.00013063900000000184, 0.00013059799999999913, 0.00013058399999999956, 0.00013061099999999923, 0.00013059799999999913, 0.0001305980000000026, 0.00013058399999999956, 0.00013059799999999913, 0.00013059799999999913, 0.00013058399999999956, 0.00013061200000000217, 0.00013059799999999913, 0.0001305980000000026, 0.0001306119999999987, 0.0001306119999999987, 0.00013061200000000217, 0.00013059799999999913, 0.00013058399999999956, 0.0001306119999999987, 0.00013066599999999803, 0.00013059699999999966, 0.00013058399999999956, 0.00013059700000000313, 0.00013061099999999923, 0.00013059699999999966, 0.00013055600000000042, 0.00013059699999999966, 0.0001306110000000027, 0.00013061099999999923, 0.00013059700000000313, 0.00013057, 0.00013059699999999966, 0.0001305830000000001, 0.00013054200000000085, 0.0001306110000000027, 0.00013059699999999966, 0.0001305830000000001, 0.00013059699999999966, 0.0001305830000000001, 0.00013059699999999966, 0.0001305830000000001, 0.0001305830000000001, 0.00013059699999999966, 0.00013059699999999966, 0.00013059699999999966]</msg>
<status status="PASS" starttime="20201030 11:51:04.701" endtime="20201030 11:51:04.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.696" endtime="20201030 11:51:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.350" endtime="20201030 11:51:04.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.328" endtime="20201030 11:51:04.706"></status>
</kw>
<kw name="${n} = 19" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:04.708" endtime="20201030 11:51:04.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.707" endtime="20201030 11:51:04.728"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.736" endtime="20201030 11:51:04.754"></status>
</kw>
<msg timestamp="20201030 11:51:04.754" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.735" endtime="20201030 11:51:04.754"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:04.757" level="INFO">${RESULT} = {'cmd': 'list_ops 19', 'msg': ['list_ops 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:04.755" endtime="20201030 11:51:04.757"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.758" endtime="20201030 11:51:04.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.732" endtime="20201030 11:51:04.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.730" endtime="20201030 11:51:04.760"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:04.767" endtime="20201030 11:51:05.052"></status>
</kw>
<msg timestamp="20201030 11:51:05.055" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016704514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016846833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:04.765" endtime="20201030 11:51:05.055"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.063" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016704514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016846833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.056" endtime="20201030 11:51:05.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.064" endtime="20201030 11:51:05.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.763" endtime="20201030 11:51:05.066"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.761" endtime="20201030 11:51:05.067"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:05.071" level="INFO">${PHILIP_RES} = [{'diff': 0.0001423189999999984}, {'diff': 0.00014237500000000014}, {'diff': 0.00014230600000000176}, {'diff': 0.00014226399999999959}, {'diff': 0.00014229199999999873}, {'diff': 0.0001422639999999995...</msg>
<status status="PASS" starttime="20201030 11:51:05.068" endtime="20201030 11:51:05.071"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.075" level="INFO">${RESULT} = {'diff': [0.0001423189999999984, 0.00014237500000000014, 0.00014230600000000176, 0.00014226399999999959, 0.00014229199999999873, 0.00014226399999999959, 0.00014232000000000133, 0.00014231999999999786,...</msg>
<status status="PASS" starttime="20201030 11:51:05.072" endtime="20201030 11:51:05.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.080" level="INFO">NAME: 19-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:05.079" endtime="20201030 11:51:05.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.082" level="INFO">VALUE: [0.0001423189999999984, 0.00014237500000000014, 0.00014230600000000176, 0.00014226399999999959, 0.00014229199999999873, 0.00014226399999999959, 0.00014232000000000133, 0.00014231999999999786, 0.00014233300000000143, 0.00014231900000000186, 0.0001423059999999983, 0.0001423059999999983, 0.00014230600000000176, 0.0001423050000000023, 0.00014230499999999882, 0.00014229199999999873, 0.00014232000000000133, 0.0001423050000000023, 0.00014229099999999925, 0.00014229199999999873, 0.00014230600000000176, 0.0001423050000000023, 0.00014230499999999882, 0.00014231999999999786, 0.00014232000000000133, 0.00014225000000000002, 0.00014229099999999925, 0.00014230600000000176, 0.0001422920000000022, 0.00014229199999999873, 0.00014233299999999796, 0.00014231900000000186, 0.00014230600000000176, 0.00014229199999999873, 0.00014230499999999882, 0.00014229199999999873, 0.00014232000000000133, 0.0001423059999999983, 0.0001423189999999984, 0.00014229099999999925, 0.0001422920000000022, 0.00014231999999999786, 0.00014230499999999882, 0.00014231900000000186, 0.00014223600000000045, 0.00014237500000000014, 0.00014230499999999882, 0.00014229100000000272, 0.00014230600000000176, 0.00014231999999999786]</msg>
<status status="PASS" starttime="20201030 11:51:05.081" endtime="20201030 11:51:05.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.076" endtime="20201030 11:51:05.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.729" endtime="20201030 11:51:05.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:04.706" endtime="20201030 11:51:05.084"></status>
</kw>
<kw name="${n} = 20" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.086" endtime="20201030 11:51:05.106"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.085" endtime="20201030 11:51:05.106"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.114" endtime="20201030 11:51:05.131"></status>
</kw>
<msg timestamp="20201030 11:51:05.132" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.113" endtime="20201030 11:51:05.132"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.134" level="INFO">${RESULT} = {'cmd': 'list_ops 20', 'msg': ['list_ops 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.133" endtime="20201030 11:51:05.134"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.135" endtime="20201030 11:51:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.110" endtime="20201030 11:51:05.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.108" endtime="20201030 11:51:05.138"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.144" endtime="20201030 11:51:05.429"></status>
</kw>
<msg timestamp="20201030 11:51:05.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016408806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016563347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.143" endtime="20201030 11:51:05.432"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.440" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016408806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016563347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.433" endtime="20201030 11:51:05.440"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.441" endtime="20201030 11:51:05.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.140" endtime="20201030 11:51:05.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.138" endtime="20201030 11:51:05.444"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:05.448" level="INFO">${PHILIP_RES} = [{'diff': 0.00015454099999999762}, {'diff': 0.00015450000000000186}, {'diff': 0.0001544860000000023}, {'diff': 0.0001544999999999984}, {'diff': 0.0001544860000000023}, {'diff': 0.00015448599999999882}...</msg>
<status status="PASS" starttime="20201030 11:51:05.445" endtime="20201030 11:51:05.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.452" level="INFO">${RESULT} = {'diff': [0.00015454099999999762, 0.00015450000000000186, 0.0001544860000000023, 0.0001544999999999984, 0.0001544860000000023, 0.00015448599999999882, 0.00015448599999999882, 0.00015448599999999882, 0...</msg>
<status status="PASS" starttime="20201030 11:51:05.449" endtime="20201030 11:51:05.453"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.457" level="INFO">NAME: 20-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:05.455" endtime="20201030 11:51:05.457"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.459" level="INFO">VALUE: [0.00015454099999999762, 0.00015450000000000186, 0.0001544860000000023, 0.0001544999999999984, 0.0001544860000000023, 0.00015448599999999882, 0.00015448599999999882, 0.00015448599999999882, 0.00015448599999999882, 0.00015448700000000176, 0.00015448599999999882, 0.00015448599999999882, 0.0001544730000000022, 0.00015445799999999968, 0.00015450000000000186, 0.00015447199999999925, 0.00015452799999999753, 0.0001544860000000023, 0.00015447199999999925, 0.00015445899999999915, 0.00015448599999999882, 0.00015448599999999882, 0.00015447200000000272, 0.0001544999999999984, 0.00015447199999999925, 0.00015447199999999925, 0.0001544999999999984, 0.00015450000000000186, 0.0001544440000000001, 0.00015448599999999882, 0.00015451400000000143, 0.00015448599999999882, 0.0001544860000000023, 0.00015445799999999968, 0.00015447199999999925, 0.00015448599999999882, 0.00015445899999999915, 0.00015447199999999925, 0.00015448599999999882, 0.00015441700000000044, 0.00015447199999999925, 0.00015451399999999796, 0.00015451299999999848, 0.00015445899999999915, 0.00015452799999999753, 0.00015450000000000186, 0.00015445899999999915, 0.00015450000000000186, 0.00015448599999999882, 0.00015445899999999915]</msg>
<status status="PASS" starttime="20201030 11:51:05.458" endtime="20201030 11:51:05.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.453" endtime="20201030 11:51:05.460"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.107" endtime="20201030 11:51:05.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.084" endtime="20201030 11:51:05.461"></status>
</kw>
<kw name="${n} = 21" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.463" endtime="20201030 11:51:05.482"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.462" endtime="20201030 11:51:05.483"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.491" endtime="20201030 11:51:05.508"></status>
</kw>
<msg timestamp="20201030 11:51:05.508" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.489" endtime="20201030 11:51:05.509"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.511" level="INFO">${RESULT} = {'cmd': 'list_ops 21', 'msg': ['list_ops 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.509" endtime="20201030 11:51:05.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.512" endtime="20201030 11:51:05.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.487" endtime="20201030 11:51:05.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.485" endtime="20201030 11:51:05.515"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.522" endtime="20201030 11:51:05.812"></status>
</kw>
<msg timestamp="20201030 11:51:05.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016556403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016723583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.520" endtime="20201030 11:51:05.815"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.823" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016556403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016723583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.816" endtime="20201030 11:51:05.823"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.824" endtime="20201030 11:51:05.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.518" endtime="20201030 11:51:05.826"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.516" endtime="20201030 11:51:05.826"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:05.830" level="INFO">${PHILIP_RES} = [{'diff': 0.0001671799999999994}, {'diff': 0.0001670830000000019}, {'diff': 0.00016715299999999975}, {'diff': 0.00016716699999999932}, {'diff': 0.00016713900000000018}, {'diff': 0.0001671380000000007}...</msg>
<status status="PASS" starttime="20201030 11:51:05.827" endtime="20201030 11:51:05.830"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:05.834" level="INFO">${RESULT} = {'diff': [0.0001671799999999994, 0.0001670830000000019, 0.00016715299999999975, 0.00016716699999999932, 0.00016713900000000018, 0.0001671380000000007, 0.00016715299999999975, 0.00016713900000000018, 0...</msg>
<status status="PASS" starttime="20201030 11:51:05.831" endtime="20201030 11:51:05.834"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.838" level="INFO">NAME: 21-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:05.837" endtime="20201030 11:51:05.839"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.841" level="INFO">VALUE: [0.0001671799999999994, 0.0001670830000000019, 0.00016715299999999975, 0.00016716699999999932, 0.00016713900000000018, 0.0001671380000000007, 0.00016715299999999975, 0.00016713900000000018, 0.00016713900000000018, 0.00016715299999999975, 0.00016716599999999984, 0.0001671799999999994, 0.00016716699999999932, 0.00016715299999999975, 0.00016713900000000018, 0.00016712499999999714, 0.00016713900000000018, 0.0001671250000000006, 0.00016713900000000018, 0.00016716699999999932, 0.00016713900000000018, 0.00016713900000000018, 0.00016715200000000027, 0.00016715200000000027, 0.0001671250000000006, 0.0001671250000000006, 0.00016713900000000018, 0.00016713900000000018, 0.0001671250000000006, 0.0001671799999999994, 0.00016715299999999975, 0.00016715299999999975, 0.0001671250000000006, 0.00016713900000000018, 0.00016713900000000018, 0.00016715200000000027, 0.000167096999999998, 0.00016713900000000018, 0.0001671250000000006, 0.00016718100000000236, 0.00016713900000000018, 0.00016713900000000018, 0.0001670549999999993, 0.0001670830000000019, 0.00016711100000000104, 0.0001671250000000006, 0.00016713900000000018, 0.00016711199999999704, 0.00016715299999999975, 0.00016713900000000018]</msg>
<status status="PASS" starttime="20201030 11:51:05.839" endtime="20201030 11:51:05.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.835" endtime="20201030 11:51:05.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.484" endtime="20201030 11:51:05.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.461" endtime="20201030 11:51:05.843"></status>
</kw>
<kw name="${n} = 22" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:05.846" endtime="20201030 11:51:05.865"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.844" endtime="20201030 11:51:05.866"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.873" endtime="20201030 11:51:05.892"></status>
</kw>
<msg timestamp="20201030 11:51:05.892" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.872" endtime="20201030 11:51:05.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:05.895" level="INFO">${RESULT} = {'cmd': 'list_ops 22', 'msg': ['list_ops 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:05.893" endtime="20201030 11:51:05.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.896" endtime="20201030 11:51:05.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.869" endtime="20201030 11:51:05.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.868" endtime="20201030 11:51:05.898"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:05.905" endtime="20201030 11:51:06.190"></status>
</kw>
<msg timestamp="20201030 11:51:06.193" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016732153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:05.903" endtime="20201030 11:51:06.193"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.201" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016551819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016732153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.194" endtime="20201030 11:51:06.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.202" endtime="20201030 11:51:06.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.901" endtime="20201030 11:51:06.204"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.899" endtime="20201030 11:51:06.204"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:06.208" level="INFO">${PHILIP_RES} = [{'diff': 0.00018033400000000074}, {'diff': 0.00018026399999999942}, {'diff': 0.00018029200000000203}, {'diff': 0.000180277999999999}, {'diff': 0.00018024999999999985}, {'diff': 0.00018024999999999985...</msg>
<status status="PASS" starttime="20201030 11:51:06.205" endtime="20201030 11:51:06.208"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.213" level="INFO">${RESULT} = {'diff': [0.00018033400000000074, 0.00018026399999999942, 0.00018029200000000203, 0.000180277999999999, 0.00018024999999999985, 0.00018024999999999985, 0.00018023600000000028, 0.000180277999999999, 0....</msg>
<status status="PASS" starttime="20201030 11:51:06.209" endtime="20201030 11:51:06.213"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.217" level="INFO">NAME: 22-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:06.216" endtime="20201030 11:51:06.218"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.220" level="INFO">VALUE: [0.00018033400000000074, 0.00018026399999999942, 0.00018029200000000203, 0.000180277999999999, 0.00018024999999999985, 0.00018024999999999985, 0.00018023600000000028, 0.000180277999999999, 0.00018024999999999985, 0.00018027699999999952, 0.00018026399999999942, 0.00018026399999999942, 0.00018027800000000246, 0.00018026399999999942, 0.000180277999999999, 0.00018027800000000246, 0.00018026299999999995, 0.0001802909999999991, 0.00018024999999999985, 0.000180277999999999, 0.000180277999999999, 0.00018027800000000246, 0.00018027699999999952, 0.00018024999999999985, 0.0001802640000000029, 0.00018029199999999856, 0.00018026399999999942, 0.00018020799999999768, 0.00018026399999999942, 0.00018027699999999952, 0.00018025000000000332, 0.000180277999999999, 0.00018026399999999942, 0.00018026399999999942, 0.00018026399999999942, 0.00018030499999999866, 0.00018024999999999985, 0.00018027800000000246, 0.000180277999999999, 0.00018022200000000071, 0.0001802640000000029, 0.000180277999999999, 0.00018026299999999995, 0.000180277000000003, 0.00018030499999999866, 0.00018020799999999768, 0.00018024999999999985, 0.00018026399999999942, 0.00018026399999999942, 0.00018023699999999976]</msg>
<status status="PASS" starttime="20201030 11:51:06.218" endtime="20201030 11:51:06.220"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.214" endtime="20201030 11:51:06.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.866" endtime="20201030 11:51:06.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:05.844" endtime="20201030 11:51:06.222"></status>
</kw>
<kw name="${n} = 23" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.224" endtime="20201030 11:51:06.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.222" endtime="20201030 11:51:06.244"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.252" endtime="20201030 11:51:06.269"></status>
</kw>
<msg timestamp="20201030 11:51:06.270" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.250" endtime="20201030 11:51:06.270"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.272" level="INFO">${RESULT} = {'cmd': 'list_ops 23', 'msg': ['list_ops 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.271" endtime="20201030 11:51:06.272"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.273" endtime="20201030 11:51:06.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.248" endtime="20201030 11:51:06.275"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.246" endtime="20201030 11:51:06.276"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.282" endtime="20201030 11:51:06.568"></status>
</kw>
<msg timestamp="20201030 11:51:06.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016520333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01671425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:06.281" endtime="20201030 11:51:06.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016520333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01671425, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:06.572" endtime="20201030 11:51:06.580"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.581" endtime="20201030 11:51:06.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.278" endtime="20201030 11:51:06.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.276" endtime="20201030 11:51:06.583"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:06.587" level="INFO">${PHILIP_RES} = [{'diff': 0.0001939169999999983}, {'diff': 0.00019388899999999917}, {'diff': 0.00019388899999999917}, {'diff': 0.0001938749999999996}, {'diff': 0.00019384799999999994}, {'diff': 0.0001938749999999996}...</msg>
<status status="PASS" starttime="20201030 11:51:06.584" endtime="20201030 11:51:06.587"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.591" level="INFO">${RESULT} = {'diff': [0.0001939169999999983, 0.00019388899999999917, 0.00019388899999999917, 0.0001938749999999996, 0.00019384799999999994, 0.0001938749999999996, 0.0001938749999999996, 0.0001938749999999996, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:06.588" endtime="20201030 11:51:06.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.595" level="INFO">NAME: 23-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:06.594" endtime="20201030 11:51:06.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.598" level="INFO">VALUE: [0.0001939169999999983, 0.00019388899999999917, 0.00019388899999999917, 0.0001938749999999996, 0.00019384799999999994, 0.0001938749999999996, 0.0001938749999999996, 0.0001938749999999996, 0.0001938330000000009, 0.0001938200000000008, 0.0001938749999999996, 0.00019388900000000264, 0.00019380599999999776, 0.00019380600000000123, 0.00019387500000000307, 0.0001938749999999996, 0.00019391599999999884, 0.00019387500000000307, 0.00019388899999999917, 0.00019388899999999917, 0.00019387500000000307, 0.0001938749999999996, 0.0001938749999999996, 0.00019388900000000264, 0.00019388899999999917, 0.0001938749999999996, 0.00019384700000000046, 0.0001938749999999996, 0.0001938749999999996, 0.00019384700000000046, 0.00019386100000000003, 0.00019388899999999917, 0.0001938749999999996, 0.00019386100000000003, 0.0001938749999999996, 0.00019394499999999745, 0.00019386100000000003, 0.0001938749999999996, 0.00019388899999999917, 0.00019387500000000307, 0.0001938749999999996, 0.00019388899999999917, 0.00019384700000000046, 0.00019388899999999917, 0.00019394499999999745, 0.00019391700000000178, 0.0001938749999999996, 0.0001938330000000009, 0.0001938749999999996, 0.00019390199999999927]</msg>
<status status="PASS" starttime="20201030 11:51:06.596" endtime="20201030 11:51:06.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.592" endtime="20201030 11:51:06.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.244" endtime="20201030 11:51:06.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.222" endtime="20201030 11:51:06.599"></status>
</kw>
<kw name="${n} = 24" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.602" endtime="20201030 11:51:06.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.600" endtime="20201030 11:51:06.622"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.630" endtime="20201030 11:51:06.650"></status>
</kw>
<msg timestamp="20201030 11:51:06.650" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.628" endtime="20201030 11:51:06.650"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.653" level="INFO">${RESULT} = {'cmd': 'list_ops 24', 'msg': ['list_ops 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:06.651" endtime="20201030 11:51:06.653"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.654" endtime="20201030 11:51:06.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.626" endtime="20201030 11:51:06.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.624" endtime="20201030 11:51:06.657"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.663" endtime="20201030 11:51:06.950"></status>
</kw>
<msg timestamp="20201030 11:51:06.953" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016643736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.662" endtime="20201030 11:51:06.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016643736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016851722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:06.954" endtime="20201030 11:51:06.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:06.962" endtime="20201030 11:51:06.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.659" endtime="20201030 11:51:06.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.658" endtime="20201030 11:51:06.965"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:06.969" level="INFO">${PHILIP_RES} = [{'diff': 0.00020798600000000028}, {'diff': 0.0002080560000000016}, {'diff': 0.00020795800000000114}, {'diff': 0.00020798600000000028}, {'diff': 0.00020795900000000062}, {'diff': 0.000207930000000002}...</msg>
<status status="PASS" starttime="20201030 11:51:06.966" endtime="20201030 11:51:06.969"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:06.973" level="INFO">${RESULT} = {'diff': [0.00020798600000000028, 0.0002080560000000016, 0.00020795800000000114, 0.00020798600000000028, 0.00020795900000000062, 0.000207930000000002, 0.00020801399999999942, 0.00020794499999999758, 0...</msg>
<status status="PASS" starttime="20201030 11:51:06.970" endtime="20201030 11:51:06.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.977" level="INFO">NAME: 24-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:06.976" endtime="20201030 11:51:06.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:06.979" level="INFO">VALUE: [0.00020798600000000028, 0.0002080560000000016, 0.00020795800000000114, 0.00020798600000000028, 0.00020795900000000062, 0.000207930000000002, 0.00020801399999999942, 0.00020794499999999758, 0.00020795800000000114, 0.0002079720000000007, 0.00020791699999999844, 0.0002079720000000007, 0.00020795900000000062, 0.0002079439999999981, 0.0002079720000000007, 0.0002078889999999993, 0.00020795800000000114, 0.0002079019999999994, 0.00020802800000000246, 0.00020795800000000114, 0.00020795900000000062, 0.00020797199999999724, 0.00020794400000000157, 0.00020795900000000062, 0.00020795799999999767, 0.00020795800000000114, 0.00020795900000000062, 0.00020795800000000114, 0.00020798600000000028, 0.00020798600000000028, 0.0002079720000000007, 0.0002079859999999968, 0.0002079720000000007, 0.00020791599999999896, 0.000208027999999999, 0.00020795799999999767, 0.00020795800000000114, 0.00020797300000000019, 0.00020792999999999853, 0.00020795800000000114, 0.00020795800000000114, 0.00020795800000000114, 0.00020798600000000028, 0.00020794400000000157, 0.00020795800000000114, 0.00020797300000000019, 0.00020795800000000114, 0.00020795800000000114, 0.00020801299999999995, 0.00020795799999999767]</msg>
<status status="PASS" starttime="20201030 11:51:06.978" endtime="20201030 11:51:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.974" endtime="20201030 11:51:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.622" endtime="20201030 11:51:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.600" endtime="20201030 11:51:06.982"></status>
</kw>
<kw name="${n} = 25" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:06.984" endtime="20201030 11:51:07.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.983" endtime="20201030 11:51:07.004"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.012" endtime="20201030 11:51:07.032"></status>
</kw>
<msg timestamp="20201030 11:51:07.032" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.011" endtime="20201030 11:51:07.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.035" level="INFO">${RESULT} = {'cmd': 'list_ops 25', 'msg': ['list_ops 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.033" endtime="20201030 11:51:07.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.036" endtime="20201030 11:51:07.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.008" endtime="20201030 11:51:07.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.006" endtime="20201030 11:51:07.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.045" endtime="20201030 11:51:07.330"></status>
</kw>
<msg timestamp="20201030 11:51:07.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016763986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0169865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:07.043" endtime="20201030 11:51:07.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016763986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0169865, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:07.334" endtime="20201030 11:51:07.341"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.342" endtime="20201030 11:51:07.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.041" endtime="20201030 11:51:07.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.039" endtime="20201030 11:51:07.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:07.349" level="INFO">${PHILIP_RES} = [{'diff': 0.00022251400000000005}, {'diff': 0.00022252700000000014}, {'diff': 0.00022254199999999918}, {'diff': 0.00022251400000000005}, {'diff': 0.00022251400000000005}, {'diff': 0.000222540999999999...</msg>
<status status="PASS" starttime="20201030 11:51:07.345" endtime="20201030 11:51:07.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.353" level="INFO">${RESULT} = {'diff': [0.00022251400000000005, 0.00022252700000000014, 0.00022254199999999918, 0.00022251400000000005, 0.00022251400000000005, 0.0002225409999999997, 0.00022252799999999961, 0.0002225700000000018, ...</msg>
<status status="PASS" starttime="20201030 11:51:07.350" endtime="20201030 11:51:07.354"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.358" level="INFO">NAME: 25-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:07.357" endtime="20201030 11:51:07.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.360" level="INFO">VALUE: [0.00022251400000000005, 0.00022252700000000014, 0.00022254199999999918, 0.00022251400000000005, 0.00022251400000000005, 0.0002225409999999997, 0.00022252799999999961, 0.0002225700000000018, 0.00022251400000000005, 0.0002225409999999997, 0.00022252799999999961, 0.00022252799999999961, 0.00022252799999999961, 0.00022252700000000014, 0.00022254200000000265, 0.00022251400000000005, 0.00022254199999999918, 0.00022252700000000014, 0.00022251400000000005, 0.00022251400000000005, 0.00022252799999999961, 0.000222499999999997, 0.00022254199999999918, 0.00022254199999999918, 0.00022250000000000048, 0.0002225409999999997, 0.00022254200000000265, 0.00022252799999999961, 0.0002225409999999997, 0.00022252799999999961, 0.00022252799999999961, 0.00022252799999999961, 0.0002225409999999997, 0.00022252700000000014, 0.00022251400000000005, 0.00022254199999999918, 0.00022256899999999885, 0.00022252799999999961, 0.00022251400000000005, 0.00022261100000000103, 0.00022256999999999832, 0.00022254199999999918, 0.00022252799999999961, 0.00022254199999999918, 0.00022254199999999918, 0.00022254199999999918, 0.00022254199999999918, 0.00022255599999999875, 0.00022251300000000057, 0.00022252799999999961]</msg>
<status status="PASS" starttime="20201030 11:51:07.359" endtime="20201030 11:51:07.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.354" endtime="20201030 11:51:07.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.005" endtime="20201030 11:51:07.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:06.982" endtime="20201030 11:51:07.362"></status>
</kw>
<kw name="${n} = 26" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.364" endtime="20201030 11:51:07.384"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.363" endtime="20201030 11:51:07.384"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.392" endtime="20201030 11:51:07.413"></status>
</kw>
<msg timestamp="20201030 11:51:07.413" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.391" endtime="20201030 11:51:07.413"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.416" level="INFO">${RESULT} = {'cmd': 'list_ops 26', 'msg': ['list_ops 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.414" endtime="20201030 11:51:07.416"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.417" endtime="20201030 11:51:07.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.388" endtime="20201030 11:51:07.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.386" endtime="20201030 11:51:07.419"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.426" endtime="20201030 11:51:07.717"></status>
</kw>
<msg timestamp="20201030 11:51:07.724" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016498819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016736486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.424" endtime="20201030 11:51:07.724"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.742" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016498819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016736486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.726" endtime="20201030 11:51:07.743"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.744" endtime="20201030 11:51:07.748"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.422" endtime="20201030 11:51:07.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.420" endtime="20201030 11:51:07.750"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:07.759" level="INFO">${PHILIP_RES} = [{'diff': 0.00023766699999999696}, {'diff': 0.00023755599999999988}, {'diff': 0.00023758299999999954}, {'diff': 0.00023755599999999988}, {'diff': 0.00023762500000000172}, {'diff': 0.000237568999999999...</msg>
<status status="PASS" starttime="20201030 11:51:07.752" endtime="20201030 11:51:07.759"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:07.768" level="INFO">${RESULT} = {'diff': [0.00023766699999999696, 0.00023755599999999988, 0.00023758299999999954, 0.00023755599999999988, 0.00023762500000000172, 0.00023756899999999997, 0.00023758299999999954, 0.0002375420000000003,...</msg>
<status status="PASS" starttime="20201030 11:51:07.761" endtime="20201030 11:51:07.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.777" level="INFO">NAME: 26-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:07.775" endtime="20201030 11:51:07.778"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.782" level="INFO">VALUE: [0.00023766699999999696, 0.00023755599999999988, 0.00023758299999999954, 0.00023755599999999988, 0.00023762500000000172, 0.00023756899999999997, 0.00023758299999999954, 0.0002375420000000003, 0.0002375269999999978, 0.0002375139999999977, 0.00023755599999999988, 0.0002375550000000004, 0.0002375420000000003, 0.00023761200000000163, 0.0002375550000000004, 0.00023761100000000215, 0.00023756999999999945, 0.00023756899999999997, 0.00023758299999999954, 0.00023755599999999988, 0.0002375550000000004, 0.00023756999999999945, 0.0002375420000000003, 0.00023754100000000083, 0.00023755600000000335, 0.00023756999999999945, 0.00023756899999999997, 0.00023756999999999945, 0.00023758299999999954, 0.00023755499999999694, 0.0002375420000000003, 0.00023756899999999997, 0.00023756899999999997, 0.0002375420000000003, 0.00023756899999999997, 0.0002375550000000004, 0.00023756999999999945, 0.00023756899999999997, 0.00023754100000000083, 0.00023755599999999988, 0.0002375420000000003, 0.00023758299999999954, 0.0002375420000000003, 0.0002375550000000004, 0.0002375550000000004, 0.00023757000000000292, 0.00023761100000000215, 0.0002375550000000004, 0.00023759699999999911, 0.00023761099999999868]</msg>
<status status="PASS" starttime="20201030 11:51:07.779" endtime="20201030 11:51:07.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.770" endtime="20201030 11:51:07.785"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.385" endtime="20201030 11:51:07.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.362" endtime="20201030 11:51:07.786"></status>
</kw>
<kw name="${n} = 27" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:07.791" endtime="20201030 11:51:07.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.788" endtime="20201030 11:51:07.812"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.820" endtime="20201030 11:51:07.842"></status>
</kw>
<msg timestamp="20201030 11:51:07.842" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.818" endtime="20201030 11:51:07.842"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:07.845" level="INFO">${RESULT} = {'cmd': 'list_ops 27', 'msg': ['list_ops 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:07.843" endtime="20201030 11:51:07.845"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.846" endtime="20201030 11:51:07.848"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.815" endtime="20201030 11:51:07.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.814" endtime="20201030 11:51:07.849"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:07.855" endtime="20201030 11:51:08.141"></status>
</kw>
<msg timestamp="20201030 11:51:08.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016800042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:07.854" endtime="20201030 11:51:08.144"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016546944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016800042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.145" endtime="20201030 11:51:08.152"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.153" endtime="20201030 11:51:08.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.852" endtime="20201030 11:51:08.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.850" endtime="20201030 11:51:08.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:08.160" level="INFO">${PHILIP_RES} = [{'diff': 0.0002530980000000002}, {'diff': 0.00025305500000000203}, {'diff': 0.00025308399999999717}, {'diff': 0.00025306899999999813}, {'diff': 0.0002530829999999977}, {'diff': 0.00025307000000000107...</msg>
<status status="PASS" starttime="20201030 11:51:08.156" endtime="20201030 11:51:08.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.163" level="INFO">${RESULT} = {'diff': [0.0002530980000000002, 0.00025305500000000203, 0.00025308399999999717, 0.00025306899999999813, 0.0002530829999999977, 0.00025307000000000107, 0.00025309700000000074, 0.00025307000000000107, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.161" endtime="20201030 11:51:08.164"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.168" level="INFO">NAME: 27-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:08.167" endtime="20201030 11:51:08.168"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.170" level="INFO">VALUE: [0.0002530980000000002, 0.00025305500000000203, 0.00025308399999999717, 0.00025306899999999813, 0.0002530829999999977, 0.00025307000000000107, 0.00025309700000000074, 0.00025307000000000107, 0.00025308300000000117, 0.0002530690000000016, 0.00025308399999999717, 0.00025306899999999813, 0.00025308300000000117, 0.00025305500000000203, 0.00025308300000000117, 0.0002530560000000015, 0.0002530829999999977, 0.0002530829999999977, 0.00025308400000000064, 0.00025309700000000074, 0.00025308400000000064, 0.00025308300000000117, 0.00025308300000000117, 0.00025307000000000107, 0.0002530829999999977, 0.00025308399999999717, 0.00025305499999999856, 0.0002531110000000003, 0.00025307000000000107, 0.00025309700000000074, 0.0002530560000000015, 0.000253152999999999, 0.00025306899999999813, 0.00025308400000000064, 0.0002530690000000016, 0.00025308300000000117, 0.00025307000000000107, 0.00025308300000000117, 0.00025305599999999803, 0.00025308300000000117, 0.0002530139999999993, 0.00025307000000000107, 0.00025308300000000117, 0.00025308400000000064, 0.0002530139999999993, 0.00025307000000000107, 0.00025308400000000064, 0.0002530560000000015, 0.00025299999999999975, 0.0002530690000000016]</msg>
<status status="PASS" starttime="20201030 11:51:08.169" endtime="20201030 11:51:08.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.164" endtime="20201030 11:51:08.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.812" endtime="20201030 11:51:08.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:07.787" endtime="20201030 11:51:08.173"></status>
</kw>
<kw name="${n} = 28" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.175" endtime="20201030 11:51:08.194"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.174" endtime="20201030 11:51:08.195"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.203" endtime="20201030 11:51:08.227"></status>
</kw>
<msg timestamp="20201030 11:51:08.228" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.201" endtime="20201030 11:51:08.228"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.230" level="INFO">${RESULT} = {'cmd': 'list_ops 28', 'msg': ['list_ops 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.229" endtime="20201030 11:51:08.231"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.231" endtime="20201030 11:51:08.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.199" endtime="20201030 11:51:08.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.197" endtime="20201030 11:51:08.234"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.240" endtime="20201030 11:51:08.529"></status>
</kw>
<msg timestamp="20201030 11:51:08.536" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016504708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016773847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.239" endtime="20201030 11:51:08.536"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016504708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016773847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:08.538" endtime="20201030 11:51:08.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.556" endtime="20201030 11:51:08.559"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.236" endtime="20201030 11:51:08.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.234" endtime="20201030 11:51:08.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:08.569" level="INFO">${PHILIP_RES} = [{'diff': 0.00026913900000000157}, {'diff': 0.0002690410000000011}, {'diff': 0.00026905600000000016}, {'diff': 0.0002690699999999997}, {'diff': 0.0002690699999999997}, {'diff': 0.0002690700000000032},...</msg>
<status status="PASS" starttime="20201030 11:51:08.563" endtime="20201030 11:51:08.570"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.579" level="INFO">${RESULT} = {'diff': [0.00026913900000000157, 0.0002690410000000011, 0.00026905600000000016, 0.0002690699999999997, 0.0002690699999999997, 0.0002690700000000032, 0.00026905600000000016, 0.0002690699999999997, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:08.571" endtime="20201030 11:51:08.580"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.588" level="INFO">NAME: 28-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:08.586" endtime="20201030 11:51:08.589"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.593" level="INFO">VALUE: [0.00026913900000000157, 0.0002690410000000011, 0.00026905600000000016, 0.0002690699999999997, 0.0002690699999999997, 0.0002690700000000032, 0.00026905600000000016, 0.0002690699999999997, 0.00026905600000000016, 0.00026906900000000025, 0.0002690549999999972, 0.0002690829999999998, 0.00026906900000000025, 0.0002690550000000007, 0.00026906900000000025, 0.0002690829999999998, 0.0002690000000000019, 0.0002690699999999997, 0.0002690699999999997, 0.0002690839999999993, 0.0002690420000000006, 0.00026912499999999853, 0.00026905600000000016, 0.0002690420000000006, 0.0002690550000000007, 0.00026906900000000025, 0.0002690829999999998, 0.0002690549999999972, 0.00026906900000000025, 0.0002690829999999998, 0.00026906900000000025, 0.00026911099999999896, 0.000269013999999998, 0.0002690969999999994, 0.0002690420000000006, 0.0002690699999999997, 0.00026911099999999896, 0.00026906900000000025, 0.0002690829999999998, 0.0002690549999999972, 0.0002690550000000007, 0.0002690969999999994, 0.0002690829999999998, 0.00026906900000000025, 0.00026906900000000025, 0.0002690829999999998, 0.00026906900000000025, 0.0002689999999999984, 0.00026915299999999767, 0.00026898599999999884]</msg>
<status status="PASS" starttime="20201030 11:51:08.590" endtime="20201030 11:51:08.594"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.581" endtime="20201030 11:51:08.596"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.196" endtime="20201030 11:51:08.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.173" endtime="20201030 11:51:08.597"></status>
</kw>
<kw name="${n} = 29" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.602" endtime="20201030 11:51:08.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.599" endtime="20201030 11:51:08.622"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.630" endtime="20201030 11:51:08.654"></status>
</kw>
<msg timestamp="20201030 11:51:08.654" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.629" endtime="20201030 11:51:08.654"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.657" level="INFO">${RESULT} = {'cmd': 'list_ops 29', 'msg': ['list_ops 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:08.655" endtime="20201030 11:51:08.657"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.658" endtime="20201030 11:51:08.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.626" endtime="20201030 11:51:08.660"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.624" endtime="20201030 11:51:08.660"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.667" endtime="20201030 11:51:08.953"></status>
</kw>
<msg timestamp="20201030 11:51:08.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016645431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:08.665" endtime="20201030 11:51:08.956"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.964" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016645431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016931, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:51:08.957" endtime="20201030 11:51:08.965"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:08.965" endtime="20201030 11:51:08.967"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.662" endtime="20201030 11:51:08.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.661" endtime="20201030 11:51:08.968"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:08.972" level="INFO">${PHILIP_RES} = [{'diff': 0.0002855690000000029}, {'diff': 0.00028552800000000017}, {'diff': 0.0002855409999999968}, {'diff': 0.000285485999999998}, {'diff': 0.0002855420000000032}, {'diff': 0.00028554199999999974}, ...</msg>
<status status="PASS" starttime="20201030 11:51:08.969" endtime="20201030 11:51:08.972"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:08.976" level="INFO">${RESULT} = {'diff': [0.0002855690000000029, 0.00028552800000000017, 0.0002855409999999968, 0.000285485999999998, 0.0002855420000000032, 0.00028554199999999974, 0.00028552699999999723, 0.00028551399999999713, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:08.973" endtime="20201030 11:51:08.976"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.980" level="INFO">NAME: 29-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:08.979" endtime="20201030 11:51:08.980"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:08.982" level="INFO">VALUE: [0.0002855690000000029, 0.00028552800000000017, 0.0002855409999999968, 0.000285485999999998, 0.0002855420000000032, 0.00028554199999999974, 0.00028552699999999723, 0.00028551399999999713, 0.0002855279999999967, 0.0002855279999999967, 0.0002855550000000033, 0.00028552800000000017, 0.00028554199999999974, 0.00028554100000000027, 0.00028552800000000017, 0.00028551399999999713, 0.00028552800000000017, 0.0002855140000000006, 0.00028549999999999756, 0.00028549999999999756, 0.0002855270000000007, 0.00028552800000000017, 0.0002855140000000006, 0.00028552800000000017, 0.00028552800000000017, 0.00028554199999999974, 0.00028552800000000017, 0.000285485999999998, 0.00028552800000000017, 0.00028552800000000017, 0.00028555499999999984, 0.0002855559999999993, 0.0002855140000000006, 0.0002855689999999994, 0.00028552800000000017, 0.00028552800000000017, 0.00028552800000000017, 0.00028552800000000017, 0.0002855130000000011, 0.00028554199999999974, 0.00028552800000000017, 0.00028554199999999974, 0.0002855140000000006, 0.0002855559999999993, 0.00028554199999999974, 0.0002855270000000007, 0.0002855559999999993, 0.0002855140000000006, 0.00028554199999999974, 0.0002855140000000006]</msg>
<status status="PASS" starttime="20201030 11:51:08.981" endtime="20201030 11:51:08.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.976" endtime="20201030 11:51:08.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.623" endtime="20201030 11:51:08.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.598" endtime="20201030 11:51:08.988"></status>
</kw>
<kw name="${n} = 30" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:08.991" endtime="20201030 11:51:09.010"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.989" endtime="20201030 11:51:09.011"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.019" endtime="20201030 11:51:09.043"></status>
</kw>
<msg timestamp="20201030 11:51:09.044" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.017" endtime="20201030 11:51:09.044"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.046" level="INFO">${RESULT} = {'cmd': 'list_ops 30', 'msg': ['list_ops 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.045" endtime="20201030 11:51:09.046"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.047" endtime="20201030 11:51:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.015" endtime="20201030 11:51:09.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.013" endtime="20201030 11:51:09.051"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.057" endtime="20201030 11:51:09.347"></status>
</kw>
<msg timestamp="20201030 11:51:09.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01736825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017670778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:09.055" endtime="20201030 11:51:09.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.372" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01736825, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017670778, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:09.356" endtime="20201030 11:51:09.373"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.374" endtime="20201030 11:51:09.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.053" endtime="20201030 11:51:09.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.051" endtime="20201030 11:51:09.380"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:09.388" level="INFO">${PHILIP_RES} = [{'diff': 0.0003025280000000033}, {'diff': 0.0003024719999999981}, {'diff': 0.0003025409999999999}, {'diff': 0.000302473000000001}, {'diff': 0.00030247200000000155}, {'diff': 0.000302473000000001}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:09.381" endtime="20201030 11:51:09.388"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.396" level="INFO">${RESULT} = {'diff': [0.0003025280000000033, 0.0003024719999999981, 0.0003025409999999999, 0.000302473000000001, 0.00030247200000000155, 0.000302473000000001, 0.000302458000000002, 0.00030247200000000155, 0.00030...</msg>
<status status="PASS" starttime="20201030 11:51:09.390" endtime="20201030 11:51:09.397"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.405" level="INFO">NAME: 30-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:09.403" endtime="20201030 11:51:09.406"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.410" level="INFO">VALUE: [0.0003025280000000033, 0.0003024719999999981, 0.0003025409999999999, 0.000302473000000001, 0.00030247200000000155, 0.000302473000000001, 0.000302458000000002, 0.00030247200000000155, 0.0003024860000000011, 0.00030248599999999765, 0.0003024719999999981, 0.00030243099999999884, 0.000302458999999998, 0.0003024029999999997, 0.0003024029999999997, 0.00030248599999999765, 0.00030247200000000155, 0.00030247200000000155, 0.0003024440000000024, 0.0003024860000000011, 0.00030243000000000284, 0.0003024450000000019, 0.000302458000000002, 0.0003025000000000007, 0.00030247200000000155, 0.00030248599999999765, 0.0003024579999999985, 0.0003024579999999985, 0.00030247299999999755, 0.0003024719999999981, 0.00030247299999999755, 0.00030251400000000025, 0.00030247200000000155, 0.00030247200000000155, 0.0003024860000000011, 0.0003024860000000011, 0.00030247200000000155, 0.0003024870000000006, 0.00030247200000000155, 0.00030247200000000155, 0.00030247200000000155, 0.0003024579999999985, 0.000302472000000005, 0.000302472000000005, 0.0003024730000000045, 0.0003024860000000046, 0.00030248700000000406, 0.0003024860000000046, 0.0003024590000000049, 0.0003024860000000046]</msg>
<status status="PASS" starttime="20201030 11:51:09.407" endtime="20201030 11:51:09.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.398" endtime="20201030 11:51:09.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.011" endtime="20201030 11:51:09.415"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:08.989" endtime="20201030 11:51:09.415"></status>
</kw>
<kw name="${n} = 31" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.420" endtime="20201030 11:51:09.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.417" endtime="20201030 11:51:09.441"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.449" endtime="20201030 11:51:09.473"></status>
</kw>
<msg timestamp="20201030 11:51:09.473" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.447" endtime="20201030 11:51:09.473"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.476" level="INFO">${RESULT} = {'cmd': 'list_ops 31', 'msg': ['list_ops 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.474" endtime="20201030 11:51:09.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.477" endtime="20201030 11:51:09.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.445" endtime="20201030 11:51:09.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.443" endtime="20201030 11:51:09.479"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.486" endtime="20201030 11:51:09.770"></status>
</kw>
<msg timestamp="20201030 11:51:09.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016730042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017049986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.484" endtime="20201030 11:51:09.773"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.781" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016730042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017049986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.774" endtime="20201030 11:51:09.781"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.782" endtime="20201030 11:51:09.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.482" endtime="20201030 11:51:09.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.480" endtime="20201030 11:51:09.785"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:09.789" level="INFO">${PHILIP_RES} = [{'diff': 0.0003199439999999991}, {'diff': 0.00031990299999999985}, {'diff': 0.0003198890000000003}, {'diff': 0.0003198890000000003}, {'diff': 0.0003198609999999977}, {'diff': 0.0003198890000000003}, ...</msg>
<status status="PASS" starttime="20201030 11:51:09.786" endtime="20201030 11:51:09.789"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:09.794" level="INFO">${RESULT} = {'diff': [0.0003199439999999991, 0.00031990299999999985, 0.0003198890000000003, 0.0003198890000000003, 0.0003198609999999977, 0.0003198890000000003, 0.00031990299999999985, 0.00031995899999999813, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:09.790" endtime="20201030 11:51:09.794"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.798" level="INFO">NAME: 31-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:09.797" endtime="20201030 11:51:09.799"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.801" level="INFO">VALUE: [0.0003199439999999991, 0.00031990299999999985, 0.0003198890000000003, 0.0003198890000000003, 0.0003198609999999977, 0.0003198890000000003, 0.00031990299999999985, 0.00031995899999999813, 0.0003198890000000003, 0.0003199020000000004, 0.00031990299999999985, 0.00031990299999999985, 0.0003198890000000003, 0.0003198890000000003, 0.00031988799999999734, 0.0003199169999999994, 0.00031981999999999844, 0.00031990299999999985, 0.0003198890000000003, 0.00031988799999999734, 0.0003198890000000003, 0.0003198890000000003, 0.0003198890000000003, 0.0003198340000000015, 0.0003199019999999969, 0.00031990299999999985, 0.0003199020000000004, 0.00031990299999999985, 0.0003198750000000007, 0.0003198890000000003, 0.0003198889999999968, 0.0003199299999999995, 0.00031990299999999985, 0.0003198890000000003, 0.0003198750000000007, 0.00031990299999999985, 0.0003198880000000008, 0.00031983299999999854, 0.0003198890000000003, 0.000319930999999999, 0.00031990299999999985, 0.0003198880000000008, 0.00031988900000000375, 0.0003198889999999968, 0.0003198889999999968, 0.00031987499999999724, 0.00031988799999999734, 0.0003198889999999968, 0.0003199160000000034, 0.0003199030000000033]</msg>
<status status="PASS" starttime="20201030 11:51:09.800" endtime="20201030 11:51:09.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.794" endtime="20201030 11:51:09.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.441" endtime="20201030 11:51:09.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.416" endtime="20201030 11:51:09.803"></status>
</kw>
<kw name="${n} = 32" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:09.806" endtime="20201030 11:51:09.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.804" endtime="20201030 11:51:09.826"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.834" endtime="20201030 11:51:09.862"></status>
</kw>
<msg timestamp="20201030 11:51:09.863" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.832" endtime="20201030 11:51:09.863"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:09.865" level="INFO">${RESULT} = {'cmd': 'list_ops 32', 'msg': ['list_ops 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:09.864" endtime="20201030 11:51:09.865"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.866" endtime="20201030 11:51:09.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.830" endtime="20201030 11:51:09.868"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.828" endtime="20201030 11:51:09.869"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:09.875" endtime="20201030 11:51:10.169"></status>
</kw>
<msg timestamp="20201030 11:51:10.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017909611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:09.874" endtime="20201030 11:51:10.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.194" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017571792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017909611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.178" endtime="20201030 11:51:10.194"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.196" endtime="20201030 11:51:10.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.871" endtime="20201030 11:51:10.200"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.869" endtime="20201030 11:51:10.201"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:10.209" level="INFO">${PHILIP_RES} = [{'diff': 0.0003378189999999996}, {'diff': 0.00033779199999999995}, {'diff': 0.00033779199999999995}, {'diff': 0.0003377910000000005}, {'diff': 0.0003377910000000005}, {'diff': 0.00033776399999999734}...</msg>
<status status="PASS" starttime="20201030 11:51:10.203" endtime="20201030 11:51:10.210"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.218" level="INFO">${RESULT} = {'diff': [0.0003378189999999996, 0.00033779199999999995, 0.00033779199999999995, 0.0003377910000000005, 0.0003377910000000005, 0.00033776399999999734, 0.00033783399999999866, 0.00033779199999999995, 0...</msg>
<status status="PASS" starttime="20201030 11:51:10.211" endtime="20201030 11:51:10.218"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.226" level="INFO">NAME: 32-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:10.224" endtime="20201030 11:51:10.227"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.232" level="INFO">VALUE: [0.0003378189999999996, 0.00033779199999999995, 0.00033779199999999995, 0.0003377910000000005, 0.0003377910000000005, 0.00033776399999999734, 0.00033783399999999866, 0.00033779199999999995, 0.0003377910000000005, 0.0003377910000000005, 0.0003377910000000005, 0.00033783399999999866, 0.00033779199999999995, 0.00033779199999999995, 0.00033775000000000124, 0.0003377770000000009, 0.00033779199999999995, 0.0003377499999999978, 0.0003377779999999969, 0.00033779199999999995, 0.0003377910000000005, 0.00033779199999999995, 0.0003378059999999995, 0.00033779199999999995, 0.0003377780000000004, 0.0003377910000000005, 0.0003378190000000031, 0.0003377779999999969, 0.0003377640000000008, 0.00033779199999999995, 0.0003377369999999977, 0.0003377910000000005, 0.0003377780000000004, 0.0003378059999999995, 0.0003378059999999995, 0.0003377779999999969, 0.0003377910000000005, 0.0003377780000000004, 0.0003377920000000034, 0.0003377359999999982, 0.0003377920000000034, 0.00033777699999999744, 0.0003377359999999982, 0.0003377640000000043, 0.0003377919999999965, 0.00033770899999999854, 0.0003377779999999969, 0.0003378199999999956, 0.00033782000000000256, 0.0003377779999999969]</msg>
<status status="PASS" starttime="20201030 11:51:10.229" endtime="20201030 11:51:10.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.220" endtime="20201030 11:51:10.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.827" endtime="20201030 11:51:10.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:09.803" endtime="20201030 11:51:10.235"></status>
</kw>
<kw name="${n} = 33" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.239" endtime="20201030 11:51:10.259"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.238" endtime="20201030 11:51:10.259"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.267" endtime="20201030 11:51:10.295"></status>
</kw>
<msg timestamp="20201030 11:51:10.296" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.266" endtime="20201030 11:51:10.296"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.298" level="INFO">${RESULT} = {'cmd': 'list_ops 33', 'msg': ['list_ops 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.297" endtime="20201030 11:51:10.299"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.299" endtime="20201030 11:51:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.263" endtime="20201030 11:51:10.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.261" endtime="20201030 11:51:10.303"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.309" endtime="20201030 11:51:10.594"></status>
</kw>
<msg timestamp="20201030 11:51:10.597" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016576278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016932486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.308" endtime="20201030 11:51:10.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.605" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016576278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016932486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.599" endtime="20201030 11:51:10.606"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.607" endtime="20201030 11:51:10.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.305" endtime="20201030 11:51:10.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.303" endtime="20201030 11:51:10.609"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:10.613" level="INFO">${PHILIP_RES} = [{'diff': 0.0003562080000000002}, {'diff': 0.00035616599999999804}, {'diff': 0.0003561530000000014}, {'diff': 0.00035615299999999794}, {'diff': 0.00035615299999999794}, {'diff': 0.00035623699999999883...</msg>
<status status="PASS" starttime="20201030 11:51:10.610" endtime="20201030 11:51:10.613"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:10.617" level="INFO">${RESULT} = {'diff': [0.0003562080000000002, 0.00035616599999999804, 0.0003561530000000014, 0.00035615299999999794, 0.00035615299999999794, 0.00035623699999999883, 0.00035619400000000065, 0.00035615299999999794, ...</msg>
<status status="PASS" starttime="20201030 11:51:10.614" endtime="20201030 11:51:10.617"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.621" level="INFO">NAME: 33-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:10.620" endtime="20201030 11:51:10.622"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.624" level="INFO">VALUE: [0.0003562080000000002, 0.00035616599999999804, 0.0003561530000000014, 0.00035615299999999794, 0.00035615299999999794, 0.00035623699999999883, 0.00035619400000000065, 0.00035615299999999794, 0.0003561530000000014, 0.000356167000000001, 0.00035616599999999804, 0.0003561530000000014, 0.000356167000000001, 0.0003561249999999988, 0.00035618100000000055, 0.0003561660000000015, 0.00035618100000000055, 0.00035615299999999794, 0.000356167000000001, 0.00035615199999999847, 0.0003561669999999975, 0.000356167000000001, 0.0003561389999999984, 0.00035616599999999804, 0.0003561800000000011, 0.000356167000000001, 0.0003561389999999984, 0.000356167000000001, 0.00035615200000000194, 0.00035615299999999794, 0.000356167000000001, 0.000356167000000001, 0.0003560830000000001, 0.0003561530000000014, 0.0003561530000000014, 0.0003561669999999975, 0.0003561389999999984, 0.00035615200000000194, 0.0003561530000000014, 0.00035616700000000445, 0.0003561249999999988, 0.00035616599999999804, 0.00035615299999999794, 0.00035615299999999794, 0.0003561530000000049, 0.00035620900000000316, 0.00035615199999999847, 0.0003561669999999975, 0.00035609699999999966, 0.0003561389999999984]</msg>
<status status="PASS" starttime="20201030 11:51:10.622" endtime="20201030 11:51:10.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.618" endtime="20201030 11:51:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.260" endtime="20201030 11:51:10.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.236" endtime="20201030 11:51:10.626"></status>
</kw>
<kw name="${n} = 34" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:10.629" endtime="20201030 11:51:10.648"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.627" endtime="20201030 11:51:10.649"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.657" endtime="20201030 11:51:10.686"></status>
</kw>
<msg timestamp="20201030 11:51:10.686" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.655" endtime="20201030 11:51:10.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:10.689" level="INFO">${RESULT} = {'cmd': 'list_ops 34', 'msg': ['list_ops 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:10.687" endtime="20201030 11:51:10.689"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.690" endtime="20201030 11:51:10.691"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.652" endtime="20201030 11:51:10.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.651" endtime="20201030 11:51:10.692"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:10.698" endtime="20201030 11:51:10.993"></status>
</kw>
<msg timestamp="20201030 11:51:10.999" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016962597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:10.697" endtime="20201030 11:51:11.000"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.017" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016587528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016962597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.002" endtime="20201030 11:51:11.018"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.020" endtime="20201030 11:51:11.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.694" endtime="20201030 11:51:11.024"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.693" endtime="20201030 11:51:11.025"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:11.033" level="INFO">${PHILIP_RES} = [{'diff': 0.0003750689999999987}, {'diff': 0.0003750139999999999}, {'diff': 0.0003750139999999999}, {'diff': 0.00037500000000000033}, {'diff': 0.0003749590000000011}, {'diff': 0.00037498699999999677},...</msg>
<status status="PASS" starttime="20201030 11:51:11.027" endtime="20201030 11:51:11.034"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.043" level="INFO">${RESULT} = {'diff': [0.0003750689999999987, 0.0003750139999999999, 0.0003750139999999999, 0.00037500000000000033, 0.0003749590000000011, 0.00037498699999999677, 0.00037499999999999686, 0.0003750139999999999, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:11.035" endtime="20201030 11:51:11.044"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.048" level="INFO">NAME: 34-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:11.047" endtime="20201030 11:51:11.048"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.050" level="INFO">VALUE: [0.0003750689999999987, 0.0003750139999999999, 0.0003750139999999999, 0.00037500000000000033, 0.0003749590000000011, 0.00037498699999999677, 0.00037499999999999686, 0.0003750139999999999, 0.0003750139999999999, 0.00037504199999999904, 0.00037500000000000033, 0.00037504199999999904, 0.00037498600000000076, 0.0003750139999999999, 0.00037500000000000033, 0.0003749859999999973, 0.0003750139999999999, 0.0003750560000000021, 0.00037498600000000076, 0.00037498600000000076, 0.0003750139999999999, 0.00037502799999999947, 0.00037505499999999914, 0.00037502799999999947, 0.00037498600000000076, 0.00037495799999999815, 0.0003750139999999999, 0.00037494499999999806, 0.00037500000000000033, 0.00037499999999999686, 0.00037502799999999947, 0.00037498600000000076, 0.00037502799999999947, 0.00037500000000000033, 0.00037501300000000043, 0.00037498600000000076, 0.0003749439999999986, 0.0003750139999999999, 0.0003750139999999999, 0.000375027, 0.00037500000000000033, 0.00037500000000000033, 0.00037500000000000033, 0.00037502799999999947, 0.00037495899999999416, 0.00037500000000000033, 0.0003750139999999999, 0.00037498600000000076, 0.0003750280000000064, 0.0003750139999999999]</msg>
<status status="PASS" starttime="20201030 11:51:11.049" endtime="20201030 11:51:11.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.045" endtime="20201030 11:51:11.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.649" endtime="20201030 11:51:11.052"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:10.627" endtime="20201030 11:51:11.052"></status>
</kw>
<kw name="${n} = 35" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.055" endtime="20201030 11:51:11.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.053" endtime="20201030 11:51:11.075"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.083" endtime="20201030 11:51:11.111"></status>
</kw>
<msg timestamp="20201030 11:51:11.112" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.081" endtime="20201030 11:51:11.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.114" level="INFO">${RESULT} = {'cmd': 'list_ops 35', 'msg': ['list_ops 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.113" endtime="20201030 11:51:11.115"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.115" endtime="20201030 11:51:11.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.079" endtime="20201030 11:51:11.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.077" endtime="20201030 11:51:11.118"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.124" endtime="20201030 11:51:11.413"></status>
</kw>
<msg timestamp="20201030 11:51:11.416" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016991014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.123" endtime="20201030 11:51:11.417"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.424" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016596611, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016991014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.418" endtime="20201030 11:51:11.425"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.426" endtime="20201030 11:51:11.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.120" endtime="20201030 11:51:11.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.119" endtime="20201030 11:51:11.428"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:11.432" level="INFO">${PHILIP_RES} = [{'diff': 0.00039440299999999803}, {'diff': 0.00039433399999999966}, {'diff': 0.00039434699999999975}, {'diff': 0.0003943330000000002}, {'diff': 0.0003943200000000001}, {'diff': 0.0003943330000000002}...</msg>
<status status="PASS" starttime="20201030 11:51:11.429" endtime="20201030 11:51:11.432"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.436" level="INFO">${RESULT} = {'diff': [0.00039440299999999803, 0.00039433399999999966, 0.00039434699999999975, 0.0003943330000000002, 0.0003943200000000001, 0.0003943330000000002, 0.0003943200000000001, 0.0003943330000000002, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:11.433" endtime="20201030 11:51:11.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.440" level="INFO">NAME: 35-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:11.439" endtime="20201030 11:51:11.440"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.442" level="INFO">VALUE: [0.00039440299999999803, 0.00039433399999999966, 0.00039434699999999975, 0.0003943330000000002, 0.0003943200000000001, 0.0003943330000000002, 0.0003943200000000001, 0.0003943330000000002, 0.0003943060000000005, 0.00039433399999999966, 0.0003943330000000002, 0.0003943479999999992, 0.0003943330000000002, 0.0003943190000000006, 0.00039440299999999803, 0.0003943190000000006, 0.00039434699999999975, 0.00039433399999999966, 0.00039429200000000095, 0.0003943479999999992, 0.0003943330000000002, 0.0003943190000000006, 0.0003943060000000005, 0.0003943330000000002, 0.00039429200000000095, 0.00039434699999999975, 0.0003943190000000006, 0.0003943479999999992, 0.0003943190000000006, 0.0003943330000000002, 0.00039434699999999975, 0.0003943190000000006, 0.0003943479999999992, 0.0003943190000000006, 0.0003943190000000006, 0.00039432000000000356, 0.0003943329999999967, 0.0003943469999999963, 0.0003943470000000032, 0.00039433300000000365, 0.0003943199999999966, 0.0003943469999999963, 0.00039433300000000365, 0.0003943340000000031, 0.0003943329999999967, 0.0003943339999999962, 0.0003943469999999963, 0.00039433300000000365, 0.00039427800000000485, 0.0003943049999999976]</msg>
<status status="PASS" starttime="20201030 11:51:11.441" endtime="20201030 11:51:11.443"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.437" endtime="20201030 11:51:11.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.075" endtime="20201030 11:51:11.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.053" endtime="20201030 11:51:11.444"></status>
</kw>
<kw name="${n} = 36" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.447" endtime="20201030 11:51:11.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.445" endtime="20201030 11:51:11.467"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.475" endtime="20201030 11:51:11.504"></status>
</kw>
<msg timestamp="20201030 11:51:11.505" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.473" endtime="20201030 11:51:11.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.507" level="INFO">${RESULT} = {'cmd': 'list_ops 36', 'msg': ['list_ops 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.506" endtime="20201030 11:51:11.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.509" endtime="20201030 11:51:11.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.471" endtime="20201030 11:51:11.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.469" endtime="20201030 11:51:11.512"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.518" endtime="20201030 11:51:11.814"></status>
</kw>
<msg timestamp="20201030 11:51:11.821" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016946736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.517" endtime="20201030 11:51:11.821"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.839" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016532556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016946736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.823" endtime="20201030 11:51:11.840"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.842" endtime="20201030 11:51:11.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.514" endtime="20201030 11:51:11.846"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.513" endtime="20201030 11:51:11.847"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:11.856" level="INFO">${PHILIP_RES} = [{'diff': 0.0004141800000000001}, {'diff': 0.00041411099999999826}, {'diff': 0.0004141250000000013}, {'diff': 0.00041415300000000044}, {'diff': 0.00041412499999999783}, {'diff': 0.00041415300000000044...</msg>
<status status="PASS" starttime="20201030 11:51:11.849" endtime="20201030 11:51:11.856"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:11.861" level="INFO">${RESULT} = {'diff': [0.0004141800000000001, 0.00041411099999999826, 0.0004141250000000013, 0.00041415300000000044, 0.00041412499999999783, 0.00041415300000000044, 0.00041416600000000053, 0.00041412499999999783, ...</msg>
<status status="PASS" starttime="20201030 11:51:11.858" endtime="20201030 11:51:11.862"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.866" level="INFO">NAME: 36-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:11.865" endtime="20201030 11:51:11.866"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.868" level="INFO">VALUE: [0.0004141800000000001, 0.00041411099999999826, 0.0004141250000000013, 0.00041415300000000044, 0.00041412499999999783, 0.00041415300000000044, 0.00041416600000000053, 0.00041412499999999783, 0.0004140969999999987, 0.0004141120000000012, 0.00041411099999999826, 0.00041413900000000087, 0.0004140829999999991, 0.0004141250000000013, 0.00041416600000000053, 0.00041412499999999783, 0.000414069999999999, 0.00041411099999999826, 0.00041413900000000087, 0.0004141120000000012, 0.00041412499999999783, 0.00041413900000000087, 0.00041413900000000087, 0.00041411099999999826, 0.0004141809999999996, 0.00041411100000000173, 0.0004141389999999974, 0.00041413900000000087, 0.00041413900000000087, 0.00041411099999999826, 0.00041413900000000087, 0.0004141389999999974, 0.00041413900000000087, 0.0004141389999999974, 0.00041415200000000096, 0.0004141250000000013, 0.00041413900000000087, 0.0004140830000000026, 0.0004141109999999948, 0.0004141250000000013, 0.0004141250000000013, 0.00041413900000000087, 0.0004141250000000013, 0.00041413899999999393, 0.0004141250000000013, 0.0004141250000000013, 0.00041413900000000087, 0.0004141250000000013, 0.00041412499999999436, 0.0004141250000000013]</msg>
<status status="PASS" starttime="20201030 11:51:11.867" endtime="20201030 11:51:11.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.862" endtime="20201030 11:51:11.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.467" endtime="20201030 11:51:11.871"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.445" endtime="20201030 11:51:11.871"></status>
</kw>
<kw name="${n} = 37" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:11.873" endtime="20201030 11:51:11.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.872" endtime="20201030 11:51:11.893"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.901" endtime="20201030 11:51:11.931"></status>
</kw>
<msg timestamp="20201030 11:51:11.932" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.899" endtime="20201030 11:51:11.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:11.934" level="INFO">${RESULT} = {'cmd': 'list_ops 37', 'msg': ['list_ops 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:11.933" endtime="20201030 11:51:11.934"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.935" endtime="20201030 11:51:11.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.897" endtime="20201030 11:51:11.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.895" endtime="20201030 11:51:11.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:11.944" endtime="20201030 11:51:12.230"></status>
</kw>
<msg timestamp="20201030 11:51:12.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016984292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:11.943" endtime="20201030 11:51:12.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016549833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016984292, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.234" endtime="20201030 11:51:12.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.242" endtime="20201030 11:51:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.940" endtime="20201030 11:51:12.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.938" endtime="20201030 11:51:12.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:12.248" level="INFO">${PHILIP_RES} = [{'diff': 0.0004344590000000016}, {'diff': 0.00043441599999999997}, {'diff': 0.00043440299999999987}, {'diff': 0.00043440299999999987}, {'diff': 0.00043441699999999944}, {'diff': 0.0004343890000000003...</msg>
<status status="PASS" starttime="20201030 11:51:12.245" endtime="20201030 11:51:12.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.253" level="INFO">${RESULT} = {'diff': [0.0004344590000000016, 0.00043441599999999997, 0.00043440299999999987, 0.00043440299999999987, 0.00043441699999999944, 0.0004343890000000003, 0.0004344020000000004, 0.00043440299999999987, 0...</msg>
<status status="PASS" starttime="20201030 11:51:12.249" endtime="20201030 11:51:12.253"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.257" level="INFO">NAME: 37-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:12.256" endtime="20201030 11:51:12.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.260" level="INFO">VALUE: [0.0004344590000000016, 0.00043441599999999997, 0.00043440299999999987, 0.00043440299999999987, 0.00043441699999999944, 0.0004343890000000003, 0.0004344020000000004, 0.00043440299999999987, 0.00043441699999999944, 0.00043440299999999987, 0.00043440199999999693, 0.00043440299999999987, 0.0004344170000000029, 0.000434430999999999, 0.00043441599999999997, 0.0004344439999999991, 0.00043440299999999987, 0.0004343890000000003, 0.00043441599999999997, 0.0004344020000000004, 0.0004343890000000003, 0.0004343469999999981, 0.00043437499999999726, 0.0004344020000000004, 0.0004343890000000003, 0.00043437500000000073, 0.000434430999999999, 0.00043440199999999693, 0.00043441699999999944, 0.00043441699999999944, 0.0004343890000000003, 0.00043440299999999987, 0.0004344020000000004, 0.00043440299999999987, 0.00043440299999999987, 0.00043440299999999987, 0.0004344020000000004, 0.000434430999999999, 0.000434430999999999, 0.0004343890000000003, 0.00043442999999999954, 0.00043441699999999944, 0.00043440299999999987, 0.0004344170000000064, 0.00043440299999999987, 0.00043447199999999825, 0.0004344729999999977, 0.00043440299999999987, 0.00043436200000000064, 0.0004344020000000004]</msg>
<status status="PASS" starttime="20201030 11:51:12.259" endtime="20201030 11:51:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.254" endtime="20201030 11:51:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.894" endtime="20201030 11:51:12.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:11.871" endtime="20201030 11:51:12.262"></status>
</kw>
<kw name="${n} = 38" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.264" endtime="20201030 11:51:12.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.263" endtime="20201030 11:51:12.284"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.292" endtime="20201030 11:51:12.324"></status>
</kw>
<msg timestamp="20201030 11:51:12.325" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.290" endtime="20201030 11:51:12.325"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.327" level="INFO">${RESULT} = {'cmd': 'list_ops 38', 'msg': ['list_ops 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.326" endtime="20201030 11:51:12.327"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.328" endtime="20201030 11:51:12.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.288" endtime="20201030 11:51:12.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.286" endtime="20201030 11:51:12.331"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.337" endtime="20201030 11:51:12.635"></status>
</kw>
<msg timestamp="20201030 11:51:12.642" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016606347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017061569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.336" endtime="20201030 11:51:12.643"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016606347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017061569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.645" endtime="20201030 11:51:12.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.663" endtime="20201030 11:51:12.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.333" endtime="20201030 11:51:12.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.331" endtime="20201030 11:51:12.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:12.672" level="INFO">${PHILIP_RES} = [{'diff': 0.0004552219999999982}, {'diff': 0.0004551249999999972}, {'diff': 0.00045513900000000024}, {'diff': 0.0004551529999999998}, {'diff': 0.0004551949999999985}, {'diff': 0.0004551529999999998}, ...</msg>
<status status="PASS" starttime="20201030 11:51:12.669" endtime="20201030 11:51:12.672"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:12.676" level="INFO">${RESULT} = {'diff': [0.0004552219999999982, 0.0004551249999999972, 0.00045513900000000024, 0.0004551529999999998, 0.0004551949999999985, 0.0004551529999999998, 0.00045518000000000294, 0.0004551799999999995, 0.00...</msg>
<status status="PASS" starttime="20201030 11:51:12.673" endtime="20201030 11:51:12.676"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.680" level="INFO">NAME: 38-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:12.679" endtime="20201030 11:51:12.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.683" level="INFO">VALUE: [0.0004552219999999982, 0.0004551249999999972, 0.00045513900000000024, 0.0004551529999999998, 0.0004551949999999985, 0.0004551529999999998, 0.00045518000000000294, 0.0004551799999999995, 0.0004551529999999998, 0.0004551529999999998, 0.00045522200000000165, 0.0004551529999999998, 0.0004551669999999994, 0.00045515199999999686, 0.0004551379999999973, 0.0004551529999999998, 0.00045519399999999904, 0.0004551669999999994, 0.0004551669999999994, 0.0004551529999999998, 0.00045516700000000285, 0.0004552080000000021, 0.00045515200000000033, 0.00045511099999999763, 0.0004551669999999994, 0.0004551529999999998, 0.00045518099999999895, 0.0004552089999999981, 0.0004551659999999999, 0.0004551659999999999, 0.00045513900000000024, 0.00045512500000000067, 0.00045513900000000024, 0.0004551529999999998, 0.0004551669999999994, 0.0004551529999999998, 0.00045515200000000033, 0.00045512500000000067, 0.0004551800000000064, 0.00045518099999999895, 0.00045512500000000067, 0.0004551529999999998, 0.0004551529999999998, 0.0004551529999999998, 0.0004551659999999999, 0.0004551799999999995, 0.0004551669999999994, 0.0004551529999999998, 0.00045509700000000153, 0.000455082999999995]</msg>
<status status="PASS" starttime="20201030 11:51:12.681" endtime="20201030 11:51:12.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.677" endtime="20201030 11:51:12.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.285" endtime="20201030 11:51:12.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.262" endtime="20201030 11:51:12.685"></status>
</kw>
<kw name="${n} = 39" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:12.687" endtime="20201030 11:51:12.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.686" endtime="20201030 11:51:12.707"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.715" endtime="20201030 11:51:12.749"></status>
</kw>
<msg timestamp="20201030 11:51:12.750" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.713" endtime="20201030 11:51:12.750"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:12.752" level="INFO">${RESULT} = {'cmd': 'list_ops 39', 'msg': ['list_ops 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:12.751" endtime="20201030 11:51:12.753"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.753" endtime="20201030 11:51:12.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.711" endtime="20201030 11:51:12.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.709" endtime="20201030 11:51:12.757"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:12.763" endtime="20201030 11:51:13.050"></status>
</kw>
<msg timestamp="20201030 11:51:13.053" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016459153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:12.762" endtime="20201030 11:51:13.053"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.061" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016459153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.016935597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.054" endtime="20201030 11:51:13.061"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.062" endtime="20201030 11:51:13.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.759" endtime="20201030 11:51:13.064"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.757" endtime="20201030 11:51:13.064"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:13.068" level="INFO">${PHILIP_RES} = [{'diff': 0.0004764439999999995}, {'diff': 0.0004763890000000007}, {'diff': 0.0004763750000000011}, {'diff': 0.00047640300000000024}, {'diff': 0.0004763890000000007}, {'diff': 0.00047636100000000153},...</msg>
<status status="PASS" starttime="20201030 11:51:13.065" endtime="20201030 11:51:13.068"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.072" level="INFO">${RESULT} = {'diff': [0.0004764439999999995, 0.0004763890000000007, 0.0004763750000000011, 0.00047640300000000024, 0.0004763890000000007, 0.00047636100000000153, 0.00047636100000000153, 0.0004763890000000007, 0.0...</msg>
<status status="PASS" starttime="20201030 11:51:13.069" endtime="20201030 11:51:13.072"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.076" level="INFO">NAME: 39-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:13.075" endtime="20201030 11:51:13.077"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.079" level="INFO">VALUE: [0.0004764439999999995, 0.0004763890000000007, 0.0004763750000000011, 0.00047640300000000024, 0.0004763890000000007, 0.00047636100000000153, 0.00047636100000000153, 0.0004763890000000007, 0.00047640300000000024, 0.00047640200000000077, 0.0004763890000000007, 0.0004763750000000011, 0.00047640200000000077, 0.0004763890000000007, 0.0004763890000000007, 0.00047645799999999905, 0.00047640300000000024, 0.0004763890000000007, 0.0004764299999999999, 0.00047640300000000024, 0.0004763890000000007, 0.0004763750000000011, 0.0004763890000000007, 0.0004763750000000011, 0.0004763890000000007, 0.00047631899999999935, 0.00047644499999999895, 0.0004763890000000007, 0.0004763880000000012, 0.0004763889999999972, 0.0004764159999999934, 0.0004763880000000012, 0.0004763750000000011, 0.0004763750000000011, 0.0004763750000000011, 0.00047640300000000024, 0.00047640300000000024, 0.0004763890000000007, 0.00047640300000000024, 0.0004763750000000011, 0.00047640300000000024, 0.0004763750000000011, 0.00047636100000000153, 0.00047640300000000024, 0.0004763750000000011, 0.00047640300000000024, 0.0004763750000000011, 0.0004763880000000012, 0.0004763750000000011, 0.0004763890000000007]</msg>
<status status="PASS" starttime="20201030 11:51:13.077" endtime="20201030 11:51:13.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.073" endtime="20201030 11:51:13.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.708" endtime="20201030 11:51:13.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:12.685" endtime="20201030 11:51:13.081"></status>
</kw>
<kw name="${n} = 40" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.084" endtime="20201030 11:51:13.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.082" endtime="20201030 11:51:13.104"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.111" endtime="20201030 11:51:13.147"></status>
</kw>
<msg timestamp="20201030 11:51:13.147" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.110" endtime="20201030 11:51:13.147"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.150" level="INFO">${RESULT} = {'cmd': 'list_ops 40', 'msg': ['list_ops 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.148" endtime="20201030 11:51:13.150"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.151" endtime="20201030 11:51:13.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.107" endtime="20201030 11:51:13.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.106" endtime="20201030 11:51:13.153"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.159" endtime="20201030 11:51:13.459"></status>
</kw>
<msg timestamp="20201030 11:51:13.465" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016582639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017080806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.158" endtime="20201030 11:51:13.466"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.480" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016582639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017080806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.468" endtime="20201030 11:51:13.481"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.482" endtime="20201030 11:51:13.483"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.155" endtime="20201030 11:51:13.484"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.154" endtime="20201030 11:51:13.484"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:13.488" level="INFO">${PHILIP_RES} = [{'diff': 0.0004981670000000007}, {'diff': 0.0004980690000000003}, {'diff': 0.0004981670000000007}, {'diff': 0.000498110999999999}, {'diff': 0.0004980829999999999}, {'diff': 0.0004980560000000002}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:13.485" endtime="20201030 11:51:13.488"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.493" level="INFO">${RESULT} = {'diff': [0.0004981670000000007, 0.0004980690000000003, 0.0004981670000000007, 0.000498110999999999, 0.0004980829999999999, 0.0004980560000000002, 0.0004980690000000003, 0.0004980839999999993, 0.00049...</msg>
<status status="PASS" starttime="20201030 11:51:13.489" endtime="20201030 11:51:13.493"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.497" level="INFO">NAME: 40-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:13.496" endtime="20201030 11:51:13.498"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.499" level="INFO">VALUE: [0.0004981670000000007, 0.0004980690000000003, 0.0004981670000000007, 0.000498110999999999, 0.0004980829999999999, 0.0004980560000000002, 0.0004980690000000003, 0.0004980839999999993, 0.0004980690000000003, 0.0004981110000000025, 0.0004980689999999968, 0.0004980829999999999, 0.0004980969999999994, 0.0004980829999999999, 0.0004980699999999998, 0.0004981670000000007, 0.0004980839999999993, 0.0004980690000000003, 0.0004980969999999994, 0.0004980970000000029, 0.0004980969999999994, 0.0004981119999999985, 0.0004980969999999994, 0.000498110999999999, 0.0004980970000000029, 0.000498110999999999, 0.0004980420000000006, 0.0004980829999999999, 0.000498125000000002, 0.0004980280000000045, 0.000498096999999996, 0.0004980830000000033, 0.0004981110000000025, 0.0004980839999999959, 0.0004980830000000033, 0.0004980839999999959, 0.0004980970000000029, 0.0004980970000000029, 0.0004980829999999964, 0.0004980690000000038, 0.0004981120000000019, 0.000498096999999996, 0.0004980970000000029, 0.0004980699999999963, 0.0004980690000000038, 0.000498096999999996, 0.0004981110000000025, 0.0004980420000000041, 0.000498096999999996, 0.0004980840000000028]</msg>
<status status="PASS" starttime="20201030 11:51:13.498" endtime="20201030 11:51:13.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.494" endtime="20201030 11:51:13.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.104" endtime="20201030 11:51:13.501"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.082" endtime="20201030 11:51:13.501"></status>
</kw>
<kw name="${n} = 41" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.504" endtime="20201030 11:51:13.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.502" endtime="20201030 11:51:13.524"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.532" endtime="20201030 11:51:13.568"></status>
</kw>
<msg timestamp="20201030 11:51:13.569" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.530" endtime="20201030 11:51:13.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.571" level="INFO">${RESULT} = {'cmd': 'list_ops 41', 'msg': ['list_ops 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.570" endtime="20201030 11:51:13.571"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.572" endtime="20201030 11:51:13.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.528" endtime="20201030 11:51:13.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.526" endtime="20201030 11:51:13.575"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.581" endtime="20201030 11:51:13.867"></status>
</kw>
<msg timestamp="20201030 11:51:13.870" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016541542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017061861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.580" endtime="20201030 11:51:13.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016541542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017061861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.872" endtime="20201030 11:51:13.879"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.880" endtime="20201030 11:51:13.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.577" endtime="20201030 11:51:13.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.575" endtime="20201030 11:51:13.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:13.887" level="INFO">${PHILIP_RES} = [{'diff': 0.0005203190000000017}, {'diff': 0.0005202769999999995}, {'diff': 0.000520277999999999}, {'diff': 0.0005203340000000008}, {'diff': 0.0005202909999999991}, {'diff': 0.000520277999999999}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:13.883" endtime="20201030 11:51:13.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:13.891" level="INFO">${RESULT} = {'diff': [0.0005203190000000017, 0.0005202769999999995, 0.000520277999999999, 0.0005203340000000008, 0.0005202909999999991, 0.000520277999999999, 0.0005202639999999994, 0.0005202780000000025, 0.000520...</msg>
<status status="PASS" starttime="20201030 11:51:13.888" endtime="20201030 11:51:13.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.896" level="INFO">NAME: 41-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:13.894" endtime="20201030 11:51:13.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.898" level="INFO">VALUE: [0.0005203190000000017, 0.0005202769999999995, 0.000520277999999999, 0.0005203340000000008, 0.0005202909999999991, 0.000520277999999999, 0.0005202639999999994, 0.0005202780000000025, 0.0005202639999999994, 0.0005203049999999987, 0.0005202639999999994, 0.0005203200000000012, 0.000520263, 0.000520277999999999, 0.0005202360000000003, 0.000520277000000003, 0.0005202919999999986, 0.000520277999999999, 0.0005202639999999994, 0.0005203200000000012, 0.000520277999999999, 0.0005202499999999999, 0.0005202639999999994, 0.0005202640000000029, 0.000520277999999999, 0.0005202919999999986, 0.0005202780000000025, 0.0005203330000000048, 0.0005202919999999986, 0.0005202769999999995, 0.0005202919999999986, 0.0005203059999999982, 0.0005202770000000065, 0.0005203199999999977, 0.0005202639999999994, 0.0005202909999999991, 0.0005202639999999994, 0.0005202360000000003, 0.0005202909999999991, 0.0005202499999999999, 0.0005202770000000065, 0.0005202919999999986, 0.000520277999999999, 0.000520263, 0.000520277999999999, 0.000520277999999999, 0.0005202639999999994, 0.000520277999999999, 0.0005202080000000012, 0.0005203049999999987]</msg>
<status status="PASS" starttime="20201030 11:51:13.897" endtime="20201030 11:51:13.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.892" endtime="20201030 11:51:13.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.524" endtime="20201030 11:51:13.900"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.502" endtime="20201030 11:51:13.900"></status>
</kw>
<kw name="${n} = 42" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:13.902" endtime="20201030 11:51:13.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.901" endtime="20201030 11:51:13.922"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.931" endtime="20201030 11:51:13.967"></status>
</kw>
<msg timestamp="20201030 11:51:13.968" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.929" endtime="20201030 11:51:13.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:13.970" level="INFO">${RESULT} = {'cmd': 'list_ops 42', 'msg': ['list_ops 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:13.969" endtime="20201030 11:51:13.970"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.971" endtime="20201030 11:51:13.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.927" endtime="20201030 11:51:13.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.925" endtime="20201030 11:51:13.974"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:13.981" endtime="20201030 11:51:14.283"></status>
</kw>
<msg timestamp="20201030 11:51:14.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017285139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017828125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:13.979" endtime="20201030 11:51:14.289"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.296" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.017285139, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017828125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.289" endtime="20201030 11:51:14.297"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.297" endtime="20201030 11:51:14.299"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.977" endtime="20201030 11:51:14.300"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.975" endtime="20201030 11:51:14.300"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:14.304" level="INFO">${PHILIP_RES} = [{'diff': 0.0005429859999999988}, {'diff': 0.000542931}, {'diff': 0.0005429449999999995}, {'diff': 0.0005429300000000005}, {'diff': 0.0005429449999999995}, {'diff': 0.0005429300000000005}, {'diff': 0....</msg>
<status status="PASS" starttime="20201030 11:51:14.301" endtime="20201030 11:51:14.304"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.308" level="INFO">${RESULT} = {'diff': [0.0005429859999999988, 0.000542931, 0.0005429449999999995, 0.0005429300000000005, 0.0005429449999999995, 0.0005429300000000005, 0.0005429170000000004, 0.0005429300000000005, 0.00054291700000...</msg>
<status status="PASS" starttime="20201030 11:51:14.305" endtime="20201030 11:51:14.308"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.312" level="INFO">NAME: 42-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:14.311" endtime="20201030 11:51:14.312"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.314" level="INFO">VALUE: [0.0005429859999999988, 0.000542931, 0.0005429449999999995, 0.0005429300000000005, 0.0005429449999999995, 0.0005429300000000005, 0.0005429170000000004, 0.0005429300000000005, 0.0005429170000000004, 0.0005429440000000001, 0.0005429170000000004, 0.0005429720000000027, 0.0005428890000000013, 0.0005429300000000005, 0.0005429579999999996, 0.0005429160000000009, 0.000542931, 0.0005429440000000001, 0.000542931, 0.0005429170000000004, 0.0005429030000000008, 0.000542931, 0.0005428750000000017, 0.0005429449999999995, 0.0005429160000000009, 0.0005429310000000034, 0.000542929999999997, 0.0005429310000000034, 0.0005429440000000035, 0.0005429169999999969, 0.0005429579999999962, 0.0005429310000000034, 0.0005429159999999975, 0.0005429309999999965, 0.000542930000000004, 0.0005428750000000052, 0.0005429439999999966, 0.0005429309999999965, 0.0005429160000000044, 0.0005429309999999965, 0.0005429999999999949, 0.0005429170000000039, 0.000542929999999997, 0.0005429309999999965, 0.0005429310000000034, 0.0005429720000000027, 0.0005429309999999965, 0.0005429159999999975, 0.000542945000000003, 0.000542929999999997]</msg>
<status status="PASS" starttime="20201030 11:51:14.313" endtime="20201030 11:51:14.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.309" endtime="20201030 11:51:14.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.923" endtime="20201030 11:51:14.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:13.900" endtime="20201030 11:51:14.317"></status>
</kw>
<kw name="${n} = 43" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.319" endtime="20201030 11:51:14.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.318" endtime="20201030 11:51:14.339"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.348" endtime="20201030 11:51:14.384"></status>
</kw>
<msg timestamp="20201030 11:51:14.384" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.346" endtime="20201030 11:51:14.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.387" level="INFO">${RESULT} = {'cmd': 'list_ops 43', 'msg': ['list_ops 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.386" endtime="20201030 11:51:14.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.388" endtime="20201030 11:51:14.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.343" endtime="20201030 11:51:14.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.341" endtime="20201030 11:51:14.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.397" endtime="20201030 11:51:14.682"></status>
</kw>
<msg timestamp="20201030 11:51:14.685" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01684775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.395" endtime="20201030 11:51:14.686"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01684775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017413847, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:14.686" endtime="20201030 11:51:14.694"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.694" endtime="20201030 11:51:14.696"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.393" endtime="20201030 11:51:14.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.391" endtime="20201030 11:51:14.697"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:14.701" level="INFO">${PHILIP_RES} = [{'diff': 0.000566096999999998}, {'diff': 0.0005660689999999989}, {'diff': 0.0005660279999999997}, {'diff': 0.0005660419999999992}, {'diff': 0.0005660549999999993}, {'diff': 0.0005660689999999989}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:14.698" endtime="20201030 11:51:14.701"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:14.705" level="INFO">${RESULT} = {'diff': [0.000566096999999998, 0.0005660689999999989, 0.0005660279999999997, 0.0005660419999999992, 0.0005660549999999993, 0.0005660689999999989, 0.0005660419999999992, 0.0005660700000000018, 0.00056...</msg>
<status status="PASS" starttime="20201030 11:51:14.702" endtime="20201030 11:51:14.706"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.710" level="INFO">NAME: 43-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:14.709" endtime="20201030 11:51:14.710"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.712" level="INFO">VALUE: [0.000566096999999998, 0.0005660689999999989, 0.0005660279999999997, 0.0005660419999999992, 0.0005660549999999993, 0.0005660689999999989, 0.0005660419999999992, 0.0005660700000000018, 0.0005660689999999989, 0.0005660829999999985, 0.0005660419999999992, 0.0005660560000000023, 0.0005660560000000023, 0.0005660549999999993, 0.0005660140000000001, 0.0005660690000000024, 0.0005660560000000023, 0.0005660829999999985, 0.0005660829999999985, 0.0005661110000000011, 0.0005660830000000019, 0.0005660559999999988, 0.0005660000000000005, 0.0005660409999999998, 0.000566112000000004, 0.0005660560000000023, 0.0005660279999999962, 0.0005660560000000023, 0.0005661110000000011, 0.0005660419999999958, 0.000566098000000001, 0.0005660700000000018, 0.0005660689999999954, 0.0005660690000000024, 0.0005660559999999953, 0.0005660280000000031, 0.0005660700000000018, 0.0005660129999999972, 0.0005660550000000028, 0.0005660419999999958, 0.0005660560000000023, 0.0005660560000000023, 0.0005660689999999954, 0.0005660690000000024, 0.0005660559999999953, 0.0005660560000000023, 0.0005660420000000027, 0.0005660689999999954, 0.0005660550000000028, 0.0005660700000000018]</msg>
<status status="PASS" starttime="20201030 11:51:14.711" endtime="20201030 11:51:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.706" endtime="20201030 11:51:14.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.340" endtime="20201030 11:51:14.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.317" endtime="20201030 11:51:14.714"></status>
</kw>
<kw name="${n} = 44" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:14.716" endtime="20201030 11:51:14.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.715" endtime="20201030 11:51:14.736"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.744" endtime="20201030 11:51:14.784"></status>
</kw>
<msg timestamp="20201030 11:51:14.785" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.743" endtime="20201030 11:51:14.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:14.787" level="INFO">${RESULT} = {'cmd': 'list_ops 44', 'msg': ['list_ops 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:14.786" endtime="20201030 11:51:14.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.788" endtime="20201030 11:51:14.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.740" endtime="20201030 11:51:14.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.738" endtime="20201030 11:51:14.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:14.797" endtime="20201030 11:51:15.103"></status>
</kw>
<msg timestamp="20201030 11:51:15.106" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016558111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017147833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:14.796" endtime="20201030 11:51:15.106"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016558111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017147833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.107" endtime="20201030 11:51:15.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.115" endtime="20201030 11:51:15.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.793" endtime="20201030 11:51:15.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.791" endtime="20201030 11:51:15.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:15.121" level="INFO">${PHILIP_RES} = [{'diff': 0.0005897220000000009}, {'diff': 0.0005896660000000026}, {'diff': 0.0005896669999999986}, {'diff': 0.0005896659999999991}, {'diff': 0.0005896660000000026}, {'diff': 0.0005896249999999999}, {...</msg>
<status status="PASS" starttime="20201030 11:51:15.118" endtime="20201030 11:51:15.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.125" level="INFO">${RESULT} = {'diff': [0.0005897220000000009, 0.0005896660000000026, 0.0005896669999999986, 0.0005896659999999991, 0.0005896660000000026, 0.0005896249999999999, 0.0005896949999999977, 0.0005896660000000026, 0.0005...</msg>
<status status="PASS" starttime="20201030 11:51:15.122" endtime="20201030 11:51:15.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.129" level="INFO">NAME: 44-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:15.128" endtime="20201030 11:51:15.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.132" level="INFO">VALUE: [0.0005897220000000009, 0.0005896660000000026, 0.0005896669999999986, 0.0005896659999999991, 0.0005896660000000026, 0.0005896249999999999, 0.0005896949999999977, 0.0005896660000000026, 0.000589652999999999, 0.0005896809999999982, 0.0005896659999999991, 0.0005896940000000017, 0.0005896389999999994, 0.0005896110000000003, 0.0005896800000000021, 0.0005896389999999994, 0.0005896669999999986, 0.00058975, 0.000589667000000002, 0.0005896949999999977, 0.0005896669999999986, 0.0005896800000000021, 0.0005896809999999982, 0.0005896669999999986, 0.0005896799999999952, 0.000589667000000002, 0.000589667000000002, 0.0005896799999999952, 0.0005896800000000021, 0.0005896810000000016, 0.000589667000000002, 0.000589652000000003, 0.0005896119999999963, 0.000589667000000002, 0.000589667000000002, 0.0005897639999999996, 0.000589667000000002, 0.0005896810000000016, 0.0005897220000000009, 0.000589667000000002, 0.0005897090000000008, 0.0005896659999999956, 0.0005896940000000017, 0.0005896529999999955, 0.000589667000000002, 0.0005896800000000021, 0.0005896669999999951, 0.0005896810000000016, 0.0005896390000000029, 0.0005896529999999955]</msg>
<status status="PASS" starttime="20201030 11:51:15.130" endtime="20201030 11:51:15.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.126" endtime="20201030 11:51:15.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.737" endtime="20201030 11:51:15.133"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:14.714" endtime="20201030 11:51:15.134"></status>
</kw>
<kw name="${n} = 45" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.136" endtime="20201030 11:51:15.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.134" endtime="20201030 11:51:15.156"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.164" endtime="20201030 11:51:15.203"></status>
</kw>
<msg timestamp="20201030 11:51:15.203" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.162" endtime="20201030 11:51:15.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.206" level="INFO">${RESULT} = {'cmd': 'list_ops 45', 'msg': ['list_ops 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.204" endtime="20201030 11:51:15.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.207" endtime="20201030 11:51:15.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.160" endtime="20201030 11:51:15.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.158" endtime="20201030 11:51:15.211"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.217" endtime="20201030 11:51:15.502"></status>
</kw>
<msg timestamp="20201030 11:51:15.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016492847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017106653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.215" endtime="20201030 11:51:15.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016492847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017106653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:15.506" endtime="20201030 11:51:15.514"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.514" endtime="20201030 11:51:15.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.213" endtime="20201030 11:51:15.517"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.211" endtime="20201030 11:51:15.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:15.521" level="INFO">${PHILIP_RES} = [{'diff': 0.000613805999999998}, {'diff': 0.0006137499999999997}, {'diff': 0.0006137639999999993}, {'diff': 0.0006137779999999989}, {'diff': 0.0006137640000000028}, {'diff': 0.0006137499999999997}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:15.518" endtime="20201030 11:51:15.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.525" level="INFO">${RESULT} = {'diff': [0.000613805999999998, 0.0006137499999999997, 0.0006137639999999993, 0.0006137779999999989, 0.0006137640000000028, 0.0006137499999999997, 0.0006137779999999989, 0.0006137090000000005, 0.00061...</msg>
<status status="PASS" starttime="20201030 11:51:15.522" endtime="20201030 11:51:15.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.529" level="INFO">NAME: 45-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:15.528" endtime="20201030 11:51:15.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.531" level="INFO">VALUE: [0.000613805999999998, 0.0006137499999999997, 0.0006137639999999993, 0.0006137779999999989, 0.0006137640000000028, 0.0006137499999999997, 0.0006137779999999989, 0.0006137090000000005, 0.0006137639999999993, 0.0006137369999999996, 0.0006137499999999997, 0.0006137769999999994, 0.0006137639999999993, 0.000613708999999997, 0.0006136949999999974, 0.0006137769999999994, 0.0006137639999999993, 0.0006137769999999994, 0.0006137639999999993, 0.0006137499999999997, 0.0006137639999999993, 0.0006137629999999998, 0.0006137630000000033, 0.0006137630000000033, 0.0006137770000000028, 0.0006137499999999962, 0.000613693999999998, 0.0006137499999999962, 0.0006137779999999954, 0.0006137779999999954, 0.0006137639999999958, 0.0006137499999999962, 0.0006137640000000028, 0.0006137359999999967, 0.0006137640000000028, 0.0006138060000000015, 0.0006137500000000032, 0.0006137500000000032, 0.0006137360000000036, 0.0006137640000000028, 0.0006137640000000028, 0.0006137499999999962, 0.0006137639999999958, 0.0006137359999999967, 0.000613820000000001, 0.0006138059999999945, 0.0006137639999999958, 0.0006138059999999945, 0.0006138330000000011, 0.0006137500000000032]</msg>
<status status="PASS" starttime="20201030 11:51:15.530" endtime="20201030 11:51:15.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.525" endtime="20201030 11:51:15.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.156" endtime="20201030 11:51:15.534"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.134" endtime="20201030 11:51:15.534"></status>
</kw>
<kw name="${n} = 46" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.536" endtime="20201030 11:51:15.556"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.535" endtime="20201030 11:51:15.556"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.564" endtime="20201030 11:51:15.605"></status>
</kw>
<msg timestamp="20201030 11:51:15.605" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.563" endtime="20201030 11:51:15.606"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.608" level="INFO">${RESULT} = {'cmd': 'list_ops 46', 'msg': ['list_ops 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.607" endtime="20201030 11:51:15.608"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.609" endtime="20201030 11:51:15.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.560" endtime="20201030 11:51:15.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.558" endtime="20201030 11:51:15.612"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.618" endtime="20201030 11:51:15.920"></status>
</kw>
<msg timestamp="20201030 11:51:15.923" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01708275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:15.616" endtime="20201030 11:51:15.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01708275, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017721111, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:15.924" endtime="20201030 11:51:15.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.932" endtime="20201030 11:51:15.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.614" endtime="20201030 11:51:15.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.612" endtime="20201030 11:51:15.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:15.938" level="INFO">${PHILIP_RES} = [{'diff': 0.0006383610000000005}, {'diff': 0.0006382499999999999}, {'diff': 0.0006383339999999973}, {'diff': 0.0006383200000000012}, {'diff': 0.0006383060000000017}, {'diff': 0.0006383189999999983}, {...</msg>
<status status="PASS" starttime="20201030 11:51:15.935" endtime="20201030 11:51:15.939"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:15.943" level="INFO">${RESULT} = {'diff': [0.0006383610000000005, 0.0006382499999999999, 0.0006383339999999973, 0.0006383200000000012, 0.0006383060000000017, 0.0006383189999999983, 0.0006383189999999983, 0.0006383190000000018, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:15.939" endtime="20201030 11:51:15.943"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.947" level="INFO">NAME: 46-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:15.946" endtime="20201030 11:51:15.948"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:15.950" level="INFO">VALUE: [0.0006383610000000005, 0.0006382499999999999, 0.0006383339999999973, 0.0006383200000000012, 0.0006383060000000017, 0.0006383189999999983, 0.0006383189999999983, 0.0006383190000000018, 0.0006383189999999983, 0.0006383059999999982, 0.0006383610000000005, 0.0006383200000000012, 0.0006383469999999974, 0.0006383049999999987, 0.0006383610000000005, 0.0006383189999999983, 0.0006383200000000012, 0.0006383060000000017, 0.0006383330000000013, 0.0006383189999999983, 0.0006382909999999992, 0.0006383330000000013, 0.0006383329999999979, 0.0006383200000000047, 0.0006383199999999978, 0.0006383469999999974, 0.0006383330000000048, 0.0006383189999999983, 0.0006383329999999979, 0.0006382920000000056, 0.0006383879999999967, 0.0006383059999999982, 0.0006383200000000047, 0.0006382919999999986, 0.0006382909999999992, 0.0006382909999999992, 0.0006383189999999983, 0.0006383190000000052, 0.0006383329999999979, 0.0006383059999999982, 0.0006383060000000051, 0.0006383329999999979, 0.0006383189999999983, 0.0006383330000000048, 0.0006383469999999974, 0.0006382919999999986, 0.0006383200000000047, 0.0006383469999999974, 0.0006382919999999986, 0.0006383329999999979]</msg>
<status status="PASS" starttime="20201030 11:51:15.948" endtime="20201030 11:51:15.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.944" endtime="20201030 11:51:15.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.557" endtime="20201030 11:51:15.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.534" endtime="20201030 11:51:15.952"></status>
</kw>
<kw name="${n} = 47" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:15.954" endtime="20201030 11:51:15.973"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.953" endtime="20201030 11:51:15.974"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:15.982" endtime="20201030 11:51:16.027"></status>
</kw>
<msg timestamp="20201030 11:51:16.027" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:15.980" endtime="20201030 11:51:16.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.029" level="INFO">${RESULT} = {'cmd': 'list_ops 47', 'msg': ['list_ops 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.028" endtime="20201030 11:51:16.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.030" endtime="20201030 11:51:16.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.978" endtime="20201030 11:51:16.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.976" endtime="20201030 11:51:16.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.039" endtime="20201030 11:51:16.325"></status>
</kw>
<msg timestamp="20201030 11:51:16.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016598042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.038" endtime="20201030 11:51:16.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016598042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017261444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.330" endtime="20201030 11:51:16.337"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.338" endtime="20201030 11:51:16.339"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.035" endtime="20201030 11:51:16.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.034" endtime="20201030 11:51:16.340"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:16.344" level="INFO">${PHILIP_RES} = [{'diff': 0.0006634020000000004}, {'diff': 0.0006633610000000012}, {'diff': 0.0006633609999999977}, {'diff': 0.0006633609999999977}, {'diff': 0.0006633750000000008}, {'diff': 0.0006633470000000016}, {...</msg>
<status status="PASS" starttime="20201030 11:51:16.341" endtime="20201030 11:51:16.344"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.348" level="INFO">${RESULT} = {'diff': [0.0006634020000000004, 0.0006633610000000012, 0.0006633609999999977, 0.0006633609999999977, 0.0006633750000000008, 0.0006633470000000016, 0.0006633610000000012, 0.0006633749999999973, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:16.345" endtime="20201030 11:51:16.348"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.352" level="INFO">NAME: 47-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:16.351" endtime="20201030 11:51:16.352"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.354" level="INFO">VALUE: [0.0006634020000000004, 0.0006633610000000012, 0.0006633609999999977, 0.0006633609999999977, 0.0006633750000000008, 0.0006633470000000016, 0.0006633610000000012, 0.0006633749999999973, 0.0006633610000000012, 0.0006633470000000016, 0.0006633750000000008, 0.0006633749999999973, 0.000663416, 0.0006633480000000011, 0.0006634029999999999, 0.000663318999999999, 0.0006633469999999982, 0.0006632909999999999, 0.0006633610000000012, 0.0006633470000000016, 0.0006633469999999982, 0.0006633610000000012, 0.0006633339999999946, 0.0006633610000000012, 0.0006633060000000024, 0.0006633610000000012, 0.000663416, 0.0006633479999999942, 0.0006633610000000012, 0.0006633750000000008, 0.0006633620000000007, 0.0006633470000000016, 0.0006633469999999947, 0.0006633610000000012, 0.0006633610000000012, 0.0006633610000000012, 0.0006633470000000016, 0.0006633609999999943, 0.0006633750000000008, 0.0006633060000000024, 0.0006633610000000012, 0.0006634020000000004, 0.0006633610000000012, 0.0006633610000000012, 0.0006633750000000008, 0.0006633750000000008, 0.0006633750000000008, 0.0006633610000000012, 0.0006633750000000008, 0.0006633470000000016]</msg>
<status status="PASS" starttime="20201030 11:51:16.353" endtime="20201030 11:51:16.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.349" endtime="20201030 11:51:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.974" endtime="20201030 11:51:16.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:15.952" endtime="20201030 11:51:16.356"></status>
</kw>
<kw name="${n} = 48" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.359" endtime="20201030 11:51:16.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.357" endtime="20201030 11:51:16.379"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.387" endtime="20201030 11:51:16.432"></status>
</kw>
<msg timestamp="20201030 11:51:16.433" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.385" endtime="20201030 11:51:16.433"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.435" level="INFO">${RESULT} = {'cmd': 'list_ops 48', 'msg': ['list_ops 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.434" endtime="20201030 11:51:16.436"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.436" endtime="20201030 11:51:16.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.383" endtime="20201030 11:51:16.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.381" endtime="20201030 11:51:16.440"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.446" endtime="20201030 11:51:16.744"></status>
</kw>
<msg timestamp="20201030 11:51:16.747" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0165495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017238431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:16.445" endtime="20201030 11:51:16.747"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.755" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0165495, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017238431, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:16.748" endtime="20201030 11:51:16.755"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.756" endtime="20201030 11:51:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.442" endtime="20201030 11:51:16.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.440" endtime="20201030 11:51:16.759"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:16.763" level="INFO">${PHILIP_RES} = [{'diff': 0.0006889309999999968}, {'diff': 0.0006888060000000001}, {'diff': 0.0006888749999999985}, {'diff': 0.0006888890000000016}, {'diff': 0.0006889170000000007}, {'diff': 0.0006888329999999998}, {...</msg>
<status status="PASS" starttime="20201030 11:51:16.760" endtime="20201030 11:51:16.763"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:16.767" level="INFO">${RESULT} = {'diff': [0.0006889309999999968, 0.0006888060000000001, 0.0006888749999999985, 0.0006888890000000016, 0.0006889170000000007, 0.0006888329999999998, 0.0006888890000000016, 0.0006888889999999981, 0.0006...</msg>
<status status="PASS" starttime="20201030 11:51:16.764" endtime="20201030 11:51:16.767"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.771" level="INFO">NAME: 48-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:16.770" endtime="20201030 11:51:16.771"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.773" level="INFO">VALUE: [0.0006889309999999968, 0.0006888060000000001, 0.0006888749999999985, 0.0006888890000000016, 0.0006889170000000007, 0.0006888329999999998, 0.0006888890000000016, 0.0006888889999999981, 0.000688875000000002, 0.0006888469999999994, 0.0006889310000000003, 0.0006889030000000011, 0.0006889029999999977, 0.0006888470000000028, 0.0006888890000000016, 0.0006888879999999986, 0.0006888469999999994, 0.0006889300000000008, 0.0006888890000000016, 0.0006888889999999981, 0.0006888749999999985, 0.0006888749999999985, 0.0006888750000000055, 0.0006888749999999985, 0.0006888889999999981, 0.0006888750000000055, 0.0006888749999999985, 0.000688860999999999, 0.0006888889999999981, 0.000688889000000005, 0.0006888619999999984, 0.0006888889999999981, 0.0006888750000000055, 0.000688860999999999, 0.0006888329999999998, 0.0006888750000000055, 0.000688860999999999, 0.0006888889999999981, 0.0006888190000000002, 0.000688860999999999, 0.0006889029999999977, 0.000688860999999999, 0.000688889000000005, 0.0006888889999999981, 0.000688860999999999, 0.0006888749999999985, 0.000688860999999999, 0.0006888749999999985, 0.0006888889999999981, 0.000688860999999999]</msg>
<status status="PASS" starttime="20201030 11:51:16.772" endtime="20201030 11:51:16.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.767" endtime="20201030 11:51:16.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.379" endtime="20201030 11:51:16.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.357" endtime="20201030 11:51:16.776"></status>
</kw>
<kw name="${n} = 49" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:16.778" endtime="20201030 11:51:16.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.777" endtime="20201030 11:51:16.798"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.806" endtime="20201030 11:51:16.850"></status>
</kw>
<msg timestamp="20201030 11:51:16.850" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.804" endtime="20201030 11:51:16.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:16.852" level="INFO">${RESULT} = {'cmd': 'list_ops 49', 'msg': ['list_ops 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:16.851" endtime="20201030 11:51:16.853"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.853" endtime="20201030 11:51:16.855"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.802" endtime="20201030 11:51:16.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.800" endtime="20201030 11:51:16.856"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:16.862" endtime="20201030 11:51:17.148"></status>
</kw>
<msg timestamp="20201030 11:51:17.151" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016601639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:16.861" endtime="20201030 11:51:17.151"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.158" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016601639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017316556, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.152" endtime="20201030 11:51:17.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.160" endtime="20201030 11:51:17.161"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.858" endtime="20201030 11:51:17.162"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.857" endtime="20201030 11:51:17.162"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:17.166" level="INFO">${PHILIP_RES} = [{'diff': 0.0007149169999999989}, {'diff': 0.0007148750000000002}, {'diff': 0.000714832999999998}, {'diff': 0.0007148480000000006}, {'diff': 0.0007148750000000002}, {'diff': 0.0007148470000000011}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:17.163" endtime="20201030 11:51:17.166"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.171" level="INFO">${RESULT} = {'diff': [0.0007149169999999989, 0.0007148750000000002, 0.000714832999999998, 0.0007148480000000006, 0.0007148750000000002, 0.0007148470000000011, 0.0007148750000000002, 0.0007148610000000007, 0.00071...</msg>
<status status="PASS" starttime="20201030 11:51:17.167" endtime="20201030 11:51:17.171"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.175" level="INFO">NAME: 49-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:17.174" endtime="20201030 11:51:17.175"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.177" level="INFO">VALUE: [0.0007149169999999989, 0.0007148750000000002, 0.000714832999999998, 0.0007148480000000006, 0.0007148750000000002, 0.0007148470000000011, 0.0007148750000000002, 0.0007148610000000007, 0.0007148750000000002, 0.0007148610000000007, 0.0007148469999999976, 0.0007148610000000007, 0.0007148610000000007, 0.0007148750000000002, 0.0007148750000000002, 0.0007148610000000007, 0.0007148610000000007, 0.0007148610000000007, 0.0007149030000000028, 0.0007149440000000021, 0.0007148749999999968, 0.000714833000000005, 0.0007148889999999963, 0.0007148620000000036, 0.0007148469999999976, 0.0007148749999999968, 0.0007148750000000037, 0.0007148609999999972, 0.0007148749999999968, 0.0007148470000000046, 0.0007148469999999976, 0.0007148470000000046, 0.0007148609999999972, 0.0007148469999999976, 0.0007148610000000041, 0.0007148049999999989, 0.0007148469999999976, 0.000714848000000004, 0.0007148609999999972, 0.0007148890000000033, 0.0007148750000000037, 0.000714832999999998, 0.0007148470000000046, 0.0007149170000000024, 0.0007148749999999968, 0.0007148610000000041, 0.0007148609999999972, 0.0007148610000000041, 0.0007148610000000041, 0.0007148749999999968]</msg>
<status status="PASS" starttime="20201030 11:51:17.176" endtime="20201030 11:51:17.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.172" endtime="20201030 11:51:17.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.799" endtime="20201030 11:51:17.179"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:16.776" endtime="20201030 11:51:17.179"></status>
</kw>
<kw name="${n} = 50" type="foritem">
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:17.182" endtime="20201030 11:51:17.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.180" endtime="20201030 11:51:17.202"></status>
</kw>
<kw name="Set ${n} Timers">
<doc>Run the list operations benchmark</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>DutDeviceIf.List Operation</arg>
<arg>${count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="List Operation" library="DutDeviceIf">
<doc>Set N timers</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.210" endtime="20201030 11:51:17.255"></status>
</kw>
<msg timestamp="20201030 11:51:17.256" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.208" endtime="20201030 11:51:17.256"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.258" level="INFO">${RESULT} = {'cmd': 'list_ops 50', 'msg': ['list_ops 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:17.257" endtime="20201030 11:51:17.258"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.259" endtime="20201030 11:51:17.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.205" endtime="20201030 11:51:17.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.203" endtime="20201030 11:51:17.262"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.268" endtime="20201030 11:51:17.568"></status>
</kw>
<msg timestamp="20201030 11:51:17.571" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016619597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017360958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.267" endtime="20201030 11:51:17.571"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.579" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.016619597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.017360958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:17.572" endtime="20201030 11:51:17.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:17.580" endtime="20201030 11:51:17.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.264" endtime="20201030 11:51:17.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.262" endtime="20201030 11:51:17.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${PHILIP_RES}</var>
</assign>
<msg timestamp="20201030 11:51:17.586" level="INFO">${PHILIP_RES} = [{'diff': 0.0007413609999999994}, {'diff': 0.0007413609999999994}, {'diff': 0.0007413469999999998}, {'diff': 0.0007413189999999972}, {'diff': 0.0007413339999999997}, {'diff': 0.0007413200000000002}, {...</msg>
<status status="PASS" starttime="20201030 11:51:17.583" endtime="20201030 11:51:17.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${PHILIP_RES}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:17.590" level="INFO">${RESULT} = {'diff': [0.0007413609999999994, 0.0007413609999999994, 0.0007413469999999998, 0.0007413189999999972, 0.0007413339999999997, 0.0007413200000000002, 0.0007413190000000007, 0.0007413330000000003, 0.0007...</msg>
<status status="PASS" starttime="20201030 11:51:17.587" endtime="20201030 11:51:17.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>${count}-timer-trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.594" level="INFO">NAME: 50-timer-trace</msg>
<status status="PASS" starttime="20201030 11:51:17.593" endtime="20201030 11:51:17.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.597" level="INFO">VALUE: [0.0007413609999999994, 0.0007413609999999994, 0.0007413469999999998, 0.0007413189999999972, 0.0007413339999999997, 0.0007413200000000002, 0.0007413190000000007, 0.0007413330000000003, 0.0007413339999999997, 0.0007413469999999998, 0.0007413190000000007, 0.0007413339999999997, 0.0007413330000000003, 0.0007413330000000003, 0.0007413339999999997, 0.0007413339999999997, 0.0007413190000000007, 0.0007413329999999968, 0.0007413480000000028, 0.0007413469999999964, 0.0007413329999999968, 0.0007413340000000032, 0.0007412499999999989, 0.0007413190000000042, 0.0007413470000000033, 0.0007413339999999963, 0.0007413330000000037, 0.0007413189999999972, 0.0007413340000000032, 0.0007413340000000032, 0.0007412639999999984, 0.0007413470000000033, 0.0007413199999999967, 0.0007413340000000032, 0.0007413470000000033, 0.0007413059999999971, 0.0007413200000000036, 0.0007413189999999972, 0.0007413469999999964, 0.0007413480000000028, 0.0007413469999999964, 0.0007413190000000042, 0.0007413199999999967, 0.0007413750000000024, 0.0007413750000000024, 0.0007413339999999963, 0.0007413480000000028, 0.0007413470000000033, 0.0007413469999999964, 0.0007412920000000045]</msg>
<status status="PASS" starttime="20201030 11:51:17.595" endtime="20201030 11:51:17.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.591" endtime="20201030 11:51:17.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.202" endtime="20201030 11:51:17.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.180" endtime="20201030 11:51:17.599"></status>
</kw>
<status status="PASS" starttime="20201030 11:50:57.878" endtime="20201030 11:51:17.599"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
<tag>dev</tag>
</tags>
<status status="PASS" starttime="20201030 11:50:53.655" endtime="20201030 11:51:17.600" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:50:06.308" endtime="20201030 11:51:17.610"></status>
</suite>
<suite id="s1-s3" name="Sleep Accuracy" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/02__sleep_accuracy.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:51:17.685" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:51:17.693" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:51:18.764" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:51:17.683" endtime="20201030 11:51:18.764"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:51:18.767" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:51:18.765" endtime="20201030 11:51:18.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.682" endtime="20201030 11:51:18.768"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:18.770" endtime="20201030 11:51:18.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.768" endtime="20201030 11:51:18.958"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:18.985" endtime="20201030 11:51:22.015"></status>
</kw>
<msg timestamp="20201030 11:51:22.016" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:18.982" endtime="20201030 11:51:22.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.021" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.018" endtime="20201030 11:51:22.021"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:22.027" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:22.023" endtime="20201030 11:51:22.028"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:18.976" endtime="20201030 11:51:22.029"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:18.972" endtime="20201030 11:51:22.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.969" endtime="20201030 11:51:22.031"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:22.040" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:22.039" endtime="20201030 11:51:22.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.033" endtime="20201030 11:51:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.967" endtime="20201030 11:51:22.042"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.966" endtime="20201030 11:51:22.042"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.044" endtime="20201030 11:51:22.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.963" endtime="20201030 11:51:22.048"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.050" endtime="20201030 11:51:22.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:18.960" endtime="20201030 11:51:22.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:17.680" endtime="20201030 11:51:22.054"></status>
</kw>
<test id="s1-s3-t1" name="Measure TIMER_SET Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:22.061" endtime="20201030 11:51:22.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.059" endtime="20201030 11:51:22.081"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:22.095" endtime="20201030 11:51:25.122"></status>
</kw>
<msg timestamp="20201030 11:51:25.123" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:22.093" endtime="20201030 11:51:25.124"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.128" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.125" endtime="20201030 11:51:25.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.134" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:51:25.131" endtime="20201030 11:51:25.135"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:22.091" endtime="20201030 11:51:25.137"></status>
</kw>
<status status="FAIL" starttime="20201030 11:51:22.088" endtime="20201030 11:51:25.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.087" endtime="20201030 11:51:25.138"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:51:25.146" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:51:25.144" endtime="20201030 11:51:25.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.140" endtime="20201030 11:51:25.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.086" endtime="20201030 11:51:25.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.086" endtime="20201030 11:51:25.148"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.150" endtime="20201030 11:51:25.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.084" endtime="20201030 11:51:25.154"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.083" endtime="20201030 11:51:25.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:22.058" endtime="20201030 11:51:25.156"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.181" endtime="20201030 11:51:25.199"></status>
</kw>
<msg timestamp="20201030 11:51:25.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.177" endtime="20201030 11:51:25.200"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.205" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_set 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.202" endtime="20201030 11:51:25.205"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.207" endtime="20201030 11:51:25.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.169" endtime="20201030 11:51:25.212"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.164" endtime="20201030 11:51:25.213"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.226" endtime="20201030 11:51:25.521"></status>
</kw>
<msg timestamp="20201030 11:51:25.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111103333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111105639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.223" endtime="20201030 11:51:25.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.111103333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.111105639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.525" endtime="20201030 11:51:25.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.534" endtime="20201030 11:51:25.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.217" endtime="20201030 11:51:25.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.214" endtime="20201030 11:51:25.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.541" level="INFO">${RESULT} = [{'diff': 2.3059999998409353e-06}, {'diff': 3.055999999723724e-06}, {'diff': 2.6799999996995894e-06}, {'diff': 2.6950000000525165e-06}, {'diff': 2.3339999999372196e-06}, {'diff': 2.681000000226419e-06...</msg>
<status status="PASS" starttime="20201030 11:51:25.537" endtime="20201030 11:51:25.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.545" level="INFO">${ACCURACY} = {'diff': [2.3059999998409353e-06, 3.055999999723724e-06, 2.6799999996995894e-06, 2.6950000000525165e-06, 2.3339999999372196e-06, 2.681000000226419e-06, 2.2920000000148377e-06, 2.3190000000283817e-06, ...</msg>
<status status="PASS" starttime="20201030 11:51:25.541" endtime="20201030 11:51:25.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.550" level="INFO">NAME: accuracy-TIMER_SET-1-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.549" endtime="20201030 11:51:25.550"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.552" level="INFO">VALUE: [2.3059999998409353e-06, 3.055999999723724e-06, 2.6799999996995894e-06, 2.6950000000525165e-06, 2.3339999999372196e-06, 2.681000000226419e-06, 2.2920000000148377e-06, 2.3190000000283817e-06, 2.6809999997823297e-06, 3.0689999999111706e-06, 2.681000000226419e-06, 2.693999999969776e-06, 2.319999999667033e-06, 2.693999999969776e-06, 2.638999999859948e-06, 2.7079999997958737e-06, 2.6530000001301346e-06, 3.013000000162691e-06, 2.6950000000525165e-06, 2.3059999998409353e-06, 2.693999999969776e-06, 2.708000000239963e-06, 2.2909999999320974e-06, 2.6799999996995894e-06, 2.6800000001436786e-06, 3.0830000001813573e-06, 2.708999999878614e-06, 2.6940000004138653e-06, 2.3190000000283817e-06, 3.0690000003552598e-06, 2.3190000000283817e-06, 3.0560000001678134e-06, 2.6950000000525165e-06, 2.3059999998409353e-06, 2.7090000003227033e-06, 3.055000000085073e-06, 2.3059999998409353e-06, 3.069999999993911e-06, 2.6940000004138653e-06, 2.693999999969776e-06, 2.3059999998409353e-06, 2.7079999997958737e-06, 2.304999999758195e-06, 2.6809999997823297e-06, 2.250000000092456e-06, 2.6949999996084273e-06, 2.666999999956232e-06, 3.069999999993911e-06, 2.708000000239963e-06, 2.3189999995842925e-06]</msg>
<status status="PASS" starttime="20201030 11:51:25.551" endtime="20201030 11:51:25.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.545" endtime="20201030 11:51:25.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.557" endtime="20201030 11:51:25.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.555" endtime="20201030 11:51:25.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.554" endtime="20201030 11:51:25.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.160" endtime="20201030 11:51:25.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.159" endtime="20201030 11:51:25.578"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.586" endtime="20201030 11:51:25.600"></status>
</kw>
<msg timestamp="20201030 11:51:25.601" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.585" endtime="20201030 11:51:25.601"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.603" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_set 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.602" endtime="20201030 11:51:25.603"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.604" endtime="20201030 11:51:25.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.582" endtime="20201030 11:51:25.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.580" endtime="20201030 11:51:25.607"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.614" endtime="20201030 11:51:25.896"></status>
</kw>
<msg timestamp="20201030 11:51:25.900" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.612" endtime="20201030 11:51:25.900"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.908" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020035083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020038931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:25.901" endtime="20201030 11:51:25.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.909" endtime="20201030 11:51:25.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.609" endtime="20201030 11:51:25.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.607" endtime="20201030 11:51:25.912"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:25.915" level="INFO">${RESULT} = [{'diff': 3.84800000000074e-06}, {'diff': 3.458000000001321e-06}, {'diff': 3.4589999999973253e-06}, {'diff': 3.486000000000461e-06}, {'diff': 4.208000000002071e-06}, {'diff': 3.415999999999142e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:25.912" endtime="20201030 11:51:25.916"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:25.921" level="INFO">${ACCURACY} = {'diff': [3.84800000000074e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.486000000000461e-06, 4.208000000002071e-06, 3.415999999999142e-06, 3.4590000000007948e-06, 3.832999999998227e-06, 4.235...</msg>
<status status="PASS" starttime="20201030 11:51:25.916" endtime="20201030 11:51:25.921"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.925" level="INFO">NAME: accuracy-TIMER_SET-2-philip</msg>
<status status="PASS" starttime="20201030 11:51:25.924" endtime="20201030 11:51:25.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.927" level="INFO">VALUE: [3.84800000000074e-06, 3.458000000001321e-06, 3.4589999999973253e-06, 3.486000000000461e-06, 4.208000000002071e-06, 3.415999999999142e-06, 3.4590000000007948e-06, 3.832999999998227e-06, 4.2359999999977416e-06, 3.846999999997797e-06, 3.4439999999982818e-06, 3.832999999998227e-06, 3.819000000002126e-06, 4.222000000001641e-06, 3.4169999999986156e-06, 4.236000000001211e-06, 3.4160000000026114e-06, 3.4579999999978517e-06, 3.819000000002126e-06, 3.833000000001696e-06, 3.84800000000074e-06, 4.208999999998075e-06, 4.1949999999985055e-06, 3.4589999999973253e-06, 3.458000000001321e-06, 4.222000000001641e-06, 4.222000000001641e-06, 3.5139999999996008e-06, 4.236000000001211e-06, 4.207999999998602e-06, 4.222000000001641e-06, 4.152000000000322e-06, 3.861000000000836e-06, 3.818999999998657e-06, 3.847000000001266e-06, 3.832999999998227e-06, 4.209000000001545e-06, 3.111000000000086e-06, 3.4439999999982818e-06, 4.264000000000351e-06, 3.8200000000016e-06, 3.458000000001321e-06, 3.472000000000891e-06, 3.445000000001225e-06, 3.8339999999977e-06, 4.208999999998075e-06, 3.833000000001696e-06, 3.4440000000017512e-06, 4.207999999998602e-06, 3.4579999999978517e-06]</msg>
<status status="PASS" starttime="20201030 11:51:25.926" endtime="20201030 11:51:25.928"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.921" endtime="20201030 11:51:25.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:25.932" endtime="20201030 11:51:25.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.930" endtime="20201030 11:51:25.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.929" endtime="20201030 11:51:25.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.579" endtime="20201030 11:51:25.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.578" endtime="20201030 11:51:25.953"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.961" endtime="20201030 11:51:25.976"></status>
</kw>
<msg timestamp="20201030 11:51:25.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.960" endtime="20201030 11:51:25.977"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:25.979" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_set 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:25.978" endtime="20201030 11:51:25.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.980" endtime="20201030 11:51:25.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.957" endtime="20201030 11:51:25.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.955" endtime="20201030 11:51:25.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:25.989" endtime="20201030 11:51:26.277"></status>
</kw>
<msg timestamp="20201030 11:51:26.280" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01935175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:25.988" endtime="20201030 11:51:26.280"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.288" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019347208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01935175, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:26.281" endtime="20201030 11:51:26.289"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.289" endtime="20201030 11:51:26.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.985" endtime="20201030 11:51:26.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.984" endtime="20201030 11:51:26.292"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.296" level="INFO">${RESULT} = [{'diff': 4.541999999999741e-06}, {'diff': 4.611000000001586e-06}, {'diff': 4.59800000000149e-06}, {'diff': 4.59799999999802e-06}, {'diff': 4.610999999998117e-06}, {'diff': 4.986000000001961e-06}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:26.293" endtime="20201030 11:51:26.296"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.300" level="INFO">${ACCURACY} = {'diff': [4.541999999999741e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.59799999999802e-06, 4.610999999998117e-06, 4.986000000001961e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.610999...</msg>
<status status="PASS" starttime="20201030 11:51:26.297" endtime="20201030 11:51:26.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.304" level="INFO">NAME: accuracy-TIMER_SET-3-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.303" endtime="20201030 11:51:26.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.307" level="INFO">VALUE: [4.541999999999741e-06, 4.611000000001586e-06, 4.59800000000149e-06, 4.59799999999802e-06, 4.610999999998117e-06, 4.986000000001961e-06, 4.209000000001545e-06, 4.179999999999462e-06, 4.610999999998117e-06, 5.3339999999992005e-06, 4.59799999999802e-06, 4.651999999997353e-06, 4.582999999998977e-06, 4.527000000000697e-06, 4.611000000001586e-06, 4.958000000002821e-06, 4.596999999998547e-06, 4.59800000000149e-06, 4.972000000002391e-06, 4.582999999998977e-06, 5.361000000002336e-06, 4.596999999998547e-06, 4.985999999998492e-06, 4.597000000002016e-06, 4.680999999999436e-06, 4.597000000002016e-06, 4.986000000001961e-06, 4.597000000002016e-06, 4.597000000002016e-06, 4.930999999999686e-06, 4.957999999999352e-06, 4.59799999999802e-06, 4.971999999998922e-06, 4.166999999999366e-06, 4.611000000001586e-06, 4.208999999998075e-06, 4.957999999999352e-06, 5.3339999999992005e-06, 4.958000000002821e-06, 4.5839999999984504e-06, 4.971999999998922e-06, 4.59799999999802e-06, 4.582999999998977e-06, 4.610999999998117e-06, 4.208000000002071e-06, 4.957999999999352e-06, 4.985999999998492e-06, 4.195000000001975e-06, 4.291999999999491e-06, 4.597000000002016e-06]</msg>
<status status="PASS" starttime="20201030 11:51:26.305" endtime="20201030 11:51:26.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.301" endtime="20201030 11:51:26.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.311" endtime="20201030 11:51:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.310" endtime="20201030 11:51:26.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.309" endtime="20201030 11:51:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.953" endtime="20201030 11:51:26.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.953" endtime="20201030 11:51:26.332"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.341" endtime="20201030 11:51:26.355"></status>
</kw>
<msg timestamp="20201030 11:51:26.355" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.339" endtime="20201030 11:51:26.355"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.358" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_set 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.356" endtime="20201030 11:51:26.358"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.359" endtime="20201030 11:51:26.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.336" endtime="20201030 11:51:26.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.334" endtime="20201030 11:51:26.362"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.368" endtime="20201030 11:51:26.653"></status>
</kw>
<msg timestamp="20201030 11:51:26.656" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.367" endtime="20201030 11:51:26.657"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.665" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020112403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020117764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.657" endtime="20201030 11:51:26.665"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.666" endtime="20201030 11:51:26.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.364" endtime="20201030 11:51:26.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.362" endtime="20201030 11:51:26.668"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:26.672" level="INFO">${RESULT} = [{'diff': 5.360999999998867e-06}, {'diff': 5.347000000002766e-06}, {'diff': 5.735999999999242e-06}, {'diff': 6.165999999998423e-06}, {'diff': 5.346999999999297e-06}, {'diff': 5.735999999999242e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:26.669" endtime="20201030 11:51:26.673"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:26.676" level="INFO">${ACCURACY} = {'diff': [5.360999999998867e-06, 5.347000000002766e-06, 5.735999999999242e-06, 6.165999999998423e-06, 5.346999999999297e-06, 5.735999999999242e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.3619...</msg>
<status status="PASS" starttime="20201030 11:51:26.673" endtime="20201030 11:51:26.677"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.681" level="INFO">NAME: accuracy-TIMER_SET-4-philip</msg>
<status status="PASS" starttime="20201030 11:51:26.680" endtime="20201030 11:51:26.681"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.683" level="INFO">VALUE: [5.360999999998867e-06, 5.347000000002766e-06, 5.735999999999242e-06, 6.165999999998423e-06, 5.346999999999297e-06, 5.735999999999242e-06, 5.332999999999727e-06, 5.360999999998867e-06, 5.36199999999834e-06, 5.319000000000157e-06, 5.417000000000616e-06, 6.124999999999187e-06, 6.139000000002226e-06, 5.721999999999672e-06, 6.083000000000477e-06, 5.361000000002336e-06, 6.097000000000047e-06, 6.110999999999617e-06, 6.110999999999617e-06, 5.735999999999242e-06, 5.749999999998812e-06, 5.374999999998437e-06, 5.749999999998812e-06, 5.347000000002766e-06, 6.110999999999617e-06, 5.360999999998867e-06, 5.346999999999297e-06, 5.346999999999297e-06, 5.735999999999242e-06, 6.124999999999187e-06, 6.125000000002656e-06, 5.36200000000181e-06, 5.736000000002711e-06, 5.374999999998437e-06, 5.735999999999242e-06, 5.736000000002711e-06, 5.7639999999983815e-06, 5.7779999999979514e-06, 6.097000000000047e-06, 6.111000000003086e-06, 5.374999999998437e-06, 6.124999999999187e-06, 5.735999999999242e-06, 5.721999999999672e-06, 5.7639999999983815e-06, 5.737000000002185e-06, 6.110999999999617e-06, 5.749999999998812e-06, 6.083000000000477e-06, 5.361000000002336e-06]</msg>
<status status="PASS" starttime="20201030 11:51:26.682" endtime="20201030 11:51:26.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.677" endtime="20201030 11:51:26.685"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:26.689" endtime="20201030 11:51:26.708"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.687" endtime="20201030 11:51:26.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.686" endtime="20201030 11:51:26.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.333" endtime="20201030 11:51:26.709"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.332" endtime="20201030 11:51:26.709"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.718" endtime="20201030 11:51:26.734"></status>
</kw>
<msg timestamp="20201030 11:51:26.734" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.716" endtime="20201030 11:51:26.734"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:26.736" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_set 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:26.735" endtime="20201030 11:51:26.737"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.738" endtime="20201030 11:51:26.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.714" endtime="20201030 11:51:26.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.712" endtime="20201030 11:51:26.740"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:26.746" endtime="20201030 11:51:27.030"></status>
</kw>
<msg timestamp="20201030 11:51:27.033" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:26.745" endtime="20201030 11:51:27.033"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.041" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019833903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019841153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.034" endtime="20201030 11:51:27.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.042" endtime="20201030 11:51:27.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.742" endtime="20201030 11:51:27.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.741" endtime="20201030 11:51:27.045"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.049" level="INFO">${RESULT} = [{'diff': 7.250000000000312e-06}, {'diff': 6.5279999999987015e-06}, {'diff': 6.570000000000881e-06}, {'diff': 6.528000000002171e-06}, {'diff': 6.500000000003031e-06}, {'diff': 6.485999999999992e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:51:27.045" endtime="20201030 11:51:27.049"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.053" level="INFO">${ACCURACY} = {'diff': [7.250000000000312e-06, 6.5279999999987015e-06, 6.570000000000881e-06, 6.528000000002171e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.888999999999507e-06, 6.888999999999507e-06, 6.500...</msg>
<status status="PASS" starttime="20201030 11:51:27.050" endtime="20201030 11:51:27.054"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.058" level="INFO">NAME: accuracy-TIMER_SET-5-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.057" endtime="20201030 11:51:27.058"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.060" level="INFO">VALUE: [7.250000000000312e-06, 6.5279999999987015e-06, 6.570000000000881e-06, 6.528000000002171e-06, 6.500000000003031e-06, 6.485999999999992e-06, 6.888999999999507e-06, 6.888999999999507e-06, 6.500000000003031e-06, 6.888999999999507e-06, 7.263999999999882e-06, 6.861000000000367e-06, 6.499999999999562e-06, 7.263999999999882e-06, 6.888999999999507e-06, 6.806000000001561e-06, 6.124999999999187e-06, 6.861000000000367e-06, 6.125000000002656e-06, 6.915999999999173e-06, 6.903000000002546e-06, 6.499999999999562e-06, 6.499999999999562e-06, 6.888999999999507e-06, 6.499999999999562e-06, 7.263999999999882e-06, 6.9169999999986465e-06, 6.499999999999562e-06, 6.485999999999992e-06, 6.888999999999507e-06, 6.5279999999987015e-06, 6.888999999999507e-06, 7.263999999999882e-06, 6.110999999999617e-06, 6.874999999999937e-06, 6.874999999999937e-06, 6.874999999999937e-06, 6.499999999999562e-06, 6.514000000002601e-06, 6.5279999999987015e-06, 6.860999999996897e-06, 6.499999999999562e-06, 6.804999999998618e-06, 6.485999999999992e-06, 7.249999999996842e-06, 6.541000000002267e-06, 6.485999999999992e-06, 6.499999999999562e-06, 7.250000000000312e-06, 6.874999999999937e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.059" endtime="20201030 11:51:27.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.054" endtime="20201030 11:51:27.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.065" endtime="20201030 11:51:27.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.063" endtime="20201030 11:51:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.062" endtime="20201030 11:51:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.710" endtime="20201030 11:51:27.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:26.710" endtime="20201030 11:51:27.086"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.100" endtime="20201030 11:51:27.115"></status>
</kw>
<msg timestamp="20201030 11:51:27.115" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.098" endtime="20201030 11:51:27.115"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.118" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_set 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.116" endtime="20201030 11:51:27.118"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.119" endtime="20201030 11:51:27.120"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.096" endtime="20201030 11:51:27.121"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.088" endtime="20201030 11:51:27.121"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.128" endtime="20201030 11:51:27.411"></status>
</kw>
<msg timestamp="20201030 11:51:27.415" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025295944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.126" endtime="20201030 11:51:27.415"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.423" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.025287944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.025295944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.416" endtime="20201030 11:51:27.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.424" endtime="20201030 11:51:27.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.124" endtime="20201030 11:51:27.426"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.122" endtime="20201030 11:51:27.427"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.431" level="INFO">${RESULT} = [{'diff': 8.000000000001062e-06}, {'diff': 8.069999999998911e-06}, {'diff': 8.013999999997162e-06}, {'diff': 8.013999999997162e-06}, {'diff': 8.014000000000632e-06}, {'diff': 8.028000000000202e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.427" endtime="20201030 11:51:27.431"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.435" level="INFO">${ACCURACY} = {'diff': [8.000000000001062e-06, 8.069999999998911e-06, 8.013999999997162e-06, 8.013999999997162e-06, 8.014000000000632e-06, 8.028000000000202e-06, 7.639000000000257e-06, 7.318999999998688e-06, 8.0280...</msg>
<status status="PASS" starttime="20201030 11:51:27.431" endtime="20201030 11:51:27.435"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.439" level="INFO">NAME: accuracy-TIMER_SET-6-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.438" endtime="20201030 11:51:27.439"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.441" level="INFO">VALUE: [8.000000000001062e-06, 8.069999999998911e-06, 8.013999999997162e-06, 8.013999999997162e-06, 8.014000000000632e-06, 8.028000000000202e-06, 7.639000000000257e-06, 7.318999999998688e-06, 8.028000000000202e-06, 7.263000000000408e-06, 7.582999999998508e-06, 7.276999999999978e-06, 7.639000000000257e-06, 7.263999999999882e-06, 7.652999999999827e-06, 8.014000000000632e-06, 7.652999999999827e-06, 8.014000000000632e-06, 7.652999999999827e-06, 8.013999999997162e-06, 7.639000000000257e-06, 7.651999999996884e-06, 7.263999999999882e-06, 7.625000000000687e-06, 8.014000000000632e-06, 7.652999999999827e-06, 8.014000000000632e-06, 7.250000000000312e-06, 7.250000000000312e-06, 7.263999999999882e-06, 7.2779999999994516e-06, 7.625000000000687e-06, 7.2779999999994516e-06, 7.278000000002921e-06, 7.2370000000002155e-06, 7.665999999999923e-06, 8.014000000000632e-06, 7.235999999997272e-06, 7.959000000001826e-06, 7.250000000000312e-06, 7.625000000000687e-06, 7.651999999996884e-06, 8.014000000000632e-06, 7.250000000000312e-06, 7.263999999999882e-06, 8.041000000000298e-06, 7.304999999999118e-06, 8.000000000001062e-06, 8.028000000000202e-06, 7.639000000000257e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.440" endtime="20201030 11:51:27.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.435" endtime="20201030 11:51:27.442"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.446" endtime="20201030 11:51:27.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.444" endtime="20201030 11:51:27.466"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.443" endtime="20201030 11:51:27.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.087" endtime="20201030 11:51:27.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.086" endtime="20201030 11:51:27.467"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.476" endtime="20201030 11:51:27.491"></status>
</kw>
<msg timestamp="20201030 11:51:27.492" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.474" endtime="20201030 11:51:27.492"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.494" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_set 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.493" endtime="20201030 11:51:27.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.495" endtime="20201030 11:51:27.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.472" endtime="20201030 11:51:27.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.469" endtime="20201030 11:51:27.498"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.504" endtime="20201030 11:51:27.789"></status>
</kw>
<msg timestamp="20201030 11:51:27.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.503" endtime="20201030 11:51:27.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.800" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020606028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020614806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.793" endtime="20201030 11:51:27.800"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.801" endtime="20201030 11:51:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.500" endtime="20201030 11:51:27.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.499" endtime="20201030 11:51:27.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:27.808" level="INFO">${RESULT} = [{'diff': 8.778000000000952e-06}, {'diff': 8.388999999997537e-06}, {'diff': 8.403000000000577e-06}, {'diff': 8.402000000001103e-06}, {'diff': 8.403000000000577e-06}, {'diff': 8.458999999998856e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:27.805" endtime="20201030 11:51:27.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:27.812" level="INFO">${ACCURACY} = {'diff': [8.778000000000952e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.402000000001103e-06, 8.403000000000577e-06, 8.458999999998856e-06, 9.167000000000897e-06, 9.179999999997523e-06, 8.4160...</msg>
<status status="PASS" starttime="20201030 11:51:27.809" endtime="20201030 11:51:27.812"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.816" level="INFO">NAME: accuracy-TIMER_SET-7-philip</msg>
<status status="PASS" starttime="20201030 11:51:27.815" endtime="20201030 11:51:27.817"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.819" level="INFO">VALUE: [8.778000000000952e-06, 8.388999999997537e-06, 8.403000000000577e-06, 8.402000000001103e-06, 8.403000000000577e-06, 8.458999999998856e-06, 9.167000000000897e-06, 9.179999999997523e-06, 8.416000000000673e-06, 8.86200000000184e-06, 8.402999999997107e-06, 8.389000000001007e-06, 8.805000000000618e-06, 8.721999999999203e-06, 8.360999999998397e-06, 8.778000000000952e-06, 8.444999999999286e-06, 9.166000000001423e-06, 9.181000000000467e-06, 8.375000000001437e-06, 9.166999999997427e-06, 8.458000000002852e-06, 8.764000000001382e-06, 8.791999999997052e-06, 9.167000000000897e-06, 8.777000000001478e-06, 8.403000000000577e-06, 8.403000000000577e-06, 8.750000000001812e-06, 9.166999999997427e-06, 8.388999999997537e-06, 9.167000000000897e-06, 9.151999999998384e-06, 8.417000000000147e-06, 8.430999999999716e-06, 8.403000000000577e-06, 8.792000000000522e-06, 8.777999999997482e-06, 8.749999999998342e-06, 8.417000000000147e-06, 9.167000000000897e-06, 8.402000000001103e-06, 8.388999999997537e-06, 8.389000000001007e-06, 8.792000000000522e-06, 8.417000000000147e-06, 8.389000000001007e-06, 8.431000000003186e-06, 9.152999999997857e-06, 8.778000000000952e-06]</msg>
<status status="PASS" starttime="20201030 11:51:27.818" endtime="20201030 11:51:27.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.813" endtime="20201030 11:51:27.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:27.825" endtime="20201030 11:51:27.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.823" endtime="20201030 11:51:27.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.822" endtime="20201030 11:51:27.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.468" endtime="20201030 11:51:27.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.467" endtime="20201030 11:51:27.845"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.854" endtime="20201030 11:51:27.869"></status>
</kw>
<msg timestamp="20201030 11:51:27.869" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.852" endtime="20201030 11:51:27.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:27.872" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_set 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:27.870" endtime="20201030 11:51:27.872"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.873" endtime="20201030 11:51:27.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.850" endtime="20201030 11:51:27.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.848" endtime="20201030 11:51:27.875"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:27.882" endtime="20201030 11:51:28.167"></status>
</kw>
<msg timestamp="20201030 11:51:28.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:27.880" endtime="20201030 11:51:28.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019141403, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019151333, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.171" endtime="20201030 11:51:28.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.179" endtime="20201030 11:51:28.180"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.878" endtime="20201030 11:51:28.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.876" endtime="20201030 11:51:28.181"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.185" level="INFO">${RESULT} = [{'diff': 9.929999999998274e-06}, {'diff': 9.570000000000412e-06}, {'diff': 9.514000000002132e-06}, {'diff': 9.917000000001647e-06}, {'diff': 9.931000000001217e-06}, {'diff': 9.915999999998704e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:51:28.182" endtime="20201030 11:51:28.185"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.190" level="INFO">${ACCURACY} = {'diff': [9.929999999998274e-06, 9.570000000000412e-06, 9.514000000002132e-06, 9.917000000001647e-06, 9.931000000001217e-06, 9.915999999998704e-06, 9.555999999997372e-06, 9.625000000002687e-06, 9.1950...</msg>
<status status="PASS" starttime="20201030 11:51:28.186" endtime="20201030 11:51:28.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.195" level="INFO">NAME: accuracy-TIMER_SET-8-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.194" endtime="20201030 11:51:28.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.197" level="INFO">VALUE: [9.929999999998274e-06, 9.570000000000412e-06, 9.514000000002132e-06, 9.917000000001647e-06, 9.931000000001217e-06, 9.915999999998704e-06, 9.555999999997372e-06, 9.625000000002687e-06, 9.195000000000036e-06, 9.556000000000842e-06, 9.540999999998329e-06, 1.0319999999997692e-05, 9.874999999999468e-06, 9.166000000001423e-06, 9.917000000001647e-06, 9.930000000001743e-06, 9.930999999997747e-06, 9.931000000001217e-06, 9.554999999997899e-06, 1.0305999999998122e-05, 9.540999999998329e-06, 9.541000000001798e-06, 1.0320000000001162e-05, 9.554999999997899e-06, 9.583000000000508e-06, 9.569000000000938e-06, 1.0361999999999871e-05, 9.930999999997747e-06, 9.528000000001702e-06, 1.0319999999997692e-05, 9.167000000000897e-06, 9.930999999997747e-06, 9.499999999999093e-06, 9.931000000001217e-06, 9.930999999997747e-06, 9.986000000000023e-06, 9.499999999999093e-06, 9.917000000001647e-06, 9.931000000001217e-06, 9.570000000000412e-06, 9.929999999998274e-06, 9.929999999998274e-06, 1.0388999999999537e-05, 9.527999999998232e-06, 1.0291999999998552e-05, 1.0290999999999079e-05, 9.540999999998329e-06, 9.986000000000023e-06, 1.0334000000000731e-05, 1.0319000000001688e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.196" endtime="20201030 11:51:28.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.191" endtime="20201030 11:51:28.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.202" endtime="20201030 11:51:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.201" endtime="20201030 11:51:28.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.200" endtime="20201030 11:51:28.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.846" endtime="20201030 11:51:28.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:27.846" endtime="20201030 11:51:28.223"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.233" endtime="20201030 11:51:28.247"></status>
</kw>
<msg timestamp="20201030 11:51:28.247" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.231" endtime="20201030 11:51:28.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_set 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.248" endtime="20201030 11:51:28.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.251" endtime="20201030 11:51:28.252"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.228" endtime="20201030 11:51:28.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.226" endtime="20201030 11:51:28.253"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.260" endtime="20201030 11:51:28.546"></status>
</kw>
<msg timestamp="20201030 11:51:28.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.258" endtime="20201030 11:51:28.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020618944, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020629625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:28.550" endtime="20201030 11:51:28.557"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.558" endtime="20201030 11:51:28.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.256" endtime="20201030 11:51:28.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.254" endtime="20201030 11:51:28.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.565" level="INFO">${RESULT} = [{'diff': 1.0680999999998497e-05}, {'diff': 1.0638999999999788e-05}, {'diff': 1.1082999999998538e-05}, {'diff': 1.0722000000001203e-05}, {'diff': 1.1111000000001148e-05}, {'diff': 1.1041999999999302e-...</msg>
<status status="PASS" starttime="20201030 11:51:28.561" endtime="20201030 11:51:28.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.569" level="INFO">${ACCURACY} = {'diff': [1.0680999999998497e-05, 1.0638999999999788e-05, 1.1082999999998538e-05, 1.0722000000001203e-05, 1.1111000000001148e-05, 1.1041999999999302e-05, 1.0679999999999024e-05, 1.0680999999998497e-05...</msg>
<status status="PASS" starttime="20201030 11:51:28.566" endtime="20201030 11:51:28.569"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.573" level="INFO">NAME: accuracy-TIMER_SET-9-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.572" endtime="20201030 11:51:28.574"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.576" level="INFO">VALUE: [1.0680999999998497e-05, 1.0638999999999788e-05, 1.1082999999998538e-05, 1.0722000000001203e-05, 1.1111000000001148e-05, 1.1041999999999302e-05, 1.0679999999999024e-05, 1.0680999999998497e-05, 1.0292000000002022e-05, 1.0680000000002493e-05, 1.1082999999998538e-05, 1.0708999999997637e-05, 1.0304999999998649e-05, 1.0681000000001967e-05, 1.0306000000001592e-05, 1.0374999999999968e-05, 1.1083999999998012e-05, 1.1027000000000259e-05, 1.0694999999998067e-05, 1.0679999999999024e-05, 1.0319000000001688e-05, 1.1055000000002868e-05, 1.0708999999997637e-05, 1.1096999999998108e-05, 1.1068999999998969e-05, 1.0679999999999024e-05, 1.0318999999998218e-05, 1.0693999999998594e-05, 1.1083000000002008e-05, 1.1055999999998872e-05, 1.0320000000001162e-05, 1.1070000000001912e-05, 1.1084000000001482e-05, 1.0707999999998163e-05, 1.1082999999998538e-05, 1.1084000000001482e-05, 1.1096999999998108e-05, 1.1056000000002342e-05, 1.1055999999998872e-05, 1.0291999999998552e-05, 1.0679999999999024e-05, 1.0306000000001592e-05, 1.0693999999998594e-05, 1.0709000000001107e-05, 1.1054999999999399e-05, 1.0333000000001258e-05, 1.0264000000002882e-05, 1.0652999999999357e-05, 1.1069000000002438e-05, 1.0304999999998649e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.574" endtime="20201030 11:51:28.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.570" endtime="20201030 11:51:28.577"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.581" endtime="20201030 11:51:28.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.579" endtime="20201030 11:51:28.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.578" endtime="20201030 11:51:28.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.224" endtime="20201030 11:51:28.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.223" endtime="20201030 11:51:28.601"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.610" endtime="20201030 11:51:28.628"></status>
</kw>
<msg timestamp="20201030 11:51:28.628" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.609" endtime="20201030 11:51:28.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_set 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.629" endtime="20201030 11:51:28.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.632" endtime="20201030 11:51:28.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.606" endtime="20201030 11:51:28.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.604" endtime="20201030 11:51:28.634"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.641" endtime="20201030 11:51:28.926"></status>
</kw>
<msg timestamp="20201030 11:51:28.929" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:28.639" endtime="20201030 11:51:28.929"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.937" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023456681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0234685, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:28.930" endtime="20201030 11:51:28.938"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.938" endtime="20201030 11:51:28.940"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.637" endtime="20201030 11:51:28.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.635" endtime="20201030 11:51:28.941"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:28.945" level="INFO">${RESULT} = [{'diff': 1.1818999999999719e-05}, {'diff': 1.2222999999998707e-05}, {'diff': 1.1458999999998387e-05}, {'diff': 1.2207999999999664e-05}, {'diff': 1.1457999999998913e-05}, {'diff': 1.2207999999999664e-...</msg>
<status status="PASS" starttime="20201030 11:51:28.942" endtime="20201030 11:51:28.945"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:28.949" level="INFO">${ACCURACY} = {'diff': [1.1818999999999719e-05, 1.2222999999998707e-05, 1.1458999999998387e-05, 1.2207999999999664e-05, 1.1457999999998913e-05, 1.2207999999999664e-05, 1.1444999999998817e-05, 1.2222999999998707e-05...</msg>
<status status="PASS" starttime="20201030 11:51:28.946" endtime="20201030 11:51:28.949"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.953" level="INFO">NAME: accuracy-TIMER_SET-10-philip</msg>
<status status="PASS" starttime="20201030 11:51:28.952" endtime="20201030 11:51:28.954"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:28.956" level="INFO">VALUE: [1.1818999999999719e-05, 1.2222999999998707e-05, 1.1458999999998387e-05, 1.2207999999999664e-05, 1.1457999999998913e-05, 1.2207999999999664e-05, 1.1444999999998817e-05, 1.2222999999998707e-05, 1.2208999999999137e-05, 1.1834000000002232e-05, 1.2221999999999233e-05, 1.2194999999999567e-05, 1.1818999999999719e-05, 1.2221999999999233e-05, 1.2236000000002273e-05, 1.1457999999998913e-05, 1.1111000000001148e-05, 1.1847000000002328e-05, 1.1819999999999192e-05, 1.2152999999997388e-05, 1.2166999999996958e-05, 1.1444999999998817e-05, 1.1471999999998483e-05, 1.1833999999998762e-05, 1.1818999999999719e-05, 1.1846999999998858e-05, 1.2221999999999233e-05, 1.1485999999998053e-05, 1.1444999999998817e-05, 1.1445000000002287e-05, 1.1819999999999192e-05, 1.1443999999999344e-05, 1.2222000000002703e-05, 1.1430999999999247e-05, 1.1444999999998817e-05, 1.2235999999998803e-05, 1.1457999999998913e-05, 1.1818999999999719e-05, 1.2207999999999664e-05, 1.2194000000000094e-05, 1.1846999999998858e-05, 1.1429999999999774e-05, 1.1819999999999192e-05, 1.1459000000001857e-05, 1.1458000000002383e-05, 1.1818999999999719e-05, 1.1832999999999289e-05, 1.1443999999999344e-05, 1.1847999999998332e-05, 1.1833000000002758e-05]</msg>
<status status="PASS" starttime="20201030 11:51:28.954" endtime="20201030 11:51:28.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.950" endtime="20201030 11:51:28.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:28.961" endtime="20201030 11:51:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.960" endtime="20201030 11:51:28.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.959" endtime="20201030 11:51:28.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.602" endtime="20201030 11:51:28.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.602" endtime="20201030 11:51:28.982"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:28.991" endtime="20201030 11:51:29.005"></status>
</kw>
<msg timestamp="20201030 11:51:29.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:28.989" endtime="20201030 11:51:29.006"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.008" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_set 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.006" endtime="20201030 11:51:29.008"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.009" endtime="20201030 11:51:29.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.987" endtime="20201030 11:51:29.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.985" endtime="20201030 11:51:29.011"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.018" endtime="20201030 11:51:29.304"></status>
</kw>
<msg timestamp="20201030 11:51:29.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.016" endtime="20201030 11:51:29.307"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.315" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019297569, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.308" endtime="20201030 11:51:29.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.317" endtime="20201030 11:51:29.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.014" endtime="20201030 11:51:29.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.012" endtime="20201030 11:51:29.319"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.323" level="INFO">${RESULT} = [{'diff': 1.2971999999999984e-05}, {'diff': 1.2597000000003078e-05}, {'diff': 1.2596999999999609e-05}, {'diff': 1.2971999999999984e-05}, {'diff': 1.2583000000000039e-05}, {'diff': 1.2971999999999984e-...</msg>
<status status="PASS" starttime="20201030 11:51:29.320" endtime="20201030 11:51:29.323"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.328" level="INFO">${ACCURACY} = {'diff': [1.2971999999999984e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2971999999999984e-05, 1.2583000000000039e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2971999999999984e-05...</msg>
<status status="PASS" starttime="20201030 11:51:29.324" endtime="20201030 11:51:29.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.332" level="INFO">NAME: accuracy-TIMER_SET-11-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.331" endtime="20201030 11:51:29.333"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.335" level="INFO">VALUE: [1.2971999999999984e-05, 1.2597000000003078e-05, 1.2596999999999609e-05, 1.2971999999999984e-05, 1.2583000000000039e-05, 1.2971999999999984e-05, 1.2972999999999457e-05, 1.2971999999999984e-05, 1.2583999999999512e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2971999999999984e-05, 1.2583999999999512e-05, 1.3360999999999928e-05, 1.3347000000000359e-05, 1.2971999999999984e-05, 1.2958000000000414e-05, 1.2221999999999233e-05, 1.2972999999999457e-05, 1.2985999999999553e-05, 1.2596999999999609e-05, 1.2125000000001718e-05, 1.2987000000002497e-05, 1.2971999999999984e-05, 1.2971999999999984e-05, 1.2985999999999553e-05, 1.2597999999999082e-05, 1.3000000000002593e-05, 1.2958000000000414e-05, 1.2611999999998652e-05, 1.2999999999999123e-05, 1.2944000000000844e-05, 1.2985999999999553e-05, 1.2598000000002552e-05, 1.2985999999999553e-05, 1.2958000000000414e-05, 1.2583000000000039e-05, 1.2971999999999984e-05, 1.2222000000002703e-05, 1.2971999999999984e-05, 1.2138999999997818e-05, 1.2958999999999887e-05, 1.2583000000000039e-05, 1.2597999999999082e-05, 1.2652999999997888e-05, 1.2583000000000039e-05, 1.2208999999999137e-05, 1.2597999999999082e-05, 1.3055999999997403e-05, 1.2597000000003078e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.334" endtime="20201030 11:51:29.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.329" endtime="20201030 11:51:29.336"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.340" endtime="20201030 11:51:29.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.338" endtime="20201030 11:51:29.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.337" endtime="20201030 11:51:29.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.983" endtime="20201030 11:51:29.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:28.982" endtime="20201030 11:51:29.361"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.369" endtime="20201030 11:51:29.384"></status>
</kw>
<msg timestamp="20201030 11:51:29.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.368" endtime="20201030 11:51:29.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_set 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.386" endtime="20201030 11:51:29.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.388" endtime="20201030 11:51:29.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.365" endtime="20201030 11:51:29.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.363" endtime="20201030 11:51:29.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.397" endtime="20201030 11:51:29.684"></status>
</kw>
<msg timestamp="20201030 11:51:29.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019464597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.396" endtime="20201030 11:51:29.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019450833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019464597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.688" endtime="20201030 11:51:29.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.696" endtime="20201030 11:51:29.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.393" endtime="20201030 11:51:29.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.391" endtime="20201030 11:51:29.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:29.703" level="INFO">${RESULT} = [{'diff': 1.3763999999999443e-05}, {'diff': 1.3333000000000789e-05}, {'diff': 1.3736000000000304e-05}, {'diff': 1.4110999999997209e-05}, {'diff': 1.3347000000000359e-05}, {'diff': 1.4111000000000679e-...</msg>
<status status="PASS" starttime="20201030 11:51:29.700" endtime="20201030 11:51:29.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:29.707" level="INFO">${ACCURACY} = {'diff': [1.3763999999999443e-05, 1.3333000000000789e-05, 1.3736000000000304e-05, 1.4110999999997209e-05, 1.3347000000000359e-05, 1.4111000000000679e-05, 1.4110999999997209e-05, 1.3333000000000789e-05...</msg>
<status status="PASS" starttime="20201030 11:51:29.704" endtime="20201030 11:51:29.707"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.711" level="INFO">NAME: accuracy-TIMER_SET-12-philip</msg>
<status status="PASS" starttime="20201030 11:51:29.710" endtime="20201030 11:51:29.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.714" level="INFO">VALUE: [1.3763999999999443e-05, 1.3333000000000789e-05, 1.3736000000000304e-05, 1.4110999999997209e-05, 1.3347000000000359e-05, 1.4111000000000679e-05, 1.4110999999997209e-05, 1.3333000000000789e-05, 1.3360999999999928e-05, 1.4111999999996683e-05, 1.3347999999999832e-05, 1.4125000000000248e-05, 1.3360999999999928e-05, 1.4110999999997209e-05, 1.3374999999999498e-05, 1.3736000000000304e-05, 1.3333999999996793e-05, 1.3735999999996834e-05, 1.4209000000001137e-05, 1.4125000000000248e-05, 1.3722000000000734e-05, 1.4110999999997209e-05, 1.4069000000001969e-05, 1.3374999999999498e-05, 1.3333000000000789e-05, 1.3431000000001247e-05, 1.3749999999999873e-05, 1.3722000000000734e-05, 1.3749999999999873e-05, 1.3347000000000359e-05, 1.3360999999999928e-05, 1.4166999999998958e-05, 1.4138999999999818e-05, 1.4138999999999818e-05, 1.3319000000001219e-05, 1.3360999999999928e-05, 1.3347000000000359e-05, 1.3347999999999832e-05, 1.3721999999997264e-05, 1.3736000000000304e-05, 1.3388999999999068e-05, 1.3791999999998583e-05, 1.3360999999999928e-05, 1.3360999999999928e-05, 1.3374999999999498e-05, 1.4125000000000248e-05, 1.4111000000000679e-05, 1.3347000000000359e-05, 1.3736000000000304e-05, 1.3736000000000304e-05]</msg>
<status status="PASS" starttime="20201030 11:51:29.712" endtime="20201030 11:51:29.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.708" endtime="20201030 11:51:29.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:29.719" endtime="20201030 11:51:29.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.717" endtime="20201030 11:51:29.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.716" endtime="20201030 11:51:29.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.361" endtime="20201030 11:51:29.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.361" endtime="20201030 11:51:29.740"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.748" endtime="20201030 11:51:29.765"></status>
</kw>
<msg timestamp="20201030 11:51:29.765" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.747" endtime="20201030 11:51:29.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:29.768" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_set 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:29.766" endtime="20201030 11:51:29.768"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.769" endtime="20201030 11:51:29.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.744" endtime="20201030 11:51:29.771"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.742" endtime="20201030 11:51:29.772"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:29.778" endtime="20201030 11:51:30.062"></status>
</kw>
<msg timestamp="20201030 11:51:30.065" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:29.776" endtime="20201030 11:51:30.065"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.074" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020192639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020207139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.066" endtime="20201030 11:51:30.074"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.075" endtime="20201030 11:51:30.076"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.774" endtime="20201030 11:51:30.077"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.772" endtime="20201030 11:51:30.077"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.081" level="INFO">${RESULT} = [{'diff': 1.4500000000000624e-05}, {'diff': 1.5278000000000513e-05}, {'diff': 1.5263999999997474e-05}, {'diff': 1.4861000000001429e-05}, {'diff': 1.5292000000000083e-05}, {'diff': 1.4138999999999818e-...</msg>
<status status="PASS" starttime="20201030 11:51:30.078" endtime="20201030 11:51:30.082"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.085" level="INFO">${ACCURACY} = {'diff': [1.4500000000000624e-05, 1.5278000000000513e-05, 1.5263999999997474e-05, 1.4861000000001429e-05, 1.5292000000000083e-05, 1.4138999999999818e-05, 1.5249999999997904e-05, 1.4889000000000568e-05...</msg>
<status status="PASS" starttime="20201030 11:51:30.082" endtime="20201030 11:51:30.086"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.090" level="INFO">NAME: accuracy-TIMER_SET-13-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.089" endtime="20201030 11:51:30.090"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.092" level="INFO">VALUE: [1.4500000000000624e-05, 1.5278000000000513e-05, 1.5263999999997474e-05, 1.4861000000001429e-05, 1.5292000000000083e-05, 1.4138999999999818e-05, 1.5249999999997904e-05, 1.4889000000000568e-05, 1.5249999999997904e-05, 1.4514000000000193e-05, 1.5264000000000943e-05, 1.4888999999997099e-05, 1.4111000000000679e-05, 1.4070000000001442e-05, 1.4888999999997099e-05, 1.4874999999997529e-05, 1.4499999999997154e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4903000000000138e-05, 1.5249999999997904e-05, 1.4111000000000679e-05, 1.5277999999997044e-05, 1.4889000000000568e-05, 1.4500000000000624e-05, 1.4500000000000624e-05, 1.4889000000000568e-05, 1.4889000000000568e-05, 1.4889000000000568e-05, 1.451300000000072e-05, 1.4957999999998944e-05, 1.4500000000000624e-05, 1.4889000000000568e-05, 1.4167000000002428e-05, 1.4542000000002803e-05, 1.481899999999925e-05, 1.4514000000000193e-05, 1.4443999999998874e-05, 1.5264000000000943e-05, 1.5264000000000943e-05, 1.4499999999997154e-05, 1.4819000000002719e-05, 1.4431000000002248e-05, 1.4875000000000999e-05, 1.4514000000000193e-05, 1.4874999999997529e-05, 1.486099999999796e-05, 1.4569999999998473e-05, 1.4514000000000193e-05, 1.4874999999997529e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.091" endtime="20201030 11:51:30.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.086" endtime="20201030 11:51:30.094"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.098" endtime="20201030 11:51:30.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.096" endtime="20201030 11:51:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.095" endtime="20201030 11:51:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.741" endtime="20201030 11:51:30.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:29.740" endtime="20201030 11:51:30.119"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.127" endtime="20201030 11:51:30.143"></status>
</kw>
<msg timestamp="20201030 11:51:30.143" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.126" endtime="20201030 11:51:30.143"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_set 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.144" endtime="20201030 11:51:30.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.147" endtime="20201030 11:51:30.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.123" endtime="20201030 11:51:30.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.121" endtime="20201030 11:51:30.149"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.155" endtime="20201030 11:51:30.442"></status>
</kw>
<msg timestamp="20201030 11:51:30.445" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.154" endtime="20201030 11:51:30.445"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.453" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019560875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.446" endtime="20201030 11:51:30.454"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.455" endtime="20201030 11:51:30.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.151" endtime="20201030 11:51:30.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.150" endtime="20201030 11:51:30.457"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.461" level="INFO">${RESULT} = [{'diff': 1.6027999999997794e-05}, {'diff': 1.5263999999997474e-05}, {'diff': 1.563899999999785e-05}, {'diff': 1.602699999999832e-05}, {'diff': 1.566700000000046e-05}, {'diff': 1.6027999999997794e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:30.458" endtime="20201030 11:51:30.461"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.466" level="INFO">${ACCURACY} = {'diff': [1.6027999999997794e-05, 1.5263999999997474e-05, 1.563899999999785e-05, 1.602699999999832e-05, 1.566700000000046e-05, 1.6027999999997794e-05, 1.5666000000000985e-05, 1.5264000000000943e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:51:30.462" endtime="20201030 11:51:30.466"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.471" level="INFO">NAME: accuracy-TIMER_SET-14-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.470" endtime="20201030 11:51:30.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.473" level="INFO">VALUE: [1.6027999999997794e-05, 1.5263999999997474e-05, 1.563899999999785e-05, 1.602699999999832e-05, 1.566700000000046e-05, 1.6027999999997794e-05, 1.5666000000000985e-05, 1.5264000000000943e-05, 1.602699999999832e-05, 1.6028000000001263e-05, 1.6401999999998695e-05, 1.6028000000001263e-05, 1.562499999999828e-05, 1.5263999999997474e-05, 1.5637999999998375e-05, 1.6014000000001694e-05, 1.6028000000001263e-05, 1.5637999999998375e-05, 1.5278000000000513e-05, 1.5278000000000513e-05, 1.563899999999785e-05, 1.5985999999999084e-05, 1.565299999999742e-05, 1.5707999999999694e-05, 1.563900000000132e-05, 1.565300000000089e-05, 1.565300000000089e-05, 1.563900000000132e-05, 1.6041999999997364e-05, 1.5221999999998764e-05, 1.5708000000003164e-05, 1.5278000000000513e-05, 1.5235999999998334e-05, 1.6013999999998224e-05, 1.5195000000002568e-05, 1.602699999999832e-05, 1.5264000000000943e-05, 1.6028000000001263e-05, 1.6028000000001263e-05, 1.5680000000000555e-05, 1.562499999999828e-05, 1.5999999999998654e-05, 1.6014000000001694e-05, 1.6014000000001694e-05, 1.5651999999997945e-05, 1.602700000000179e-05, 1.604099999999789e-05, 1.562499999999828e-05, 1.5264000000000943e-05, 1.562499999999828e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.472" endtime="20201030 11:51:30.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.467" endtime="20201030 11:51:30.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.478" endtime="20201030 11:51:30.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.477" endtime="20201030 11:51:30.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.475" endtime="20201030 11:51:30.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.120" endtime="20201030 11:51:30.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.119" endtime="20201030 11:51:30.499"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.507" endtime="20201030 11:51:30.523"></status>
</kw>
<msg timestamp="20201030 11:51:30.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.506" endtime="20201030 11:51:30.524"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.526" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_set 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.524" endtime="20201030 11:51:30.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.527" endtime="20201030 11:51:30.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.503" endtime="20201030 11:51:30.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.501" endtime="20201030 11:51:30.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.536" endtime="20201030 11:51:30.821"></status>
</kw>
<msg timestamp="20201030 11:51:30.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019358528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.534" endtime="20201030 11:51:30.825"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.833" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019358528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.825" endtime="20201030 11:51:30.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.834" endtime="20201030 11:51:30.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.532" endtime="20201030 11:51:30.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.530" endtime="20201030 11:51:30.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:30.840" level="INFO">${RESULT} = [{'diff': 1.641700000000121e-05}, {'diff': 1.6387999999999125e-05}, {'diff': 1.677699999999907e-05}, {'diff': 1.6749999999999404e-05}, {'diff': 1.718099999999806e-05}, {'diff': 1.6763999999998974e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:30.837" endtime="20201030 11:51:30.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:30.844" level="INFO">${ACCURACY} = {'diff': [1.641700000000121e-05, 1.6387999999999125e-05, 1.677699999999907e-05, 1.6749999999999404e-05, 1.718099999999806e-05, 1.6763999999998974e-05, 1.6791999999998114e-05, 1.6416000000001735e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:51:30.841" endtime="20201030 11:51:30.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.849" level="INFO">NAME: accuracy-TIMER_SET-15-philip</msg>
<status status="PASS" starttime="20201030 11:51:30.848" endtime="20201030 11:51:30.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.851" level="INFO">VALUE: [1.641700000000121e-05, 1.6387999999999125e-05, 1.677699999999907e-05, 1.6749999999999404e-05, 1.718099999999806e-05, 1.6763999999998974e-05, 1.6791999999998114e-05, 1.6416000000001735e-05, 1.7165999999999015e-05, 1.6792000000001583e-05, 1.716699999999849e-05, 1.6736000000003304e-05, 1.6791999999998114e-05, 1.63889999999986e-05, 1.6736000000003304e-05, 1.6791999999998114e-05, 1.7166000000002485e-05, 1.641699999999774e-05, 1.640299999999817e-05, 1.679099999999864e-05, 1.6401999999998695e-05, 1.6763999999998974e-05, 1.716700000000196e-05, 1.718099999999806e-05, 1.716700000000196e-05, 1.6387999999999125e-05, 1.643100000000078e-05, 1.643099999999731e-05, 1.6749999999999404e-05, 1.7193999999998155e-05, 1.6764000000002444e-05, 1.6764000000002444e-05, 1.640300000000164e-05, 1.641699999999774e-05, 1.643100000000078e-05, 1.637499999999903e-05, 1.7249999999999904e-05, 1.679099999999864e-05, 1.7179999999998585e-05, 1.6791999999998114e-05, 1.6763999999998974e-05, 1.6777999999998544e-05, 1.716699999999849e-05, 1.641700000000121e-05, 1.6778000000002014e-05, 1.680500000000168e-05, 1.6791999999998114e-05, 1.643100000000078e-05, 1.716699999999849e-05, 1.716700000000196e-05]</msg>
<status status="PASS" starttime="20201030 11:51:30.850" endtime="20201030 11:51:30.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.845" endtime="20201030 11:51:30.852"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:30.856" endtime="20201030 11:51:30.875"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.854" endtime="20201030 11:51:30.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.853" endtime="20201030 11:51:30.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.500" endtime="20201030 11:51:30.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.499" endtime="20201030 11:51:30.877"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.885" endtime="20201030 11:51:30.901"></status>
</kw>
<msg timestamp="20201030 11:51:30.901" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.884" endtime="20201030 11:51:30.902"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:30.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_set 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:30.902" endtime="20201030 11:51:30.904"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.905" endtime="20201030 11:51:30.906"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.881" endtime="20201030 11:51:30.907"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.879" endtime="20201030 11:51:30.907"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:30.914" endtime="20201030 11:51:31.198"></status>
</kw>
<msg timestamp="20201030 11:51:31.202" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:30.912" endtime="20201030 11:51:31.202"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020307792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020326153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.203" endtime="20201030 11:51:31.210"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.211" endtime="20201030 11:51:31.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.910" endtime="20201030 11:51:31.213"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.908" endtime="20201030 11:51:31.214"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.217" level="INFO">${RESULT} = [{'diff': 1.836099999999799e-05}, {'diff': 1.830499999999971e-05}, {'diff': 1.7915999999999765e-05}, {'diff': 1.793100000000228e-05}, {'diff': 1.794500000000185e-05}, {'diff': 1.791700000000271e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:31.214" endtime="20201030 11:51:31.218"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.222" level="INFO">${ACCURACY} = {'diff': [1.836099999999799e-05, 1.830499999999971e-05, 1.7915999999999765e-05, 1.793100000000228e-05, 1.794500000000185e-05, 1.791700000000271e-05, 1.7556000000001903e-05, 1.8305999999999184e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 11:51:31.218" endtime="20201030 11:51:31.222"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.226" level="INFO">NAME: accuracy-TIMER_SET-16-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.225" endtime="20201030 11:51:31.226"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.229" level="INFO">VALUE: [1.836099999999799e-05, 1.830499999999971e-05, 1.7915999999999765e-05, 1.793100000000228e-05, 1.794500000000185e-05, 1.791700000000271e-05, 1.7556000000001903e-05, 1.8305999999999184e-05, 1.755499999999896e-05, 1.7165999999999015e-05, 1.7527999999999294e-05, 1.8305999999999184e-05, 1.7902000000000196e-05, 1.712499999999978e-05, 1.755500000000243e-05, 1.7944000000002375e-05, 1.755499999999896e-05, 1.7598000000000613e-05, 1.791699999999924e-05, 1.7915999999999765e-05, 1.794500000000185e-05, 1.7541999999998864e-05, 1.7500000000000154e-05, 1.7930000000002805e-05, 1.7569000000002e-05, 1.716700000000196e-05, 1.75829999999981e-05, 1.7555999999998434e-05, 1.830499999999971e-05, 1.7556000000001903e-05, 1.831899999999928e-05, 1.793100000000228e-05, 1.7556000000001903e-05, 1.718100000000153e-05, 1.791700000000271e-05, 1.790299999999967e-05, 1.7555999999998434e-05, 1.7528000000002764e-05, 1.754099999999939e-05, 1.7209000000000668e-05, 1.793100000000228e-05, 1.830499999999971e-05, 1.755499999999896e-05, 1.758300000000157e-05, 1.7541999999998864e-05, 1.756899999999853e-05, 1.7542000000002334e-05, 1.7929999999999335e-05, 1.7972000000001515e-05, 1.754099999999939e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.227" endtime="20201030 11:51:31.230"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.223" endtime="20201030 11:51:31.231"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.234" endtime="20201030 11:51:31.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.233" endtime="20201030 11:51:31.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.232" endtime="20201030 11:51:31.254"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.878" endtime="20201030 11:51:31.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:30.877" endtime="20201030 11:51:31.255"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.264" endtime="20201030 11:51:31.279"></status>
</kw>
<msg timestamp="20201030 11:51:31.279" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.262" endtime="20201030 11:51:31.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_set 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.280" endtime="20201030 11:51:31.282"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.282" endtime="20201030 11:51:31.284"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.259" endtime="20201030 11:51:31.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.257" endtime="20201030 11:51:31.285"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.291" endtime="20201030 11:51:31.578"></status>
</kw>
<msg timestamp="20201030 11:51:31.581" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.290" endtime="20201030 11:51:31.581"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019696944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.582" endtime="20201030 11:51:31.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.590" endtime="20201030 11:51:31.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.287" endtime="20201030 11:51:31.592"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.286" endtime="20201030 11:51:31.593"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.597" level="INFO">${RESULT} = [{'diff': 1.829100000000014e-05}, {'diff': 1.8721999999998795e-05}, {'diff': 1.9070000000002973e-05}, {'diff': 1.8334000000001793e-05}, {'diff': 1.8680000000000085e-05}, {'diff': 1.90829999999996e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:31.593" endtime="20201030 11:51:31.597"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.602" level="INFO">${ACCURACY} = {'diff': [1.829100000000014e-05, 1.8721999999998795e-05, 1.9070000000002973e-05, 1.8334000000001793e-05, 1.8680000000000085e-05, 1.90829999999996e-05, 1.866699999999999e-05, 1.8693999999999655e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:51:31.598" endtime="20201030 11:51:31.602"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.606" level="INFO">NAME: accuracy-TIMER_SET-17-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.605" endtime="20201030 11:51:31.606"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.609" level="INFO">VALUE: [1.829100000000014e-05, 1.8721999999998795e-05, 1.9070000000002973e-05, 1.8334000000001793e-05, 1.8680000000000085e-05, 1.90829999999996e-05, 1.866699999999999e-05, 1.8693999999999655e-05, 1.8693999999999655e-05, 1.833300000000232e-05, 1.8680000000000085e-05, 1.8680000000000085e-05, 1.8694000000003125e-05, 1.8721999999998795e-05, 1.9083999999999074e-05, 1.8666000000000516e-05, 1.830499999999971e-05, 1.8693999999999655e-05, 1.8263999999997005e-05, 1.911100000000221e-05, 1.8708000000002695e-05, 1.830499999999971e-05, 1.90829999999996e-05, 1.906900000000003e-05, 1.868099999999956e-05, 1.9055999999999934e-05, 1.8764000000000974e-05, 1.8707999999999225e-05, 1.8291999999999614e-05, 1.8750000000001404e-05, 1.868099999999956e-05, 1.906900000000003e-05, 1.8291999999999614e-05, 1.8278000000000044e-05, 1.831899999999928e-05, 1.8693999999999655e-05, 1.906900000000003e-05, 1.8693999999999655e-05, 1.9083999999999074e-05, 1.8680000000000085e-05, 1.8707999999999225e-05, 1.833299999999885e-05, 1.905500000000046e-05, 1.90829999999996e-05, 1.830499999999971e-05, 1.8291999999999614e-05, 1.872299999999827e-05, 1.8319999999998754e-05, 1.86950000000026e-05, 1.8680000000000085e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.607" endtime="20201030 11:51:31.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.602" endtime="20201030 11:51:31.610"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.613" endtime="20201030 11:51:31.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.612" endtime="20201030 11:51:31.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.611" endtime="20201030 11:51:31.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.256" endtime="20201030 11:51:31.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.255" endtime="20201030 11:51:31.634"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.643" endtime="20201030 11:51:31.658"></status>
</kw>
<msg timestamp="20201030 11:51:31.659" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.641" endtime="20201030 11:51:31.659"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_set 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:31.660" endtime="20201030 11:51:31.661"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.662" endtime="20201030 11:51:31.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.639" endtime="20201030 11:51:31.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.637" endtime="20201030 11:51:31.664"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.671" endtime="20201030 11:51:31.957"></status>
</kw>
<msg timestamp="20201030 11:51:31.960" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.669" endtime="20201030 11:51:31.960"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019284639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019304472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:31.961" endtime="20201030 11:51:31.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:31.969" endtime="20201030 11:51:31.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.667" endtime="20201030 11:51:31.972"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.665" endtime="20201030 11:51:31.972"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:31.976" level="INFO">${RESULT} = [{'diff': 1.983300000000035e-05}, {'diff': 1.986100000000296e-05}, {'diff': 1.945899999999945e-05}, {'diff': 1.9471999999999545e-05}, {'diff': 1.984699999999992e-05}, {'diff': 1.945899999999945e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:31.973" endtime="20201030 11:51:31.976"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:31.980" level="INFO">${ACCURACY} = {'diff': [1.983300000000035e-05, 1.986100000000296e-05, 1.945899999999945e-05, 1.9471999999999545e-05, 1.984699999999992e-05, 1.945899999999945e-05, 1.904099999999742e-05, 1.93890000000016e-05, 1.9833...</msg>
<status status="PASS" starttime="20201030 11:51:31.977" endtime="20201030 11:51:31.980"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.985" level="INFO">NAME: accuracy-TIMER_SET-18-philip</msg>
<status status="PASS" starttime="20201030 11:51:31.984" endtime="20201030 11:51:31.985"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:31.987" level="INFO">VALUE: [1.983300000000035e-05, 1.986100000000296e-05, 1.945899999999945e-05, 1.9471999999999545e-05, 1.984699999999992e-05, 1.945899999999945e-05, 1.904099999999742e-05, 1.93890000000016e-05, 1.983300000000035e-05, 1.9471999999999545e-05, 1.980500000000121e-05, 1.9444000000000405e-05, 1.944499999999988e-05, 2.0222000000000295e-05, 1.943100000000031e-05, 1.984699999999992e-05, 1.945899999999945e-05, 1.9457999999999975e-05, 1.9833999999999824e-05, 1.9820000000000254e-05, 1.9444000000000405e-05, 1.9457999999999975e-05, 1.9833999999999824e-05, 1.9500000000002154e-05, 1.943100000000031e-05, 1.984699999999992e-05, 1.9457999999999975e-05, 1.944499999999988e-05, 1.987499999999906e-05, 1.983300000000035e-05, 1.9527999999997825e-05, 1.9430000000000835e-05, 2.022299999999977e-05, 1.983299999999688e-05, 1.947300000000249e-05, 2.0222000000000295e-05, 1.9457999999999975e-05, 1.9457999999999975e-05, 2.0235999999999865e-05, 1.945899999999945e-05, 1.944499999999988e-05, 1.9471999999999545e-05, 1.984699999999992e-05, 1.90829999999996e-05, 1.906900000000003e-05, 1.9820000000000254e-05, 2.02090000000002e-05, 1.983300000000035e-05, 1.9833999999999824e-05, 2.019500000000063e-05]</msg>
<status status="PASS" starttime="20201030 11:51:31.986" endtime="20201030 11:51:31.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.981" endtime="20201030 11:51:31.988"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:31.992" endtime="20201030 11:51:32.011"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.990" endtime="20201030 11:51:32.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.989" endtime="20201030 11:51:32.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.635" endtime="20201030 11:51:32.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:31.634" endtime="20201030 11:51:32.013"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.021" endtime="20201030 11:51:32.039"></status>
</kw>
<msg timestamp="20201030 11:51:32.040" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.020" endtime="20201030 11:51:32.040"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_set 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.041" endtime="20201030 11:51:32.043"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.043" endtime="20201030 11:51:32.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.017" endtime="20201030 11:51:32.045"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.015" endtime="20201030 11:51:32.046"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.052" endtime="20201030 11:51:32.336"></status>
</kw>
<msg timestamp="20201030 11:51:32.339" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.051" endtime="20201030 11:51:32.340"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022692972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022713931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.340" endtime="20201030 11:51:32.348"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.349" endtime="20201030 11:51:32.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.048" endtime="20201030 11:51:32.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.046" endtime="20201030 11:51:32.351"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.355" level="INFO">${RESULT} = [{'diff': 2.095900000000095e-05}, {'diff': 2.097300000000052e-05}, {'diff': 2.059700000000067e-05}, {'diff': 2.0986000000000615e-05}, {'diff': 2.137499999999709e-05}, {'diff': 2.0207999999997256e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:32.352" endtime="20201030 11:51:32.355"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.359" level="INFO">${ACCURACY} = {'diff': [2.095900000000095e-05, 2.097300000000052e-05, 2.059700000000067e-05, 2.0986000000000615e-05, 2.137499999999709e-05, 2.0207999999997256e-05, 2.137500000000056e-05, 2.0972000000001045e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 11:51:32.356" endtime="20201030 11:51:32.359"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.363" level="INFO">NAME: accuracy-TIMER_SET-19-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.362" endtime="20201030 11:51:32.364"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.366" level="INFO">VALUE: [2.095900000000095e-05, 2.097300000000052e-05, 2.059700000000067e-05, 2.0986000000000615e-05, 2.137499999999709e-05, 2.0207999999997256e-05, 2.137500000000056e-05, 2.0972000000001045e-05, 2.05830000000011e-05, 2.022300000000324e-05, 2.05969999999972e-05, 2.1415999999999796e-05, 2.061100000000024e-05, 2.0598000000000144e-05, 2.0986000000000615e-05, 2.0985999999997146e-05, 2.061100000000024e-05, 2.0986000000000615e-05, 2.0555999999997965e-05, 2.0986000000000615e-05, 2.14029999999997e-05, 2.095900000000095e-05, 2.091699999999877e-05, 2.0611999999999714e-05, 2.05830000000011e-05, 2.059700000000067e-05, 2.0972000000001045e-05, 2.062499999999981e-05, 2.059700000000067e-05, 2.137500000000056e-05, 2.097300000000052e-05, 2.097300000000052e-05, 2.058299999999763e-05, 2.0194000000001155e-05, 2.0235999999999865e-05, 2.05969999999972e-05, 2.0598000000000144e-05, 2.0235999999999865e-05, 2.097299999999705e-05, 2.0277999999998575e-05, 2.0971999999997576e-05, 2.0598000000000144e-05, 2.0584000000000574e-05, 2.0971999999997576e-05, 2.058299999999763e-05, 2.061100000000024e-05, 2.063899999999938e-05, 2.0598000000000144e-05, 2.0583999999997105e-05, 2.097300000000052e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.365" endtime="20201030 11:51:32.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.360" endtime="20201030 11:51:32.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.377" endtime="20201030 11:51:32.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.375" endtime="20201030 11:51:32.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.374" endtime="20201030 11:51:32.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.014" endtime="20201030 11:51:32.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.013" endtime="20201030 11:51:32.398"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.406" endtime="20201030 11:51:32.421"></status>
</kw>
<msg timestamp="20201030 11:51:32.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.404" endtime="20201030 11:51:32.421"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.424" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_set 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.422" endtime="20201030 11:51:32.424"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.425" endtime="20201030 11:51:32.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.402" endtime="20201030 11:51:32.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.400" endtime="20201030 11:51:32.427"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.434" endtime="20201030 11:51:32.717"></status>
</kw>
<msg timestamp="20201030 11:51:32.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.432" endtime="20201030 11:51:32.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020019236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020040583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.722" endtime="20201030 11:51:32.729"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.730" endtime="20201030 11:51:32.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.430" endtime="20201030 11:51:32.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.428" endtime="20201030 11:51:32.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:32.737" level="INFO">${RESULT} = [{'diff': 2.134700000000142e-05}, {'diff': 2.1735999999997896e-05}, {'diff': 2.136100000000099e-05}, {'diff': 2.1750000000000935e-05}, {'diff': 2.211100000000174e-05}, {'diff': 2.137500000000056e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:32.733" endtime="20201030 11:51:32.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:32.741" level="INFO">${ACCURACY} = {'diff': [2.134700000000142e-05, 2.1735999999997896e-05, 2.136100000000099e-05, 2.1750000000000935e-05, 2.211100000000174e-05, 2.137500000000056e-05, 2.1736000000001365e-05, 2.211099999999827e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 11:51:32.737" endtime="20201030 11:51:32.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.746" level="INFO">NAME: accuracy-TIMER_SET-20-philip</msg>
<status status="PASS" starttime="20201030 11:51:32.745" endtime="20201030 11:51:32.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.748" level="INFO">VALUE: [2.134700000000142e-05, 2.1735999999997896e-05, 2.136100000000099e-05, 2.1750000000000935e-05, 2.211100000000174e-05, 2.137500000000056e-05, 2.1736000000001365e-05, 2.211099999999827e-05, 2.1750000000000935e-05, 2.136099999999752e-05, 2.1750000000000935e-05, 2.1348000000000894e-05, 2.137500000000056e-05, 2.17770000000006e-05, 2.1764000000000505e-05, 2.134700000000142e-05, 2.212499999999784e-05, 2.134699999999795e-05, 2.166700000000299e-05, 2.134699999999795e-05, 2.1362000000000464e-05, 2.212499999999784e-05, 2.1348000000000894e-05, 2.1736000000001365e-05, 2.1750000000000935e-05, 2.136099999999752e-05, 2.137500000000056e-05, 2.130499999999924e-05, 2.133299999999838e-05, 2.134700000000142e-05, 2.1348000000000894e-05, 2.137500000000056e-05, 2.131899999999881e-05, 2.1736000000001365e-05, 2.208299999999913e-05, 2.136099999999752e-05, 2.1749999999997466e-05, 2.136100000000099e-05, 2.1735999999997896e-05, 2.1735999999997896e-05, 2.134700000000142e-05, 2.213900000000088e-05, 2.141699999999927e-05, 2.211099999999827e-05, 2.212500000000131e-05, 2.143100000000231e-05, 2.1750000000000935e-05, 2.2097999999998175e-05, 2.212500000000131e-05, 2.211099999999827e-05]</msg>
<status status="PASS" starttime="20201030 11:51:32.747" endtime="20201030 11:51:32.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.742" endtime="20201030 11:51:32.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:32.753" endtime="20201030 11:51:32.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.752" endtime="20201030 11:51:32.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.751" endtime="20201030 11:51:32.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.399" endtime="20201030 11:51:32.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.398" endtime="20201030 11:51:32.774"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.782" endtime="20201030 11:51:32.797"></status>
</kw>
<msg timestamp="20201030 11:51:32.798" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.781" endtime="20201030 11:51:32.798"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:32.800" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_set 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:32.799" endtime="20201030 11:51:32.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.801" endtime="20201030 11:51:32.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.779" endtime="20201030 11:51:32.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.776" endtime="20201030 11:51:32.804"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:32.810" endtime="20201030 11:51:33.097"></status>
</kw>
<msg timestamp="20201030 11:51:33.100" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:32.809" endtime="20201030 11:51:33.100"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.108" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019374556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019397097, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.101" endtime="20201030 11:51:33.109"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.109" endtime="20201030 11:51:33.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.806" endtime="20201030 11:51:33.112"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.804" endtime="20201030 11:51:33.112"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.116" level="INFO">${RESULT} = [{'diff': 2.2540999999997452e-05}, {'diff': 2.212500000000131e-05}, {'diff': 2.3292000000001145e-05}, {'diff': 2.2528000000000825e-05}, {'diff': 2.3249999999998966e-05}, {'diff': 2.287499999999859e-05...</msg>
<status status="PASS" starttime="20201030 11:51:33.113" endtime="20201030 11:51:33.116"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.120" level="INFO">${ACCURACY} = {'diff': [2.2540999999997452e-05, 2.212500000000131e-05, 2.3292000000001145e-05, 2.2528000000000825e-05, 2.3249999999998966e-05, 2.287499999999859e-05, 2.2514000000001255e-05, 2.248700000000159e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:33.117" endtime="20201030 11:51:33.120"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.125" level="INFO">NAME: accuracy-TIMER_SET-21-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.123" endtime="20201030 11:51:33.125"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.127" level="INFO">VALUE: [2.2540999999997452e-05, 2.212500000000131e-05, 2.3292000000001145e-05, 2.2528000000000825e-05, 2.3249999999998966e-05, 2.287499999999859e-05, 2.2514000000001255e-05, 2.248700000000159e-05, 2.2514000000001255e-05, 2.2916000000001296e-05, 2.287500000000206e-05, 2.329100000000167e-05, 2.2555999999999965e-05, 2.2486000000002115e-05, 2.212499999999784e-05, 2.2514000000001255e-05, 2.2902000000001727e-05, 2.212499999999784e-05, 2.29030000000012e-05, 2.218099999999959e-05, 2.2513999999997786e-05, 2.213899999999741e-05, 2.2500000000001685e-05, 2.3249999999998966e-05, 2.288899999999816e-05, 2.2485999999998646e-05, 2.2514000000001255e-05, 2.212500000000131e-05, 2.2499999999998216e-05, 2.3278000000001575e-05, 2.258299999999963e-05, 2.3264000000002005e-05, 2.287500000000206e-05, 2.3264000000002005e-05, 2.286099999999902e-05, 2.2485999999998646e-05, 2.212500000000131e-05, 2.287500000000206e-05, 2.248699999999812e-05, 2.2514000000001255e-05, 2.2500000000001685e-05, 2.3221999999999826e-05, 2.2847999999998925e-05, 2.3263999999998536e-05, 2.286100000000249e-05, 2.2513999999997786e-05, 2.2485999999998646e-05, 2.2485999999998646e-05, 2.3263999999998536e-05, 2.287499999999859e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.126" endtime="20201030 11:51:33.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.121" endtime="20201030 11:51:33.128"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.132" endtime="20201030 11:51:33.151"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.130" endtime="20201030 11:51:33.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.129" endtime="20201030 11:51:33.152"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.775" endtime="20201030 11:51:33.153"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:32.774" endtime="20201030 11:51:33.153"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.161" endtime="20201030 11:51:33.178"></status>
</kw>
<msg timestamp="20201030 11:51:33.178" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.160" endtime="20201030 11:51:33.178"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.180" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_set 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.179" endtime="20201030 11:51:33.181"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.182" endtime="20201030 11:51:33.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.157" endtime="20201030 11:51:33.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.155" endtime="20201030 11:51:33.184"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.190" endtime="20201030 11:51:33.476"></status>
</kw>
<msg timestamp="20201030 11:51:33.479" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.189" endtime="20201030 11:51:33.479"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020174361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020198389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.480" endtime="20201030 11:51:33.488"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.488" endtime="20201030 11:51:33.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.186" endtime="20201030 11:51:33.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.185" endtime="20201030 11:51:33.491"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.495" level="INFO">${RESULT} = [{'diff': 2.4028000000002325e-05}, {'diff': 2.4055999999997996e-05}, {'diff': 2.3278000000001575e-05}, {'diff': 2.366699999999805e-05}, {'diff': 2.4040999999998952e-05}, {'diff': 2.366700000000152e-05...</msg>
<status status="PASS" starttime="20201030 11:51:33.492" endtime="20201030 11:51:33.495"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.499" level="INFO">${ACCURACY} = {'diff': [2.4028000000002325e-05, 2.4055999999997996e-05, 2.3278000000001575e-05, 2.366699999999805e-05, 2.4040999999998952e-05, 2.366700000000152e-05, 2.4028000000002325e-05, 2.3264000000002005e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:33.496" endtime="20201030 11:51:33.499"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.503" level="INFO">NAME: accuracy-TIMER_SET-22-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.502" endtime="20201030 11:51:33.504"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.506" level="INFO">VALUE: [2.4028000000002325e-05, 2.4055999999997996e-05, 2.3278000000001575e-05, 2.366699999999805e-05, 2.4040999999998952e-05, 2.366700000000152e-05, 2.4028000000002325e-05, 2.3264000000002005e-05, 2.3693999999997717e-05, 2.3264000000002005e-05, 2.3263999999998536e-05, 2.3666000000002047e-05, 2.365299999999848e-05, 2.408300000000113e-05, 2.3694000000001186e-05, 2.365299999999848e-05, 2.355500000000149e-05, 2.4013999999999286e-05, 2.3250000000002435e-05, 2.3249999999998966e-05, 2.3651999999999007e-05, 2.3597999999999675e-05, 2.3972000000000576e-05, 2.365299999999848e-05, 2.362499999999934e-05, 2.3221999999999826e-05, 2.3249999999998966e-05, 2.4026999999999382e-05, 2.363899999999891e-05, 2.3680000000001616e-05, 2.3708000000000756e-05, 2.3194000000000686e-05, 2.362499999999934e-05, 2.4026999999999382e-05, 2.4401999999999757e-05, 2.4026999999999382e-05, 2.4027999999998856e-05, 2.4068999999998092e-05, 2.4027999999998856e-05, 2.3264000000002005e-05, 2.329100000000167e-05, 2.362499999999934e-05, 2.4041999999998426e-05, 2.3264000000002005e-05, 2.3680000000001616e-05, 2.4027999999998856e-05, 2.363899999999891e-05, 2.365299999999848e-05, 2.4028000000002325e-05, 2.3277999999998106e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.504" endtime="20201030 11:51:33.507"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.500" endtime="20201030 11:51:33.508"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.512" endtime="20201030 11:51:33.531"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.510" endtime="20201030 11:51:33.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.509" endtime="20201030 11:51:33.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.154" endtime="20201030 11:51:33.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.153" endtime="20201030 11:51:33.532"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.541" endtime="20201030 11:51:33.555"></status>
</kw>
<msg timestamp="20201030 11:51:33.556" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.539" endtime="20201030 11:51:33.556"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.558" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_set 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.557" endtime="20201030 11:51:33.559"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.559" endtime="20201030 11:51:33.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.537" endtime="20201030 11:51:33.562"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.535" endtime="20201030 11:51:33.562"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.568" endtime="20201030 11:51:33.855"></status>
</kw>
<msg timestamp="20201030 11:51:33.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019302931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.567" endtime="20201030 11:51:33.858"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.866" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019302931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019327722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.859" endtime="20201030 11:51:33.867"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.867" endtime="20201030 11:51:33.869"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.564" endtime="20201030 11:51:33.870"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.563" endtime="20201030 11:51:33.870"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:33.874" level="INFO">${RESULT} = [{'diff': 2.4790999999999702e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.480500000000274e-05}, {'diff': 2.518099999999912e-05}, {'diff': 2.4790999999999702e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:33.871" endtime="20201030 11:51:33.874"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:33.879" level="INFO">${ACCURACY} = {'diff': [2.4790999999999702e-05, 2.440299999999923e-05, 2.518099999999912e-05, 2.480500000000274e-05, 2.518099999999912e-05, 2.4790999999999702e-05, 2.4443999999998467e-05, 2.440299999999923e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 11:51:33.875" endtime="20201030 11:51:33.879"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.883" level="INFO">NAME: accuracy-TIMER_SET-23-philip</msg>
<status status="PASS" starttime="20201030 11:51:33.882" endtime="20201030 11:51:33.884"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.886" level="INFO">VALUE: [2.4790999999999702e-05, 2.440299999999923e-05, 2.518099999999912e-05, 2.480500000000274e-05, 2.518099999999912e-05, 2.4790999999999702e-05, 2.4443999999998467e-05, 2.440299999999923e-05, 2.4458000000001506e-05, 2.440299999999923e-05, 2.518099999999912e-05, 2.4764000000000036e-05, 2.519499999999869e-05, 2.44030000000027e-05, 2.4443999999998467e-05, 2.516699999999955e-05, 2.4791999999999176e-05, 2.512500000000084e-05, 2.440299999999923e-05, 2.4735999999997427e-05, 2.440299999999923e-05, 2.4790999999999702e-05, 2.4791999999999176e-05, 2.4401999999999757e-05, 2.518099999999912e-05, 2.4791999999999176e-05, 2.44169999999988e-05, 2.4791999999999176e-05, 2.440299999999923e-05, 2.4804999999999272e-05, 2.5180000000003117e-05, 2.4792000000002645e-05, 2.4778000000003075e-05, 2.4790999999999702e-05, 2.4791999999999176e-05, 2.484700000000145e-05, 2.437500000000009e-05, 2.436100000000052e-05, 2.4402000000003227e-05, 2.440299999999923e-05, 2.518100000000259e-05, 2.52230000000013e-05, 2.5166000000000077e-05, 2.434700000000095e-05, 2.4791999999999176e-05, 2.4804999999999272e-05, 2.5179999999999647e-05, 2.516699999999955e-05, 2.4792000000002645e-05, 2.4832999999998412e-05]</msg>
<status status="PASS" starttime="20201030 11:51:33.884" endtime="20201030 11:51:33.887"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.880" endtime="20201030 11:51:33.887"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:33.891" endtime="20201030 11:51:33.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.889" endtime="20201030 11:51:33.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.888" endtime="20201030 11:51:33.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.533" endtime="20201030 11:51:33.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.533" endtime="20201030 11:51:33.911"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.920" endtime="20201030 11:51:33.935"></status>
</kw>
<msg timestamp="20201030 11:51:33.936" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.919" endtime="20201030 11:51:33.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:33.938" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_set 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:33.937" endtime="20201030 11:51:33.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.939" endtime="20201030 11:51:33.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.916" endtime="20201030 11:51:33.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.914" endtime="20201030 11:51:33.942"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:33.948" endtime="20201030 11:51:34.235"></status>
</kw>
<msg timestamp="20201030 11:51:34.239" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:33.947" endtime="20201030 11:51:34.239"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.247" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019342889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019368819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.240" endtime="20201030 11:51:34.247"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.248" endtime="20201030 11:51:34.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.944" endtime="20201030 11:51:34.250"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.943" endtime="20201030 11:51:34.251"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.254" level="INFO">${RESULT} = [{'diff': 2.5930000000000397e-05}, {'diff': 2.5528000000000356e-05}, {'diff': 2.5569999999999066e-05}, {'diff': 2.5541000000000452e-05}, {'diff': 2.593100000000334e-05}, {'diff': 2.5570000000002535e-0...</msg>
<status status="PASS" starttime="20201030 11:51:34.251" endtime="20201030 11:51:34.255"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.258" level="INFO">${ACCURACY} = {'diff': [2.5930000000000397e-05, 2.5528000000000356e-05, 2.5569999999999066e-05, 2.5541000000000452e-05, 2.593100000000334e-05, 2.5570000000002535e-05, 2.5929999999996928e-05, 2.55970000000022e-05, 2...</msg>
<status status="PASS" starttime="20201030 11:51:34.255" endtime="20201030 11:51:34.259"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.263" level="INFO">NAME: accuracy-TIMER_SET-24-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.262" endtime="20201030 11:51:34.263"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.265" level="INFO">VALUE: [2.5930000000000397e-05, 2.5528000000000356e-05, 2.5569999999999066e-05, 2.5541000000000452e-05, 2.593100000000334e-05, 2.5570000000002535e-05, 2.5929999999996928e-05, 2.55970000000022e-05, 2.5624999999997872e-05, 2.593099999999987e-05, 2.5916000000000827e-05, 2.562500000000134e-05, 2.5915999999997358e-05, 2.5943999999999967e-05, 2.513900000000041e-05, 2.5555000000000022e-05, 2.5916000000000827e-05, 2.5541999999999926e-05, 2.6236000000002396e-05, 2.513900000000041e-05, 2.515299999999998e-05, 2.562500000000134e-05, 2.5596999999998732e-05, 2.5568999999999592e-05, 2.6334000000002855e-05, 2.5555000000000022e-05, 2.59170000000003e-05, 2.5596999999998732e-05, 2.5930000000000397e-05, 2.5929999999996928e-05, 2.5555999999999496e-05, 2.518100000000259e-05, 2.5541999999999926e-05, 2.5500000000001216e-05, 2.5541999999999926e-05, 2.516699999999955e-05, 2.6305000000000772e-05, 2.5555999999999496e-05, 2.6319000000000342e-05, 2.593099999999987e-05, 2.5916000000000827e-05, 2.511100000000127e-05, 2.6306000000000246e-05, 2.5541999999999926e-05, 2.5541000000000452e-05, 2.6319000000000342e-05, 2.5528000000000356e-05, 2.556900000000306e-05, 2.6304999999997303e-05, 2.5514000000000786e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.264" endtime="20201030 11:51:34.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.259" endtime="20201030 11:51:34.267"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.270" endtime="20201030 11:51:34.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.269" endtime="20201030 11:51:34.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.268" endtime="20201030 11:51:34.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.912" endtime="20201030 11:51:34.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:33.912" endtime="20201030 11:51:34.291"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.300" endtime="20201030 11:51:34.316"></status>
</kw>
<msg timestamp="20201030 11:51:34.317" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.298" endtime="20201030 11:51:34.318"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.320" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_set 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.318" endtime="20201030 11:51:34.321"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.322" endtime="20201030 11:51:34.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.295" endtime="20201030 11:51:34.324"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.293" endtime="20201030 11:51:34.325"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.332" endtime="20201030 11:51:34.618"></status>
</kw>
<msg timestamp="20201030 11:51:34.621" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.331" endtime="20201030 11:51:34.622"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.630" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020760056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020786361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:34.622" endtime="20201030 11:51:34.630"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.631" endtime="20201030 11:51:34.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.328" endtime="20201030 11:51:34.633"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.326" endtime="20201030 11:51:34.634"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:34.637" level="INFO">${RESULT} = [{'diff': 2.6305000000000772e-05}, {'diff': 2.7083000000000662e-05}, {'diff': 2.6318999999996873e-05}, {'diff': 2.7069999999997096e-05}, {'diff': 2.7069000000001092e-05}, {'diff': 2.6735999999999427e-...</msg>
<status status="PASS" starttime="20201030 11:51:34.634" endtime="20201030 11:51:34.638"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:34.642" level="INFO">${ACCURACY} = {'diff': [2.6305000000000772e-05, 2.7083000000000662e-05, 2.6318999999996873e-05, 2.7069999999997096e-05, 2.7069000000001092e-05, 2.6735999999999427e-05, 2.715300000000198e-05, 2.6318999999996873e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:34.638" endtime="20201030 11:51:34.642"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.646" level="INFO">NAME: accuracy-TIMER_SET-25-philip</msg>
<status status="PASS" starttime="20201030 11:51:34.645" endtime="20201030 11:51:34.646"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.648" level="INFO">VALUE: [2.6305000000000772e-05, 2.7083000000000662e-05, 2.6318999999996873e-05, 2.7069999999997096e-05, 2.7069000000001092e-05, 2.6735999999999427e-05, 2.715300000000198e-05, 2.6318999999996873e-05, 2.669500000000019e-05, 2.7070000000000566e-05, 2.6319999999999816e-05, 2.7070000000000566e-05, 2.669500000000019e-05, 2.6306000000000246e-05, 2.668100000000062e-05, 2.6332999999999912e-05, 2.7040999999998483e-05, 2.6721999999999857e-05, 2.6332999999999912e-05, 2.7042000000001426e-05, 2.6306000000000246e-05, 2.7083000000000662e-05, 2.711100000000327e-05, 2.669500000000019e-05, 2.6721999999999857e-05, 2.6332999999999912e-05, 2.6694000000000717e-05, 2.7070000000000566e-05, 2.7097999999999706e-05, 2.6306000000000246e-05, 2.6305000000000772e-05, 2.6332999999999912e-05, 2.6319999999999816e-05, 2.7097000000000232e-05, 2.668100000000062e-05, 2.6319000000000342e-05, 2.7068999999997623e-05, 2.6610999999999302e-05, 2.670899999999976e-05, 2.6708000000000287e-05, 2.670899999999976e-05, 2.669500000000019e-05, 2.6708000000000287e-05, 2.7013999999998817e-05, 2.7083000000000662e-05, 2.7070000000000566e-05, 2.6708000000000287e-05, 2.7069000000001092e-05, 2.6735999999999427e-05, 2.7070000000000566e-05]</msg>
<status status="PASS" starttime="20201030 11:51:34.647" endtime="20201030 11:51:34.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.642" endtime="20201030 11:51:34.650"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:34.654" endtime="20201030 11:51:34.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.653" endtime="20201030 11:51:34.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.651" endtime="20201030 11:51:34.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.292" endtime="20201030 11:51:34.675"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.291" endtime="20201030 11:51:34.675"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.684" endtime="20201030 11:51:34.700"></status>
</kw>
<msg timestamp="20201030 11:51:34.701" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.682" endtime="20201030 11:51:34.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:34.703" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_set 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:34.702" endtime="20201030 11:51:34.703"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.704" endtime="20201030 11:51:34.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.680" endtime="20201030 11:51:34.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.677" endtime="20201030 11:51:34.707"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:34.713" endtime="20201030 11:51:35.000"></status>
</kw>
<msg timestamp="20201030 11:51:35.003" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02021075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:34.712" endtime="20201030 11:51:35.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020182528, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02021075, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:35.004" endtime="20201030 11:51:35.011"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.012" endtime="20201030 11:51:35.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.709" endtime="20201030 11:51:35.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.707" endtime="20201030 11:51:35.015"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.019" level="INFO">${RESULT} = [{'diff': 2.8221999999997888e-05}, {'diff': 2.7806000000001746e-05}, {'diff': 2.7457999999997568e-05}, {'diff': 2.7444000000001467e-05}, {'diff': 2.7472000000000607e-05}, {'diff': 2.7541999999998457e-...</msg>
<status status="PASS" starttime="20201030 11:51:35.015" endtime="20201030 11:51:35.019"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.024" level="INFO">${ACCURACY} = {'diff': [2.8221999999997888e-05, 2.7806000000001746e-05, 2.7457999999997568e-05, 2.7444000000001467e-05, 2.7472000000000607e-05, 2.7541999999998457e-05, 2.744500000000094e-05, 2.8222000000001357e-05,...</msg>
<status status="PASS" starttime="20201030 11:51:35.020" endtime="20201030 11:51:35.024"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.028" level="INFO">NAME: accuracy-TIMER_SET-26-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.027" endtime="20201030 11:51:35.029"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.031" level="INFO">VALUE: [2.8221999999997888e-05, 2.7806000000001746e-05, 2.7457999999997568e-05, 2.7444000000001467e-05, 2.7472000000000607e-05, 2.7541999999998457e-05, 2.744500000000094e-05, 2.8222000000001357e-05, 2.8152999999999512e-05, 2.7818999999998373e-05, 2.8221999999997888e-05, 2.7429999999998428e-05, 2.745900000000051e-05, 2.7847000000000982e-05, 2.7458000000001037e-05, 2.7848000000000456e-05, 2.7832999999997943e-05, 2.7457999999997568e-05, 2.819500000000169e-05, 2.8236000000000927e-05, 2.740299999999876e-05, 2.7458000000001037e-05, 2.7457999999997568e-05, 2.8165999999999608e-05, 2.743100000000137e-05, 2.7763999999999567e-05, 2.7458000000001037e-05, 2.7443999999997998e-05, 2.8207999999998318e-05, 2.745900000000051e-05, 2.8222000000001357e-05, 2.7847000000000982e-05, 2.7847000000000982e-05, 2.745900000000051e-05, 2.8207999999998318e-05, 2.745900000000051e-05, 2.7499999999999747e-05, 2.745900000000051e-05, 2.816699999999908e-05, 2.7444000000001467e-05, 2.744500000000094e-05, 2.7819999999997846e-05, 2.7847000000000982e-05, 2.7820000000001316e-05, 2.745900000000051e-05, 2.748699999999965e-05, 2.7777999999999137e-05, 2.8207999999998318e-05, 2.744500000000094e-05, 2.8207999999998318e-05]</msg>
<status status="PASS" starttime="20201030 11:51:35.029" endtime="20201030 11:51:35.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.024" endtime="20201030 11:51:35.032"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.036" endtime="20201030 11:51:35.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.034" endtime="20201030 11:51:35.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.033" endtime="20201030 11:51:35.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.676" endtime="20201030 11:51:35.056"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:34.675" endtime="20201030 11:51:35.056"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.065" endtime="20201030 11:51:35.081"></status>
</kw>
<msg timestamp="20201030 11:51:35.082" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.063" endtime="20201030 11:51:35.082"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_set 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.083" endtime="20201030 11:51:35.084"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.085" endtime="20201030 11:51:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.061" endtime="20201030 11:51:35.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.059" endtime="20201030 11:51:35.088"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.094" endtime="20201030 11:51:35.380"></status>
</kw>
<msg timestamp="20201030 11:51:35.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.093" endtime="20201030 11:51:35.384"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019890194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019918806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.385" endtime="20201030 11:51:35.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.393" endtime="20201030 11:51:35.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.090" endtime="20201030 11:51:35.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.088" endtime="20201030 11:51:35.395"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.399" level="INFO">${RESULT} = [{'diff': 2.8612000000000776e-05}, {'diff': 2.8597000000001732e-05}, {'diff': 2.9000000000001247e-05}, {'diff': 2.8971999999998638e-05}, {'diff': 2.9014000000000817e-05}, {'diff': 2.9028000000000387e-...</msg>
<status status="PASS" starttime="20201030 11:51:35.396" endtime="20201030 11:51:35.400"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.404" level="INFO">${ACCURACY} = {'diff': [2.8612000000000776e-05, 2.8597000000001732e-05, 2.9000000000001247e-05, 2.8971999999998638e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.8971999999998638e-05, 2.8639000000000442e-05...</msg>
<status status="PASS" starttime="20201030 11:51:35.400" endtime="20201030 11:51:35.404"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.408" level="INFO">NAME: accuracy-TIMER_SET-27-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.407" endtime="20201030 11:51:35.408"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.410" level="INFO">VALUE: [2.8612000000000776e-05, 2.8597000000001732e-05, 2.9000000000001247e-05, 2.8971999999998638e-05, 2.9014000000000817e-05, 2.9028000000000387e-05, 2.8971999999998638e-05, 2.8639000000000442e-05, 2.8972000000002107e-05, 2.8598000000001206e-05, 2.895899999999854e-05, 2.895899999999854e-05, 2.8971999999998638e-05, 2.8596999999998263e-05, 2.8221999999997888e-05, 2.9346999999999013e-05, 2.894499999999897e-05, 2.8666000000000108e-05, 2.8972000000002107e-05, 2.8986000000001677e-05, 2.8207999999998318e-05, 2.8596999999998263e-05, 2.8985999999998208e-05, 2.820899999999779e-05, 2.8611000000001302e-05, 2.8584000000001636e-05, 2.8624999999997403e-05, 2.8986000000001677e-05, 2.895900000000201e-05, 2.9278000000000637e-05, 2.8986000000001677e-05, 2.9361000000002052e-05, 2.9374999999998153e-05, 2.8999999999997778e-05, 2.8972000000002107e-05, 2.8972000000002107e-05, 2.8971999999998638e-05, 2.8971999999998638e-05, 2.8597000000001732e-05, 2.8638999999996972e-05, 2.9346999999999013e-05, 2.8889000000000692e-05, 2.8972000000002107e-05, 2.9334000000002386e-05, 2.8972000000002107e-05, 2.8958000000002537e-05, 2.8999999999997778e-05, 2.895899999999854e-05, 2.8971999999998638e-05, 2.8207999999998318e-05]</msg>
<status status="PASS" starttime="20201030 11:51:35.409" endtime="20201030 11:51:35.411"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.404" endtime="20201030 11:51:35.412"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.415" endtime="20201030 11:51:35.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.414" endtime="20201030 11:51:35.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.413" endtime="20201030 11:51:35.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.057" endtime="20201030 11:51:35.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.057" endtime="20201030 11:51:35.436"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.444" endtime="20201030 11:51:35.463"></status>
</kw>
<msg timestamp="20201030 11:51:35.463" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.443" endtime="20201030 11:51:35.463"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.466" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_set 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.464" endtime="20201030 11:51:35.466"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.467" endtime="20201030 11:51:35.468"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.440" endtime="20201030 11:51:35.469"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.438" endtime="20201030 11:51:35.469"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.476" endtime="20201030 11:51:35.762"></status>
</kw>
<msg timestamp="20201030 11:51:35.765" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.474" endtime="20201030 11:51:35.765"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.773" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022601917, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022632056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.766" endtime="20201030 11:51:35.773"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.774" endtime="20201030 11:51:35.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.472" endtime="20201030 11:51:35.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.470" endtime="20201030 11:51:35.777"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:35.781" level="INFO">${RESULT} = [{'diff': 3.0139000000001942e-05}, {'diff': 3.0110999999999333e-05}, {'diff': 2.9361000000002052e-05}, {'diff': 2.9360999999998583e-05}, {'diff': 3.0138999999998473e-05}, {'diff': 2.9750000000001997e-...</msg>
<status status="PASS" starttime="20201030 11:51:35.777" endtime="20201030 11:51:35.781"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:35.785" level="INFO">${ACCURACY} = {'diff': [3.0139000000001942e-05, 3.0110999999999333e-05, 2.9361000000002052e-05, 2.9360999999998583e-05, 3.0138999999998473e-05, 2.9750000000001997e-05, 2.9362000000001526e-05, 2.9360999999998583e-05...</msg>
<status status="PASS" starttime="20201030 11:51:35.782" endtime="20201030 11:51:35.785"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.789" level="INFO">NAME: accuracy-TIMER_SET-28-philip</msg>
<status status="PASS" starttime="20201030 11:51:35.788" endtime="20201030 11:51:35.789"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.792" level="INFO">VALUE: [3.0139000000001942e-05, 3.0110999999999333e-05, 2.9361000000002052e-05, 2.9360999999998583e-05, 3.0138999999998473e-05, 2.9750000000001997e-05, 2.9362000000001526e-05, 2.9360999999998583e-05, 2.9735999999998958e-05, 2.9721999999999388e-05, 3.0083000000000193e-05, 2.9361000000002052e-05, 3.0124999999998903e-05, 2.9721999999999388e-05, 2.9347000000002482e-05, 2.9722000000002857e-05, 2.9360999999998583e-05, 2.9360999999998583e-05, 2.9722000000002857e-05, 2.9792000000000707e-05, 3.0111000000002802e-05, 2.9763999999998098e-05, 2.9346999999999013e-05, 2.9736000000002427e-05, 2.9735999999998958e-05, 2.9750000000001997e-05, 2.9375000000001622e-05, 2.9750000000001997e-05, 2.9292000000000207e-05, 2.9750000000001997e-05, 2.9735999999998958e-05, 3.0124999999998903e-05, 3.0096999999999763e-05, 3.0110999999999333e-05, 2.9347999999998486e-05, 3.0124999999998903e-05, 3.020899999999979e-05, 2.9735999999998958e-05, 2.9403000000000762e-05, 2.9347999999998486e-05, 2.9722000000002857e-05, 3.0125000000002372e-05, 2.9361000000002052e-05, 3.0124999999998903e-05, 3.0110999999999333e-05, 2.9360999999998583e-05, 3.017999999999771e-05, 2.9347000000002482e-05, 2.9361000000002052e-05, 2.9750000000001997e-05]</msg>
<status status="PASS" starttime="20201030 11:51:35.790" endtime="20201030 11:51:35.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.786" endtime="20201030 11:51:35.794"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:35.797" endtime="20201030 11:51:35.817"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.796" endtime="20201030 11:51:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.795" endtime="20201030 11:51:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.437" endtime="20201030 11:51:35.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.436" endtime="20201030 11:51:35.818"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.827" endtime="20201030 11:51:35.843"></status>
</kw>
<msg timestamp="20201030 11:51:35.844" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.825" endtime="20201030 11:51:35.844"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:35.846" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_set 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:35.845" endtime="20201030 11:51:35.846"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.847" endtime="20201030 11:51:35.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.823" endtime="20201030 11:51:35.849"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.821" endtime="20201030 11:51:35.850"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:35.856" endtime="20201030 11:51:36.141"></status>
</kw>
<msg timestamp="20201030 11:51:36.144" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:35.854" endtime="20201030 11:51:36.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.152" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020006667, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020037167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.145" endtime="20201030 11:51:36.153"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.154" endtime="20201030 11:51:36.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.852" endtime="20201030 11:51:36.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.850" endtime="20201030 11:51:36.156"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.160" level="INFO">${RESULT} = [{'diff': 3.0500000000002747e-05}, {'diff': 3.0472000000000138e-05}, {'diff': 3.087500000000312e-05}, {'diff': 3.088799999999975e-05}, {'diff': 3.090300000000226e-05}, {'diff': 3.087500000000312e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:36.157" endtime="20201030 11:51:36.160"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.165" level="INFO">${ACCURACY} = {'diff': [3.0500000000002747e-05, 3.0472000000000138e-05, 3.087500000000312e-05, 3.088799999999975e-05, 3.090300000000226e-05, 3.087500000000312e-05, 3.12639999999996e-05, 3.0110999999999333e-05, 3.04...</msg>
<status status="PASS" starttime="20201030 11:51:36.161" endtime="20201030 11:51:36.165"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.169" level="INFO">NAME: accuracy-TIMER_SET-29-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.168" endtime="20201030 11:51:36.170"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.172" level="INFO">VALUE: [3.0500000000002747e-05, 3.0472000000000138e-05, 3.087500000000312e-05, 3.088799999999975e-05, 3.090300000000226e-05, 3.087500000000312e-05, 3.12639999999996e-05, 3.0110999999999333e-05, 3.044500000000047e-05, 3.0499999999999278e-05, 3.091600000000236e-05, 3.054199999999799e-05, 3.0499999999999278e-05, 3.088899999999922e-05, 3.088899999999922e-05, 3.0458000000000568e-05, 3.0138999999998473e-05, 3.0499999999999278e-05, 3.0499999999999278e-05, 3.088899999999922e-05, 3.127800000000264e-05, 3.0485999999999708e-05, 3.0444000000000998e-05, 3.0485999999999708e-05, 3.0499999999999278e-05, 3.127800000000264e-05, 3.087499999999965e-05, 3.0499999999999278e-05, 3.127799999999917e-05, 3.087499999999965e-05, 3.056900000000112e-05, 3.0472000000000138e-05, 3.0499999999999278e-05, 3.087499999999965e-05, 3.052800000000189e-05, 3.0499999999999278e-05, 3.088899999999922e-05, 3.125000000000003e-05, 3.0500000000002747e-05, 3.094500000000097e-05, 3.088900000000269e-05, 3.0485999999999708e-05, 3.125000000000003e-05, 3.093000000000193e-05, 3.088900000000269e-05, 3.0124999999998903e-05, 3.086100000000008e-05, 3.125000000000003e-05, 3.09310000000014e-05, 3.052800000000189e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.170" endtime="20201030 11:51:36.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.166" endtime="20201030 11:51:36.173"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.177" endtime="20201030 11:51:36.196"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.175" endtime="20201030 11:51:36.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.174" endtime="20201030 11:51:36.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.819" endtime="20201030 11:51:36.197"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:35.819" endtime="20201030 11:51:36.198"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.206" endtime="20201030 11:51:36.221"></status>
</kw>
<msg timestamp="20201030 11:51:36.222" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.204" endtime="20201030 11:51:36.222"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.224" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_set 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.223" endtime="20201030 11:51:36.224"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.225" endtime="20201030 11:51:36.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.202" endtime="20201030 11:51:36.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.200" endtime="20201030 11:51:36.228"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.234" endtime="20201030 11:51:36.521"></status>
</kw>
<msg timestamp="20201030 11:51:36.524" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.233" endtime="20201030 11:51:36.525"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.533" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019312958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019347653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.525" endtime="20201030 11:51:36.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.534" endtime="20201030 11:51:36.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.230" endtime="20201030 11:51:36.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.228" endtime="20201030 11:51:36.537"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.540" level="INFO">${RESULT} = [{'diff': 3.469499999999778e-05}, {'diff': 3.4638999999999504e-05}, {'diff': 3.4445000000001e-05}, {'diff': 3.505600000000206e-05}, {'diff': 3.454199999999852e-05}, {'diff': 3.533400000000145e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:36.537" endtime="20201030 11:51:36.541"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.545" level="INFO">${ACCURACY} = {'diff': [3.469499999999778e-05, 3.4638999999999504e-05, 3.4445000000001e-05, 3.505600000000206e-05, 3.454199999999852e-05, 3.533400000000145e-05, 3.476399999999963e-05, 3.5277000000000225e-05, 3.4763...</msg>
<status status="PASS" starttime="20201030 11:51:36.541" endtime="20201030 11:51:36.545"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.549" level="INFO">NAME: accuracy-TIMER_SET-30-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.548" endtime="20201030 11:51:36.549"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.551" level="INFO">VALUE: [3.469499999999778e-05, 3.4638999999999504e-05, 3.4445000000001e-05, 3.505600000000206e-05, 3.454199999999852e-05, 3.533400000000145e-05, 3.476399999999963e-05, 3.5277000000000225e-05, 3.4763000000000155e-05, 3.4554999999998615e-05, 3.5304999999999365e-05, 3.4402999999998823e-05, 3.4888999999999754e-05, 3.495799999999813e-05, 3.448600000000024e-05, 3.469400000000178e-05, 3.5054999999999115e-05, 3.517999999999924e-05, 3.45840000000007e-05, 3.5125000000000434e-05, 3.5361000000001114e-05, 3.452800000000242e-05, 3.457000000000113e-05, 3.526400000000013e-05, 3.49719999999977e-05, 3.473600000000049e-05, 3.440300000000229e-05, 3.4875000000000184e-05, 3.525000000000056e-05, 3.519500000000175e-05, 3.495900000000107e-05, 3.542999999999949e-05, 3.507000000000163e-05, 3.4611000000000364e-05, 3.5319000000002404e-05, 3.5139000000000004e-05, 3.495799999999813e-05, 3.5166999999999143e-05, 3.4776999999999725e-05, 3.5082999999998254e-05, 3.52779999999997e-05, 3.4624999999999934e-05, 3.476399999999963e-05, 3.498600000000074e-05, 3.4611000000000364e-05, 3.501399999999988e-05, 3.5166999999999143e-05, 3.495799999999813e-05, 3.4875000000000184e-05, 3.529200000000274e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.550" endtime="20201030 11:51:36.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.545" endtime="20201030 11:51:36.553"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.556" endtime="20201030 11:51:36.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.555" endtime="20201030 11:51:36.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.554" endtime="20201030 11:51:36.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.198" endtime="20201030 11:51:36.577"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.198" endtime="20201030 11:51:36.577"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.586" endtime="20201030 11:51:36.602"></status>
</kw>
<msg timestamp="20201030 11:51:36.602" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.584" endtime="20201030 11:51:36.602"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.605" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_set 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.603" endtime="20201030 11:51:36.605"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.606" endtime="20201030 11:51:36.607"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.582" endtime="20201030 11:51:36.608"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.579" endtime="20201030 11:51:36.608"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.615" endtime="20201030 11:51:36.900"></status>
</kw>
<msg timestamp="20201030 11:51:36.903" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.613" endtime="20201030 11:51:36.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.912" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020439986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020475583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.904" endtime="20201030 11:51:36.912"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.913" endtime="20201030 11:51:36.914"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.611" endtime="20201030 11:51:36.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.609" endtime="20201030 11:51:36.915"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:36.919" level="INFO">${RESULT} = [{'diff': 3.5596999999998324e-05}, {'diff': 3.569399999999931e-05}, {'diff': 3.618000000000024e-05}, {'diff': 3.5389000000000254e-05}, {'diff': 3.5804999999999865e-05}, {'diff': 3.619399999999981e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:36.916" endtime="20201030 11:51:36.919"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:36.923" level="INFO">${ACCURACY} = {'diff': [3.5596999999998324e-05, 3.569399999999931e-05, 3.618000000000024e-05, 3.5389000000000254e-05, 3.5804999999999865e-05, 3.619399999999981e-05, 3.620800000000285e-05, 3.626400000000113e-05, 3.6...</msg>
<status status="PASS" starttime="20201030 11:51:36.920" endtime="20201030 11:51:36.924"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.928" level="INFO">NAME: accuracy-TIMER_SET-31-philip</msg>
<status status="PASS" starttime="20201030 11:51:36.927" endtime="20201030 11:51:36.928"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.930" level="INFO">VALUE: [3.5596999999998324e-05, 3.569399999999931e-05, 3.618000000000024e-05, 3.5389000000000254e-05, 3.5804999999999865e-05, 3.619399999999981e-05, 3.620800000000285e-05, 3.626400000000113e-05, 3.6125000000001434e-05, 3.554199999999952e-05, 3.573600000000149e-05, 3.5889000000000754e-05, 3.599999999999784e-05, 3.59450000000025e-05, 3.599999999999784e-05, 3.613800000000153e-05, 3.57780000000002e-05, 3.6124999999997964e-05, 3.5875000000001184e-05, 3.598699999999774e-05, 3.574999999999759e-05, 3.5875000000001184e-05, 3.5527000000000475e-05, 3.5625000000000934e-05, 3.6318999999999935e-05, 3.5582999999998755e-05, 3.6055000000000115e-05, 3.5889000000000754e-05, 3.624999999999809e-05, 3.551400000000038e-05, 3.594399999999956e-05, 3.5375000000000684e-05, 3.5846999999998574e-05, 3.5610999999997894e-05, 3.5625000000000934e-05, 3.626400000000113e-05, 3.600000000000131e-05, 3.568099999999921e-05, 3.630599999999984e-05, 3.572200000000192e-05, 3.5861000000001614e-05, 3.581999999999891e-05, 3.5889000000000754e-05, 3.62780000000007e-05, 3.592999999999999e-05, 3.561200000000084e-05, 3.620799999999938e-05, 3.6096999999998824e-05, 3.6027000000000975e-05, 3.57780000000002e-05]</msg>
<status status="PASS" starttime="20201030 11:51:36.929" endtime="20201030 11:51:36.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.924" endtime="20201030 11:51:36.932"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:36.936" endtime="20201030 11:51:36.955"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.935" endtime="20201030 11:51:36.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.933" endtime="20201030 11:51:36.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.578" endtime="20201030 11:51:36.957"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.577" endtime="20201030 11:51:36.957"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.965" endtime="20201030 11:51:36.982"></status>
</kw>
<msg timestamp="20201030 11:51:36.983" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.964" endtime="20201030 11:51:36.983"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:36.985" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_set 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:36.984" endtime="20201030 11:51:36.985"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.986" endtime="20201030 11:51:36.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.961" endtime="20201030 11:51:36.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.959" endtime="20201030 11:51:36.989"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:36.995" endtime="20201030 11:51:37.281"></status>
</kw>
<msg timestamp="20201030 11:51:37.284" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:36.993" endtime="20201030 11:51:37.284"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.292" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019907361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.285" endtime="20201030 11:51:37.293"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.294" endtime="20201030 11:51:37.295"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.991" endtime="20201030 11:51:37.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.989" endtime="20201030 11:51:37.296"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.300" level="INFO">${RESULT} = [{'diff': 3.677799999999773e-05}, {'diff': 3.6917000000000894e-05}, {'diff': 3.724999999999909e-05}, {'diff': 3.6403000000000824e-05}, {'diff': 3.6667000000000644e-05}, {'diff': 3.6596999999999325e-05...</msg>
<status status="PASS" starttime="20201030 11:51:37.297" endtime="20201030 11:51:37.300"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.305" level="INFO">${ACCURACY} = {'diff': [3.677799999999773e-05, 3.6917000000000894e-05, 3.724999999999909e-05, 3.6403000000000824e-05, 3.6667000000000644e-05, 3.6596999999999325e-05, 3.727799999999823e-05, 3.720899999999985e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:37.301" endtime="20201030 11:51:37.305"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.310" level="INFO">NAME: accuracy-TIMER_SET-32-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.309" endtime="20201030 11:51:37.310"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.312" level="INFO">VALUE: [3.677799999999773e-05, 3.6917000000000894e-05, 3.724999999999909e-05, 3.6403000000000824e-05, 3.6667000000000644e-05, 3.6596999999999325e-05, 3.727799999999823e-05, 3.720899999999985e-05, 3.674999999999859e-05, 3.7360999999999644e-05, 3.726399999999866e-05, 3.7360999999999644e-05, 3.670899999999935e-05, 3.657000000000313e-05, 3.6389000000001254e-05, 3.6875000000002184e-05, 3.6846999999999575e-05, 3.699999999999884e-05, 3.7041000000001545e-05, 3.6402999999997354e-05, 3.7110999999999394e-05, 3.730600000000084e-05, 3.704200000000102e-05, 3.676399999999816e-05, 3.6403000000000824e-05, 3.698599999999927e-05, 3.6417000000000394e-05, 3.7347000000000075e-05, 3.722299999999942e-05, 3.695799999999666e-05, 3.7166999999997674e-05, 3.681999999999991e-05, 3.647299999999867e-05, 3.670899999999935e-05, 3.680600000000034e-05, 3.691599999999795e-05, 3.680600000000034e-05, 3.701399999999841e-05, 3.655600000000009e-05, 3.651399999999791e-05, 3.66520000000016e-05, 3.644400000000006e-05, 3.6819000000000435e-05, 3.727799999999823e-05, 3.640199999999788e-05, 3.673599999999902e-05, 3.72919999999978e-05, 3.724999999999909e-05, 3.695799999999666e-05, 3.6930999999996994e-05]</msg>
<status status="PASS" starttime="20201030 11:51:37.311" endtime="20201030 11:51:37.313"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.306" endtime="20201030 11:51:37.313"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.317" endtime="20201030 11:51:37.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.315" endtime="20201030 11:51:37.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.314" endtime="20201030 11:51:37.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.958" endtime="20201030 11:51:37.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:36.957" endtime="20201030 11:51:37.338"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.346" endtime="20201030 11:51:37.363"></status>
</kw>
<msg timestamp="20201030 11:51:37.364" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.345" endtime="20201030 11:51:37.364"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.366" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_set 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.365" endtime="20201030 11:51:37.367"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.367" endtime="20201030 11:51:37.369"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.342" endtime="20201030 11:51:37.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.340" endtime="20201030 11:51:37.370"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.377" endtime="20201030 11:51:37.663"></status>
</kw>
<msg timestamp="20201030 11:51:37.666" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.375" endtime="20201030 11:51:37.666"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.674" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019960778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019999069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.667" endtime="20201030 11:51:37.675"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.675" endtime="20201030 11:51:37.677"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.373" endtime="20201030 11:51:37.678"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.371" endtime="20201030 11:51:37.678"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:37.682" level="INFO">${RESULT} = [{'diff': 3.8291000000002795e-05}, {'diff': 3.751399999999891e-05}, {'diff': 3.738799999999931e-05}, {'diff': 3.790199999999938e-05}, {'diff': 3.7804999999998395e-05}, {'diff': 3.8097000000000825e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:37.679" endtime="20201030 11:51:37.682"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:37.686" level="INFO">${ACCURACY} = {'diff': [3.8291000000002795e-05, 3.751399999999891e-05, 3.738799999999931e-05, 3.790199999999938e-05, 3.7804999999998395e-05, 3.8097000000000825e-05, 3.7624999999999464e-05, 3.773600000000002e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:51:37.683" endtime="20201030 11:51:37.686"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.691" level="INFO">NAME: accuracy-TIMER_SET-33-philip</msg>
<status status="PASS" starttime="20201030 11:51:37.690" endtime="20201030 11:51:37.691"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.693" level="INFO">VALUE: [3.8291000000002795e-05, 3.751399999999891e-05, 3.738799999999931e-05, 3.790199999999938e-05, 3.7804999999998395e-05, 3.8097000000000825e-05, 3.7624999999999464e-05, 3.773600000000002e-05, 3.8110999999996925e-05, 3.7597000000000325e-05, 3.745800000000063e-05, 3.8333000000001505e-05, 3.8332999999998035e-05, 3.7818999999997965e-05, 3.795799999999766e-05, 3.798600000000027e-05, 3.7625000000002934e-05, 3.776400000000263e-05, 3.758400000000023e-05, 3.8152999999999104e-05, 3.8167000000002144e-05, 3.7666999999998174e-05, 3.752799999999848e-05, 3.757000000000066e-05, 3.7375000000002684e-05, 3.8111000000000395e-05, 3.818000000000224e-05, 3.791600000000242e-05, 3.7902999999998854e-05, 3.7874999999999714e-05, 3.7818999999997965e-05, 3.795800000000113e-05, 3.8290999999999326e-05, 3.8111000000000395e-05, 3.7652999999998604e-05, 3.7403000000001824e-05, 3.7374999999999214e-05, 3.8111000000000395e-05, 3.7903000000002324e-05, 3.8111000000000395e-05, 3.7597000000000325e-05, 3.772299999999992e-05, 3.774999999999959e-05, 3.7388999999998784e-05, 3.8181000000001714e-05, 3.773600000000002e-05, 3.7931000000001464e-05, 3.752800000000195e-05, 3.8167000000002144e-05, 3.8026999999999506e-05]</msg>
<status status="PASS" starttime="20201030 11:51:37.692" endtime="20201030 11:51:37.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.687" endtime="20201030 11:51:37.698"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:37.702" endtime="20201030 11:51:37.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.701" endtime="20201030 11:51:37.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.699" endtime="20201030 11:51:37.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.339" endtime="20201030 11:51:37.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.338" endtime="20201030 11:51:37.723"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.731" endtime="20201030 11:51:37.748"></status>
</kw>
<msg timestamp="20201030 11:51:37.749" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.730" endtime="20201030 11:51:37.749"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:37.751" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_set 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:37.750" endtime="20201030 11:51:37.751"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.752" endtime="20201030 11:51:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.727" endtime="20201030 11:51:37.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.725" endtime="20201030 11:51:37.755"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:37.761" endtime="20201030 11:51:38.047"></status>
</kw>
<msg timestamp="20201030 11:51:38.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020658806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:37.760" endtime="20201030 11:51:38.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020658806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020697444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.051" endtime="20201030 11:51:38.058"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.059" endtime="20201030 11:51:38.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.757" endtime="20201030 11:51:38.061"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.755" endtime="20201030 11:51:38.061"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.065" level="INFO">${RESULT} = [{'diff': 3.863800000000056e-05}, {'diff': 3.9124999999997495e-05}, {'diff': 3.9139000000000534e-05}, {'diff': 3.8375000000000214e-05}, {'diff': 3.924999999999762e-05}, {'diff': 3.9125000000000965e-05...</msg>
<status status="PASS" starttime="20201030 11:51:38.062" endtime="20201030 11:51:38.066"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.070" level="INFO">${ACCURACY} = {'diff': [3.863800000000056e-05, 3.9124999999997495e-05, 3.9139000000000534e-05, 3.8375000000000214e-05, 3.924999999999762e-05, 3.9125000000000965e-05, 3.9139000000000534e-05, 3.901400000000041e-05, 3...</msg>
<status status="PASS" starttime="20201030 11:51:38.066" endtime="20201030 11:51:38.070"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.074" level="INFO">NAME: accuracy-TIMER_SET-34-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.073" endtime="20201030 11:51:38.074"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.076" level="INFO">VALUE: [3.863800000000056e-05, 3.9124999999997495e-05, 3.9139000000000534e-05, 3.8375000000000214e-05, 3.924999999999762e-05, 3.9125000000000965e-05, 3.9139000000000534e-05, 3.901400000000041e-05, 3.845800000000163e-05, 3.844399999999859e-05, 3.84720000000012e-05, 3.919400000000281e-05, 3.86659999999997e-05, 3.867999999999927e-05, 3.902799999999998e-05, 3.930599999999937e-05, 3.8694999999998314e-05, 3.877799999999973e-05, 3.87780000000032e-05, 3.879200000000277e-05, 3.923600000000152e-05, 3.9180999999999244e-05, 3.930599999999937e-05, 3.895799999999866e-05, 3.8527000000000006e-05, 3.930599999999937e-05, 3.925000000000109e-05, 3.872300000000092e-05, 3.9153000000000104e-05, 3.9153000000000104e-05, 3.89720000000017e-05, 3.875000000000059e-05, 3.873600000000102e-05, 3.8875000000000715e-05, 3.875000000000059e-05, 3.850000000000034e-05, 3.8625000000000465e-05, 3.84720000000012e-05, 3.9332999999999035e-05, 3.8861000000001145e-05, 3.8902999999999854e-05, 3.8652999999999604e-05, 3.9110999999997925e-05, 3.8639000000000034e-05, 3.901400000000041e-05, 3.857000000000166e-05, 3.876400000000016e-05, 3.908400000000173e-05, 3.847300000000067e-05, 3.882000000000191e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.075" endtime="20201030 11:51:38.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.070" endtime="20201030 11:51:38.078"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.082" endtime="20201030 11:51:38.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.081" endtime="20201030 11:51:38.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.079" endtime="20201030 11:51:38.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.724" endtime="20201030 11:51:38.103"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:37.723" endtime="20201030 11:51:38.103"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.111" endtime="20201030 11:51:38.126"></status>
</kw>
<msg timestamp="20201030 11:51:38.127" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.110" endtime="20201030 11:51:38.127"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.129" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_set 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.128" endtime="20201030 11:51:38.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.130" endtime="20201030 11:51:38.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.107" endtime="20201030 11:51:38.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.105" endtime="20201030 11:51:38.133"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.139" endtime="20201030 11:51:38.425"></status>
</kw>
<msg timestamp="20201030 11:51:38.428" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.138" endtime="20201030 11:51:38.428"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.436" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019386972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019426472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.429" endtime="20201030 11:51:38.437"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.438" endtime="20201030 11:51:38.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.135" endtime="20201030 11:51:38.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.133" endtime="20201030 11:51:38.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.444" level="INFO">${RESULT} = [{'diff': 3.950000000000134e-05}, {'diff': 3.9903000000000854e-05}, {'diff': 4.016599999999773e-05}, {'diff': 3.9875000000001715e-05}, {'diff': 3.94720000000022e-05}, {'diff': 3.995799999999966e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:38.441" endtime="20201030 11:51:38.444"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.449" level="INFO">${ACCURACY} = {'diff': [3.950000000000134e-05, 3.9903000000000854e-05, 4.016599999999773e-05, 3.9875000000001715e-05, 3.94720000000022e-05, 3.995799999999966e-05, 3.9903000000000854e-05, 4.026399999999819e-05, 3.98...</msg>
<status status="PASS" starttime="20201030 11:51:38.445" endtime="20201030 11:51:38.449"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.453" level="INFO">NAME: accuracy-TIMER_SET-35-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.452" endtime="20201030 11:51:38.454"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.456" level="INFO">VALUE: [3.950000000000134e-05, 3.9903000000000854e-05, 4.016599999999773e-05, 3.9875000000001715e-05, 3.94720000000022e-05, 3.995799999999966e-05, 3.9903000000000854e-05, 4.026399999999819e-05, 3.9875000000001715e-05, 3.9403000000000354e-05, 3.9930999999999994e-05, 4.0208999999999384e-05, 3.976400000000116e-05, 3.9694999999999314e-05, 3.969399999999984e-05, 3.974999999999812e-05, 3.961200000000137e-05, 4.033399999999951e-05, 3.9875000000001715e-05, 4.0110999999998925e-05, 4.0041000000001076e-05, 3.973599999999855e-05, 4.001399999999794e-05, 4.0055000000000646e-05, 3.9625000000001465e-05, 4.005600000000012e-05, 3.9791000000000826e-05, 3.9611000000001895e-05, 3.9903000000000854e-05, 3.980599999999987e-05, 3.997199999999923e-05, 4.022199999999948e-05, 3.973600000000202e-05, 3.9694999999999314e-05, 3.9667000000000174e-05, 3.9680999999999744e-05, 4.02920000000008e-05, 3.955599999999962e-05, 4.0305000000000896e-05, 3.9486999999997774e-05, 3.9874999999998245e-05, 3.9722999999998454e-05, 4.0124999999998495e-05, 3.9777000000001256e-05, 3.9624999999997995e-05, 3.9791000000000826e-05, 3.9805000000000396e-05, 4.001400000000141e-05, 3.959799999999833e-05, 3.9917000000000424e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.454" endtime="20201030 11:51:38.456"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.450" endtime="20201030 11:51:38.457"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.461" endtime="20201030 11:51:38.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.459" endtime="20201030 11:51:38.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.458" endtime="20201030 11:51:38.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.104" endtime="20201030 11:51:38.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.103" endtime="20201030 11:51:38.481"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.490" endtime="20201030 11:51:38.506"></status>
</kw>
<msg timestamp="20201030 11:51:38.507" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.489" endtime="20201030 11:51:38.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.509" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_set 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.508" endtime="20201030 11:51:38.509"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.510" endtime="20201030 11:51:38.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.486" endtime="20201030 11:51:38.512"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.484" endtime="20201030 11:51:38.513"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.519" endtime="20201030 11:51:38.805"></status>
</kw>
<msg timestamp="20201030 11:51:38.808" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.518" endtime="20201030 11:51:38.808"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.816" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020067167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020107958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.809" endtime="20201030 11:51:38.817"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.818" endtime="20201030 11:51:38.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.515" endtime="20201030 11:51:38.820"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.513" endtime="20201030 11:51:38.820"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:38.824" level="INFO">${RESULT} = [{'diff': 4.0790999999998356e-05}, {'diff': 4.1346999999997136e-05}, {'diff': 4.041599999999798e-05}, {'diff': 4.0805000000001396e-05}, {'diff': 4.1110999999999925e-05}, {'diff': 4.1138999999999065e-0...</msg>
<status status="PASS" starttime="20201030 11:51:38.821" endtime="20201030 11:51:38.824"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:38.828" level="INFO">${ACCURACY} = {'diff': [4.0790999999998356e-05, 4.1346999999997136e-05, 4.041599999999798e-05, 4.0805000000001396e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.045800000000016e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:38.825" endtime="20201030 11:51:38.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.833" level="INFO">NAME: accuracy-TIMER_SET-36-philip</msg>
<status status="PASS" starttime="20201030 11:51:38.832" endtime="20201030 11:51:38.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.835" level="INFO">VALUE: [4.0790999999998356e-05, 4.1346999999997136e-05, 4.041599999999798e-05, 4.0805000000001396e-05, 4.1110999999999925e-05, 4.1138999999999065e-05, 4.1153000000002105e-05, 4.045800000000016e-05, 4.0860999999999675e-05, 4.107000000000069e-05, 4.1181000000001244e-05, 4.1209000000000384e-05, 4.084799999999958e-05, 4.1167000000001674e-05, 4.081999999999697e-05, 4.0667000000001174e-05, 4.097200000000023e-05, 4.102800000000198e-05, 4.0819000000000966e-05, 4.074999999999912e-05, 4.073599999999955e-05, 4.06660000000017e-05, 4.1027000000002506e-05, 4.074999999999912e-05, 4.070800000000041e-05, 4.099999999999937e-05, 4.126399999999919e-05, 4.1167000000001674e-05, 4.0818999999997496e-05, 4.054200000000105e-05, 4.057000000000019e-05, 4.082000000000044e-05, 4.0402999999997885e-05, 4.051400000000191e-05, 4.141600000000245e-05, 4.1402999999998885e-05, 4.0902999999998385e-05, 4.0888999999998815e-05, 4.097200000000023e-05, 4.12920000000018e-05, 4.077800000000173e-05, 4.1290999999998856e-05, 4.0526999999998536e-05, 4.119399999999787e-05, 4.0375000000002215e-05, 4.0403000000001354e-05, 4.124999999999962e-05, 4.1304999999998426e-05, 4.1304999999998426e-05, 4.094400000000109e-05]</msg>
<status status="PASS" starttime="20201030 11:51:38.834" endtime="20201030 11:51:38.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.829" endtime="20201030 11:51:38.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:38.840" endtime="20201030 11:51:38.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.839" endtime="20201030 11:51:38.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.837" endtime="20201030 11:51:38.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.482" endtime="20201030 11:51:38.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.482" endtime="20201030 11:51:38.861"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.869" endtime="20201030 11:51:38.888"></status>
</kw>
<msg timestamp="20201030 11:51:38.888" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.868" endtime="20201030 11:51:38.888"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:38.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_set 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:38.889" endtime="20201030 11:51:38.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.892" endtime="20201030 11:51:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.865" endtime="20201030 11:51:38.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.863" endtime="20201030 11:51:38.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:38.901" endtime="20201030 11:51:39.187"></status>
</kw>
<msg timestamp="20201030 11:51:39.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:38.900" endtime="20201030 11:51:39.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022527306, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022569278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.191" endtime="20201030 11:51:39.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.199" endtime="20201030 11:51:39.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.897" endtime="20201030 11:51:39.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.895" endtime="20201030 11:51:39.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.206" level="INFO">${RESULT} = [{'diff': 4.197200000000123e-05}, {'diff': 4.152799999999901e-05}, {'diff': 4.236200000000065e-05}, {'diff': 4.172200000000098e-05}, {'diff': 4.1776999999999787e-05}, {'diff': 4.158400000000076e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.203" endtime="20201030 11:51:39.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.210" level="INFO">${ACCURACY} = {'diff': [4.197200000000123e-05, 4.152799999999901e-05, 4.236200000000065e-05, 4.172200000000098e-05, 4.1776999999999787e-05, 4.158400000000076e-05, 4.2347000000001606e-05, 4.170799999999794e-05, 4.23...</msg>
<status status="PASS" starttime="20201030 11:51:39.207" endtime="20201030 11:51:39.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.214" level="INFO">NAME: accuracy-TIMER_SET-37-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.213" endtime="20201030 11:51:39.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.217" level="INFO">VALUE: [4.197200000000123e-05, 4.152799999999901e-05, 4.236200000000065e-05, 4.172200000000098e-05, 4.1776999999999787e-05, 4.158400000000076e-05, 4.2347000000001606e-05, 4.170799999999794e-05, 4.2318999999998996e-05, 4.202799999999951e-05, 4.173599999999708e-05, 4.183400000000101e-05, 4.1611000000000425e-05, 4.2040999999999606e-05, 4.2152999999999635e-05, 4.1666999999998705e-05, 4.144399999999812e-05, 4.2082999999998316e-05, 4.201399999999994e-05, 4.177799999999926e-05, 4.1375000000003215e-05, 4.175000000000012e-05, 4.2166999999999205e-05, 4.173600000000055e-05, 4.231999999999847e-05, 4.2125000000000495e-05, 4.2125000000000495e-05, 4.1987000000000274e-05, 4.2319000000002466e-05, 4.192999999999905e-05, 4.145800000000116e-05, 4.1819000000001966e-05, 4.192999999999905e-05, 4.2361000000001175e-05, 4.1638999999999565e-05, 4.152799999999901e-05, 4.1431000000001494e-05, 4.2125000000000495e-05, 4.2152999999999635e-05, 4.230600000000237e-05, 4.1875000000000245e-05, 4.173600000000055e-05, 4.2361000000001175e-05, 4.1638999999999565e-05, 4.205599999999865e-05, 4.1388999999999315e-05, 4.2125000000000495e-05, 4.1790999999999356e-05, 4.1486999999999774e-05, 4.175000000000012e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.215" endtime="20201030 11:51:39.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.211" endtime="20201030 11:51:39.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.222" endtime="20201030 11:51:39.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.221" endtime="20201030 11:51:39.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.220" endtime="20201030 11:51:39.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.862" endtime="20201030 11:51:39.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:38.861" endtime="20201030 11:51:39.243"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.252" endtime="20201030 11:51:39.268"></status>
</kw>
<msg timestamp="20201030 11:51:39.268" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.250" endtime="20201030 11:51:39.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_set 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.269" endtime="20201030 11:51:39.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.272" endtime="20201030 11:51:39.273"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.248" endtime="20201030 11:51:39.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.246" endtime="20201030 11:51:39.274"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.281" endtime="20201030 11:51:39.566"></status>
</kw>
<msg timestamp="20201030 11:51:39.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.279" endtime="20201030 11:51:39.569"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.577" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019749097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.570" endtime="20201030 11:51:39.578"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.578" endtime="20201030 11:51:39.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.277" endtime="20201030 11:51:39.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.275" endtime="20201030 11:51:39.581"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.585" level="INFO">${RESULT} = [{'diff': 4.329200000000033e-05}, {'diff': 4.245799999999869e-05}, {'diff': 4.24999999999974e-05}, {'diff': 4.334800000000208e-05}, {'diff': 4.291599999999701e-05}, {'diff': 4.301400000000094e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:39.582" endtime="20201030 11:51:39.585"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.590" level="INFO">${ACCURACY} = {'diff': [4.329200000000033e-05, 4.245799999999869e-05, 4.24999999999974e-05, 4.334800000000208e-05, 4.291599999999701e-05, 4.301400000000094e-05, 4.334799999999861e-05, 4.2473000000001204e-05, 4.2611...</msg>
<status status="PASS" starttime="20201030 11:51:39.586" endtime="20201030 11:51:39.590"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.594" level="INFO">NAME: accuracy-TIMER_SET-38-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.593" endtime="20201030 11:51:39.595"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.597" level="INFO">VALUE: [4.329200000000033e-05, 4.245799999999869e-05, 4.24999999999974e-05, 4.334800000000208e-05, 4.291599999999701e-05, 4.301400000000094e-05, 4.334799999999861e-05, 4.2473000000001204e-05, 4.2611000000001426e-05, 4.26799999999998e-05, 4.255600000000262e-05, 4.2860999999998206e-05, 4.2624999999997526e-05, 4.294399999999962e-05, 4.2804999999999926e-05, 4.295799999999919e-05, 4.272199999999851e-05, 4.3111000000001926e-05, 4.320799999999944e-05, 4.2916999999999955e-05, 4.295799999999919e-05, 4.301399999999747e-05, 4.273599999999808e-05, 4.2666999999999705e-05, 4.323600000000205e-05, 4.3180999999999775e-05, 4.2889000000000815e-05, 4.265199999999719e-05, 4.3125000000001495e-05, 4.2653000000000135e-05, 4.2625000000000995e-05, 4.254199999999958e-05, 4.301300000000147e-05, 4.277700000000079e-05, 4.301400000000094e-05, 4.290200000000091e-05, 4.2791000000000357e-05, 4.2860999999998206e-05, 4.2903000000000385e-05, 4.2374999999997276e-05, 4.302800000000051e-05, 4.270799999999894e-05, 4.28059999999994e-05, 4.302799999999704e-05, 4.276400000000069e-05, 4.28059999999994e-05, 4.2972999999998235e-05, 4.308400000000226e-05, 4.304200000000008e-05, 4.2639000000000565e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.595" endtime="20201030 11:51:39.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.591" endtime="20201030 11:51:39.598"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.602" endtime="20201030 11:51:39.621"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.600" endtime="20201030 11:51:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.599" endtime="20201030 11:51:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.244" endtime="20201030 11:51:39.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.244" endtime="20201030 11:51:39.622"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.631" endtime="20201030 11:51:39.646"></status>
</kw>
<msg timestamp="20201030 11:51:39.646" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.629" endtime="20201030 11:51:39.647"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_set 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:39.648" endtime="20201030 11:51:39.649"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.650" endtime="20201030 11:51:39.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.627" endtime="20201030 11:51:39.652"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.625" endtime="20201030 11:51:39.652"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.659" endtime="20201030 11:51:39.945"></status>
</kw>
<msg timestamp="20201030 11:51:39.948" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.657" endtime="20201030 11:51:39.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.956" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019454931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:39.949" endtime="20201030 11:51:39.956"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:39.957" endtime="20201030 11:51:39.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.655" endtime="20201030 11:51:39.959"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.653" endtime="20201030 11:51:39.960"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:39.964" level="INFO">${RESULT} = [{'diff': 4.405600000000065e-05}, {'diff': 4.4152999999998166e-05}, {'diff': 4.352800000000101e-05}, {'diff': 4.4195000000000345e-05}, {'diff': 4.427800000000176e-05}, {'diff': 4.34999999999984e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:39.960" endtime="20201030 11:51:39.964"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:39.968" level="INFO">${ACCURACY} = {'diff': [4.405600000000065e-05, 4.4152999999998166e-05, 4.352800000000101e-05, 4.4195000000000345e-05, 4.427800000000176e-05, 4.34999999999984e-05, 4.375000000000212e-05, 4.4124999999999026e-05, 4.35...</msg>
<status status="PASS" starttime="20201030 11:51:39.965" endtime="20201030 11:51:39.968"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.972" level="INFO">NAME: accuracy-TIMER_SET-39-philip</msg>
<status status="PASS" starttime="20201030 11:51:39.971" endtime="20201030 11:51:39.972"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:39.974" level="INFO">VALUE: [4.405600000000065e-05, 4.4152999999998166e-05, 4.352800000000101e-05, 4.4195000000000345e-05, 4.427800000000176e-05, 4.34999999999984e-05, 4.375000000000212e-05, 4.4124999999999026e-05, 4.3569000000000246e-05, 4.376400000000169e-05, 4.4069000000000746e-05, 4.41800000000013e-05, 4.4055000000001177e-05, 4.4110999999999456e-05, 4.43060000000009e-05, 4.3888999999998346e-05, 4.38060000000004e-05, 4.375000000000212e-05, 4.3875000000002246e-05, 4.3610999999998956e-05, 4.4124999999999026e-05, 4.433400000000004e-05, 4.3417000000000455e-05, 4.33059999999999e-05, 4.390199999999844e-05, 4.3653000000001135e-05, 4.390200000000191e-05, 4.374999999999865e-05, 4.36800000000008e-05, 4.3375000000001745e-05, 4.423599999999958e-05, 4.3874999999998776e-05, 4.394400000000062e-05, 4.3846999999999636e-05, 4.397199999999976e-05, 4.3610999999998956e-05, 4.397199999999976e-05, 4.423599999999958e-05, 4.429199999999786e-05, 4.405599999999718e-05, 4.3444999999999595e-05, 4.3639000000001565e-05, 4.402800000000151e-05, 4.436200000000265e-05, 4.427800000000176e-05, 4.343000000000055e-05, 4.38060000000004e-05, 4.4110999999999456e-05, 4.39860000000028e-05, 4.4124999999999026e-05]</msg>
<status status="PASS" starttime="20201030 11:51:39.973" endtime="20201030 11:51:39.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.969" endtime="20201030 11:51:39.976"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:39.979" endtime="20201030 11:51:39.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.978" endtime="20201030 11:51:39.999"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.977" endtime="20201030 11:51:40.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.623" endtime="20201030 11:51:40.000"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:39.623" endtime="20201030 11:51:40.000"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.009" endtime="20201030 11:51:40.026"></status>
</kw>
<msg timestamp="20201030 11:51:40.027" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.007" endtime="20201030 11:51:40.027"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.029" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_set 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.028" endtime="20201030 11:51:40.029"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.030" endtime="20201030 11:51:40.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.005" endtime="20201030 11:51:40.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.003" endtime="20201030 11:51:40.033"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.039" endtime="20201030 11:51:40.326"></status>
</kw>
<msg timestamp="20201030 11:51:40.329" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.038" endtime="20201030 11:51:40.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.337" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021111764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021156444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.330" endtime="20201030 11:51:40.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.339" endtime="20201030 11:51:40.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.035" endtime="20201030 11:51:40.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.033" endtime="20201030 11:51:40.341"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.345" level="INFO">${RESULT} = [{'diff': 4.467999999999833e-05}, {'diff': 4.4610999999999956e-05}, {'diff': 4.4973000000000235e-05}, {'diff': 4.5111000000000456e-05}, {'diff': 4.476399999999922e-05}, {'diff': 4.502699999999957e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:40.342" endtime="20201030 11:51:40.345"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.349" level="INFO">${ACCURACY} = {'diff': [4.467999999999833e-05, 4.4610999999999956e-05, 4.4973000000000235e-05, 4.5111000000000456e-05, 4.476399999999922e-05, 4.502699999999957e-05, 4.5138999999999596e-05, 4.454200000000158e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:51:40.346" endtime="20201030 11:51:40.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.353" level="INFO">NAME: accuracy-TIMER_SET-40-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.353" endtime="20201030 11:51:40.354"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.356" level="INFO">VALUE: [4.467999999999833e-05, 4.4610999999999956e-05, 4.4973000000000235e-05, 4.5111000000000456e-05, 4.476399999999922e-05, 4.502699999999957e-05, 4.5138999999999596e-05, 4.454200000000158e-05, 4.44999999999994e-05, 4.4652999999998666e-05, 4.504199999999861e-05, 4.479199999999836e-05, 4.48060000000014e-05, 4.529199999999886e-05, 4.520799999999797e-05, 4.452800000000201e-05, 4.472199999999704e-05, 4.509800000000036e-05, 4.5125000000000026e-05, 4.527800000000276e-05, 4.5125000000000026e-05, 4.501399999999947e-05, 4.4389000000002315e-05, 4.524999999999668e-05, 4.493000000000205e-05, 4.530499999999896e-05, 4.5097000000000886e-05, 4.5347000000001136e-05, 4.51939999999984e-05, 4.49999999999999e-05, 4.470800000000094e-05, 4.4652999999998666e-05, 4.4360999999999706e-05, 4.502799999999904e-05, 4.507000000000122e-05, 4.497199999999729e-05, 4.49999999999999e-05, 4.4902999999998916e-05, 4.4597000000000386e-05, 4.5111000000000456e-05, 4.440199999999894e-05, 4.5195000000001345e-05, 4.4444999999997126e-05, 4.4944999999997626e-05, 4.470800000000094e-05, 4.522200000000101e-05, 4.4888999999999346e-05, 4.494400000000162e-05, 4.472200000000051e-05, 4.477799999999879e-05]</msg>
<status status="PASS" starttime="20201030 11:51:40.355" endtime="20201030 11:51:40.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.350" endtime="20201030 11:51:40.358"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.362" endtime="20201030 11:51:40.381"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.360" endtime="20201030 11:51:40.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.359" endtime="20201030 11:51:40.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.001" endtime="20201030 11:51:40.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.001" endtime="20201030 11:51:40.382"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.391" endtime="20201030 11:51:40.407"></status>
</kw>
<msg timestamp="20201030 11:51:40.408" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.390" endtime="20201030 11:51:40.408"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.410" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_set 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.409" endtime="20201030 11:51:40.411"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.411" endtime="20201030 11:51:40.413"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.387" endtime="20201030 11:51:40.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.385" endtime="20201030 11:51:40.414"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.421" endtime="20201030 11:51:40.707"></status>
</kw>
<msg timestamp="20201030 11:51:40.710" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.420" endtime="20201030 11:51:40.711"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.718" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019623222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.711" endtime="20201030 11:51:40.719"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.720" endtime="20201030 11:51:40.721"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.417" endtime="20201030 11:51:40.722"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.415" endtime="20201030 11:51:40.722"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:40.726" level="INFO">${RESULT} = [{'diff': 4.631899999999953e-05}, {'diff': 4.5388999999999846e-05}, {'diff': 4.611099999999799e-05}, {'diff': 4.584800000000111e-05}, {'diff': 4.5889000000000346e-05}, {'diff': 4.609800000000136e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:40.723" endtime="20201030 11:51:40.726"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:40.731" level="INFO">${ACCURACY} = {'diff': [4.631899999999953e-05, 4.5388999999999846e-05, 4.611099999999799e-05, 4.584800000000111e-05, 4.5889000000000346e-05, 4.609800000000136e-05, 4.592999999999958e-05, 4.5737000000000555e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 11:51:40.727" endtime="20201030 11:51:40.731"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.735" level="INFO">NAME: accuracy-TIMER_SET-41-philip</msg>
<status status="PASS" starttime="20201030 11:51:40.734" endtime="20201030 11:51:40.736"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.738" level="INFO">VALUE: [4.631899999999953e-05, 4.5388999999999846e-05, 4.611099999999799e-05, 4.584800000000111e-05, 4.5889000000000346e-05, 4.609800000000136e-05, 4.592999999999958e-05, 4.5737000000000555e-05, 4.602800000000004e-05, 4.579099999999989e-05, 4.594399999999915e-05, 4.597200000000176e-05, 4.627800000000029e-05, 4.61939999999994e-05, 4.551399999999997e-05, 4.5611000000000956e-05, 4.5417000000002455e-05, 4.6153000000000166e-05, 4.5902999999999916e-05, 4.573600000000108e-05, 4.597199999999829e-05, 4.627800000000029e-05, 4.608399999999832e-05, 4.5847000000001636e-05, 4.575000000000065e-05, 4.623599999999811e-05, 4.582000000000197e-05, 4.561099999999749e-05, 4.58329999999986e-05, 4.544399999999865e-05, 4.60000000000009e-05, 4.604199999999961e-05, 4.5652999999999666e-05, 4.586099999999774e-05, 4.594399999999915e-05, 4.626400000000072e-05, 4.63329999999991e-05, 4.567999999999933e-05, 4.605599999999918e-05, 4.58199999999985e-05, 4.6194999999998876e-05, 4.5388999999999846e-05, 4.5625000000000526e-05, 4.5889000000000346e-05, 4.5680999999998806e-05, 4.5652999999999666e-05, 4.575000000000065e-05, 4.567999999999933e-05, 4.588800000000087e-05, 4.545799999999822e-05]</msg>
<status status="PASS" starttime="20201030 11:51:40.736" endtime="20201030 11:51:40.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.732" endtime="20201030 11:51:40.739"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:40.743" endtime="20201030 11:51:40.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.741" endtime="20201030 11:51:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.740" endtime="20201030 11:51:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.383" endtime="20201030 11:51:40.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.383" endtime="20201030 11:51:40.764"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.772" endtime="20201030 11:51:40.788"></status>
</kw>
<msg timestamp="20201030 11:51:40.788" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.771" endtime="20201030 11:51:40.788"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:40.791" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_set 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:40.789" endtime="20201030 11:51:40.791"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.792" endtime="20201030 11:51:40.793"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.768" endtime="20201030 11:51:40.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.766" endtime="20201030 11:51:40.794"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:40.801" endtime="20201030 11:51:41.086"></status>
</kw>
<msg timestamp="20201030 11:51:41.089" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:40.799" endtime="20201030 11:51:41.089"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.097" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019353569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019400653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.090" endtime="20201030 11:51:41.098"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.098" endtime="20201030 11:51:41.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.797" endtime="20201030 11:51:41.100"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.795" endtime="20201030 11:51:41.101"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.105" level="INFO">${RESULT} = [{'diff': 4.708399999999932e-05}, {'diff': 4.6444999999999126e-05}, {'diff': 4.70000000000019e-05}, {'diff': 4.706999999999975e-05}, {'diff': 4.6972999999998766e-05}, {'diff': 4.6458999999998696e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:41.102" endtime="20201030 11:51:41.105"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.109" level="INFO">${ACCURACY} = {'diff': [4.708399999999932e-05, 4.6444999999999126e-05, 4.70000000000019e-05, 4.706999999999975e-05, 4.6972999999998766e-05, 4.6458999999998696e-05, 4.655599999999968e-05, 4.6653000000000666e-05, 4.6...</msg>
<status status="PASS" starttime="20201030 11:51:41.106" endtime="20201030 11:51:41.109"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.113" level="INFO">NAME: accuracy-TIMER_SET-42-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.112" endtime="20201030 11:51:41.114"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.116" level="INFO">VALUE: [4.708399999999932e-05, 4.6444999999999126e-05, 4.70000000000019e-05, 4.706999999999975e-05, 4.6972999999998766e-05, 4.6458999999998696e-05, 4.655599999999968e-05, 4.6653000000000666e-05, 4.68199999999995e-05, 4.702799999999757e-05, 4.722199999999954e-05, 4.641600000000051e-05, 4.6389000000000846e-05, 4.684699999999917e-05, 4.673599999999861e-05, 4.7013999999998e-05, 4.727800000000129e-05, 4.6473000000001735e-05, 4.704200000000061e-05, 4.6889000000001346e-05, 4.7013999999998e-05, 4.670800000000294e-05, 4.679200000000036e-05, 4.656999999999925e-05, 4.663799999999815e-05, 4.706999999999975e-05, 4.636199999999771e-05, 4.736099999999924e-05, 4.661099999999849e-05, 4.726399999999825e-05, 4.724999999999868e-05, 4.640200000000094e-05, 4.704200000000061e-05, 4.727699999999835e-05, 4.656899999999978e-05, 4.652800000000054e-05, 4.66939999999999e-05, 4.648599999999836e-05, 4.6375000000001276e-05, 4.7194999999999876e-05, 4.6653000000000666e-05, 4.652800000000054e-05, 4.655599999999968e-05, 4.7194999999999876e-05, 4.723599999999911e-05, 4.6667000000000236e-05, 4.704200000000061e-05, 4.7181000000000306e-05, 4.706999999999975e-05, 4.71940000000004e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.114" endtime="20201030 11:51:41.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.110" endtime="20201030 11:51:41.117"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.121" endtime="20201030 11:51:41.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.119" endtime="20201030 11:51:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.118" endtime="20201030 11:51:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.765" endtime="20201030 11:51:41.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:40.764" endtime="20201030 11:51:41.141"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.150" endtime="20201030 11:51:41.168"></status>
</kw>
<msg timestamp="20201030 11:51:41.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.148" endtime="20201030 11:51:41.168"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.171" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_set 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.169" endtime="20201030 11:51:41.171"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.172" endtime="20201030 11:51:41.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.146" endtime="20201030 11:51:41.174"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.144" endtime="20201030 11:51:41.174"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.180" endtime="20201030 11:51:41.467"></status>
</kw>
<msg timestamp="20201030 11:51:41.470" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.179" endtime="20201030 11:51:41.470"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.478" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020486847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.471" endtime="20201030 11:51:41.478"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.479" endtime="20201030 11:51:41.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.176" endtime="20201030 11:51:41.481"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.175" endtime="20201030 11:51:41.482"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.485" level="INFO">${RESULT} = [{'diff': 4.833299999999763e-05}, {'diff': 4.781900000000103e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.819399999999793e-05}, {'diff': 4.758300000000035e-05}, {'diff': 4.831900000000153e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:41.482" endtime="20201030 11:51:41.486"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.490" level="INFO">${ACCURACY} = {'diff': [4.833299999999763e-05, 4.781900000000103e-05, 4.813899999999913e-05, 4.819399999999793e-05, 4.758300000000035e-05, 4.831900000000153e-05, 4.761099999999949e-05, 4.784700000000017e-05, 4.7681...</msg>
<status status="PASS" starttime="20201030 11:51:41.487" endtime="20201030 11:51:41.490"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.494" level="INFO">NAME: accuracy-TIMER_SET-43-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.493" endtime="20201030 11:51:41.494"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.497" level="INFO">VALUE: [4.833299999999763e-05, 4.781900000000103e-05, 4.813899999999913e-05, 4.819399999999793e-05, 4.758300000000035e-05, 4.831900000000153e-05, 4.761099999999949e-05, 4.784700000000017e-05, 4.7681000000000806e-05, 4.740299999999795e-05, 4.829200000000186e-05, 4.7681000000000806e-05, 4.788899999999888e-05, 4.754199999999764e-05, 4.7931000000001056e-05, 4.781899999999756e-05, 4.794399999999768e-05, 4.815199999999922e-05, 4.738899999999838e-05, 4.772200000000004e-05, 4.744399999999718e-05, 4.779100000000189e-05, 4.794400000000115e-05, 4.834700000000067e-05, 4.797200000000029e-05, 4.75139999999985e-05, 4.7681000000000806e-05, 4.7917000000001486e-05, 4.766699999999777e-05, 4.7903000000001916e-05, 4.738899999999838e-05, 4.811099999999999e-05, 4.7695000000000376e-05, 4.812499999999956e-05, 4.752799999999807e-05, 4.777800000000179e-05, 4.76940000000009e-05, 4.75139999999985e-05, 4.752700000000207e-05, 4.776399999999875e-05, 4.822200000000054e-05, 4.798599999999986e-05, 4.755600000000068e-05, 4.776399999999875e-05, 4.798599999999986e-05, 4.78200000000005e-05, 4.802799999999857e-05, 4.824999999999968e-05, 4.7889000000002346e-05, 4.8320000000001e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.495" endtime="20201030 11:51:41.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.491" endtime="20201030 11:51:41.499"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.502" endtime="20201030 11:51:41.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.501" endtime="20201030 11:51:41.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.500" endtime="20201030 11:51:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.142" endtime="20201030 11:51:41.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.142" endtime="20201030 11:51:41.523"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.532" endtime="20201030 11:51:41.549"></status>
</kw>
<msg timestamp="20201030 11:51:41.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.530" endtime="20201030 11:51:41.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_set 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.550" endtime="20201030 11:51:41.552"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.552" endtime="20201030 11:51:41.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.528" endtime="20201030 11:51:41.555"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.525" endtime="20201030 11:51:41.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.561" endtime="20201030 11:51:41.847"></status>
</kw>
<msg timestamp="20201030 11:51:41.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.560" endtime="20201030 11:51:41.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019375514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019424875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.851" endtime="20201030 11:51:41.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.859" endtime="20201030 11:51:41.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.557" endtime="20201030 11:51:41.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.556" endtime="20201030 11:51:41.861"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:41.865" level="INFO">${RESULT} = [{'diff': 4.936100000000124e-05}, {'diff': 4.909700000000142e-05}, {'diff': 4.909699999999795e-05}, {'diff': 4.859699999999745e-05}, {'diff': 4.857000000000125e-05}, {'diff': 4.9181000000002306e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:41.862" endtime="20201030 11:51:41.865"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:41.870" level="INFO">${ACCURACY} = {'diff': [4.936100000000124e-05, 4.909700000000142e-05, 4.909699999999795e-05, 4.859699999999745e-05, 4.857000000000125e-05, 4.9181000000002306e-05, 4.880599999999846e-05, 4.8959000000001196e-05, 4.85...</msg>
<status status="PASS" starttime="20201030 11:51:41.866" endtime="20201030 11:51:41.870"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.875" level="INFO">NAME: accuracy-TIMER_SET-44-philip</msg>
<status status="PASS" starttime="20201030 11:51:41.874" endtime="20201030 11:51:41.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.877" level="INFO">VALUE: [4.936100000000124e-05, 4.909700000000142e-05, 4.909699999999795e-05, 4.859699999999745e-05, 4.857000000000125e-05, 4.9181000000002306e-05, 4.880599999999846e-05, 4.8959000000001196e-05, 4.852799999999907e-05, 4.923599999999764e-05, 4.891599999999954e-05, 4.90270000000001e-05, 4.912500000000056e-05, 4.919399999999893e-05, 4.93330000000021e-05, 4.872200000000104e-05, 4.838899999999938e-05, 4.913900000000013e-05, 4.890299999999945e-05, 4.93339999999981e-05, 4.904199999999914e-05, 4.852800000000254e-05, 4.911199999999699e-05, 4.869499999999791e-05, 4.906999999999828e-05, 4.9223000000001016e-05, 4.855499999999874e-05, 4.922199999999807e-05, 4.909700000000142e-05, 4.909700000000142e-05, 4.911100000000099e-05, 4.897200000000129e-05, 4.837499999999981e-05, 4.893000000000258e-05, 4.895800000000172e-05, 4.8417000000001986e-05, 4.911100000000099e-05, 4.926400000000025e-05, 4.922200000000154e-05, 4.869499999999791e-05, 4.838899999999938e-05, 4.918099999999884e-05, 4.888899999999988e-05, 4.887500000000031e-05, 4.930599999999896e-05, 4.930599999999896e-05, 4.911100000000099e-05, 4.8707999999998e-05, 4.869399999999843e-05, 4.909700000000142e-05]</msg>
<status status="PASS" starttime="20201030 11:51:41.876" endtime="20201030 11:51:41.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.871" endtime="20201030 11:51:41.878"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:41.882" endtime="20201030 11:51:41.901"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.880" endtime="20201030 11:51:41.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.879" endtime="20201030 11:51:41.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.524" endtime="20201030 11:51:41.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.523" endtime="20201030 11:51:41.903"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.911" endtime="20201030 11:51:41.927"></status>
</kw>
<msg timestamp="20201030 11:51:41.927" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.910" endtime="20201030 11:51:41.928"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:41.930" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_set 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:41.929" endtime="20201030 11:51:41.930"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.931" endtime="20201030 11:51:41.932"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.907" endtime="20201030 11:51:41.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.905" endtime="20201030 11:51:41.933"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:41.940" endtime="20201030 11:51:42.226"></status>
</kw>
<msg timestamp="20201030 11:51:42.230" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:41.938" endtime="20201030 11:51:42.230"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.238" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019438444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019488778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.231" endtime="20201030 11:51:42.238"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.239" endtime="20201030 11:51:42.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.936" endtime="20201030 11:51:42.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.934" endtime="20201030 11:51:42.242"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.245" level="INFO">${RESULT} = [{'diff': 5.03339999999991e-05}, {'diff': 4.952800000000007e-05}, {'diff': 4.975000000000118e-05}, {'diff': 4.9723000000001516e-05}, {'diff': 5.034799999999867e-05}, {'diff': 4.951399999999703e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:42.242" endtime="20201030 11:51:42.246"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.250" level="INFO">${ACCURACY} = {'diff': [5.03339999999991e-05, 4.952800000000007e-05, 4.975000000000118e-05, 4.9723000000001516e-05, 5.034799999999867e-05, 4.951399999999703e-05, 4.938900000000038e-05, 4.9445000000002126e-05, 4.955...</msg>
<status status="PASS" starttime="20201030 11:51:42.247" endtime="20201030 11:51:42.250"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.254" level="INFO">NAME: accuracy-TIMER_SET-45-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.253" endtime="20201030 11:51:42.254"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.256" level="INFO">VALUE: [5.03339999999991e-05, 4.952800000000007e-05, 4.975000000000118e-05, 4.9723000000001516e-05, 5.034799999999867e-05, 4.951399999999703e-05, 4.938900000000038e-05, 4.9445000000002126e-05, 4.955499999999974e-05, 4.980499999999999e-05, 4.95270000000006e-05, 4.96940000000029e-05, 4.993000000000011e-05, 4.990300000000045e-05, 4.974999999999771e-05, 5.018000000000036e-05, 4.945799999999875e-05, 4.993099999999959e-05, 4.988900000000088e-05, 4.991700000000002e-05, 4.990300000000045e-05, 4.991700000000002e-05, 5.027800000000082e-05, 5.012499999999809e-05, 5.018099999999984e-05, 4.995899999999873e-05, 5.033299999999963e-05, 5.016700000000027e-05, 4.938900000000038e-05, 4.981899999999956e-05, 5.002800000000057e-05, 4.955499999999974e-05, 4.952800000000007e-05, 4.969399999999943e-05, 5.00279999999971e-05, 4.945799999999875e-05, 5.004200000000014e-05, 4.973599999999814e-05, 5.013900000000113e-05, 5.022199999999907e-05, 5.011099999999852e-05, 5.005600000000318e-05, 5.005599999999971e-05, 4.937500000000081e-05, 4.9695000000002376e-05, 4.995899999999873e-05, 5.006999999999928e-05, 5.006899999999981e-05, 4.9915999999997074e-05, 4.990300000000045e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.255" endtime="20201030 11:51:42.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.250" endtime="20201030 11:51:42.258"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.261" endtime="20201030 11:51:42.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.260" endtime="20201030 11:51:42.281"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.259" endtime="20201030 11:51:42.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.904" endtime="20201030 11:51:42.282"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:41.903" endtime="20201030 11:51:42.282"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.291" endtime="20201030 11:51:42.311"></status>
</kw>
<msg timestamp="20201030 11:51:42.311" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.289" endtime="20201030 11:51:42.311"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.314" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_set 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.312" endtime="20201030 11:51:42.314"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.315" endtime="20201030 11:51:42.316"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.286" endtime="20201030 11:51:42.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.284" endtime="20201030 11:51:42.317"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.324" endtime="20201030 11:51:42.609"></status>
</kw>
<msg timestamp="20201030 11:51:42.612" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023061847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.322" endtime="20201030 11:51:42.612"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.620" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023061847, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023113139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.613" endtime="20201030 11:51:42.621"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.622" endtime="20201030 11:51:42.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.320" endtime="20201030 11:51:42.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.318" endtime="20201030 11:51:42.624"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:42.628" level="INFO">${RESULT} = [{'diff': 5.129200000000139e-05}, {'diff': 5.0887999999998934e-05}, {'diff': 5.098599999999939e-05}, {'diff': 5.127799999999835e-05}, {'diff': 5.116700000000127e-05}, {'diff': 5.073599999999914e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:42.625" endtime="20201030 11:51:42.628"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:42.632" level="INFO">${ACCURACY} = {'diff': [5.129200000000139e-05, 5.0887999999998934e-05, 5.098599999999939e-05, 5.127799999999835e-05, 5.116700000000127e-05, 5.073599999999914e-05, 5.0472999999998797e-05, 5.13470000000002e-05, 5.120...</msg>
<status status="PASS" starttime="20201030 11:51:42.629" endtime="20201030 11:51:42.632"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.637" level="INFO">NAME: accuracy-TIMER_SET-46-philip</msg>
<status status="PASS" starttime="20201030 11:51:42.635" endtime="20201030 11:51:42.637"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.639" level="INFO">VALUE: [5.129200000000139e-05, 5.0887999999998934e-05, 5.098599999999939e-05, 5.127799999999835e-05, 5.116700000000127e-05, 5.073599999999914e-05, 5.0472999999998797e-05, 5.13470000000002e-05, 5.120899999999998e-05, 5.127799999999835e-05, 5.087499999999884e-05, 5.129100000000192e-05, 5.076299999999881e-05, 5.127700000000235e-05, 5.086099999999927e-05, 5.097199999999982e-05, 5.129100000000192e-05, 5.047200000000279e-05, 5.066700000000077e-05, 5.058299999999988e-05, 5.037500000000181e-05, 5.130600000000096e-05, 5.132000000000053e-05, 5.123599999999964e-05, 5.077800000000132e-05, 5.120899999999998e-05, 5.111099999999952e-05, 5.090300000000145e-05, 5.101399999999853e-05, 5.106900000000081e-05, 5.126399999999878e-05, 5.112499999999909e-05, 5.080500000000099e-05, 5.113899999999866e-05, 5.123599999999964e-05, 5.052800000000107e-05, 5.069400000000043e-05, 5.137499999999934e-05, 5.137499999999934e-05, 5.063899999999816e-05, 5.115299999999823e-05, 5.111100000000299e-05, 5.056999999999978e-05, 5.082000000000003e-05, 5.072299999999905e-05, 5.087499999999884e-05, 5.087499999999884e-05, 5.100000000000243e-05, 5.105599999999724e-05, 5.059699999999945e-05]</msg>
<status status="PASS" starttime="20201030 11:51:42.638" endtime="20201030 11:51:42.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.633" endtime="20201030 11:51:42.641"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:42.645" endtime="20201030 11:51:42.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.643" endtime="20201030 11:51:42.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.642" endtime="20201030 11:51:42.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.283" endtime="20201030 11:51:42.665"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.282" endtime="20201030 11:51:42.665"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.674" endtime="20201030 11:51:42.689"></status>
</kw>
<msg timestamp="20201030 11:51:42.690" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.673" endtime="20201030 11:51:42.690"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.692" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_set 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:42.691" endtime="20201030 11:51:42.692"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.693" endtime="20201030 11:51:42.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.670" endtime="20201030 11:51:42.695"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.668" endtime="20201030 11:51:42.696"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.702" endtime="20201030 11:51:42.987"></status>
</kw>
<msg timestamp="20201030 11:51:42.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.701" endtime="20201030 11:51:42.990"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:42.998" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019337958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019389514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:42.991" endtime="20201030 11:51:42.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:42.999" endtime="20201030 11:51:43.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.698" endtime="20201030 11:51:43.002"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.696" endtime="20201030 11:51:43.002"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.006" level="INFO">${RESULT} = [{'diff': 5.155600000000121e-05}, {'diff': 5.191700000000202e-05}, {'diff': 5.225000000000021e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.218100000000184e-05}, {'diff': 5.159700000000045e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:43.003" endtime="20201030 11:51:43.006"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.011" level="INFO">${ACCURACY} = {'diff': [5.155600000000121e-05, 5.191700000000202e-05, 5.225000000000021e-05, 5.201399999999953e-05, 5.218100000000184e-05, 5.159700000000045e-05, 5.186100000000027e-05, 5.18340000000006e-05, 5.15279...</msg>
<status status="PASS" starttime="20201030 11:51:43.007" endtime="20201030 11:51:43.011"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.015" level="INFO">NAME: accuracy-TIMER_SET-47-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.014" endtime="20201030 11:51:43.016"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.018" level="INFO">VALUE: [5.155600000000121e-05, 5.191700000000202e-05, 5.225000000000021e-05, 5.201399999999953e-05, 5.218100000000184e-05, 5.159700000000045e-05, 5.186100000000027e-05, 5.18340000000006e-05, 5.15279999999986e-05, 5.237500000000034e-05, 5.1429999999998144e-05, 5.138900000000238e-05, 5.194400000000168e-05, 5.199999999999996e-05, 5.174999999999971e-05, 5.163899999999916e-05, 5.154100000000217e-05, 5.177799999999885e-05, 5.186100000000027e-05, 5.163900000000263e-05, 5.236100000000077e-05, 5.144500000000066e-05, 5.174999999999971e-05, 5.190299999999898e-05, 5.173600000000014e-05, 5.174999999999971e-05, 5.201399999999953e-05, 5.187499999999984e-05, 5.134799999999967e-05, 5.199999999999996e-05, 5.180499999999852e-05, 5.208300000000138e-05, 5.195800000000125e-05, 5.1708000000001e-05, 5.2221999999997604e-05, 5.181899999999809e-05, 5.223600000000064e-05, 5.183300000000113e-05, 5.226399999999978e-05, 5.211100000000052e-05, 5.1665999999998824e-05, 5.220900000000098e-05, 5.191699999999855e-05, 5.232000000000153e-05, 5.138899999999891e-05, 5.190299999999898e-05, 5.225000000000021e-05, 5.1943999999998214e-05, 5.199999999999996e-05, 5.218000000000236e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.016" endtime="20201030 11:51:43.023"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.012" endtime="20201030 11:51:43.024"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.028" endtime="20201030 11:51:43.047"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.026" endtime="20201030 11:51:43.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.025" endtime="20201030 11:51:43.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.666" endtime="20201030 11:51:43.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:42.666" endtime="20201030 11:51:43.048"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.057" endtime="20201030 11:51:43.073"></status>
</kw>
<msg timestamp="20201030 11:51:43.074" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.055" endtime="20201030 11:51:43.074"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.076" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_set 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.075" endtime="20201030 11:51:43.077"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.077" endtime="20201030 11:51:43.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.053" endtime="20201030 11:51:43.079"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.051" endtime="20201030 11:51:43.080"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.086" endtime="20201030 11:51:43.372"></status>
</kw>
<msg timestamp="20201030 11:51:43.376" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.085" endtime="20201030 11:51:43.376"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.384" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019728986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019781625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.377" endtime="20201030 11:51:43.384"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.385" endtime="20201030 11:51:43.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.082" endtime="20201030 11:51:43.387"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.080" endtime="20201030 11:51:43.388"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.391" level="INFO">${RESULT} = [{'diff': 5.263900000000016e-05}, {'diff': 5.259700000000145e-05}, {'diff': 5.258399999999788e-05}, {'diff': 5.288900000000041e-05}, {'diff': 5.29730000000013e-05}, {'diff': 5.255600000000221e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:43.388" endtime="20201030 11:51:43.392"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.396" level="INFO">${ACCURACY} = {'diff': [5.263900000000016e-05, 5.259700000000145e-05, 5.258399999999788e-05, 5.288900000000041e-05, 5.29730000000013e-05, 5.255600000000221e-05, 5.2943999999999214e-05, 5.257000000000178e-05, 5.3236...</msg>
<status status="PASS" starttime="20201030 11:51:43.392" endtime="20201030 11:51:43.396"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.400" level="INFO">NAME: accuracy-TIMER_SET-48-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.399" endtime="20201030 11:51:43.400"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.402" level="INFO">VALUE: [5.263900000000016e-05, 5.259700000000145e-05, 5.258399999999788e-05, 5.288900000000041e-05, 5.29730000000013e-05, 5.255600000000221e-05, 5.2943999999999214e-05, 5.257000000000178e-05, 5.323699999999765e-05, 5.312500000000109e-05, 5.2916000000000074e-05, 5.2457999999998284e-05, 5.2652000000000254e-05, 5.273600000000114e-05, 5.263900000000016e-05, 5.323600000000164e-05, 5.329199999999992e-05, 5.318099999999937e-05, 5.311099999999805e-05, 5.261100000000102e-05, 5.309699999999848e-05, 5.25279999999996e-05, 5.251400000000003e-05, 5.263900000000016e-05, 5.282000000000203e-05, 5.238899999999991e-05, 5.326400000000078e-05, 5.238899999999991e-05, 5.245800000000175e-05, 5.300000000000096e-05, 5.2679999999999394e-05, 5.2916000000000074e-05, 5.254199999999917e-05, 5.30280000000001e-05, 5.3207999999999034e-05, 5.2971999999998354e-05, 5.28609999999978e-05, 5.250000000000046e-05, 5.308400000000185e-05, 5.269499999999844e-05, 5.258400000000135e-05, 5.322200000000207e-05, 5.281999999999856e-05, 5.250000000000046e-05, 5.326400000000078e-05, 5.331899999999959e-05, 5.31669999999998e-05, 5.327699999999741e-05, 5.284699999999823e-05, 5.28609999999978e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.401" endtime="20201030 11:51:43.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.397" endtime="20201030 11:51:43.404"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.408" endtime="20201030 11:51:43.427"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.406" endtime="20201030 11:51:43.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.405" endtime="20201030 11:51:43.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.049" endtime="20201030 11:51:43.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.049" endtime="20201030 11:51:43.428"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.437" endtime="20201030 11:51:43.454"></status>
</kw>
<msg timestamp="20201030 11:51:43.455" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.435" endtime="20201030 11:51:43.455"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.458" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_set 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.456" endtime="20201030 11:51:43.458"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.459" endtime="20201030 11:51:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.433" endtime="20201030 11:51:43.461"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.431" endtime="20201030 11:51:43.462"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.469" endtime="20201030 11:51:43.755"></status>
</kw>
<msg timestamp="20201030 11:51:43.758" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.467" endtime="20201030 11:51:43.758"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.766" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020676792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020730431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.759" endtime="20201030 11:51:43.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.767" endtime="20201030 11:51:43.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.464" endtime="20201030 11:51:43.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.462" endtime="20201030 11:51:43.770"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:43.774" level="INFO">${RESULT} = [{'diff': 5.363900000000116e-05}, {'diff': 5.3416000000000574e-05}, {'diff': 5.402700000000163e-05}, {'diff': 5.40410000000012e-05}, {'diff': 5.423600000000264e-05}, {'diff': 5.3971999999999354e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:51:43.771" endtime="20201030 11:51:43.774"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:43.778" level="INFO">${ACCURACY} = {'diff': [5.363900000000116e-05, 5.3416000000000574e-05, 5.402700000000163e-05, 5.40410000000012e-05, 5.423600000000264e-05, 5.3971999999999354e-05, 5.363900000000116e-05, 5.4194000000000464e-05, 5.42...</msg>
<status status="PASS" starttime="20201030 11:51:43.775" endtime="20201030 11:51:43.778"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.782" level="INFO">NAME: accuracy-TIMER_SET-49-philip</msg>
<status status="PASS" starttime="20201030 11:51:43.781" endtime="20201030 11:51:43.783"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.785" level="INFO">VALUE: [5.363900000000116e-05, 5.3416000000000574e-05, 5.402700000000163e-05, 5.40410000000012e-05, 5.423600000000264e-05, 5.3971999999999354e-05, 5.363900000000116e-05, 5.4194000000000464e-05, 5.427800000000135e-05, 5.362500000000159e-05, 5.386100000000227e-05, 5.415299999999776e-05, 5.388900000000141e-05, 5.40280000000011e-05, 5.358299999999941e-05, 5.3916000000001074e-05, 5.34730000000018e-05, 5.4221999999999604e-05, 5.387500000000184e-05, 5.3457999999999284e-05, 5.3680000000000394e-05, 5.3944000000000214e-05, 5.362500000000159e-05, 5.3666000000000824e-05, 5.411099999999905e-05, 5.38609999999988e-05, 5.337499999999787e-05, 5.3471999999998854e-05, 5.356899999999984e-05, 5.354200000000017e-05, 5.4263999999998314e-05, 5.400000000000196e-05, 5.412500000000209e-05, 5.362500000000159e-05, 5.3666000000000824e-05, 5.395899999999926e-05, 5.369500000000291e-05, 5.3457999999999284e-05, 5.3944000000000214e-05, 5.3402000000001004e-05, 5.4166000000001324e-05, 5.38609999999988e-05, 5.40419999999972e-05, 5.3513999999997564e-05, 5.380500000000052e-05, 5.412500000000209e-05, 5.422299999999908e-05, 5.341700000000005e-05, 5.345899999999876e-05, 5.355599999999974e-05]</msg>
<status status="PASS" starttime="20201030 11:51:43.783" endtime="20201030 11:51:43.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.779" endtime="20201030 11:51:43.787"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:43.790" endtime="20201030 11:51:43.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.789" endtime="20201030 11:51:43.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.788" endtime="20201030 11:51:43.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.429" endtime="20201030 11:51:43.811"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.429" endtime="20201030 11:51:43.811"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.820" endtime="20201030 11:51:43.835"></status>
</kw>
<msg timestamp="20201030 11:51:43.836" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.818" endtime="20201030 11:51:43.836"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:43.838" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_set 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:43.837" endtime="20201030 11:51:43.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.839" endtime="20201030 11:51:43.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.816" endtime="20201030 11:51:43.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.814" endtime="20201030 11:51:43.842"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:43.848" endtime="20201030 11:51:44.134"></status>
</kw>
<msg timestamp="20201030 11:51:44.138" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019332681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:43.847" endtime="20201030 11:51:44.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.146" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019332681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019387403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.139" endtime="20201030 11:51:44.146"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.147" endtime="20201030 11:51:44.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.844" endtime="20201030 11:51:44.149"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.843" endtime="20201030 11:51:44.150"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.153" level="INFO">${RESULT} = [{'diff': 5.4722000000000104e-05}, {'diff': 5.5165999999998855e-05}, {'diff': 5.4749999999999244e-05}, {'diff': 5.4666000000001824e-05}, {'diff': 5.5208000000001034e-05}, {'diff': 5.531900000000159e-0...</msg>
<status status="PASS" starttime="20201030 11:51:44.150" endtime="20201030 11:51:44.154"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.159" level="INFO">${ACCURACY} = {'diff': [5.4722000000000104e-05, 5.5165999999998855e-05, 5.4749999999999244e-05, 5.4666000000001824e-05, 5.5208000000001034e-05, 5.531900000000159e-05, 5.469500000000044e-05, 5.461099999999955e-05, 5...</msg>
<status status="PASS" starttime="20201030 11:51:44.154" endtime="20201030 11:51:44.159"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.163" level="INFO">NAME: accuracy-TIMER_SET-50-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.162" endtime="20201030 11:51:44.163"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.165" level="INFO">VALUE: [5.4722000000000104e-05, 5.5165999999998855e-05, 5.4749999999999244e-05, 5.4666000000001824e-05, 5.5208000000001034e-05, 5.531900000000159e-05, 5.469500000000044e-05, 5.461099999999955e-05, 5.4777999999998384e-05, 5.480600000000099e-05, 5.5263999999999314e-05, 5.495900000000026e-05, 5.5249999999999744e-05, 5.438899999999844e-05, 5.487499999999937e-05, 5.487500000000284e-05, 5.537499999999987e-05, 5.459699999999998e-05, 5.4471999999999854e-05, 5.4735999999999674e-05, 5.4693999999997495e-05, 5.50280000000021e-05, 5.443100000000062e-05, 5.5041999999998203e-05, 5.513899999999919e-05, 5.5027999999998634e-05, 5.487499999999937e-05, 5.522300000000008e-05, 5.461099999999955e-05, 5.454200000000117e-05, 5.491700000000155e-05, 5.5249999999999744e-05, 5.488899999999894e-05, 5.462499999999912e-05, 5.456900000000084e-05, 5.506899999999787e-05, 5.454099999999823e-05, 5.508300000000091e-05, 5.4471999999999854e-05, 5.479200000000142e-05, 5.4791999999997953e-05, 5.48609999999998e-05, 5.463899999999869e-05, 5.512499999999962e-05, 5.483400000000013e-05, 5.511100000000005e-05, 5.49730000000033e-05, 5.511199999999952e-05, 5.4541999999997703e-05, 5.48609999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.164" endtime="20201030 11:51:44.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.159" endtime="20201030 11:51:44.167"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.170" endtime="20201030 11:51:44.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.169" endtime="20201030 11:51:44.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.168" endtime="20201030 11:51:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.812" endtime="20201030 11:51:44.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:43.812" endtime="20201030 11:51:44.191"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.200" endtime="20201030 11:51:44.216"></status>
</kw>
<msg timestamp="20201030 11:51:44.217" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.198" endtime="20201030 11:51:44.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.219" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_set 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.218" endtime="20201030 11:51:44.219"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.220" endtime="20201030 11:51:44.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.195" endtime="20201030 11:51:44.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.193" endtime="20201030 11:51:44.223"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.229" endtime="20201030 11:51:44.516"></status>
</kw>
<msg timestamp="20201030 11:51:44.519" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.228" endtime="20201030 11:51:44.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.527" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019874028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019930167, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.520" endtime="20201030 11:51:44.528"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.528" endtime="20201030 11:51:44.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.225" endtime="20201030 11:51:44.530"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.223" endtime="20201030 11:51:44.531"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.535" level="INFO">${RESULT} = [{'diff': 5.613900000000019e-05}, {'diff': 5.6027999999999634e-05}, {'diff': 5.5555999999998273e-05}, {'diff': 5.5402000000003004e-05}, {'diff': 5.538899999999944e-05}, {'diff': 5.5666000000002824e-05...</msg>
<status status="PASS" starttime="20201030 11:51:44.532" endtime="20201030 11:51:44.535"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.539" level="INFO">${ACCURACY} = {'diff': [5.613900000000019e-05, 5.6027999999999634e-05, 5.5555999999998273e-05, 5.5402000000003004e-05, 5.538899999999944e-05, 5.5666000000002824e-05, 5.606899999999887e-05, 5.587500000000037e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:44.536" endtime="20201030 11:51:44.539"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.543" level="INFO">NAME: accuracy-TIMER_SET-51-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.542" endtime="20201030 11:51:44.544"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.546" level="INFO">VALUE: [5.613900000000019e-05, 5.6027999999999634e-05, 5.5555999999998273e-05, 5.5402000000003004e-05, 5.538899999999944e-05, 5.5666000000002824e-05, 5.606899999999887e-05, 5.587500000000037e-05, 5.5541999999998704e-05, 5.58480000000007e-05, 5.5791999999998954e-05, 5.562499999999665e-05, 5.556899999999837e-05, 5.561100000000055e-05, 5.591700000000255e-05, 5.597300000000083e-05, 5.593099999999865e-05, 5.586200000000027e-05, 5.540299999999901e-05, 5.581899999999862e-05, 5.544499999999772e-05, 5.601300000000059e-05, 5.554099999999923e-05, 5.637500000000087e-05, 5.5986000000000924e-05, 5.6179999999999425e-05, 5.611100000000105e-05, 5.611100000000105e-05, 5.634700000000173e-05, 5.6319999999998593e-05, 5.58610000000008e-05, 5.591699999999908e-05, 5.595900000000126e-05, 5.572300000000058e-05, 5.61809999999989e-05, 5.6014000000000064e-05, 5.579099999999948e-05, 5.620900000000151e-05, 5.608300000000191e-05, 5.630499999999955e-05, 5.611100000000105e-05, 5.584700000000123e-05, 5.6236000000001174e-05, 5.561100000000055e-05, 5.584700000000123e-05, 5.5957999999998315e-05, 5.606899999999887e-05, 5.5972000000001354e-05, 5.597300000000083e-05, 5.612500000000062e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.544" endtime="20201030 11:51:44.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.540" endtime="20201030 11:51:44.547"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.551" endtime="20201030 11:51:44.570"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.549" endtime="20201030 11:51:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.548" endtime="20201030 11:51:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.192" endtime="20201030 11:51:44.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.191" endtime="20201030 11:51:44.571"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.580" endtime="20201030 11:51:44.597"></status>
</kw>
<msg timestamp="20201030 11:51:44.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.578" endtime="20201030 11:51:44.598"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.600" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_set 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.599" endtime="20201030 11:51:44.601"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.601" endtime="20201030 11:51:44.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.576" endtime="20201030 11:51:44.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.574" endtime="20201030 11:51:44.604"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.610" endtime="20201030 11:51:44.895"></status>
</kw>
<msg timestamp="20201030 11:51:44.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.609" endtime="20201030 11:51:44.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020654444, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020711264, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.900" endtime="20201030 11:51:44.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.908" endtime="20201030 11:51:44.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.606" endtime="20201030 11:51:44.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.604" endtime="20201030 11:51:44.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:44.915" level="INFO">${RESULT} = [{'diff': 5.6819999999999093e-05}, {'diff': 5.688900000000094e-05}, {'diff': 5.716700000000033e-05}, {'diff': 5.7221999999999135e-05}, {'diff': 5.6791999999999954e-05}, {'diff': 5.7028000000000634e-05...</msg>
<status status="PASS" starttime="20201030 11:51:44.911" endtime="20201030 11:51:44.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:44.919" level="INFO">${ACCURACY} = {'diff': [5.6819999999999093e-05, 5.688900000000094e-05, 5.716700000000033e-05, 5.7221999999999135e-05, 5.6791999999999954e-05, 5.7028000000000634e-05, 5.7278000000000884e-05, 5.6957999999999315e-05, ...</msg>
<status status="PASS" starttime="20201030 11:51:44.916" endtime="20201030 11:51:44.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.923" level="INFO">NAME: accuracy-TIMER_SET-52-philip</msg>
<status status="PASS" starttime="20201030 11:51:44.922" endtime="20201030 11:51:44.923"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.925" level="INFO">VALUE: [5.6819999999999093e-05, 5.688900000000094e-05, 5.716700000000033e-05, 5.7221999999999135e-05, 5.6791999999999954e-05, 5.7028000000000634e-05, 5.7278000000000884e-05, 5.6957999999999315e-05, 5.7306000000000024e-05, 5.6750000000001244e-05, 5.6957999999999315e-05, 5.7221999999999135e-05, 5.7249999999998274e-05, 5.6778000000000384e-05, 5.6735999999998205e-05, 5.683299999999919e-05, 5.6749999999997774e-05, 5.7319999999999593e-05, 5.6778000000000384e-05, 5.7042000000000204e-05, 5.6764000000000814e-05, 5.68610000000018e-05, 5.670899999999854e-05, 5.73619999999983e-05, 5.698699999999793e-05, 5.6778000000000384e-05, 5.6430000000003144e-05, 5.737500000000187e-05, 5.6708000000002534e-05, 5.7028000000000634e-05, 5.6957999999999315e-05, 5.708300000000291e-05, 5.7069999999999343e-05, 5.668100000000287e-05, 5.6555999999999274e-05, 5.711099999999858e-05, 5.719499999999947e-05, 5.716700000000033e-05, 5.690300000000051e-05, 5.7180000000000425e-05, 5.676299999999787e-05, 5.6749999999997774e-05, 5.6679999999999925e-05, 5.6750000000001244e-05, 5.712499999999815e-05, 5.6791999999999954e-05, 5.70550000000003e-05, 5.7264000000001314e-05, 5.683299999999919e-05, 5.661100000000155e-05]</msg>
<status status="PASS" starttime="20201030 11:51:44.924" endtime="20201030 11:51:44.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.920" endtime="20201030 11:51:44.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:44.931" endtime="20201030 11:51:44.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.930" endtime="20201030 11:51:44.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.929" endtime="20201030 11:51:44.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.572" endtime="20201030 11:51:44.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.572" endtime="20201030 11:51:44.952"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.960" endtime="20201030 11:51:44.978"></status>
</kw>
<msg timestamp="20201030 11:51:44.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.959" endtime="20201030 11:51:44.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:44.981" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_set 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:44.979" endtime="20201030 11:51:44.981"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.982" endtime="20201030 11:51:44.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.956" endtime="20201030 11:51:44.984"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.954" endtime="20201030 11:51:44.984"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:44.990" endtime="20201030 11:51:45.276"></status>
</kw>
<msg timestamp="20201030 11:51:45.279" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:44.989" endtime="20201030 11:51:45.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019800236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019858069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.280" endtime="20201030 11:51:45.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.288" endtime="20201030 11:51:45.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.986" endtime="20201030 11:51:45.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.985" endtime="20201030 11:51:45.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.295" level="INFO">${RESULT} = [{'diff': 5.783300000000019e-05}, {'diff': 5.765300000000126e-05}, {'diff': 5.8138000000002715e-05}, {'diff': 5.7387999999998496e-05}, {'diff': 5.7457999999999815e-05}, {'diff': 5.8013999999998594e-05...</msg>
<status status="PASS" starttime="20201030 11:51:45.292" endtime="20201030 11:51:45.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.300" level="INFO">${ACCURACY} = {'diff': [5.783300000000019e-05, 5.765300000000126e-05, 5.8138000000002715e-05, 5.7387999999998496e-05, 5.7457999999999815e-05, 5.8013999999998594e-05, 5.783300000000019e-05, 5.830499999999808e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:45.296" endtime="20201030 11:51:45.300"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.304" level="INFO">NAME: accuracy-TIMER_SET-53-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.303" endtime="20201030 11:51:45.305"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.307" level="INFO">VALUE: [5.783300000000019e-05, 5.765300000000126e-05, 5.8138000000002715e-05, 5.7387999999998496e-05, 5.7457999999999815e-05, 5.8013999999998594e-05, 5.783300000000019e-05, 5.830499999999808e-05, 5.8278000000001884e-05, 5.784699999999976e-05, 5.7457999999999815e-05, 5.8083999999999913e-05, 5.740300000000101e-05, 5.7430000000000675e-05, 5.763900000000169e-05, 5.8292000000001454e-05, 5.7777999999997914e-05, 5.7485999999998955e-05, 5.788899999999847e-05, 5.752700000000166e-05, 5.826299999999937e-05, 5.8000000000002494e-05, 5.7764000000001814e-05, 5.809700000000001e-05, 5.834700000000026e-05, 5.8027999999998164e-05, 5.836099999999983e-05, 5.740300000000101e-05, 5.7542000000000704e-05, 5.769499999999997e-05, 5.787500000000237e-05, 5.759800000000245e-05, 5.7513999999998094e-05, 5.7806000000000524e-05, 5.7958000000000315e-05, 5.7651999999998316e-05, 5.8235999999999705e-05, 5.738900000000144e-05, 5.8180000000001425e-05, 5.813900000000219e-05, 5.766700000000083e-05, 5.73749999999984e-05, 5.8277999999998414e-05, 5.8070000000000344e-05, 5.7665999999997886e-05, 5.765300000000126e-05, 5.78610000000028e-05, 5.7569999999999844e-05, 5.7792000000000954e-05, 5.811199999999905e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.305" endtime="20201030 11:51:45.308"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.301" endtime="20201030 11:51:45.308"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.312" endtime="20201030 11:51:45.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.310" endtime="20201030 11:51:45.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.309" endtime="20201030 11:51:45.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.953" endtime="20201030 11:51:45.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:44.952" endtime="20201030 11:51:45.332"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.341" endtime="20201030 11:51:45.358"></status>
</kw>
<msg timestamp="20201030 11:51:45.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.339" endtime="20201030 11:51:45.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_set 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.360" endtime="20201030 11:51:45.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.362" endtime="20201030 11:51:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.337" endtime="20201030 11:51:45.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.335" endtime="20201030 11:51:45.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.371" endtime="20201030 11:51:45.658"></status>
</kw>
<msg timestamp="20201030 11:51:45.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.370" endtime="20201030 11:51:45.661"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.669" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019313694, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019372833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.662" endtime="20201030 11:51:45.670"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.670" endtime="20201030 11:51:45.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.367" endtime="20201030 11:51:45.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.365" endtime="20201030 11:51:45.673"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:45.677" level="INFO">${RESULT} = [{'diff': 5.913899999999972e-05}, {'diff': 5.838899999999897e-05}, {'diff': 5.883299999999772e-05}, {'diff': 5.916699999999886e-05}, {'diff': 5.9028000000002634e-05}, {'diff': 5.88749999999999e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:45.674" endtime="20201030 11:51:45.677"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:45.681" level="INFO">${ACCURACY} = {'diff': [5.913899999999972e-05, 5.838899999999897e-05, 5.883299999999772e-05, 5.916699999999886e-05, 5.9028000000002634e-05, 5.88749999999999e-05, 5.8972000000000885e-05, 5.840300000000201e-05, 5.852...</msg>
<status status="PASS" starttime="20201030 11:51:45.678" endtime="20201030 11:51:45.681"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.685" level="INFO">NAME: accuracy-TIMER_SET-54-philip</msg>
<status status="PASS" starttime="20201030 11:51:45.684" endtime="20201030 11:51:45.686"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.688" level="INFO">VALUE: [5.913899999999972e-05, 5.838899999999897e-05, 5.883299999999772e-05, 5.916699999999886e-05, 5.9028000000002634e-05, 5.88749999999999e-05, 5.8972000000000885e-05, 5.840300000000201e-05, 5.8527999999998664e-05, 5.9292000000002454e-05, 5.9306000000002024e-05, 5.9334000000001164e-05, 5.85689999999979e-05, 5.8777999999998914e-05, 5.85689999999979e-05, 5.8971999999997415e-05, 5.9222000000001135e-05, 5.884699999999729e-05, 5.880499999999858e-05, 5.9263999999999845e-05, 5.883300000000119e-05, 5.86810000000014e-05, 5.9042000000002204e-05, 5.9291999999998984e-05, 5.9263999999999845e-05, 5.870900000000054e-05, 5.8485999999999955e-05, 5.888899999999947e-05, 5.9306000000002024e-05, 5.920900000000104e-05, 5.8430000000001675e-05, 5.8764000000002814e-05, 5.8929999999998706e-05, 5.931899999999865e-05, 5.859700000000051e-05, 5.9194000000001995e-05, 5.916700000000233e-05, 5.8485999999999955e-05, 5.9014000000003064e-05, 5.8792000000001954e-05, 5.866699999999836e-05, 5.852699999999919e-05, 5.9069999999997874e-05, 5.861199999999955e-05, 5.8430000000001675e-05, 5.9250000000000275e-05, 5.861100000000008e-05, 5.8763999999999345e-05, 5.8458000000000815e-05, 5.890300000000251e-05]</msg>
<status status="PASS" starttime="20201030 11:51:45.686" endtime="20201030 11:51:45.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.682" endtime="20201030 11:51:45.689"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:45.693" endtime="20201030 11:51:45.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.691" endtime="20201030 11:51:45.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.690" endtime="20201030 11:51:45.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.333" endtime="20201030 11:51:45.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.333" endtime="20201030 11:51:45.713"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.722" endtime="20201030 11:51:45.741"></status>
</kw>
<msg timestamp="20201030 11:51:45.741" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.720" endtime="20201030 11:51:45.741"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:45.744" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_set 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:45.742" endtime="20201030 11:51:45.744"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.745" endtime="20201030 11:51:45.746"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.718" endtime="20201030 11:51:45.747"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.716" endtime="20201030 11:51:45.747"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:45.754" endtime="20201030 11:51:46.039"></status>
</kw>
<msg timestamp="20201030 11:51:46.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:45.752" endtime="20201030 11:51:46.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.051" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022695167, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022754875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.044" endtime="20201030 11:51:46.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.052" endtime="20201030 11:51:46.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.750" endtime="20201030 11:51:46.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.748" endtime="20201030 11:51:46.055"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.058" level="INFO">${RESULT} = [{'diff': 5.9708000000002065e-05}, {'diff': 6.0028000000000165e-05}, {'diff': 5.954099999999976e-05}, {'diff': 6.020900000000204e-05}, {'diff': 5.9665999999999886e-05}, {'diff': 5.991700000000308e-05}...</msg>
<status status="PASS" starttime="20201030 11:51:46.055" endtime="20201030 11:51:46.059"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.063" level="INFO">${ACCURACY} = {'diff': [5.9708000000002065e-05, 6.0028000000000165e-05, 5.954099999999976e-05, 6.020900000000204e-05, 5.9665999999999886e-05, 5.991700000000308e-05, 5.9597999999997514e-05, 5.977700000000044e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:51:46.059" endtime="20201030 11:51:46.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.067" level="INFO">NAME: accuracy-TIMER_SET-55-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.066" endtime="20201030 11:51:46.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.070" level="INFO">VALUE: [5.9708000000002065e-05, 6.0028000000000165e-05, 5.954099999999976e-05, 6.020900000000204e-05, 5.9665999999999886e-05, 5.991700000000308e-05, 5.9597999999997514e-05, 5.977700000000044e-05, 5.95689999999989e-05, 5.9971999999998415e-05, 5.986099999999786e-05, 5.963900000000022e-05, 6.0250000000001275e-05, 6.0291999999999984e-05, 5.962500000000065e-05, 5.9735999999997735e-05, 6.011099999999811e-05, 5.941699999999911e-05, 5.9472000000001385e-05, 5.9597999999997514e-05, 5.934699999999779e-05, 5.965299999999979e-05, 6.0097999999998014e-05, 5.9929999999999706e-05, 5.966699999999936e-05, 6.0151999999997346e-05, 6.0221999999998665e-05, 5.988900000000047e-05, 5.9514000000000095e-05, 5.9764000000000345e-05, 6.0207999999999096e-05, 5.9443999999998776e-05, 6.011100000000158e-05, 6.013900000000072e-05, 5.9527999999999665e-05, 6.036100000000183e-05, 6.013899999999725e-05, 6.013899999999725e-05, 5.938899999999997e-05, 5.994500000000222e-05, 6.0236000000001705e-05, 6.0305999999999554e-05, 6.002700000000069e-05, 5.965299999999979e-05, 6.012499999999768e-05, 5.9722000000001635e-05, 6.0278000000000415e-05, 6.037499999999793e-05, 5.968099999999893e-05, 5.986100000000133e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.068" endtime="20201030 11:51:46.071"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.064" endtime="20201030 11:51:46.072"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.075" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.074" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.073" endtime="20201030 11:51:46.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.714" endtime="20201030 11:51:46.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:45.714" endtime="20201030 11:51:46.096"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.105" endtime="20201030 11:51:46.122"></status>
</kw>
<msg timestamp="20201030 11:51:46.122" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.103" endtime="20201030 11:51:46.122"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.124" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_set 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.123" endtime="20201030 11:51:46.125"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.125" endtime="20201030 11:51:46.127"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.101" endtime="20201030 11:51:46.128"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.098" endtime="20201030 11:51:46.128"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.134" endtime="20201030 11:51:46.419"></status>
</kw>
<msg timestamp="20201030 11:51:46.422" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.133" endtime="20201030 11:51:46.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.430" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020134208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020195347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.423" endtime="20201030 11:51:46.430"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.431" endtime="20201030 11:51:46.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.130" endtime="20201030 11:51:46.433"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.129" endtime="20201030 11:51:46.434"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.438" level="INFO">${RESULT} = [{'diff': 6.113899999999825e-05}, {'diff': 6.068099999999993e-05}, {'diff': 6.119400000000053e-05}, {'diff': 6.086099999999886e-05}, {'diff': 6.0999999999998555e-05}, {'diff': 6.0514000000001095e-05},...</msg>
<status status="PASS" starttime="20201030 11:51:46.434" endtime="20201030 11:51:46.438"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.443" level="INFO">${ACCURACY} = {'diff': [6.113899999999825e-05, 6.068099999999993e-05, 6.119400000000053e-05, 6.086099999999886e-05, 6.0999999999998555e-05, 6.0514000000001095e-05, 6.088900000000147e-05, 6.126399999999838e-05, 6.09...</msg>
<status status="PASS" starttime="20201030 11:51:46.439" endtime="20201030 11:51:46.443"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.447" level="INFO">NAME: accuracy-TIMER_SET-56-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.446" endtime="20201030 11:51:46.447"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.449" level="INFO">VALUE: [6.113899999999825e-05, 6.068099999999993e-05, 6.119400000000053e-05, 6.086099999999886e-05, 6.0999999999998555e-05, 6.0514000000001095e-05, 6.088900000000147e-05, 6.126399999999838e-05, 6.095899999999932e-05, 6.08750000000019e-05, 6.129200000000098e-05, 6.127800000000141e-05, 6.0651999999997847e-05, 6.129100000000151e-05, 6.123599999999924e-05, 6.086100000000233e-05, 6.087499999999843e-05, 6.041700000000011e-05, 6.1013999999998125e-05, 6.0694000000000026e-05, 6.0792000000000485e-05, 6.072299999999864e-05, 6.08750000000019e-05, 6.111099999999911e-05, 6.0500000000001525e-05, 6.0888999999998e-05, 6.0986000000002455e-05, 6.123599999999924e-05, 6.118000000000096e-05, 6.116600000000139e-05, 6.0957999999999846e-05, 6.0957999999999846e-05, 6.084699999999929e-05, 6.06949999999995e-05, 6.1028000000001165e-05, 6.087499999999843e-05, 6.119400000000053e-05, 6.06949999999995e-05, 6.0597999999998514e-05, 6.068099999999993e-05, 6.095899999999932e-05, 6.0514000000001095e-05, 6.127700000000194e-05, 6.095899999999932e-05, 6.102700000000169e-05, 6.0971999999999416e-05, 6.0735999999998735e-05, 6.115299999999782e-05, 6.12080000000001e-05, 6.131899999999718e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.448" endtime="20201030 11:51:46.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.443" endtime="20201030 11:51:46.451"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.455" endtime="20201030 11:51:46.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.453" endtime="20201030 11:51:46.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.452" endtime="20201030 11:51:46.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.097" endtime="20201030 11:51:46.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.096" endtime="20201030 11:51:46.475"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.484" endtime="20201030 11:51:46.507"></status>
</kw>
<msg timestamp="20201030 11:51:46.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.482" endtime="20201030 11:51:46.508"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.510" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_set 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.509" endtime="20201030 11:51:46.511"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.512" endtime="20201030 11:51:46.513"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.480" endtime="20201030 11:51:46.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.478" endtime="20201030 11:51:46.514"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.521" endtime="20201030 11:51:46.807"></status>
</kw>
<msg timestamp="20201030 11:51:46.810" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.519" endtime="20201030 11:51:46.810"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.818" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019321681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.811" endtime="20201030 11:51:46.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.819" endtime="20201030 11:51:46.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.517" endtime="20201030 11:51:46.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.515" endtime="20201030 11:51:46.822"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:46.826" level="INFO">${RESULT} = [{'diff': 6.170900000000007e-05}, {'diff': 6.179099999999854e-05}, {'diff': 6.190299999999857e-05}, {'diff': 6.219399999999806e-05}, {'diff': 6.165199999999885e-05}, {'diff': 6.202800000000216e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:46.823" endtime="20201030 11:51:46.826"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:46.830" level="INFO">${ACCURACY} = {'diff': [6.170900000000007e-05, 6.179099999999854e-05, 6.190299999999857e-05, 6.219399999999806e-05, 6.165199999999885e-05, 6.202800000000216e-05, 6.222200000000067e-05, 6.173599999999974e-05, 6.1818...</msg>
<status status="PASS" starttime="20201030 11:51:46.827" endtime="20201030 11:51:46.830"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.834" level="INFO">NAME: accuracy-TIMER_SET-57-philip</msg>
<status status="PASS" starttime="20201030 11:51:46.833" endtime="20201030 11:51:46.835"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.837" level="INFO">VALUE: [6.170900000000007e-05, 6.179099999999854e-05, 6.190299999999857e-05, 6.219399999999806e-05, 6.165199999999885e-05, 6.202800000000216e-05, 6.222200000000067e-05, 6.173599999999974e-05, 6.181899999999768e-05, 6.187499999999943e-05, 6.226399999999938e-05, 6.215299999999882e-05, 6.215299999999882e-05, 6.204200000000173e-05, 6.157000000000037e-05, 6.13339999999997e-05, 6.168100000000093e-05, 6.142999999999774e-05, 6.176399999999888e-05, 6.147199999999992e-05, 6.179100000000201e-05, 6.15279999999982e-05, 6.22219999999972e-05, 6.227800000000241e-05, 6.167999999999799e-05, 6.213899999999925e-05, 6.227799999999895e-05, 6.186099999999986e-05, 6.20279999999987e-05, 6.172299999999964e-05, 6.177800000000191e-05, 6.177799999999845e-05, 6.220900000000057e-05, 6.216699999999839e-05, 6.155499999999786e-05, 6.198599999999999e-05, 6.151399999999863e-05, 6.22499999999998e-05, 6.217999999999849e-05, 6.233300000000122e-05, 6.201399999999913e-05, 6.236100000000036e-05, 6.205599999999784e-05, 6.182000000000062e-05, 6.166700000000136e-05, 6.148699999999896e-05, 6.201399999999913e-05, 6.187499999999943e-05, 6.195900000000032e-05, 6.148699999999896e-05]</msg>
<status status="PASS" starttime="20201030 11:51:46.835" endtime="20201030 11:51:46.837"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.831" endtime="20201030 11:51:46.838"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:46.842" endtime="20201030 11:51:46.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.840" endtime="20201030 11:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.839" endtime="20201030 11:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.476" endtime="20201030 11:51:46.862"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.476" endtime="20201030 11:51:46.862"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.871" endtime="20201030 11:51:46.889"></status>
</kw>
<msg timestamp="20201030 11:51:46.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.869" endtime="20201030 11:51:46.889"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:46.891" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_set 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:46.890" endtime="20201030 11:51:46.892"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.893" endtime="20201030 11:51:46.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.867" endtime="20201030 11:51:46.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.865" endtime="20201030 11:51:46.895"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:46.902" endtime="20201030 11:51:47.187"></status>
</kw>
<msg timestamp="20201030 11:51:47.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:46.900" endtime="20201030 11:51:47.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020236681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020299681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.191" endtime="20201030 11:51:47.198"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.199" endtime="20201030 11:51:47.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.897" endtime="20201030 11:51:47.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.896" endtime="20201030 11:51:47.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.206" level="INFO">${RESULT} = [{'diff': 6.300000000000056e-05}, {'diff': 6.283300000000172e-05}, {'diff': 6.29020000000001e-05}, {'diff': 6.266599999999942e-05}, {'diff': 6.316599999999992e-05}, {'diff': 6.251399999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:47.202" endtime="20201030 11:51:47.206"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.210" level="INFO">${ACCURACY} = {'diff': [6.300000000000056e-05, 6.283300000000172e-05, 6.29020000000001e-05, 6.266599999999942e-05, 6.316599999999992e-05, 6.251399999999963e-05, 6.313900000000025e-05, 6.316700000000286e-05, 6.28329...</msg>
<status status="PASS" starttime="20201030 11:51:47.207" endtime="20201030 11:51:47.210"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.214" level="INFO">NAME: accuracy-TIMER_SET-58-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.213" endtime="20201030 11:51:47.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.217" level="INFO">VALUE: [6.300000000000056e-05, 6.283300000000172e-05, 6.29020000000001e-05, 6.266599999999942e-05, 6.316599999999992e-05, 6.251399999999963e-05, 6.313900000000025e-05, 6.316700000000286e-05, 6.283299999999825e-05, 6.316699999999939e-05, 6.245800000000135e-05, 6.248600000000049e-05, 6.280599999999859e-05, 6.27500000000003e-05, 6.283300000000172e-05, 6.312500000000068e-05, 6.268099999999846e-05, 6.281899999999868e-05, 6.30279999999997e-05, 6.286099999999739e-05, 6.312499999999721e-05, 6.290299999999957e-05, 6.326400000000038e-05, 6.23889999999995e-05, 6.251399999999963e-05, 6.319499999999853e-05, 6.241699999999864e-05, 6.262500000000018e-05, 6.266699999999889e-05, 6.333399999999823e-05, 6.2889e-05, 6.250000000000006e-05, 6.304099999999979e-05, 6.2889e-05, 6.294400000000228e-05, 6.329100000000004e-05, 6.286100000000086e-05, 6.255499999999886e-05, 6.311100000000111e-05, 6.247199999999745e-05, 6.297200000000142e-05, 6.300000000000056e-05, 6.241699999999864e-05, 6.250000000000006e-05, 6.297300000000089e-05, 6.327799999999995e-05, 6.329199999999952e-05, 6.318000000000296e-05, 6.280500000000258e-05, 6.290299999999957e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.215" endtime="20201030 11:51:47.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.211" endtime="20201030 11:51:47.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.222" endtime="20201030 11:51:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.221" endtime="20201030 11:51:47.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.220" endtime="20201030 11:51:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.863" endtime="20201030 11:51:47.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:46.863" endtime="20201030 11:51:47.243"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.252" endtime="20201030 11:51:47.268"></status>
</kw>
<msg timestamp="20201030 11:51:47.269" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.250" endtime="20201030 11:51:47.269"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_set 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.270" endtime="20201030 11:51:47.271"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.272" endtime="20201030 11:51:47.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.248" endtime="20201030 11:51:47.274"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.245" endtime="20201030 11:51:47.275"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.281" endtime="20201030 11:51:47.567"></status>
</kw>
<msg timestamp="20201030 11:51:47.570" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.279" endtime="20201030 11:51:47.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.578" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019690264, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.571" endtime="20201030 11:51:47.579"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.579" endtime="20201030 11:51:47.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.277" endtime="20201030 11:51:47.582"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.275" endtime="20201030 11:51:47.582"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.586" level="INFO">${RESULT} = [{'diff': 6.367999999999999e-05}, {'diff': 6.380599999999959e-05}, {'diff': 6.359800000000151e-05}, {'diff': 6.432000000000312e-05}, {'diff': 6.330600000000255e-05}, {'diff': 6.39020000000011e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:47.583" endtime="20201030 11:51:47.586"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.591" level="INFO">${ACCURACY} = {'diff': [6.367999999999999e-05, 6.380599999999959e-05, 6.359800000000151e-05, 6.432000000000312e-05, 6.330600000000255e-05, 6.39020000000011e-05, 6.430500000000061e-05, 6.39020000000011e-05, 6.394399...</msg>
<status status="PASS" starttime="20201030 11:51:47.587" endtime="20201030 11:51:47.591"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.595" level="INFO">NAME: accuracy-TIMER_SET-59-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.594" endtime="20201030 11:51:47.596"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.598" level="INFO">VALUE: [6.367999999999999e-05, 6.380599999999959e-05, 6.359800000000151e-05, 6.432000000000312e-05, 6.330600000000255e-05, 6.39020000000011e-05, 6.430500000000061e-05, 6.39020000000011e-05, 6.39439999999998e-05, 6.379100000000054e-05, 6.413900000000125e-05, 6.411100000000211e-05, 6.42219999999992e-05, 6.377800000000045e-05, 6.405599999999984e-05, 6.377800000000045e-05, 6.391700000000014e-05, 6.397299999999842e-05, 6.374999999999784e-05, 6.369499999999903e-05, 6.418099999999996e-05, 6.381999999999916e-05, 6.362499999999771e-05, 6.34020000000006e-05, 6.367999999999999e-05, 6.367999999999999e-05, 6.345799999999888e-05, 6.404200000000027e-05, 6.39439999999998e-05, 6.429199999999705e-05, 6.357000000000237e-05, 6.397199999999895e-05, 6.419400000000006e-05, 6.35280000000002e-05, 6.401400000000113e-05, 6.368100000000293e-05, 6.433299999999975e-05, 6.411100000000211e-05, 6.372200000000217e-05, 6.399999999999809e-05, 6.380499999999664e-05, 6.365300000000032e-05, 6.377800000000045e-05, 6.412500000000168e-05, 6.395899999999885e-05, 6.347200000000192e-05, 6.38479999999983e-05, 6.380599999999959e-05, 6.337500000000093e-05, 6.395900000000232e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.596" endtime="20201030 11:51:47.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.592" endtime="20201030 11:51:47.599"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.603" endtime="20201030 11:51:47.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.601" endtime="20201030 11:51:47.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.600" endtime="20201030 11:51:47.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.244" endtime="20201030 11:51:47.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.243" endtime="20201030 11:51:47.623"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.632" endtime="20201030 11:51:47.649"></status>
</kw>
<msg timestamp="20201030 11:51:47.649" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.631" endtime="20201030 11:51:47.649"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_set 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:47.650" endtime="20201030 11:51:47.652"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.653" endtime="20201030 11:51:47.654"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.628" endtime="20201030 11:51:47.655"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.626" endtime="20201030 11:51:47.655"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.662" endtime="20201030 11:51:47.949"></status>
</kw>
<msg timestamp="20201030 11:51:47.952" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.660" endtime="20201030 11:51:47.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.961" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019695042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019759875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:47.953" endtime="20201030 11:51:47.961"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:47.962" endtime="20201030 11:51:47.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.658" endtime="20201030 11:51:47.964"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.656" endtime="20201030 11:51:47.964"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:47.968" level="INFO">${RESULT} = [{'diff': 6.483300000000025e-05}, {'diff': 6.530599999999762e-05}, {'diff': 6.501400000000213e-05}, {'diff': 6.515299999999835e-05}, {'diff': 6.445899999999935e-05}, {'diff': 6.448599999999902e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:47.965" endtime="20201030 11:51:47.968"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:47.972" level="INFO">${ACCURACY} = {'diff': [6.483300000000025e-05, 6.530599999999762e-05, 6.501400000000213e-05, 6.515299999999835e-05, 6.445899999999935e-05, 6.448599999999902e-05, 6.5276999999999e-05, 6.461200000000208e-05, 6.526399...</msg>
<status status="PASS" starttime="20201030 11:51:47.969" endtime="20201030 11:51:47.973"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.977" level="INFO">NAME: accuracy-TIMER_SET-60-philip</msg>
<status status="PASS" starttime="20201030 11:51:47.976" endtime="20201030 11:51:47.977"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:47.979" level="INFO">VALUE: [6.483300000000025e-05, 6.530599999999762e-05, 6.501400000000213e-05, 6.515299999999835e-05, 6.445899999999935e-05, 6.448599999999902e-05, 6.5276999999999e-05, 6.461200000000208e-05, 6.52639999999989e-05, 6.476400000000188e-05, 6.47500000000023e-05, 6.524999999999934e-05, 6.529200000000152e-05, 6.437500000000193e-05, 6.480600000000059e-05, 6.524999999999934e-05, 6.465300000000132e-05, 6.474999999999884e-05, 6.50280000000017e-05, 6.441700000000064e-05, 6.474999999999884e-05, 6.524999999999934e-05, 6.461099999999914e-05, 6.447299999999892e-05, 6.511099999999964e-05, 6.445799999999988e-05, 6.511099999999964e-05, 6.463899999999828e-05, 6.463899999999828e-05, 6.469400000000056e-05, 6.511099999999964e-05, 6.470800000000013e-05, 6.536099999999989e-05, 6.498599999999952e-05, 6.52090000000001e-05, 6.466700000000089e-05, 6.443100000000021e-05, 6.494399999999734e-05, 6.49020000000021e-05, 6.462499999999871e-05, 6.511099999999964e-05, 6.511099999999964e-05, 6.493000000000124e-05, 6.487499999999896e-05, 6.481900000000068e-05, 6.462499999999871e-05, 6.518000000000149e-05, 6.501400000000213e-05, 6.447199999999945e-05, 6.479199999999755e-05]</msg>
<status status="PASS" starttime="20201030 11:51:47.978" endtime="20201030 11:51:47.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.973" endtime="20201030 11:51:47.981"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:47.984" endtime="20201030 11:51:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.983" endtime="20201030 11:51:48.004"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.981" endtime="20201030 11:51:48.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.624" endtime="20201030 11:51:48.005"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:47.624" endtime="20201030 11:51:48.005"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.014" endtime="20201030 11:51:48.031"></status>
</kw>
<msg timestamp="20201030 11:51:48.032" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.012" endtime="20201030 11:51:48.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_set 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.033" endtime="20201030 11:51:48.035"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.035" endtime="20201030 11:51:48.037"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.010" endtime="20201030 11:51:48.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.008" endtime="20201030 11:51:48.038"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.044" endtime="20201030 11:51:48.330"></status>
</kw>
<msg timestamp="20201030 11:51:48.333" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020694347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.043" endtime="20201030 11:51:48.333"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.341" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020628889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020694347, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.334" endtime="20201030 11:51:48.342"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.343" endtime="20201030 11:51:48.344"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.040" endtime="20201030 11:51:48.345"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.039" endtime="20201030 11:51:48.345"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.349" level="INFO">${RESULT} = [{'diff': 6.545799999999741e-05}, {'diff': 6.57220000000007e-05}, {'diff': 6.636100000000089e-05}, {'diff': 6.597199999999748e-05}, {'diff': 6.60830000000015e-05}, {'diff': 6.588899999999953e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:48.346" endtime="20201030 11:51:48.349"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.353" level="INFO">${ACCURACY} = {'diff': [6.545799999999741e-05, 6.57220000000007e-05, 6.636100000000089e-05, 6.597199999999748e-05, 6.60830000000015e-05, 6.588899999999953e-05, 6.62639999999999e-05, 6.545900000000035e-05, 6.5723000...</msg>
<status status="PASS" starttime="20201030 11:51:48.350" endtime="20201030 11:51:48.353"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.358" level="INFO">NAME: accuracy-TIMER_SET-61-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.357" endtime="20201030 11:51:48.358"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.360" level="INFO">VALUE: [6.545799999999741e-05, 6.57220000000007e-05, 6.636100000000089e-05, 6.597199999999748e-05, 6.60830000000015e-05, 6.588899999999953e-05, 6.62639999999999e-05, 6.545900000000035e-05, 6.572300000000017e-05, 6.623600000000077e-05, 6.568099999999799e-05, 6.547200000000045e-05, 6.622199999999773e-05, 6.631900000000218e-05, 6.57220000000007e-05, 6.601399999999966e-05, 6.627800000000295e-05, 6.58480000000003e-05, 6.637500000000046e-05, 6.57639999999994e-05, 6.540300000000207e-05, 6.627800000000295e-05, 6.569500000000103e-05, 6.574999999999984e-05, 6.62090000000011e-05, 6.594499999999781e-05, 6.637500000000046e-05, 6.548600000000002e-05, 6.552699999999925e-05, 6.586100000000039e-05, 6.594399999999834e-05, 6.569499999999756e-05, 6.602799999999923e-05, 6.551399999999916e-05, 6.582000000000116e-05, 6.616699999999892e-05, 6.586099999999692e-05, 6.618100000000196e-05, 6.62639999999999e-05, 6.602799999999923e-05, 6.581899999999821e-05, 6.542999999999827e-05, 6.594399999999834e-05, 6.57769999999995e-05, 6.563900000000275e-05, 6.609700000000107e-05, 6.613899999999978e-05, 6.591700000000214e-05, 6.600000000000009e-05, 6.636100000000089e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.359" endtime="20201030 11:51:48.367"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.354" endtime="20201030 11:51:48.368"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.372" endtime="20201030 11:51:48.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.370" endtime="20201030 11:51:48.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.369" endtime="20201030 11:51:48.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.006" endtime="20201030 11:51:48.392"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.005" endtime="20201030 11:51:48.392"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.401" endtime="20201030 11:51:48.419"></status>
</kw>
<msg timestamp="20201030 11:51:48.419" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.399" endtime="20201030 11:51:48.419"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.422" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_set 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.420" endtime="20201030 11:51:48.422"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.423" endtime="20201030 11:51:48.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.397" endtime="20201030 11:51:48.425"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.395" endtime="20201030 11:51:48.425"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.432" endtime="20201030 11:51:48.718"></status>
</kw>
<msg timestamp="20201030 11:51:48.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.430" endtime="20201030 11:51:48.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019360181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019427236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.722" endtime="20201030 11:51:48.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.731" endtime="20201030 11:51:48.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.428" endtime="20201030 11:51:48.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.426" endtime="20201030 11:51:48.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:48.737" level="INFO">${RESULT} = [{'diff': 6.705499999999989e-05}, {'diff': 6.662500000000071e-05}, {'diff': 6.688900000000053e-05}, {'diff': 6.645799999999841e-05}, {'diff': 6.722199999999873e-05}, {'diff': 6.697300000000142e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:48.734" endtime="20201030 11:51:48.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:48.742" level="INFO">${ACCURACY} = {'diff': [6.705499999999989e-05, 6.662500000000071e-05, 6.688900000000053e-05, 6.645799999999841e-05, 6.722199999999873e-05, 6.697300000000142e-05, 6.694500000000228e-05, 6.641699999999917e-05, 6.6944...</msg>
<status status="PASS" starttime="20201030 11:51:48.738" endtime="20201030 11:51:48.742"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.746" level="INFO">NAME: accuracy-TIMER_SET-62-philip</msg>
<status status="PASS" starttime="20201030 11:51:48.745" endtime="20201030 11:51:48.747"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.749" level="INFO">VALUE: [6.705499999999989e-05, 6.662500000000071e-05, 6.688900000000053e-05, 6.645799999999841e-05, 6.722199999999873e-05, 6.697300000000142e-05, 6.694500000000228e-05, 6.641699999999917e-05, 6.694499999999881e-05, 6.730500000000014e-05, 6.684700000000182e-05, 6.723600000000177e-05, 6.648600000000102e-05, 6.716699999999992e-05, 6.662500000000071e-05, 6.734699999999885e-05, 6.64029999999996e-05, 6.713900000000078e-05, 6.683299999999878e-05, 6.661200000000062e-05, 6.733400000000223e-05, 6.700000000000109e-05, 6.736200000000137e-05, 6.684699999999835e-05, 6.670799999999866e-05, 6.695799999999891e-05, 6.661100000000114e-05, 6.716699999999992e-05, 6.638900000000003e-05, 6.661100000000114e-05, 6.743000000000027e-05, 6.650000000000059e-05, 6.661099999999767e-05, 6.695899999999838e-05, 6.674999999999737e-05, 6.687499999999749e-05, 6.690200000000063e-05, 6.693099999999924e-05, 6.645800000000188e-05, 6.702700000000075e-05, 6.730599999999962e-05, 6.670800000000213e-05, 6.694399999999934e-05, 6.733399999999876e-05, 6.694499999999881e-05, 6.683300000000225e-05, 6.688900000000053e-05, 6.688900000000053e-05, 6.711100000000164e-05, 6.673600000000127e-05]</msg>
<status status="PASS" starttime="20201030 11:51:48.747" endtime="20201030 11:51:48.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.743" endtime="20201030 11:51:48.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:48.754" endtime="20201030 11:51:48.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.752" endtime="20201030 11:51:48.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.751" endtime="20201030 11:51:48.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.393" endtime="20201030 11:51:48.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.393" endtime="20201030 11:51:48.774"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.783" endtime="20201030 11:51:48.801"></status>
</kw>
<msg timestamp="20201030 11:51:48.801" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.781" endtime="20201030 11:51:48.801"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:48.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_set 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:48.802" endtime="20201030 11:51:48.804"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.805" endtime="20201030 11:51:48.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.779" endtime="20201030 11:51:48.807"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.777" endtime="20201030 11:51:48.808"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:48.814" endtime="20201030 11:51:49.101"></status>
</kw>
<msg timestamp="20201030 11:51:49.104" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:48.812" endtime="20201030 11:51:49.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020388319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020456514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.105" endtime="20201030 11:51:49.113"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.114" endtime="20201030 11:51:49.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.810" endtime="20201030 11:51:49.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.808" endtime="20201030 11:51:49.116"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.120" level="INFO">${RESULT} = [{'diff': 6.819500000000006e-05}, {'diff': 6.793000000000077e-05}, {'diff': 6.822199999999973e-05}, {'diff': 6.779200000000055e-05}, {'diff': 6.788900000000153e-05}, {'diff': 6.800000000000209e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:49.117" endtime="20201030 11:51:49.120"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.124" level="INFO">${ACCURACY} = {'diff': [6.819500000000006e-05, 6.793000000000077e-05, 6.822199999999973e-05, 6.779200000000055e-05, 6.788900000000153e-05, 6.800000000000209e-05, 6.827800000000148e-05, 6.786099999999892e-05, 6.7555...</msg>
<status status="PASS" starttime="20201030 11:51:49.121" endtime="20201030 11:51:49.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.129" level="INFO">NAME: accuracy-TIMER_SET-63-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.128" endtime="20201030 11:51:49.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.131" level="INFO">VALUE: [6.819500000000006e-05, 6.793000000000077e-05, 6.822199999999973e-05, 6.779200000000055e-05, 6.788900000000153e-05, 6.800000000000209e-05, 6.827800000000148e-05, 6.786099999999892e-05, 6.755599999999987e-05, 6.806900000000046e-05, 6.808300000000003e-05, 6.788899999999806e-05, 6.820800000000016e-05, 6.802699999999828e-05, 6.770799999999966e-05, 6.815299999999788e-05, 6.752800000000073e-05, 6.829199999999758e-05, 6.74030000000006e-05, 6.752800000000073e-05, 6.75420000000003e-05, 6.772199999999923e-05, 6.816700000000092e-05, 6.813899999999831e-05, 6.797299999999895e-05, 6.805600000000037e-05, 6.787500000000196e-05, 6.744399999999984e-05, 6.816599999999798e-05, 6.748600000000202e-05, 6.770799999999966e-05, 6.765300000000085e-05, 6.798599999999905e-05, 6.777800000000098e-05, 6.786100000000239e-05, 6.77359999999988e-05, 6.837500000000246e-05, 6.806999999999994e-05, 6.768099999999999e-05, 6.795899999999938e-05, 6.744399999999984e-05, 6.752700000000125e-05, 6.802699999999828e-05, 6.763900000000128e-05, 6.797200000000295e-05, 6.744499999999931e-05, 6.793100000000024e-05, 6.818100000000049e-05, 6.781900000000021e-05, 6.774999999999837e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.130" endtime="20201030 11:51:49.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.125" endtime="20201030 11:51:49.133"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.136" endtime="20201030 11:51:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.135" endtime="20201030 11:51:49.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.134" endtime="20201030 11:51:49.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.775" endtime="20201030 11:51:49.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:48.775" endtime="20201030 11:51:49.157"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.165" endtime="20201030 11:51:49.186"></status>
</kw>
<msg timestamp="20201030 11:51:49.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.164" endtime="20201030 11:51:49.187"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.189" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_set 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.187" endtime="20201030 11:51:49.189"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.190" endtime="20201030 11:51:49.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.161" endtime="20201030 11:51:49.192"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.159" endtime="20201030 11:51:49.193"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.199" endtime="20201030 11:51:49.484"></status>
</kw>
<msg timestamp="20201030 11:51:49.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.197" endtime="20201030 11:51:49.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023270819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023339958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.488" endtime="20201030 11:51:49.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.496" endtime="20201030 11:51:49.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.195" endtime="20201030 11:51:49.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.193" endtime="20201030 11:51:49.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.503" level="INFO">${RESULT} = [{'diff': 6.913899999999931e-05}, {'diff': 6.847199999999998e-05}, {'diff': 6.915299999999888e-05}, {'diff': 6.844399999999737e-05}, {'diff': 6.922199999999726e-05}, {'diff': 6.922200000000073e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:49.500" endtime="20201030 11:51:49.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.507" level="INFO">${ACCURACY} = {'diff': [6.913899999999931e-05, 6.847199999999998e-05, 6.915299999999888e-05, 6.844399999999737e-05, 6.922199999999726e-05, 6.922200000000073e-05, 6.902799999999876e-05, 6.920900000000063e-05, 6.9374...</msg>
<status status="PASS" starttime="20201030 11:51:49.504" endtime="20201030 11:51:49.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.511" level="INFO">NAME: accuracy-TIMER_SET-64-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.510" endtime="20201030 11:51:49.512"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.514" level="INFO">VALUE: [6.913899999999931e-05, 6.847199999999998e-05, 6.915299999999888e-05, 6.844399999999737e-05, 6.922199999999726e-05, 6.922200000000073e-05, 6.902799999999876e-05, 6.920900000000063e-05, 6.937499999999999e-05, 6.894400000000134e-05, 6.838799999999909e-05, 6.880599999999765e-05, 6.867999999999805e-05, 6.848599999999955e-05, 6.870800000000066e-05, 6.874999999999937e-05, 6.917999999999855e-05, 6.845800000000041e-05, 6.895800000000091e-05, 6.840299999999813e-05, 6.866600000000195e-05, 6.929200000000205e-05, 6.912499999999974e-05, 6.924999999999987e-05, 6.874999999999937e-05, 6.838899999999856e-05, 6.897200000000048e-05, 6.884700000000035e-05, 6.919400000000159e-05, 6.895800000000091e-05, 6.883300000000078e-05, 6.916699999999845e-05, 6.85970000000001e-05, 6.865299999999838e-05, 6.897200000000048e-05, 6.880599999999765e-05, 6.906900000000146e-05, 6.897299999999995e-05, 6.850000000000259e-05, 6.911100000000017e-05, 6.929100000000257e-05, 6.862499999999924e-05, 6.886099999999992e-05, 6.912499999999974e-05, 6.855600000000087e-05, 6.936100000000042e-05, 6.913899999999931e-05, 6.929199999999858e-05, 6.87359999999998e-05, 6.888900000000253e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.512" endtime="20201030 11:51:49.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.508" endtime="20201030 11:51:49.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.519" endtime="20201030 11:51:49.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.518" endtime="20201030 11:51:49.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.517" endtime="20201030 11:51:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.158" endtime="20201030 11:51:49.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.157" endtime="20201030 11:51:49.540"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.549" endtime="20201030 11:51:49.567"></status>
</kw>
<msg timestamp="20201030 11:51:49.568" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.548" endtime="20201030 11:51:49.568"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_set 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.569" endtime="20201030 11:51:49.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.571" endtime="20201030 11:51:49.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.545" endtime="20201030 11:51:49.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.543" endtime="20201030 11:51:49.573"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.580" endtime="20201030 11:51:49.866"></status>
</kw>
<msg timestamp="20201030 11:51:49.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.579" endtime="20201030 11:51:49.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021064208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021133681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.870" endtime="20201030 11:51:49.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.879" endtime="20201030 11:51:49.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.576" endtime="20201030 11:51:49.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.574" endtime="20201030 11:51:49.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:49.885" level="INFO">${RESULT} = [{'diff': 6.947300000000045e-05}, {'diff': 6.981899999999874e-05}, {'diff': 6.981899999999874e-05}, {'diff': 6.945799999999794e-05}, {'diff': 6.993000000000277e-05}, {'diff': 6.980600000000212e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:49.882" endtime="20201030 11:51:49.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:49.890" level="INFO">${ACCURACY} = {'diff': [6.947300000000045e-05, 6.981899999999874e-05, 6.981899999999874e-05, 6.945799999999794e-05, 6.993000000000277e-05, 6.980600000000212e-05, 6.955499999999892e-05, 7.012500000000074e-05, 6.9833...</msg>
<status status="PASS" starttime="20201030 11:51:49.886" endtime="20201030 11:51:49.890"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.894" level="INFO">NAME: accuracy-TIMER_SET-65-philip</msg>
<status status="PASS" starttime="20201030 11:51:49.893" endtime="20201030 11:51:49.895"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.897" level="INFO">VALUE: [6.947300000000045e-05, 6.981899999999874e-05, 6.981899999999874e-05, 6.945799999999794e-05, 6.993000000000277e-05, 6.980600000000212e-05, 6.955499999999892e-05, 7.012500000000074e-05, 6.983300000000178e-05, 6.972200000000123e-05, 7.018099999999902e-05, 6.954199999999883e-05, 6.977799999999951e-05, 6.947300000000045e-05, 7.001400000000019e-05, 7.000000000000062e-05, 6.945800000000141e-05, 7.001400000000019e-05, 6.954100000000282e-05, 6.943000000000227e-05, 6.951399999999969e-05, 6.955600000000187e-05, 6.968100000000199e-05, 7.00970000000016e-05, 6.997200000000148e-05, 6.933399999999729e-05, 7.018099999999902e-05, 6.99169999999992e-05, 7.03620000000009e-05, 7.026400000000044e-05, 6.99299999999993e-05, 6.994399999999887e-05, 6.976399999999994e-05, 7.012500000000074e-05, 7.030599999999915e-05, 6.979199999999908e-05, 6.973599999999733e-05, 6.984700000000135e-05, 6.984700000000135e-05, 6.997299999999748e-05, 6.995899999999791e-05, 7.018099999999902e-05, 6.967999999999905e-05, 6.988800000000059e-05, 6.952699999999978e-05, 6.970800000000166e-05, 6.954099999999935e-05, 6.981900000000221e-05, 6.995799999999844e-05, 7.037500000000099e-05]</msg>
<status status="PASS" starttime="20201030 11:51:49.895" endtime="20201030 11:51:49.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.891" endtime="20201030 11:51:49.898"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:49.902" endtime="20201030 11:51:49.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.900" endtime="20201030 11:51:49.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.899" endtime="20201030 11:51:49.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.541" endtime="20201030 11:51:49.922"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.540" endtime="20201030 11:51:49.922"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.931" endtime="20201030 11:51:49.948"></status>
</kw>
<msg timestamp="20201030 11:51:49.948" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.930" endtime="20201030 11:51:49.948"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:49.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_set 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:49.949" endtime="20201030 11:51:49.951"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.952" endtime="20201030 11:51:49.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.927" endtime="20201030 11:51:49.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.925" endtime="20201030 11:51:49.954"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:49.960" endtime="20201030 11:51:50.248"></status>
</kw>
<msg timestamp="20201030 11:51:50.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:49.959" endtime="20201030 11:51:50.251"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.259" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019544569, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019615931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.252" endtime="20201030 11:51:50.259"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.260" endtime="20201030 11:51:50.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.956" endtime="20201030 11:51:50.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.955" endtime="20201030 11:51:50.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.266" level="INFO">${RESULT} = [{'diff': 7.136199999999843e-05}, {'diff': 7.140299999999766e-05}, {'diff': 7.084699999999888e-05}, {'diff': 7.051400000000069e-05}, {'diff': 7.133399999999929e-05}, {'diff': 7.10970000000026e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:50.263" endtime="20201030 11:51:50.267"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.270" level="INFO">${ACCURACY} = {'diff': [7.136199999999843e-05, 7.140299999999766e-05, 7.084699999999888e-05, 7.051400000000069e-05, 7.133399999999929e-05, 7.10970000000026e-05, 7.080500000000017e-05, 7.068099999999952e-05, 7.03890...</msg>
<status status="PASS" starttime="20201030 11:51:50.267" endtime="20201030 11:51:50.271"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.275" level="INFO">NAME: accuracy-TIMER_SET-66-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.274" endtime="20201030 11:51:50.275"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.278" level="INFO">VALUE: [7.136199999999843e-05, 7.140299999999766e-05, 7.084699999999888e-05, 7.051400000000069e-05, 7.133399999999929e-05, 7.10970000000026e-05, 7.080500000000017e-05, 7.068099999999952e-05, 7.038900000000056e-05, 7.045799999999894e-05, 7.100000000000162e-05, 7.118100000000002e-05, 7.044499999999884e-05, 7.088900000000106e-05, 7.05689999999995e-05, 7.081899999999974e-05, 7.065199999999744e-05, 7.126399999999797e-05, 7.033299999999881e-05, 7.037500000000099e-05, 7.063900000000081e-05, 7.076400000000094e-05, 7.050000000000112e-05, 7.10970000000026e-05, 7.050000000000112e-05, 7.055499999999992e-05, 7.12360000000023e-05, 7.086099999999845e-05, 7.129200000000058e-05, 7.118000000000055e-05, 7.131900000000024e-05, 7.112499999999827e-05, 7.095799999999944e-05, 7.058299999999906e-05, 7.072200000000223e-05, 7.065300000000038e-05, 7.04169999999997e-05, 7.062500000000124e-05, 7.131999999999972e-05, 7.065300000000038e-05, 7.084799999999836e-05, 7.081999999999922e-05, 7.055499999999992e-05, 7.045800000000241e-05, 7.070799999999919e-05, 7.12499999999984e-05, 7.095799999999944e-05, 7.120799999999969e-05, 7.101399999999772e-05, 7.097299999999848e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.276" endtime="20201030 11:51:50.278"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.271" endtime="20201030 11:51:50.279"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.282" endtime="20201030 11:51:50.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.281" endtime="20201030 11:51:50.302"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.280" endtime="20201030 11:51:50.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.923" endtime="20201030 11:51:50.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:49.923" endtime="20201030 11:51:50.303"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.312" endtime="20201030 11:51:50.331"></status>
</kw>
<msg timestamp="20201030 11:51:50.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.310" endtime="20201030 11:51:50.331"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.333" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_set 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.332" endtime="20201030 11:51:50.334"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.334" endtime="20201030 11:51:50.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.308" endtime="20201030 11:51:50.337"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.306" endtime="20201030 11:51:50.337"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.343" endtime="20201030 11:51:50.637"></status>
</kw>
<msg timestamp="20201030 11:51:50.640" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.342" endtime="20201030 11:51:50.640"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.648" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020242708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020314194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:50.641" endtime="20201030 11:51:50.648"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.649" endtime="20201030 11:51:50.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.339" endtime="20201030 11:51:50.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.338" endtime="20201030 11:51:50.652"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:50.656" level="INFO">${RESULT} = [{'diff': 7.148599999999908e-05}, {'diff': 7.197200000000001e-05}, {'diff': 7.209700000000013e-05}, {'diff': 7.145899999999941e-05}, {'diff': 7.195800000000044e-05}, {'diff': 7.151400000000169e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:50.652" endtime="20201030 11:51:50.656"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:50.660" level="INFO">${ACCURACY} = {'diff': [7.148599999999908e-05, 7.197200000000001e-05, 7.209700000000013e-05, 7.145899999999941e-05, 7.195800000000044e-05, 7.151400000000169e-05, 7.170899999999966e-05, 7.145799999999994e-05, 7.1430...</msg>
<status status="PASS" starttime="20201030 11:51:50.657" endtime="20201030 11:51:50.660"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.664" level="INFO">NAME: accuracy-TIMER_SET-67-philip</msg>
<status status="PASS" starttime="20201030 11:51:50.663" endtime="20201030 11:51:50.664"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.667" level="INFO">VALUE: [7.148599999999908e-05, 7.197200000000001e-05, 7.209700000000013e-05, 7.145899999999941e-05, 7.195800000000044e-05, 7.151400000000169e-05, 7.170899999999966e-05, 7.145799999999994e-05, 7.14309999999968e-05, 7.177799999999804e-05, 7.213900000000231e-05, 7.208400000000004e-05, 7.209700000000013e-05, 7.168000000000105e-05, 7.145799999999994e-05, 7.199999999999915e-05, 7.226399999999897e-05, 7.2069000000001e-05, 7.229200000000158e-05, 7.19170000000012e-05, 7.202799999999829e-05, 7.216599999999851e-05, 7.177800000000151e-05, 7.220900000000016e-05, 7.179200000000108e-05, 7.14170000000007e-05, 7.166700000000095e-05, 7.173700000000227e-05, 7.227699999999906e-05, 7.177699999999856e-05, 7.197200000000001e-05, 7.237499999999952e-05, 7.149999999999865e-05, 7.236099999999995e-05, 7.150000000000212e-05, 7.138900000000156e-05, 7.195899999999991e-05, 7.169500000000009e-05, 7.154200000000083e-05, 7.176399999999847e-05, 7.227799999999854e-05, 7.192999999999783e-05, 7.190199999999869e-05, 7.152699999999831e-05, 7.220800000000069e-05, 7.229099999999863e-05, 7.158300000000006e-05, 7.202799999999829e-05, 7.177800000000151e-05, 7.188900000000206e-05]</msg>
<status status="PASS" starttime="20201030 11:51:50.665" endtime="20201030 11:51:50.668"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.661" endtime="20201030 11:51:50.669"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:50.672" endtime="20201030 11:51:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.671" endtime="20201030 11:51:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.670" endtime="20201030 11:51:50.692"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.304" endtime="20201030 11:51:50.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.303" endtime="20201030 11:51:50.693"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.702" endtime="20201030 11:51:50.720"></status>
</kw>
<msg timestamp="20201030 11:51:50.721" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.700" endtime="20201030 11:51:50.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:50.723" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_set 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:50.722" endtime="20201030 11:51:50.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.724" endtime="20201030 11:51:50.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.697" endtime="20201030 11:51:50.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.695" endtime="20201030 11:51:50.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:50.733" endtime="20201030 11:51:51.019"></status>
</kw>
<msg timestamp="20201030 11:51:51.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01941775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:50.732" endtime="20201030 11:51:51.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01941775, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490931, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:51:51.023" endtime="20201030 11:51:51.030"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.031" endtime="20201030 11:51:51.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.729" endtime="20201030 11:51:51.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.728" endtime="20201030 11:51:51.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.038" level="INFO">${RESULT} = [{'diff': 7.318099999999855e-05}, {'diff': 7.333400000000129e-05}, {'diff': 7.29309999999983e-05}, {'diff': 7.322200000000126e-05}, {'diff': 7.251399999999922e-05}, {'diff': 7.269500000000109e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:51.035" endtime="20201030 11:51:51.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.043" level="INFO">${ACCURACY} = {'diff': [7.318099999999855e-05, 7.333400000000129e-05, 7.29309999999983e-05, 7.322200000000126e-05, 7.251399999999922e-05, 7.269500000000109e-05, 7.320900000000116e-05, 7.294500000000134e-05, 7.31380...</msg>
<status status="PASS" starttime="20201030 11:51:51.039" endtime="20201030 11:51:51.043"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.047" level="INFO">NAME: accuracy-TIMER_SET-68-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.046" endtime="20201030 11:51:51.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.049" level="INFO">VALUE: [7.318099999999855e-05, 7.333400000000129e-05, 7.29309999999983e-05, 7.322200000000126e-05, 7.251399999999922e-05, 7.269500000000109e-05, 7.320900000000116e-05, 7.294500000000134e-05, 7.313800000000037e-05, 7.238899999999909e-05, 7.273600000000033e-05, 7.248600000000008e-05, 7.336100000000095e-05, 7.269400000000162e-05, 7.251399999999922e-05, 7.330600000000215e-05, 7.318100000000202e-05, 7.266699999999848e-05, 7.238899999999909e-05, 7.330600000000215e-05, 7.330600000000215e-05, 7.288800000000012e-05, 7.31110000000007e-05, 7.301399999999972e-05, 7.283300000000131e-05, 7.316599999999951e-05, 7.326399999999997e-05, 7.254200000000183e-05, 7.262500000000324e-05, 7.334800000000086e-05, 7.312500000000027e-05, 7.25560000000014e-05, 7.32500000000004e-05, 7.273600000000033e-05, 7.301399999999972e-05, 7.277699999999956e-05, 7.29439999999984e-05, 7.238899999999909e-05, 7.245800000000094e-05, 7.300000000000015e-05, 7.297199999999754e-05, 7.316700000000245e-05, 7.27499999999999e-05, 7.316700000000245e-05, 7.331999999999825e-05, 7.332000000000172e-05, 7.308300000000156e-05, 7.29170000000022e-05, 7.302699999999981e-05, 7.319399999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.048" endtime="20201030 11:51:51.050"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.043" endtime="20201030 11:51:51.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.054" endtime="20201030 11:51:51.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.053" endtime="20201030 11:51:51.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.052" endtime="20201030 11:51:51.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.694" endtime="20201030 11:51:51.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:50.693" endtime="20201030 11:51:51.075"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.084" endtime="20201030 11:51:51.102"></status>
</kw>
<msg timestamp="20201030 11:51:51.102" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.082" endtime="20201030 11:51:51.103"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.105" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_set 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.103" endtime="20201030 11:51:51.105"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.106" endtime="20201030 11:51:51.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.080" endtime="20201030 11:51:51.108"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.078" endtime="20201030 11:51:51.108"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.115" endtime="20201030 11:51:51.407"></status>
</kw>
<msg timestamp="20201030 11:51:51.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.113" endtime="20201030 11:51:51.414"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.432" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019573028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019647403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.416" endtime="20201030 11:51:51.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.435" endtime="20201030 11:51:51.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.111" endtime="20201030 11:51:51.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.109" endtime="20201030 11:51:51.440"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.448" level="INFO">${RESULT} = [{'diff': 7.437500000000152e-05}, {'diff': 7.412500000000127e-05}, {'diff': 7.404199999999986e-05}, {'diff': 7.379100000000013e-05}, {'diff': 7.355500000000292e-05}, {'diff': 7.402699999999734e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:51.441" endtime="20201030 11:51:51.449"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.457" level="INFO">${ACCURACY} = {'diff': [7.437500000000152e-05, 7.412500000000127e-05, 7.404199999999986e-05, 7.379100000000013e-05, 7.355500000000292e-05, 7.402699999999734e-05, 7.356899999999902e-05, 7.35829999999986e-05, 7.38050...</msg>
<status status="PASS" starttime="20201030 11:51:51.450" endtime="20201030 11:51:51.457"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.466" level="INFO">NAME: accuracy-TIMER_SET-69-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.464" endtime="20201030 11:51:51.467"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.471" level="INFO">VALUE: [7.437500000000152e-05, 7.412500000000127e-05, 7.404199999999986e-05, 7.379100000000013e-05, 7.355500000000292e-05, 7.402699999999734e-05, 7.356899999999902e-05, 7.35829999999986e-05, 7.380500000000317e-05, 7.413900000000084e-05, 7.413900000000084e-05, 7.406899999999952e-05, 7.431999999999925e-05, 7.424999999999793e-05, 7.373599999999786e-05, 7.338900000000009e-05, 7.39309999999993e-05, 7.401300000000124e-05, 7.416600000000051e-05, 7.412500000000127e-05, 7.341599999999976e-05, 7.381900000000274e-05, 7.381899999999927e-05, 7.418099999999955e-05, 7.402800000000029e-05, 7.427800000000054e-05, 7.355599999999893e-05, 7.433400000000229e-05, 7.354199999999936e-05, 7.391699999999973e-05, 7.34439999999989e-05, 7.412500000000127e-05, 7.415300000000041e-05, 7.39439999999994e-05, 7.362500000000077e-05, 7.37500000000009e-05, 7.361099999999773e-05, 7.343100000000227e-05, 7.362500000000077e-05, 7.386200000000093e-05, 7.381999999999875e-05, 7.390300000000016e-05, 7.411200000000118e-05, 7.341699999999923e-05, 7.390199999999722e-05, 7.368099999999905e-05, 7.359699999999816e-05, 7.397199999999854e-05, 7.404100000000038e-05, 7.36110000000012e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.468" endtime="20201030 11:51:51.473"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.459" endtime="20201030 11:51:51.474"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.481" endtime="20201030 11:51:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.478" endtime="20201030 11:51:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.476" endtime="20201030 11:51:51.502"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.076" endtime="20201030 11:51:51.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.075" endtime="20201030 11:51:51.503"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.511" endtime="20201030 11:51:51.529"></status>
</kw>
<msg timestamp="20201030 11:51:51.530" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.510" endtime="20201030 11:51:51.530"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.532" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_set 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.531" endtime="20201030 11:51:51.532"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.533" endtime="20201030 11:51:51.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.507" endtime="20201030 11:51:51.535"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.505" endtime="20201030 11:51:51.536"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.542" endtime="20201030 11:51:51.827"></status>
</kw>
<msg timestamp="20201030 11:51:51.830" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020212625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.541" endtime="20201030 11:51:51.830"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.838" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020212625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020287389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.831" endtime="20201030 11:51:51.839"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.839" endtime="20201030 11:51:51.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.538" endtime="20201030 11:51:51.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.536" endtime="20201030 11:51:51.842"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:51.846" level="INFO">${RESULT} = [{'diff': 7.4763999999998e-05}, {'diff': 7.504199999999739e-05}, {'diff': 7.507e-05}, {'diff': 7.52500000000024e-05}, {'diff': 7.488900000000159e-05}, {'diff': 7.511099999999923e-05}, {'diff': 7.49999...</msg>
<status status="PASS" starttime="20201030 11:51:51.843" endtime="20201030 11:51:51.846"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:51.850" level="INFO">${ACCURACY} = {'diff': [7.4763999999998e-05, 7.504199999999739e-05, 7.507e-05, 7.52500000000024e-05, 7.488900000000159e-05, 7.511099999999923e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.529200000000111e-05...</msg>
<status status="PASS" starttime="20201030 11:51:51.847" endtime="20201030 11:51:51.850"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.854" level="INFO">NAME: accuracy-TIMER_SET-70-philip</msg>
<status status="PASS" starttime="20201030 11:51:51.853" endtime="20201030 11:51:51.854"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.857" level="INFO">VALUE: [7.4763999999998e-05, 7.504199999999739e-05, 7.507e-05, 7.52500000000024e-05, 7.488900000000159e-05, 7.511099999999923e-05, 7.499999999999868e-05, 7.502699999999835e-05, 7.529200000000111e-05, 7.495799999999997e-05, 7.481900000000027e-05, 7.438900000000109e-05, 7.462500000000177e-05, 7.477799999999757e-05, 7.469499999999962e-05, 7.522199999999979e-05, 7.470900000000266e-05, 7.449999999999818e-05, 7.487499999999855e-05, 7.52769999999986e-05, 7.511099999999923e-05, 7.451400000000122e-05, 7.467999999999711e-05, 7.468000000000058e-05, 7.524999999999893e-05, 7.502800000000129e-05, 7.44309999999998e-05, 7.497199999999954e-05, 7.487499999999855e-05, 7.445899999999894e-05, 7.495899999999944e-05, 7.519400000000065e-05, 7.484699999999941e-05, 7.516599999999804e-05, 7.488900000000159e-05, 7.488900000000159e-05, 7.533300000000034e-05, 7.468100000000005e-05, 7.529199999999764e-05, 7.445799999999947e-05, 7.444499999999937e-05, 7.486099999999898e-05, 7.498600000000258e-05, 7.459800000000211e-05, 7.486099999999898e-05, 7.452800000000079e-05, 7.49440000000004e-05, 7.463899999999787e-05, 7.519400000000065e-05, 7.438899999999762e-05]</msg>
<status status="PASS" starttime="20201030 11:51:51.855" endtime="20201030 11:51:51.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.851" endtime="20201030 11:51:51.859"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:51.862" endtime="20201030 11:51:51.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.861" endtime="20201030 11:51:51.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.860" endtime="20201030 11:51:51.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.504" endtime="20201030 11:51:51.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.503" endtime="20201030 11:51:51.883"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.891" endtime="20201030 11:51:51.909"></status>
</kw>
<msg timestamp="20201030 11:51:51.910" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.890" endtime="20201030 11:51:51.910"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:51.912" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_set 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:51.911" endtime="20201030 11:51:51.913"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.913" endtime="20201030 11:51:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.887" endtime="20201030 11:51:51.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.885" endtime="20201030 11:51:51.916"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:51.922" endtime="20201030 11:51:52.208"></status>
</kw>
<msg timestamp="20201030 11:51:52.211" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:51.921" endtime="20201030 11:51:52.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.220" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019286542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019362458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.212" endtime="20201030 11:51:52.220"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.221" endtime="20201030 11:51:52.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.918" endtime="20201030 11:51:52.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.916" endtime="20201030 11:51:52.223"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.227" level="INFO">${RESULT} = [{'diff': 7.591599999999879e-05}, {'diff': 7.574999999999943e-05}, {'diff': 7.54029999999982e-05}, {'diff': 7.584700000000041e-05}, {'diff': 7.588899999999912e-05}, {'diff': 7.61249999999998e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:52.224" endtime="20201030 11:51:52.227"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.232" level="INFO">${ACCURACY} = {'diff': [7.591599999999879e-05, 7.574999999999943e-05, 7.54029999999982e-05, 7.584700000000041e-05, 7.588899999999912e-05, 7.61249999999998e-05, 7.568099999999758e-05, 7.566700000000148e-05, 7.632000...</msg>
<status status="PASS" starttime="20201030 11:51:52.228" endtime="20201030 11:51:52.232"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.237" level="INFO">NAME: accuracy-TIMER_SET-71-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.236" endtime="20201030 11:51:52.237"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.239" level="INFO">VALUE: [7.591599999999879e-05, 7.574999999999943e-05, 7.54029999999982e-05, 7.584700000000041e-05, 7.588899999999912e-05, 7.61249999999998e-05, 7.568099999999758e-05, 7.566700000000148e-05, 7.632000000000125e-05, 7.574999999999943e-05, 7.580600000000118e-05, 7.602799999999882e-05, 7.599999999999968e-05, 7.54440000000009e-05, 7.59440000000014e-05, 7.618099999999808e-05, 7.580499999999823e-05, 7.636100000000048e-05, 7.638899999999962e-05, 7.590300000000216e-05, 7.572200000000029e-05, 7.568100000000105e-05, 7.632000000000125e-05, 7.551399999999875e-05, 7.595800000000097e-05, 7.626300000000003e-05, 7.561099999999973e-05, 7.613899999999937e-05, 7.616599999999904e-05, 7.591699999999826e-05, 7.595800000000097e-05, 7.632000000000125e-05, 7.570799999999725e-05, 7.545800000000047e-05, 7.586099999999998e-05, 7.605599999999796e-05, 7.602800000000229e-05, 7.599999999999968e-05, 7.624999999999993e-05, 7.545800000000047e-05, 7.566599999999854e-05, 7.617999999999861e-05, 7.566600000000201e-05, 7.595800000000097e-05, 7.574999999999943e-05, 7.59579999999975e-05, 7.574999999999943e-05, 7.613899999999937e-05, 7.611100000000023e-05, 7.601399999999925e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.238" endtime="20201030 11:51:52.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.233" endtime="20201030 11:51:52.240"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.244" endtime="20201030 11:51:52.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.242" endtime="20201030 11:51:52.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.241" endtime="20201030 11:51:52.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.884" endtime="20201030 11:51:52.264"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:51.883" endtime="20201030 11:51:52.265"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.273" endtime="20201030 11:51:52.291"></status>
</kw>
<msg timestamp="20201030 11:51:52.291" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.272" endtime="20201030 11:51:52.291"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.294" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_set 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.292" endtime="20201030 11:51:52.294"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.295" endtime="20201030 11:51:52.296"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.269" endtime="20201030 11:51:52.297"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.267" endtime="20201030 11:51:52.297"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.304" endtime="20201030 11:51:52.590"></status>
</kw>
<msg timestamp="20201030 11:51:52.593" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.302" endtime="20201030 11:51:52.594"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.602" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019259278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019336236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.594" endtime="20201030 11:51:52.602"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.603" endtime="20201030 11:51:52.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.300" endtime="20201030 11:51:52.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.298" endtime="20201030 11:51:52.606"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.610" level="INFO">${RESULT} = [{'diff': 7.69579999999985e-05}, {'diff': 7.659700000000116e-05}, {'diff': 7.663899999999987e-05}, {'diff': 7.675000000000043e-05}, {'diff': 7.673600000000086e-05}, {'diff': 7.661100000000073e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:52.607" endtime="20201030 11:51:52.610"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.614" level="INFO">${ACCURACY} = {'diff': [7.69579999999985e-05, 7.659700000000116e-05, 7.663899999999987e-05, 7.675000000000043e-05, 7.673600000000086e-05, 7.661100000000073e-05, 7.648600000000061e-05, 7.69449999999984e-05, 7.708299...</msg>
<status status="PASS" starttime="20201030 11:51:52.611" endtime="20201030 11:51:52.614"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.618" level="INFO">NAME: accuracy-TIMER_SET-72-philip</msg>
<status status="PASS" starttime="20201030 11:51:52.617" endtime="20201030 11:51:52.619"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.621" level="INFO">VALUE: [7.69579999999985e-05, 7.659700000000116e-05, 7.663899999999987e-05, 7.675000000000043e-05, 7.673600000000086e-05, 7.661100000000073e-05, 7.648600000000061e-05, 7.69449999999984e-05, 7.708299999999862e-05, 7.674999999999696e-05, 7.68189999999988e-05, 7.733299999999887e-05, 7.669400000000215e-05, 7.711100000000123e-05, 7.71250000000008e-05, 7.698700000000058e-05, 7.675000000000043e-05, 7.732000000000225e-05, 7.731999999999878e-05, 7.694500000000187e-05, 7.72640000000005e-05, 7.712499999999733e-05, 7.713900000000037e-05, 7.729100000000017e-05, 7.711099999999776e-05, 7.69029999999997e-05, 7.718099999999908e-05, 7.666699999999901e-05, 7.662499999999683e-05, 7.654199999999889e-05, 7.668000000000258e-05, 7.655600000000193e-05, 7.704200000000286e-05, 7.651399999999975e-05, 7.719400000000265e-05, 7.717999999999961e-05, 7.69579999999985e-05, 7.677799999999957e-05, 7.681999999999828e-05, 7.702799999999982e-05, 7.645800000000147e-05, 7.733299999999887e-05, 7.652799999999932e-05, 7.715200000000047e-05, 7.695900000000144e-05, 7.69579999999985e-05, 7.71250000000008e-05, 7.693000000000283e-05, 7.711099999999776e-05, 7.722199999999832e-05]</msg>
<status status="PASS" starttime="20201030 11:51:52.620" endtime="20201030 11:51:52.622"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.615" endtime="20201030 11:51:52.622"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:52.626" endtime="20201030 11:51:52.645"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.624" endtime="20201030 11:51:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.623" endtime="20201030 11:51:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.265" endtime="20201030 11:51:52.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.265" endtime="20201030 11:51:52.647"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.655" endtime="20201030 11:51:52.678"></status>
</kw>
<msg timestamp="20201030 11:51:52.678" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.654" endtime="20201030 11:51:52.679"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.681" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_set 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:52.679" endtime="20201030 11:51:52.681"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.682" endtime="20201030 11:51:52.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.651" endtime="20201030 11:51:52.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.649" endtime="20201030 11:51:52.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.691" endtime="20201030 11:51:52.976"></status>
</kw>
<msg timestamp="20201030 11:51:52.979" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.690" endtime="20201030 11:51:52.979"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:52.987" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023467194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023544833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:52.980" endtime="20201030 11:51:52.988"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:52.989" endtime="20201030 11:51:52.990"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.687" endtime="20201030 11:51:52.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.685" endtime="20201030 11:51:52.991"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:52.995" level="INFO">${RESULT} = [{'diff': 7.763900000000087e-05}, {'diff': 7.773599999999839e-05}, {'diff': 7.786100000000198e-05}, {'diff': 7.738900000000062e-05}, {'diff': 7.730599999999921e-05}, {'diff': 7.811100000000223e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:52.992" endtime="20201030 11:51:52.995"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:52.999" level="INFO">${ACCURACY} = {'diff': [7.763900000000087e-05, 7.773599999999839e-05, 7.786100000000198e-05, 7.738900000000062e-05, 7.730599999999921e-05, 7.811100000000223e-05, 7.834699999999944e-05, 7.788899999999765e-05, 7.8292...</msg>
<status status="PASS" starttime="20201030 11:51:52.996" endtime="20201030 11:51:52.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.003" level="INFO">NAME: accuracy-TIMER_SET-73-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.002" endtime="20201030 11:51:53.004"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.006" level="INFO">VALUE: [7.763900000000087e-05, 7.773599999999839e-05, 7.786100000000198e-05, 7.738900000000062e-05, 7.730599999999921e-05, 7.811100000000223e-05, 7.834699999999944e-05, 7.788899999999765e-05, 7.829200000000064e-05, 7.809799999999867e-05, 7.834699999999944e-05, 7.811100000000223e-05, 7.76389999999974e-05, 7.808299999999962e-05, 7.801399999999778e-05, 7.805500000000049e-05, 7.761100000000173e-05, 7.804200000000039e-05, 7.780599999999971e-05, 7.811099999999876e-05, 7.777800000000057e-05, 7.770899999999872e-05, 7.827800000000107e-05, 7.825000000000193e-05, 7.768000000000011e-05, 7.802699999999788e-05, 7.791600000000079e-05, 7.819400000000018e-05, 7.752800000000032e-05, 7.783299999999937e-05, 7.788900000000112e-05, 7.791700000000026e-05, 7.775000000000143e-05, 7.831999999999978e-05, 7.788900000000112e-05, 7.797299999999854e-05, 7.799999999999821e-05, 7.805500000000049e-05, 7.738900000000062e-05, 7.83190000000003e-05, 7.819400000000018e-05, 7.78189999999998e-05, 7.754199999999989e-05, 7.823599999999889e-05, 7.795800000000297e-05, 7.830600000000021e-05, 7.780599999999971e-05, 7.765300000000044e-05, 7.81250000000018e-05, 7.768099999999958e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.004" endtime="20201030 11:51:53.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.000" endtime="20201030 11:51:53.008"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.012" endtime="20201030 11:51:53.031"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.010" endtime="20201030 11:51:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.009" endtime="20201030 11:51:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.647" endtime="20201030 11:51:53.032"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:52.647" endtime="20201030 11:51:53.032"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.041" endtime="20201030 11:51:53.059"></status>
</kw>
<msg timestamp="20201030 11:51:53.060" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.040" endtime="20201030 11:51:53.060"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.062" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_set 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.061" endtime="20201030 11:51:53.063"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.063" endtime="20201030 11:51:53.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.037" endtime="20201030 11:51:53.065"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.035" endtime="20201030 11:51:53.066"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.072" endtime="20201030 11:51:53.357"></status>
</kw>
<msg timestamp="20201030 11:51:53.360" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.071" endtime="20201030 11:51:53.361"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.368" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019444736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019523444, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.361" endtime="20201030 11:51:53.369"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.370" endtime="20201030 11:51:53.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.068" endtime="20201030 11:51:53.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.067" endtime="20201030 11:51:53.372"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.376" level="INFO">${RESULT} = [{'diff': 7.870800000000025e-05}, {'diff': 7.882000000000028e-05}, {'diff': 7.852700000000185e-05}, {'diff': 7.890199999999875e-05}, {'diff': 7.923599999999989e-05}, {'diff': 7.912499999999933e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:53.373" endtime="20201030 11:51:53.376"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.381" level="INFO">${ACCURACY} = {'diff': [7.870800000000025e-05, 7.882000000000028e-05, 7.852700000000185e-05, 7.890199999999875e-05, 7.923599999999989e-05, 7.912499999999933e-05, 7.884699999999994e-05, 7.854200000000089e-05, 7.9222...</msg>
<status status="PASS" starttime="20201030 11:51:53.377" endtime="20201030 11:51:53.381"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.386" level="INFO">NAME: accuracy-TIMER_SET-74-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.385" endtime="20201030 11:51:53.386"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.388" level="INFO">VALUE: [7.870800000000025e-05, 7.882000000000028e-05, 7.852700000000185e-05, 7.890199999999875e-05, 7.923599999999989e-05, 7.912499999999933e-05, 7.884699999999994e-05, 7.854200000000089e-05, 7.922200000000032e-05, 7.92640000000025e-05, 7.933400000000035e-05, 7.840299999999772e-05, 7.930600000000121e-05, 7.875000000000243e-05, 7.887499999999908e-05, 7.867999999999764e-05, 7.85969999999997e-05, 7.858300000000012e-05, 7.856900000000056e-05, 7.837499999999858e-05, 7.862499999999883e-05, 7.855600000000046e-05, 7.838899999999815e-05, 7.887499999999908e-05, 7.916699999999804e-05, 7.866700000000101e-05, 7.865300000000144e-05, 7.880499999999777e-05, 7.847199999999957e-05, 7.918000000000161e-05, 7.880499999999777e-05, 7.8458e-05, 7.930600000000121e-05, 7.89450000000004e-05, 7.870899999999972e-05, 7.898599999999964e-05, 7.912499999999933e-05, 7.866699999999754e-05, 7.937500000000305e-05, 7.838899999999815e-05, 7.916599999999857e-05, 7.8458e-05, 7.923599999999989e-05, 7.858300000000012e-05, 7.915300000000194e-05, 7.890299999999822e-05, 7.8458e-05, 7.886099999999951e-05, 7.920900000000022e-05, 7.902799999999835e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.387" endtime="20201030 11:51:53.394"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.382" endtime="20201030 11:51:53.394"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.398" endtime="20201030 11:51:53.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.397" endtime="20201030 11:51:53.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.395" endtime="20201030 11:51:53.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.033" endtime="20201030 11:51:53.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.033" endtime="20201030 11:51:53.419"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.427" endtime="20201030 11:51:53.445"></status>
</kw>
<msg timestamp="20201030 11:51:53.446" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.426" endtime="20201030 11:51:53.446"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.448" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_set 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.447" endtime="20201030 11:51:53.449"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.449" endtime="20201030 11:51:53.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.423" endtime="20201030 11:51:53.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.421" endtime="20201030 11:51:53.452"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.458" endtime="20201030 11:51:53.745"></status>
</kw>
<msg timestamp="20201030 11:51:53.748" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.457" endtime="20201030 11:51:53.748"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.756" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019855889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019935458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.749" endtime="20201030 11:51:53.756"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.757" endtime="20201030 11:51:53.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.454" endtime="20201030 11:51:53.759"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.452" endtime="20201030 11:51:53.760"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:53.764" level="INFO">${RESULT} = [{'diff': 7.956899999999809e-05}, {'diff': 8.002699999999988e-05}, {'diff': 7.99169999999988e-05}, {'diff': 8.012500000000033e-05}, {'diff': 8.036100000000101e-05}, {'diff': 7.987500000000008e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:53.760" endtime="20201030 11:51:53.764"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:53.768" level="INFO">${ACCURACY} = {'diff': [7.956899999999809e-05, 8.002699999999988e-05, 7.99169999999988e-05, 8.012500000000033e-05, 8.036100000000101e-05, 7.987500000000008e-05, 7.938899999999915e-05, 8.004200000000239e-05, 7.96669...</msg>
<status status="PASS" starttime="20201030 11:51:53.765" endtime="20201030 11:51:53.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.772" level="INFO">NAME: accuracy-TIMER_SET-75-philip</msg>
<status status="PASS" starttime="20201030 11:51:53.771" endtime="20201030 11:51:53.772"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.774" level="INFO">VALUE: [7.956899999999809e-05, 8.002699999999988e-05, 7.99169999999988e-05, 8.012500000000033e-05, 8.036100000000101e-05, 7.987500000000008e-05, 7.938899999999915e-05, 8.004200000000239e-05, 7.966699999999854e-05, 7.962499999999983e-05, 8.015299999999947e-05, 8.037500000000058e-05, 7.951399999999928e-05, 7.974999999999996e-05, 8.020799999999828e-05, 7.95970000000007e-05, 7.970800000000125e-05, 7.955600000000146e-05, 7.9764000000003e-05, 8.015299999999947e-05, 7.988899999999965e-05, 7.950000000000318e-05, 7.993100000000183e-05, 8.022199999999785e-05, 7.988800000000018e-05, 7.938899999999915e-05, 8.001399999999978e-05, 8.019400000000218e-05, 8.029199999999917e-05, 8.001399999999978e-05, 7.961100000000026e-05, 8.000000000000021e-05, 8.012500000000033e-05, 7.965299999999897e-05, 8.016699999999904e-05, 8.02909999999997e-05, 7.96519999999995e-05, 7.977699999999963e-05, 8.006899999999859e-05, 7.96389999999994e-05, 8.025000000000046e-05, 8.02779999999996e-05, 7.962499999999983e-05, 8.005600000000196e-05, 7.95129999999998e-05, 8.026400000000003e-05, 7.988899999999965e-05, 8.020800000000175e-05, 7.941599999999882e-05, 7.974999999999996e-05]</msg>
<status status="PASS" starttime="20201030 11:51:53.773" endtime="20201030 11:51:53.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.768" endtime="20201030 11:51:53.776"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:53.779" endtime="20201030 11:51:53.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.778" endtime="20201030 11:51:53.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.777" endtime="20201030 11:51:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.420" endtime="20201030 11:51:53.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.419" endtime="20201030 11:51:53.800"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.809" endtime="20201030 11:51:53.829"></status>
</kw>
<msg timestamp="20201030 11:51:53.829" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.807" endtime="20201030 11:51:53.829"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:53.832" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_set 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:53.830" endtime="20201030 11:51:53.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.833" endtime="20201030 11:51:53.834"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.805" endtime="20201030 11:51:53.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.802" endtime="20201030 11:51:53.835"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:53.842" endtime="20201030 11:51:54.127"></status>
</kw>
<msg timestamp="20201030 11:51:54.130" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:53.840" endtime="20201030 11:51:54.130"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.139" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020864028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020944583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.131" endtime="20201030 11:51:54.139"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.140" endtime="20201030 11:51:54.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.838" endtime="20201030 11:51:54.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.836" endtime="20201030 11:51:54.142"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.146" level="INFO">${RESULT} = [{'diff': 8.055499999999952e-05}, {'diff': 8.11109999999983e-05}, {'diff': 8.06390000000004e-05}, {'diff': 8.129200000000017e-05}, {'diff': 8.130599999999974e-05}, {'diff': 8.137500000000158e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:54.143" endtime="20201030 11:51:54.146"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.150" level="INFO">${ACCURACY} = {'diff': [8.055499999999952e-05, 8.11109999999983e-05, 8.06390000000004e-05, 8.129200000000017e-05, 8.130599999999974e-05, 8.137500000000158e-05, 8.137499999999812e-05, 8.045900000000147e-05, 8.131999...</msg>
<status status="PASS" starttime="20201030 11:51:54.147" endtime="20201030 11:51:54.151"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.155" level="INFO">NAME: accuracy-TIMER_SET-76-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.154" endtime="20201030 11:51:54.155"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.157" level="INFO">VALUE: [8.055499999999952e-05, 8.11109999999983e-05, 8.06390000000004e-05, 8.129200000000017e-05, 8.130599999999974e-05, 8.137500000000158e-05, 8.137499999999812e-05, 8.045900000000147e-05, 8.131999999999931e-05, 8.102800000000035e-05, 8.115199999999753e-05, 8.130500000000027e-05, 8.068000000000311e-05, 8.052799999999985e-05, 8.094400000000293e-05, 8.04169999999993e-05, 8.122199999999885e-05, 8.12780000000006e-05, 8.108399999999863e-05, 8.032000000000178e-05, 8.095900000000197e-05, 8.123600000000189e-05, 8.073600000000139e-05, 8.088799999999771e-05, 8.130500000000027e-05, 8.055499999999952e-05, 8.088900000000065e-05, 8.111100000000177e-05, 8.048600000000114e-05, 8.10970000000022e-05, 8.079199999999967e-05, 8.06390000000004e-05, 8.047200000000157e-05, 8.076400000000053e-05, 8.105599999999949e-05, 8.061100000000126e-05, 8.112500000000133e-05, 8.088900000000065e-05, 8.122299999999832e-05, 8.052799999999985e-05, 8.122200000000232e-05, 8.129200000000017e-05, 8.079199999999967e-05, 8.107000000000253e-05, 8.11109999999983e-05, 8.069500000000215e-05, 8.11390000000009e-05, 8.037500000000058e-05, 8.111100000000177e-05, 8.056900000000256e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.156" endtime="20201030 11:51:54.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.151" endtime="20201030 11:51:54.159"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.163" endtime="20201030 11:51:54.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.161" endtime="20201030 11:51:54.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.160" endtime="20201030 11:51:54.183"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.801" endtime="20201030 11:51:54.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:53.800" endtime="20201030 11:51:54.184"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.193" endtime="20201030 11:51:54.212"></status>
</kw>
<msg timestamp="20201030 11:51:54.212" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.192" endtime="20201030 11:51:54.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.215" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_set 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.213" endtime="20201030 11:51:54.215"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.216" endtime="20201030 11:51:54.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.189" endtime="20201030 11:51:54.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.187" endtime="20201030 11:51:54.219"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.226" endtime="20201030 11:51:54.511"></status>
</kw>
<msg timestamp="20201030 11:51:54.514" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.224" endtime="20201030 11:51:54.514"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.522" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021587194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021668986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.515" endtime="20201030 11:51:54.523"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.523" endtime="20201030 11:51:54.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.221" endtime="20201030 11:51:54.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.219" endtime="20201030 11:51:54.526"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.530" level="INFO">${RESULT} = [{'diff': 8.179200000000067e-05}, {'diff': 8.21109999999993e-05}, {'diff': 8.207000000000006e-05}, {'diff': 8.216600000000157e-05}, {'diff': 8.163899999999794e-05}, {'diff': 8.208399999999963e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:54.527" endtime="20201030 11:51:54.530"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.535" level="INFO">${ACCURACY} = {'diff': [8.179200000000067e-05, 8.21109999999993e-05, 8.207000000000006e-05, 8.216600000000157e-05, 8.163899999999794e-05, 8.208399999999963e-05, 8.168100000000011e-05, 8.154200000000042e-05, 8.22080...</msg>
<status status="PASS" starttime="20201030 11:51:54.531" endtime="20201030 11:51:54.535"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.539" level="INFO">NAME: accuracy-TIMER_SET-77-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.538" endtime="20201030 11:51:54.540"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.542" level="INFO">VALUE: [8.179200000000067e-05, 8.21109999999993e-05, 8.207000000000006e-05, 8.216600000000157e-05, 8.163899999999794e-05, 8.208399999999963e-05, 8.168100000000011e-05, 8.154200000000042e-05, 8.220800000000028e-05, 8.204099999999798e-05, 8.16390000000014e-05, 8.155499999999705e-05, 8.176400000000153e-05, 8.155499999999705e-05, 8.190299999999776e-05, 8.224999999999899e-05, 8.166700000000054e-05, 8.158299999999966e-05, 8.190300000000122e-05, 8.138900000000115e-05, 8.187499999999862e-05, 8.202700000000188e-05, 8.165300000000097e-05, 8.191599999999785e-05, 8.209699999999973e-05, 8.219400000000071e-05, 8.154200000000042e-05, 8.16390000000014e-05, 8.201399999999831e-05, 8.205600000000049e-05, 8.223600000000289e-05, 8.166700000000054e-05, 8.180600000000024e-05, 8.168000000000064e-05, 8.220800000000028e-05, 8.16659999999976e-05, 8.162499999999837e-05, 8.212499999999887e-05, 8.143099999999986e-05, 8.177799999999763e-05, 8.14719999999991e-05, 8.218100000000061e-05, 8.19719999999996e-05, 8.19589999999995e-05, 8.21109999999993e-05, 8.236100000000302e-05, 8.151400000000128e-05, 8.190299999999776e-05, 8.224999999999899e-05, 8.166699999999708e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.540" endtime="20201030 11:51:54.543"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.536" endtime="20201030 11:51:54.543"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.547" endtime="20201030 11:51:54.566"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.545" endtime="20201030 11:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.544" endtime="20201030 11:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.185" endtime="20201030 11:51:54.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.184" endtime="20201030 11:51:54.568"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.576" endtime="20201030 11:51:54.595"></status>
</kw>
<msg timestamp="20201030 11:51:54.595" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.574" endtime="20201030 11:51:54.595"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.598" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_set 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.596" endtime="20201030 11:51:54.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.599" endtime="20201030 11:51:54.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.572" endtime="20201030 11:51:54.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.570" endtime="20201030 11:51:54.601"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.608" endtime="20201030 11:51:54.894"></status>
</kw>
<msg timestamp="20201030 11:51:54.898" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.606" endtime="20201030 11:51:54.898"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.906" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019671042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019753722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.899" endtime="20201030 11:51:54.906"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.907" endtime="20201030 11:51:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.604" endtime="20201030 11:51:54.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.602" endtime="20201030 11:51:54.910"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:54.913" level="INFO">${RESULT} = [{'diff': 8.268000000000164e-05}, {'diff': 8.322200000000085e-05}, {'diff': 8.238899999999869e-05}, {'diff': 8.312499999999987e-05}, {'diff': 8.279200000000167e-05}, {'diff': 8.33330000000014e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:54.910" endtime="20201030 11:51:54.914"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:54.918" level="INFO">${ACCURACY} = {'diff': [8.268000000000164e-05, 8.322200000000085e-05, 8.238899999999869e-05, 8.312499999999987e-05, 8.279200000000167e-05, 8.33330000000014e-05, 8.283400000000038e-05, 8.274999999999949e-05, 8.31949...</msg>
<status status="PASS" starttime="20201030 11:51:54.914" endtime="20201030 11:51:54.918"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.922" level="INFO">NAME: accuracy-TIMER_SET-78-philip</msg>
<status status="PASS" starttime="20201030 11:51:54.921" endtime="20201030 11:51:54.922"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.924" level="INFO">VALUE: [8.268000000000164e-05, 8.322200000000085e-05, 8.238899999999869e-05, 8.312499999999987e-05, 8.279200000000167e-05, 8.33330000000014e-05, 8.283400000000038e-05, 8.274999999999949e-05, 8.319499999999772e-05, 8.283400000000038e-05, 8.266700000000154e-05, 8.323600000000042e-05, 8.274999999999949e-05, 8.280500000000177e-05, 8.299999999999974e-05, 8.322200000000085e-05, 8.274999999999949e-05, 8.294499999999747e-05, 8.312499999999987e-05, 8.300000000000321e-05, 8.263899999999894e-05, 8.304200000000192e-05, 8.241699999999783e-05, 8.302799999999888e-05, 8.272200000000035e-05, 8.294400000000146e-05, 8.329200000000217e-05, 8.316700000000204e-05, 8.29720000000006e-05, 8.313899999999944e-05, 8.276400000000253e-05, 8.244500000000043e-05, 8.279200000000167e-05, 8.295799999999756e-05, 8.262499999999937e-05, 8.270800000000078e-05, 8.241699999999783e-05, 8.268000000000164e-05, 8.293100000000136e-05, 8.280599999999777e-05, 8.318099999999815e-05, 8.330600000000174e-05, 8.302799999999888e-05, 8.263899999999894e-05, 8.304199999999845e-05, 8.286199999999952e-05, 8.255599999999752e-05, 8.295800000000103e-05, 8.272200000000035e-05, 8.294400000000146e-05]</msg>
<status status="PASS" starttime="20201030 11:51:54.923" endtime="20201030 11:51:54.925"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.918" endtime="20201030 11:51:54.926"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:54.929" endtime="20201030 11:51:54.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.928" endtime="20201030 11:51:54.949"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.927" endtime="20201030 11:51:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.568" endtime="20201030 11:51:54.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.568" endtime="20201030 11:51:54.950"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.958" endtime="20201030 11:51:54.977"></status>
</kw>
<msg timestamp="20201030 11:51:54.977" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.957" endtime="20201030 11:51:54.978"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:54.980" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_set 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:54.978" endtime="20201030 11:51:54.980"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.981" endtime="20201030 11:51:54.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.954" endtime="20201030 11:51:54.983"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.952" endtime="20201030 11:51:54.983"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:54.990" endtime="20201030 11:51:55.275"></status>
</kw>
<msg timestamp="20201030 11:51:55.278" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:54.989" endtime="20201030 11:51:55.279"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.287" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020595625, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020679611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.280" endtime="20201030 11:51:55.287"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.288" endtime="20201030 11:51:55.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.986" endtime="20201030 11:51:55.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.984" endtime="20201030 11:51:55.291"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.294" level="INFO">${RESULT} = [{'diff': 8.398600000000117e-05}, {'diff': 8.395799999999856e-05}, {'diff': 8.370799999999831e-05}, {'diff': 8.373699999999693e-05}, {'diff': 8.408399999999816e-05}, {'diff': 8.370899999999779e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:55.291" endtime="20201030 11:51:55.295"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.299" level="INFO">${ACCURACY} = {'diff': [8.398600000000117e-05, 8.395799999999856e-05, 8.370799999999831e-05, 8.373699999999693e-05, 8.408399999999816e-05, 8.370899999999779e-05, 8.356999999999809e-05, 8.431999999999884e-05, 8.4305...</msg>
<status status="PASS" starttime="20201030 11:51:55.295" endtime="20201030 11:51:55.299"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.303" level="INFO">NAME: accuracy-TIMER_SET-79-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.302" endtime="20201030 11:51:55.303"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.305" level="INFO">VALUE: [8.398600000000117e-05, 8.395799999999856e-05, 8.370799999999831e-05, 8.373699999999693e-05, 8.408399999999816e-05, 8.370899999999779e-05, 8.356999999999809e-05, 8.431999999999884e-05, 8.430599999999927e-05, 8.341599999999935e-05, 8.402700000000041e-05, 8.413900000000044e-05, 8.395799999999856e-05, 8.423599999999795e-05, 8.381899999999887e-05, 8.409700000000173e-05, 8.404199999999945e-05, 8.431999999999884e-05, 8.383399999999791e-05, 8.411200000000077e-05, 8.356900000000209e-05, 8.351399999999981e-05, 8.356900000000209e-05, 8.34720000000011e-05, 8.438900000000069e-05, 8.434700000000198e-05, 8.394500000000193e-05, 8.388900000000019e-05, 8.41110000000013e-05, 8.386100000000105e-05, 8.425000000000099e-05, 8.411200000000077e-05, 8.348700000000014e-05, 8.362500000000037e-05, 8.369399999999874e-05, 8.425000000000099e-05, 8.393000000000289e-05, 8.338899999999969e-05, 8.41110000000013e-05, 8.377799999999963e-05, 8.388900000000019e-05, 8.427800000000013e-05, 8.390299999999976e-05, 8.400000000000074e-05, 8.438900000000069e-05, 8.405499999999955e-05, 8.41249999999974e-05, 8.352700000000338e-05, 8.431900000000284e-05, 8.36110000000008e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.304" endtime="20201030 11:51:55.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.299" endtime="20201030 11:51:55.307"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.311" endtime="20201030 11:51:55.330"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.310" endtime="20201030 11:51:55.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.308" endtime="20201030 11:51:55.331"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.951" endtime="20201030 11:51:55.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:54.950" endtime="20201030 11:51:55.332"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.341" endtime="20201030 11:51:55.358"></status>
</kw>
<msg timestamp="20201030 11:51:55.359" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.339" endtime="20201030 11:51:55.359"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.361" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_set 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.360" endtime="20201030 11:51:55.361"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.362" endtime="20201030 11:51:55.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.336" endtime="20201030 11:51:55.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.334" endtime="20201030 11:51:55.365"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.371" endtime="20201030 11:51:55.656"></status>
</kw>
<msg timestamp="20201030 11:51:55.660" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.369" endtime="20201030 11:51:55.660"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.668" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020041542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020126319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.661" endtime="20201030 11:51:55.668"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.669" endtime="20201030 11:51:55.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.367" endtime="20201030 11:51:55.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.365" endtime="20201030 11:51:55.671"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:55.675" level="INFO">${RESULT} = [{'diff': 8.477700000000116e-05}, {'diff': 8.505500000000055e-05}, {'diff': 8.444399999999949e-05}, {'diff': 8.527799999999766e-05}, {'diff': 8.46530000000005e-05}, {'diff': 8.452800000000038e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:55.672" endtime="20201030 11:51:55.675"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:55.680" level="INFO">${ACCURACY} = {'diff': [8.477700000000116e-05, 8.505500000000055e-05, 8.444399999999949e-05, 8.527799999999766e-05, 8.46530000000005e-05, 8.452800000000038e-05, 8.506900000000012e-05, 8.452800000000038e-05, 8.50699...</msg>
<status status="PASS" starttime="20201030 11:51:55.676" endtime="20201030 11:51:55.680"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.685" level="INFO">NAME: accuracy-TIMER_SET-80-philip</msg>
<status status="PASS" starttime="20201030 11:51:55.684" endtime="20201030 11:51:55.685"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.687" level="INFO">VALUE: [8.477700000000116e-05, 8.505500000000055e-05, 8.444399999999949e-05, 8.527799999999766e-05, 8.46530000000005e-05, 8.452800000000038e-05, 8.506900000000012e-05, 8.452800000000038e-05, 8.506999999999959e-05, 8.516700000000058e-05, 8.506900000000012e-05, 8.529099999999776e-05, 8.505500000000055e-05, 8.509699999999926e-05, 8.505500000000055e-05, 8.47920000000002e-05, 8.513900000000144e-05, 8.456899999999962e-05, 8.5153000000001e-05, 8.495799999999956e-05, 8.537500000000212e-05, 8.463900000000094e-05, 8.466700000000008e-05, 8.47920000000002e-05, 8.519400000000024e-05, 8.523599999999895e-05, 8.474999999999802e-05, 8.475000000000149e-05, 8.476400000000106e-05, 8.519499999999972e-05, 8.524999999999852e-05, 8.501399999999784e-05, 8.470900000000225e-05, 8.472199999999888e-05, 8.480599999999977e-05, 8.481899999999987e-05, 8.533299999999994e-05, 8.440300000000026e-05, 8.490300000000076e-05, 8.473599999999845e-05, 8.495799999999956e-05, 8.481999999999934e-05, 8.530600000000027e-05, 8.522199999999938e-05, 8.451400000000081e-05, 8.451399999999734e-05, 8.4459000000002e-05, 8.52920000000007e-05, 8.452700000000091e-05, 8.46110000000018e-05]</msg>
<status status="PASS" starttime="20201030 11:51:55.686" endtime="20201030 11:51:55.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.681" endtime="20201030 11:51:55.688"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:55.692" endtime="20201030 11:51:55.711"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.691" endtime="20201030 11:51:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.689" endtime="20201030 11:51:55.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.333" endtime="20201030 11:51:55.713"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.332" endtime="20201030 11:51:55.713"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.721" endtime="20201030 11:51:55.739"></status>
</kw>
<msg timestamp="20201030 11:51:55.740" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.720" endtime="20201030 11:51:55.740"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:55.742" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_set 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:55.741" endtime="20201030 11:51:55.742"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.743" endtime="20201030 11:51:55.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.717" endtime="20201030 11:51:55.745"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.715" endtime="20201030 11:51:55.746"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:55.752" endtime="20201030 11:51:56.039"></status>
</kw>
<msg timestamp="20201030 11:51:56.042" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:55.750" endtime="20201030 11:51:56.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.050" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019955111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020041361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.043" endtime="20201030 11:51:56.051"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.051" endtime="20201030 11:51:56.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.748" endtime="20201030 11:51:56.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.746" endtime="20201030 11:51:56.054"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.058" level="INFO">${RESULT} = [{'diff': 8.624999999999952e-05}, {'diff': 8.602799999999841e-05}, {'diff': 8.552700000000191e-05}, {'diff': 8.598600000000317e-05}, {'diff': 8.609700000000026e-05}, {'diff': 8.633300000000094e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:56.055" endtime="20201030 11:51:56.058"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.062" level="INFO">${ACCURACY} = {'diff': [8.624999999999952e-05, 8.602799999999841e-05, 8.552700000000191e-05, 8.598600000000317e-05, 8.609700000000026e-05, 8.633300000000094e-05, 8.588900000000219e-05, 8.574999999999902e-05, 8.6277...</msg>
<status status="PASS" starttime="20201030 11:51:56.059" endtime="20201030 11:51:56.063"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.067" level="INFO">NAME: accuracy-TIMER_SET-81-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.066" endtime="20201030 11:51:56.067"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.069" level="INFO">VALUE: [8.624999999999952e-05, 8.602799999999841e-05, 8.552700000000191e-05, 8.598600000000317e-05, 8.609700000000026e-05, 8.633300000000094e-05, 8.588900000000219e-05, 8.574999999999902e-05, 8.627799999999866e-05, 8.551399999999834e-05, 8.627800000000213e-05, 8.636199999999955e-05, 8.606900000000112e-05, 8.581900000000087e-05, 8.565199999999856e-05, 8.597200000000013e-05, 8.608300000000069e-05, 8.58189999999974e-05, 8.551399999999834e-05, 8.597200000000013e-05, 8.624999999999952e-05, 8.552800000000138e-05, 8.607000000000059e-05, 8.588899999999872e-05, 8.595900000000004e-05, 8.581900000000087e-05, 8.565200000000203e-05, 8.588899999999872e-05, 8.545800000000006e-05, 8.569399999999727e-05, 8.618099999999768e-05, 8.597200000000013e-05, 8.608300000000069e-05, 8.563899999999847e-05, 8.59859999999997e-05, 8.59729999999996e-05, 8.592999999999795e-05, 8.601399999999884e-05, 8.551399999999834e-05, 8.555600000000052e-05, 8.615299999999854e-05, 8.568000000000117e-05, 8.555600000000052e-05, 8.541700000000083e-05, 8.618099999999768e-05, 8.545899999999954e-05, 8.565299999999804e-05, 8.629099999999876e-05, 8.59859999999997e-05, 8.622199999999691e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.068" endtime="20201030 11:51:56.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.063" endtime="20201030 11:51:56.071"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.074" endtime="20201030 11:51:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.073" endtime="20201030 11:51:56.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.072" endtime="20201030 11:51:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.714" endtime="20201030 11:51:56.095"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:55.713" endtime="20201030 11:51:56.095"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.104" endtime="20201030 11:51:56.125"></status>
</kw>
<msg timestamp="20201030 11:51:56.126" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.102" endtime="20201030 11:51:56.126"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.128" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_set 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.127" endtime="20201030 11:51:56.129"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.129" endtime="20201030 11:51:56.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.100" endtime="20201030 11:51:56.131"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.097" endtime="20201030 11:51:56.132"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.138" endtime="20201030 11:51:56.423"></status>
</kw>
<msg timestamp="20201030 11:51:56.426" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.137" endtime="20201030 11:51:56.426"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.434" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022784278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022871639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.427" endtime="20201030 11:51:56.434"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.435" endtime="20201030 11:51:56.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.134" endtime="20201030 11:51:56.437"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.132" endtime="20201030 11:51:56.438"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.442" level="INFO">${RESULT} = [{'diff': 8.736099999999761e-05}, {'diff': 8.68189999999984e-05}, {'diff': 8.725000000000052e-05}, {'diff': 8.711100000000083e-05}, {'diff': 8.64860000000002e-05}, {'diff': 8.668100000000165e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:56.439" endtime="20201030 11:51:56.442"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.446" level="INFO">${ACCURACY} = {'diff': [8.736099999999761e-05, 8.68189999999984e-05, 8.725000000000052e-05, 8.711100000000083e-05, 8.64860000000002e-05, 8.668100000000165e-05, 8.695900000000104e-05, 8.687500000000015e-05, 8.737500...</msg>
<status status="PASS" starttime="20201030 11:51:56.443" endtime="20201030 11:51:56.446"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.450" level="INFO">NAME: accuracy-TIMER_SET-82-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.449" endtime="20201030 11:51:56.451"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.453" level="INFO">VALUE: [8.736099999999761e-05, 8.68189999999984e-05, 8.725000000000052e-05, 8.711100000000083e-05, 8.64860000000002e-05, 8.668100000000165e-05, 8.695900000000104e-05, 8.687500000000015e-05, 8.737500000000065e-05, 8.677799999999916e-05, 8.686100000000058e-05, 8.704200000000245e-05, 8.71250000000004e-05, 8.686200000000005e-05, 8.690299999999929e-05, 8.687500000000015e-05, 8.652799999999891e-05, 8.693099999999843e-05, 8.704099999999951e-05, 8.643000000000192e-05, 8.663899999999947e-05, 8.694400000000199e-05, 8.713899999999997e-05, 8.697200000000113e-05, 8.72920000000027e-05, 8.711100000000083e-05, 8.69310000000019e-05, 8.731999999999837e-05, 8.697299999999714e-05, 8.730499999999933e-05, 8.727700000000019e-05, 8.725000000000052e-05, 8.704099999999951e-05, 8.679199999999873e-05, 8.726400000000009e-05, 8.669399999999827e-05, 8.719500000000172e-05, 8.675000000000002e-05, 8.68059999999983e-05, 8.701399999999984e-05, 8.651399999999934e-05, 8.640199999999931e-05, 8.681900000000187e-05, 8.64860000000002e-05, 8.701399999999984e-05, 8.665299999999904e-05, 8.69310000000019e-05, 8.654200000000195e-05, 8.729199999999923e-05, 8.663900000000294e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.451" endtime="20201030 11:51:56.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.447" endtime="20201030 11:51:56.455"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.458" endtime="20201030 11:51:56.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.457" endtime="20201030 11:51:56.478"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.456" endtime="20201030 11:51:56.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.096" endtime="20201030 11:51:56.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.095" endtime="20201030 11:51:56.479"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.488" endtime="20201030 11:51:56.505"></status>
</kw>
<msg timestamp="20201030 11:51:56.505" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.486" endtime="20201030 11:51:56.506"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.508" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_set 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.507" endtime="20201030 11:51:56.508"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.509" endtime="20201030 11:51:56.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.483" endtime="20201030 11:51:56.511"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.481" endtime="20201030 11:51:56.511"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.518" endtime="20201030 11:51:56.804"></status>
</kw>
<msg timestamp="20201030 11:51:56.807" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.516" endtime="20201030 11:51:56.807"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.815" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019727833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019815736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.808" endtime="20201030 11:51:56.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.817" endtime="20201030 11:51:56.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.514" endtime="20201030 11:51:56.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.512" endtime="20201030 11:51:56.819"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:56.823" level="INFO">${RESULT} = [{'diff': 8.790300000000029e-05}, {'diff': 8.78189999999994e-05}, {'diff': 8.751400000000034e-05}, {'diff': 8.770799999999884e-05}, {'diff': 8.806999999999912e-05}, {'diff': 8.781999999999887e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:56.820" endtime="20201030 11:51:56.823"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:56.828" level="INFO">${ACCURACY} = {'diff': [8.790300000000029e-05, 8.78189999999994e-05, 8.751400000000034e-05, 8.770799999999884e-05, 8.806999999999912e-05, 8.781999999999887e-05, 8.806999999999912e-05, 8.786100000000158e-05, 8.81660...</msg>
<status status="PASS" starttime="20201030 11:51:56.824" endtime="20201030 11:51:56.828"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.832" level="INFO">NAME: accuracy-TIMER_SET-83-philip</msg>
<status status="PASS" starttime="20201030 11:51:56.831" endtime="20201030 11:51:56.833"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.835" level="INFO">VALUE: [8.790300000000029e-05, 8.78189999999994e-05, 8.751400000000034e-05, 8.770799999999884e-05, 8.806999999999912e-05, 8.781999999999887e-05, 8.806999999999912e-05, 8.786100000000158e-05, 8.816600000000063e-05, 8.751400000000034e-05, 8.770799999999884e-05, 8.752799999999991e-05, 8.826399999999762e-05, 8.81389999999975e-05, 8.823600000000195e-05, 8.831999999999937e-05, 8.802800000000041e-05, 8.766600000000013e-05, 8.745899999999807e-05, 8.815200000000106e-05, 8.830500000000033e-05, 8.790300000000029e-05, 8.823600000000195e-05, 8.773600000000145e-05, 8.740299999999979e-05, 8.761100000000133e-05, 8.738900000000022e-05, 8.787499999999768e-05, 8.745899999999807e-05, 8.793099999999943e-05, 8.756899999999915e-05, 8.795800000000256e-05, 8.76250000000009e-05, 8.83189999999999e-05, 8.752799999999991e-05, 8.827800000000066e-05, 8.751400000000034e-05, 8.83059999999998e-05, 8.813900000000097e-05, 8.79860000000017e-05, 8.802800000000041e-05, 8.763900000000047e-05, 8.794400000000299e-05, 8.837499999999818e-05, 8.791600000000038e-05, 8.777800000000016e-05, 8.812499999999793e-05, 8.823600000000195e-05, 8.788899999999725e-05, 8.813900000000097e-05]</msg>
<status status="PASS" starttime="20201030 11:51:56.833" endtime="20201030 11:51:56.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.829" endtime="20201030 11:51:56.836"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:56.840" endtime="20201030 11:51:56.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.838" endtime="20201030 11:51:56.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.837" endtime="20201030 11:51:56.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.480" endtime="20201030 11:51:56.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.479" endtime="20201030 11:51:56.860"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.869" endtime="20201030 11:51:56.886"></status>
</kw>
<msg timestamp="20201030 11:51:56.887" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.867" endtime="20201030 11:51:56.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:56.889" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_set 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:56.888" endtime="20201030 11:51:56.890"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.890" endtime="20201030 11:51:56.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.865" endtime="20201030 11:51:56.892"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.863" endtime="20201030 11:51:56.893"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:56.899" endtime="20201030 11:51:57.187"></status>
</kw>
<msg timestamp="20201030 11:51:57.190" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:56.898" endtime="20201030 11:51:57.190"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.198" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019626458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019715486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.191" endtime="20201030 11:51:57.199"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.199" endtime="20201030 11:51:57.201"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.895" endtime="20201030 11:51:57.202"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.893" endtime="20201030 11:51:57.202"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.207" level="INFO">${RESULT} = [{'diff': 8.902800000000141e-05}, {'diff': 8.91939999999973e-05}, {'diff': 8.887500000000215e-05}, {'diff': 8.904200000000098e-05}, {'diff': 8.870799999999984e-05}, {'diff': 8.852800000000091e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:57.203" endtime="20201030 11:51:57.207"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.211" level="INFO">${ACCURACY} = {'diff': [8.902800000000141e-05, 8.91939999999973e-05, 8.887500000000215e-05, 8.904200000000098e-05, 8.870799999999984e-05, 8.852800000000091e-05, 8.840300000000079e-05, 8.8945e-05, 8.937500000000265e...</msg>
<status status="PASS" starttime="20201030 11:51:57.208" endtime="20201030 11:51:57.211"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.215" level="INFO">NAME: accuracy-TIMER_SET-84-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.214" endtime="20201030 11:51:57.215"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.218" level="INFO">VALUE: [8.902800000000141e-05, 8.91939999999973e-05, 8.887500000000215e-05, 8.904200000000098e-05, 8.870799999999984e-05, 8.852800000000091e-05, 8.840300000000079e-05, 8.8945e-05, 8.937500000000265e-05, 8.875000000000202e-05, 8.872199999999941e-05, 8.873600000000245e-05, 8.838900000000122e-05, 8.874999999999855e-05, 8.845799999999959e-05, 8.845899999999907e-05, 8.859700000000276e-05, 8.918099999999721e-05, 8.912499999999893e-05, 8.906900000000065e-05, 8.876399999999812e-05, 8.88190000000004e-05, 8.883299999999997e-05, 8.879199999999726e-05, 8.883299999999997e-05, 8.845899999999907e-05, 8.902800000000141e-05, 8.888899999999825e-05, 8.89730000000026e-05, 8.922299999999939e-05, 8.8638999999998e-05, 8.913799999999902e-05, 8.902800000000141e-05, 8.911099999999936e-05, 8.841600000000088e-05, 8.898599999999923e-05, 8.862499999999843e-05, 8.89999999999988e-05, 8.89999999999988e-05, 8.854200000000048e-05, 8.891700000000086e-05, 8.902800000000141e-05, 8.886099999999911e-05, 8.84860000000022e-05, 8.913900000000197e-05, 8.884699999999954e-05, 8.838900000000122e-05, 8.930499999999786e-05, 8.898599999999923e-05, 8.843099999999993e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.216" endtime="20201030 11:51:57.218"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.212" endtime="20201030 11:51:57.219"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.222" endtime="20201030 11:51:57.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.221" endtime="20201030 11:51:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.220" endtime="20201030 11:51:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.861" endtime="20201030 11:51:57.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:56.861" endtime="20201030 11:51:57.243"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.252" endtime="20201030 11:51:57.270"></status>
</kw>
<msg timestamp="20201030 11:51:57.271" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.250" endtime="20201030 11:51:57.271"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.273" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_set 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.272" endtime="20201030 11:51:57.274"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.274" endtime="20201030 11:51:57.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.248" endtime="20201030 11:51:57.277"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.246" endtime="20201030 11:51:57.277"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.283" endtime="20201030 11:51:57.569"></status>
</kw>
<msg timestamp="20201030 11:51:57.572" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.282" endtime="20201030 11:51:57.572"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.580" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020282319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020371819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.573" endtime="20201030 11:51:57.581"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.582" endtime="20201030 11:51:57.583"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.279" endtime="20201030 11:51:57.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.278" endtime="20201030 11:51:57.584"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.588" level="INFO">${RESULT} = [{'diff': 8.94999999999993e-05}, {'diff': 8.940300000000179e-05}, {'diff': 9.029200000000223e-05}, {'diff': 9.034700000000104e-05}, {'diff': 8.938900000000222e-05}, {'diff': 8.976400000000259e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:57.585" endtime="20201030 11:51:57.588"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.592" level="INFO">${ACCURACY} = {'diff': [8.94999999999993e-05, 8.940300000000179e-05, 9.029200000000223e-05, 9.034700000000104e-05, 8.938900000000222e-05, 8.976400000000259e-05, 8.974999999999955e-05, 9.018100000000168e-05, 9.01809...</msg>
<status status="PASS" starttime="20201030 11:51:57.589" endtime="20201030 11:51:57.592"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.597" level="INFO">NAME: accuracy-TIMER_SET-85-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.596" endtime="20201030 11:51:57.597"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.599" level="INFO">VALUE: [8.94999999999993e-05, 8.940300000000179e-05, 9.029200000000223e-05, 9.034700000000104e-05, 8.938900000000222e-05, 8.976400000000259e-05, 8.974999999999955e-05, 9.018100000000168e-05, 9.018099999999821e-05, 8.96670000000016e-05, 8.9945000000001e-05, 8.963799999999952e-05, 8.938899999999875e-05, 9.01939999999983e-05, 9.016699999999864e-05, 9.006899999999818e-05, 8.976399999999912e-05, 9.030599999999833e-05, 8.959700000000029e-05, 9.012499999999993e-05, 9.015299999999907e-05, 9.009699999999732e-05, 8.991600000000238e-05, 8.991599999999891e-05, 8.967999999999823e-05, 8.938900000000222e-05, 8.938900000000222e-05, 8.9945000000001e-05, 9.016699999999864e-05, 9.023600000000048e-05, 9.025000000000005e-05, 8.976399999999912e-05, 8.952799999999844e-05, 9.000000000000327e-05, 8.988799999999977e-05, 9.031899999999843e-05, 9.0332999999998e-05, 8.976399999999912e-05, 8.948599999999973e-05, 8.945900000000007e-05, 8.968100000000118e-05, 9.006900000000165e-05, 9.016699999999864e-05, 8.961199999999933e-05, 8.99999999999998e-05, 9.037500000000018e-05, 8.974999999999955e-05, 8.954200000000148e-05, 8.972200000000041e-05, 9.006900000000165e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.598" endtime="20201030 11:51:57.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.593" endtime="20201030 11:51:57.601"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.605" endtime="20201030 11:51:57.624"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.603" endtime="20201030 11:51:57.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.602" endtime="20201030 11:51:57.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.244" endtime="20201030 11:51:57.625"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.244" endtime="20201030 11:51:57.626"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.634" endtime="20201030 11:51:57.652"></status>
</kw>
<msg timestamp="20201030 11:51:57.652" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.633" endtime="20201030 11:51:57.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.655" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_set 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:57.653" endtime="20201030 11:51:57.655"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.656" endtime="20201030 11:51:57.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.630" endtime="20201030 11:51:57.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.628" endtime="20201030 11:51:57.658"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.665" endtime="20201030 11:51:57.951"></status>
</kw>
<msg timestamp="20201030 11:51:57.954" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.663" endtime="20201030 11:51:57.954"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.962" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019653736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019744542, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:57.955" endtime="20201030 11:51:57.962"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:57.963" endtime="20201030 11:51:57.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.661" endtime="20201030 11:51:57.965"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.659" endtime="20201030 11:51:57.966"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:57.970" level="INFO">${RESULT} = [{'diff': 9.080599999999883e-05}, {'diff': 9.05000000000003e-05}, {'diff': 9.073700000000046e-05}, {'diff': 9.045799999999812e-05}, {'diff': 9.137500000000118e-05}, {'diff': 9.080599999999883e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:57.966" endtime="20201030 11:51:57.970"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:57.974" level="INFO">${ACCURACY} = {'diff': [9.080599999999883e-05, 9.05000000000003e-05, 9.073700000000046e-05, 9.045799999999812e-05, 9.137500000000118e-05, 9.080599999999883e-05, 9.141699999999989e-05, 9.10000000000008e-05, 9.127800...</msg>
<status status="PASS" starttime="20201030 11:51:57.970" endtime="20201030 11:51:57.975"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.979" level="INFO">NAME: accuracy-TIMER_SET-86-philip</msg>
<status status="PASS" starttime="20201030 11:51:57.978" endtime="20201030 11:51:57.979"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:57.981" level="INFO">VALUE: [9.080599999999883e-05, 9.05000000000003e-05, 9.073700000000046e-05, 9.045799999999812e-05, 9.137500000000118e-05, 9.080599999999883e-05, 9.141699999999989e-05, 9.10000000000008e-05, 9.127800000000019e-05, 9.119499999999878e-05, 9.115300000000007e-05, 9.051399999999987e-05, 9.041699999999889e-05, 9.075000000000055e-05, 9.061099999999739e-05, 9.048600000000073e-05, 9.06939999999988e-05, 9.122300000000139e-05, 9.037500000000018e-05, 9.088900000000025e-05, 9.038899999999975e-05, 9.059699999999782e-05, 9.090299999999982e-05, 9.045900000000107e-05, 9.094400000000252e-05, 9.105499999999961e-05, 9.06800000000027e-05, 9.111099999999789e-05, 9.077800000000316e-05, 9.054199999999901e-05, 9.112500000000093e-05, 9.134699999999857e-05, 9.102800000000341e-05, 9.137500000000118e-05, 9.0639e-05, 9.119400000000277e-05, 9.047200000000116e-05, 9.101400000000037e-05, 9.112500000000093e-05, 9.092999999999948e-05, 9.038899999999975e-05, 9.112500000000093e-05, 9.05000000000003e-05, 9.062500000000043e-05, 9.040299999999932e-05, 9.109799999999779e-05, 9.043000000000245e-05, 9.038800000000027e-05, 9.040200000000331e-05, 9.127800000000019e-05]</msg>
<status status="PASS" starttime="20201030 11:51:57.980" endtime="20201030 11:51:57.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.975" endtime="20201030 11:51:57.983"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:57.986" endtime="20201030 11:51:58.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.985" endtime="20201030 11:51:58.006"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.984" endtime="20201030 11:51:58.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.626" endtime="20201030 11:51:58.007"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:57.626" endtime="20201030 11:51:58.007"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.016" endtime="20201030 11:51:58.033"></status>
</kw>
<msg timestamp="20201030 11:51:58.034" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.014" endtime="20201030 11:51:58.034"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.036" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_set 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.035" endtime="20201030 11:51:58.036"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.037" endtime="20201030 11:51:58.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.012" endtime="20201030 11:51:58.039"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.010" endtime="20201030 11:51:58.040"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.046" endtime="20201030 11:51:58.333"></status>
</kw>
<msg timestamp="20201030 11:51:58.336" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.045" endtime="20201030 11:51:58.337"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.345" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019938903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.337" endtime="20201030 11:51:58.345"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.346" endtime="20201030 11:51:58.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.042" endtime="20201030 11:51:58.348"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.040" endtime="20201030 11:51:58.349"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.352" level="INFO">${RESULT} = [{'diff': 9.201400000000137e-05}, {'diff': 9.224999999999858e-05}, {'diff': 9.180599999999983e-05}, {'diff': 9.190200000000134e-05}, {'diff': 9.204100000000104e-05}, {'diff': 9.21529999999976e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:58.349" endtime="20201030 11:51:58.353"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.356" level="INFO">${ACCURACY} = {'diff': [9.201400000000137e-05, 9.224999999999858e-05, 9.180599999999983e-05, 9.190200000000134e-05, 9.204100000000104e-05, 9.21529999999976e-05, 9.226400000000162e-05, 9.138900000000075e-05, 9.17639...</msg>
<status status="PASS" starttime="20201030 11:51:58.353" endtime="20201030 11:51:58.357"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.361" level="INFO">NAME: accuracy-TIMER_SET-87-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.360" endtime="20201030 11:51:58.361"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.363" level="INFO">VALUE: [9.201400000000137e-05, 9.224999999999858e-05, 9.180599999999983e-05, 9.190200000000134e-05, 9.204100000000104e-05, 9.21529999999976e-05, 9.226400000000162e-05, 9.138900000000075e-05, 9.176399999999765e-05, 9.226399999999815e-05, 9.152800000000044e-05, 9.229200000000076e-05, 9.18879999999983e-05, 9.183399999999897e-05, 9.156899999999968e-05, 9.172200000000241e-05, 9.186100000000211e-05, 9.213899999999803e-05, 9.216700000000064e-05, 9.186100000000211e-05, 9.161099999999839e-05, 9.212500000000193e-05, 9.194499999999953e-05, 9.209799999999879e-05, 9.215300000000107e-05, 9.147200000000216e-05, 9.231900000000043e-05, 9.145800000000259e-05, 9.181899999999993e-05, 9.229199999999729e-05, 9.195799999999962e-05, 9.143099999999946e-05, 9.226400000000162e-05, 9.23199999999999e-05, 9.202800000000094e-05, 9.163899999999753e-05, 9.184700000000254e-05, 9.154100000000054e-05, 9.208299999999975e-05, 9.177800000000069e-05, 9.166700000000014e-05, 9.181899999999993e-05, 9.226400000000162e-05, 9.183400000000244e-05, 9.211099999999889e-05, 9.187500000000168e-05, 9.14870000000012e-05, 9.2026999999998e-05, 9.169499999999928e-05, 9.174999999999808e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.362" endtime="20201030 11:51:58.364"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.357" endtime="20201030 11:51:58.365"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.368" endtime="20201030 11:51:58.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.367" endtime="20201030 11:51:58.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.365" endtime="20201030 11:51:58.388"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.008" endtime="20201030 11:51:58.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.007" endtime="20201030 11:51:58.389"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.398" endtime="20201030 11:51:58.418"></status>
</kw>
<msg timestamp="20201030 11:51:58.418" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.396" endtime="20201030 11:51:58.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.421" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_set 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.419" endtime="20201030 11:51:58.421"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.422" endtime="20201030 11:51:58.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.393" endtime="20201030 11:51:58.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.391" endtime="20201030 11:51:58.424"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.430" endtime="20201030 11:51:58.718"></status>
</kw>
<msg timestamp="20201030 11:51:58.721" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.429" endtime="20201030 11:51:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.729" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020412722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020505208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.722" endtime="20201030 11:51:58.730"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.730" endtime="20201030 11:51:58.732"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.426" endtime="20201030 11:51:58.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.425" endtime="20201030 11:51:58.733"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:58.737" level="INFO">${RESULT} = [{'diff': 9.248599999999926e-05}, {'diff': 9.291700000000139e-05}, {'diff': 9.290300000000182e-05}, {'diff': 9.298599999999976e-05}, {'diff': 9.30139999999989e-05}, {'diff': 9.261099999999939e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:51:58.734" endtime="20201030 11:51:58.737"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:58.741" level="INFO">${ACCURACY} = {'diff': [9.248599999999926e-05, 9.291700000000139e-05, 9.290300000000182e-05, 9.298599999999976e-05, 9.30139999999989e-05, 9.261099999999939e-05, 9.28200000000004e-05, 9.238900000000175e-05, 9.295900...</msg>
<status status="PASS" starttime="20201030 11:51:58.738" endtime="20201030 11:51:58.741"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.746" level="INFO">NAME: accuracy-TIMER_SET-88-philip</msg>
<status status="PASS" starttime="20201030 11:51:58.745" endtime="20201030 11:51:58.746"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.748" level="INFO">VALUE: [9.248599999999926e-05, 9.291700000000139e-05, 9.290300000000182e-05, 9.298599999999976e-05, 9.30139999999989e-05, 9.261099999999939e-05, 9.28200000000004e-05, 9.238900000000175e-05, 9.29590000000001e-05, 9.28879999999993e-05, 9.272199999999994e-05, 9.316600000000216e-05, 9.25269999999985e-05, 9.25139999999984e-05, 9.301400000000237e-05, 9.248599999999926e-05, 9.272300000000289e-05, 9.301400000000237e-05, 9.243100000000046e-05, 9.274999999999908e-05, 9.240199999999837e-05, 9.262499999999896e-05, 9.26529999999981e-05, 9.336100000000014e-05, 9.336100000000014e-05, 9.336100000000014e-05, 9.290299999999835e-05, 9.252800000000144e-05, 9.25000000000023e-05, 9.263799999999905e-05, 9.262499999999896e-05, 9.329100000000229e-05, 9.306900000000118e-05, 9.334700000000057e-05, 9.323600000000001e-05, 9.330500000000186e-05, 9.252800000000144e-05, 9.287499999999921e-05, 9.277800000000169e-05, 9.262499999999896e-05, 9.307000000000065e-05, 9.290200000000234e-05, 9.301400000000237e-05, 9.286099999999964e-05, 9.287500000000268e-05, 9.3333000000001e-05, 9.281900000000093e-05, 9.252799999999797e-05, 9.313899999999903e-05, 9.268100000000071e-05]</msg>
<status status="PASS" starttime="20201030 11:51:58.747" endtime="20201030 11:51:58.750"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.742" endtime="20201030 11:51:58.750"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:58.754" endtime="20201030 11:51:58.773"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.752" endtime="20201030 11:51:58.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.751" endtime="20201030 11:51:58.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.390" endtime="20201030 11:51:58.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.389" endtime="20201030 11:51:58.775"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.783" endtime="20201030 11:51:58.802"></status>
</kw>
<msg timestamp="20201030 11:51:58.803" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.782" endtime="20201030 11:51:58.803"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:58.805" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_set 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:58.804" endtime="20201030 11:51:58.805"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.806" endtime="20201030 11:51:58.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.779" endtime="20201030 11:51:58.808"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.777" endtime="20201030 11:51:58.809"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:58.815" endtime="20201030 11:51:59.100"></status>
</kw>
<msg timestamp="20201030 11:51:59.103" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:58.813" endtime="20201030 11:51:59.104"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.111" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019391389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019484917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.104" endtime="20201030 11:51:59.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.113" endtime="20201030 11:51:59.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.811" endtime="20201030 11:51:59.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.809" endtime="20201030 11:51:59.115"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.119" level="INFO">${RESULT} = [{'diff': 9.352800000000244e-05}, {'diff': 9.355500000000211e-05}, {'diff': 9.404099999999957e-05}, {'diff': 9.400000000000033e-05}, {'diff': 9.412499999999699e-05}, {'diff': 9.384700000000107e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:59.116" endtime="20201030 11:51:59.119"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.124" level="INFO">${ACCURACY} = {'diff': [9.352800000000244e-05, 9.355500000000211e-05, 9.404099999999957e-05, 9.400000000000033e-05, 9.412499999999699e-05, 9.384700000000107e-05, 9.411100000000089e-05, 9.393099999999849e-05, 9.3750...</msg>
<status status="PASS" starttime="20201030 11:51:59.120" endtime="20201030 11:51:59.124"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.128" level="INFO">NAME: accuracy-TIMER_SET-89-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.127" endtime="20201030 11:51:59.129"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.131" level="INFO">VALUE: [9.352800000000244e-05, 9.355500000000211e-05, 9.404099999999957e-05, 9.400000000000033e-05, 9.412499999999699e-05, 9.384700000000107e-05, 9.411100000000089e-05, 9.393099999999849e-05, 9.375000000000008e-05, 9.404199999999904e-05, 9.412500000000046e-05, 9.370900000000085e-05, 9.39590000000011e-05, 9.395800000000162e-05, 9.422200000000144e-05, 9.372200000000094e-05, 9.361100000000039e-05, 9.388899999999978e-05, 9.395800000000162e-05, 9.423600000000101e-05, 9.373600000000051e-05, 9.375000000000008e-05, 9.368100000000171e-05, 9.35139999999994e-05, 9.362499999999996e-05, 9.344399999999808e-05, 9.358400000000072e-05, 9.348600000000026e-05, 9.379199999999879e-05, 9.379200000000226e-05, 9.422200000000144e-05, 9.386200000000011e-05, 9.338900000000275e-05, 9.418099999999874e-05, 9.424999999999711e-05, 9.427700000000025e-05, 9.380499999999889e-05, 9.376400000000312e-05, 9.394399999999858e-05, 9.387500000000021e-05, 9.355600000000158e-05, 9.388899999999978e-05, 9.395799999999815e-05, 9.363899999999953e-05, 9.383400000000097e-05, 9.412500000000046e-05, 9.338899999999928e-05, 9.373600000000051e-05, 9.387500000000021e-05, 9.418000000000273e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.129" endtime="20201030 11:51:59.132"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.125" endtime="20201030 11:51:59.132"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.136" endtime="20201030 11:51:59.155"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.134" endtime="20201030 11:51:59.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.133" endtime="20201030 11:51:59.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.776" endtime="20201030 11:51:59.156"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:58.775" endtime="20201030 11:51:59.157"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.165" endtime="20201030 11:51:59.183"></status>
</kw>
<msg timestamp="20201030 11:51:59.184" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.163" endtime="20201030 11:51:59.184"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.186" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_set 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.185" endtime="20201030 11:51:59.186"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.187" endtime="20201030 11:51:59.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.161" endtime="20201030 11:51:59.189"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.159" endtime="20201030 11:51:59.190"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.196" endtime="20201030 11:51:59.483"></status>
</kw>
<msg timestamp="20201030 11:51:59.486" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.195" endtime="20201030 11:51:59.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019250014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019345125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.487" endtime="20201030 11:51:59.495"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.496" endtime="20201030 11:51:59.497"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.192" endtime="20201030 11:51:59.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.190" endtime="20201030 11:51:59.498"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.502" level="INFO">${RESULT} = [{'diff': 9.511100000000189e-05}, {'diff': 9.511100000000189e-05}, {'diff': 9.462500000000096e-05}, {'diff': 9.487499999999774e-05}, {'diff': 9.501399999999743e-05}, {'diff': 9.491699999999992e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:51:59.499" endtime="20201030 11:51:59.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.506" level="INFO">${ACCURACY} = {'diff': [9.511100000000189e-05, 9.511100000000189e-05, 9.462500000000096e-05, 9.487499999999774e-05, 9.501399999999743e-05, 9.491699999999992e-05, 9.461100000000139e-05, 9.456999999999868e-05, 9.4693...</msg>
<status status="PASS" starttime="20201030 11:51:59.503" endtime="20201030 11:51:59.507"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.511" level="INFO">NAME: accuracy-TIMER_SET-90-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.510" endtime="20201030 11:51:59.511"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.513" level="INFO">VALUE: [9.511100000000189e-05, 9.511100000000189e-05, 9.462500000000096e-05, 9.487499999999774e-05, 9.501399999999743e-05, 9.491699999999992e-05, 9.461100000000139e-05, 9.456999999999868e-05, 9.469399999999933e-05, 9.525000000000158e-05, 9.488900000000078e-05, 9.526400000000115e-05, 9.447199999999822e-05, 9.476400000000065e-05, 9.475000000000108e-05, 9.447199999999822e-05, 9.529200000000029e-05, 9.466699999999967e-05, 9.452799999999997e-05, 9.472200000000194e-05, 9.481899999999946e-05, 9.487500000000121e-05, 9.502800000000047e-05, 9.479199999999979e-05, 9.530599999999986e-05, 9.51530000000006e-05, 9.477799999999675e-05, 9.495899999999863e-05, 9.466699999999967e-05, 9.505500000000014e-05, 9.491600000000044e-05, 9.525000000000158e-05, 9.46660000000002e-05, 9.437500000000071e-05, 9.445799999999865e-05, 9.45140000000004e-05, 9.488900000000078e-05, 9.525000000000158e-05, 9.473599999999804e-05, 9.495899999999863e-05, 9.525000000000158e-05, 9.508299999999928e-05, 9.490200000000087e-05, 9.543099999999999e-05, 9.475000000000108e-05, 9.52079999999994e-05, 9.461099999999792e-05, 9.488899999999731e-05, 9.530599999999986e-05, 9.447300000000117e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.512" endtime="20201030 11:51:59.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.507" endtime="20201030 11:51:59.514"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.518" endtime="20201030 11:51:59.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.517" endtime="20201030 11:51:59.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.515" endtime="20201030 11:51:59.538"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.157" endtime="20201030 11:51:59.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.157" endtime="20201030 11:51:59.539"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.548" endtime="20201030 11:51:59.570"></status>
</kw>
<msg timestamp="20201030 11:51:59.570" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.546" endtime="20201030 11:51:59.570"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.573" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_set 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.571" endtime="20201030 11:51:59.573"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.574" endtime="20201030 11:51:59.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.543" endtime="20201030 11:51:59.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.541" endtime="20201030 11:51:59.576"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.583" endtime="20201030 11:51:59.868"></status>
</kw>
<msg timestamp="20201030 11:51:59.871" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:59.581" endtime="20201030 11:51:59.871"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.879" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022851639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0229475, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:51:59.872" endtime="20201030 11:51:59.880"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.880" endtime="20201030 11:51:59.882"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.579" endtime="20201030 11:51:59.883"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.577" endtime="20201030 11:51:59.883"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:51:59.887" level="INFO">${RESULT} = [{'diff': 9.586099999999917e-05}, {'diff': 9.63470000000001e-05}, {'diff': 9.611099999999942e-05}, {'diff': 9.612499999999899e-05}, {'diff': 9.595899999999963e-05}, {'diff': 9.58339999999995e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:51:59.884" endtime="20201030 11:51:59.887"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:51:59.891" level="INFO">${ACCURACY} = {'diff': [9.586099999999917e-05, 9.63470000000001e-05, 9.611099999999942e-05, 9.612499999999899e-05, 9.595899999999963e-05, 9.58339999999995e-05, 9.62080000000004e-05, 9.62080000000004e-05, 9.55280000...</msg>
<status status="PASS" starttime="20201030 11:51:59.888" endtime="20201030 11:51:59.891"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.895" level="INFO">NAME: accuracy-TIMER_SET-91-philip</msg>
<status status="PASS" starttime="20201030 11:51:59.894" endtime="20201030 11:51:59.896"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.898" level="INFO">VALUE: [9.586099999999917e-05, 9.63470000000001e-05, 9.611099999999942e-05, 9.612499999999899e-05, 9.595899999999963e-05, 9.58339999999995e-05, 9.62080000000004e-05, 9.62080000000004e-05, 9.552800000000097e-05, 9.544400000000008e-05, 9.601399999999843e-05, 9.577800000000122e-05, 9.607000000000018e-05, 9.602800000000147e-05, 9.59859999999993e-05, 9.624999999999911e-05, 9.568100000000024e-05, 9.538899999999781e-05, 9.563899999999806e-05, 9.57079999999999e-05, 9.615299999999813e-05, 9.575000000000208e-05, 9.545799999999965e-05, 9.56530000000011e-05, 9.618100000000074e-05, 9.622199999999997e-05, 9.579200000000079e-05, 9.580600000000036e-05, 9.624999999999911e-05, 9.631900000000096e-05, 9.587500000000221e-05, 9.597199999999972e-05, 9.56530000000011e-05, 9.625000000000258e-05, 9.618100000000074e-05, 9.60140000000019e-05, 9.608399999999975e-05, 9.624999999999911e-05, 9.612500000000246e-05, 9.593000000000101e-05, 9.602800000000147e-05, 9.547199999999922e-05, 9.616700000000117e-05, 9.61669999999977e-05, 9.540300000000085e-05, 9.595899999999963e-05, 9.616599999999823e-05, 9.54729999999987e-05, 9.60409999999981e-05, 9.55270000000015e-05]</msg>
<status status="PASS" starttime="20201030 11:51:59.897" endtime="20201030 11:51:59.899"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.892" endtime="20201030 11:51:59.900"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:51:59.904" endtime="20201030 11:51:59.923"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.902" endtime="20201030 11:51:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.901" endtime="20201030 11:51:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.540" endtime="20201030 11:51:59.924"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.539" endtime="20201030 11:51:59.924"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.933" endtime="20201030 11:51:59.952"></status>
</kw>
<msg timestamp="20201030 11:51:59.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.931" endtime="20201030 11:51:59.953"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:51:59.955" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_set 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:51:59.954" endtime="20201030 11:51:59.955"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.956" endtime="20201030 11:51:59.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.929" endtime="20201030 11:51:59.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.927" endtime="20201030 11:51:59.959"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:51:59.965" endtime="20201030 11:52:00.251"></status>
</kw>
<msg timestamp="20201030 11:52:00.254" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:51:59.963" endtime="20201030 11:52:00.255"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.262" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457736, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019554153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.255" endtime="20201030 11:52:00.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.264" endtime="20201030 11:52:00.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.961" endtime="20201030 11:52:00.266"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.959" endtime="20201030 11:52:00.266"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.270" level="INFO">${RESULT} = [{'diff': 9.641700000000142e-05}, {'diff': 9.661099999999992e-05}, {'diff': 9.68470000000006e-05}, {'diff': 9.688900000000278e-05}, {'diff': 9.637499999999924e-05}, {'diff': 9.705500000000214e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:00.267" endtime="20201030 11:52:00.270"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.275" level="INFO">${ACCURACY} = {'diff': [9.641700000000142e-05, 9.661099999999992e-05, 9.68470000000006e-05, 9.688900000000278e-05, 9.637499999999924e-05, 9.705500000000214e-05, 9.679099999999885e-05, 9.72219999999975e-05, 9.733299...</msg>
<status status="PASS" starttime="20201030 11:52:00.271" endtime="20201030 11:52:00.275"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.279" level="INFO">NAME: accuracy-TIMER_SET-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.278" endtime="20201030 11:52:00.280"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.282" level="INFO">VALUE: [9.641700000000142e-05, 9.661099999999992e-05, 9.68470000000006e-05, 9.688900000000278e-05, 9.637499999999924e-05, 9.705500000000214e-05, 9.679099999999885e-05, 9.72219999999975e-05, 9.733299999999806e-05, 9.688899999999931e-05, 9.72080000000014e-05, 9.7334000000001e-05, 9.661099999999992e-05, 9.662499999999949e-05, 9.699999999999986e-05, 9.68059999999979e-05, 9.7027999999999e-05, 9.64859999999998e-05, 9.695800000000115e-05, 9.645800000000065e-05, 9.686100000000017e-05, 9.687499999999974e-05, 9.71669999999987e-05, 9.650000000000283e-05, 9.726399999999968e-05, 9.679199999999832e-05, 9.669500000000081e-05, 9.668000000000176e-05, 9.731899999999849e-05, 9.638900000000228e-05, 9.652800000000197e-05, 9.694399999999812e-05, 9.702800000000247e-05, 9.680600000000136e-05, 9.699999999999986e-05, 9.711100000000042e-05, 9.729099999999935e-05, 9.686199999999964e-05, 9.681900000000146e-05, 9.72219999999975e-05, 9.695799999999768e-05, 9.715299999999913e-05, 9.663900000000253e-05, 9.706999999999771e-05, 9.729199999999882e-05, 9.712500000000346e-05, 9.7027999999999e-05, 9.672200000000047e-05, 9.66660000000022e-05, 9.681899999999799e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.280" endtime="20201030 11:52:00.283"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.276" endtime="20201030 11:52:00.283"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.287" endtime="20201030 11:52:00.306"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.285" endtime="20201030 11:52:00.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.284" endtime="20201030 11:52:00.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.925" endtime="20201030 11:52:00.307"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:59.925" endtime="20201030 11:52:00.307"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.316" endtime="20201030 11:52:00.335"></status>
</kw>
<msg timestamp="20201030 11:52:00.336" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.314" endtime="20201030 11:52:00.336"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.338" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_set 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.337" endtime="20201030 11:52:00.338"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.339" endtime="20201030 11:52:00.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.312" endtime="20201030 11:52:00.341"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.310" endtime="20201030 11:52:00.342"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.348" endtime="20201030 11:52:00.635"></status>
</kw>
<msg timestamp="20201030 11:52:00.638" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019392972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.347" endtime="20201030 11:52:00.638"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.646" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019392972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019490639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.639" endtime="20201030 11:52:00.647"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.648" endtime="20201030 11:52:00.649"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.344" endtime="20201030 11:52:00.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.342" endtime="20201030 11:52:00.650"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:00.654" level="INFO">${RESULT} = [{'diff': 9.76669999999992e-05}, {'diff': 9.740299999999938e-05}, {'diff': 9.825000000000111e-05}, {'diff': 9.766700000000267e-05}, {'diff': 9.761100000000092e-05}, {'diff': 9.769400000000233e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:00.651" endtime="20201030 11:52:00.654"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:00.658" level="INFO">${ACCURACY} = {'diff': [9.76669999999992e-05, 9.740299999999938e-05, 9.825000000000111e-05, 9.766700000000267e-05, 9.761100000000092e-05, 9.769400000000233e-05, 9.777700000000028e-05, 9.770799999999843e-05, 9.75559...</msg>
<status status="PASS" starttime="20201030 11:52:00.655" endtime="20201030 11:52:00.658"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.662" level="INFO">NAME: accuracy-TIMER_SET-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:00.661" endtime="20201030 11:52:00.663"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.665" level="INFO">VALUE: [9.76669999999992e-05, 9.740299999999938e-05, 9.825000000000111e-05, 9.766700000000267e-05, 9.761100000000092e-05, 9.769400000000233e-05, 9.777700000000028e-05, 9.770799999999843e-05, 9.755599999999864e-05, 9.759699999999788e-05, 9.759699999999788e-05, 9.751399999999993e-05, 9.773600000000104e-05, 9.830600000000286e-05, 9.831899999999949e-05, 9.82080000000024e-05, 9.787500000000074e-05, 9.758300000000178e-05, 9.77080000000019e-05, 9.813900000000056e-05, 9.81669999999997e-05, 9.801400000000043e-05, 9.824999999999764e-05, 9.791699999999945e-05, 9.805599999999914e-05, 9.797199999999825e-05, 9.781999999999846e-05, 9.75409999999996e-05, 9.750000000000036e-05, 9.737500000000024e-05, 9.781899999999899e-05, 9.83479999999981e-05, 9.740299999999938e-05, 9.738899999999981e-05, 9.74730000000007e-05, 9.831899999999949e-05, 9.82080000000024e-05, 9.74860000000008e-05, 9.751399999999993e-05, 9.738899999999981e-05, 9.804199999999957e-05, 9.772200000000147e-05, 9.782000000000193e-05, 9.763900000000006e-05, 9.751399999999993e-05, 9.776400000000018e-05, 9.750000000000036e-05, 9.822200000000197e-05, 9.790299999999988e-05, 9.783299999999856e-05]</msg>
<status status="PASS" starttime="20201030 11:52:00.663" endtime="20201030 11:52:00.666"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.659" endtime="20201030 11:52:00.666"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:00.670" endtime="20201030 11:52:00.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.668" endtime="20201030 11:52:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.667" endtime="20201030 11:52:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.308" endtime="20201030 11:52:00.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.308" endtime="20201030 11:52:00.691"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.699" endtime="20201030 11:52:00.719"></status>
</kw>
<msg timestamp="20201030 11:52:00.720" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.698" endtime="20201030 11:52:00.720"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:00.722" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_set 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:00.721" endtime="20201030 11:52:00.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.724" endtime="20201030 11:52:00.725"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.695" endtime="20201030 11:52:00.726"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.693" endtime="20201030 11:52:00.727"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:00.733" endtime="20201030 11:52:01.019"></status>
</kw>
<msg timestamp="20201030 11:52:01.022" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:00.732" endtime="20201030 11:52:01.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.030" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020345056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.023" endtime="20201030 11:52:01.031"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.032" endtime="20201030 11:52:01.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.729" endtime="20201030 11:52:01.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.727" endtime="20201030 11:52:01.034"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.038" level="INFO">${RESULT} = [{'diff': 9.926299999999874e-05}, {'diff': 9.843100000000299e-05}, {'diff': 9.883399999999903e-05}, {'diff': 9.912499999999852e-05}, {'diff': 9.84020000000009e-05}, {'diff': 9.901299999999849e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:01.035" endtime="20201030 11:52:01.038"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.042" level="INFO">${ACCURACY} = {'diff': [9.926299999999874e-05, 9.843100000000299e-05, 9.883399999999903e-05, 9.912499999999852e-05, 9.84020000000009e-05, 9.901299999999849e-05, 9.913899999999809e-05, 9.884699999999913e-05, 9.85280...</msg>
<status status="PASS" starttime="20201030 11:52:01.039" endtime="20201030 11:52:01.042"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.046" level="INFO">NAME: accuracy-TIMER_SET-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.045" endtime="20201030 11:52:01.047"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.049" level="INFO">VALUE: [9.926299999999874e-05, 9.843100000000299e-05, 9.883399999999903e-05, 9.912499999999852e-05, 9.84020000000009e-05, 9.901299999999849e-05, 9.913899999999809e-05, 9.884699999999913e-05, 9.85280000000005e-05, 9.865300000000063e-05, 9.890299999999741e-05, 9.844399999999962e-05, 9.924999999999864e-05, 9.873599999999857e-05, 9.836200000000114e-05, 9.883299999999956e-05, 9.850000000000136e-05, 9.887499999999827e-05, 9.851400000000093e-05, 9.847199999999875e-05, 9.8721999999999e-05, 9.913900000000156e-05, 9.85280000000005e-05, 9.913900000000156e-05, 9.923700000000202e-05, 9.876399999999771e-05, 9.905500000000067e-05, 9.89159999999975e-05, 9.862499999999802e-05, 9.912500000000199e-05, 9.8721999999999e-05, 9.869500000000281e-05, 9.875000000000161e-05, 9.884699999999913e-05, 9.925000000000211e-05, 9.861100000000192e-05, 9.89159999999975e-05, 9.915199999999819e-05, 9.888900000000131e-05, 9.86800000000003e-05, 9.901400000000143e-05, 9.906999999999971e-05, 9.882000000000293e-05, 9.88479999999986e-05, 9.845899999999866e-05, 9.916600000000123e-05, 9.912499999999852e-05, 9.884699999999913e-05, 9.863899999999759e-05, 9.934699999999963e-05]</msg>
<status status="PASS" starttime="20201030 11:52:01.048" endtime="20201030 11:52:01.051"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.043" endtime="20201030 11:52:01.051"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.055" endtime="20201030 11:52:01.074"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.053" endtime="20201030 11:52:01.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.052" endtime="20201030 11:52:01.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.691" endtime="20201030 11:52:01.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:00.691" endtime="20201030 11:52:01.075"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.084" endtime="20201030 11:52:01.104"></status>
</kw>
<msg timestamp="20201030 11:52:01.104" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.082" endtime="20201030 11:52:01.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.107" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_set 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.105" endtime="20201030 11:52:01.107"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.108" endtime="20201030 11:52:01.109"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.080" endtime="20201030 11:52:01.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.078" endtime="20201030 11:52:01.110"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.117" endtime="20201030 11:52:01.414"></status>
</kw>
<msg timestamp="20201030 11:52:01.421" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.115" endtime="20201030 11:52:01.422"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.441" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019870778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019970639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.423" endtime="20201030 11:52:01.442"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.443" endtime="20201030 11:52:01.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.113" endtime="20201030 11:52:01.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.111" endtime="20201030 11:52:01.449"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.457" level="INFO">${RESULT} = [{'diff': 9.98609999999997e-05}, {'diff': 0.00010001399999999896}, {'diff': 0.00010024999999999964}, {'diff': 0.00010029099999999888}, {'diff': 0.00010006899999999777}, {'diff': 9.961099999999945e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:01.450" endtime="20201030 11:52:01.458"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.468" level="INFO">${ACCURACY} = {'diff': [9.98609999999997e-05, 0.00010001399999999896, 0.00010024999999999964, 0.00010029099999999888, 0.00010006899999999777, 9.961099999999945e-05, 0.00010033300000000106, 9.938899999999834e-05, 9....</msg>
<status status="PASS" starttime="20201030 11:52:01.459" endtime="20201030 11:52:01.469"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.476" level="INFO">NAME: accuracy-TIMER_SET-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.475" endtime="20201030 11:52:01.476"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.478" level="INFO">VALUE: [9.98609999999997e-05, 0.00010001399999999896, 0.00010024999999999964, 0.00010029099999999888, 0.00010006899999999777, 9.961099999999945e-05, 0.00010033300000000106, 9.938899999999834e-05, 9.99999999999994e-05, 9.962499999999902e-05, 0.00010018100000000127, 9.998599999999983e-05, 9.958399999999978e-05, 9.968100000000077e-05, 9.96670000000012e-05, 9.966600000000173e-05, 0.00010025000000000311, 9.945800000000019e-05, 9.963899999999859e-05, 0.00010009799999999985, 9.987499999999927e-05, 0.00010029200000000182, 0.00010012499999999952, 0.00010030599999999792, 9.958399999999978e-05, 9.974999999999914e-05, 9.966600000000173e-05, 9.99999999999994e-05, 9.952799999999803e-05, 0.00010011099999999995, 0.00010019499999999737, 9.993100000000102e-05, 0.00010026399999999921, 9.962499999999902e-05, 0.00010011099999999995, 0.00010009700000000038, 0.00010004099999999863, 0.00010013900000000256, 9.952799999999803e-05, 0.00010005600000000114, 0.00010023600000000008, 0.00010026399999999921, 9.931999999999996e-05, 0.00010018100000000127, 0.00010026299999999974, 9.987499999999927e-05, 9.974999999999914e-05, 9.991700000000145e-05, 0.00010011099999999995, 0.000100028000000002]</msg>
<status status="PASS" starttime="20201030 11:52:01.477" endtime="20201030 11:52:01.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.470" endtime="20201030 11:52:01.480"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.483" endtime="20201030 11:52:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.482" endtime="20201030 11:52:01.503"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.481" endtime="20201030 11:52:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.076" endtime="20201030 11:52:01.504"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.076" endtime="20201030 11:52:01.504"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.513" endtime="20201030 11:52:01.531"></status>
</kw>
<msg timestamp="20201030 11:52:01.531" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.511" endtime="20201030 11:52:01.532"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.534" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_set 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.532" endtime="20201030 11:52:01.534"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.535" endtime="20201030 11:52:01.536"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.509" endtime="20201030 11:52:01.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.506" endtime="20201030 11:52:01.537"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.544" endtime="20201030 11:52:01.831"></status>
</kw>
<msg timestamp="20201030 11:52:01.834" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01955825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:01.542" endtime="20201030 11:52:01.834"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.842" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019457639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.01955825, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:01.835" endtime="20201030 11:52:01.842"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.843" endtime="20201030 11:52:01.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.540" endtime="20201030 11:52:01.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.538" endtime="20201030 11:52:01.846"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:01.850" level="INFO">${RESULT} = [{'diff': 0.00010061100000000045}, {'diff': 0.00010119499999999837}, {'diff': 0.00010088899999999984}, {'diff': 0.00010125000000000065}, {'diff': 0.00010038899999999934}, {'diff': 0.000101194000000002...</msg>
<status status="PASS" starttime="20201030 11:52:01.847" endtime="20201030 11:52:01.850"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:01.854" level="INFO">${ACCURACY} = {'diff': [0.00010061100000000045, 0.00010119499999999837, 0.00010088899999999984, 0.00010125000000000065, 0.00010038899999999934, 0.00010119400000000237, 0.00010126400000000021, 0.00010119400000000237...</msg>
<status status="PASS" starttime="20201030 11:52:01.851" endtime="20201030 11:52:01.854"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.858" level="INFO">NAME: accuracy-TIMER_SET-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:01.857" endtime="20201030 11:52:01.858"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.860" level="INFO">VALUE: [0.00010061100000000045, 0.00010119499999999837, 0.00010088899999999984, 0.00010125000000000065, 0.00010038899999999934, 0.00010119400000000237, 0.00010126400000000021, 0.00010119400000000237, 0.00010038899999999934, 0.00010080499999999895, 0.00010045799999999772, 0.00010059699999999741, 0.00010097299999999726, 0.00010097200000000126, 0.00010105599999999867, 0.0001012220000000015, 0.00010102700000000006, 0.00010042999999999858, 0.00010117999999999933, 0.00010088899999999984, 0.00010070900000000091, 0.00010045800000000119, 0.00010129199999999935, 0.00010122300000000098, 0.00010095800000000169, 0.00010045800000000119, 0.00010063899999999959, 0.00010138900000000034, 0.0001010000000000004, 0.00010062500000000002, 0.00010112500000000052, 0.00010126400000000021, 0.00010112500000000052, 0.00010091699999999898, 0.00010104200000000257, 0.00010106899999999877, 0.00010052699999999956, 0.00010138900000000034, 0.000100415999999999, 0.00010045800000000119, 0.00010058300000000131, 0.00010083400000000103, 0.00010088899999999984, 0.00010087500000000027, 0.0001010549999999992, 0.0001010549999999992, 0.00010061100000000045, 0.00010134700000000163, 0.00010090299999999941, 0.00010088899999999984]</msg>
<status status="PASS" starttime="20201030 11:52:01.859" endtime="20201030 11:52:01.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.854" endtime="20201030 11:52:01.862"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:01.865" endtime="20201030 11:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.864" endtime="20201030 11:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.863" endtime="20201030 11:52:01.885"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.505" endtime="20201030 11:52:01.886"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.504" endtime="20201030 11:52:01.886"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.894" endtime="20201030 11:52:01.915"></status>
</kw>
<msg timestamp="20201030 11:52:01.915" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.893" endtime="20201030 11:52:01.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:01.918" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_set 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:01.916" endtime="20201030 11:52:01.918"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.919" endtime="20201030 11:52:01.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.890" endtime="20201030 11:52:01.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.888" endtime="20201030 11:52:01.922"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:01.928" endtime="20201030 11:52:02.213"></status>
</kw>
<msg timestamp="20201030 11:52:02.216" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:01.926" endtime="20201030 11:52:02.217"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.224" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020972375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021074528, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.217" endtime="20201030 11:52:02.225"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.225" endtime="20201030 11:52:02.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.924" endtime="20201030 11:52:02.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.922" endtime="20201030 11:52:02.228"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.232" level="INFO">${RESULT} = [{'diff': 0.00010215299999999719}, {'diff': 0.00010184700000000213}, {'diff': 0.00010229200000000035}, {'diff': 0.00010180499999999995}, {'diff': 0.00010202699999999759}, {'diff': 0.000102096999999998...</msg>
<status status="PASS" starttime="20201030 11:52:02.229" endtime="20201030 11:52:02.232"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.236" level="INFO">${ACCURACY} = {'diff': [0.00010215299999999719, 0.00010184700000000213, 0.00010229200000000035, 0.00010180499999999995, 0.00010202699999999759, 0.00010209699999999891, 0.00010163900000000059, 0.00010156899999999927...</msg>
<status status="PASS" starttime="20201030 11:52:02.233" endtime="20201030 11:52:02.236"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.240" level="INFO">NAME: accuracy-TIMER_SET-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.239" endtime="20201030 11:52:02.240"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.242" level="INFO">VALUE: [0.00010215299999999719, 0.00010184700000000213, 0.00010229200000000035, 0.00010180499999999995, 0.00010202699999999759, 0.00010209699999999891, 0.00010163900000000059, 0.00010156899999999927, 0.00010197199999999879, 0.00010162500000000102, 0.0001016809999999993, 0.0001014870000000008, 0.00010206999999999924, 0.00010162500000000102, 0.00010137500000000077, 0.00010218000000000033, 0.00010181899999999952, 0.00010162500000000102, 0.00010213900000000109, 0.00010201400000000097, 0.00010219499999999937, 0.0001021809999999998, 0.0001016809999999993, 0.00010197200000000226, 0.00010229099999999741, 0.00010208299999999934, 0.00010230500000000045, 0.00010175000000000115, 0.0001020420000000001, 0.00010163899999999712, 0.00010202800000000053, 0.00010180599999999942, 0.00010170899999999844, 0.00010179199999999985, 0.00010180499999999995, 0.00010186099999999823, 0.0001019160000000005, 0.0001022359999999986, 0.00010224999999999818, 0.000101819999999999, 0.0001020420000000001, 0.00010215300000000066, 0.00010190300000000041, 0.00010202800000000053, 0.00010211099999999848, 0.00010167999999999983, 0.00010183299999999909, 0.00010149999999999743, 0.00010191699999999998, 0.00010154100000000013]</msg>
<status status="PASS" starttime="20201030 11:52:02.241" endtime="20201030 11:52:02.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.237" endtime="20201030 11:52:02.245"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.248" endtime="20201030 11:52:02.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.247" endtime="20201030 11:52:02.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.245" endtime="20201030 11:52:02.268"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.887" endtime="20201030 11:52:02.269"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:01.886" endtime="20201030 11:52:02.269"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.277" endtime="20201030 11:52:02.297"></status>
</kw>
<msg timestamp="20201030 11:52:02.298" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.276" endtime="20201030 11:52:02.298"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.300" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_set 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.299" endtime="20201030 11:52:02.300"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.301" endtime="20201030 11:52:02.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.273" endtime="20201030 11:52:02.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.271" endtime="20201030 11:52:02.304"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.310" endtime="20201030 11:52:02.595"></status>
</kw>
<msg timestamp="20201030 11:52:02.599" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:02.309" endtime="20201030 11:52:02.599"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.606" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.0194635, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019566458, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:02.600" endtime="20201030 11:52:02.607"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.608" endtime="20201030 11:52:02.609"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.306" endtime="20201030 11:52:02.610"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.304" endtime="20201030 11:52:02.610"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.614" level="INFO">${RESULT} = [{'diff': 0.00010295799999999675}, {'diff': 0.00010330600000000092}, {'diff': 0.0001031810000000008}, {'diff': 0.00010249999999999843}, {'diff': 0.0001030000000000024}, {'diff': 0.00010297199999999979...</msg>
<status status="PASS" starttime="20201030 11:52:02.611" endtime="20201030 11:52:02.614"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:02.619" level="INFO">${ACCURACY} = {'diff': [0.00010295799999999675, 0.00010330600000000092, 0.0001031810000000008, 0.00010249999999999843, 0.0001030000000000024, 0.00010297199999999979, 0.00010280500000000095, 0.00010295800000000022, ...</msg>
<status status="PASS" starttime="20201030 11:52:02.615" endtime="20201030 11:52:02.619"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.623" level="INFO">NAME: accuracy-TIMER_SET-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:02.622" endtime="20201030 11:52:02.624"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.626" level="INFO">VALUE: [0.00010295799999999675, 0.00010330600000000092, 0.0001031810000000008, 0.00010249999999999843, 0.0001030000000000024, 0.00010297199999999979, 0.00010280500000000095, 0.00010295800000000022, 0.0001033200000000005, 0.0001031940000000009, 0.0001026940000000004, 0.00010279200000000085, 0.00010247200000000276, 0.00010329199999999789, 0.00010282, 0.00010317999999999786, 0.00010324999999999918, 0.00010252800000000103, 0.00010316700000000123, 0.00010302799999999807, 0.00010324999999999918, 0.00010308399999999981, 0.00010261099999999898, 0.0001033200000000005, 0.00010312499999999905, 0.00010297199999999979, 0.00010324999999999918, 0.00010274999999999868, 0.00010325000000000265, 0.00010302799999999807, 0.0001030139999999985, 0.00010327800000000179, 0.00010243100000000005, 0.00010276399999999825, 0.00010311099999999948, 0.00010254100000000113, 0.00010320899999999994, 0.00010294400000000065, 0.00010252800000000103, 0.00010263900000000159, 0.00010290300000000141, 0.00010247199999999929, 0.00010251400000000147, 0.00010261199999999845, 0.00010305600000000067, 0.00010268000000000083, 0.0001023749999999983, 0.00010276399999999825, 0.00010312500000000252, 0.0001030420000000011]</msg>
<status status="PASS" starttime="20201030 11:52:02.624" endtime="20201030 11:52:02.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.620" endtime="20201030 11:52:02.627"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:02.630" endtime="20201030 11:52:02.650"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.629" endtime="20201030 11:52:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.628" endtime="20201030 11:52:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.270" endtime="20201030 11:52:02.651"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.269" endtime="20201030 11:52:02.651"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.660" endtime="20201030 11:52:02.679"></status>
</kw>
<msg timestamp="20201030 11:52:02.679" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.658" endtime="20201030 11:52:02.680"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.682" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_set 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:02.680" endtime="20201030 11:52:02.682"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.683" endtime="20201030 11:52:02.684"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.656" endtime="20201030 11:52:02.685"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.654" endtime="20201030 11:52:02.685"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.692" endtime="20201030 11:52:02.979"></status>
</kw>
<msg timestamp="20201030 11:52:02.982" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.690" endtime="20201030 11:52:02.982"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:02.990" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019570861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019674306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:02.983" endtime="20201030 11:52:02.990"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:02.991" endtime="20201030 11:52:02.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.688" endtime="20201030 11:52:02.993"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.686" endtime="20201030 11:52:02.994"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:02.998" level="INFO">${RESULT} = [{'diff': 0.00010344500000000062}, {'diff': 0.00010374999999999968}, {'diff': 0.00010377800000000229}, {'diff': 0.00010365299999999869}, {'diff': 0.00010338899999999887}, {'diff': 0.000103333000000000...</msg>
<status status="PASS" starttime="20201030 11:52:02.995" endtime="20201030 11:52:02.998"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.002" level="INFO">${ACCURACY} = {'diff': [0.00010344500000000062, 0.00010374999999999968, 0.00010377800000000229, 0.00010365299999999869, 0.00010338899999999887, 0.00010333300000000059, 0.00010397200000000079, 0.000103820000000001, ...</msg>
<status status="PASS" starttime="20201030 11:52:02.999" endtime="20201030 11:52:03.002"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.006" level="INFO">NAME: accuracy-TIMER_SET-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.005" endtime="20201030 11:52:03.006"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.008" level="INFO">VALUE: [0.00010344500000000062, 0.00010374999999999968, 0.00010377800000000229, 0.00010365299999999869, 0.00010338899999999887, 0.00010333300000000059, 0.00010397200000000079, 0.000103820000000001, 0.00010398600000000036, 0.00010395900000000069, 0.00010415199999999972, 0.00010374999999999968, 0.00010366600000000226, 0.00010388899999999937, 0.00010381899999999805, 0.0001036810000000013, 0.00010345900000000019, 0.00010416700000000223, 0.00010372200000000054, 0.00010416699999999876, 0.00010390199999999947, 0.00010367999999999836, 0.00010362499999999955, 0.00010361099999999998, 0.00010393100000000155, 0.0001036940000000014, 0.00010436100000000073, 0.00010413900000000309, 0.00010427799999999932, 0.00010384700000000066, 0.00010391700000000198, 0.00010413899999999962, 0.00010381899999999805, 0.00010366700000000173, 0.00010351299999999952, 0.00010380600000000142, 0.00010416700000000223, 0.00010416699999999876, 0.00010366699999999826, 0.00010383300000000109, 0.00010402700000000306, 0.0001040550000000022, 0.00010374999999999968, 0.00010377800000000229, 0.00010387500000000327, 0.00010366700000000173, 0.00010398600000000036, 0.0001043750000000003, 0.00010430499999999898, 0.00010344400000000115]</msg>
<status status="PASS" starttime="20201030 11:52:03.007" endtime="20201030 11:52:03.009"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.002" endtime="20201030 11:52:03.010"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.013" endtime="20201030 11:52:03.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.012" endtime="20201030 11:52:03.033"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.011" endtime="20201030 11:52:03.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.652" endtime="20201030 11:52:03.034"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:02.652" endtime="20201030 11:52:03.034"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SET for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.043" endtime="20201030 11:52:03.066"></status>
</kw>
<msg timestamp="20201030 11:52:03.067" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.041" endtime="20201030 11:52:03.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.069" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_set 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.068" endtime="20201030 11:52:03.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.070" endtime="20201030 11:52:03.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.039" endtime="20201030 11:52:03.072"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.037" endtime="20201030 11:52:03.073"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.079" endtime="20201030 11:52:03.364"></status>
</kw>
<msg timestamp="20201030 11:52:03.367" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.078" endtime="20201030 11:52:03.367"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.375" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022681597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022786125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:03.368" endtime="20201030 11:52:03.376"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.376" endtime="20201030 11:52:03.378"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.075" endtime="20201030 11:52:03.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.073" endtime="20201030 11:52:03.379"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:03.383" level="INFO">${RESULT} = [{'diff': 0.00010452799999999957}, {'diff': 0.00010472200000000154}, {'diff': 0.00010486099999999776}, {'diff': 0.00010512500000000105}, {'diff': 0.00010444499999999815}, {'diff': 0.000104790999999999...</msg>
<status status="PASS" starttime="20201030 11:52:03.380" endtime="20201030 11:52:03.383"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:03.387" level="INFO">${ACCURACY} = {'diff': [0.00010452799999999957, 0.00010472200000000154, 0.00010486099999999776, 0.00010512500000000105, 0.00010444499999999815, 0.00010479099999999991, 0.00010498600000000136, 0.00010467999999999936...</msg>
<status status="PASS" starttime="20201030 11:52:03.384" endtime="20201030 11:52:03.387"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.391" level="INFO">NAME: accuracy-TIMER_SET-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:03.390" endtime="20201030 11:52:03.391"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:03.393" level="INFO">VALUE: [0.00010452799999999957, 0.00010472200000000154, 0.00010486099999999776, 0.00010512500000000105, 0.00010444499999999815, 0.00010479099999999991, 0.00010498600000000136, 0.00010467999999999936, 0.00010505499999999973, 0.00010440299999999944, 0.00010497200000000179, 0.00010526400000000075, 0.00010499999999999746, 0.00010443100000000205, 0.00010519399999999943, 0.00010495899999999822, 0.00010472199999999807, 0.00010512500000000105, 0.00010529199999999989, 0.00010498600000000136, 0.00010525000000000118, 0.00010463900000000012, 0.00010479199999999939, 0.00010520899999999847, 0.00010536199999999774, 0.00010458299999999837, 0.00010452700000000009, 0.00010472200000000154, 0.00010486100000000123, 0.00010436100000000073, 0.00010437499999999683, 0.00010504199999999964, 0.000105207999999999, 0.00010511200000000095, 0.00010454199999999914, 0.00010440199999999997, 0.00010461100000000098, 0.00010462499999999708, 0.00010500000000000093, 0.00010483299999999862, 0.00010481999999999853, 0.000104820000000002, 0.00010468099999999883, 0.00010515300000000019, 0.00010525000000000118, 0.00010529100000000041, 0.00010513900000000062, 0.00010522199999999857, 0.00010481899999999905, 0.00010447200000000129]</msg>
<status status="PASS" starttime="20201030 11:52:03.392" endtime="20201030 11:52:03.395"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.388" endtime="20201030 11:52:03.395"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.399" endtime="20201030 11:52:03.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.398" endtime="20201030 11:52:03.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.396" endtime="20201030 11:52:03.419"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.035" endtime="20201030 11:52:03.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.034" endtime="20201030 11:52:03.420"></status>
</kw>
<status status="PASS" starttime="20201030 11:51:25.157" endtime="20201030 11:52:03.420"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:51:22.055" endtime="20201030 11:52:03.421" critical="yes"></status>
</test>
<test id="s1-s3-t2" name="Measure TIMER_SLEEP Accuracy">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:03.429" endtime="20201030 11:52:03.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.428" endtime="20201030 11:52:03.449"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:03.462" endtime="20201030 11:52:06.490"></status>
</kw>
<msg timestamp="20201030 11:52:06.491" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:03.461" endtime="20201030 11:52:06.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.496" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.493" endtime="20201030 11:52:06.497"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.502" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:06.498" endtime="20201030 11:52:06.503"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:03.458" endtime="20201030 11:52:06.504"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:03.456" endtime="20201030 11:52:06.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.454" endtime="20201030 11:52:06.506"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:06.513" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:06.512" endtime="20201030 11:52:06.514"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.508" endtime="20201030 11:52:06.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.454" endtime="20201030 11:52:06.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.453" endtime="20201030 11:52:06.515"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.517" endtime="20201030 11:52:06.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.452" endtime="20201030 11:52:06.521"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.450" endtime="20201030 11:52:06.522"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:03.426" endtime="20201030 11:52:06.523"></status>
</kw>
<kw name="${duration} IN RANGE [ 1 | 101 ]" type="for">
<kw name="${duration} = 1" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.545" endtime="20201030 11:52:06.562"></status>
</kw>
<msg timestamp="20201030 11:52:06.563" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.542" endtime="20201030 11:52:06.564"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(1)', 'msg': ['sleep_accuracy_timer_sleep 1\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.565" endtime="20201030 11:52:06.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.572" endtime="20201030 11:52:06.575"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.534" endtime="20201030 11:52:06.576"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.530" endtime="20201030 11:52:06.577"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.590" endtime="20201030 11:52:06.896"></status>
</kw>
<msg timestamp="20201030 11:52:06.899" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107859583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.587" endtime="20201030 11:52:06.899"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.907" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.107853903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.107859583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.900" endtime="20201030 11:52:06.908"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.908" endtime="20201030 11:52:06.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.582" endtime="20201030 11:52:06.911"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.578" endtime="20201030 11:52:06.911"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:06.915" level="INFO">${RESULT} = [{'diff': 5.680000000118923e-06}, {'diff': 4.902999999778501e-06}, {'diff': 4.917000000048688e-06}, {'diff': 4.917000000048688e-06}, {'diff': 5.681000000201664e-06}, {'diff': 4.888999999952404e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:06.912" endtime="20201030 11:52:06.915"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:06.919" level="INFO">${ACCURACY} = {'diff': [5.680000000118923e-06, 4.902999999778501e-06, 4.917000000048688e-06, 4.917000000048688e-06, 5.681000000201664e-06, 4.888999999952404e-06, 4.944999999700883e-06, 5.320000000086367e-06, 5.3609...</msg>
<status status="PASS" starttime="20201030 11:52:06.916" endtime="20201030 11:52:06.919"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.924" level="INFO">NAME: accuracy-TIMER_SLEEP-1-philip</msg>
<status status="PASS" starttime="20201030 11:52:06.923" endtime="20201030 11:52:06.925"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.927" level="INFO">VALUE: [5.680000000118923e-06, 4.902999999778501e-06, 4.917000000048688e-06, 4.917000000048688e-06, 5.681000000201664e-06, 4.888999999952404e-06, 4.944999999700883e-06, 5.320000000086367e-06, 5.360999999926008e-06, 5.680000000118923e-06, 5.2500000000677005e-06, 5.2500000000677005e-06, 5.680000000118923e-06, 5.291999999990082e-06, 5.680999999757574e-06, 5.680999999757574e-06, 5.347000000099911e-06, 5.666999999931477e-06, 4.9579999998883295e-06, 5.6659999998487365e-06, 5.680000000118923e-06, 5.6389999998351925e-06, 5.666999999931477e-06, 5.347000000099911e-06, 5.319000000003626e-06, 5.291999999990082e-06, 4.917000000048688e-06, 4.915999999965948e-06, 4.916999999604599e-06, 5.680000000118923e-06, 5.291999999990082e-06, 4.833000000203924e-06, 5.291999999990082e-06, 5.291999999990082e-06, 5.30499999973344e-06, 4.915999999965948e-06, 5.30499999973344e-06, 5.290999999907342e-06, 5.291999999990082e-06, 5.278000000163985e-06, 4.915999999965948e-06, 4.930000000236134e-06, 4.90300000022259e-06, 5.319000000003626e-06, 5.680000000118923e-06, 5.305000000177529e-06, 5.291999999990082e-06, 5.666999999931477e-06, 4.915999999965948e-06, 5.680999999757574e-06]</msg>
<status status="PASS" starttime="20201030 11:52:06.925" endtime="20201030 11:52:06.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.920" endtime="20201030 11:52:06.928"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:06.931" endtime="20201030 11:52:06.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.930" endtime="20201030 11:52:06.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.929" endtime="20201030 11:52:06.951"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.526" endtime="20201030 11:52:06.952"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.525" endtime="20201030 11:52:06.952"></status>
</kw>
<kw name="${duration} = 2" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.961" endtime="20201030 11:52:06.975"></status>
</kw>
<msg timestamp="20201030 11:52:06.976" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.959" endtime="20201030 11:52:06.976"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:06.978" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(2)', 'msg': ['sleep_accuracy_timer_sleep 2\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:06.977" endtime="20201030 11:52:06.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.979" endtime="20201030 11:52:06.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.956" endtime="20201030 11:52:06.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.954" endtime="20201030 11:52:06.982"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:06.988" endtime="20201030 11:52:07.272"></status>
</kw>
<msg timestamp="20201030 11:52:07.275" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020881153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:06.987" endtime="20201030 11:52:07.275"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.283" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020874333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020881153, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.276" endtime="20201030 11:52:07.283"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.284" endtime="20201030 11:52:07.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.984" endtime="20201030 11:52:07.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.983" endtime="20201030 11:52:07.287"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.291" level="INFO">${RESULT} = [{'diff': 6.820000000001131e-06}, {'diff': 6.444000000001282e-06}, {'diff': 6.069000000000907e-06}, {'diff': 6.444000000001282e-06}, {'diff': 6.069999999996911e-06}, {'diff': 6.776999999999478e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:07.288" endtime="20201030 11:52:07.291"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.296" level="INFO">${ACCURACY} = {'diff': [6.820000000001131e-06, 6.444000000001282e-06, 6.069000000000907e-06, 6.444000000001282e-06, 6.069999999996911e-06, 6.776999999999478e-06, 6.000000000002531e-06, 6.805999999998091e-06, 6.8889...</msg>
<status status="PASS" starttime="20201030 11:52:07.292" endtime="20201030 11:52:07.296"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.300" level="INFO">NAME: accuracy-TIMER_SLEEP-2-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.299" endtime="20201030 11:52:07.301"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.303" level="INFO">VALUE: [6.820000000001131e-06, 6.444000000001282e-06, 6.069000000000907e-06, 6.444000000001282e-06, 6.069999999996911e-06, 6.776999999999478e-06, 6.000000000002531e-06, 6.805999999998091e-06, 6.888999999999507e-06, 6.415999999998673e-06, 6.847000000000797e-06, 6.445000000000756e-06, 6.083000000000477e-06, 6.055000000001337e-06, 6.374999999999437e-06, 6.070000000000381e-06, 6.431000000001186e-06, 6.069999999996911e-06, 6.485999999999992e-06, 6.055000000001337e-06, 6.5279999999987015e-06, 6.042000000001241e-06, 6.4029999999985765e-06, 6.055000000001337e-06, 6.041000000001767e-06, 6.874999999999937e-06, 6.056000000000811e-06, 6.445000000000756e-06, 6.819000000001657e-06, 6.042000000001241e-06, 6.791000000002517e-06, 6.444000000001282e-06, 6.430000000001712e-06, 6.874999999999937e-06, 6.8329999999977575e-06, 6.055999999997341e-06, 6.458999999996856e-06, 6.056000000000811e-06, 6.054999999997868e-06, 6.818999999998188e-06, 6.431000000001186e-06, 6.526999999999228e-06, 6.054999999997868e-06, 6.833000000001227e-06, 6.056000000000811e-06, 6.818999999998188e-06, 6.833000000001227e-06, 6.36199999999934e-06, 6.818999999998188e-06, 6.445000000000756e-06]</msg>
<status status="PASS" starttime="20201030 11:52:07.301" endtime="20201030 11:52:07.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.297" endtime="20201030 11:52:07.304"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.307" endtime="20201030 11:52:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.306" endtime="20201030 11:52:07.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.304" endtime="20201030 11:52:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.953" endtime="20201030 11:52:07.328"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.952" endtime="20201030 11:52:07.328"></status>
</kw>
<kw name="${duration} = 3" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.337" endtime="20201030 11:52:07.352"></status>
</kw>
<msg timestamp="20201030 11:52:07.352" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.335" endtime="20201030 11:52:07.352"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.354" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(3)', 'msg': ['sleep_accuracy_timer_sleep 3\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.353" endtime="20201030 11:52:07.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.356" endtime="20201030 11:52:07.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.333" endtime="20201030 11:52:07.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.331" endtime="20201030 11:52:07.358"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.364" endtime="20201030 11:52:07.650"></status>
</kw>
<msg timestamp="20201030 11:52:07.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.363" endtime="20201030 11:52:07.653"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.661" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019865861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019873819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.654" endtime="20201030 11:52:07.662"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.662" endtime="20201030 11:52:07.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.360" endtime="20201030 11:52:07.664"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.359" endtime="20201030 11:52:07.665"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:07.669" level="INFO">${RESULT} = [{'diff': 7.958000000002352e-06}, {'diff': 7.193999999998563e-06}, {'diff': 6.8469999999973274e-06}, {'diff': 7.611000000001117e-06}, {'diff': 7.582999999998508e-06}, {'diff': 7.584000000001451e-06}, ...</msg>
<status status="PASS" starttime="20201030 11:52:07.666" endtime="20201030 11:52:07.669"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:07.673" level="INFO">${ACCURACY} = {'diff': [7.958000000002352e-06, 7.193999999998563e-06, 6.8469999999973274e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.582999999998508e-06, 7.209000000001076e-06, 7.596...</msg>
<status status="PASS" starttime="20201030 11:52:07.670" endtime="20201030 11:52:07.673"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.677" level="INFO">NAME: accuracy-TIMER_SLEEP-3-philip</msg>
<status status="PASS" starttime="20201030 11:52:07.676" endtime="20201030 11:52:07.678"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.680" level="INFO">VALUE: [7.958000000002352e-06, 7.193999999998563e-06, 6.8469999999973274e-06, 7.611000000001117e-06, 7.582999999998508e-06, 7.584000000001451e-06, 7.582999999998508e-06, 7.209000000001076e-06, 7.5969999999980775e-06, 7.208000000001602e-06, 7.193999999998563e-06, 6.805999999998091e-06, 7.5419999999992715e-06, 7.583000000001977e-06, 7.598000000001021e-06, 6.819000000001657e-06, 7.597000000001547e-06, 7.971999999998453e-06, 7.2079999999981326e-06, 7.583999999997981e-06, 7.569999999998411e-06, 7.193999999998563e-06, 7.584000000001451e-06, 7.568999999998938e-06, 7.5969999999980775e-06, 7.582999999998508e-06, 7.582999999998508e-06, 7.568999999998938e-06, 7.597000000001547e-06, 6.820000000001131e-06, 7.195000000001506e-06, 7.959000000001826e-06, 7.2219999999977025e-06, 7.583000000001977e-06, 7.903000000000077e-06, 7.556000000002311e-06, 7.568999999998938e-06, 6.860999999996897e-06, 7.625000000000687e-06, 7.208000000001602e-06, 7.582999999998508e-06, 7.582999999998508e-06, 6.834000000000701e-06, 7.945000000002256e-06, 7.582999999998508e-06, 7.569999999998411e-06, 7.569999999998411e-06, 6.818999999998188e-06, 7.208999999997606e-06, 7.569999999998411e-06]</msg>
<status status="PASS" starttime="20201030 11:52:07.678" endtime="20201030 11:52:07.680"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.674" endtime="20201030 11:52:07.681"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:07.684" endtime="20201030 11:52:07.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.683" endtime="20201030 11:52:07.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.681" endtime="20201030 11:52:07.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.329" endtime="20201030 11:52:07.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.328" endtime="20201030 11:52:07.705"></status>
</kw>
<kw name="${duration} = 4" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.715" endtime="20201030 11:52:07.729"></status>
</kw>
<msg timestamp="20201030 11:52:07.730" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.712" endtime="20201030 11:52:07.730"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:07.732" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(4)', 'msg': ['sleep_accuracy_timer_sleep 4\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:07.731" endtime="20201030 11:52:07.732"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.733" endtime="20201030 11:52:07.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.710" endtime="20201030 11:52:07.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.708" endtime="20201030 11:52:07.736"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:07.742" endtime="20201030 11:52:08.029"></status>
</kw>
<msg timestamp="20201030 11:52:08.032" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:07.740" endtime="20201030 11:52:08.032"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.040" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020456347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020464319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.033" endtime="20201030 11:52:08.041"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.042" endtime="20201030 11:52:08.043"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.738" endtime="20201030 11:52:08.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.736" endtime="20201030 11:52:08.044"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.048" level="INFO">${RESULT} = [{'diff': 7.972000000001922e-06}, {'diff': 7.958999999998356e-06}, {'diff': 8.318999999999688e-06}, {'diff': 7.957999999998883e-06}, {'diff': 8.722999999998676e-06}, {'diff': 7.973000000001396e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:08.045" endtime="20201030 11:52:08.048"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.052" level="INFO">${ACCURACY} = {'diff': [7.972000000001922e-06, 7.958999999998356e-06, 8.318999999999688e-06, 7.957999999998883e-06, 8.722999999998676e-06, 7.973000000001396e-06, 8.707999999999633e-06, 7.957999999998883e-06, 8.7230...</msg>
<status status="PASS" starttime="20201030 11:52:08.049" endtime="20201030 11:52:08.052"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.056" level="INFO">NAME: accuracy-TIMER_SLEEP-4-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.055" endtime="20201030 11:52:08.057"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.059" level="INFO">VALUE: [7.972000000001922e-06, 7.958999999998356e-06, 8.318999999999688e-06, 7.957999999998883e-06, 8.722999999998676e-06, 7.973000000001396e-06, 8.707999999999633e-06, 7.957999999998883e-06, 8.723000000002146e-06, 8.346999999998828e-06, 7.971999999998453e-06, 8.333000000002727e-06, 8.735999999998773e-06, 8.332999999999258e-06, 7.958000000002352e-06, 8.346999999998828e-06, 7.959000000001826e-06, 7.972000000001922e-06, 8.721999999999203e-06, 8.333000000002727e-06, 8.708999999999106e-06, 8.667000000000397e-06, 8.346999999998828e-06, 8.721999999999203e-06, 8.375000000001437e-06, 8.347000000002297e-06, 8.360999999998397e-06, 8.680999999999967e-06, 8.749999999998342e-06, 8.722000000002672e-06, 8.346999999998828e-06, 8.721999999999203e-06, 8.735999999998773e-06, 8.34800000000177e-06, 8.721999999999203e-06, 8.403000000000577e-06, 7.972999999997926e-06, 8.332999999999258e-06, 8.429999999996773e-06, 8.3340000000022e-06, 8.318999999999688e-06, 7.958000000002352e-06, 8.346999999998828e-06, 8.346999999998828e-06, 8.736999999998246e-06, 8.346999999998828e-06, 8.694000000000063e-06, 8.694000000000063e-06, 7.957999999998883e-06, 8.346999999998828e-06]</msg>
<status status="PASS" starttime="20201030 11:52:08.057" endtime="20201030 11:52:08.060"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.053" endtime="20201030 11:52:08.061"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.065" endtime="20201030 11:52:08.084"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.063" endtime="20201030 11:52:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.062" endtime="20201030 11:52:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.706" endtime="20201030 11:52:08.085"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:07.705" endtime="20201030 11:52:08.085"></status>
</kw>
<kw name="${duration} = 5" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.094" endtime="20201030 11:52:08.109"></status>
</kw>
<msg timestamp="20201030 11:52:08.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.092" endtime="20201030 11:52:08.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(5)', 'msg': ['sleep_accuracy_timer_sleep 5\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.110" endtime="20201030 11:52:08.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.113" endtime="20201030 11:52:08.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.090" endtime="20201030 11:52:08.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.088" endtime="20201030 11:52:08.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.122" endtime="20201030 11:52:08.408"></status>
</kw>
<msg timestamp="20201030 11:52:08.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.120" endtime="20201030 11:52:08.412"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.420" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019410792, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019420278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.413" endtime="20201030 11:52:08.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.421" endtime="20201030 11:52:08.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.118" endtime="20201030 11:52:08.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.116" endtime="20201030 11:52:08.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.427" level="INFO">${RESULT} = [{'diff': 9.485999999999523e-06}, {'diff': 9.096999999999578e-06}, {'diff': 9.042000000000772e-06}, {'diff': 9.486999999998996e-06}, {'diff': 9.874999999999468e-06}, {'diff': 9.860999999999898e-06}, {...</msg>
<status status="PASS" starttime="20201030 11:52:08.424" endtime="20201030 11:52:08.428"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.432" level="INFO">${ACCURACY} = {'diff': [9.485999999999523e-06, 9.096999999999578e-06, 9.042000000000772e-06, 9.486999999998996e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.124999999998717e-06, 8.721999999999203e-06, 9.0969...</msg>
<status status="PASS" starttime="20201030 11:52:08.428" endtime="20201030 11:52:08.433"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.437" level="INFO">NAME: accuracy-TIMER_SLEEP-5-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.436" endtime="20201030 11:52:08.437"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.439" level="INFO">VALUE: [9.485999999999523e-06, 9.096999999999578e-06, 9.042000000000772e-06, 9.486999999998996e-06, 9.874999999999468e-06, 9.860999999999898e-06, 9.124999999998717e-06, 8.721999999999203e-06, 9.096999999999578e-06, 9.153000000001327e-06, 9.069000000000438e-06, 9.110999999999148e-06, 9.471999999999953e-06, 8.736000000002242e-06, 9.847000000000328e-06, 9.486000000002992e-06, 9.486000000002992e-06, 9.847000000000328e-06, 9.096999999999578e-06, 9.500000000002562e-06, 9.110999999999148e-06, 9.500000000002562e-06, 9.860999999999898e-06, 9.499999999999093e-06, 9.860999999999898e-06, 9.860999999999898e-06, 9.486000000002992e-06, 9.055000000000868e-06, 9.485999999999523e-06, 9.486999999998996e-06, 8.721999999999203e-06, 9.110999999999148e-06, 9.499999999999093e-06, 8.722999999998676e-06, 9.486000000002992e-06, 9.485999999999523e-06, 9.429999999997773e-06, 9.097000000003047e-06, 8.721999999999203e-06, 9.471999999999953e-06, 9.458999999999856e-06, 9.124999999998717e-06, 9.096999999999578e-06, 9.888999999999037e-06, 9.110999999999148e-06, 8.722000000002672e-06, 9.472999999999426e-06, 9.874999999999468e-06, 9.776999999999009e-06, 9.110999999999148e-06]</msg>
<status status="PASS" starttime="20201030 11:52:08.438" endtime="20201030 11:52:08.440"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.433" endtime="20201030 11:52:08.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.444" endtime="20201030 11:52:08.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.443" endtime="20201030 11:52:08.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.441" endtime="20201030 11:52:08.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.086" endtime="20201030 11:52:08.465"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.086" endtime="20201030 11:52:08.465"></status>
</kw>
<kw name="${duration} = 6" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.473" endtime="20201030 11:52:08.487"></status>
</kw>
<msg timestamp="20201030 11:52:08.488" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.472" endtime="20201030 11:52:08.488"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.490" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(6)', 'msg': ['sleep_accuracy_timer_sleep 6\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.489" endtime="20201030 11:52:08.491"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.491" endtime="20201030 11:52:08.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.469" endtime="20201030 11:52:08.493"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.467" endtime="20201030 11:52:08.494"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.500" endtime="20201030 11:52:08.787"></status>
</kw>
<msg timestamp="20201030 11:52:08.790" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.499" endtime="20201030 11:52:08.791"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.799" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019541125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.791" endtime="20201030 11:52:08.799"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.800" endtime="20201030 11:52:08.801"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.496" endtime="20201030 11:52:08.802"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.494" endtime="20201030 11:52:08.802"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:08.806" level="INFO">${RESULT} = [{'diff': 1.0236000000000273e-05}, {'diff': 1.0652999999999357e-05}, {'diff': 1.0638000000000314e-05}, {'diff': 1.0624999999996748e-05}, {'diff': 1.0625000000000218e-05}, {'diff': 1.0625000000000218e-...</msg>
<status status="PASS" starttime="20201030 11:52:08.803" endtime="20201030 11:52:08.806"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:08.810" level="INFO">${ACCURACY} = {'diff': [1.0236000000000273e-05, 1.0652999999999357e-05, 1.0638000000000314e-05, 1.0624999999996748e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0249999999999843e-05...</msg>
<status status="PASS" starttime="20201030 11:52:08.807" endtime="20201030 11:52:08.811"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.815" level="INFO">NAME: accuracy-TIMER_SLEEP-6-philip</msg>
<status status="PASS" starttime="20201030 11:52:08.814" endtime="20201030 11:52:08.815"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.817" level="INFO">VALUE: [1.0236000000000273e-05, 1.0652999999999357e-05, 1.0638000000000314e-05, 1.0624999999996748e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0249999999999843e-05, 9.874999999999468e-06, 1.0639000000003257e-05, 1.1000000000000593e-05, 1.0638999999999788e-05, 1.0638999999999788e-05, 1.0665999999999454e-05, 1.0166000000002423e-05, 1.0555999999998372e-05, 1.102699999999679e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0625000000000218e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0263999999999412e-05, 1.0625000000000218e-05, 1.0651999999999884e-05, 1.0638999999999788e-05, 1.1013000000000689e-05, 1.0638999999999788e-05, 9.874999999999468e-06, 1.0249999999999843e-05, 9.874999999999468e-06, 1.0249999999999843e-05, 1.0638999999999788e-05, 1.0556000000001842e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0638999999999788e-05, 1.0625000000000218e-05, 1.0638999999999788e-05, 1.0209000000000606e-05, 1.0263999999999412e-05, 1.0249999999999843e-05, 1.1014000000000163e-05, 9.888999999999037e-06, 9.875000000002937e-06, 1.0249999999999843e-05, 1.0625000000000218e-05, 1.0249999999999843e-05, 1.0679999999999024e-05, 9.874999999999468e-06]</msg>
<status status="PASS" starttime="20201030 11:52:08.816" endtime="20201030 11:52:08.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.811" endtime="20201030 11:52:08.819"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:08.822" endtime="20201030 11:52:08.841"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.821" endtime="20201030 11:52:08.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.820" endtime="20201030 11:52:08.842"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.466" endtime="20201030 11:52:08.843"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.465" endtime="20201030 11:52:08.843"></status>
</kw>
<kw name="${duration} = 7" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.851" endtime="20201030 11:52:08.867"></status>
</kw>
<msg timestamp="20201030 11:52:08.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.850" endtime="20201030 11:52:08.868"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:08.870" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(7)', 'msg': ['sleep_accuracy_timer_sleep 7\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:08.869" endtime="20201030 11:52:08.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.871" endtime="20201030 11:52:08.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.847" endtime="20201030 11:52:08.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.845" endtime="20201030 11:52:08.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:08.880" endtime="20201030 11:52:09.167"></status>
</kw>
<msg timestamp="20201030 11:52:09.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:08.879" endtime="20201030 11:52:09.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020342347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020353361, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.171" endtime="20201030 11:52:09.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.179" endtime="20201030 11:52:09.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.876" endtime="20201030 11:52:09.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.874" endtime="20201030 11:52:09.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.186" level="INFO">${RESULT} = [{'diff': 1.1014000000000163e-05}, {'diff': 1.0985999999997553e-05}, {'diff': 1.1457999999998913e-05}, {'diff': 1.1389000000000538e-05}, {'diff': 1.1778000000000483e-05}, {'diff': 1.1375000000000968e-...</msg>
<status status="PASS" starttime="20201030 11:52:09.183" endtime="20201030 11:52:09.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.190" level="INFO">${ACCURACY} = {'diff': [1.1014000000000163e-05, 1.0985999999997553e-05, 1.1457999999998913e-05, 1.1389000000000538e-05, 1.1778000000000483e-05, 1.1375000000000968e-05, 1.1388999999997068e-05, 1.1360999999997928e-05...</msg>
<status status="PASS" starttime="20201030 11:52:09.187" endtime="20201030 11:52:09.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.194" level="INFO">NAME: accuracy-TIMER_SLEEP-7-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.193" endtime="20201030 11:52:09.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.197" level="INFO">VALUE: [1.1014000000000163e-05, 1.0985999999997553e-05, 1.1457999999998913e-05, 1.1389000000000538e-05, 1.1778000000000483e-05, 1.1375000000000968e-05, 1.1388999999997068e-05, 1.1360999999997928e-05, 1.1027999999999732e-05, 1.1014000000000163e-05, 1.1458000000002383e-05, 1.1387999999997594e-05, 1.1028000000003202e-05, 1.1792000000000052e-05, 1.1778000000000483e-05, 1.177699999999754e-05, 1.1388999999997068e-05, 1.1360999999997928e-05, 1.1027999999999732e-05, 1.0986000000001023e-05, 1.1818999999999719e-05, 1.1777999999997013e-05, 1.1778000000000483e-05, 1.1083999999998012e-05, 1.1457999999998913e-05, 1.1764000000000913e-05, 1.1792000000000052e-05, 1.1027000000000259e-05, 1.1416999999999677e-05, 1.1388999999997068e-05, 1.1778000000000483e-05, 1.1014000000000163e-05, 1.1819999999999192e-05, 1.1375000000000968e-05, 1.1777999999997013e-05, 1.1375000000000968e-05, 1.1777000000001009e-05, 1.177699999999754e-05, 1.1403000000000107e-05, 1.1749999999997873e-05, 1.1429999999999774e-05, 1.1416000000000204e-05, 1.1334000000001732e-05, 1.1374999999997498e-05, 1.1389000000000538e-05, 1.1764000000000913e-05, 1.1778000000000483e-05, 1.1014000000000163e-05, 1.1764000000000913e-05, 1.1792000000000052e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.195" endtime="20201030 11:52:09.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.191" endtime="20201030 11:52:09.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.203" endtime="20201030 11:52:09.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.201" endtime="20201030 11:52:09.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.200" endtime="20201030 11:52:09.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.844" endtime="20201030 11:52:09.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:08.843" endtime="20201030 11:52:09.223"></status>
</kw>
<kw name="${duration} = 8" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.232" endtime="20201030 11:52:09.247"></status>
</kw>
<msg timestamp="20201030 11:52:09.248" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.230" endtime="20201030 11:52:09.248"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(8)', 'msg': ['sleep_accuracy_timer_sleep 8\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.249" endtime="20201030 11:52:09.250"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.251" endtime="20201030 11:52:09.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.228" endtime="20201030 11:52:09.253"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.226" endtime="20201030 11:52:09.254"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.260" endtime="20201030 11:52:09.546"></status>
</kw>
<msg timestamp="20201030 11:52:09.549" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.259" endtime="20201030 11:52:09.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.557" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019442958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019455458, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.550" endtime="20201030 11:52:09.558"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.559" endtime="20201030 11:52:09.560"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.256" endtime="20201030 11:52:09.561"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.254" endtime="20201030 11:52:09.561"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.565" level="INFO">${RESULT} = [{'diff': 1.2499999999998623e-05}, {'diff': 1.2528000000001233e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.2541000000001329e-05}, {'diff': 1.2138999999997818e-05}, {'diff': 1.1707999999999164e-...</msg>
<status status="PASS" starttime="20201030 11:52:09.562" endtime="20201030 11:52:09.565"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.572" level="INFO">${ACCURACY} = {'diff': [1.2499999999998623e-05, 1.2528000000001233e-05, 1.2917000000001178e-05, 1.2541000000001329e-05, 1.2138999999997818e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.2931000000000747e-05...</msg>
<status status="PASS" starttime="20201030 11:52:09.566" endtime="20201030 11:52:09.572"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.577" level="INFO">NAME: accuracy-TIMER_SLEEP-8-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.576" endtime="20201030 11:52:09.577"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.579" level="INFO">VALUE: [1.2499999999998623e-05, 1.2528000000001233e-05, 1.2917000000001178e-05, 1.2541000000001329e-05, 1.2138999999997818e-05, 1.1707999999999164e-05, 1.1778000000000483e-05, 1.2931000000000747e-05, 1.2542000000000803e-05, 1.1791000000000579e-05, 1.2153000000000858e-05, 1.2583000000000039e-05, 1.2179999999997054e-05, 1.2514000000001663e-05, 1.2527999999997763e-05, 1.2527000000001759e-05, 1.2125000000001718e-05, 1.2514000000001663e-05, 1.1722000000002203e-05, 1.2528000000001233e-05, 1.255499999999743e-05, 1.2916000000001704e-05, 1.2166000000000954e-05, 1.2888999999998568e-05, 1.2153000000000858e-05, 1.2541000000001329e-05, 1.1833999999998762e-05, 1.2527000000001759e-05, 1.2931000000000747e-05, 1.2139000000001288e-05, 1.2583000000000039e-05, 1.2528000000001233e-05, 1.2138000000001814e-05, 1.2167000000000427e-05, 1.2137999999998345e-05, 1.2556000000000372e-05, 1.1750000000001343e-05, 1.2583000000000039e-05, 1.1778000000000483e-05, 1.2611000000002648e-05, 1.2986999999999027e-05, 1.2180000000000524e-05, 1.2542000000000803e-05, 1.1791000000000579e-05, 1.2153000000000858e-05, 1.2153000000000858e-05, 1.2527999999997763e-05, 1.2556000000000372e-05, 1.2542000000000803e-05, 1.2096999999999108e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.578" endtime="20201030 11:52:09.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.573" endtime="20201030 11:52:09.580"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.584" endtime="20201030 11:52:09.603"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.582" endtime="20201030 11:52:09.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.581" endtime="20201030 11:52:09.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.224" endtime="20201030 11:52:09.604"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.224" endtime="20201030 11:52:09.605"></status>
</kw>
<kw name="${duration} = 9" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.613" endtime="20201030 11:52:09.628"></status>
</kw>
<msg timestamp="20201030 11:52:09.629" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.612" endtime="20201030 11:52:09.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.631" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(9)', 'msg': ['sleep_accuracy_timer_sleep 9\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.630" endtime="20201030 11:52:09.631"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.632" endtime="20201030 11:52:09.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.609" endtime="20201030 11:52:09.634"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.607" endtime="20201030 11:52:09.635"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.641" endtime="20201030 11:52:09.927"></status>
</kw>
<msg timestamp="20201030 11:52:09.930" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.640" endtime="20201030 11:52:09.930"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.938" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019534958, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019547861, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:09.931" endtime="20201030 11:52:09.939"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.940" endtime="20201030 11:52:09.941"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.637" endtime="20201030 11:52:09.942"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.635" endtime="20201030 11:52:09.942"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:09.946" level="INFO">${RESULT} = [{'diff': 1.2902999999998138e-05}, {'diff': 1.3333000000000789e-05}, {'diff': 1.3278000000001983e-05}, {'diff': 1.2917000000001178e-05}, {'diff': 1.3708000000001164e-05}, {'diff': 1.3292000000001553e-...</msg>
<status status="PASS" starttime="20201030 11:52:09.943" endtime="20201030 11:52:09.946"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:09.950" level="INFO">${ACCURACY} = {'diff': [1.2902999999998138e-05, 1.3333000000000789e-05, 1.3278000000001983e-05, 1.2917000000001178e-05, 1.3708000000001164e-05, 1.3292000000001553e-05, 1.3638999999999318e-05, 1.2931000000000747e-05...</msg>
<status status="PASS" starttime="20201030 11:52:09.947" endtime="20201030 11:52:09.950"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.954" level="INFO">NAME: accuracy-TIMER_SLEEP-9-philip</msg>
<status status="PASS" starttime="20201030 11:52:09.953" endtime="20201030 11:52:09.955"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:09.957" level="INFO">VALUE: [1.2902999999998138e-05, 1.3333000000000789e-05, 1.3278000000001983e-05, 1.2917000000001178e-05, 1.3708000000001164e-05, 1.3292000000001553e-05, 1.3638999999999318e-05, 1.2931000000000747e-05, 1.2931000000000747e-05, 1.3695000000001067e-05, 1.3680000000002024e-05, 1.2929999999997804e-05, 1.2875000000002468e-05, 1.3320000000000692e-05, 1.3694000000001594e-05, 1.3680000000002024e-05, 1.3277999999998513e-05, 1.329099999999861e-05, 1.3680000000002024e-05, 1.3681000000001498e-05, 1.2916000000001704e-05, 1.3278000000001983e-05, 1.3305999999997653e-05, 1.3665999999998985e-05, 1.3638999999999318e-05, 1.3305000000001649e-05, 1.3679999999998554e-05, 1.3679999999998554e-05, 1.3652999999998888e-05, 1.2915999999998234e-05, 1.3291999999998083e-05, 1.2930999999997278e-05, 1.2874999999998998e-05, 1.3320000000000692e-05, 1.3305000000001649e-05, 1.3292000000001553e-05, 1.3291000000002079e-05, 1.3624999999999748e-05, 1.3681000000001498e-05, 1.3320000000000692e-05, 1.3264000000002413e-05, 1.2929999999997804e-05, 1.3624999999999748e-05, 1.3749999999999873e-05, 1.3320000000000692e-05, 1.3680999999998028e-05, 1.329099999999861e-05, 1.3681000000001498e-05, 1.3680999999998028e-05, 1.3306000000001122e-05]</msg>
<status status="PASS" starttime="20201030 11:52:09.956" endtime="20201030 11:52:09.958"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.951" endtime="20201030 11:52:09.958"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:09.962" endtime="20201030 11:52:09.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.960" endtime="20201030 11:52:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.959" endtime="20201030 11:52:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.605" endtime="20201030 11:52:09.982"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.605" endtime="20201030 11:52:09.983"></status>
</kw>
<kw name="${duration} = 10" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:09.991" endtime="20201030 11:52:10.007"></status>
</kw>
<msg timestamp="20201030 11:52:10.007" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:09.990" endtime="20201030 11:52:10.007"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.010" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(10)', 'msg': ['sleep_accuracy_timer_sleep 10\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.008" endtime="20201030 11:52:10.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.011" endtime="20201030 11:52:10.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.987" endtime="20201030 11:52:10.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.985" endtime="20201030 11:52:10.013"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.020" endtime="20201030 11:52:10.305"></status>
</kw>
<msg timestamp="20201030 11:52:10.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.018" endtime="20201030 11:52:10.308"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.316" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021237986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021252431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.309" endtime="20201030 11:52:10.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.317" endtime="20201030 11:52:10.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.016" endtime="20201030 11:52:10.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.014" endtime="20201030 11:52:10.320"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.323" level="INFO">${RESULT} = [{'diff': 1.4444999999998348e-05}, {'diff': 1.4430999999998778e-05}, {'diff': 1.4070000000001442e-05}, {'diff': 1.4778000000000013e-05}, {'diff': 1.4083999999997543e-05}, {'diff': 1.405499999999893e-0...</msg>
<status status="PASS" starttime="20201030 11:52:10.320" endtime="20201030 11:52:10.324"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.328" level="INFO">${ACCURACY} = {'diff': [1.4444999999998348e-05, 1.4430999999998778e-05, 1.4070000000001442e-05, 1.4778000000000013e-05, 1.4083999999997543e-05, 1.405499999999893e-05, 1.40689999999985e-05, 1.4431000000002248e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:10.324" endtime="20201030 11:52:10.328"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.332" level="INFO">NAME: accuracy-TIMER_SLEEP-10-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.331" endtime="20201030 11:52:10.332"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.334" level="INFO">VALUE: [1.4444999999998348e-05, 1.4430999999998778e-05, 1.4070000000001442e-05, 1.4778000000000013e-05, 1.4083999999997543e-05, 1.405499999999893e-05, 1.40689999999985e-05, 1.4431000000002248e-05, 1.4430999999998778e-05, 1.4056000000001873e-05, 1.4819999999998723e-05, 1.4069999999997973e-05, 1.4459000000001387e-05, 1.4459000000001387e-05, 1.3667000000001928e-05, 1.408299999999807e-05, 1.4819000000002719e-05, 1.4444999999998348e-05, 1.4083000000001539e-05, 1.408299999999807e-05, 1.4445000000001817e-05, 1.4458000000001914e-05, 1.405499999999893e-05, 1.4069000000001969e-05, 1.4084000000001012e-05, 1.4430999999998778e-05, 1.4848000000001332e-05, 1.4862000000000902e-05, 1.4429999999999304e-05, 1.4806000000002623e-05, 1.480499999999968e-05, 1.4431000000002248e-05, 1.4443999999998874e-05, 1.4834000000001762e-05, 1.3693999999998124e-05, 1.4083000000001539e-05, 1.4430999999998778e-05, 1.4013999999999693e-05, 1.40689999999985e-05, 1.4833000000002289e-05, 1.4056000000001873e-05, 1.483299999999882e-05, 1.4458000000001914e-05, 1.4431000000002248e-05, 1.4055000000002399e-05, 1.4457999999998444e-05, 1.4084000000001012e-05, 1.4041999999998833e-05, 1.4861000000001429e-05, 1.480499999999968e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.333" endtime="20201030 11:52:10.336"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.328" endtime="20201030 11:52:10.337"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.340" endtime="20201030 11:52:10.359"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.339" endtime="20201030 11:52:10.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.338" endtime="20201030 11:52:10.360"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.984" endtime="20201030 11:52:10.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:09.983" endtime="20201030 11:52:10.361"></status>
</kw>
<kw name="${duration} = 11" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.369" endtime="20201030 11:52:10.384"></status>
</kw>
<msg timestamp="20201030 11:52:10.384" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.368" endtime="20201030 11:52:10.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(11)', 'msg': ['sleep_accuracy_timer_sleep 11\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.385" endtime="20201030 11:52:10.387"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.388" endtime="20201030 11:52:10.389"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.365" endtime="20201030 11:52:10.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.363" endtime="20201030 11:52:10.390"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.397" endtime="20201030 11:52:10.683"></status>
</kw>
<msg timestamp="20201030 11:52:10.687" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.395" endtime="20201030 11:52:10.687"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.695" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019628764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019643972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.688" endtime="20201030 11:52:10.695"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.696" endtime="20201030 11:52:10.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.393" endtime="20201030 11:52:10.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.391" endtime="20201030 11:52:10.699"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:10.702" level="INFO">${RESULT} = [{'diff': 1.5207999999999194e-05}, {'diff': 1.5180999999999528e-05}, {'diff': 1.558300000000304e-05}, {'diff': 1.5235999999998334e-05}, {'diff': 1.5194999999999098e-05}, {'diff': 1.5193999999999624e-0...</msg>
<status status="PASS" starttime="20201030 11:52:10.699" endtime="20201030 11:52:10.703"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:10.707" level="INFO">${ACCURACY} = {'diff': [1.5207999999999194e-05, 1.5180999999999528e-05, 1.558300000000304e-05, 1.5235999999998334e-05, 1.5194999999999098e-05, 1.5193999999999624e-05, 1.4820000000002193e-05, 1.4819999999998723e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:10.703" endtime="20201030 11:52:10.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.712" level="INFO">NAME: accuracy-TIMER_SLEEP-11-philip</msg>
<status status="PASS" starttime="20201030 11:52:10.711" endtime="20201030 11:52:10.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.714" level="INFO">VALUE: [1.5207999999999194e-05, 1.5180999999999528e-05, 1.558300000000304e-05, 1.5235999999998334e-05, 1.5194999999999098e-05, 1.5193999999999624e-05, 1.4820000000002193e-05, 1.4819999999998723e-05, 1.5194999999999098e-05, 1.558299999999957e-05, 1.566700000000046e-05, 1.5207999999999194e-05, 1.5583999999999043e-05, 1.565299999999742e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5597999999998613e-05, 1.5583999999999043e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.558299999999957e-05, 1.5207999999999194e-05, 1.5972999999998988e-05, 1.5611999999998183e-05, 1.5193999999999624e-05, 1.5207999999999194e-05, 1.5542000000000333e-05, 1.5194999999999098e-05, 1.5584000000002513e-05, 1.5193999999999624e-05, 1.562500000000175e-05, 1.4833000000002289e-05, 1.5193999999999624e-05, 1.5153000000000388e-05, 1.5208999999998668e-05, 1.4819000000002719e-05, 1.566700000000046e-05, 1.559699999999914e-05, 1.5195000000002568e-05, 1.5193999999999624e-05, 1.561099999999871e-05, 1.5986000000002554e-05, 1.558299999999957e-05, 1.5569e-05, 1.5222000000002234e-05, 1.5973000000002457e-05, 1.559699999999914e-05, 1.5555999999999903e-05, 1.561100000000218e-05, 1.5597999999998613e-05]</msg>
<status status="PASS" starttime="20201030 11:52:10.713" endtime="20201030 11:52:10.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.708" endtime="20201030 11:52:10.716"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:10.719" endtime="20201030 11:52:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.718" endtime="20201030 11:52:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.717" endtime="20201030 11:52:10.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.362" endtime="20201030 11:52:10.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.361" endtime="20201030 11:52:10.740"></status>
</kw>
<kw name="${duration} = 12" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.748" endtime="20201030 11:52:10.764"></status>
</kw>
<msg timestamp="20201030 11:52:10.764" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.747" endtime="20201030 11:52:10.764"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:10.767" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(12)', 'msg': ['sleep_accuracy_timer_sleep 12\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:10.765" endtime="20201030 11:52:10.767"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.768" endtime="20201030 11:52:10.769"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.744" endtime="20201030 11:52:10.770"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.742" endtime="20201030 11:52:10.770"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:10.777" endtime="20201030 11:52:11.063"></status>
</kw>
<msg timestamp="20201030 11:52:11.067" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:10.775" endtime="20201030 11:52:11.067"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.075" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019440653, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019457375, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.068" endtime="20201030 11:52:11.075"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.076" endtime="20201030 11:52:11.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.772" endtime="20201030 11:52:11.078"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.771" endtime="20201030 11:52:11.079"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.083" level="INFO">${RESULT} = [{'diff': 1.6722000000000264e-05}, {'diff': 1.631900000000075e-05}, {'diff': 1.5986000000002554e-05}, {'diff': 1.6401999999998695e-05}, {'diff': 1.6722000000000264e-05}, {'diff': 1.6362000000002402e-0...</msg>
<status status="PASS" starttime="20201030 11:52:11.079" endtime="20201030 11:52:11.083"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.087" level="INFO">${ACCURACY} = {'diff': [1.6722000000000264e-05, 1.631900000000075e-05, 1.5986000000002554e-05, 1.6401999999998695e-05, 1.6722000000000264e-05, 1.6362000000002402e-05, 1.5972000000002984e-05, 1.636099999999946e-05, ...</msg>
<status status="PASS" starttime="20201030 11:52:11.083" endtime="20201030 11:52:11.087"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.091" level="INFO">NAME: accuracy-TIMER_SLEEP-12-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.090" endtime="20201030 11:52:11.091"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.093" level="INFO">VALUE: [1.6722000000000264e-05, 1.631900000000075e-05, 1.5986000000002554e-05, 1.6401999999998695e-05, 1.6722000000000264e-05, 1.6362000000002402e-05, 1.5972000000002984e-05, 1.636099999999946e-05, 1.6722999999999738e-05, 1.6722000000000264e-05, 1.6028000000001263e-05, 1.6707999999997225e-05, 1.5944000000000375e-05, 1.6722000000000264e-05, 1.6735999999999834e-05, 1.5957999999999944e-05, 1.634699999999989e-05, 1.6737000000002777e-05, 1.5999999999998654e-05, 1.634699999999989e-05, 1.5958999999999418e-05, 1.636099999999946e-05, 1.634699999999989e-05, 1.5957999999999944e-05, 1.634699999999989e-05, 1.6735999999999834e-05, 1.634699999999989e-05, 1.5986000000002554e-05, 1.6013999999998224e-05, 1.6736999999999308e-05, 1.633300000000032e-05, 1.6722000000000264e-05, 1.5985999999999084e-05, 1.5985999999999084e-05, 1.5971999999999514e-05, 1.6708000000000695e-05, 1.6347999999999363e-05, 1.6749999999999404e-05, 1.5957999999999944e-05, 1.5944999999999848e-05, 1.636099999999946e-05, 1.633300000000032e-05, 1.6763999999998974e-05, 1.6348000000002832e-05, 1.6694000000001125e-05, 1.5986999999998558e-05, 1.634699999999989e-05, 1.636100000000293e-05, 1.5986999999998558e-05, 1.5958999999999418e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.092" endtime="20201030 11:52:11.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.088" endtime="20201030 11:52:11.095"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.098" endtime="20201030 11:52:11.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.097" endtime="20201030 11:52:11.118"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.096" endtime="20201030 11:52:11.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.741" endtime="20201030 11:52:11.119"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:10.740" endtime="20201030 11:52:11.119"></status>
</kw>
<kw name="${duration} = 13" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.128" endtime="20201030 11:52:11.144"></status>
</kw>
<msg timestamp="20201030 11:52:11.145" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.126" endtime="20201030 11:52:11.145"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.147" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(13)', 'msg': ['sleep_accuracy_timer_sleep 13\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.146" endtime="20201030 11:52:11.147"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.148" endtime="20201030 11:52:11.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.124" endtime="20201030 11:52:11.150"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.122" endtime="20201030 11:52:11.151"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.157" endtime="20201030 11:52:11.443"></status>
</kw>
<msg timestamp="20201030 11:52:11.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.155" endtime="20201030 11:52:11.447"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.455" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020478347, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020496236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.448" endtime="20201030 11:52:11.455"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.456" endtime="20201030 11:52:11.457"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.153" endtime="20201030 11:52:11.458"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.151" endtime="20201030 11:52:11.458"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.462" level="INFO">${RESULT} = [{'diff': 1.78890000000001e-05}, {'diff': 1.716699999999849e-05}, {'diff': 1.7472000000001014e-05}, {'diff': 1.7485999999997115e-05}, {'diff': 1.711100000000021e-05}, {'diff': 1.7500000000000154e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:11.459" endtime="20201030 11:52:11.463"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.466" level="INFO">${ACCURACY} = {'diff': [1.78890000000001e-05, 1.716699999999849e-05, 1.7472000000001014e-05, 1.7485999999997115e-05, 1.711100000000021e-05, 1.7500000000000154e-05, 1.7487000000000058e-05, 1.786100000000096e-05, 1.7...</msg>
<status status="PASS" starttime="20201030 11:52:11.463" endtime="20201030 11:52:11.467"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.471" level="INFO">NAME: accuracy-TIMER_SLEEP-13-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.470" endtime="20201030 11:52:11.471"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.473" level="INFO">VALUE: [1.78890000000001e-05, 1.716699999999849e-05, 1.7472000000001014e-05, 1.7485999999997115e-05, 1.711100000000021e-05, 1.7500000000000154e-05, 1.7487000000000058e-05, 1.786100000000096e-05, 1.711100000000021e-05, 1.712499999999978e-05, 1.7500000000000154e-05, 1.786100000000096e-05, 1.7487000000000058e-05, 1.786100000000096e-05, 1.787499999999706e-05, 1.787500000000053e-05, 1.709700000000064e-05, 1.7472000000001014e-05, 1.711100000000021e-05, 1.7486000000000584e-05, 1.709700000000064e-05, 1.787500000000053e-05, 1.7486000000000584e-05, 1.7486000000000584e-05, 1.712499999999978e-05, 1.787500000000053e-05, 1.712499999999978e-05, 1.7457999999997975e-05, 1.787499999999706e-05, 1.787500000000053e-05, 1.7486000000000584e-05, 1.70690000000015e-05, 1.7487000000000058e-05, 1.78890000000001e-05, 1.745899999999745e-05, 1.709700000000064e-05, 1.6735999999999834e-05, 1.787500000000053e-05, 1.7485999999997115e-05, 1.7084000000000543e-05, 1.7486000000000584e-05, 1.7485999999997115e-05, 1.712499999999978e-05, 1.7486000000000584e-05, 1.7487000000000058e-05, 1.786099999999749e-05, 1.7415999999999265e-05, 1.7500000000000154e-05, 1.7500000000000154e-05, 1.7486000000000584e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.472" endtime="20201030 11:52:11.475"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.467" endtime="20201030 11:52:11.475"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.479" endtime="20201030 11:52:11.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.477" endtime="20201030 11:52:11.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.476" endtime="20201030 11:52:11.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.120" endtime="20201030 11:52:11.500"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.119" endtime="20201030 11:52:11.500"></status>
</kw>
<kw name="${duration} = 14" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.508" endtime="20201030 11:52:11.522"></status>
</kw>
<msg timestamp="20201030 11:52:11.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.507" endtime="20201030 11:52:11.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(14)', 'msg': ['sleep_accuracy_timer_sleep 14\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.524" endtime="20201030 11:52:11.526"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.526" endtime="20201030 11:52:11.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.504" endtime="20201030 11:52:11.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.502" endtime="20201030 11:52:11.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.535" endtime="20201030 11:52:11.821"></status>
</kw>
<msg timestamp="20201030 11:52:11.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.534" endtime="20201030 11:52:11.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019551389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.825" endtime="20201030 11:52:11.832"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.833" endtime="20201030 11:52:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.531" endtime="20201030 11:52:11.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.529" endtime="20201030 11:52:11.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:11.840" level="INFO">${RESULT} = [{'diff': 1.787500000000053e-05}, {'diff': 1.8221999999998295e-05}, {'diff': 1.8249999999997435e-05}, {'diff': 1.786099999999749e-05}, {'diff': 1.787500000000053e-05}, {'diff': 1.8250000000000904e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:11.836" endtime="20201030 11:52:11.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:11.844" level="INFO">${ACCURACY} = {'diff': [1.787500000000053e-05, 1.8221999999998295e-05, 1.8249999999997435e-05, 1.786099999999749e-05, 1.787500000000053e-05, 1.8250000000000904e-05, 1.8263999999997005e-05, 1.862499999999781e-05, 1....</msg>
<status status="PASS" starttime="20201030 11:52:11.840" endtime="20201030 11:52:11.845"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.849" level="INFO">NAME: accuracy-TIMER_SLEEP-14-philip</msg>
<status status="PASS" starttime="20201030 11:52:11.848" endtime="20201030 11:52:11.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.851" level="INFO">VALUE: [1.787500000000053e-05, 1.8221999999998295e-05, 1.8249999999997435e-05, 1.786099999999749e-05, 1.787500000000053e-05, 1.8250000000000904e-05, 1.8263999999997005e-05, 1.862499999999781e-05, 1.863900000000085e-05, 1.859699999999867e-05, 1.78890000000001e-05, 1.8278000000000044e-05, 1.865300000000042e-05, 1.787500000000053e-05, 1.830500000000318e-05, 1.8249999999997435e-05, 1.8250000000000904e-05, 1.833299999999885e-05, 1.787500000000053e-05, 1.862500000000128e-05, 1.8237000000000808e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.865300000000042e-05, 1.78890000000001e-05, 1.8235999999997865e-05, 1.8249999999997435e-05, 1.862500000000128e-05, 1.862500000000128e-05, 1.831899999999928e-05, 1.8193999999999155e-05, 1.862500000000128e-05, 1.823699999999734e-05, 1.8250000000000904e-05, 1.786100000000096e-05, 1.861100000000171e-05, 1.8333999999998324e-05, 1.870900000000217e-05, 1.862500000000128e-05, 1.8208000000002195e-05, 1.8250000000000904e-05, 1.8250000000000904e-05, 1.863900000000085e-05, 1.8651999999997476e-05, 1.866699999999999e-05, 1.863900000000085e-05, 1.8250000000000904e-05, 1.862500000000128e-05, 1.8236000000001334e-05]</msg>
<status status="PASS" starttime="20201030 11:52:11.850" endtime="20201030 11:52:11.856"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.845" endtime="20201030 11:52:11.857"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:11.860" endtime="20201030 11:52:11.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.859" endtime="20201030 11:52:11.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.858" endtime="20201030 11:52:11.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.501" endtime="20201030 11:52:11.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.500" endtime="20201030 11:52:11.881"></status>
</kw>
<kw name="${duration} = 15" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.890" endtime="20201030 11:52:11.906"></status>
</kw>
<msg timestamp="20201030 11:52:11.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.888" endtime="20201030 11:52:11.907"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:11.909" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(15)', 'msg': ['sleep_accuracy_timer_sleep 15\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:11.908" endtime="20201030 11:52:11.909"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.910" endtime="20201030 11:52:11.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.885" endtime="20201030 11:52:11.912"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.883" endtime="20201030 11:52:11.912"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:11.919" endtime="20201030 11:52:12.206"></status>
</kw>
<msg timestamp="20201030 11:52:12.210" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:11.917" endtime="20201030 11:52:12.210"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.218" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020526111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020545903, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.211" endtime="20201030 11:52:12.218"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.219" endtime="20201030 11:52:12.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.915" endtime="20201030 11:52:12.221"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.913" endtime="20201030 11:52:12.222"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.226" level="INFO">${RESULT} = [{'diff': 1.9792000000001114e-05}, {'diff': 1.941700000000074e-05}, {'diff': 1.943100000000031e-05}, {'diff': 1.9027999999997325e-05}, {'diff': 1.9014000000001224e-05}, {'diff': 1.940300000000117e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:12.222" endtime="20201030 11:52:12.226"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.230" level="INFO">${ACCURACY} = {'diff': [1.9792000000001114e-05, 1.941700000000074e-05, 1.943100000000031e-05, 1.9027999999997325e-05, 1.9014000000001224e-05, 1.940300000000117e-05, 1.9763999999998505e-05, 1.9791999999997645e-05, 1...</msg>
<status status="PASS" starttime="20201030 11:52:12.227" endtime="20201030 11:52:12.230"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.234" level="INFO">NAME: accuracy-TIMER_SLEEP-15-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.233" endtime="20201030 11:52:12.234"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.237" level="INFO">VALUE: [1.9792000000001114e-05, 1.941700000000074e-05, 1.943100000000031e-05, 1.9027999999997325e-05, 1.9014000000001224e-05, 1.940300000000117e-05, 1.9763999999998505e-05, 1.9791999999997645e-05, 1.9778000000001544e-05, 1.937499999999856e-05, 1.8999999999998185e-05, 1.945899999999945e-05, 1.9763999999998505e-05, 1.938899999999813e-05, 1.9792000000001114e-05, 1.9778000000001544e-05, 1.980500000000121e-05, 1.937499999999856e-05, 1.9402000000001696e-05, 1.938899999999813e-05, 1.9777999999998075e-05, 1.93890000000016e-05, 1.9014000000001224e-05, 1.941700000000074e-05, 1.94029999999977e-05, 1.9013999999997755e-05, 1.9778000000001544e-05, 1.9014000000001224e-05, 1.937499999999856e-05, 1.9028000000000794e-05, 1.9735999999999365e-05, 1.979100000000164e-05, 1.9750000000002405e-05, 1.979100000000164e-05, 1.940300000000117e-05, 1.93890000000016e-05, 1.9014000000001224e-05, 1.9014000000001224e-05, 1.9388000000002126e-05, 1.9792000000001114e-05, 1.979100000000164e-05, 1.941699999999727e-05, 1.9777999999998075e-05, 1.9014000000001224e-05, 1.9778000000001544e-05, 1.9014000000001224e-05, 1.9749999999998935e-05, 1.9028000000000794e-05, 1.9778000000001544e-05, 1.9014000000001224e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.235" endtime="20201030 11:52:12.237"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.231" endtime="20201030 11:52:12.238"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.242" endtime="20201030 11:52:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.240" endtime="20201030 11:52:12.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.239" endtime="20201030 11:52:12.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.882" endtime="20201030 11:52:12.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:11.881" endtime="20201030 11:52:12.262"></status>
</kw>
<kw name="${duration} = 16" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.271" endtime="20201030 11:52:12.287"></status>
</kw>
<msg timestamp="20201030 11:52:12.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.269" endtime="20201030 11:52:12.288"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.290" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(16)', 'msg': ['sleep_accuracy_timer_sleep 16\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.288" endtime="20201030 11:52:12.290"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.291" endtime="20201030 11:52:12.292"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.267" endtime="20201030 11:52:12.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.265" endtime="20201030 11:52:12.293"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.300" endtime="20201030 11:52:12.586"></status>
</kw>
<msg timestamp="20201030 11:52:12.589" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.298" endtime="20201030 11:52:12.589"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.598" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020521875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020541653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.590" endtime="20201030 11:52:12.598"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.599" endtime="20201030 11:52:12.600"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.296" endtime="20201030 11:52:12.601"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.294" endtime="20201030 11:52:12.601"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.605" level="INFO">${RESULT} = [{'diff': 1.9778000000001544e-05}, {'diff': 2.015299999999845e-05}, {'diff': 1.9764000000001974e-05}, {'diff': 1.9764000000001974e-05}, {'diff': 2.016699999999802e-05}, {'diff': 2.018100000000106e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:12.602" endtime="20201030 11:52:12.606"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.609" level="INFO">${ACCURACY} = {'diff': [1.9778000000001544e-05, 2.015299999999845e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 2.016699999999802e-05, 2.018100000000106e-05, 2.015300000000192e-05, 2.015299999999845e-05, 2.0...</msg>
<status status="PASS" starttime="20201030 11:52:12.606" endtime="20201030 11:52:12.610"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.614" level="INFO">NAME: accuracy-TIMER_SLEEP-16-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.613" endtime="20201030 11:52:12.614"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.617" level="INFO">VALUE: [1.9778000000001544e-05, 2.015299999999845e-05, 1.9764000000001974e-05, 1.9764000000001974e-05, 2.016699999999802e-05, 2.018100000000106e-05, 2.015300000000192e-05, 2.015299999999845e-05, 2.091699999999877e-05, 2.054099999999892e-05, 2.015299999999845e-05, 1.9778000000001544e-05, 2.052699999999935e-05, 2.016700000000149e-05, 2.016699999999802e-05, 2.0541999999998395e-05, 2.091700000000224e-05, 2.054099999999892e-05, 2.091700000000224e-05, 2.009700000000017e-05, 2.0151999999998976e-05, 2.0165999999998546e-05, 1.9778000000001544e-05, 2.0541999999998395e-05, 1.976299999999903e-05, 2.0166000000002016e-05, 2.0527999999998825e-05, 2.016700000000149e-05, 2.0556000000001434e-05, 2.016699999999802e-05, 2.0541999999998395e-05, 2.09029999999992e-05, 2.0472000000000545e-05, 1.9820000000000254e-05, 2.016699999999802e-05, 1.9791999999997645e-05, 2.0151999999998976e-05, 1.9764000000001974e-05, 2.0542000000001864e-05, 2.091699999999877e-05, 2.055500000000196e-05, 2.0929999999998866e-05, 2.013899999999888e-05, 2.015299999999845e-05, 2.0541999999998395e-05, 2.054099999999892e-05, 2.018100000000106e-05, 2.016700000000149e-05, 2.013899999999888e-05, 2.054099999999892e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.615" endtime="20201030 11:52:12.618"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.610" endtime="20201030 11:52:12.618"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:12.622" endtime="20201030 11:52:12.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.621" endtime="20201030 11:52:12.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.619" endtime="20201030 11:52:12.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.263" endtime="20201030 11:52:12.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.263" endtime="20201030 11:52:12.643"></status>
</kw>
<kw name="${duration} = 17" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.651" endtime="20201030 11:52:12.668"></status>
</kw>
<msg timestamp="20201030 11:52:12.668" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.650" endtime="20201030 11:52:12.668"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.670" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(17)', 'msg': ['sleep_accuracy_timer_sleep 17\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:12.669" endtime="20201030 11:52:12.671"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.672" endtime="20201030 11:52:12.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.647" endtime="20201030 11:52:12.674"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.645" endtime="20201030 11:52:12.674"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.680" endtime="20201030 11:52:12.966"></status>
</kw>
<msg timestamp="20201030 11:52:12.969" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.679" endtime="20201030 11:52:12.970"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.978" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020301361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020322639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:12.971" endtime="20201030 11:52:12.979"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:12.979" endtime="20201030 11:52:12.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.676" endtime="20201030 11:52:12.981"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.675" endtime="20201030 11:52:12.982"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:12.986" level="INFO">${RESULT} = [{'diff': 2.1277999999999575e-05}, {'diff': 2.169499999999866e-05}, {'diff': 2.09029999999992e-05}, {'diff': 2.1679999999999616e-05}, {'diff': 2.0929999999998866e-05}, {'diff': 2.1679999999999616e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:12.983" endtime="20201030 11:52:12.986"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:12.993" level="INFO">${ACCURACY} = {'diff': [2.1277999999999575e-05, 2.169499999999866e-05, 2.09029999999992e-05, 2.1679999999999616e-05, 2.0929999999998866e-05, 2.1679999999999616e-05, 2.168100000000256e-05, 2.091700000000224e-05, 2.1...</msg>
<status status="PASS" starttime="20201030 11:52:12.987" endtime="20201030 11:52:12.994"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:12.998" level="INFO">NAME: accuracy-TIMER_SLEEP-17-philip</msg>
<status status="PASS" starttime="20201030 11:52:12.997" endtime="20201030 11:52:12.998"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.000" level="INFO">VALUE: [2.1277999999999575e-05, 2.169499999999866e-05, 2.09029999999992e-05, 2.1679999999999616e-05, 2.0929999999998866e-05, 2.1679999999999616e-05, 2.168100000000256e-05, 2.091700000000224e-05, 2.1693999999999186e-05, 2.1679999999999616e-05, 2.1666000000000046e-05, 2.166699999999952e-05, 2.0929999999998866e-05, 2.1264000000000005e-05, 2.129099999999967e-05, 2.12770000000001e-05, 2.131899999999881e-05, 2.091700000000224e-05, 2.169499999999866e-05, 2.168100000000256e-05, 2.169500000000213e-05, 2.1264000000000005e-05, 2.0930000000002336e-05, 2.1291999999999145e-05, 2.1277999999999575e-05, 2.168100000000256e-05, 2.1694000000002656e-05, 2.1680000000003086e-05, 2.0916000000002766e-05, 2.169500000000213e-05, 2.168099999999909e-05, 2.1693999999999186e-05, 2.1277999999999575e-05, 2.161099999999777e-05, 2.1694000000002656e-05, 2.09029999999992e-05, 2.129099999999967e-05, 2.0901999999999726e-05, 2.0930000000002336e-05, 2.130500000000271e-05, 2.1679999999999616e-05, 2.168099999999909e-05, 2.129100000000314e-05, 2.1666000000000046e-05, 2.129099999999967e-05, 2.17229999999978e-05, 2.091699999999877e-05, 2.169500000000213e-05, 2.1320000000001754e-05, 2.168099999999909e-05]</msg>
<status status="PASS" starttime="20201030 11:52:12.999" endtime="20201030 11:52:13.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.994" endtime="20201030 11:52:13.002"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.005" endtime="20201030 11:52:13.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.004" endtime="20201030 11:52:13.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.003" endtime="20201030 11:52:13.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.644" endtime="20201030 11:52:13.026"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:12.643" endtime="20201030 11:52:13.026"></status>
</kw>
<kw name="${duration} = 18" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.034" endtime="20201030 11:52:13.049"></status>
</kw>
<msg timestamp="20201030 11:52:13.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.033" endtime="20201030 11:52:13.050"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.052" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(18)', 'msg': ['sleep_accuracy_timer_sleep 18\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.051" endtime="20201030 11:52:13.052"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.053" endtime="20201030 11:52:13.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.030" endtime="20201030 11:52:13.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.028" endtime="20201030 11:52:13.056"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.062" endtime="20201030 11:52:13.393"></status>
</kw>
<msg timestamp="20201030 11:52:13.396" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.060" endtime="20201030 11:52:13.397"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.405" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019523375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019545806, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.398" endtime="20201030 11:52:13.405"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.406" endtime="20201030 11:52:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.058" endtime="20201030 11:52:13.408"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.056" endtime="20201030 11:52:13.409"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.412" level="INFO">${RESULT} = [{'diff': 2.243099999999984e-05}, {'diff': 2.2041999999999895e-05}, {'diff': 2.243099999999984e-05}, {'diff': 2.2415999999997327e-05}, {'diff': 2.2083999999998605e-05}, {'diff': 2.2055999999999465e-05...</msg>
<status status="PASS" starttime="20201030 11:52:13.409" endtime="20201030 11:52:13.413"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.416" level="INFO">${ACCURACY} = {'diff': [2.243099999999984e-05, 2.2041999999999895e-05, 2.243099999999984e-05, 2.2415999999997327e-05, 2.2083999999998605e-05, 2.2055999999999465e-05, 2.168099999999909e-05, 2.206900000000303e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:52:13.413" endtime="20201030 11:52:13.417"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.421" level="INFO">NAME: accuracy-TIMER_SLEEP-18-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.420" endtime="20201030 11:52:13.421"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.423" level="INFO">VALUE: [2.243099999999984e-05, 2.2041999999999895e-05, 2.243099999999984e-05, 2.2415999999997327e-05, 2.2083999999998605e-05, 2.2055999999999465e-05, 2.168099999999909e-05, 2.206900000000303e-05, 2.244499999999941e-05, 2.244499999999941e-05, 2.280500000000074e-05, 2.206900000000303e-05, 2.2833999999999355e-05, 2.244499999999941e-05, 2.244499999999941e-05, 2.2443999999999936e-05, 2.2430000000000366e-05, 2.2084000000002074e-05, 2.211100000000174e-05, 2.280500000000074e-05, 2.2041999999999895e-05, 2.2457999999999506e-05, 2.2457999999999506e-05, 2.206899999999956e-05, 2.2430000000000366e-05, 2.2069999999999035e-05, 2.211100000000174e-05, 2.280500000000074e-05, 2.205499999999999e-05, 2.290299999999773e-05, 2.2819999999999785e-05, 2.283300000000335e-05, 2.2848000000002394e-05, 2.2457999999999506e-05, 2.2430000000000366e-05, 2.2443999999999936e-05, 2.245900000000245e-05, 2.205499999999999e-05, 2.206899999999956e-05, 2.2055999999999465e-05, 2.2790999999997702e-05, 2.205499999999999e-05, 2.237500000000156e-05, 2.281900000000031e-05, 2.237500000000156e-05, 2.206900000000303e-05, 2.243099999999984e-05, 2.2834000000002824e-05, 2.2443999999999936e-05, 2.237500000000156e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.422" endtime="20201030 11:52:13.424"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.417" endtime="20201030 11:52:13.425"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.429" endtime="20201030 11:52:13.448"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.427" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.425" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.027" endtime="20201030 11:52:13.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.026" endtime="20201030 11:52:13.449"></status>
</kw>
<kw name="${duration} = 19" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.458" endtime="20201030 11:52:13.474"></status>
</kw>
<msg timestamp="20201030 11:52:13.475" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.456" endtime="20201030 11:52:13.475"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.477" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(19)', 'msg': ['sleep_accuracy_timer_sleep 19\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.476" endtime="20201030 11:52:13.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.478" endtime="20201030 11:52:13.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.454" endtime="20201030 11:52:13.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.452" endtime="20201030 11:52:13.481"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.487" endtime="20201030 11:52:13.772"></status>
</kw>
<msg timestamp="20201030 11:52:13.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.486" endtime="20201030 11:52:13.775"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.783" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020127931, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020151514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.776" endtime="20201030 11:52:13.783"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.784" endtime="20201030 11:52:13.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.483" endtime="20201030 11:52:13.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.481" endtime="20201030 11:52:13.787"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:13.791" level="INFO">${RESULT} = [{'diff': 2.3582999999997162e-05}, {'diff': 2.356900000000106e-05}, {'diff': 2.3570000000000535e-05}, {'diff': 2.32090000000032e-05}, {'diff': 2.319499999999669e-05}, {'diff': 2.358300000000063e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:13.788" endtime="20201030 11:52:13.791"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:13.795" level="INFO">${ACCURACY} = {'diff': [2.3582999999997162e-05, 2.356900000000106e-05, 2.3570000000000535e-05, 2.32090000000032e-05, 2.319499999999669e-05, 2.358300000000063e-05, 2.3582999999997162e-05, 2.3597999999999675e-05, 2.3...</msg>
<status status="PASS" starttime="20201030 11:52:13.792" endtime="20201030 11:52:13.796"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.800" level="INFO">NAME: accuracy-TIMER_SLEEP-19-philip</msg>
<status status="PASS" starttime="20201030 11:52:13.799" endtime="20201030 11:52:13.800"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.802" level="INFO">VALUE: [2.3582999999997162e-05, 2.356900000000106e-05, 2.3570000000000535e-05, 2.32090000000032e-05, 2.319499999999669e-05, 2.358300000000063e-05, 2.3582999999997162e-05, 2.3597999999999675e-05, 2.318100000000059e-05, 2.283299999999988e-05, 2.3527999999998356e-05, 2.35970000000002e-05, 2.3208000000000256e-05, 2.280500000000074e-05, 2.3513999999998786e-05, 2.281900000000031e-05, 2.280500000000074e-05, 2.358300000000063e-05, 2.319500000000016e-05, 2.286099999999902e-05, 2.3194000000000686e-05, 2.281900000000031e-05, 2.363899999999891e-05, 2.32090000000032e-05, 2.2819999999999785e-05, 2.3972000000000576e-05, 2.3208000000000256e-05, 2.3193999999997217e-05, 2.3584000000000105e-05, 2.2791999999997176e-05, 2.3208000000000256e-05, 2.3582999999997162e-05, 2.358300000000063e-05, 2.281900000000031e-05, 2.3208000000000256e-05, 2.281900000000031e-05, 2.3278000000001575e-05, 2.3570000000000535e-05, 2.283299999999988e-05, 2.393100000000134e-05, 2.319500000000016e-05, 2.32090000000032e-05, 2.286100000000249e-05, 2.319500000000016e-05, 2.319500000000016e-05, 2.3207999999996787e-05, 2.35970000000002e-05, 2.3221999999999826e-05, 2.284699999999945e-05, 2.3597999999999675e-05]</msg>
<status status="PASS" starttime="20201030 11:52:13.801" endtime="20201030 11:52:13.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.796" endtime="20201030 11:52:13.803"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:13.807" endtime="20201030 11:52:13.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.806" endtime="20201030 11:52:13.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.804" endtime="20201030 11:52:13.827"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.450" endtime="20201030 11:52:13.828"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.450" endtime="20201030 11:52:13.828"></status>
</kw>
<kw name="${duration} = 20" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.837" endtime="20201030 11:52:13.852"></status>
</kw>
<msg timestamp="20201030 11:52:13.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.835" endtime="20201030 11:52:13.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:13.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(20)', 'msg': ['sleep_accuracy_timer_sleep 20\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:13.853" endtime="20201030 11:52:13.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.856" endtime="20201030 11:52:13.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.833" endtime="20201030 11:52:13.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.831" endtime="20201030 11:52:13.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:13.865" endtime="20201030 11:52:14.150"></status>
</kw>
<msg timestamp="20201030 11:52:14.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:13.863" endtime="20201030 11:52:14.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019846236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019870958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.155" endtime="20201030 11:52:14.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.163" endtime="20201030 11:52:14.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.861" endtime="20201030 11:52:14.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.859" endtime="20201030 11:52:14.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.170" level="INFO">${RESULT} = [{'diff': 2.4722000000001326e-05}, {'diff': 2.47230000000008e-05}, {'diff': 2.391700000000177e-05}, {'diff': 2.4346999999997482e-05}, {'diff': 2.440299999999923e-05}, {'diff': 2.4708000000001756e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:14.166" endtime="20201030 11:52:14.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.174" level="INFO">${ACCURACY} = {'diff': [2.4722000000001326e-05, 2.47230000000008e-05, 2.391700000000177e-05, 2.4346999999997482e-05, 2.440299999999923e-05, 2.4708000000001756e-05, 2.394500000000091e-05, 2.4764000000000036e-05, 2.4...</msg>
<status status="PASS" starttime="20201030 11:52:14.170" endtime="20201030 11:52:14.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.178" level="INFO">NAME: accuracy-TIMER_SLEEP-20-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.177" endtime="20201030 11:52:14.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.180" level="INFO">VALUE: [2.4722000000001326e-05, 2.47230000000008e-05, 2.391700000000177e-05, 2.4346999999997482e-05, 2.440299999999923e-05, 2.4708000000001756e-05, 2.394500000000091e-05, 2.4764000000000036e-05, 2.4721999999997857e-05, 2.4750000000000466e-05, 2.4736000000000896e-05, 2.3901999999999257e-05, 2.470900000000123e-05, 2.4348000000000425e-05, 2.3958000000001006e-05, 2.4693999999998717e-05, 2.4721999999997857e-05, 2.434700000000095e-05, 2.436100000000052e-05, 2.3958000000001006e-05, 2.436100000000052e-05, 2.470900000000123e-05, 2.4346999999997482e-05, 2.4721999999997857e-05, 2.4348000000000425e-05, 2.434700000000095e-05, 2.3958000000001006e-05, 2.4722000000001326e-05, 2.434700000000095e-05, 2.47230000000008e-05, 2.434700000000095e-05, 2.433300000000138e-05, 2.394500000000091e-05, 2.3958000000001006e-05, 2.4750000000000466e-05, 2.3972000000000576e-05, 2.437500000000009e-05, 2.4318999999998342e-05, 2.4736000000000896e-05, 2.4348000000000425e-05, 2.4346999999997482e-05, 2.434700000000095e-05, 2.434700000000095e-05, 2.47369999999969e-05, 2.47230000000008e-05, 2.3972000000000576e-05, 2.3986000000000146e-05, 2.4334000000000855e-05, 2.4750000000000466e-05, 2.434700000000095e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.179" endtime="20201030 11:52:14.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.174" endtime="20201030 11:52:14.182"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.185" endtime="20201030 11:52:14.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.184" endtime="20201030 11:52:14.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.183" endtime="20201030 11:52:14.205"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.829" endtime="20201030 11:52:14.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:13.828" endtime="20201030 11:52:14.206"></status>
</kw>
<kw name="${duration} = 21" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.215" endtime="20201030 11:52:14.232"></status>
</kw>
<msg timestamp="20201030 11:52:14.233" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.213" endtime="20201030 11:52:14.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(21)', 'msg': ['sleep_accuracy_timer_sleep 21\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.234" endtime="20201030 11:52:14.235"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.236" endtime="20201030 11:52:14.238"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.211" endtime="20201030 11:52:14.239"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.208" endtime="20201030 11:52:14.239"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.245" endtime="20201030 11:52:14.532"></status>
</kw>
<msg timestamp="20201030 11:52:14.535" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021364764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.244" endtime="20201030 11:52:14.535"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.543" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021364764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021390181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.536" endtime="20201030 11:52:14.544"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.545" endtime="20201030 11:52:14.546"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.241" endtime="20201030 11:52:14.547"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.240" endtime="20201030 11:52:14.547"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.551" level="INFO">${RESULT} = [{'diff': 2.54169999999998e-05}, {'diff': 2.5514000000000786e-05}, {'diff': 2.511100000000127e-05}, {'diff': 2.5096999999998232e-05}, {'diff': 2.5860999999998552e-05}, {'diff': 2.5472000000002076e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:14.548" endtime="20201030 11:52:14.551"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.555" level="INFO">${ACCURACY} = {'diff': [2.54169999999998e-05, 2.5514000000000786e-05, 2.511100000000127e-05, 2.5096999999998232e-05, 2.5860999999998552e-05, 2.5472000000002076e-05, 2.5485999999998177e-05, 2.588899999999769e-05, 2....</msg>
<status status="PASS" starttime="20201030 11:52:14.552" endtime="20201030 11:52:14.555"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.560" level="INFO">NAME: accuracy-TIMER_SLEEP-21-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.559" endtime="20201030 11:52:14.560"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.563" level="INFO">VALUE: [2.54169999999998e-05, 2.5514000000000786e-05, 2.511100000000127e-05, 2.5096999999998232e-05, 2.5860999999998552e-05, 2.5472000000002076e-05, 2.5485999999998177e-05, 2.588899999999769e-05, 2.587500000000159e-05, 2.5443999999999467e-05, 2.54169999999998e-05, 2.5500000000001216e-05, 2.511100000000127e-05, 2.5486000000001646e-05, 2.594499999999944e-05, 2.511100000000127e-05, 2.512500000000084e-05, 2.5082999999998662e-05, 2.5472000000002076e-05, 2.5874999999998122e-05, 2.5485999999998177e-05, 2.512500000000084e-05, 2.5486000000001646e-05, 2.5500000000001216e-05, 2.5096999999998232e-05, 2.512500000000084e-05, 2.50970000000017e-05, 2.587500000000159e-05, 2.512500000000084e-05, 2.588900000000116e-05, 2.5500000000001216e-05, 2.5486000000001646e-05, 2.5110999999997802e-05, 2.5458000000002506e-05, 2.4722000000001326e-05, 2.511100000000127e-05, 2.5874999999998122e-05, 2.47230000000008e-05, 2.5860999999998552e-05, 2.5485999999998177e-05, 2.512500000000084e-05, 2.5069999999998566e-05, 2.5499999999997747e-05, 2.512500000000084e-05, 2.5096999999998232e-05, 2.511100000000127e-05, 2.4736000000000896e-05, 2.4722000000001326e-05, 2.5082999999998662e-05, 2.5485999999998177e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.561" endtime="20201030 11:52:14.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.556" endtime="20201030 11:52:14.564"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.568" endtime="20201030 11:52:14.587"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.566" endtime="20201030 11:52:14.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.565" endtime="20201030 11:52:14.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.207" endtime="20201030 11:52:14.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.206" endtime="20201030 11:52:14.588"></status>
</kw>
<kw name="${duration} = 22" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.597" endtime="20201030 11:52:14.614"></status>
</kw>
<msg timestamp="20201030 11:52:14.614" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.595" endtime="20201030 11:52:14.614"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.617" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(22)', 'msg': ['sleep_accuracy_timer_sleep 22\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.615" endtime="20201030 11:52:14.617"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.618" endtime="20201030 11:52:14.619"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.593" endtime="20201030 11:52:14.620"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.591" endtime="20201030 11:52:14.620"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.626" endtime="20201030 11:52:14.913"></status>
</kw>
<msg timestamp="20201030 11:52:14.916" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.625" endtime="20201030 11:52:14.916"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.924" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020418014, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020444306, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:14.917" endtime="20201030 11:52:14.924"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.925" endtime="20201030 11:52:14.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.622" endtime="20201030 11:52:14.927"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.621" endtime="20201030 11:52:14.928"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:14.932" level="INFO">${RESULT} = [{'diff': 2.6291999999997206e-05}, {'diff': 2.6638999999998442e-05}, {'diff': 2.6624999999998872e-05}, {'diff': 2.6250000000001966e-05}, {'diff': 2.586100000000202e-05}, {'diff': 2.6235999999998927e-0...</msg>
<status status="PASS" starttime="20201030 11:52:14.928" endtime="20201030 11:52:14.932"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:14.936" level="INFO">${ACCURACY} = {'diff': [2.6291999999997206e-05, 2.6638999999998442e-05, 2.6624999999998872e-05, 2.6250000000001966e-05, 2.586100000000202e-05, 2.6235999999998927e-05, 2.6583000000000162e-05, 2.6250000000001966e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:14.932" endtime="20201030 11:52:14.937"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.941" level="INFO">NAME: accuracy-TIMER_SLEEP-22-philip</msg>
<status status="PASS" starttime="20201030 11:52:14.940" endtime="20201030 11:52:14.941"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.943" level="INFO">VALUE: [2.6291999999997206e-05, 2.6638999999998442e-05, 2.6624999999998872e-05, 2.6250000000001966e-05, 2.586100000000202e-05, 2.6235999999998927e-05, 2.6583000000000162e-05, 2.6250000000001966e-05, 2.618100000000012e-05, 2.662500000000234e-05, 2.665300000000148e-05, 2.6235999999998927e-05, 2.6638000000002438e-05, 2.6264000000001536e-05, 2.6277999999997637e-05, 2.5860999999998552e-05, 2.6250000000001966e-05, 2.5874999999998122e-05, 2.6638999999998442e-05, 2.620900000000273e-05, 2.6207999999999787e-05, 2.6624999999998872e-05, 2.6250000000001966e-05, 2.6610999999999302e-05, 2.6264000000001536e-05, 2.6263999999998067e-05, 2.6264000000001536e-05, 2.6582999999996693e-05, 2.5846999999998982e-05, 2.668100000000062e-05, 2.662500000000234e-05, 2.6638999999998442e-05, 2.6624999999998872e-05, 2.666700000000105e-05, 2.6250000000001966e-05, 2.663900000000191e-05, 2.662500000000234e-05, 2.6250000000001966e-05, 2.6249999999998497e-05, 2.7013000000002813e-05, 2.6583999999999636e-05, 2.5874999999998122e-05, 2.588900000000116e-05, 2.6638999999998442e-05, 2.6958000000000537e-05, 2.6638999999998442e-05, 2.6596999999999732e-05, 2.6638999999998442e-05, 2.586100000000202e-05, 2.6250000000001966e-05]</msg>
<status status="PASS" starttime="20201030 11:52:14.942" endtime="20201030 11:52:14.944"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.937" endtime="20201030 11:52:14.945"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:14.948" endtime="20201030 11:52:14.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.947" endtime="20201030 11:52:14.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.946" endtime="20201030 11:52:14.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.589" endtime="20201030 11:52:14.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.589" endtime="20201030 11:52:14.969"></status>
</kw>
<kw name="${duration} = 23" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.978" endtime="20201030 11:52:14.995"></status>
</kw>
<msg timestamp="20201030 11:52:14.995" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.976" endtime="20201030 11:52:14.995"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:14.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(23)', 'msg': ['sleep_accuracy_timer_sleep 23\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:14.996" endtime="20201030 11:52:14.998"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:14.999" endtime="20201030 11:52:15.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.973" endtime="20201030 11:52:15.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.971" endtime="20201030 11:52:15.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.009" endtime="20201030 11:52:15.296"></status>
</kw>
<msg timestamp="20201030 11:52:15.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020537389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.007" endtime="20201030 11:52:15.300"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.308" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020509597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020537389, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.301" endtime="20201030 11:52:15.308"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.309" endtime="20201030 11:52:15.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.005" endtime="20201030 11:52:15.311"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.003" endtime="20201030 11:52:15.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.315" level="INFO">${RESULT} = [{'diff': 2.7791999999998707e-05}, {'diff': 2.7013999999998817e-05}, {'diff': 2.7763999999999567e-05}, {'diff': 2.7776999999999663e-05}, {'diff': 2.7028000000001856e-05}, {'diff': 2.7791999999998707e-...</msg>
<status status="PASS" starttime="20201030 11:52:15.312" endtime="20201030 11:52:15.316"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.319" level="INFO">${ACCURACY} = {'diff': [2.7791999999998707e-05, 2.7013999999998817e-05, 2.7763999999999567e-05, 2.7776999999999663e-05, 2.7028000000001856e-05, 2.7791999999998707e-05, 2.7749999999999997e-05, 2.7763999999999567e-05...</msg>
<status status="PASS" starttime="20201030 11:52:15.316" endtime="20201030 11:52:15.320"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.324" level="INFO">NAME: accuracy-TIMER_SLEEP-23-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.323" endtime="20201030 11:52:15.324"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.326" level="INFO">VALUE: [2.7791999999998707e-05, 2.7013999999998817e-05, 2.7763999999999567e-05, 2.7776999999999663e-05, 2.7028000000001856e-05, 2.7791999999998707e-05, 2.7749999999999997e-05, 2.7763999999999567e-05, 2.7028000000001856e-05, 2.7012999999999343e-05, 2.7013999999998817e-05, 2.74170000000018e-05, 2.7014000000002286e-05, 2.740299999999876e-05, 2.7013000000002813e-05, 2.698699999999915e-05, 2.7319000000001342e-05, 2.7777999999999137e-05, 2.740299999999876e-05, 2.7014000000002286e-05, 2.738900000000266e-05, 2.7805000000002272e-05, 2.7014000000002286e-05, 2.7374999999999622e-05, 2.7374999999999622e-05, 2.7014000000002286e-05, 2.7028000000001856e-05, 2.7401999999999288e-05, 2.7320000000000816e-05, 2.7388999999999192e-05, 2.7763999999999567e-05, 2.7388999999999192e-05, 2.738900000000266e-05, 2.7055000000001522e-05, 2.7388999999999192e-05, 2.7013999999998817e-05, 2.7776999999999663e-05, 2.7333000000000912e-05, 2.7013999999998817e-05, 2.7791999999998707e-05, 2.7791999999998707e-05, 2.7777999999999137e-05, 2.7777999999999137e-05, 2.7776999999999663e-05, 2.7028000000001856e-05, 2.740300000000223e-05, 2.7374999999999622e-05, 2.7056000000000996e-05, 2.7027000000002382e-05, 2.7319000000001342e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.325" endtime="20201030 11:52:15.327"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.320" endtime="20201030 11:52:15.328"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.331" endtime="20201030 11:52:15.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.330" endtime="20201030 11:52:15.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.329" endtime="20201030 11:52:15.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.970" endtime="20201030 11:52:15.352"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:14.969" endtime="20201030 11:52:15.352"></status>
</kw>
<kw name="${duration} = 24" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.361" endtime="20201030 11:52:15.376"></status>
</kw>
<msg timestamp="20201030 11:52:15.377" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.359" endtime="20201030 11:52:15.377"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.379" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(24)', 'msg': ['sleep_accuracy_timer_sleep 24\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.378" endtime="20201030 11:52:15.379"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.380" endtime="20201030 11:52:15.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.356" endtime="20201030 11:52:15.382"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.354" endtime="20201030 11:52:15.383"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.389" endtime="20201030 11:52:15.674"></status>
</kw>
<msg timestamp="20201030 11:52:15.678" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.388" endtime="20201030 11:52:15.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.686" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020501194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020529319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.679" endtime="20201030 11:52:15.686"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.687" endtime="20201030 11:52:15.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.385" endtime="20201030 11:52:15.689"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.383" endtime="20201030 11:52:15.690"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:15.694" level="INFO">${RESULT} = [{'diff': 2.8125000000000372e-05}, {'diff': 2.8138000000000468e-05}, {'diff': 2.8527999999999887e-05}, {'diff': 2.8556000000002496e-05}, {'diff': 2.8903000000000262e-05}, {'diff': 2.8179999999999178e-...</msg>
<status status="PASS" starttime="20201030 11:52:15.690" endtime="20201030 11:52:15.694"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:15.698" level="INFO">${ACCURACY} = {'diff': [2.8125000000000372e-05, 2.8138000000000468e-05, 2.8527999999999887e-05, 2.8556000000002496e-05, 2.8903000000000262e-05, 2.8179999999999178e-05, 2.8554999999999553e-05, 2.8596999999998263e-05...</msg>
<status status="PASS" starttime="20201030 11:52:15.695" endtime="20201030 11:52:15.698"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.702" level="INFO">NAME: accuracy-TIMER_SLEEP-24-philip</msg>
<status status="PASS" starttime="20201030 11:52:15.701" endtime="20201030 11:52:15.702"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.705" level="INFO">VALUE: [2.8125000000000372e-05, 2.8138000000000468e-05, 2.8527999999999887e-05, 2.8556000000002496e-05, 2.8903000000000262e-05, 2.8179999999999178e-05, 2.8554999999999553e-05, 2.8596999999998263e-05, 2.8972000000002107e-05, 2.89309999999994e-05, 2.8541999999999457e-05, 2.8152999999999512e-05, 2.8138999999999942e-05, 2.8888999999997222e-05, 2.7776999999999663e-05, 2.8540999999999983e-05, 2.816700000000255e-05, 2.8596999999998263e-05, 2.8527999999999887e-05, 2.8500000000000747e-05, 2.8555999999999027e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.8875000000001122e-05, 2.89309999999994e-05, 2.8165999999999608e-05, 2.8165999999999608e-05, 2.8514000000000317e-05, 2.8179999999999178e-05, 2.8098000000000706e-05, 2.8540999999999983e-05, 2.8152000000000038e-05, 2.8554999999999553e-05, 2.8527000000000413e-05, 2.8152999999999512e-05, 2.818100000000212e-05, 2.8542000000002926e-05, 2.816699999999908e-05, 2.8152000000000038e-05, 2.8527999999999887e-05, 2.8527999999999887e-05, 2.8152999999999512e-05, 2.8541999999999457e-05, 2.7749999999999997e-05, 2.8527999999999887e-05, 2.8542000000002926e-05, 2.8527999999999887e-05, 2.8527000000000413e-05, 2.8471999999998138e-05, 2.8165999999999608e-05]</msg>
<status status="PASS" starttime="20201030 11:52:15.703" endtime="20201030 11:52:15.706"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.699" endtime="20201030 11:52:15.707"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:15.710" endtime="20201030 11:52:15.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.709" endtime="20201030 11:52:15.730"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.708" endtime="20201030 11:52:15.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.353" endtime="20201030 11:52:15.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.352" endtime="20201030 11:52:15.731"></status>
</kw>
<kw name="${duration} = 25" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.740" endtime="20201030 11:52:15.756"></status>
</kw>
<msg timestamp="20201030 11:52:15.757" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.738" endtime="20201030 11:52:15.757"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:15.759" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(25)', 'msg': ['sleep_accuracy_timer_sleep 25\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:15.758" endtime="20201030 11:52:15.759"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.760" endtime="20201030 11:52:15.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.735" endtime="20201030 11:52:15.762"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.733" endtime="20201030 11:52:15.763"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:15.769" endtime="20201030 11:52:16.055"></status>
</kw>
<msg timestamp="20201030 11:52:16.058" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:15.768" endtime="20201030 11:52:16.058"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.066" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020383236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020412931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.059" endtime="20201030 11:52:16.067"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.068" endtime="20201030 11:52:16.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.765" endtime="20201030 11:52:16.070"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.763" endtime="20201030 11:52:16.070"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.074" level="INFO">${RESULT} = [{'diff': 2.969499999999972e-05}, {'diff': 2.9305999999999777e-05}, {'diff': 2.9304999999996834e-05}, {'diff': 2.8986000000001677e-05}, {'diff': 2.9680000000000678e-05}, {'diff': 2.8916999999999832e-0...</msg>
<status status="PASS" starttime="20201030 11:52:16.071" endtime="20201030 11:52:16.074"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.079" level="INFO">${ACCURACY} = {'diff': [2.969499999999972e-05, 2.9305999999999777e-05, 2.9304999999996834e-05, 2.8986000000001677e-05, 2.9680000000000678e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.9305000000000303e-05,...</msg>
<status status="PASS" starttime="20201030 11:52:16.075" endtime="20201030 11:52:16.079"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.084" level="INFO">NAME: accuracy-TIMER_SLEEP-25-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.083" endtime="20201030 11:52:16.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.086" level="INFO">VALUE: [2.969499999999972e-05, 2.9305999999999777e-05, 2.9304999999996834e-05, 2.8986000000001677e-05, 2.9680000000000678e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.9305000000000303e-05, 2.9681000000000152e-05, 2.9721999999999388e-05, 2.9305999999999777e-05, 2.9666999999997112e-05, 2.8916000000000358e-05, 2.969499999999972e-05, 2.89309999999994e-05, 2.9624999999998403e-05, 2.9305999999999777e-05, 2.8916000000000358e-05, 2.9680000000000678e-05, 2.8916999999999832e-05, 2.8916000000000358e-05, 2.8943999999999498e-05, 2.966599999999764e-05, 2.9611000000002302e-05, 2.8874999999997653e-05, 2.9291000000000733e-05, 2.9305999999999777e-05, 2.9681000000000152e-05, 2.9667000000000582e-05, 2.9320000000002816e-05, 2.9319999999999347e-05, 2.9305000000000303e-05, 2.9318999999999873e-05, 2.8929999999999928e-05, 2.969499999999972e-05, 2.9666000000001108e-05, 2.9694000000000248e-05, 2.9292000000000207e-05, 2.9707999999999818e-05, 2.9319000000003342e-05, 2.8916999999999832e-05, 2.89309999999994e-05, 2.9278000000000637e-05, 2.969499999999972e-05, 2.9305999999999777e-05, 2.9681000000000152e-05, 2.9680000000000678e-05, 2.9681000000000152e-05, 2.9305000000000303e-05, 2.9667000000000582e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.085" endtime="20201030 11:52:16.087"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.080" endtime="20201030 11:52:16.087"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.091" endtime="20201030 11:52:16.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.089" endtime="20201030 11:52:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.088" endtime="20201030 11:52:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.732" endtime="20201030 11:52:16.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:15.731" endtime="20201030 11:52:16.112"></status>
</kw>
<kw name="${duration} = 26" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.120" endtime="20201030 11:52:16.137"></status>
</kw>
<msg timestamp="20201030 11:52:16.138" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.119" endtime="20201030 11:52:16.138"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.140" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(26)', 'msg': ['sleep_accuracy_timer_sleep 26\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.139" endtime="20201030 11:52:16.140"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.141" endtime="20201030 11:52:16.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.116" endtime="20201030 11:52:16.143"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.114" endtime="20201030 11:52:16.144"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.150" endtime="20201030 11:52:16.436"></status>
</kw>
<msg timestamp="20201030 11:52:16.439" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.148" endtime="20201030 11:52:16.439"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.447" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020465361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020495042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:16.440" endtime="20201030 11:52:16.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.449" endtime="20201030 11:52:16.450"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.146" endtime="20201030 11:52:16.451"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.144" endtime="20201030 11:52:16.451"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.455" level="INFO">${RESULT} = [{'diff': 2.9681000000000152e-05}, {'diff': 3.077799999999867e-05}, {'diff': 3.082000000000085e-05}, {'diff': 3.0431000000000902e-05}, {'diff': 3.0040999999998014e-05}, {'diff': 3.083300000000094e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:16.452" endtime="20201030 11:52:16.455"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.459" level="INFO">${ACCURACY} = {'diff': [2.9681000000000152e-05, 3.077799999999867e-05, 3.082000000000085e-05, 3.0431000000000902e-05, 3.0040999999998014e-05, 3.083300000000094e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3....</msg>
<status status="PASS" starttime="20201030 11:52:16.456" endtime="20201030 11:52:16.459"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.464" level="INFO">NAME: accuracy-TIMER_SLEEP-26-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.463" endtime="20201030 11:52:16.464"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.466" level="INFO">VALUE: [2.9681000000000152e-05, 3.077799999999867e-05, 3.082000000000085e-05, 3.0431000000000902e-05, 3.0040999999998014e-05, 3.083300000000094e-05, 3.044500000000047e-05, 3.0458000000000568e-05, 3.0832999999997474e-05, 3.0818999999997904e-05, 3.0069000000000623e-05, 3.081900000000137e-05, 3.0069000000000623e-05, 3.0056000000000527e-05, 3.081900000000137e-05, 3.0042000000000957e-05, 3.0402000000002288e-05, 3.041599999999839e-05, 3.0402999999998293e-05, 3.0458000000000568e-05, 3.047300000000308e-05, 3.0374999999999153e-05, 3.0430000000001428e-05, 3.0431000000000902e-05, 3.0430000000001428e-05, 3.0055000000001053e-05, 3.0056000000000527e-05, 3.0083000000000193e-05, 3.0054999999997584e-05, 3.038799999999925e-05, 3.082000000000085e-05, 3.083300000000094e-05, 3.0055000000001053e-05, 3.080600000000128e-05, 3.0055000000001053e-05, 3.0069000000000623e-05, 3.0055000000001053e-05, 3.0054999999997584e-05, 3.0832999999997474e-05, 3.044500000000047e-05, 3.044500000000047e-05, 3.082000000000085e-05, 3.0055000000001053e-05, 3.083400000000042e-05, 3.0041000000001483e-05, 3.0070000000000097e-05, 3.045900000000004e-05, 3.0054999999997584e-05, 3.0431000000000902e-05, 2.9680000000000678e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.465" endtime="20201030 11:52:16.467"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.460" endtime="20201030 11:52:16.467"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.471" endtime="20201030 11:52:16.490"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.469" endtime="20201030 11:52:16.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.468" endtime="20201030 11:52:16.491"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.112" endtime="20201030 11:52:16.492"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.112" endtime="20201030 11:52:16.492"></status>
</kw>
<kw name="${duration} = 27" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.500" endtime="20201030 11:52:16.518"></status>
</kw>
<msg timestamp="20201030 11:52:16.519" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.499" endtime="20201030 11:52:16.519"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.521" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(27)', 'msg': ['sleep_accuracy_timer_sleep 27\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.520" endtime="20201030 11:52:16.522"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.522" endtime="20201030 11:52:16.524"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.496" endtime="20201030 11:52:16.525"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.494" endtime="20201030 11:52:16.525"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.531" endtime="20201030 11:52:16.817"></status>
</kw>
<msg timestamp="20201030 11:52:16.820" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:16.530" endtime="20201030 11:52:16.820"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.828" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022292292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0223235, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:16.821" endtime="20201030 11:52:16.828"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.829" endtime="20201030 11:52:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.527" endtime="20201030 11:52:16.831"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.526" endtime="20201030 11:52:16.832"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:16.835" level="INFO">${RESULT} = [{'diff': 3.120800000000132e-05}, {'diff': 3.15700000000016e-05}, {'diff': 3.120799999999785e-05}, {'diff': 3.083399999999695e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.122200000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:16.832" endtime="20201030 11:52:16.836"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:16.840" level="INFO">${ACCURACY} = {'diff': [3.120800000000132e-05, 3.15700000000016e-05, 3.120799999999785e-05, 3.083399999999695e-05, 3.204199999999949e-05, 3.122200000000089e-05, 3.119499999999775e-05, 3.15700000000016e-05, 3.195799...</msg>
<status status="PASS" starttime="20201030 11:52:16.836" endtime="20201030 11:52:16.840"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.844" level="INFO">NAME: accuracy-TIMER_SLEEP-27-philip</msg>
<status status="PASS" starttime="20201030 11:52:16.843" endtime="20201030 11:52:16.844"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.846" level="INFO">VALUE: [3.120800000000132e-05, 3.15700000000016e-05, 3.120799999999785e-05, 3.083399999999695e-05, 3.204199999999949e-05, 3.122200000000089e-05, 3.119499999999775e-05, 3.15700000000016e-05, 3.19579999999986e-05, 3.118000000000218e-05, 3.120900000000079e-05, 3.155599999999856e-05, 3.154200000000246e-05, 3.0818999999997904e-05, 3.087499999999965e-05, 3.188799999999728e-05, 3.122200000000089e-05, 3.122199999999742e-05, 3.158300000000169e-05, 3.158300000000169e-05, 3.119400000000175e-05, 3.158400000000117e-05, 3.0750000000003e-05, 3.123599999999699e-05, 3.120800000000132e-05, 3.119499999999775e-05, 3.155599999999856e-05, 3.083400000000042e-05, 3.197200000000164e-05, 3.120799999999785e-05, 3.1582999999998224e-05, 3.118100000000165e-05, 3.122200000000089e-05, 3.163899999999997e-05, 3.158300000000169e-05, 3.159700000000126e-05, 3.120800000000132e-05, 3.120899999999732e-05, 3.1610999999997363e-05, 3.1598000000000737e-05, 3.119400000000175e-05, 3.083400000000042e-05, 3.076400000000257e-05, 3.120900000000079e-05, 3.120900000000079e-05, 3.152800000000289e-05, 3.084700000000051e-05, 3.0832999999997474e-05, 3.119500000000122e-05, 3.195800000000207e-05]</msg>
<status status="PASS" starttime="20201030 11:52:16.845" endtime="20201030 11:52:16.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.840" endtime="20201030 11:52:16.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:16.856" endtime="20201030 11:52:16.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.855" endtime="20201030 11:52:16.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.854" endtime="20201030 11:52:16.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.493" endtime="20201030 11:52:16.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.492" endtime="20201030 11:52:16.877"></status>
</kw>
<kw name="${duration} = 28" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.886" endtime="20201030 11:52:16.902"></status>
</kw>
<msg timestamp="20201030 11:52:16.903" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.884" endtime="20201030 11:52:16.903"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:16.905" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(28)', 'msg': ['sleep_accuracy_timer_sleep 28\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:16.904" endtime="20201030 11:52:16.905"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.906" endtime="20201030 11:52:16.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.882" endtime="20201030 11:52:16.908"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.880" endtime="20201030 11:52:16.909"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:16.915" endtime="20201030 11:52:17.201"></status>
</kw>
<msg timestamp="20201030 11:52:17.204" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:16.913" endtime="20201030 11:52:17.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.212" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019899778, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0199325, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:17.205" endtime="20201030 11:52:17.213"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.214" endtime="20201030 11:52:17.215"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.911" endtime="20201030 11:52:17.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.909" endtime="20201030 11:52:17.216"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.220" level="INFO">${RESULT} = [{'diff': 3.272199999999892e-05}, {'diff': 3.197299999999764e-05}, {'diff': 3.234800000000149e-05}, {'diff': 3.2318999999999404e-05}, {'diff': 3.204199999999949e-05}, {'diff': 3.272299999999839e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:17.217" endtime="20201030 11:52:17.220"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.225" level="INFO">${ACCURACY} = {'diff': [3.272199999999892e-05, 3.197299999999764e-05, 3.234800000000149e-05, 3.2318999999999404e-05, 3.204199999999949e-05, 3.272299999999839e-05, 3.197200000000164e-05, 3.2346999999998544e-05, 3.23...</msg>
<status status="PASS" starttime="20201030 11:52:17.221" endtime="20201030 11:52:17.225"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.229" level="INFO">NAME: accuracy-TIMER_SLEEP-28-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.228" endtime="20201030 11:52:17.230"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.232" level="INFO">VALUE: [3.272199999999892e-05, 3.197299999999764e-05, 3.234800000000149e-05, 3.2318999999999404e-05, 3.204199999999949e-05, 3.272299999999839e-05, 3.197200000000164e-05, 3.2346999999998544e-05, 3.234700000000201e-05, 3.195899999999807e-05, 3.240200000000082e-05, 3.2360999999998113e-05, 3.194399999999903e-05, 3.2777000000001194e-05, 3.234700000000201e-05, 3.195900000000154e-05, 3.2805000000000334e-05, 3.19579999999986e-05, 3.238799999999778e-05, 3.198600000000121e-05, 3.273599999999849e-05, 3.197200000000164e-05, 3.195800000000207e-05, 3.272299999999839e-05, 3.277800000000067e-05, 3.197199999999817e-05, 3.275000000000153e-05, 3.197200000000164e-05, 3.236100000000158e-05, 3.270800000000282e-05, 3.270899999999882e-05, 3.198600000000121e-05, 3.2346999999998544e-05, 3.236100000000158e-05, 3.270799999999935e-05, 3.234700000000201e-05, 3.19579999999986e-05, 3.273599999999849e-05, 3.273600000000196e-05, 3.234700000000201e-05, 3.240300000000029e-05, 3.272199999999892e-05, 3.19449999999985e-05, 3.2346999999998544e-05, 3.198599999999774e-05, 3.2332999999998974e-05, 3.273599999999849e-05, 3.197200000000164e-05, 3.233400000000192e-05, 3.2346999999998544e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.231" endtime="20201030 11:52:17.233"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.226" endtime="20201030 11:52:17.233"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.237" endtime="20201030 11:52:17.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.235" endtime="20201030 11:52:17.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.234" endtime="20201030 11:52:17.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.878" endtime="20201030 11:52:17.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:16.878" endtime="20201030 11:52:17.258"></status>
</kw>
<kw name="${duration} = 29" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.266" endtime="20201030 11:52:17.281"></status>
</kw>
<msg timestamp="20201030 11:52:17.281" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.264" endtime="20201030 11:52:17.281"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.284" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(29)', 'msg': ['sleep_accuracy_timer_sleep 29\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.282" endtime="20201030 11:52:17.284"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.285" endtime="20201030 11:52:17.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.262" endtime="20201030 11:52:17.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.260" endtime="20201030 11:52:17.287"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.294" endtime="20201030 11:52:17.580"></status>
</kw>
<msg timestamp="20201030 11:52:17.583" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.292" endtime="20201030 11:52:17.584"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.592" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019433333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019466431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.585" endtime="20201030 11:52:17.592"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.593" endtime="20201030 11:52:17.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.290" endtime="20201030 11:52:17.595"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.288" endtime="20201030 11:52:17.596"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.599" level="INFO">${RESULT} = [{'diff': 3.309799999999877e-05}, {'diff': 3.272199999999892e-05}, {'diff': 3.306999999999963e-05}, {'diff': 3.3555000000001084e-05}, {'diff': 3.388799999999928e-05}, {'diff': 3.348599999999924e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:17.596" endtime="20201030 11:52:17.600"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.604" level="INFO">${ACCURACY} = {'diff': [3.309799999999877e-05, 3.272199999999892e-05, 3.306999999999963e-05, 3.3555000000001084e-05, 3.388799999999928e-05, 3.348599999999924e-05, 3.3055000000000584e-05, 3.348599999999924e-05, 3.34...</msg>
<status status="PASS" starttime="20201030 11:52:17.600" endtime="20201030 11:52:17.604"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.608" level="INFO">NAME: accuracy-TIMER_SLEEP-29-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.607" endtime="20201030 11:52:17.608"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.610" level="INFO">VALUE: [3.309799999999877e-05, 3.272199999999892e-05, 3.306999999999963e-05, 3.3555000000001084e-05, 3.388799999999928e-05, 3.348599999999924e-05, 3.3055000000000584e-05, 3.348599999999924e-05, 3.349999999999881e-05, 3.3110999999998864e-05, 3.311199999999834e-05, 3.349999999999881e-05, 3.391700000000136e-05, 3.3874999999999184e-05, 3.309800000000224e-05, 3.273700000000143e-05, 3.3096999999999294e-05, 3.311100000000233e-05, 3.31250000000019e-05, 3.349999999999881e-05, 3.274999999999806e-05, 3.3860999999999614e-05, 3.3110999999998864e-05, 3.311200000000181e-05, 3.350000000000228e-05, 3.3069000000000154e-05, 3.348599999999924e-05, 3.3888999999998753e-05, 3.348599999999924e-05, 3.347299999999914e-05, 3.388900000000222e-05, 3.348599999999924e-05, 3.393000000000146e-05, 3.341700000000086e-05, 3.275000000000153e-05, 3.348599999999924e-05, 3.311100000000233e-05, 3.349999999999881e-05, 3.354200000000099e-05, 3.347199999999967e-05, 3.348599999999924e-05, 3.383399999999995e-05, 3.273600000000196e-05, 3.3110999999998864e-05, 3.309700000000276e-05, 3.348599999999924e-05, 3.348599999999924e-05, 3.351399999999838e-05, 3.3110999999998864e-05, 3.348600000000271e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.609" endtime="20201030 11:52:17.611"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.604" endtime="20201030 11:52:17.612"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.615" endtime="20201030 11:52:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.614" endtime="20201030 11:52:17.635"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.613" endtime="20201030 11:52:17.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.258" endtime="20201030 11:52:17.636"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.258" endtime="20201030 11:52:17.636"></status>
</kw>
<kw name="${duration} = 30" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.645" endtime="20201030 11:52:17.661"></status>
</kw>
<msg timestamp="20201030 11:52:17.661" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.643" endtime="20201030 11:52:17.662"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.664" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(30)', 'msg': ['sleep_accuracy_timer_sleep 30\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:17.662" endtime="20201030 11:52:17.664"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.665" endtime="20201030 11:52:17.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.641" endtime="20201030 11:52:17.667"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.639" endtime="20201030 11:52:17.668"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.674" endtime="20201030 11:52:17.960"></status>
</kw>
<msg timestamp="20201030 11:52:17.963" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.672" endtime="20201030 11:52:17.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.971" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020416333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020459042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:17.964" endtime="20201030 11:52:17.972"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:17.972" endtime="20201030 11:52:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.670" endtime="20201030 11:52:17.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.668" endtime="20201030 11:52:17.975"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:17.979" level="INFO">${RESULT} = [{'diff': 4.2709000000001884e-05}, {'diff': 4.2639000000000565e-05}, {'diff': 4.291600000000048e-05}, {'diff': 4.2583000000002286e-05}, {'diff': 4.2875000000001245e-05}, {'diff': 4.29999999999979e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:17.976" endtime="20201030 11:52:17.979"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:17.983" level="INFO">${ACCURACY} = {'diff': [4.2709000000001884e-05, 4.2639000000000565e-05, 4.291600000000048e-05, 4.2583000000002286e-05, 4.2875000000001245e-05, 4.29999999999979e-05, 4.251400000000044e-05, 4.277700000000079e-05, 4.3...</msg>
<status status="PASS" starttime="20201030 11:52:17.980" endtime="20201030 11:52:17.983"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.987" level="INFO">NAME: accuracy-TIMER_SLEEP-30-philip</msg>
<status status="PASS" starttime="20201030 11:52:17.986" endtime="20201030 11:52:17.988"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:17.990" level="INFO">VALUE: [4.2709000000001884e-05, 4.2639000000000565e-05, 4.291600000000048e-05, 4.2583000000002286e-05, 4.2875000000001245e-05, 4.29999999999979e-05, 4.251400000000044e-05, 4.277700000000079e-05, 4.300000000000137e-05, 4.277700000000079e-05, 4.2666999999999705e-05, 4.2625000000000995e-05, 4.2625000000000995e-05, 4.2653000000000135e-05, 4.2568999999999246e-05, 4.2666999999999705e-05, 4.2389000000000315e-05, 4.254199999999958e-05, 4.3153000000000635e-05, 4.279199999999983e-05, 4.2709000000001884e-05, 4.2944999999999095e-05, 4.250000000000087e-05, 4.3139000000001065e-05, 4.265200000000066e-05, 4.258400000000176e-05, 4.3222999999998485e-05, 4.2554999999999676e-05, 4.3082999999999316e-05, 4.242999999999955e-05, 4.300000000000137e-05, 4.272200000000198e-05, 4.291600000000048e-05, 4.2582999999998816e-05, 4.3208999999998915e-05, 4.319399999999987e-05, 4.2653000000000135e-05, 4.2582999999998816e-05, 4.3167000000000205e-05, 4.3068999999999746e-05, 4.2958999999998665e-05, 4.2653000000000135e-05, 4.3139000000001065e-05, 4.300000000000137e-05, 4.282000000000244e-05, 4.2653000000000135e-05, 4.2445000000002064e-05, 4.3110999999998456e-05, 4.256999999999872e-05, 4.3152999999997166e-05]</msg>
<status status="PASS" starttime="20201030 11:52:17.989" endtime="20201030 11:52:17.991"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.984" endtime="20201030 11:52:17.992"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:17.996" endtime="20201030 11:52:18.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.994" endtime="20201030 11:52:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.993" endtime="20201030 11:52:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.637" endtime="20201030 11:52:18.016"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:17.636" endtime="20201030 11:52:18.016"></status>
</kw>
<kw name="${duration} = 31" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.025" endtime="20201030 11:52:18.042"></status>
</kw>
<msg timestamp="20201030 11:52:18.042" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.023" endtime="20201030 11:52:18.042"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.045" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(31)', 'msg': ['sleep_accuracy_timer_sleep 31\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.043" endtime="20201030 11:52:18.045"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.046" endtime="20201030 11:52:18.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.021" endtime="20201030 11:52:18.048"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.019" endtime="20201030 11:52:18.049"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.056" endtime="20201030 11:52:18.341"></status>
</kw>
<msg timestamp="20201030 11:52:18.344" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.054" endtime="20201030 11:52:18.344"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.352" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020092208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020135583, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.345" endtime="20201030 11:52:18.352"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.353" endtime="20201030 11:52:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.051" endtime="20201030 11:52:18.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.050" endtime="20201030 11:52:18.356"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.360" level="INFO">${RESULT} = [{'diff': 4.3374999999998276e-05}, {'diff': 4.3874999999998776e-05}, {'diff': 4.4153000000001635e-05}, {'diff': 4.422200000000001e-05}, {'diff': 4.429099999999839e-05}, {'diff': 4.408299999999685e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:18.356" endtime="20201030 11:52:18.360"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.365" level="INFO">${ACCURACY} = {'diff': [4.3374999999998276e-05, 4.3874999999998776e-05, 4.4153000000001635e-05, 4.422200000000001e-05, 4.429099999999839e-05, 4.408299999999685e-05, 4.3569000000000246e-05, 4.427799999999829e-05, 4....</msg>
<status status="PASS" starttime="20201030 11:52:18.361" endtime="20201030 11:52:18.365"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.369" level="INFO">NAME: accuracy-TIMER_SLEEP-31-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.368" endtime="20201030 11:52:18.369"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.371" level="INFO">VALUE: [4.3374999999998276e-05, 4.3874999999998776e-05, 4.4153000000001635e-05, 4.422200000000001e-05, 4.429099999999839e-05, 4.408299999999685e-05, 4.3569000000000246e-05, 4.427799999999829e-05, 4.4153000000001635e-05, 4.415200000000216e-05, 4.3847000000003106e-05, 4.3695000000003315e-05, 4.3444999999999595e-05, 4.3431000000000025e-05, 4.3860999999999206e-05, 4.3375000000001745e-05, 4.3874999999998776e-05, 4.3736999999998555e-05, 4.334800000000208e-05, 4.3582999999999816e-05, 4.4305000000001427e-05, 4.423599999999958e-05, 4.429100000000186e-05, 4.377699999999832e-05, 4.401399999999847e-05, 4.392999999999758e-05, 4.393000000000105e-05, 4.4138999999998596e-05, 4.404199999999761e-05, 4.3694999999999845e-05, 4.39860000000028e-05, 4.3917000000000955e-05, 4.355600000000015e-05, 4.407000000000022e-05, 4.39999999999989e-05, 4.3639000000001565e-05, 4.4153000000001635e-05, 4.3625000000001996e-05, 4.4208999999999915e-05, 4.3888999999998346e-05, 4.3653000000001135e-05, 4.379100000000136e-05, 4.4138999999998596e-05, 4.413799999999912e-05, 4.4012999999999e-05, 4.344400000000012e-05, 4.34999999999984e-05, 4.3888999999998346e-05, 4.3874999999998776e-05, 4.348599999999883e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.370" endtime="20201030 11:52:18.372"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.365" endtime="20201030 11:52:18.373"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.376" endtime="20201030 11:52:18.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.375" endtime="20201030 11:52:18.396"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.374" endtime="20201030 11:52:18.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.017" endtime="20201030 11:52:18.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.017" endtime="20201030 11:52:18.397"></status>
</kw>
<kw name="${duration} = 32" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.406" endtime="20201030 11:52:18.423"></status>
</kw>
<msg timestamp="20201030 11:52:18.423" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.404" endtime="20201030 11:52:18.423"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.425" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(32)', 'msg': ['sleep_accuracy_timer_sleep 32\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.424" endtime="20201030 11:52:18.426"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.427" endtime="20201030 11:52:18.428"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.402" endtime="20201030 11:52:18.429"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.400" endtime="20201030 11:52:18.429"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.435" endtime="20201030 11:52:18.721"></status>
</kw>
<msg timestamp="20201030 11:52:18.725" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.434" endtime="20201030 11:52:18.725"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.733" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020136806, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020181194, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.726" endtime="20201030 11:52:18.733"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.734" endtime="20201030 11:52:18.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.431" endtime="20201030 11:52:18.736"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.430" endtime="20201030 11:52:18.737"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:18.740" level="INFO">${RESULT} = [{'diff': 4.438799999999937e-05}, {'diff': 4.4360999999999706e-05}, {'diff': 4.497200000000076e-05}, {'diff': 4.4388999999998846e-05}, {'diff': 4.4667000000001705e-05}, {'diff': 4.4861000000000206e-05...</msg>
<status status="PASS" starttime="20201030 11:52:18.737" endtime="20201030 11:52:18.741"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:18.745" level="INFO">${ACCURACY} = {'diff': [4.438799999999937e-05, 4.4360999999999706e-05, 4.497200000000076e-05, 4.4388999999998846e-05, 4.4667000000001705e-05, 4.4861000000000206e-05, 4.506899999999828e-05, 4.5083000000001316e-05, 4...</msg>
<status status="PASS" starttime="20201030 11:52:18.741" endtime="20201030 11:52:18.745"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.749" level="INFO">NAME: accuracy-TIMER_SLEEP-32-philip</msg>
<status status="PASS" starttime="20201030 11:52:18.748" endtime="20201030 11:52:18.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.751" level="INFO">VALUE: [4.438799999999937e-05, 4.4360999999999706e-05, 4.497200000000076e-05, 4.4388999999998846e-05, 4.4667000000001705e-05, 4.4861000000000206e-05, 4.506899999999828e-05, 4.5083000000001316e-05, 4.4847000000000636e-05, 4.4360999999999706e-05, 4.4888999999999346e-05, 4.5152999999999166e-05, 4.4945000000001095e-05, 4.479200000000183e-05, 4.4639000000002566e-05, 4.4709000000000415e-05, 4.5167000000002205e-05, 4.4569000000001247e-05, 4.5013e-05, 4.4861000000000206e-05, 4.507000000000122e-05, 4.4347000000000136e-05, 4.4375000000002746e-05, 4.472200000000051e-05, 4.49999999999999e-05, 4.4861000000000206e-05, 4.5152999999999166e-05, 4.530499999999896e-05, 4.450000000000287e-05, 4.536200000000018e-05, 4.4569000000001247e-05, 4.4597000000000386e-05, 4.4666999999998236e-05, 4.4638999999999096e-05, 4.458400000000029e-05, 4.470799999999747e-05, 4.527799999999929e-05, 4.5166999999998736e-05, 4.4888999999999346e-05, 4.498600000000033e-05, 4.4722999999999985e-05, 4.501399999999947e-05, 4.457000000000072e-05, 4.4624999999999526e-05, 4.4361000000003176e-05, 4.477699999999932e-05, 4.4874999999999776e-05, 4.4597000000000386e-05, 4.495800000000119e-05, 4.493000000000205e-05]</msg>
<status status="PASS" starttime="20201030 11:52:18.750" endtime="20201030 11:52:18.752"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.745" endtime="20201030 11:52:18.753"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:18.756" endtime="20201030 11:52:18.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.755" endtime="20201030 11:52:18.776"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.754" endtime="20201030 11:52:18.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.398" endtime="20201030 11:52:18.777"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.397" endtime="20201030 11:52:18.777"></status>
</kw>
<kw name="${duration} = 33" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.786" endtime="20201030 11:52:18.804"></status>
</kw>
<msg timestamp="20201030 11:52:18.804" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.784" endtime="20201030 11:52:18.804"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:18.806" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(33)', 'msg': ['sleep_accuracy_timer_sleep 33\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:18.805" endtime="20201030 11:52:18.807"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.808" endtime="20201030 11:52:18.809"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.782" endtime="20201030 11:52:18.810"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.780" endtime="20201030 11:52:18.810"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:18.816" endtime="20201030 11:52:19.102"></status>
</kw>
<msg timestamp="20201030 11:52:19.105" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021125069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:18.815" endtime="20201030 11:52:19.105"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.113" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021079292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021125069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.106" endtime="20201030 11:52:19.114"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.115" endtime="20201030 11:52:19.116"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.812" endtime="20201030 11:52:19.117"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.811" endtime="20201030 11:52:19.117"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.121" level="INFO">${RESULT} = [{'diff': 4.577700000000032e-05}, {'diff': 4.579099999999989e-05}, {'diff': 4.607000000000222e-05}, {'diff': 4.577799999999979e-05}, {'diff': 4.6083000000002317e-05}, {'diff': 4.548600000000083e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:19.118" endtime="20201030 11:52:19.121"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.125" level="INFO">${ACCURACY} = {'diff': [4.577700000000032e-05, 4.579099999999989e-05, 4.607000000000222e-05, 4.577799999999979e-05, 4.6083000000002317e-05, 4.548600000000083e-05, 4.586099999999774e-05, 4.576400000000022e-05, 4.565...</msg>
<status status="PASS" starttime="20201030 11:52:19.122" endtime="20201030 11:52:19.125"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.130" level="INFO">NAME: accuracy-TIMER_SLEEP-33-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.129" endtime="20201030 11:52:19.130"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.132" level="INFO">VALUE: [4.577700000000032e-05, 4.579099999999989e-05, 4.607000000000222e-05, 4.577799999999979e-05, 4.6083000000002317e-05, 4.548600000000083e-05, 4.586099999999774e-05, 4.576400000000022e-05, 4.5653000000003136e-05, 4.5680999999998806e-05, 4.622199999999854e-05, 4.5695000000001845e-05, 4.627800000000029e-05, 4.5930999999999056e-05, 4.5723000000000985e-05, 4.608399999999832e-05, 4.630599999999943e-05, 4.579199999999936e-05, 4.627700000000082e-05, 4.608400000000179e-05, 4.561099999999749e-05, 4.53329999999981e-05, 4.573600000000108e-05, 4.548600000000083e-05, 4.631899999999953e-05, 4.6153000000000166e-05, 4.630499999999996e-05, 4.577799999999979e-05, 4.55000000000004e-05, 4.5583000000001817e-05, 4.548600000000083e-05, 4.577799999999979e-05, 4.554199999999911e-05, 4.629199999999986e-05, 4.6139000000000596e-05, 4.5402999999999416e-05, 4.6166999999999736e-05, 4.5431000000002025e-05, 4.536099999999724e-05, 4.6222999999998016e-05, 4.5945000000002095e-05, 4.534800000000061e-05, 4.6153000000000166e-05, 4.590200000000044e-05, 4.555499999999921e-05, 4.572199999999804e-05, 4.592999999999958e-05, 4.626399999999725e-05, 4.5861000000001206e-05, 4.577799999999979e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.131" endtime="20201030 11:52:19.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.126" endtime="20201030 11:52:19.134"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.138" endtime="20201030 11:52:19.157"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.136" endtime="20201030 11:52:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.135" endtime="20201030 11:52:19.158"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.778" endtime="20201030 11:52:19.159"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:18.777" endtime="20201030 11:52:19.159"></status>
</kw>
<kw name="${duration} = 34" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.167" endtime="20201030 11:52:19.184"></status>
</kw>
<msg timestamp="20201030 11:52:19.185" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.166" endtime="20201030 11:52:19.185"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.187" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(34)', 'msg': ['sleep_accuracy_timer_sleep 34\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.186" endtime="20201030 11:52:19.188"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.188" endtime="20201030 11:52:19.190"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.163" endtime="20201030 11:52:19.191"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.161" endtime="20201030 11:52:19.191"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.197" endtime="20201030 11:52:19.484"></status>
</kw>
<msg timestamp="20201030 11:52:19.487" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.196" endtime="20201030 11:52:19.487"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.495" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020169875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020216181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.488" endtime="20201030 11:52:19.496"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.496" endtime="20201030 11:52:19.498"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.193" endtime="20201030 11:52:19.499"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.192" endtime="20201030 11:52:19.499"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.503" level="INFO">${RESULT} = [{'diff': 4.630599999999943e-05}, {'diff': 4.677800000000079e-05}, {'diff': 4.6875000000001776e-05}, {'diff': 4.6861000000002206e-05}, {'diff': 4.698599999999886e-05}, {'diff': 4.723599999999911e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:19.500" endtime="20201030 11:52:19.503"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.508" level="INFO">${ACCURACY} = {'diff': [4.630599999999943e-05, 4.677800000000079e-05, 4.6875000000001776e-05, 4.6861000000002206e-05, 4.698599999999886e-05, 4.723599999999911e-05, 4.665200000000119e-05, 4.726400000000172e-05, 4.71...</msg>
<status status="PASS" starttime="20201030 11:52:19.504" endtime="20201030 11:52:19.508"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.512" level="INFO">NAME: accuracy-TIMER_SLEEP-34-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.511" endtime="20201030 11:52:19.513"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.515" level="INFO">VALUE: [4.630599999999943e-05, 4.677800000000079e-05, 4.6875000000001776e-05, 4.6861000000002206e-05, 4.698599999999886e-05, 4.723599999999911e-05, 4.665200000000119e-05, 4.726400000000172e-05, 4.7139000000001596e-05, 4.636099999999824e-05, 4.679099999999742e-05, 4.672199999999904e-05, 4.643000000000008e-05, 4.687499999999831e-05, 4.673600000000208e-05, 4.6653000000000666e-05, 4.6889000000001346e-05, 4.6875000000001776e-05, 4.658400000000229e-05, 4.672199999999904e-05, 4.652800000000054e-05, 4.684799999999864e-05, 4.7125000000002026e-05, 4.690200000000144e-05, 4.705600000000018e-05, 4.691599999999754e-05, 4.687499999999831e-05, 4.722200000000301e-05, 4.66939999999999e-05, 4.631899999999953e-05, 4.7153000000001166e-05, 4.695799999999972e-05, 4.720799999999997e-05, 4.672199999999904e-05, 4.643000000000008e-05, 4.672199999999904e-05, 4.705600000000018e-05, 4.658299999999935e-05, 4.722199999999954e-05, 4.656999999999925e-05, 4.7153000000001166e-05, 4.679199999999689e-05, 4.6375000000001276e-05, 4.649999999999793e-05, 4.659699999999892e-05, 4.6875000000001776e-05, 4.680500000000046e-05, 4.720799999999997e-05, 4.63329999999991e-05, 4.715199999999822e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.513" endtime="20201030 11:52:19.515"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.509" endtime="20201030 11:52:19.516"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.520" endtime="20201030 11:52:19.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.518" endtime="20201030 11:52:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.517" endtime="20201030 11:52:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.160" endtime="20201030 11:52:19.540"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.159" endtime="20201030 11:52:19.540"></status>
</kw>
<kw name="${duration} = 35" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.549" endtime="20201030 11:52:19.566"></status>
</kw>
<msg timestamp="20201030 11:52:19.566" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.547" endtime="20201030 11:52:19.567"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.569" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(35)', 'msg': ['sleep_accuracy_timer_sleep 35\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.567" endtime="20201030 11:52:19.569"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.570" endtime="20201030 11:52:19.571"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.545" endtime="20201030 11:52:19.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.543" endtime="20201030 11:52:19.572"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.579" endtime="20201030 11:52:19.866"></status>
</kw>
<msg timestamp="20201030 11:52:19.869" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.577" endtime="20201030 11:52:19.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.877" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020283153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020330778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.870" endtime="20201030 11:52:19.878"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.879" endtime="20201030 11:52:19.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.575" endtime="20201030 11:52:19.881"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.573" endtime="20201030 11:52:19.881"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:19.885" level="INFO">${RESULT} = [{'diff': 4.762499999999906e-05}, {'diff': 4.813899999999913e-05}, {'diff': 4.83330000000011e-05}, {'diff': 4.8013999999999e-05}, {'diff': 4.76940000000009e-05}, {'diff': 4.779200000000136e-05}, {'dif...</msg>
<status status="PASS" starttime="20201030 11:52:19.882" endtime="20201030 11:52:19.885"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:19.889" level="INFO">${ACCURACY} = {'diff': [4.762499999999906e-05, 4.813899999999913e-05, 4.83330000000011e-05, 4.8013999999999e-05, 4.76940000000009e-05, 4.779200000000136e-05, 4.773599999999961e-05, 4.763899999999863e-05, 4.79300000...</msg>
<status status="PASS" starttime="20201030 11:52:19.886" endtime="20201030 11:52:19.889"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.894" level="INFO">NAME: accuracy-TIMER_SLEEP-35-philip</msg>
<status status="PASS" starttime="20201030 11:52:19.893" endtime="20201030 11:52:19.894"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.896" level="INFO">VALUE: [4.762499999999906e-05, 4.813899999999913e-05, 4.83330000000011e-05, 4.8013999999999e-05, 4.76940000000009e-05, 4.779200000000136e-05, 4.773599999999961e-05, 4.763899999999863e-05, 4.793000000000158e-05, 4.75139999999985e-05, 4.737499999999881e-05, 4.7375000000002276e-05, 4.748599999999936e-05, 4.829100000000239e-05, 4.7945000000000626e-05, 4.799999999999943e-05, 4.791699999999802e-05, 4.783400000000007e-05, 4.787499999999931e-05, 4.7959000000000196e-05, 4.784700000000017e-05, 4.780499999999799e-05, 4.76529999999982e-05, 4.7625000000002526e-05, 4.7722999999999516e-05, 4.762499999999906e-05, 4.808400000000032e-05, 4.801299999999953e-05, 4.779099999999842e-05, 4.745800000000022e-05, 4.762499999999906e-05, 4.799999999999943e-05, 4.738899999999838e-05, 4.743000000000108e-05, 4.82079999999975e-05, 4.823600000000011e-05, 4.744400000000065e-05, 4.779199999999789e-05, 4.7917000000001486e-05, 4.816699999999827e-05, 4.7445000000000126e-05, 4.779199999999789e-05, 4.763899999999863e-05, 4.799999999999943e-05, 4.734800000000261e-05, 4.7931000000001056e-05, 4.795799999999725e-05, 4.788899999999888e-05, 4.827799999999882e-05, 4.808300000000085e-05]</msg>
<status status="PASS" starttime="20201030 11:52:19.895" endtime="20201030 11:52:19.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.890" endtime="20201030 11:52:19.897"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:19.901" endtime="20201030 11:52:19.920"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.899" endtime="20201030 11:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.898" endtime="20201030 11:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.541" endtime="20201030 11:52:19.921"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.541" endtime="20201030 11:52:19.922"></status>
</kw>
<kw name="${duration} = 36" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.930" endtime="20201030 11:52:19.950"></status>
</kw>
<msg timestamp="20201030 11:52:19.951" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.929" endtime="20201030 11:52:19.951"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:19.953" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(36)', 'msg': ['sleep_accuracy_timer_sleep 36\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:19.952" endtime="20201030 11:52:19.953"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.954" endtime="20201030 11:52:19.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.926" endtime="20201030 11:52:19.956"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.924" endtime="20201030 11:52:19.957"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:19.963" endtime="20201030 11:52:20.248"></status>
</kw>
<msg timestamp="20201030 11:52:20.251" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:19.962" endtime="20201030 11:52:20.252"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.260" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022890181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022939083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.252" endtime="20201030 11:52:20.260"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.261" endtime="20201030 11:52:20.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.959" endtime="20201030 11:52:20.263"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.957" endtime="20201030 11:52:20.263"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.267" level="INFO">${RESULT} = [{'diff': 4.890199999999997e-05}, {'diff': 4.879099999999942e-05}, {'diff': 4.85139999999995e-05}, {'diff': 4.836100000000024e-05}, {'diff': 4.858300000000135e-05}, {'diff': 4.834700000000067e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:20.264" endtime="20201030 11:52:20.268"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.271" level="INFO">${ACCURACY} = {'diff': [4.890199999999997e-05, 4.879099999999942e-05, 4.85139999999995e-05, 4.836100000000024e-05, 4.858300000000135e-05, 4.834700000000067e-05, 4.843000000000208e-05, 4.912500000000056e-05, 4.86389...</msg>
<status status="PASS" starttime="20201030 11:52:20.268" endtime="20201030 11:52:20.272"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.276" level="INFO">NAME: accuracy-TIMER_SLEEP-36-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.275" endtime="20201030 11:52:20.276"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.278" level="INFO">VALUE: [4.890199999999997e-05, 4.879099999999942e-05, 4.85139999999995e-05, 4.836100000000024e-05, 4.858300000000135e-05, 4.834700000000067e-05, 4.843000000000208e-05, 4.912500000000056e-05, 4.863899999999963e-05, 4.872199999999757e-05, 4.8917000000002486e-05, 4.902799999999957e-05, 4.930600000000243e-05, 4.866699999999877e-05, 4.836100000000024e-05, 4.902799999999957e-05, 4.8737000000000086e-05, 4.8431000000001556e-05, 4.85139999999995e-05, 4.8723000000000516e-05, 4.847200000000079e-05, 4.879099999999942e-05, 4.883299999999813e-05, 4.9014e-05, 4.886100000000074e-05, 4.922199999999807e-05, 4.842999999999861e-05, 4.836100000000024e-05, 4.8931000000002056e-05, 4.852799999999907e-05, 4.879199999999889e-05, 4.870800000000147e-05, 4.923600000000111e-05, 4.92079999999985e-05, 4.929199999999939e-05, 4.857000000000125e-05, 4.8959000000001196e-05, 4.858400000000082e-05, 4.849999999999993e-05, 4.894400000000215e-05, 4.863899999999963e-05, 4.879099999999942e-05, 4.862500000000006e-05, 4.85139999999995e-05, 4.904199999999914e-05, 4.86529999999992e-05, 4.884700000000117e-05, 4.859700000000092e-05, 4.836100000000024e-05, 4.863899999999963e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.277" endtime="20201030 11:52:20.280"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.272" endtime="20201030 11:52:20.280"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.284" endtime="20201030 11:52:20.303"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.282" endtime="20201030 11:52:20.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.281" endtime="20201030 11:52:20.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.922" endtime="20201030 11:52:20.304"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:19.922" endtime="20201030 11:52:20.304"></status>
</kw>
<kw name="${duration} = 37" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.313" endtime="20201030 11:52:20.328"></status>
</kw>
<msg timestamp="20201030 11:52:20.329" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.311" endtime="20201030 11:52:20.329"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.331" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(37)', 'msg': ['sleep_accuracy_timer_sleep 37\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.330" endtime="20201030 11:52:20.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.332" endtime="20201030 11:52:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.309" endtime="20201030 11:52:20.334"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.307" endtime="20201030 11:52:20.335"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.341" endtime="20201030 11:52:20.626"></status>
</kw>
<msg timestamp="20201030 11:52:20.629" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.340" endtime="20201030 11:52:20.629"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.637" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019449236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019499278, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.630" endtime="20201030 11:52:20.638"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.639" endtime="20201030 11:52:20.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.337" endtime="20201030 11:52:20.641"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.335" endtime="20201030 11:52:20.641"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:20.645" level="INFO">${RESULT} = [{'diff': 5.004199999999667e-05}, {'diff': 4.96530000000002e-05}, {'diff': 4.970899999999848e-05}, {'diff': 4.9888000000001403e-05}, {'diff': 4.979199999999989e-05}, {'diff': 4.995899999999873e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:20.642" endtime="20201030 11:52:20.645"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:20.650" level="INFO">${ACCURACY} = {'diff': [5.004199999999667e-05, 4.96530000000002e-05, 4.970899999999848e-05, 4.9888000000001403e-05, 4.979199999999989e-05, 4.995899999999873e-05, 4.9637999999997684e-05, 5.006899999999981e-05, 5.029...</msg>
<status status="PASS" starttime="20201030 11:52:20.646" endtime="20201030 11:52:20.650"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.654" level="INFO">NAME: accuracy-TIMER_SLEEP-37-philip</msg>
<status status="PASS" starttime="20201030 11:52:20.653" endtime="20201030 11:52:20.655"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.657" level="INFO">VALUE: [5.004199999999667e-05, 4.96530000000002e-05, 4.970899999999848e-05, 4.9888000000001403e-05, 4.979199999999989e-05, 4.995899999999873e-05, 4.9637999999997684e-05, 5.006899999999981e-05, 5.029100000000092e-05, 4.937500000000081e-05, 4.95140000000005e-05, 5.008299999999938e-05, 4.991700000000002e-05, 5.030599999999996e-05, 4.998600000000186e-05, 4.994399999999968e-05, 4.981900000000303e-05, 4.9458999999998227e-05, 5.029200000000039e-05, 4.998599999999839e-05, 5.030599999999996e-05, 5.030599999999996e-05, 4.990300000000045e-05, 5.020899999999898e-05, 4.9722999999998047e-05, 4.944399999999918e-05, 4.979100000000042e-05, 4.972199999999857e-05, 4.972199999999857e-05, 4.956899999999931e-05, 4.950000000000093e-05, 4.950000000000093e-05, 4.948599999999789e-05, 5.027799999999735e-05, 4.962499999999759e-05, 4.937500000000081e-05, 4.987499999999784e-05, 4.979199999999989e-05, 4.943099999999909e-05, 4.96530000000002e-05, 4.973599999999814e-05, 4.958399999999835e-05, 4.943099999999909e-05, 5.007000000000275e-05, 4.963900000000063e-05, 5.008399999999885e-05, 4.951300000000103e-05, 4.973600000000161e-05, 4.93330000000021e-05, 5.036100000000224e-05]</msg>
<status status="PASS" starttime="20201030 11:52:20.655" endtime="20201030 11:52:20.658"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.651" endtime="20201030 11:52:20.658"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:20.662" endtime="20201030 11:52:20.681"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.660" endtime="20201030 11:52:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.659" endtime="20201030 11:52:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.305" endtime="20201030 11:52:20.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.305" endtime="20201030 11:52:20.682"></status>
</kw>
<kw name="${duration} = 38" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.691" endtime="20201030 11:52:20.708"></status>
</kw>
<msg timestamp="20201030 11:52:20.709" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.689" endtime="20201030 11:52:20.709"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:20.711" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(38)', 'msg': ['sleep_accuracy_timer_sleep 38\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:20.710" endtime="20201030 11:52:20.711"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.712" endtime="20201030 11:52:20.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.687" endtime="20201030 11:52:20.714"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.685" endtime="20201030 11:52:20.715"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:20.721" endtime="20201030 11:52:21.008"></status>
</kw>
<msg timestamp="20201030 11:52:21.011" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:20.720" endtime="20201030 11:52:21.011"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.019" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020154708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020205639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.012" endtime="20201030 11:52:21.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.020" endtime="20201030 11:52:21.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.717" endtime="20201030 11:52:21.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.715" endtime="20201030 11:52:21.023"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.027" level="INFO">${RESULT} = [{'diff': 5.093100000000059e-05}, {'diff': 5.077800000000132e-05}, {'diff': 5.038900000000138e-05}, {'diff': 5.126400000000225e-05}, {'diff': 5.05279999999976e-05}, {'diff': 5.079200000000089e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:21.023" endtime="20201030 11:52:21.027"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.031" level="INFO">${ACCURACY} = {'diff': [5.093100000000059e-05, 5.077800000000132e-05, 5.038900000000138e-05, 5.126400000000225e-05, 5.05279999999976e-05, 5.079200000000089e-05, 5.111200000000246e-05, 5.093100000000059e-05, 5.04440...</msg>
<status status="PASS" starttime="20201030 11:52:21.028" endtime="20201030 11:52:21.031"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.035" level="INFO">NAME: accuracy-TIMER_SLEEP-38-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.034" endtime="20201030 11:52:21.035"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.038" level="INFO">VALUE: [5.093100000000059e-05, 5.077800000000132e-05, 5.038900000000138e-05, 5.126400000000225e-05, 5.05279999999976e-05, 5.079200000000089e-05, 5.111200000000246e-05, 5.093100000000059e-05, 5.044400000000018e-05, 5.0665999999997824e-05, 5.106900000000081e-05, 5.129100000000192e-05, 5.123599999999964e-05, 5.116700000000127e-05, 5.090300000000145e-05, 5.068000000000086e-05, 5.094400000000068e-05, 5.072199999999957e-05, 5.063899999999816e-05, 5.11530000000017e-05, 5.056999999999978e-05, 5.044499999999966e-05, 5.107000000000028e-05, 5.077800000000132e-05, 5.108399999999985e-05, 5.086199999999874e-05, 5.113900000000213e-05, 5.108300000000038e-05, 5.095800000000025e-05, 5.05140000000015e-05, 5.122200000000007e-05, 5.087499999999884e-05, 5.095800000000025e-05, 5.079099999999795e-05, 5.11530000000017e-05, 5.094400000000068e-05, 5.037499999999834e-05, 5.123599999999964e-05, 5.056999999999978e-05, 5.123599999999964e-05, 5.123599999999964e-05, 5.06530000000012e-05, 5.076299999999881e-05, 5.063899999999816e-05, 5.113900000000213e-05, 5.037500000000181e-05, 5.093100000000059e-05, 5.077800000000132e-05, 5.101299999999906e-05, 5.099999999999896e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.036" endtime="20201030 11:52:21.038"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.032" endtime="20201030 11:52:21.039"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.042" endtime="20201030 11:52:21.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.041" endtime="20201030 11:52:21.062"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.040" endtime="20201030 11:52:21.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.683" endtime="20201030 11:52:21.063"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:20.683" endtime="20201030 11:52:21.063"></status>
</kw>
<kw name="${duration} = 39" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.072" endtime="20201030 11:52:21.090"></status>
</kw>
<msg timestamp="20201030 11:52:21.090" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.070" endtime="20201030 11:52:21.091"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.093" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(39)', 'msg': ['sleep_accuracy_timer_sleep 39\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.091" endtime="20201030 11:52:21.093"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.094" endtime="20201030 11:52:21.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.068" endtime="20201030 11:52:21.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.066" endtime="20201030 11:52:21.097"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.104" endtime="20201030 11:52:21.389"></status>
</kw>
<msg timestamp="20201030 11:52:21.392" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.102" endtime="20201030 11:52:21.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021094458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021145944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.393" endtime="20201030 11:52:21.401"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.402" endtime="20201030 11:52:21.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.100" endtime="20201030 11:52:21.404"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.098" endtime="20201030 11:52:21.404"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.408" level="INFO">${RESULT} = [{'diff': 5.148599999999989e-05}, {'diff': 5.191699999999855e-05}, {'diff': 5.136099999999977e-05}, {'diff': 5.23609999999973e-05}, {'diff': 5.201399999999953e-05}, {'diff': 5.174999999999971e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:21.405" endtime="20201030 11:52:21.409"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.412" level="INFO">${ACCURACY} = {'diff': [5.148599999999989e-05, 5.191699999999855e-05, 5.136099999999977e-05, 5.23609999999973e-05, 5.201399999999953e-05, 5.174999999999971e-05, 5.199999999999996e-05, 5.137500000000281e-05, 5.22220...</msg>
<status status="PASS" starttime="20201030 11:52:21.409" endtime="20201030 11:52:21.413"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.417" level="INFO">NAME: accuracy-TIMER_SLEEP-39-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.416" endtime="20201030 11:52:21.417"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.419" level="INFO">VALUE: [5.148599999999989e-05, 5.191699999999855e-05, 5.136099999999977e-05, 5.23609999999973e-05, 5.201399999999953e-05, 5.174999999999971e-05, 5.199999999999996e-05, 5.137500000000281e-05, 5.222200000000107e-05, 5.222200000000107e-05, 5.21669999999988e-05, 5.136099999999977e-05, 5.172200000000057e-05, 5.156900000000131e-05, 5.172200000000057e-05, 5.159799999999992e-05, 5.229199999999892e-05, 5.170900000000048e-05, 5.180600000000146e-05, 5.215299999999923e-05, 5.21530000000027e-05, 5.186199999999974e-05, 5.143000000000161e-05, 5.1887999999999934e-05, 5.208299999999791e-05, 5.209700000000095e-05, 5.166700000000177e-05, 5.172200000000057e-05, 5.136099999999977e-05, 5.177799999999885e-05, 5.186100000000027e-05, 5.159700000000045e-05, 5.187499999999984e-05, 5.157000000000078e-05, 5.222200000000107e-05, 5.136099999999977e-05, 5.229200000000239e-05, 5.158400000000035e-05, 5.163899999999916e-05, 5.158400000000035e-05, 5.149999999999946e-05, 5.172200000000057e-05, 5.179099999999895e-05, 5.229099999999945e-05, 5.15140000000025e-05, 5.136099999999977e-05, 5.1721999999997104e-05, 5.156900000000131e-05, 5.213899999999966e-05, 5.141699999999805e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.418" endtime="20201030 11:52:21.421"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.413" endtime="20201030 11:52:21.421"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.425" endtime="20201030 11:52:21.444"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.423" endtime="20201030 11:52:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.422" endtime="20201030 11:52:21.445"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.064" endtime="20201030 11:52:21.446"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.063" endtime="20201030 11:52:21.446"></status>
</kw>
<kw name="${duration} = 40" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.454" endtime="20201030 11:52:21.471"></status>
</kw>
<msg timestamp="20201030 11:52:21.472" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.453" endtime="20201030 11:52:21.472"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.474" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(40)', 'msg': ['sleep_accuracy_timer_sleep 40\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.473" endtime="20201030 11:52:21.474"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.475" endtime="20201030 11:52:21.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.450" endtime="20201030 11:52:21.477"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.448" endtime="20201030 11:52:21.478"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.484" endtime="20201030 11:52:21.769"></status>
</kw>
<msg timestamp="20201030 11:52:21.772" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.482" endtime="20201030 11:52:21.772"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.780" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020321597, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020374139, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.773" endtime="20201030 11:52:21.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.781" endtime="20201030 11:52:21.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.480" endtime="20201030 11:52:21.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.478" endtime="20201030 11:52:21.784"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:21.788" level="INFO">${RESULT} = [{'diff': 5.254199999999917e-05}, {'diff': 5.2735999999997674e-05}, {'diff': 5.3221999999998604e-05}, {'diff': 5.284699999999823e-05}, {'diff': 5.286100000000127e-05}, {'diff': 5.251400000000003e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:21.785" endtime="20201030 11:52:21.788"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:21.793" level="INFO">${ACCURACY} = {'diff': [5.254199999999917e-05, 5.2735999999997674e-05, 5.3221999999998604e-05, 5.284699999999823e-05, 5.286100000000127e-05, 5.251400000000003e-05, 5.258400000000135e-05, 5.287499999999737e-05, 5.32...</msg>
<status status="PASS" starttime="20201030 11:52:21.789" endtime="20201030 11:52:21.793"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.797" level="INFO">NAME: accuracy-TIMER_SLEEP-40-philip</msg>
<status status="PASS" starttime="20201030 11:52:21.796" endtime="20201030 11:52:21.798"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.800" level="INFO">VALUE: [5.254199999999917e-05, 5.2735999999997674e-05, 5.3221999999998604e-05, 5.284699999999823e-05, 5.286100000000127e-05, 5.251400000000003e-05, 5.258400000000135e-05, 5.287499999999737e-05, 5.323600000000164e-05, 5.272200000000157e-05, 5.2429999999999144e-05, 5.272200000000157e-05, 5.309699999999848e-05, 5.2429999999999144e-05, 5.2957999999998784e-05, 5.26669999999993e-05, 5.329199999999992e-05, 5.256899999999884e-05, 5.258299999999841e-05, 5.3235999999998174e-05, 5.305499999999977e-05, 5.279199999999942e-05, 5.294500000000216e-05, 5.251400000000003e-05, 5.262499999999712e-05, 5.234800000000067e-05, 5.284699999999823e-05, 5.305499999999977e-05, 5.3221999999998604e-05, 5.255500000000274e-05, 5.255599999999874e-05, 5.276400000000028e-05, 5.291699999999955e-05, 5.291699999999955e-05, 5.313900000000066e-05, 5.280599999999899e-05, 5.3277999999996883e-05, 5.243100000000209e-05, 5.286100000000127e-05, 5.3221999999998604e-05, 5.265299999999973e-05, 5.293099999999912e-05, 5.262500000000059e-05, 5.255600000000221e-05, 5.229199999999892e-05, 5.270900000000148e-05, 5.322200000000207e-05, 5.300000000000096e-05, 5.279099999999995e-05, 5.308299999999891e-05]</msg>
<status status="PASS" starttime="20201030 11:52:21.798" endtime="20201030 11:52:21.800"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.794" endtime="20201030 11:52:21.801"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:21.804" endtime="20201030 11:52:21.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.803" endtime="20201030 11:52:21.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.802" endtime="20201030 11:52:21.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.447" endtime="20201030 11:52:21.825"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.446" endtime="20201030 11:52:21.825"></status>
</kw>
<kw name="${duration} = 41" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.834" endtime="20201030 11:52:21.851"></status>
</kw>
<msg timestamp="20201030 11:52:21.852" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.832" endtime="20201030 11:52:21.852"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:21.854" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(41)', 'msg': ['sleep_accuracy_timer_sleep 41\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:21.853" endtime="20201030 11:52:21.855"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.855" endtime="20201030 11:52:21.857"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.830" endtime="20201030 11:52:21.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.828" endtime="20201030 11:52:21.858"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:21.864" endtime="20201030 11:52:22.150"></status>
</kw>
<msg timestamp="20201030 11:52:22.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:21.863" endtime="20201030 11:52:22.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020426903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020480514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.155" endtime="20201030 11:52:22.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.163" endtime="20201030 11:52:22.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.860" endtime="20201030 11:52:22.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.859" endtime="20201030 11:52:22.165"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.169" level="INFO">${RESULT} = [{'diff': 5.361099999999855e-05}, {'diff': 5.380599999999999e-05}, {'diff': 5.4013999999998064e-05}, {'diff': 5.370900000000248e-05}, {'diff': 5.336200000000124e-05}, {'diff': 5.372300000000205e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:22.166" endtime="20201030 11:52:22.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.173" level="INFO">${ACCURACY} = {'diff': [5.361099999999855e-05, 5.380599999999999e-05, 5.4013999999998064e-05, 5.370900000000248e-05, 5.336200000000124e-05, 5.372300000000205e-05, 5.337499999999787e-05, 5.343099999999962e-05, 5.368...</msg>
<status status="PASS" starttime="20201030 11:52:22.170" endtime="20201030 11:52:22.174"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.178" level="INFO">NAME: accuracy-TIMER_SLEEP-41-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.177" endtime="20201030 11:52:22.178"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.180" level="INFO">VALUE: [5.361099999999855e-05, 5.380599999999999e-05, 5.4013999999998064e-05, 5.370900000000248e-05, 5.336200000000124e-05, 5.372300000000205e-05, 5.337499999999787e-05, 5.343099999999962e-05, 5.3680000000000394e-05, 5.4180000000000894e-05, 5.412500000000209e-05, 5.354200000000017e-05, 5.387499999999837e-05, 5.33609999999983e-05, 5.350000000000146e-05, 5.388900000000141e-05, 5.4249999999998744e-05, 5.358299999999941e-05, 5.4235999999999174e-05, 5.336100000000177e-05, 5.363899999999769e-05, 5.362500000000159e-05, 5.393100000000012e-05, 5.373700000000162e-05, 5.355599999999974e-05, 5.358399999999888e-05, 5.4166000000001324e-05, 5.388899999999794e-05, 5.387499999999837e-05, 5.406900000000034e-05, 5.409699999999948e-05, 5.3777999999997383e-05, 5.329100000000045e-05, 5.359699999999898e-05, 5.33609999999983e-05, 5.351400000000103e-05, 5.350000000000146e-05, 5.365300000000073e-05, 5.36670000000003e-05, 5.358299999999941e-05, 5.363900000000116e-05, 5.336100000000177e-05, 5.3513999999997564e-05, 5.372299999999858e-05, 5.4291999999997453e-05, 5.336200000000124e-05, 5.3902000000001504e-05, 5.4221999999999604e-05, 5.3430000000000144e-05, 5.398600000000239e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.179" endtime="20201030 11:52:22.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.174" endtime="20201030 11:52:22.186"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.190" endtime="20201030 11:52:22.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.188" endtime="20201030 11:52:22.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.187" endtime="20201030 11:52:22.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.826" endtime="20201030 11:52:22.210"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:21.825" endtime="20201030 11:52:22.211"></status>
</kw>
<kw name="${duration} = 42" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.219" endtime="20201030 11:52:22.237"></status>
</kw>
<msg timestamp="20201030 11:52:22.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.218" endtime="20201030 11:52:22.237"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.240" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(42)', 'msg': ['sleep_accuracy_timer_sleep 42\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.238" endtime="20201030 11:52:22.240"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.241" endtime="20201030 11:52:22.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.215" endtime="20201030 11:52:22.243"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.213" endtime="20201030 11:52:22.243"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.250" endtime="20201030 11:52:22.535"></status>
</kw>
<msg timestamp="20201030 11:52:22.538" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.248" endtime="20201030 11:52:22.539"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.547" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021107833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021162764, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.539" endtime="20201030 11:52:22.547"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.548" endtime="20201030 11:52:22.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.246" endtime="20201030 11:52:22.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.244" endtime="20201030 11:52:22.550"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.554" level="INFO">${RESULT} = [{'diff': 5.493100000000112e-05}, {'diff': 5.465300000000173e-05}, {'diff': 5.487499999999937e-05}, {'diff': 5.479200000000142e-05}, {'diff': 5.50549999999983e-05}, {'diff': 5.513899999999919e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:22.551" endtime="20201030 11:52:22.554"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.558" level="INFO">${ACCURACY} = {'diff': [5.493100000000112e-05, 5.465300000000173e-05, 5.487499999999937e-05, 5.479200000000142e-05, 5.50549999999983e-05, 5.513899999999919e-05, 5.509700000000048e-05, 5.436199999999877e-05, 5.52230...</msg>
<status status="PASS" starttime="20201030 11:52:22.555" endtime="20201030 11:52:22.559"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.563" level="INFO">NAME: accuracy-TIMER_SLEEP-42-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.562" endtime="20201030 11:52:22.563"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.565" level="INFO">VALUE: [5.493100000000112e-05, 5.465300000000173e-05, 5.487499999999937e-05, 5.479200000000142e-05, 5.50549999999983e-05, 5.513899999999919e-05, 5.509700000000048e-05, 5.436199999999877e-05, 5.522300000000008e-05, 5.443100000000062e-05, 5.501299999999959e-05, 5.508300000000091e-05, 5.479100000000195e-05, 5.4665999999998355e-05, 5.4444000000000714e-05, 5.477800000000185e-05, 5.43609999999993e-05, 5.456900000000084e-05, 5.4722000000000104e-05, 5.515300000000223e-05, 5.497299999999983e-05, 5.4735999999999674e-05, 5.491700000000155e-05, 5.465299999999826e-05, 5.479200000000142e-05, 5.487499999999937e-05, 5.523700000000312e-05, 5.458399999999988e-05, 5.4735999999999674e-05, 5.5151999999999285e-05, 5.455600000000074e-05, 5.451400000000203e-05, 5.458299999999694e-05, 5.465299999999826e-05, 5.46670000000013e-05, 5.45280000000016e-05, 5.487500000000284e-05, 5.513899999999919e-05, 5.45280000000016e-05, 5.513899999999919e-05, 5.484699999999676e-05, 5.433399999999963e-05, 5.479200000000142e-05, 5.4499999999998994e-05, 5.522300000000008e-05, 5.462499999999912e-05, 5.458300000000041e-05, 5.456900000000084e-05, 5.4944000000001214e-05, 5.530500000000202e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.564" endtime="20201030 11:52:22.567"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.559" endtime="20201030 11:52:22.567"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.571" endtime="20201030 11:52:22.590"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.569" endtime="20201030 11:52:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.568" endtime="20201030 11:52:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.211" endtime="20201030 11:52:22.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.211" endtime="20201030 11:52:22.591"></status>
</kw>
<kw name="${duration} = 43" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.600" endtime="20201030 11:52:22.617"></status>
</kw>
<msg timestamp="20201030 11:52:22.618" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.599" endtime="20201030 11:52:22.618"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.620" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(43)', 'msg': ['sleep_accuracy_timer_sleep 43\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.619" endtime="20201030 11:52:22.620"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.621" endtime="20201030 11:52:22.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.596" endtime="20201030 11:52:22.623"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.594" endtime="20201030 11:52:22.624"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.630" endtime="20201030 11:52:22.914"></status>
</kw>
<msg timestamp="20201030 11:52:22.918" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.629" endtime="20201030 11:52:22.918"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.926" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020172028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020228236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:22.919" endtime="20201030 11:52:22.926"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.927" endtime="20201030 11:52:22.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.626" endtime="20201030 11:52:22.929"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.624" endtime="20201030 11:52:22.930"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:22.933" level="INFO">${RESULT} = [{'diff': 5.6207999999998565e-05}, {'diff': 5.5791999999998954e-05}, {'diff': 5.612500000000062e-05}, {'diff': 5.565299999999926e-05}, {'diff': 5.577699999999991e-05}, {'diff': 5.6207999999998565e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:22.930" endtime="20201030 11:52:22.934"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:22.938" level="INFO">${ACCURACY} = {'diff': [5.6207999999998565e-05, 5.5791999999998954e-05, 5.612500000000062e-05, 5.565299999999926e-05, 5.577699999999991e-05, 5.6207999999998565e-05, 5.543099999999815e-05, 5.566699999999883e-05, 5.5...</msg>
<status status="PASS" starttime="20201030 11:52:22.934" endtime="20201030 11:52:22.939"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.943" level="INFO">NAME: accuracy-TIMER_SLEEP-43-philip</msg>
<status status="PASS" starttime="20201030 11:52:22.942" endtime="20201030 11:52:22.943"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.945" level="INFO">VALUE: [5.6207999999998565e-05, 5.5791999999998954e-05, 5.612500000000062e-05, 5.565299999999926e-05, 5.577699999999991e-05, 5.6207999999998565e-05, 5.543099999999815e-05, 5.566699999999883e-05, 5.583300000000166e-05, 5.6013999999996594e-05, 5.544499999999772e-05, 5.541699999999858e-05, 5.5458000000001284e-05, 5.58610000000008e-05, 5.5513999999999564e-05, 5.6222000000001604e-05, 5.6000000000000494e-05, 5.6208000000002034e-05, 5.5527999999999134e-05, 5.566699999999883e-05, 5.5805999999998523e-05, 5.5957999999998315e-05, 5.588899999999994e-05, 5.5736000000000674e-05, 5.5777999999999384e-05, 5.583399999999766e-05, 5.594500000000169e-05, 5.557000000000131e-05, 5.622300000000108e-05, 5.537499999999987e-05, 5.5958000000001784e-05, 5.629099999999998e-05, 5.58610000000008e-05, 5.588899999999994e-05, 5.565299999999926e-05, 5.5722000000001104e-05, 5.530500000000202e-05, 5.579200000000242e-05, 5.609700000000148e-05, 5.613900000000019e-05, 5.606999999999834e-05, 5.6000000000000494e-05, 5.5750000000000244e-05, 5.543100000000162e-05, 5.631899999999912e-05, 5.6055999999998773e-05, 5.5750000000000244e-05, 5.558400000000088e-05, 5.590299999999951e-05, 5.5915999999999605e-05]</msg>
<status status="PASS" starttime="20201030 11:52:22.944" endtime="20201030 11:52:22.946"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.939" endtime="20201030 11:52:22.947"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:22.950" endtime="20201030 11:52:22.969"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.949" endtime="20201030 11:52:22.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.948" endtime="20201030 11:52:22.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.592" endtime="20201030 11:52:22.971"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.592" endtime="20201030 11:52:22.971"></status>
</kw>
<kw name="${duration} = 44" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.979" endtime="20201030 11:52:22.995"></status>
</kw>
<msg timestamp="20201030 11:52:22.996" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.978" endtime="20201030 11:52:22.996"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:22.998" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(44)', 'msg': ['sleep_accuracy_timer_sleep 44\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:22.997" endtime="20201030 11:52:22.999"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:22.999" endtime="20201030 11:52:23.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.975" endtime="20201030 11:52:23.001"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.973" endtime="20201030 11:52:23.002"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.008" endtime="20201030 11:52:23.295"></status>
</kw>
<msg timestamp="20201030 11:52:23.299" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.007" endtime="20201030 11:52:23.299"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.307" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019572583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019629181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.300" endtime="20201030 11:52:23.307"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.308" endtime="20201030 11:52:23.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.004" endtime="20201030 11:52:23.310"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.003" endtime="20201030 11:52:23.311"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.315" level="INFO">${RESULT} = [{'diff': 5.659799999999798e-05}, {'diff': 5.6514000000000564e-05}, {'diff': 5.6708000000002534e-05}, {'diff': 5.694500000000269e-05}, {'diff': 5.68749999999979e-05}, {'diff': 5.688900000000094e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:23.312" endtime="20201030 11:52:23.315"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:23.319" level="INFO">${ACCURACY} = {'diff': [5.659799999999798e-05, 5.6514000000000564e-05, 5.6708000000002534e-05, 5.694500000000269e-05, 5.68749999999979e-05, 5.688900000000094e-05, 5.6429999999999675e-05, 5.659699999999851e-05, 5.73...</msg>
<status status="PASS" starttime="20201030 11:52:23.316" endtime="20201030 11:52:23.319"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.323" level="INFO">NAME: accuracy-TIMER_SLEEP-44-philip</msg>
<status status="PASS" starttime="20201030 11:52:23.322" endtime="20201030 11:52:23.323"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.325" level="INFO">VALUE: [5.659799999999798e-05, 5.6514000000000564e-05, 5.6708000000002534e-05, 5.694500000000269e-05, 5.68749999999979e-05, 5.688900000000094e-05, 5.6429999999999675e-05, 5.659699999999851e-05, 5.731900000000012e-05, 5.637500000000087e-05, 5.713900000000119e-05, 5.6443999999999245e-05, 5.7208000000003034e-05, 5.6457999999998815e-05, 5.716700000000033e-05, 5.688900000000094e-05, 5.6764000000000814e-05, 5.708299999999944e-05, 5.643100000000262e-05, 5.658399999999841e-05, 5.720900000000251e-05, 5.7292000000000454e-05, 5.672300000000158e-05, 5.6943999999999745e-05, 5.6929999999996705e-05, 5.679100000000048e-05, 5.7221999999999135e-05, 5.637500000000087e-05, 5.6957999999999315e-05, 5.713900000000119e-05, 5.6957999999999315e-05, 5.651299999999762e-05, 5.6721999999998635e-05, 5.659699999999851e-05, 5.665300000000026e-05, 5.708400000000238e-05, 5.63749999999974e-05, 5.659800000000145e-05, 5.672300000000158e-05, 5.658300000000241e-05, 5.6791999999999954e-05, 5.687500000000137e-05, 5.6735999999998205e-05, 5.7028000000000634e-05, 5.6693999999999495e-05, 5.6943999999999745e-05, 5.729100000000098e-05, 5.6819999999999093e-05, 5.684700000000223e-05, 5.666699999999983e-05]</msg>
<status status="PASS" starttime="20201030 11:52:23.324" endtime="20201030 11:52:23.326"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.320" endtime="20201030 11:52:23.327"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.330" endtime="20201030 11:52:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.329" endtime="20201030 11:52:23.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.328" endtime="20201030 11:52:23.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.972" endtime="20201030 11:52:23.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:22.971" endtime="20201030 11:52:23.351"></status>
</kw>
<kw name="${duration} = 45" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.360" endtime="20201030 11:52:23.379"></status>
</kw>
<msg timestamp="20201030 11:52:23.380" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.358" endtime="20201030 11:52:23.380"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.382" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(45)', 'msg': ['sleep_accuracy_timer_sleep 45\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.381" endtime="20201030 11:52:23.383"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.383" endtime="20201030 11:52:23.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.356" endtime="20201030 11:52:23.386"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.354" endtime="20201030 11:52:23.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.392" endtime="20201030 11:52:23.678"></status>
</kw>
<msg timestamp="20201030 11:52:23.682" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.391" endtime="20201030 11:52:23.682"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.690" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022985542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023043083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.683" endtime="20201030 11:52:23.690"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.691" endtime="20201030 11:52:23.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.388" endtime="20201030 11:52:23.693"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.387" endtime="20201030 11:52:23.694"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:23.698" level="INFO">${RESULT} = [{'diff': 5.754099999999776e-05}, {'diff': 5.8222000000000135e-05}, {'diff': 5.737500000000187e-05}, {'diff': 5.7458000000003284e-05}, {'diff': 5.758299999999994e-05}, {'diff': 5.8056000000000774e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:23.694" endtime="20201030 11:52:23.698"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:23.702" level="INFO">${ACCURACY} = {'diff': [5.754099999999776e-05, 5.8222000000000135e-05, 5.737500000000187e-05, 5.7458000000003284e-05, 5.758299999999994e-05, 5.8056000000000774e-05, 5.740300000000101e-05, 5.7583999999999413e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:52:23.699" endtime="20201030 11:52:23.702"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.706" level="INFO">NAME: accuracy-TIMER_SLEEP-45-philip</msg>
<status status="PASS" starttime="20201030 11:52:23.705" endtime="20201030 11:52:23.706"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.708" level="INFO">VALUE: [5.754099999999776e-05, 5.8222000000000135e-05, 5.737500000000187e-05, 5.7458000000003284e-05, 5.758299999999994e-05, 5.8056000000000774e-05, 5.740300000000101e-05, 5.7583999999999413e-05, 5.784699999999976e-05, 5.80689999999974e-05, 5.7791999999997484e-05, 5.737500000000187e-05, 5.7583999999999413e-05, 5.7513999999998094e-05, 5.78619999999988e-05, 5.8152000000002285e-05, 5.78749999999989e-05, 5.7652000000001785e-05, 5.8151999999998816e-05, 5.7708000000000065e-05, 5.766699999999736e-05, 5.7444000000000245e-05, 5.765300000000126e-05, 5.784699999999976e-05, 5.765300000000126e-05, 5.787500000000237e-05, 5.765299999999779e-05, 5.833300000000069e-05, 5.8055999999997304e-05, 5.8014000000002064e-05, 5.734799999999873e-05, 5.788900000000194e-05, 5.7833999999999663e-05, 5.736099999999883e-05, 5.7930000000001175e-05, 5.734699999999926e-05, 5.8000000000002494e-05, 5.763899999999822e-05, 5.795899999999979e-05, 5.737500000000187e-05, 5.7929999999997706e-05, 5.7708000000000065e-05, 5.8222000000000135e-05, 5.745899999999929e-05, 5.736099999999883e-05, 5.736099999999883e-05, 5.795899999999979e-05, 5.7485999999998955e-05, 5.793100000000065e-05, 5.759699999999951e-05]</msg>
<status status="PASS" starttime="20201030 11:52:23.707" endtime="20201030 11:52:23.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.702" endtime="20201030 11:52:23.711"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:23.714" endtime="20201030 11:52:23.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.713" endtime="20201030 11:52:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.711" endtime="20201030 11:52:23.734"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.352" endtime="20201030 11:52:23.735"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.351" endtime="20201030 11:52:23.735"></status>
</kw>
<kw name="${duration} = 46" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.743" endtime="20201030 11:52:23.760"></status>
</kw>
<msg timestamp="20201030 11:52:23.761" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.742" endtime="20201030 11:52:23.761"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:23.763" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(46)', 'msg': ['sleep_accuracy_timer_sleep 46\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:23.762" endtime="20201030 11:52:23.764"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.764" endtime="20201030 11:52:23.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.739" endtime="20201030 11:52:23.766"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.737" endtime="20201030 11:52:23.767"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:23.773" endtime="20201030 11:52:24.059"></status>
</kw>
<msg timestamp="20201030 11:52:24.062" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:23.772" endtime="20201030 11:52:24.062"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.070" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020074292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020132847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.063" endtime="20201030 11:52:24.070"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.071" endtime="20201030 11:52:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.769" endtime="20201030 11:52:24.073"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.767" endtime="20201030 11:52:24.074"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.078" level="INFO">${RESULT} = [{'diff': 5.855499999999833e-05}, {'diff': 5.884700000000076e-05}, {'diff': 5.83749999999994e-05}, {'diff': 5.866700000000183e-05}, {'diff': 5.8805999999998054e-05}, {'diff': 5.9235999999997235e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:24.074" endtime="20201030 11:52:24.078"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.082" level="INFO">${ACCURACY} = {'diff': [5.855499999999833e-05, 5.884700000000076e-05, 5.83749999999994e-05, 5.866700000000183e-05, 5.8805999999998054e-05, 5.9235999999997235e-05, 5.908299999999797e-05, 5.836099999999983e-05, 5.902...</msg>
<status status="PASS" starttime="20201030 11:52:24.079" endtime="20201030 11:52:24.083"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.087" level="INFO">NAME: accuracy-TIMER_SLEEP-46-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.086" endtime="20201030 11:52:24.087"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.089" level="INFO">VALUE: [5.855499999999833e-05, 5.884700000000076e-05, 5.83749999999994e-05, 5.866700000000183e-05, 5.8805999999998054e-05, 5.9235999999997235e-05, 5.908299999999797e-05, 5.836099999999983e-05, 5.9028000000002634e-05, 5.888899999999947e-05, 5.836099999999983e-05, 5.8499999999999525e-05, 5.83749999999994e-05, 5.8777999999998914e-05, 5.851299999999962e-05, 5.8666000000002355e-05, 5.9221999999997665e-05, 5.8721999999997165e-05, 5.830500000000155e-05, 5.840300000000201e-05, 5.837500000000287e-05, 5.8722000000000635e-05, 5.916700000000233e-05, 5.843100000000115e-05, 5.863899999999922e-05, 5.8985999999996985e-05, 5.894499999999775e-05, 5.8806000000001524e-05, 5.8930000000002175e-05, 5.8972000000000885e-05, 5.8584000000000414e-05, 5.9292000000002454e-05, 5.9263999999999845e-05, 5.8485999999999955e-05, 5.929099999999951e-05, 5.870899999999707e-05, 5.8499999999999525e-05, 5.888899999999947e-05, 5.8513999999999095e-05, 5.8499999999999525e-05, 5.883300000000119e-05, 5.8569999999997374e-05, 5.915299999999929e-05, 5.888899999999947e-05, 5.841700000000158e-05, 5.865299999999879e-05, 5.8499999999999525e-05, 5.894500000000122e-05, 5.8791999999998484e-05, 5.836099999999983e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.088" endtime="20201030 11:52:24.090"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.083" endtime="20201030 11:52:24.091"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.094" endtime="20201030 11:52:24.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.093" endtime="20201030 11:52:24.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.092" endtime="20201030 11:52:24.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.736" endtime="20201030 11:52:24.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:23.735" endtime="20201030 11:52:24.115"></status>
</kw>
<kw name="${duration} = 47" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.123" endtime="20201030 11:52:24.141"></status>
</kw>
<msg timestamp="20201030 11:52:24.142" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.122" endtime="20201030 11:52:24.142"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.144" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(47)', 'msg': ['sleep_accuracy_timer_sleep 47\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.143" endtime="20201030 11:52:24.145"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.145" endtime="20201030 11:52:24.147"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.120" endtime="20201030 11:52:24.148"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.117" endtime="20201030 11:52:24.148"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.154" endtime="20201030 11:52:24.440"></status>
</kw>
<msg timestamp="20201030 11:52:24.443" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.153" endtime="20201030 11:52:24.443"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.451" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020125889, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020185778, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.444" endtime="20201030 11:52:24.452"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.452" endtime="20201030 11:52:24.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.151" endtime="20201030 11:52:24.455"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.149" endtime="20201030 11:52:24.455"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.459" level="INFO">${RESULT} = [{'diff': 5.988900000000047e-05}, {'diff': 5.943100000000215e-05}, {'diff': 6.031899999999965e-05}, {'diff': 6.0055999999999304e-05}, {'diff': 5.958299999999847e-05}, {'diff': 6.0014000000000595e-05},...</msg>
<status status="PASS" starttime="20201030 11:52:24.456" endtime="20201030 11:52:24.459"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.463" level="INFO">${ACCURACY} = {'diff': [5.988900000000047e-05, 5.943100000000215e-05, 6.031899999999965e-05, 6.0055999999999304e-05, 5.958299999999847e-05, 6.0014000000000595e-05, 5.9527999999999665e-05, 5.9735999999997735e-05, 5....</msg>
<status status="PASS" starttime="20201030 11:52:24.460" endtime="20201030 11:52:24.463"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.467" level="INFO">NAME: accuracy-TIMER_SLEEP-47-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.466" endtime="20201030 11:52:24.468"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.470" level="INFO">VALUE: [5.988900000000047e-05, 5.943100000000215e-05, 6.031899999999965e-05, 6.0055999999999304e-05, 5.958299999999847e-05, 6.0014000000000595e-05, 5.9527999999999665e-05, 5.9735999999997735e-05, 5.9777999999999915e-05, 5.9708000000002065e-05, 6.0041999999999734e-05, 6.0222000000002135e-05, 6.0056000000002774e-05, 6.0291999999999984e-05, 5.9736000000001205e-05, 5.9499999999997055e-05, 6.020899999999857e-05, 5.9514000000000095e-05, 5.972300000000111e-05, 5.991699999999961e-05, 5.9929999999999706e-05, 5.9569999999998374e-05, 5.980499999999958e-05, 5.9514000000000095e-05, 5.9929999999999706e-05, 5.96810000000024e-05, 6.0222000000002135e-05, 6.015300000000029e-05, 6.0320000000002594e-05, 5.98750000000009e-05, 6.027700000000094e-05, 6.0236000000001705e-05, 6.0305999999999554e-05, 5.965299999999979e-05, 6.0070000000002344e-05, 5.997300000000136e-05, 5.965299999999979e-05, 5.965299999999979e-05, 5.9957999999998846e-05, 5.9443999999998776e-05, 5.981899999999915e-05, 6.0013999999997125e-05, 5.95550000000028e-05, 5.98750000000009e-05, 6.033299999999922e-05, 5.93750000000004e-05, 6.0347999999998264e-05, 5.9555999999998804e-05, 6.0264000000000845e-05, 5.943099999999868e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.468" endtime="20201030 11:52:24.471"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.464" endtime="20201030 11:52:24.471"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.475" endtime="20201030 11:52:24.494"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.473" endtime="20201030 11:52:24.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.472" endtime="20201030 11:52:24.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.116" endtime="20201030 11:52:24.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.115" endtime="20201030 11:52:24.495"></status>
</kw>
<kw name="${duration} = 48" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.504" endtime="20201030 11:52:24.522"></status>
</kw>
<msg timestamp="20201030 11:52:24.523" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.502" endtime="20201030 11:52:24.523"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.525" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(48)', 'msg': ['sleep_accuracy_timer_sleep 48\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.524" endtime="20201030 11:52:24.525"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.526" endtime="20201030 11:52:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.500" endtime="20201030 11:52:24.528"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.498" endtime="20201030 11:52:24.529"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.535" endtime="20201030 11:52:24.821"></status>
</kw>
<msg timestamp="20201030 11:52:24.824" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.534" endtime="20201030 11:52:24.824"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.832" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021009097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021070236, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.825" endtime="20201030 11:52:24.833"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.833" endtime="20201030 11:52:24.835"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.531" endtime="20201030 11:52:24.836"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.529" endtime="20201030 11:52:24.836"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:24.840" level="INFO">${RESULT} = [{'diff': 6.113899999999825e-05}, {'diff': 6.0514000000001095e-05}, {'diff': 6.0764000000001345e-05}, {'diff': 6.093100000000018e-05}, {'diff': 6.0721999999999166e-05}, {'diff': 6.106999999999987e-05}...</msg>
<status status="PASS" starttime="20201030 11:52:24.837" endtime="20201030 11:52:24.840"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:24.844" level="INFO">${ACCURACY} = {'diff': [6.113899999999825e-05, 6.0514000000001095e-05, 6.0764000000001345e-05, 6.093100000000018e-05, 6.0721999999999166e-05, 6.106999999999987e-05, 6.065300000000079e-05, 6.062500000000165e-05, 6.0...</msg>
<status status="PASS" starttime="20201030 11:52:24.841" endtime="20201030 11:52:24.844"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.848" level="INFO">NAME: accuracy-TIMER_SLEEP-48-philip</msg>
<status status="PASS" starttime="20201030 11:52:24.847" endtime="20201030 11:52:24.849"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.851" level="INFO">VALUE: [6.113899999999825e-05, 6.0514000000001095e-05, 6.0764000000001345e-05, 6.093100000000018e-05, 6.0721999999999166e-05, 6.106999999999987e-05, 6.065300000000079e-05, 6.062500000000165e-05, 6.063900000000122e-05, 6.0348000000001734e-05, 6.0792000000000485e-05, 6.0736000000002205e-05, 6.080500000000058e-05, 6.05689999999999e-05, 6.036099999999836e-05, 6.1027999999997695e-05, 6.083299999999972e-05, 6.122199999999967e-05, 6.119400000000053e-05, 6.033299999999922e-05, 6.086099999999886e-05, 6.0569999999999374e-05, 6.043099999999968e-05, 6.086099999999886e-05, 6.0721999999999166e-05, 6.036099999999836e-05, 6.0652000000001316e-05, 6.073699999999821e-05, 6.051300000000162e-05, 6.0680000000000456e-05, 6.116599999999792e-05, 6.055500000000033e-05, 6.038900000000097e-05, 6.113900000000172e-05, 6.059699999999904e-05, 6.088900000000147e-05, 6.109700000000301e-05, 6.118100000000043e-05, 6.1028000000001165e-05, 6.122199999999967e-05, 6.0722000000002635e-05, 6.072299999999864e-05, 6.127800000000141e-05, 6.108399999999944e-05, 6.134699999999979e-05, 6.122199999999967e-05, 6.113799999999878e-05, 6.0444000000003245e-05, 6.115199999999835e-05, 6.0971999999999416e-05]</msg>
<status status="PASS" starttime="20201030 11:52:24.849" endtime="20201030 11:52:24.852"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.845" endtime="20201030 11:52:24.853"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:24.857" endtime="20201030 11:52:24.876"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.855" endtime="20201030 11:52:24.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.854" endtime="20201030 11:52:24.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.496" endtime="20201030 11:52:24.877"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.496" endtime="20201030 11:52:24.877"></status>
</kw>
<kw name="${duration} = 49" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.886" endtime="20201030 11:52:24.903"></status>
</kw>
<msg timestamp="20201030 11:52:24.904" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.884" endtime="20201030 11:52:24.904"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:24.906" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(49)', 'msg': ['sleep_accuracy_timer_sleep 49\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:24.905" endtime="20201030 11:52:24.907"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.907" endtime="20201030 11:52:24.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.882" endtime="20201030 11:52:24.909"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.880" endtime="20201030 11:52:24.910"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:24.916" endtime="20201030 11:52:25.202"></status>
</kw>
<msg timestamp="20201030 11:52:25.205" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:24.915" endtime="20201030 11:52:25.205"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.213" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020258208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020320403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.206" endtime="20201030 11:52:25.214"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.215" endtime="20201030 11:52:25.216"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.912" endtime="20201030 11:52:25.217"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.910" endtime="20201030 11:52:25.217"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.221" level="INFO">${RESULT} = [{'diff': 6.2195000000001e-05}, {'diff': 6.177800000000191e-05}, {'diff': 6.151399999999863e-05}, {'diff': 6.222300000000014e-05}, {'diff': 6.219400000000153e-05}, {'diff': 6.163799999999928e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:25.218" endtime="20201030 11:52:25.221"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.226" level="INFO">${ACCURACY} = {'diff': [6.2195000000001e-05, 6.177800000000191e-05, 6.151399999999863e-05, 6.222300000000014e-05, 6.219400000000153e-05, 6.163799999999928e-05, 6.14439999999973e-05, 6.162499999999918e-05, 6.1499999...</msg>
<status status="PASS" starttime="20201030 11:52:25.222" endtime="20201030 11:52:25.226"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.230" level="INFO">NAME: accuracy-TIMER_SLEEP-49-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.229" endtime="20201030 11:52:25.231"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.233" level="INFO">VALUE: [6.2195000000001e-05, 6.177800000000191e-05, 6.151399999999863e-05, 6.222300000000014e-05, 6.219400000000153e-05, 6.163799999999928e-05, 6.14439999999973e-05, 6.162499999999918e-05, 6.149999999999906e-05, 6.137499999999893e-05, 6.208300000000097e-05, 6.163899999999875e-05, 6.152800000000166e-05, 6.194500000000075e-05, 6.215300000000229e-05, 6.143099999999721e-05, 6.172200000000017e-05, 6.208400000000044e-05, 6.222300000000014e-05, 6.179200000000148e-05, 6.136199999999883e-05, 6.184700000000029e-05, 6.22080000000011e-05, 6.194400000000128e-05, 6.149999999999906e-05, 6.192999999999824e-05, 6.208300000000097e-05, 6.190299999999857e-05, 6.15140000000021e-05, 6.136099999999936e-05, 6.201399999999913e-05, 6.213899999999925e-05, 6.195900000000032e-05, 6.179200000000148e-05, 6.158399999999994e-05, 6.13750000000024e-05, 6.208400000000044e-05, 6.17499999999993e-05, 6.20829999999975e-05, 6.227700000000294e-05, 6.176399999999888e-05, 6.222200000000067e-05, 6.215299999999882e-05, 6.179199999999802e-05, 6.15690000000009e-05, 6.144400000000078e-05, 6.229199999999852e-05, 6.165299999999832e-05, 6.230600000000155e-05, 6.179200000000148e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.231" endtime="20201030 11:52:25.234"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.227" endtime="20201030 11:52:25.234"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.238" endtime="20201030 11:52:25.257"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.236" endtime="20201030 11:52:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.235" endtime="20201030 11:52:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.878" endtime="20201030 11:52:25.258"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:24.878" endtime="20201030 11:52:25.258"></status>
</kw>
<kw name="${duration} = 50" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.267" endtime="20201030 11:52:25.284"></status>
</kw>
<msg timestamp="20201030 11:52:25.285" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.265" endtime="20201030 11:52:25.285"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.287" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(50)', 'msg': ['sleep_accuracy_timer_sleep 50\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.286" endtime="20201030 11:52:25.288"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.288" endtime="20201030 11:52:25.290"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.263" endtime="20201030 11:52:25.291"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.261" endtime="20201030 11:52:25.291"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.297" endtime="20201030 11:52:25.583"></status>
</kw>
<msg timestamp="20201030 11:52:25.586" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020415819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.296" endtime="20201030 11:52:25.587"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.595" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020352903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020415819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.587" endtime="20201030 11:52:25.595"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.596" endtime="20201030 11:52:25.597"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.293" endtime="20201030 11:52:25.598"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.292" endtime="20201030 11:52:25.598"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.602" level="INFO">${RESULT} = [{'diff': 6.291600000000314e-05}, {'diff': 6.240299999999907e-05}, {'diff': 6.315299999999982e-05}, {'diff': 6.248600000000049e-05}, {'diff': 6.322200000000167e-05}, {'diff': 6.237499999999993e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:25.599" endtime="20201030 11:52:25.603"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.606" level="INFO">${ACCURACY} = {'diff': [6.291600000000314e-05, 6.240299999999907e-05, 6.315299999999982e-05, 6.248600000000049e-05, 6.322200000000167e-05, 6.237499999999993e-05, 6.281899999999868e-05, 6.245800000000135e-05, 6.2582...</msg>
<status status="PASS" starttime="20201030 11:52:25.603" endtime="20201030 11:52:25.607"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.611" level="INFO">NAME: accuracy-TIMER_SLEEP-50-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.610" endtime="20201030 11:52:25.611"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.613" level="INFO">VALUE: [6.291600000000314e-05, 6.240299999999907e-05, 6.315299999999982e-05, 6.248600000000049e-05, 6.322200000000167e-05, 6.237499999999993e-05, 6.281899999999868e-05, 6.245800000000135e-05, 6.2582999999998e-05, 6.258300000000147e-05, 6.272200000000117e-05, 6.284699999999782e-05, 6.265299999999932e-05, 6.25279999999992e-05, 6.279199999999902e-05, 6.258400000000094e-05, 6.263899999999975e-05, 6.263899999999975e-05, 6.244400000000178e-05, 6.250000000000006e-05, 6.237499999999993e-05, 6.306899999999893e-05, 6.280500000000258e-05, 6.305499999999936e-05, 6.286099999999739e-05, 6.242999999999874e-05, 6.251399999999963e-05, 6.336099999999789e-05, 6.241699999999864e-05, 6.245900000000082e-05, 6.315299999999982e-05, 6.330600000000255e-05, 6.279199999999902e-05, 6.315200000000035e-05, 6.257000000000137e-05, 6.32500000000008e-05, 6.2889e-05, 6.322200000000167e-05, 6.326400000000038e-05, 6.27080000000016e-05, 6.297199999999795e-05, 6.279200000000248e-05, 6.291699999999914e-05, 6.268100000000193e-05, 6.315300000000329e-05, 6.32219999999982e-05, 6.287500000000043e-05, 6.244499999999778e-05, 6.236100000000036e-05, 6.267999999999899e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.612" endtime="20201030 11:52:25.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.607" endtime="20201030 11:52:25.615"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:25.618" endtime="20201030 11:52:25.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.617" endtime="20201030 11:52:25.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.615" endtime="20201030 11:52:25.638"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.259" endtime="20201030 11:52:25.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.259" endtime="20201030 11:52:25.639"></status>
</kw>
<kw name="${duration} = 51" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.647" endtime="20201030 11:52:25.666"></status>
</kw>
<msg timestamp="20201030 11:52:25.666" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.646" endtime="20201030 11:52:25.667"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.669" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(51)', 'msg': ['sleep_accuracy_timer_sleep 51\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:25.667" endtime="20201030 11:52:25.669"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.670" endtime="20201030 11:52:25.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.643" endtime="20201030 11:52:25.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.641" endtime="20201030 11:52:25.672"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.679" endtime="20201030 11:52:25.964"></status>
</kw>
<msg timestamp="20201030 11:52:25.968" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.677" endtime="20201030 11:52:25.968"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.976" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021376681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021440819, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:25.969" endtime="20201030 11:52:25.976"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:25.977" endtime="20201030 11:52:25.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.675" endtime="20201030 11:52:25.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.673" endtime="20201030 11:52:25.980"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:25.983" level="INFO">${RESULT} = [{'diff': 6.413799999999831e-05}, {'diff': 6.386199999999786e-05}, {'diff': 6.351300000000115e-05}, {'diff': 6.39439999999998e-05}, {'diff': 6.342999999999974e-05}, {'diff': 6.376400000000088e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:25.980" endtime="20201030 11:52:25.984"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:25.988" level="INFO">${ACCURACY} = {'diff': [6.413799999999831e-05, 6.386199999999786e-05, 6.351300000000115e-05, 6.39439999999998e-05, 6.342999999999974e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.363899999999728e-05, 6.394399...</msg>
<status status="PASS" starttime="20201030 11:52:25.984" endtime="20201030 11:52:25.988"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.992" level="INFO">NAME: accuracy-TIMER_SLEEP-51-philip</msg>
<status status="PASS" starttime="20201030 11:52:25.991" endtime="20201030 11:52:25.992"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:25.994" level="INFO">VALUE: [6.413799999999831e-05, 6.386199999999786e-05, 6.351300000000115e-05, 6.39439999999998e-05, 6.342999999999974e-05, 6.376400000000088e-05, 6.39439999999998e-05, 6.363899999999728e-05, 6.39439999999998e-05, 6.387500000000143e-05, 6.343099999999921e-05, 6.372200000000217e-05, 6.422200000000267e-05, 6.35280000000002e-05, 6.358399999999848e-05, 6.343099999999921e-05, 6.377800000000045e-05, 6.377800000000045e-05, 6.373599999999827e-05, 6.413800000000178e-05, 6.35280000000002e-05, 6.34439999999993e-05, 6.373599999999827e-05, 6.400000000000156e-05, 6.337499999999746e-05, 6.40829999999995e-05, 6.344499999999878e-05, 6.386099999999839e-05, 6.345899999999835e-05, 6.351400000000063e-05, 6.367999999999999e-05, 6.330599999999909e-05, 6.42089999999991e-05, 6.365300000000032e-05, 6.350000000000106e-05, 6.35699999999989e-05, 6.42219999999992e-05, 6.415300000000082e-05, 6.351400000000063e-05, 6.401399999999766e-05, 6.363900000000075e-05, 6.377800000000045e-05, 6.400000000000156e-05, 6.359700000000204e-05, 6.35699999999989e-05, 6.416700000000039e-05, 6.401399999999766e-05, 6.357000000000237e-05, 6.343100000000268e-05, 6.393099999999971e-05]</msg>
<status status="PASS" starttime="20201030 11:52:25.993" endtime="20201030 11:52:25.996"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.988" endtime="20201030 11:52:25.997"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.000" endtime="20201030 11:52:26.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.999" endtime="20201030 11:52:26.020"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.998" endtime="20201030 11:52:26.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.640" endtime="20201030 11:52:26.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:25.639" endtime="20201030 11:52:26.021"></status>
</kw>
<kw name="${duration} = 52" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.030" endtime="20201030 11:52:26.047"></status>
</kw>
<msg timestamp="20201030 11:52:26.048" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.028" endtime="20201030 11:52:26.048"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.050" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(52)', 'msg': ['sleep_accuracy_timer_sleep 52\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.049" endtime="20201030 11:52:26.050"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.051" endtime="20201030 11:52:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.025" endtime="20201030 11:52:26.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.023" endtime="20201030 11:52:26.053"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.060" endtime="20201030 11:52:26.347"></status>
</kw>
<msg timestamp="20201030 11:52:26.350" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.058" endtime="20201030 11:52:26.350"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.358" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020443722, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020508208, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.351" endtime="20201030 11:52:26.359"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.360" endtime="20201030 11:52:26.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.056" endtime="20201030 11:52:26.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.054" endtime="20201030 11:52:26.362"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.366" level="INFO">${RESULT} = [{'diff': 6.448599999999902e-05}, {'diff': 6.505500000000136e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.459699999999957e-05}, {'diff': 6.486099999999939e-05}, {'diff': 6.487500000000243e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:26.363" endtime="20201030 11:52:26.366"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:26.371" level="INFO">${ACCURACY} = {'diff': [6.448599999999902e-05, 6.505500000000136e-05, 6.486099999999939e-05, 6.459699999999957e-05, 6.486099999999939e-05, 6.487500000000243e-05, 6.479199999999755e-05, 6.433299999999975e-05, 6.5222...</msg>
<status status="PASS" starttime="20201030 11:52:26.367" endtime="20201030 11:52:26.371"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.375" level="INFO">NAME: accuracy-TIMER_SLEEP-52-philip</msg>
<status status="PASS" starttime="20201030 11:52:26.374" endtime="20201030 11:52:26.376"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.378" level="INFO">VALUE: [6.448599999999902e-05, 6.505500000000136e-05, 6.486099999999939e-05, 6.459699999999957e-05, 6.486099999999939e-05, 6.487500000000243e-05, 6.479199999999755e-05, 6.433299999999975e-05, 6.52220000000002e-05, 6.502700000000222e-05, 6.479200000000102e-05, 6.458399999999948e-05, 6.481900000000068e-05, 6.472300000000264e-05, 6.529100000000204e-05, 6.450000000000206e-05, 6.527800000000195e-05, 6.449999999999859e-05, 6.491700000000114e-05, 6.437499999999846e-05, 6.4583e-05, 6.529199999999805e-05, 6.524999999999934e-05, 6.477800000000145e-05, 6.529200000000152e-05, 6.465300000000132e-05, 6.458399999999948e-05, 6.515299999999835e-05, 6.437499999999846e-05, 6.47089999999996e-05, 6.465199999999838e-05, 6.515199999999888e-05, 6.47500000000023e-05, 6.531900000000118e-05, 6.522199999999673e-05, 6.44440000000003e-05, 6.441699999999717e-05, 6.454200000000077e-05, 6.456900000000043e-05, 6.483399999999973e-05, 6.530600000000109e-05, 6.499999999999909e-05, 6.515300000000182e-05, 6.522299999999967e-05, 6.501399999999866e-05, 6.502799999999823e-05, 6.47219999999997e-05, 6.448599999999902e-05, 6.504200000000127e-05, 6.488899999999853e-05]</msg>
<status status="PASS" starttime="20201030 11:52:26.376" endtime="20201030 11:52:26.379"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.372" endtime="20201030 11:52:26.379"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.383" endtime="20201030 11:52:26.402"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.381" endtime="20201030 11:52:26.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.380" endtime="20201030 11:52:26.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.022" endtime="20201030 11:52:26.403"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.021" endtime="20201030 11:52:26.403"></status>
</kw>
<kw name="${duration} = 53" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.412" endtime="20201030 11:52:26.430"></status>
</kw>
<msg timestamp="20201030 11:52:26.430" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.410" endtime="20201030 11:52:26.431"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.433" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(53)', 'msg': ['sleep_accuracy_timer_sleep 53\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.431" endtime="20201030 11:52:26.433"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.434" endtime="20201030 11:52:26.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.408" endtime="20201030 11:52:26.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.406" endtime="20201030 11:52:26.436"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.443" endtime="20201030 11:52:26.729"></status>
</kw>
<msg timestamp="20201030 11:52:26.732" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.441" endtime="20201030 11:52:26.732"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.740" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019625319, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019690875, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.733" endtime="20201030 11:52:26.741"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.742" endtime="20201030 11:52:26.743"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.439" endtime="20201030 11:52:26.744"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.437" endtime="20201030 11:52:26.744"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:26.748" level="INFO">${RESULT} = [{'diff': 6.555600000000134e-05}, {'diff': 6.545800000000088e-05}, {'diff': 6.606900000000193e-05}, {'diff': 6.536099999999989e-05}, {'diff': 6.593099999999824e-05}, {'diff': 6.530600000000109e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:26.745" endtime="20201030 11:52:26.748"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:26.752" level="INFO">${ACCURACY} = {'diff': [6.555600000000134e-05, 6.545800000000088e-05, 6.606900000000193e-05, 6.536099999999989e-05, 6.593099999999824e-05, 6.530600000000109e-05, 6.601399999999966e-05, 6.572300000000017e-05, 6.5931...</msg>
<status status="PASS" starttime="20201030 11:52:26.749" endtime="20201030 11:52:26.752"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.757" level="INFO">NAME: accuracy-TIMER_SLEEP-53-philip</msg>
<status status="PASS" starttime="20201030 11:52:26.756" endtime="20201030 11:52:26.757"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.759" level="INFO">VALUE: [6.555600000000134e-05, 6.545800000000088e-05, 6.606900000000193e-05, 6.536099999999989e-05, 6.593099999999824e-05, 6.530600000000109e-05, 6.601399999999966e-05, 6.572300000000017e-05, 6.593100000000171e-05, 6.536200000000283e-05, 6.570799999999766e-05, 6.545800000000088e-05, 6.615199999999988e-05, 6.549999999999959e-05, 6.551399999999916e-05, 6.544399999999784e-05, 6.565299999999885e-05, 6.572199999999723e-05, 6.586100000000039e-05, 6.551400000000263e-05, 6.60969999999976e-05, 6.551399999999916e-05, 6.537499999999946e-05, 6.552799999999873e-05, 6.594499999999781e-05, 6.556999999999744e-05, 6.597200000000095e-05, 6.586100000000039e-05, 6.536099999999989e-05, 6.587499999999996e-05, 6.581900000000168e-05, 6.555500000000186e-05, 6.536099999999989e-05, 6.54440000000013e-05, 6.534700000000032e-05, 6.580599999999812e-05, 6.549999999999959e-05, 6.62220000000012e-05, 6.608400000000098e-05, 6.625000000000034e-05, 6.570800000000113e-05, 6.551299999999968e-05, 6.544399999999784e-05, 6.59440000000018e-05, 6.54029999999986e-05, 6.537499999999946e-05, 6.586099999999692e-05, 6.612500000000021e-05, 6.548600000000002e-05, 6.584699999999735e-05]</msg>
<status status="PASS" starttime="20201030 11:52:26.758" endtime="20201030 11:52:26.760"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.753" endtime="20201030 11:52:26.760"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:26.764" endtime="20201030 11:52:26.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.762" endtime="20201030 11:52:26.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.761" endtime="20201030 11:52:26.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.404" endtime="20201030 11:52:26.784"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.404" endtime="20201030 11:52:26.785"></status>
</kw>
<kw name="${duration} = 54" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.793" endtime="20201030 11:52:26.813"></status>
</kw>
<msg timestamp="20201030 11:52:26.813" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.792" endtime="20201030 11:52:26.813"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:26.815" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(54)', 'msg': ['sleep_accuracy_timer_sleep 54\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:26.814" endtime="20201030 11:52:26.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.817" endtime="20201030 11:52:26.818"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.789" endtime="20201030 11:52:26.819"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.787" endtime="20201030 11:52:26.819"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:26.825" endtime="20201030 11:52:27.111"></status>
</kw>
<msg timestamp="20201030 11:52:27.114" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:26.824" endtime="20201030 11:52:27.114"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.122" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022753972, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022820792, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.115" endtime="20201030 11:52:27.123"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.123" endtime="20201030 11:52:27.125"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.821" endtime="20201030 11:52:27.126"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.820" endtime="20201030 11:52:27.126"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.130" level="INFO">${RESULT} = [{'diff': 6.681999999999869e-05}, {'diff': 6.661099999999767e-05}, {'diff': 6.727799999999701e-05}, {'diff': 6.687500000000096e-05}, {'diff': 6.730500000000014e-05}, {'diff': 6.701400000000066e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:27.127" endtime="20201030 11:52:27.130"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.134" level="INFO">${ACCURACY} = {'diff': [6.681999999999869e-05, 6.661099999999767e-05, 6.727799999999701e-05, 6.687500000000096e-05, 6.730500000000014e-05, 6.701400000000066e-05, 6.656899999999896e-05, 6.694399999999934e-05, 6.6985...</msg>
<status status="PASS" starttime="20201030 11:52:27.131" endtime="20201030 11:52:27.134"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.138" level="INFO">NAME: accuracy-TIMER_SLEEP-54-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.138" endtime="20201030 11:52:27.139"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.141" level="INFO">VALUE: [6.681999999999869e-05, 6.661099999999767e-05, 6.727799999999701e-05, 6.687500000000096e-05, 6.730500000000014e-05, 6.701400000000066e-05, 6.656899999999896e-05, 6.694399999999934e-05, 6.698599999999805e-05, 6.672199999999823e-05, 6.701400000000066e-05, 6.705599999999937e-05, 6.720799999999916e-05, 6.651400000000016e-05, 6.709800000000155e-05, 6.700000000000109e-05, 6.713900000000078e-05, 6.649999999999712e-05, 6.648699999999702e-05, 6.679100000000007e-05, 6.681899999999921e-05, 6.644499999999831e-05, 6.672199999999823e-05, 6.706899999999946e-05, 6.649999999999712e-05, 6.683400000000173e-05, 6.722199999999873e-05, 6.6583999999998e-05, 6.729200000000005e-05, 6.727800000000048e-05, 6.688900000000053e-05, 6.658400000000148e-05, 6.70839999999985e-05, 6.688799999999759e-05, 6.720799999999916e-05, 6.67359999999978e-05, 6.643000000000274e-05, 6.669399999999909e-05, 6.727800000000048e-05, 6.729200000000005e-05, 6.680499999999964e-05, 6.669499999999856e-05, 6.727800000000048e-05, 6.715300000000035e-05, 6.687500000000096e-05, 6.700000000000109e-05, 6.668099999999899e-05, 6.658400000000148e-05, 6.667999999999952e-05, 6.677799999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.140" endtime="20201030 11:52:27.142"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.135" endtime="20201030 11:52:27.143"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.147" endtime="20201030 11:52:27.166"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.145" endtime="20201030 11:52:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.144" endtime="20201030 11:52:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.786" endtime="20201030 11:52:27.167"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:26.785" endtime="20201030 11:52:27.167"></status>
</kw>
<kw name="${duration} = 55" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.176" endtime="20201030 11:52:27.193"></status>
</kw>
<msg timestamp="20201030 11:52:27.194" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.174" endtime="20201030 11:52:27.194"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.196" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(55)', 'msg': ['sleep_accuracy_timer_sleep 55\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.195" endtime="20201030 11:52:27.196"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.197" endtime="20201030 11:52:27.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.172" endtime="20201030 11:52:27.199"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.170" endtime="20201030 11:52:27.200"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.206" endtime="20201030 11:52:27.491"></status>
</kw>
<msg timestamp="20201030 11:52:27.494" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:27.205" endtime="20201030 11:52:27.495"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.503" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020055042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020123, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:27.495" endtime="20201030 11:52:27.503"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.504" endtime="20201030 11:52:27.505"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.202" endtime="20201030 11:52:27.506"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.200" endtime="20201030 11:52:27.506"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.510" level="INFO">${RESULT} = [{'diff': 6.795799999999991e-05}, {'diff': 6.765300000000085e-05}, {'diff': 6.820800000000016e-05}, {'diff': 6.815299999999788e-05}, {'diff': 6.780600000000012e-05}, {'diff': 6.79160000000012e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:27.507" endtime="20201030 11:52:27.510"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.515" level="INFO">${ACCURACY} = {'diff': [6.795799999999991e-05, 6.765300000000085e-05, 6.820800000000016e-05, 6.815299999999788e-05, 6.780600000000012e-05, 6.79160000000012e-05, 6.749999999999812e-05, 6.745799999999941e-05, 6.81659...</msg>
<status status="PASS" starttime="20201030 11:52:27.511" endtime="20201030 11:52:27.515"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.519" level="INFO">NAME: accuracy-TIMER_SLEEP-55-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.518" endtime="20201030 11:52:27.520"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.522" level="INFO">VALUE: [6.795799999999991e-05, 6.765300000000085e-05, 6.820800000000016e-05, 6.815299999999788e-05, 6.780600000000012e-05, 6.79160000000012e-05, 6.749999999999812e-05, 6.745799999999941e-05, 6.816599999999798e-05, 6.736100000000189e-05, 6.808300000000003e-05, 6.806900000000046e-05, 6.794400000000034e-05, 6.786100000000239e-05, 6.794400000000034e-05, 6.758299999999953e-05, 6.834799999999933e-05, 6.779200000000055e-05, 6.772199999999923e-05, 6.786100000000239e-05, 6.773700000000174e-05, 6.809799999999908e-05, 6.77090000000026e-05, 6.786200000000187e-05, 6.77220000000027e-05, 6.745799999999941e-05, 6.787500000000196e-05, 6.783299999999978e-05, 6.749999999999812e-05, 6.799999999999862e-05, 6.749999999999812e-05, 6.751399999999769e-05, 6.780600000000012e-05, 6.786099999999892e-05, 6.824999999999887e-05, 6.793100000000024e-05, 6.777800000000098e-05, 6.772300000000217e-05, 6.787500000000196e-05, 6.822199999999973e-05, 6.736100000000189e-05, 6.815200000000188e-05, 6.822199999999973e-05, 6.82909999999981e-05, 6.787499999999849e-05, 6.770799999999966e-05, 6.815299999999788e-05, 6.738899999999756e-05, 6.770800000000313e-05, 6.744500000000278e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.521" endtime="20201030 11:52:27.529"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.516" endtime="20201030 11:52:27.529"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.533" endtime="20201030 11:52:27.552"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.531" endtime="20201030 11:52:27.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.530" endtime="20201030 11:52:27.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.168" endtime="20201030 11:52:27.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.168" endtime="20201030 11:52:27.554"></status>
</kw>
<kw name="${duration} = 56" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.562" endtime="20201030 11:52:27.579"></status>
</kw>
<msg timestamp="20201030 11:52:27.580" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.561" endtime="20201030 11:52:27.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(56)', 'msg': ['sleep_accuracy_timer_sleep 56\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.581" endtime="20201030 11:52:27.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.583" endtime="20201030 11:52:27.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.558" endtime="20201030 11:52:27.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.556" endtime="20201030 11:52:27.586"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.592" endtime="20201030 11:52:27.879"></status>
</kw>
<msg timestamp="20201030 11:52:27.882" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.590" endtime="20201030 11:52:27.882"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.890" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019513903, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019582639, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.883" endtime="20201030 11:52:27.891"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.892" endtime="20201030 11:52:27.893"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.588" endtime="20201030 11:52:27.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.586" endtime="20201030 11:52:27.894"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:27.898" level="INFO">${RESULT} = [{'diff': 6.87359999999998e-05}, {'diff': 6.837499999999899e-05}, {'diff': 6.843099999999727e-05}, {'diff': 6.852799999999826e-05}, {'diff': 6.908300000000103e-05}, {'diff': 6.929200000000205e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:27.895" endtime="20201030 11:52:27.898"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:27.902" level="INFO">${ACCURACY} = {'diff': [6.87359999999998e-05, 6.837499999999899e-05, 6.843099999999727e-05, 6.852799999999826e-05, 6.908300000000103e-05, 6.929200000000205e-05, 6.868000000000152e-05, 6.836099999999942e-05, 6.84440...</msg>
<status status="PASS" starttime="20201030 11:52:27.899" endtime="20201030 11:52:27.902"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.907" level="INFO">NAME: accuracy-TIMER_SLEEP-56-philip</msg>
<status status="PASS" starttime="20201030 11:52:27.905" endtime="20201030 11:52:27.907"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.909" level="INFO">VALUE: [6.87359999999998e-05, 6.837499999999899e-05, 6.843099999999727e-05, 6.852799999999826e-05, 6.908300000000103e-05, 6.929200000000205e-05, 6.868000000000152e-05, 6.836099999999942e-05, 6.844400000000084e-05, 6.897199999999701e-05, 6.837499999999899e-05, 6.85970000000001e-05, 6.843000000000127e-05, 6.920799999999769e-05, 6.872200000000023e-05, 6.92360000000003e-05, 6.887499999999949e-05, 6.849999999999912e-05, 6.90840000000005e-05, 6.843100000000074e-05, 6.920800000000116e-05, 6.851299999999921e-05, 6.89299999999983e-05, 6.851399999999869e-05, 6.834699999999985e-05, 6.879100000000207e-05, 6.894499999999734e-05, 6.879199999999808e-05, 6.929200000000205e-05, 6.886099999999992e-05, 6.844500000000031e-05, 6.901400000000266e-05, 6.865299999999838e-05, 6.836099999999942e-05, 6.899999999999962e-05, 6.83619999999989e-05, 6.847199999999998e-05, 6.930499999999867e-05, 6.869400000000109e-05, 6.855500000000139e-05, 6.879100000000207e-05, 6.843100000000074e-05, 6.861099999999967e-05, 6.901399999999919e-05, 6.850000000000259e-05, 6.891700000000167e-05, 6.90840000000005e-05, 6.841700000000117e-05, 6.915300000000235e-05, 6.915299999999888e-05]</msg>
<status status="PASS" starttime="20201030 11:52:27.908" endtime="20201030 11:52:27.910"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.903" endtime="20201030 11:52:27.910"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:27.914" endtime="20201030 11:52:27.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.912" endtime="20201030 11:52:27.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.911" endtime="20201030 11:52:27.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.555" endtime="20201030 11:52:27.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.554" endtime="20201030 11:52:27.935"></status>
</kw>
<kw name="${duration} = 57" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.943" endtime="20201030 11:52:27.962"></status>
</kw>
<msg timestamp="20201030 11:52:27.963" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.942" endtime="20201030 11:52:27.963"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:27.965" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(57)', 'msg': ['sleep_accuracy_timer_sleep 57\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:27.964" endtime="20201030 11:52:27.966"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.966" endtime="20201030 11:52:27.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.939" endtime="20201030 11:52:27.968"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.937" endtime="20201030 11:52:27.969"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:27.975" endtime="20201030 11:52:28.262"></status>
</kw>
<msg timestamp="20201030 11:52:28.265" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:27.974" endtime="20201030 11:52:28.265"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.273" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020438542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020507986, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.266" endtime="20201030 11:52:28.273"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.274" endtime="20201030 11:52:28.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.971" endtime="20201030 11:52:28.276"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.970" endtime="20201030 11:52:28.277"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.281" level="INFO">${RESULT} = [{'diff': 6.944399999999837e-05}, {'diff': 6.965299999999938e-05}, {'diff': 6.984700000000135e-05}, {'diff': 7.027800000000001e-05}, {'diff': 6.97360000000008e-05}, {'diff': 6.963899999999981e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:28.278" endtime="20201030 11:52:28.281"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.285" level="INFO">${ACCURACY} = {'diff': [6.944399999999837e-05, 6.965299999999938e-05, 6.984700000000135e-05, 7.027800000000001e-05, 6.97360000000008e-05, 6.963899999999981e-05, 6.945899999999741e-05, 7.027800000000001e-05, 6.99860...</msg>
<status status="PASS" starttime="20201030 11:52:28.282" endtime="20201030 11:52:28.285"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.289" level="INFO">NAME: accuracy-TIMER_SLEEP-57-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.288" endtime="20201030 11:52:28.289"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.292" level="INFO">VALUE: [6.944399999999837e-05, 6.965299999999938e-05, 6.984700000000135e-05, 7.027800000000001e-05, 6.97360000000008e-05, 6.963899999999981e-05, 6.945899999999741e-05, 7.027800000000001e-05, 6.998600000000105e-05, 6.970900000000113e-05, 6.994399999999887e-05, 6.951300000000021e-05, 6.936100000000042e-05, 6.986099999999745e-05, 6.988900000000006e-05, 6.979199999999908e-05, 6.963899999999981e-05, 6.958299999999806e-05, 6.97360000000008e-05, 6.965299999999938e-05, 6.937499999999999e-05, 7.02360000000013e-05, 7.015299999999988e-05, 6.950000000000012e-05, 6.97230000000007e-05, 7.030499999999967e-05, 6.986099999999745e-05, 6.977700000000003e-05, 6.950000000000012e-05, 6.963899999999981e-05, 6.963899999999981e-05, 6.94299999999988e-05, 6.99299999999993e-05, 7.015299999999988e-05, 6.994499999999834e-05, 6.998600000000105e-05, 6.944499999999784e-05, 6.936100000000042e-05, 6.944399999999837e-05, 6.998700000000052e-05, 6.970899999999766e-05, 6.950000000000012e-05, 7.022199999999826e-05, 7.022199999999826e-05, 6.99169999999992e-05, 6.977799999999951e-05, 6.988900000000006e-05, 7.009699999999813e-05, 6.958300000000153e-05, 6.952799999999926e-05]</msg>
<status status="PASS" starttime="20201030 11:52:28.290" endtime="20201030 11:52:28.293"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.286" endtime="20201030 11:52:28.294"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.297" endtime="20201030 11:52:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.296" endtime="20201030 11:52:28.317"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.295" endtime="20201030 11:52:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.935" endtime="20201030 11:52:28.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:27.935" endtime="20201030 11:52:28.318"></status>
</kw>
<kw name="${duration} = 58" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.327" endtime="20201030 11:52:28.344"></status>
</kw>
<msg timestamp="20201030 11:52:28.345" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.325" endtime="20201030 11:52:28.345"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.347" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(58)', 'msg': ['sleep_accuracy_timer_sleep 58\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.346" endtime="20201030 11:52:28.347"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.348" endtime="20201030 11:52:28.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.323" endtime="20201030 11:52:28.350"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.320" endtime="20201030 11:52:28.351"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.357" endtime="20201030 11:52:28.642"></status>
</kw>
<msg timestamp="20201030 11:52:28.645" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:28.355" endtime="20201030 11:52:28.645"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.653" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019495028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.0195655, 'source': 'DUT_IC', 'event': 'FALLI...</msg>
<status status="PASS" starttime="20201030 11:52:28.646" endtime="20201030 11:52:28.654"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.654" endtime="20201030 11:52:28.656"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.353" endtime="20201030 11:52:28.657"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.351" endtime="20201030 11:52:28.657"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:28.661" level="INFO">${RESULT} = [{'diff': 7.047199999999851e-05}, {'diff': 7.059699999999863e-05}, {'diff': 7.037500000000099e-05}, {'diff': 7.086100000000192e-05}, {'diff': 7.044499999999884e-05}, {'diff': 7.116700000000045e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:28.658" endtime="20201030 11:52:28.661"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:28.666" level="INFO">${ACCURACY} = {'diff': [7.047199999999851e-05, 7.059699999999863e-05, 7.037500000000099e-05, 7.086100000000192e-05, 7.044499999999884e-05, 7.116700000000045e-05, 7.116600000000098e-05, 7.050000000000112e-05, 7.1291...</msg>
<status status="PASS" starttime="20201030 11:52:28.662" endtime="20201030 11:52:28.666"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.670" level="INFO">NAME: accuracy-TIMER_SLEEP-58-philip</msg>
<status status="PASS" starttime="20201030 11:52:28.669" endtime="20201030 11:52:28.670"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.673" level="INFO">VALUE: [7.047199999999851e-05, 7.059699999999863e-05, 7.037500000000099e-05, 7.086100000000192e-05, 7.044499999999884e-05, 7.116700000000045e-05, 7.116600000000098e-05, 7.050000000000112e-05, 7.12910000000011e-05, 7.049999999999765e-05, 7.091600000000073e-05, 7.038900000000056e-05, 7.045799999999894e-05, 7.050000000000112e-05, 7.07499999999979e-05, 7.113900000000131e-05, 7.068099999999952e-05, 7.087499999999802e-05, 7.086099999999845e-05, 7.056999999999897e-05, 7.12230000000022e-05, 7.04299999999998e-05, 7.118100000000002e-05, 7.086099999999845e-05, 7.059699999999863e-05, 7.080500000000017e-05, 7.12910000000011e-05, 7.108300000000303e-05, 7.069399999999962e-05, 7.059699999999863e-05, 7.065300000000038e-05, 7.041600000000023e-05, 7.070899999999866e-05, 7.088899999999759e-05, 7.051400000000069e-05, 7.118100000000002e-05, 7.079200000000008e-05, 7.044400000000284e-05, 7.134699999999938e-05, 7.09300000000003e-05, 7.051400000000069e-05, 7.125000000000187e-05, 7.084700000000235e-05, 7.055600000000287e-05, 7.043099999999927e-05, 7.123599999999883e-05, 7.056999999999897e-05, 7.065300000000038e-05, 7.119400000000012e-05, 7.129200000000058e-05]</msg>
<status status="PASS" starttime="20201030 11:52:28.671" endtime="20201030 11:52:28.673"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.667" endtime="20201030 11:52:28.674"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:28.677" endtime="20201030 11:52:28.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.676" endtime="20201030 11:52:28.697"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.675" endtime="20201030 11:52:28.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.319" endtime="20201030 11:52:28.698"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.318" endtime="20201030 11:52:28.698"></status>
</kw>
<kw name="${duration} = 59" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.707" endtime="20201030 11:52:28.725"></status>
</kw>
<msg timestamp="20201030 11:52:28.726" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.705" endtime="20201030 11:52:28.726"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:28.728" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(59)', 'msg': ['sleep_accuracy_timer_sleep 59\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:28.727" endtime="20201030 11:52:28.728"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.729" endtime="20201030 11:52:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.703" endtime="20201030 11:52:28.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.701" endtime="20201030 11:52:28.732"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:28.738" endtime="20201030 11:52:29.026"></status>
</kw>
<msg timestamp="20201030 11:52:29.029" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:28.737" endtime="20201030 11:52:29.029"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.037" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020464111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020535694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.030" endtime="20201030 11:52:29.038"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.039" endtime="20201030 11:52:29.040"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.734" endtime="20201030 11:52:29.041"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.732" endtime="20201030 11:52:29.041"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.045" level="INFO">${RESULT} = [{'diff': 7.158300000000006e-05}, {'diff': 7.15560000000004e-05}, {'diff': 7.166700000000095e-05}, {'diff': 7.194500000000034e-05}, {'diff': 7.149999999999865e-05}, {'diff': 7.208300000000056e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:29.042" endtime="20201030 11:52:29.045"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.049" level="INFO">${ACCURACY} = {'diff': [7.158300000000006e-05, 7.15560000000004e-05, 7.166700000000095e-05, 7.194500000000034e-05, 7.149999999999865e-05, 7.208300000000056e-05, 7.145799999999994e-05, 7.158300000000006e-05, 7.13329...</msg>
<status status="PASS" starttime="20201030 11:52:29.046" endtime="20201030 11:52:29.049"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.053" level="INFO">NAME: accuracy-TIMER_SLEEP-59-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.052" endtime="20201030 11:52:29.054"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.056" level="INFO">VALUE: [7.158300000000006e-05, 7.15560000000004e-05, 7.166700000000095e-05, 7.194500000000034e-05, 7.149999999999865e-05, 7.208300000000056e-05, 7.145799999999994e-05, 7.158300000000006e-05, 7.133299999999981e-05, 7.187500000000249e-05, 7.186099999999945e-05, 7.172199999999976e-05, 7.187499999999902e-05, 7.159699999999963e-05, 7.230600000000115e-05, 7.220800000000069e-05, 7.134700000000285e-05, 7.186199999999893e-05, 7.184799999999936e-05, 7.194500000000034e-05, 7.202799999999829e-05, 7.158300000000006e-05, 7.18049999999977e-05, 7.136099999999895e-05, 7.154200000000083e-05, 7.172199999999976e-05, 7.155499999999745e-05, 7.158300000000006e-05, 7.223599999999983e-05, 7.208400000000004e-05, 7.172199999999976e-05, 7.208400000000004e-05, 7.220900000000016e-05, 7.19170000000012e-05, 7.199999999999915e-05, 7.14300000000008e-05, 7.208300000000056e-05, 7.149999999999865e-05, 7.186099999999945e-05, 7.134700000000285e-05, 7.218099999999755e-05, 7.151399999999822e-05, 7.143100000000027e-05, 7.158300000000006e-05, 7.144499999999984e-05, 7.183399999999979e-05, 7.18049999999977e-05, 7.151299999999874e-05, 7.229099999999863e-05, 7.149999999999865e-05]</msg>
<status status="PASS" starttime="20201030 11:52:29.054" endtime="20201030 11:52:29.057"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.050" endtime="20201030 11:52:29.057"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.061" endtime="20201030 11:52:29.080"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.059" endtime="20201030 11:52:29.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.058" endtime="20201030 11:52:29.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.699" endtime="20201030 11:52:29.081"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:28.699" endtime="20201030 11:52:29.081"></status>
</kw>
<kw name="${duration} = 60" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.090" endtime="20201030 11:52:29.109"></status>
</kw>
<msg timestamp="20201030 11:52:29.109" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.089" endtime="20201030 11:52:29.110"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.112" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(60)', 'msg': ['sleep_accuracy_timer_sleep 60\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.111" endtime="20201030 11:52:29.112"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.113" endtime="20201030 11:52:29.114"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.086" endtime="20201030 11:52:29.115"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.084" endtime="20201030 11:52:29.115"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.122" endtime="20201030 11:52:29.408"></status>
</kw>
<msg timestamp="20201030 11:52:29.411" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.120" endtime="20201030 11:52:29.411"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.419" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020374833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020447472, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.412" endtime="20201030 11:52:29.420"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.420" endtime="20201030 11:52:29.422"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.118" endtime="20201030 11:52:29.423"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.116" endtime="20201030 11:52:29.423"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.427" level="INFO">${RESULT} = [{'diff': 7.263900000000281e-05}, {'diff': 7.263899999999934e-05}, {'diff': 7.33049999999992e-05}, {'diff': 7.292999999999883e-05}, {'diff': 7.280500000000217e-05}, {'diff': 7.237499999999952e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:29.424" endtime="20201030 11:52:29.427"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.431" level="INFO">${ACCURACY} = {'diff': [7.263900000000281e-05, 7.263899999999934e-05, 7.33049999999992e-05, 7.292999999999883e-05, 7.280500000000217e-05, 7.237499999999952e-05, 7.273599999999686e-05, 7.297200000000101e-05, 7.30419...</msg>
<status status="PASS" starttime="20201030 11:52:29.428" endtime="20201030 11:52:29.431"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.435" level="INFO">NAME: accuracy-TIMER_SLEEP-60-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.434" endtime="20201030 11:52:29.436"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.438" level="INFO">VALUE: [7.263900000000281e-05, 7.263899999999934e-05, 7.33049999999992e-05, 7.292999999999883e-05, 7.280500000000217e-05, 7.237499999999952e-05, 7.273599999999686e-05, 7.297200000000101e-05, 7.304199999999886e-05, 7.269500000000109e-05, 7.308400000000104e-05, 7.272300000000023e-05, 7.334699999999791e-05, 7.29439999999984e-05, 7.265199999999944e-05, 7.273600000000033e-05, 7.28049999999987e-05, 7.248600000000008e-05, 7.320799999999822e-05, 7.258300000000106e-05, 7.280599999999818e-05, 7.273600000000033e-05, 7.329200000000258e-05, 7.268000000000205e-05, 7.258400000000054e-05, 7.286100000000045e-05, 7.301300000000024e-05, 7.266600000000248e-05, 7.30829999999981e-05, 7.323600000000083e-05, 7.265299999999891e-05, 7.234700000000038e-05, 7.305599999999843e-05, 7.254200000000183e-05, 7.279200000000208e-05, 7.287500000000002e-05, 7.293100000000177e-05, 7.251399999999922e-05, 7.308399999999757e-05, 7.258399999999707e-05, 7.290199999999969e-05, 7.287500000000002e-05, 7.272200000000076e-05, 7.24439999999979e-05, 7.286100000000045e-05, 7.279199999999861e-05, 7.244400000000137e-05, 7.279199999999861e-05, 7.251399999999922e-05, 7.323600000000083e-05]</msg>
<status status="PASS" starttime="20201030 11:52:29.436" endtime="20201030 11:52:29.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.432" endtime="20201030 11:52:29.440"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.443" endtime="20201030 11:52:29.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.442" endtime="20201030 11:52:29.463"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.441" endtime="20201030 11:52:29.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.082" endtime="20201030 11:52:29.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.082" endtime="20201030 11:52:29.464"></status>
</kw>
<kw name="${duration} = 61" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.473" endtime="20201030 11:52:29.490"></status>
</kw>
<msg timestamp="20201030 11:52:29.491" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.471" endtime="20201030 11:52:29.491"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.493" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(61)', 'msg': ['sleep_accuracy_timer_sleep 61\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.492" endtime="20201030 11:52:29.494"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.494" endtime="20201030 11:52:29.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.469" endtime="20201030 11:52:29.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.467" endtime="20201030 11:52:29.497"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.503" endtime="20201030 11:52:29.789"></status>
</kw>
<msg timestamp="20201030 11:52:29.792" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.502" endtime="20201030 11:52:29.793"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.801" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019520208, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019594042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.793" endtime="20201030 11:52:29.801"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.802" endtime="20201030 11:52:29.803"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.499" endtime="20201030 11:52:29.804"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.498" endtime="20201030 11:52:29.804"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:29.808" level="INFO">${RESULT} = [{'diff': 7.383399999999832e-05}, {'diff': 7.384699999999841e-05}, {'diff': 7.344400000000237e-05}, {'diff': 7.336100000000095e-05}, {'diff': 7.39439999999994e-05}, {'diff': 7.334699999999791e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:29.805" endtime="20201030 11:52:29.808"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:29.813" level="INFO">${ACCURACY} = {'diff': [7.383399999999832e-05, 7.384699999999841e-05, 7.344400000000237e-05, 7.336100000000095e-05, 7.39439999999994e-05, 7.334699999999791e-05, 7.409699999999866e-05, 7.430599999999968e-05, 7.40830...</msg>
<status status="PASS" starttime="20201030 11:52:29.809" endtime="20201030 11:52:29.813"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.818" level="INFO">NAME: accuracy-TIMER_SLEEP-61-philip</msg>
<status status="PASS" starttime="20201030 11:52:29.817" endtime="20201030 11:52:29.818"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.820" level="INFO">VALUE: [7.383399999999832e-05, 7.384699999999841e-05, 7.344400000000237e-05, 7.336100000000095e-05, 7.39439999999994e-05, 7.334699999999791e-05, 7.409699999999866e-05, 7.430599999999968e-05, 7.408300000000256e-05, 7.365299999999991e-05, 7.365299999999991e-05, 7.358400000000154e-05, 7.423600000000183e-05, 7.35560000000024e-05, 7.348600000000108e-05, 7.345800000000194e-05, 7.372299999999776e-05, 7.427700000000106e-05, 7.431899999999977e-05, 7.39439999999994e-05, 7.36110000000012e-05, 7.363900000000034e-05, 7.377800000000004e-05, 7.39309999999993e-05, 7.351400000000022e-05, 7.39170000000032e-05, 7.344500000000184e-05, 7.348600000000108e-05, 7.363900000000034e-05, 7.43050000000002e-05, 7.416600000000051e-05, 7.429100000000063e-05, 7.392999999999983e-05, 7.420799999999922e-05, 7.336099999999748e-05, 7.359700000000163e-05, 7.384700000000188e-05, 7.351400000000022e-05, 7.35829999999986e-05, 7.352799999999979e-05, 7.401400000000072e-05, 7.43050000000002e-05, 7.372300000000123e-05, 7.398600000000158e-05, 7.379199999999961e-05, 7.361099999999773e-05, 7.37500000000009e-05, 7.406899999999952e-05, 7.388899999999712e-05, 7.342999999999933e-05]</msg>
<status status="PASS" starttime="20201030 11:52:29.819" endtime="20201030 11:52:29.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.814" endtime="20201030 11:52:29.821"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:29.825" endtime="20201030 11:52:29.844"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.823" endtime="20201030 11:52:29.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.822" endtime="20201030 11:52:29.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.465" endtime="20201030 11:52:29.845"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.464" endtime="20201030 11:52:29.846"></status>
</kw>
<kw name="${duration} = 62" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.854" endtime="20201030 11:52:29.872"></status>
</kw>
<msg timestamp="20201030 11:52:29.873" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.853" endtime="20201030 11:52:29.873"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:29.875" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(62)', 'msg': ['sleep_accuracy_timer_sleep 62\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:29.874" endtime="20201030 11:52:29.875"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.876" endtime="20201030 11:52:29.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.850" endtime="20201030 11:52:29.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.848" endtime="20201030 11:52:29.879"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:29.885" endtime="20201030 11:52:30.173"></status>
</kw>
<msg timestamp="20201030 11:52:30.176" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:29.884" endtime="20201030 11:52:30.176"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.184" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020387028, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020461403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.177" endtime="20201030 11:52:30.184"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.185" endtime="20201030 11:52:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.881" endtime="20201030 11:52:30.187"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.879" endtime="20201030 11:52:30.188"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.192" level="INFO">${RESULT} = [{'diff': 7.437499999999805e-05}, {'diff': 7.466700000000048e-05}, {'diff': 7.447199999999904e-05}, {'diff': 7.515300000000141e-05}, {'diff': 7.483399999999932e-05}, {'diff': 7.493000000000083e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:30.188" endtime="20201030 11:52:30.192"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.196" level="INFO">${ACCURACY} = {'diff': [7.437499999999805e-05, 7.466700000000048e-05, 7.447199999999904e-05, 7.515300000000141e-05, 7.483399999999932e-05, 7.493000000000083e-05, 7.456900000000002e-05, 7.493000000000083e-05, 7.4582...</msg>
<status status="PASS" starttime="20201030 11:52:30.193" endtime="20201030 11:52:30.196"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.200" level="INFO">NAME: accuracy-TIMER_SLEEP-62-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.199" endtime="20201030 11:52:30.200"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.202" level="INFO">VALUE: [7.437499999999805e-05, 7.466700000000048e-05, 7.447199999999904e-05, 7.515300000000141e-05, 7.483399999999932e-05, 7.493000000000083e-05, 7.456900000000002e-05, 7.493000000000083e-05, 7.45829999999996e-05, 7.454200000000036e-05, 7.443000000000033e-05, 7.502800000000129e-05, 7.437499999999805e-05, 7.465300000000091e-05, 7.465299999999744e-05, 7.513900000000184e-05, 7.516700000000098e-05, 7.437499999999805e-05, 7.520900000000316e-05, 7.47769999999981e-05, 7.480499999999723e-05, 7.484699999999941e-05, 7.509699999999966e-05, 7.501399999999825e-05, 7.44439999999999e-05, 7.466700000000048e-05, 7.474999999999843e-05, 7.513900000000184e-05, 7.508299999999662e-05, 7.515299999999794e-05, 7.451399999999775e-05, 7.45699999999995e-05, 7.51249999999988e-05, 7.47500000000019e-05, 7.479100000000113e-05, 7.52769999999986e-05, 7.52639999999985e-05, 7.520800000000022e-05, 7.483400000000279e-05, 7.50830000000001e-05, 7.465299999999744e-05, 7.49029999999977e-05, 7.522199999999979e-05, 7.481999999999975e-05, 7.447199999999904e-05, 7.459699999999916e-05, 7.509699999999966e-05, 7.516599999999804e-05, 7.451400000000122e-05, 7.477700000000156e-05]</msg>
<status status="PASS" starttime="20201030 11:52:30.201" endtime="20201030 11:52:30.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.196" endtime="20201030 11:52:30.204"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.207" endtime="20201030 11:52:30.227"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.206" endtime="20201030 11:52:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.205" endtime="20201030 11:52:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.847" endtime="20201030 11:52:30.228"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:29.846" endtime="20201030 11:52:30.228"></status>
</kw>
<kw name="${duration} = 63" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.238" endtime="20201030 11:52:30.259"></status>
</kw>
<msg timestamp="20201030 11:52:30.260" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.236" endtime="20201030 11:52:30.260"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.262" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(63)', 'msg': ['sleep_accuracy_timer_sleep 63\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.261" endtime="20201030 11:52:30.263"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.263" endtime="20201030 11:52:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.233" endtime="20201030 11:52:30.265"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.231" endtime="20201030 11:52:30.266"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.272" endtime="20201030 11:52:30.558"></status>
</kw>
<msg timestamp="20201030 11:52:30.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024280639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.271" endtime="20201030 11:52:30.561"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.569" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.024280639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.024356056, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.562" endtime="20201030 11:52:30.570"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.570" endtime="20201030 11:52:30.572"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.268" endtime="20201030 11:52:30.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.267" endtime="20201030 11:52:30.573"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.577" level="INFO">${RESULT} = [{'diff': 7.541700000000123e-05}, {'diff': 7.619399999999818e-05}, {'diff': 7.61379999999999e-05}, {'diff': 7.573599999999986e-05}, {'diff': 7.541600000000176e-05}, {'diff': 7.599999999999968e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:30.574" endtime="20201030 11:52:30.577"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.581" level="INFO">${ACCURACY} = {'diff': [7.541700000000123e-05, 7.619399999999818e-05, 7.61379999999999e-05, 7.573599999999986e-05, 7.541600000000176e-05, 7.599999999999968e-05, 7.58890000000026e-05, 7.573599999999986e-05, 7.591700...</msg>
<status status="PASS" starttime="20201030 11:52:30.578" endtime="20201030 11:52:30.581"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.585" level="INFO">NAME: accuracy-TIMER_SLEEP-63-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.584" endtime="20201030 11:52:30.586"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.588" level="INFO">VALUE: [7.541700000000123e-05, 7.619399999999818e-05, 7.61379999999999e-05, 7.573599999999986e-05, 7.541600000000176e-05, 7.599999999999968e-05, 7.58890000000026e-05, 7.573599999999986e-05, 7.591700000000173e-05, 7.601399999999925e-05, 7.572200000000029e-05, 7.548600000000308e-05, 7.579200000000161e-05, 7.55700000000005e-05, 7.551299999999928e-05, 7.573599999999986e-05, 7.586099999999998e-05, 7.573599999999986e-05, 7.549999999999918e-05, 7.551400000000222e-05, 7.588899999999912e-05, 7.55830000000006e-05, 7.597300000000001e-05, 7.580599999999771e-05, 7.545899999999994e-05, 7.59449999999974e-05, 7.622300000000026e-05, 7.61379999999999e-05, 7.630600000000168e-05, 7.593000000000183e-05, 7.60830000000011e-05, 7.536099999999948e-05, 7.599999999999968e-05, 7.616700000000198e-05, 7.59440000000014e-05, 7.59310000000013e-05, 7.586099999999998e-05, 7.55700000000005e-05, 7.579200000000161e-05, 7.572299999999976e-05, 7.573699999999933e-05, 7.609700000000066e-05, 7.616599999999904e-05, 7.544399999999743e-05, 7.55830000000006e-05, 7.613899999999937e-05, 7.556899999999755e-05, 7.570899999999672e-05, 7.547200000000004e-05, 7.586099999999998e-05]</msg>
<status status="PASS" starttime="20201030 11:52:30.586" endtime="20201030 11:52:30.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.582" endtime="20201030 11:52:30.590"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.593" endtime="20201030 11:52:30.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.592" endtime="20201030 11:52:30.613"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.591" endtime="20201030 11:52:30.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.229" endtime="20201030 11:52:30.614"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.229" endtime="20201030 11:52:30.614"></status>
</kw>
<kw name="${duration} = 64" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.623" endtime="20201030 11:52:30.641"></status>
</kw>
<msg timestamp="20201030 11:52:30.641" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.621" endtime="20201030 11:52:30.641"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.643" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(64)', 'msg': ['sleep_accuracy_timer_sleep 64\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:30.642" endtime="20201030 11:52:30.644"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.644" endtime="20201030 11:52:30.646"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.619" endtime="20201030 11:52:30.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.617" endtime="20201030 11:52:30.647"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.653" endtime="20201030 11:52:30.938"></status>
</kw>
<msg timestamp="20201030 11:52:30.942" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.652" endtime="20201030 11:52:30.942"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.950" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019632472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019708958, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:30.943" endtime="20201030 11:52:30.950"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:30.951" endtime="20201030 11:52:30.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.649" endtime="20201030 11:52:30.953"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.648" endtime="20201030 11:52:30.954"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:30.958" level="INFO">${RESULT} = [{'diff': 7.648599999999714e-05}, {'diff': 7.715299999999994e-05}, {'diff': 7.651399999999975e-05}, {'diff': 7.686099999999751e-05}, {'diff': 7.637499999999658e-05}, {'diff': 7.650000000000018e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:30.954" endtime="20201030 11:52:30.958"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:30.962" level="INFO">${ACCURACY} = {'diff': [7.648599999999714e-05, 7.715299999999994e-05, 7.651399999999975e-05, 7.686099999999751e-05, 7.637499999999658e-05, 7.650000000000018e-05, 7.663899999999987e-05, 7.687500000000055e-05, 7.6736...</msg>
<status status="PASS" starttime="20201030 11:52:30.959" endtime="20201030 11:52:30.963"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.967" level="INFO">NAME: accuracy-TIMER_SLEEP-64-philip</msg>
<status status="PASS" starttime="20201030 11:52:30.966" endtime="20201030 11:52:30.967"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:30.969" level="INFO">VALUE: [7.648599999999714e-05, 7.715299999999994e-05, 7.651399999999975e-05, 7.686099999999751e-05, 7.637499999999658e-05, 7.650000000000018e-05, 7.663899999999987e-05, 7.687500000000055e-05, 7.673600000000086e-05, 7.659800000000064e-05, 7.673599999999739e-05, 7.693099999999883e-05, 7.723599999999789e-05, 7.719399999999918e-05, 7.725000000000093e-05, 7.636100000000048e-05, 7.705600000000243e-05, 7.694399999999893e-05, 7.641699999999876e-05, 7.716699999999951e-05, 7.711200000000071e-05, 7.658400000000107e-05, 7.644500000000137e-05, 7.686100000000098e-05, 7.700000000000068e-05, 7.6457999999998e-05, 7.636100000000048e-05, 7.67770000000001e-05, 7.645800000000147e-05, 7.665299999999944e-05, 7.656899999999855e-05, 7.730599999999921e-05, 7.706900000000252e-05, 7.652799999999932e-05, 7.686099999999751e-05, 7.643099999999833e-05, 7.672300000000076e-05, 7.701399999999678e-05, 7.680499999999923e-05, 7.687500000000055e-05, 7.652699999999985e-05, 7.651399999999975e-05, 7.729100000000017e-05, 7.665299999999944e-05, 7.701400000000025e-05, 7.693099999999883e-05, 7.673599999999739e-05, 7.658400000000107e-05, 7.725000000000093e-05, 7.70839999999981e-05]</msg>
<status status="PASS" starttime="20201030 11:52:30.968" endtime="20201030 11:52:30.970"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.963" endtime="20201030 11:52:30.971"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:30.974" endtime="20201030 11:52:30.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.973" endtime="20201030 11:52:30.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.972" endtime="20201030 11:52:30.994"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.615" endtime="20201030 11:52:30.995"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.614" endtime="20201030 11:52:30.995"></status>
</kw>
<kw name="${duration} = 65" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.004" endtime="20201030 11:52:31.022"></status>
</kw>
<msg timestamp="20201030 11:52:31.022" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.002" endtime="20201030 11:52:31.022"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.024" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(65)', 'msg': ['sleep_accuracy_timer_sleep 65\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.023" endtime="20201030 11:52:31.025"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.025" endtime="20201030 11:52:31.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.999" endtime="20201030 11:52:31.028"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.997" endtime="20201030 11:52:31.028"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.034" endtime="20201030 11:52:31.321"></status>
</kw>
<msg timestamp="20201030 11:52:31.324" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:31.033" endtime="20201030 11:52:31.324"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.332" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019646861, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019725, 'source': 'DUT_IC', 'event': 'FALLIN...</msg>
<status status="PASS" starttime="20201030 11:52:31.325" endtime="20201030 11:52:31.332"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.333" endtime="20201030 11:52:31.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.030" endtime="20201030 11:52:31.335"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.029" endtime="20201030 11:52:31.336"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:31.340" level="INFO">${RESULT} = [{'diff': 7.81389999999979e-05}, {'diff': 7.787500000000155e-05}, {'diff': 7.781999999999928e-05}, {'diff': 7.809799999999867e-05}, {'diff': 7.82229999999988e-05}, {'diff': 7.750000000000118e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:31.337" endtime="20201030 11:52:31.340"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:31.344" level="INFO">${ACCURACY} = {'diff': [7.81389999999979e-05, 7.787500000000155e-05, 7.781999999999928e-05, 7.809799999999867e-05, 7.82229999999988e-05, 7.750000000000118e-05, 7.758299999999912e-05, 7.751300000000128e-05, 7.823600...</msg>
<status status="PASS" starttime="20201030 11:52:31.341" endtime="20201030 11:52:31.344"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.348" level="INFO">NAME: accuracy-TIMER_SLEEP-65-philip</msg>
<status status="PASS" starttime="20201030 11:52:31.347" endtime="20201030 11:52:31.349"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.351" level="INFO">VALUE: [7.81389999999979e-05, 7.787500000000155e-05, 7.781999999999928e-05, 7.809799999999867e-05, 7.82229999999988e-05, 7.750000000000118e-05, 7.758299999999912e-05, 7.751300000000128e-05, 7.823600000000236e-05, 7.750000000000118e-05, 7.829100000000117e-05, 7.780599999999971e-05, 7.737499999999758e-05, 7.768099999999958e-05, 7.748700000000108e-05, 7.779200000000014e-05, 7.824999999999846e-05, 7.754100000000042e-05, 7.766700000000001e-05, 7.756999999999903e-05, 7.754100000000042e-05, 7.73189999999993e-05, 7.751399999999728e-05, 7.76389999999974e-05, 7.788899999999765e-05, 7.758299999999912e-05, 7.765300000000044e-05, 7.811099999999876e-05, 7.829200000000064e-05, 7.822199999999932e-05, 7.791700000000026e-05, 7.816600000000104e-05, 7.738800000000115e-05, 7.799999999999821e-05, 7.80129999999983e-05, 7.744399999999943e-05, 7.77770000000011e-05, 7.808299999999962e-05, 7.79579999999995e-05, 7.786099999999851e-05, 7.773599999999839e-05, 7.773599999999839e-05, 7.75839999999986e-05, 7.773599999999839e-05, 7.780599999999971e-05, 7.805500000000049e-05, 7.780500000000024e-05, 7.777699999999763e-05, 7.801399999999778e-05, 7.786099999999851e-05]</msg>
<status status="PASS" starttime="20201030 11:52:31.349" endtime="20201030 11:52:31.351"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.345" endtime="20201030 11:52:31.352"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:31.356" endtime="20201030 11:52:31.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.354" endtime="20201030 11:52:31.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.353" endtime="20201030 11:52:31.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.996" endtime="20201030 11:52:31.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:30.995" endtime="20201030 11:52:31.376"></status>
</kw>
<kw name="${duration} = 66" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.385" endtime="20201030 11:52:31.403"></status>
</kw>
<msg timestamp="20201030 11:52:31.404" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.383" endtime="20201030 11:52:31.404"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.406" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(66)', 'msg': ['sleep_accuracy_timer_sleep 66\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.405" endtime="20201030 11:52:31.407"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.407" endtime="20201030 11:52:31.409"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.381" endtime="20201030 11:52:31.410"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.379" endtime="20201030 11:52:31.410"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.416" endtime="20201030 11:52:31.701"></status>
</kw>
<msg timestamp="20201030 11:52:31.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020853597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.415" endtime="20201030 11:52:31.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.713" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020774389, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020853597, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:31.705" endtime="20201030 11:52:31.713"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.714" endtime="20201030 11:52:31.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.412" endtime="20201030 11:52:31.716"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.411" endtime="20201030 11:52:31.716"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:31.720" level="INFO">${RESULT} = [{'diff': 7.920800000000075e-05}, {'diff': 7.855500000000099e-05}, {'diff': 7.874999999999896e-05}, {'diff': 7.851399999999828e-05}, {'diff': 7.90970000000002e-05}, {'diff': 7.86389999999984e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:31.717" endtime="20201030 11:52:31.721"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:31.724" level="INFO">${ACCURACY} = {'diff': [7.920800000000075e-05, 7.855500000000099e-05, 7.874999999999896e-05, 7.851399999999828e-05, 7.90970000000002e-05, 7.86389999999984e-05, 7.865299999999797e-05, 7.901399999999878e-05, 7.854200...</msg>
<status status="PASS" starttime="20201030 11:52:31.721" endtime="20201030 11:52:31.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.729" level="INFO">NAME: accuracy-TIMER_SLEEP-66-philip</msg>
<status status="PASS" starttime="20201030 11:52:31.728" endtime="20201030 11:52:31.729"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.731" level="INFO">VALUE: [7.920800000000075e-05, 7.855500000000099e-05, 7.874999999999896e-05, 7.851399999999828e-05, 7.90970000000002e-05, 7.86389999999984e-05, 7.865299999999797e-05, 7.901399999999878e-05, 7.854200000000089e-05, 7.841700000000076e-05, 7.865300000000144e-05, 7.8458e-05, 7.872199999999982e-05, 7.920800000000075e-05, 7.851399999999828e-05, 7.872199999999982e-05, 7.908300000000063e-05, 7.886099999999951e-05, 7.924999999999946e-05, 7.837499999999858e-05, 7.887499999999908e-05, 7.865299999999797e-05, 7.843100000000033e-05, 7.89450000000004e-05, 7.893100000000083e-05, 7.879199999999767e-05, 7.872199999999982e-05, 7.895799999999703e-05, 7.834699999999944e-05, 7.913900000000237e-05, 7.934700000000044e-05, 7.850000000000218e-05, 7.84030000000012e-05, 7.930599999999774e-05, 7.85839999999996e-05, 7.834700000000291e-05, 7.8458e-05, 7.893100000000083e-05, 7.870800000000025e-05, 7.842999999999739e-05, 7.866600000000154e-05, 7.838899999999815e-05, 7.901400000000225e-05, 7.884799999999942e-05, 7.843000000000086e-05, 7.872199999999982e-05, 7.880600000000071e-05, 7.890299999999822e-05, 7.894499999999693e-05, 7.836099999999901e-05]</msg>
<status status="PASS" starttime="20201030 11:52:31.730" endtime="20201030 11:52:31.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.725" endtime="20201030 11:52:31.733"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:31.737" endtime="20201030 11:52:31.756"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.735" endtime="20201030 11:52:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.734" endtime="20201030 11:52:31.757"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.377" endtime="20201030 11:52:31.758"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.377" endtime="20201030 11:52:31.758"></status>
</kw>
<kw name="${duration} = 67" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.766" endtime="20201030 11:52:31.784"></status>
</kw>
<msg timestamp="20201030 11:52:31.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.765" endtime="20201030 11:52:31.785"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:31.787" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(67)', 'msg': ['sleep_accuracy_timer_sleep 67\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:31.786" endtime="20201030 11:52:31.787"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.788" endtime="20201030 11:52:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.762" endtime="20201030 11:52:31.790"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.760" endtime="20201030 11:52:31.791"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:31.797" endtime="20201030 11:52:32.082"></status>
</kw>
<msg timestamp="20201030 11:52:32.085" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:31.795" endtime="20201030 11:52:32.085"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.093" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01961475, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019694819, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:32.086" endtime="20201030 11:52:32.094"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.094" endtime="20201030 11:52:32.096"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.793" endtime="20201030 11:52:32.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.791" endtime="20201030 11:52:32.097"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:32.101" level="INFO">${RESULT} = [{'diff': 8.006899999999859e-05}, {'diff': 7.984700000000094e-05}, {'diff': 7.942999999999839e-05}, {'diff': 7.987500000000008e-05}, {'diff': 8.008299999999816e-05}, {'diff': 7.951399999999928e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:32.098" endtime="20201030 11:52:32.101"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:32.106" level="INFO">${ACCURACY} = {'diff': [8.006899999999859e-05, 7.984700000000094e-05, 7.942999999999839e-05, 7.987500000000008e-05, 8.008299999999816e-05, 7.951399999999928e-05, 8.023599999999742e-05, 8.029199999999917e-05, 7.9861...</msg>
<status status="PASS" starttime="20201030 11:52:32.102" endtime="20201030 11:52:32.106"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.110" level="INFO">NAME: accuracy-TIMER_SLEEP-67-philip</msg>
<status status="PASS" starttime="20201030 11:52:32.109" endtime="20201030 11:52:32.111"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.113" level="INFO">VALUE: [8.006899999999859e-05, 7.984700000000094e-05, 7.942999999999839e-05, 7.987500000000008e-05, 8.008299999999816e-05, 7.951399999999928e-05, 8.023599999999742e-05, 8.029199999999917e-05, 7.986100000000051e-05, 8.025000000000046e-05, 7.961100000000026e-05, 8.015300000000294e-05, 7.973699999999986e-05, 7.973600000000039e-05, 7.956899999999809e-05, 7.995799999999803e-05, 8.027700000000013e-05, 7.992999999999889e-05, 7.968100000000158e-05, 7.936100000000001e-05, 7.982000000000128e-05, 7.984700000000094e-05, 7.936100000000001e-05, 7.970900000000072e-05, 7.954099999999895e-05, 7.99450000000014e-05, 7.998700000000011e-05, 7.980499999999877e-05, 7.956900000000156e-05, 8.006900000000206e-05, 7.973600000000039e-05, 8.015299999999947e-05, 7.949999999999971e-05, 8.02779999999996e-05, 7.983300000000138e-05, 7.944499999999743e-05, 8.023599999999742e-05, 7.934799999999992e-05, 7.988800000000018e-05, 7.976399999999953e-05, 7.956899999999809e-05, 7.955500000000199e-05, 8.012500000000033e-05, 7.936100000000001e-05, 8.016699999999904e-05, 7.987500000000008e-05, 7.949999999999971e-05, 7.936100000000001e-05, 8.012500000000033e-05, 8.026300000000056e-05]</msg>
<status status="PASS" starttime="20201030 11:52:32.111" endtime="20201030 11:52:32.113"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.107" endtime="20201030 11:52:32.114"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.118" endtime="20201030 11:52:32.137"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.116" endtime="20201030 11:52:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.115" endtime="20201030 11:52:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.759" endtime="20201030 11:52:32.138"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:31.758" endtime="20201030 11:52:32.138"></status>
</kw>
<kw name="${duration} = 68" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.147" endtime="20201030 11:52:32.165"></status>
</kw>
<msg timestamp="20201030 11:52:32.165" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.145" endtime="20201030 11:52:32.166"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.168" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(68)', 'msg': ['sleep_accuracy_timer_sleep 68\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.166" endtime="20201030 11:52:32.168"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.169" endtime="20201030 11:52:32.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.143" endtime="20201030 11:52:32.171"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.141" endtime="20201030 11:52:32.171"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.178" endtime="20201030 11:52:32.465"></status>
</kw>
<msg timestamp="20201030 11:52:32.468" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.176" endtime="20201030 11:52:32.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019533375, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019614069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.469" endtime="20201030 11:52:32.477"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.477" endtime="20201030 11:52:32.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.174" endtime="20201030 11:52:32.480"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.172" endtime="20201030 11:52:32.480"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:32.484" level="INFO">${RESULT} = [{'diff': 8.069400000000268e-05}, {'diff': 8.051400000000028e-05}, {'diff': 8.115300000000047e-05}, {'diff': 8.102800000000035e-05}, {'diff': 8.042999999999939e-05}, {'diff': 8.080599999999924e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:32.481" endtime="20201030 11:52:32.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:32.488" level="INFO">${ACCURACY} = {'diff': [8.069400000000268e-05, 8.051400000000028e-05, 8.115300000000047e-05, 8.102800000000035e-05, 8.042999999999939e-05, 8.080599999999924e-05, 8.106999999999906e-05, 8.113899999999744e-05, 8.0708...</msg>
<status status="PASS" starttime="20201030 11:52:32.485" endtime="20201030 11:52:32.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.492" level="INFO">NAME: accuracy-TIMER_SLEEP-68-philip</msg>
<status status="PASS" starttime="20201030 11:52:32.491" endtime="20201030 11:52:32.493"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.495" level="INFO">VALUE: [8.069400000000268e-05, 8.051400000000028e-05, 8.115300000000047e-05, 8.102800000000035e-05, 8.042999999999939e-05, 8.080599999999924e-05, 8.106999999999906e-05, 8.113899999999744e-05, 8.070899999999825e-05, 8.036099999999755e-05, 8.118000000000014e-05, 8.043100000000233e-05, 8.051400000000028e-05, 8.108299999999916e-05, 8.086100000000151e-05, 8.129200000000017e-05, 8.087500000000108e-05, 8.100000000000121e-05, 8.058399999999813e-05, 8.116700000000004e-05, 8.097300000000154e-05, 8.122200000000232e-05, 8.038900000000015e-05, 8.129200000000017e-05, 8.093099999999936e-05, 8.108299999999916e-05, 8.038900000000015e-05, 8.080499999999977e-05, 8.051400000000028e-05, 8.051400000000028e-05, 8.106899999999959e-05, 8.086100000000151e-05, 8.038900000000015e-05, 8.06390000000004e-05, 8.043099999999886e-05, 8.066699999999954e-05, 8.113800000000143e-05, 8.080499999999977e-05, 8.063800000000093e-05, 8.108299999999916e-05, 8.075000000000096e-05, 8.054199999999942e-05, 8.056899999999909e-05, 8.130599999999974e-05, 8.087500000000108e-05, 8.112499999999787e-05, 8.081999999999881e-05, 8.072199999999835e-05, 8.051400000000028e-05, 8.100000000000121e-05]</msg>
<status status="PASS" starttime="20201030 11:52:32.493" endtime="20201030 11:52:32.495"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.489" endtime="20201030 11:52:32.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.500" endtime="20201030 11:52:32.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.498" endtime="20201030 11:52:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.497" endtime="20201030 11:52:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.139" endtime="20201030 11:52:32.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.139" endtime="20201030 11:52:32.520"></status>
</kw>
<kw name="${duration} = 69" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.529" endtime="20201030 11:52:32.547"></status>
</kw>
<msg timestamp="20201030 11:52:32.548" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.527" endtime="20201030 11:52:32.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.550" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(69)', 'msg': ['sleep_accuracy_timer_sleep 69\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.549" endtime="20201030 11:52:32.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.551" endtime="20201030 11:52:32.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.525" endtime="20201030 11:52:32.553"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.523" endtime="20201030 11:52:32.554"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.560" endtime="20201030 11:52:32.845"></status>
</kw>
<msg timestamp="20201030 11:52:32.848" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021135125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.559" endtime="20201030 11:52:32.848"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.856" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021053278, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021135125, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.849" endtime="20201030 11:52:32.857"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.858" endtime="20201030 11:52:32.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.556" endtime="20201030 11:52:32.860"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.554" endtime="20201030 11:52:32.860"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:32.864" level="INFO">${RESULT} = [{'diff': 8.184699999999948e-05}, {'diff': 8.177799999999763e-05}, {'diff': 8.184699999999948e-05}, {'diff': 8.137500000000158e-05}, {'diff': 8.188899999999819e-05}, {'diff': 8.143000000000039e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:32.861" endtime="20201030 11:52:32.864"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:32.868" level="INFO">${ACCURACY} = {'diff': [8.184699999999948e-05, 8.177799999999763e-05, 8.184699999999948e-05, 8.137500000000158e-05, 8.188899999999819e-05, 8.143000000000039e-05, 8.172299999999882e-05, 8.230500000000127e-05, 8.1861...</msg>
<status status="PASS" starttime="20201030 11:52:32.865" endtime="20201030 11:52:32.868"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.872" level="INFO">NAME: accuracy-TIMER_SLEEP-69-philip</msg>
<status status="PASS" starttime="20201030 11:52:32.871" endtime="20201030 11:52:32.873"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.875" level="INFO">VALUE: [8.184699999999948e-05, 8.177799999999763e-05, 8.184699999999948e-05, 8.137500000000158e-05, 8.188899999999819e-05, 8.143000000000039e-05, 8.172299999999882e-05, 8.230500000000127e-05, 8.186100000000252e-05, 8.230500000000127e-05, 8.170799999999978e-05, 8.198599999999917e-05, 8.159699999999923e-05, 8.159699999999923e-05, 8.223599999999942e-05, 8.193100000000036e-05, 8.223599999999942e-05, 8.181999999999981e-05, 8.207000000000006e-05, 8.14450000000029e-05, 8.180500000000077e-05, 8.208300000000016e-05, 8.209699999999973e-05, 8.144399999999996e-05, 8.137499999999812e-05, 8.165300000000097e-05, 8.218100000000061e-05, 8.172199999999935e-05, 8.19589999999995e-05, 8.2152999999998e-05, 8.144499999999943e-05, 8.231900000000084e-05, 8.143099999999986e-05, 8.187499999999862e-05, 8.181900000000034e-05, 8.166600000000107e-05, 8.186199999999852e-05, 8.187500000000208e-05, 8.199999999999874e-05, 8.220800000000028e-05, 8.201399999999831e-05, 8.137499999999812e-05, 8.144499999999943e-05, 8.136099999999855e-05, 8.136199999999802e-05, 8.180500000000077e-05, 8.208300000000016e-05, 8.193000000000089e-05, 8.140300000000072e-05, 8.181900000000034e-05]</msg>
<status status="PASS" starttime="20201030 11:52:32.873" endtime="20201030 11:52:32.880"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.869" endtime="20201030 11:52:32.881"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:32.884" endtime="20201030 11:52:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.883" endtime="20201030 11:52:32.904"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.881" endtime="20201030 11:52:32.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.521" endtime="20201030 11:52:32.905"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.521" endtime="20201030 11:52:32.905"></status>
</kw>
<kw name="${duration} = 70" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.913" endtime="20201030 11:52:32.931"></status>
</kw>
<msg timestamp="20201030 11:52:32.932" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.912" endtime="20201030 11:52:32.932"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:32.934" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(70)', 'msg': ['sleep_accuracy_timer_sleep 70\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:32.933" endtime="20201030 11:52:32.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.935" endtime="20201030 11:52:32.937"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.910" endtime="20201030 11:52:32.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.907" endtime="20201030 11:52:32.938"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:32.944" endtime="20201030 11:52:33.229"></status>
</kw>
<msg timestamp="20201030 11:52:33.233" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:32.943" endtime="20201030 11:52:33.233"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.241" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020025986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020108681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.234" endtime="20201030 11:52:33.241"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.242" endtime="20201030 11:52:33.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.940" endtime="20201030 11:52:33.244"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.939" endtime="20201030 11:52:33.245"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.248" level="INFO">${RESULT} = [{'diff': 8.269500000000068e-05}, {'diff': 8.237499999999912e-05}, {'diff': 8.234800000000292e-05}, {'diff': 8.304099999999898e-05}, {'diff': 8.323600000000042e-05}, {'diff': 8.240300000000172e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:33.245" endtime="20201030 11:52:33.249"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.253" level="INFO">${ACCURACY} = {'diff': [8.269500000000068e-05, 8.237499999999912e-05, 8.234800000000292e-05, 8.304099999999898e-05, 8.323600000000042e-05, 8.240300000000172e-05, 8.243000000000139e-05, 8.306900000000159e-05, 8.2944...</msg>
<status status="PASS" starttime="20201030 11:52:33.249" endtime="20201030 11:52:33.254"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.258" level="INFO">NAME: accuracy-TIMER_SLEEP-70-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.257" endtime="20201030 11:52:33.258"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.260" level="INFO">VALUE: [8.269500000000068e-05, 8.237499999999912e-05, 8.234800000000292e-05, 8.304099999999898e-05, 8.323600000000042e-05, 8.240300000000172e-05, 8.243000000000139e-05, 8.306900000000159e-05, 8.294400000000146e-05, 8.251400000000228e-05, 8.286100000000005e-05, 8.266700000000154e-05, 8.287499999999962e-05, 8.301399999999931e-05, 8.269500000000068e-05, 8.329099999999923e-05, 8.315199999999953e-05, 8.244400000000096e-05, 8.258300000000066e-05, 8.265300000000197e-05, 8.24170000000013e-05, 8.295800000000103e-05, 8.282000000000081e-05, 8.265300000000197e-05, 8.283400000000038e-05, 8.26109999999998e-05, 8.237499999999912e-05, 8.301399999999931e-05, 8.294399999999799e-05, 8.281900000000134e-05, 8.259700000000023e-05, 8.258299999999719e-05, 8.286100000000005e-05, 8.286100000000005e-05, 8.236099999999955e-05, 8.320800000000128e-05, 8.293100000000136e-05, 8.255500000000152e-05, 8.304199999999845e-05, 8.251299999999934e-05, 8.308300000000116e-05, 8.308299999999769e-05, 8.330500000000227e-05, 8.302800000000235e-05, 8.284700000000048e-05, 8.324999999999999e-05, 8.238899999999869e-05, 8.332000000000131e-05, 8.315199999999953e-05, 8.27919999999982e-05]</msg>
<status status="PASS" starttime="20201030 11:52:33.259" endtime="20201030 11:52:33.261"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.254" endtime="20201030 11:52:33.262"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.265" endtime="20201030 11:52:33.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.264" endtime="20201030 11:52:33.285"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.263" endtime="20201030 11:52:33.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.906" endtime="20201030 11:52:33.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:32.905" endtime="20201030 11:52:33.286"></status>
</kw>
<kw name="${duration} = 71" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.295" endtime="20201030 11:52:33.313"></status>
</kw>
<msg timestamp="20201030 11:52:33.313" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.293" endtime="20201030 11:52:33.313"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(71)', 'msg': ['sleep_accuracy_timer_sleep 71\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.314" endtime="20201030 11:52:33.316"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.317" endtime="20201030 11:52:33.318"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.291" endtime="20201030 11:52:33.319"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.289" endtime="20201030 11:52:33.319"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.326" endtime="20201030 11:52:33.628"></status>
</kw>
<msg timestamp="20201030 11:52:33.631" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.324" endtime="20201030 11:52:33.631"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.639" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020360153, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020443847, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.632" endtime="20201030 11:52:33.640"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.640" endtime="20201030 11:52:33.642"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.322" endtime="20201030 11:52:33.643"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.320" endtime="20201030 11:52:33.643"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:33.647" level="INFO">${RESULT} = [{'diff': 8.369400000000221e-05}, {'diff': 8.413900000000044e-05}, {'diff': 8.409699999999826e-05}, {'diff': 8.351400000000328e-05}, {'diff': 8.42919999999997e-05}, {'diff': 8.336100000000055e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:33.644" endtime="20201030 11:52:33.647"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:33.651" level="INFO">${ACCURACY} = {'diff': [8.369400000000221e-05, 8.413900000000044e-05, 8.409699999999826e-05, 8.351400000000328e-05, 8.42919999999997e-05, 8.336100000000055e-05, 8.411200000000077e-05, 8.351399999999981e-05, 8.38749...</msg>
<status status="PASS" starttime="20201030 11:52:33.648" endtime="20201030 11:52:33.651"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.655" level="INFO">NAME: accuracy-TIMER_SLEEP-71-philip</msg>
<status status="PASS" starttime="20201030 11:52:33.654" endtime="20201030 11:52:33.656"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.658" level="INFO">VALUE: [8.369400000000221e-05, 8.413900000000044e-05, 8.409699999999826e-05, 8.351400000000328e-05, 8.42919999999997e-05, 8.336100000000055e-05, 8.411200000000077e-05, 8.351399999999981e-05, 8.387499999999715e-05, 8.423600000000142e-05, 8.429100000000023e-05, 8.38049999999993e-05, 8.409700000000173e-05, 8.343000000000239e-05, 8.345800000000153e-05, 8.394400000000246e-05, 8.336100000000055e-05, 8.386099999999758e-05, 8.380599999999877e-05, 8.387500000000062e-05, 8.336100000000055e-05, 8.422299999999786e-05, 8.358300000000166e-05, 8.41660000000001e-05, 8.372200000000135e-05, 8.358300000000166e-05, 8.356999999999809e-05, 8.36529999999995e-05, 8.430599999999927e-05, 8.370800000000178e-05, 8.407000000000206e-05, 8.384700000000148e-05, 8.401400000000031e-05, 8.409699999999826e-05, 8.392999999999942e-05, 8.422199999999838e-05, 8.337500000000012e-05, 8.430599999999927e-05, 8.342999999999892e-05, 8.363899999999994e-05, 8.402799999999988e-05, 8.408400000000163e-05, 8.423600000000142e-05, 8.373600000000092e-05, 8.43330000000024e-05, 8.420900000000175e-05, 8.392999999999942e-05, 8.387499999999715e-05, 8.408299999999869e-05, 8.342999999999892e-05]</msg>
<status status="PASS" starttime="20201030 11:52:33.657" endtime="20201030 11:52:33.659"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.652" endtime="20201030 11:52:33.659"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:33.663" endtime="20201030 11:52:33.682"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.661" endtime="20201030 11:52:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.660" endtime="20201030 11:52:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.287" endtime="20201030 11:52:33.683"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.287" endtime="20201030 11:52:33.683"></status>
</kw>
<kw name="${duration} = 72" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.692" endtime="20201030 11:52:33.714"></status>
</kw>
<msg timestamp="20201030 11:52:33.714" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.691" endtime="20201030 11:52:33.715"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:33.717" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(72)', 'msg': ['sleep_accuracy_timer_sleep 72\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:33.715" endtime="20201030 11:52:33.717"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.718" endtime="20201030 11:52:33.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.688" endtime="20201030 11:52:33.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.686" endtime="20201030 11:52:33.721"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:33.727" endtime="20201030 11:52:34.012"></status>
</kw>
<msg timestamp="20201030 11:52:34.015" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:33.725" endtime="20201030 11:52:34.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.024" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022643833, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022729042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.017" endtime="20201030 11:52:34.024"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.025" endtime="20201030 11:52:34.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.723" endtime="20201030 11:52:34.027"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.721" endtime="20201030 11:52:34.028"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.032" level="INFO">${RESULT} = [{'diff': 8.520900000000275e-05}, {'diff': 8.437499999999765e-05}, {'diff': 8.502699999999794e-05}, {'diff': 8.487499999999815e-05}, {'diff': 8.516599999999763e-05}, {'diff': 8.479100000000073e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:34.028" endtime="20201030 11:52:34.032"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.036" level="INFO">${ACCURACY} = {'diff': [8.520900000000275e-05, 8.437499999999765e-05, 8.502699999999794e-05, 8.487499999999815e-05, 8.516599999999763e-05, 8.479100000000073e-05, 8.477800000000063e-05, 8.493000000000042e-05, 8.4847...</msg>
<status status="PASS" starttime="20201030 11:52:34.033" endtime="20201030 11:52:34.036"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.040" level="INFO">NAME: accuracy-TIMER_SLEEP-72-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.039" endtime="20201030 11:52:34.040"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.042" level="INFO">VALUE: [8.520900000000275e-05, 8.437499999999765e-05, 8.502699999999794e-05, 8.487499999999815e-05, 8.516599999999763e-05, 8.479100000000073e-05, 8.477800000000063e-05, 8.493000000000042e-05, 8.484700000000248e-05, 8.436099999999808e-05, 8.487499999999815e-05, 8.458399999999866e-05, 8.45980000000017e-05, 8.508399999999916e-05, 8.52920000000007e-05, 8.487500000000162e-05, 8.522199999999938e-05, 8.436099999999808e-05, 8.52920000000007e-05, 8.486099999999858e-05, 8.47920000000002e-05, 8.523599999999895e-05, 8.44309999999994e-05, 8.441699999999983e-05, 8.52920000000007e-05, 8.53469999999995e-05, 8.494499999999947e-05, 8.473600000000192e-05, 8.436100000000155e-05, 8.497199999999913e-05, 8.529099999999776e-05, 8.436099999999808e-05, 8.47920000000002e-05, 8.434700000000198e-05, 8.468099999999965e-05, 8.47920000000002e-05, 8.487500000000162e-05, 8.495899999999904e-05, 8.506999999999959e-05, 8.451300000000134e-05, 8.494399999999999e-05, 8.450000000000124e-05, 8.51660000000011e-05, 8.466700000000008e-05, 8.451400000000081e-05, 8.473599999999845e-05, 8.466700000000008e-05, 8.52920000000007e-05, 8.515299999999754e-05, 8.437500000000112e-05]</msg>
<status status="PASS" starttime="20201030 11:52:34.041" endtime="20201030 11:52:34.044"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.036" endtime="20201030 11:52:34.045"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.048" endtime="20201030 11:52:34.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.047" endtime="20201030 11:52:34.068"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.046" endtime="20201030 11:52:34.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.684" endtime="20201030 11:52:34.069"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:33.684" endtime="20201030 11:52:34.069"></status>
</kw>
<kw name="${duration} = 73" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.078" endtime="20201030 11:52:34.096"></status>
</kw>
<msg timestamp="20201030 11:52:34.096" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.076" endtime="20201030 11:52:34.096"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.099" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(73)', 'msg': ['sleep_accuracy_timer_sleep 73\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.097" endtime="20201030 11:52:34.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.100" endtime="20201030 11:52:34.101"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.073" endtime="20201030 11:52:34.102"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.071" endtime="20201030 11:52:34.102"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.111" endtime="20201030 11:52:34.397"></status>
</kw>
<msg timestamp="20201030 11:52:34.401" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.109" endtime="20201030 11:52:34.401"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.409" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019647472, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019732889, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.402" endtime="20201030 11:52:34.410"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.410" endtime="20201030 11:52:34.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.105" endtime="20201030 11:52:34.412"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.103" endtime="20201030 11:52:34.413"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.417" level="INFO">${RESULT} = [{'diff': 8.541700000000083e-05}, {'diff': 8.549999999999877e-05}, {'diff': 8.557000000000009e-05}, {'diff': 8.63059999999978e-05}, {'diff': 8.537499999999865e-05}, {'diff': 8.611099999999983e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:34.414" endtime="20201030 11:52:34.417"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.422" level="INFO">${ACCURACY} = {'diff': [8.541700000000083e-05, 8.549999999999877e-05, 8.557000000000009e-05, 8.63059999999978e-05, 8.537499999999865e-05, 8.611099999999983e-05, 8.566599999999813e-05, 8.551399999999834e-05, 8.54580...</msg>
<status status="PASS" starttime="20201030 11:52:34.418" endtime="20201030 11:52:34.422"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.426" level="INFO">NAME: accuracy-TIMER_SLEEP-73-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.425" endtime="20201030 11:52:34.427"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.429" level="INFO">VALUE: [8.541700000000083e-05, 8.549999999999877e-05, 8.557000000000009e-05, 8.63059999999978e-05, 8.537499999999865e-05, 8.611099999999983e-05, 8.566599999999813e-05, 8.551399999999834e-05, 8.545800000000006e-05, 8.541700000000083e-05, 8.537499999999865e-05, 8.601399999999884e-05, 8.548600000000267e-05, 8.569500000000022e-05, 8.56530000000015e-05, 8.615299999999854e-05, 8.58059999999973e-05, 8.543000000000092e-05, 8.537500000000212e-05, 8.559699999999976e-05, 8.606900000000112e-05, 8.608299999999722e-05, 8.62920000000017e-05, 8.552799999999791e-05, 8.54310000000004e-05, 8.565299999999804e-05, 8.56119999999988e-05, 8.547199999999963e-05, 8.541599999999788e-05, 8.565200000000203e-05, 8.537499999999865e-05, 8.544400000000049e-05, 8.618000000000167e-05, 8.579099999999826e-05, 8.601400000000231e-05, 8.575000000000249e-05, 8.620800000000081e-05, 8.547199999999963e-05, 8.538899999999822e-05, 8.538900000000169e-05, 8.545800000000006e-05, 8.573599999999945e-05, 8.5847e-05, 8.555500000000105e-05, 8.56660000000016e-05, 8.58050000000013e-05, 8.601399999999884e-05, 8.579199999999773e-05, 8.549999999999877e-05, 8.588899999999872e-05]</msg>
<status status="PASS" starttime="20201030 11:52:34.427" endtime="20201030 11:52:34.430"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.423" endtime="20201030 11:52:34.430"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.434" endtime="20201030 11:52:34.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.432" endtime="20201030 11:52:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.431" endtime="20201030 11:52:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.070" endtime="20201030 11:52:34.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.069" endtime="20201030 11:52:34.454"></status>
</kw>
<kw name="${duration} = 74" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.463" endtime="20201030 11:52:34.483"></status>
</kw>
<msg timestamp="20201030 11:52:34.484" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.462" endtime="20201030 11:52:34.484"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.486" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(74)', 'msg': ['sleep_accuracy_timer_sleep 74\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.485" endtime="20201030 11:52:34.486"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.487" endtime="20201030 11:52:34.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.459" endtime="20201030 11:52:34.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.457" endtime="20201030 11:52:34.490"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.496" endtime="20201030 11:52:34.784"></status>
</kw>
<msg timestamp="20201030 11:52:34.787" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020655111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.494" endtime="20201030 11:52:34.787"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.795" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020568431, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020655111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:34.788" endtime="20201030 11:52:34.796"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.796" endtime="20201030 11:52:34.798"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.492" endtime="20201030 11:52:34.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.490" endtime="20201030 11:52:34.799"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:34.803" level="INFO">${RESULT} = [{'diff': 8.66799999999987e-05}, {'diff': 8.658300000000119e-05}, {'diff': 8.68059999999983e-05}, {'diff': 8.693099999999843e-05}, {'diff': 8.687500000000015e-05}, {'diff': 8.693099999999843e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:34.800" endtime="20201030 11:52:34.803"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:34.807" level="INFO">${ACCURACY} = {'diff': [8.66799999999987e-05, 8.658300000000119e-05, 8.68059999999983e-05, 8.693099999999843e-05, 8.687500000000015e-05, 8.693099999999843e-05, 8.657000000000109e-05, 8.657000000000109e-05, 8.673600...</msg>
<status status="PASS" starttime="20201030 11:52:34.804" endtime="20201030 11:52:34.807"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.812" level="INFO">NAME: accuracy-TIMER_SLEEP-74-philip</msg>
<status status="PASS" starttime="20201030 11:52:34.811" endtime="20201030 11:52:34.812"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.814" level="INFO">VALUE: [8.66799999999987e-05, 8.658300000000119e-05, 8.68059999999983e-05, 8.693099999999843e-05, 8.687500000000015e-05, 8.693099999999843e-05, 8.657000000000109e-05, 8.657000000000109e-05, 8.673600000000045e-05, 8.68050000000023e-05, 8.655499999999858e-05, 8.730499999999933e-05, 8.651399999999934e-05, 8.725000000000052e-05, 8.659699999999729e-05, 8.66530000000025e-05, 8.657000000000109e-05, 8.686100000000058e-05, 8.643099999999793e-05, 8.730499999999933e-05, 8.630499999999833e-05, 8.719399999999877e-05, 8.644400000000149e-05, 8.708300000000169e-05, 8.679199999999873e-05, 8.700000000000027e-05, 8.725000000000052e-05, 8.686099999999711e-05, 8.637499999999965e-05, 8.638899999999922e-05, 8.737500000000065e-05, 8.676300000000012e-05, 8.697199999999766e-05, 8.708299999999822e-05, 8.715200000000006e-05, 8.729099999999976e-05, 8.677800000000263e-05, 8.723600000000095e-05, 8.71669999999991e-05, 8.645899999999707e-05, 8.67920000000022e-05, 8.690299999999929e-05, 8.715299999999954e-05, 8.729099999999976e-05, 8.656900000000162e-05, 8.670799999999784e-05, 8.720800000000181e-05, 8.719400000000224e-05, 8.670799999999784e-05, 8.701399999999984e-05]</msg>
<status status="PASS" starttime="20201030 11:52:34.813" endtime="20201030 11:52:34.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.808" endtime="20201030 11:52:34.815"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:34.819" endtime="20201030 11:52:34.838"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.817" endtime="20201030 11:52:34.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.816" endtime="20201030 11:52:34.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.455" endtime="20201030 11:52:34.839"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.455" endtime="20201030 11:52:34.840"></status>
</kw>
<kw name="${duration} = 75" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.848" endtime="20201030 11:52:34.868"></status>
</kw>
<msg timestamp="20201030 11:52:34.868" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.847" endtime="20201030 11:52:34.869"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:34.871" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(75)', 'msg': ['sleep_accuracy_timer_sleep 75\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:34.869" endtime="20201030 11:52:34.871"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.872" endtime="20201030 11:52:34.873"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.844" endtime="20201030 11:52:34.874"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.842" endtime="20201030 11:52:34.874"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:34.881" endtime="20201030 11:52:35.167"></status>
</kw>
<msg timestamp="20201030 11:52:35.170" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:34.879" endtime="20201030 11:52:35.170"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.178" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.02041575, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020503417, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:35.171" endtime="20201030 11:52:35.179"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.179" endtime="20201030 11:52:35.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.877" endtime="20201030 11:52:35.181"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.875" endtime="20201030 11:52:35.182"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.186" level="INFO">${RESULT} = [{'diff': 8.76669999999996e-05}, {'diff': 8.822200000000238e-05}, {'diff': 8.763900000000047e-05}, {'diff': 8.827800000000066e-05}, {'diff': 8.793099999999943e-05}, {'diff': 8.765200000000056e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:35.183" endtime="20201030 11:52:35.186"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.190" level="INFO">${ACCURACY} = {'diff': [8.76669999999996e-05, 8.822200000000238e-05, 8.763900000000047e-05, 8.827800000000066e-05, 8.793099999999943e-05, 8.765200000000056e-05, 8.779100000000026e-05, 8.794400000000299e-05, 8.74029...</msg>
<status status="PASS" starttime="20201030 11:52:35.187" endtime="20201030 11:52:35.190"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.194" level="INFO">NAME: accuracy-TIMER_SLEEP-75-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.193" endtime="20201030 11:52:35.195"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.197" level="INFO">VALUE: [8.76669999999996e-05, 8.822200000000238e-05, 8.763900000000047e-05, 8.827800000000066e-05, 8.793099999999943e-05, 8.765200000000056e-05, 8.779100000000026e-05, 8.794400000000299e-05, 8.740299999999979e-05, 8.759700000000176e-05, 8.773599999999798e-05, 8.791699999999986e-05, 8.81670000000001e-05, 8.777800000000016e-05, 8.756999999999862e-05, 8.786200000000105e-05, 8.80129999999979e-05, 8.766600000000013e-05, 8.73470000000015e-05, 8.765300000000004e-05, 8.765300000000004e-05, 8.809699999999879e-05, 8.787500000000115e-05, 8.772199999999841e-05, 8.807000000000259e-05, 8.777800000000016e-05, 8.83189999999999e-05, 8.765300000000004e-05, 8.744399999999902e-05, 8.830500000000033e-05, 8.779100000000026e-05, 8.81670000000001e-05, 8.79999999999978e-05, 8.779199999999973e-05, 8.768099999999918e-05, 8.758300000000219e-05, 8.772199999999841e-05, 8.812499999999793e-05, 8.822299999999839e-05, 8.776400000000059e-05, 8.813799999999802e-05, 8.820799999999934e-05, 8.78189999999994e-05, 8.787500000000115e-05, 8.758299999999872e-05, 8.754199999999948e-05, 8.806899999999965e-05, 8.829200000000023e-05, 8.751400000000034e-05, 8.765300000000004e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.195" endtime="20201030 11:52:35.198"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.191" endtime="20201030 11:52:35.199"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.202" endtime="20201030 11:52:35.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.201" endtime="20201030 11:52:35.222"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.200" endtime="20201030 11:52:35.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.841" endtime="20201030 11:52:35.223"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:34.840" endtime="20201030 11:52:35.223"></status>
</kw>
<kw name="${duration} = 76" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.232" endtime="20201030 11:52:35.250"></status>
</kw>
<msg timestamp="20201030 11:52:35.250" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.230" endtime="20201030 11:52:35.250"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.253" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(76)', 'msg': ['sleep_accuracy_timer_sleep 76\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.251" endtime="20201030 11:52:35.253"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.254" endtime="20201030 11:52:35.255"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.228" endtime="20201030 11:52:35.256"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.226" endtime="20201030 11:52:35.256"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.263" endtime="20201030 11:52:35.550"></status>
</kw>
<msg timestamp="20201030 11:52:35.553" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.261" endtime="20201030 11:52:35.553"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.561" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019576986, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.554" endtime="20201030 11:52:35.561"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.562" endtime="20201030 11:52:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.259" endtime="20201030 11:52:35.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.257" endtime="20201030 11:52:35.565"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.569" level="INFO">${RESULT} = [{'diff': 8.898599999999923e-05}, {'diff': 8.870799999999984e-05}, {'diff': 8.908300000000022e-05}, {'diff': 8.881899999999693e-05}, {'diff': 8.866699999999714e-05}, {'diff': 8.929200000000123e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:35.565" endtime="20201030 11:52:35.569"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.574" level="INFO">${ACCURACY} = {'diff': [8.898599999999923e-05, 8.870799999999984e-05, 8.908300000000022e-05, 8.881899999999693e-05, 8.866699999999714e-05, 8.929200000000123e-05, 8.837499999999818e-05, 8.900000000000227e-05, 8.9027...</msg>
<status status="PASS" starttime="20201030 11:52:35.570" endtime="20201030 11:52:35.574"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.578" level="INFO">NAME: accuracy-TIMER_SLEEP-76-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.577" endtime="20201030 11:52:35.578"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.580" level="INFO">VALUE: [8.898599999999923e-05, 8.870799999999984e-05, 8.908300000000022e-05, 8.881899999999693e-05, 8.866699999999714e-05, 8.929200000000123e-05, 8.837499999999818e-05, 8.900000000000227e-05, 8.902700000000194e-05, 8.886099999999911e-05, 8.86800000000007e-05, 8.923599999999948e-05, 8.863900000000147e-05, 8.891700000000086e-05, 8.886099999999911e-05, 8.844400000000002e-05, 8.859699999999929e-05, 8.866699999999714e-05, 8.841700000000036e-05, 8.905599999999708e-05, 8.872300000000236e-05, 8.852699999999797e-05, 8.886099999999911e-05, 8.843000000000045e-05, 8.895800000000009e-05, 8.887500000000215e-05, 8.83189999999999e-05, 8.909699999999979e-05, 8.854100000000101e-05, 8.909799999999926e-05, 8.911099999999936e-05, 8.834800000000198e-05, 8.877800000000116e-05, 8.89999999999988e-05, 8.888900000000172e-05, 8.836099999999861e-05, 8.877799999999769e-05, 8.837499999999818e-05, 8.922199999999991e-05, 8.91670000000011e-05, 8.886099999999911e-05, 8.836099999999861e-05, 8.93060000000008e-05, 8.93060000000008e-05, 8.879200000000073e-05, 8.90129999999989e-05, 8.873599999999898e-05, 8.873599999999898e-05, 8.922199999999991e-05, 8.88060000000003e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.579" endtime="20201030 11:52:35.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.574" endtime="20201030 11:52:35.582"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.585" endtime="20201030 11:52:35.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.584" endtime="20201030 11:52:35.605"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.583" endtime="20201030 11:52:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.224" endtime="20201030 11:52:35.606"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.223" endtime="20201030 11:52:35.606"></status>
</kw>
<kw name="${duration} = 77" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.615" endtime="20201030 11:52:35.634"></status>
</kw>
<msg timestamp="20201030 11:52:35.634" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.613" endtime="20201030 11:52:35.634"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.637" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(77)', 'msg': ['sleep_accuracy_timer_sleep 77\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.635" endtime="20201030 11:52:35.637"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.638" endtime="20201030 11:52:35.639"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.611" endtime="20201030 11:52:35.640"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.609" endtime="20201030 11:52:35.640"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.646" endtime="20201030 11:52:35.932"></status>
</kw>
<msg timestamp="20201030 11:52:35.935" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.645" endtime="20201030 11:52:35.936"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.944" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019744639, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019834625, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:35.937" endtime="20201030 11:52:35.944"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.945" endtime="20201030 11:52:35.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.642" endtime="20201030 11:52:35.947"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.641" endtime="20201030 11:52:35.947"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:35.951" level="INFO">${RESULT} = [{'diff': 8.998600000000023e-05}, {'diff': 8.943100000000093e-05}, {'diff': 8.972200000000041e-05}, {'diff': 8.942999999999798e-05}, {'diff': 8.951399999999887e-05}, {'diff': 9.009699999999732e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:35.948" endtime="20201030 11:52:35.952"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:35.955" level="INFO">${ACCURACY} = {'diff': [8.998600000000023e-05, 8.943100000000093e-05, 8.972200000000041e-05, 8.942999999999798e-05, 8.951399999999887e-05, 9.009699999999732e-05, 8.977800000000216e-05, 8.943100000000093e-05, 8.9444...</msg>
<status status="PASS" starttime="20201030 11:52:35.952" endtime="20201030 11:52:35.956"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.960" level="INFO">NAME: accuracy-TIMER_SLEEP-77-philip</msg>
<status status="PASS" starttime="20201030 11:52:35.959" endtime="20201030 11:52:35.960"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:35.962" level="INFO">VALUE: [8.998600000000023e-05, 8.943100000000093e-05, 8.972200000000041e-05, 8.942999999999798e-05, 8.951399999999887e-05, 9.009699999999732e-05, 8.977800000000216e-05, 8.943100000000093e-05, 8.944400000000102e-05, 8.951399999999887e-05, 8.973599999999998e-05, 9.027799999999919e-05, 9.008399999999722e-05, 9.009700000000079e-05, 9.013900000000297e-05, 8.942999999999798e-05, 8.9638999999999e-05, 8.976399999999912e-05, 8.944400000000102e-05, 8.979199999999826e-05, 9.015299999999907e-05, 8.991700000000186e-05, 8.982000000000087e-05, 8.958400000000019e-05, 8.961099999999986e-05, 8.99999999999998e-05, 8.952799999999844e-05, 8.979099999999879e-05, 8.958299999999725e-05, 8.988899999999925e-05, 9.020900000000082e-05, 8.973599999999998e-05, 8.943100000000093e-05, 8.951399999999887e-05, 8.994499999999753e-05, 8.943100000000093e-05, 9.009800000000026e-05, 8.983399999999697e-05, 8.94999999999993e-05, 9.023600000000048e-05, 8.987499999999968e-05, 8.936099999999961e-05, 8.94999999999993e-05, 8.944400000000102e-05, 9.008300000000122e-05, 9.008299999999775e-05, 8.977799999999869e-05, 8.973699999999946e-05, 8.940199999999884e-05, 9.015299999999907e-05]</msg>
<status status="PASS" starttime="20201030 11:52:35.961" endtime="20201030 11:52:35.963"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.956" endtime="20201030 11:52:35.964"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:35.967" endtime="20201030 11:52:35.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.966" endtime="20201030 11:52:35.987"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.965" endtime="20201030 11:52:35.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.607" endtime="20201030 11:52:35.988"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.606" endtime="20201030 11:52:35.988"></status>
</kw>
<kw name="${duration} = 78" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:35.997" endtime="20201030 11:52:36.016"></status>
</kw>
<msg timestamp="20201030 11:52:36.016" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:35.995" endtime="20201030 11:52:36.016"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.019" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(78)', 'msg': ['sleep_accuracy_timer_sleep 78\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.017" endtime="20201030 11:52:36.019"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.020" endtime="20201030 11:52:36.021"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.992" endtime="20201030 11:52:36.022"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.990" endtime="20201030 11:52:36.022"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.028" endtime="20201030 11:52:36.314"></status>
</kw>
<msg timestamp="20201030 11:52:36.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.027" endtime="20201030 11:52:36.317"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.326" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020358042, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020448681, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.318" endtime="20201030 11:52:36.326"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.327" endtime="20201030 11:52:36.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.024" endtime="20201030 11:52:36.329"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.023" endtime="20201030 11:52:36.330"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.334" level="INFO">${RESULT} = [{'diff': 9.0639e-05}, {'diff': 9.092999999999948e-05}, {'diff': 9.069499999999828e-05}, {'diff': 9.080499999999936e-05}, {'diff': 9.075000000000055e-05}, {'diff': 9.090299999999982e-05}, {'diff': 9.0...</msg>
<status status="PASS" starttime="20201030 11:52:36.331" endtime="20201030 11:52:36.334"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.338" level="INFO">${ACCURACY} = {'diff': [9.0639e-05, 9.092999999999948e-05, 9.069499999999828e-05, 9.080499999999936e-05, 9.075000000000055e-05, 9.090299999999982e-05, 9.065299999999957e-05, 9.073600000000098e-05, 9.063800000000052...</msg>
<status status="PASS" starttime="20201030 11:52:36.335" endtime="20201030 11:52:36.338"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.343" level="INFO">NAME: accuracy-TIMER_SLEEP-78-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.342" endtime="20201030 11:52:36.343"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.345" level="INFO">VALUE: [9.0639e-05, 9.092999999999948e-05, 9.069499999999828e-05, 9.080499999999936e-05, 9.075000000000055e-05, 9.090299999999982e-05, 9.065299999999957e-05, 9.073600000000098e-05, 9.063800000000052e-05, 9.123600000000148e-05, 9.073600000000098e-05, 9.115300000000007e-05, 9.044400000000202e-05, 9.130499999999986e-05, 9.044399999999855e-05, 9.065299999999957e-05, 9.094399999999905e-05, 9.052799999999944e-05, 9.038899999999975e-05, 9.129199999999976e-05, 9.04450000000015e-05, 9.042999999999898e-05, 9.127800000000019e-05, 9.117999999999973e-05, 9.131899999999943e-05, 9.080499999999936e-05, 9.065299999999957e-05, 9.102799999999994e-05, 9.130599999999933e-05, 9.070799999999837e-05, 9.072200000000141e-05, 9.04450000000015e-05, 9.06939999999988e-05, 9.079199999999926e-05, 9.038800000000027e-05, 9.101400000000037e-05, 9.059699999999782e-05, 9.070799999999837e-05, 9.037500000000018e-05, 9.073600000000098e-05, 9.073600000000098e-05, 9.129199999999976e-05, 9.129199999999976e-05, 9.058400000000119e-05, 9.087500000000068e-05, 9.056999999999815e-05, 9.117999999999973e-05, 9.073599999999751e-05, 9.097199999999819e-05, 9.058299999999825e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.344" endtime="20201030 11:52:36.347"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.339" endtime="20201030 11:52:36.347"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.351" endtime="20201030 11:52:36.370"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.349" endtime="20201030 11:52:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.348" endtime="20201030 11:52:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.989" endtime="20201030 11:52:36.371"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:35.988" endtime="20201030 11:52:36.372"></status>
</kw>
<kw name="${duration} = 79" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.380" endtime="20201030 11:52:36.400"></status>
</kw>
<msg timestamp="20201030 11:52:36.400" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.379" endtime="20201030 11:52:36.400"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.402" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(79)', 'msg': ['sleep_accuracy_timer_sleep 79\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.401" endtime="20201030 11:52:36.403"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.403" endtime="20201030 11:52:36.405"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.376" endtime="20201030 11:52:36.406"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.374" endtime="20201030 11:52:36.406"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.413" endtime="20201030 11:52:36.698"></status>
</kw>
<msg timestamp="20201030 11:52:36.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.411" endtime="20201030 11:52:36.701"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.709" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019978681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020070319, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.702" endtime="20201030 11:52:36.709"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.710" endtime="20201030 11:52:36.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.408" endtime="20201030 11:52:36.712"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.407" endtime="20201030 11:52:36.713"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:36.717" level="INFO">${RESULT} = [{'diff': 9.163799999999805e-05}, {'diff': 9.155599999999958e-05}, {'diff': 9.141600000000041e-05}, {'diff': 9.231899999999696e-05}, {'diff': 9.176400000000112e-05}, {'diff': 9.186100000000211e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:36.714" endtime="20201030 11:52:36.717"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:36.722" level="INFO">${ACCURACY} = {'diff': [9.163799999999805e-05, 9.155599999999958e-05, 9.141600000000041e-05, 9.231899999999696e-05, 9.176400000000112e-05, 9.186100000000211e-05, 9.220899999999935e-05, 9.158299999999925e-05, 9.1667...</msg>
<status status="PASS" starttime="20201030 11:52:36.718" endtime="20201030 11:52:36.722"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.726" level="INFO">NAME: accuracy-TIMER_SLEEP-79-philip</msg>
<status status="PASS" starttime="20201030 11:52:36.725" endtime="20201030 11:52:36.726"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.729" level="INFO">VALUE: [9.163799999999805e-05, 9.155599999999958e-05, 9.141600000000041e-05, 9.231899999999696e-05, 9.176400000000112e-05, 9.186100000000211e-05, 9.220899999999935e-05, 9.158299999999925e-05, 9.166700000000014e-05, 9.170900000000232e-05, 9.168099999999971e-05, 9.229200000000076e-05, 9.172199999999894e-05, 9.177800000000069e-05, 9.172200000000241e-05, 9.155500000000011e-05, 9.208300000000322e-05, 9.141699999999989e-05, 9.137499999999771e-05, 9.230600000000033e-05, 9.165300000000057e-05, 9.151400000000087e-05, 9.211100000000236e-05, 9.149999999999783e-05, 9.16659999999972e-05, 9.145800000000259e-05, 9.183300000000297e-05, 9.144499999999903e-05, 9.151400000000087e-05, 9.23199999999999e-05, 9.220799999999987e-05, 9.151400000000087e-05, 9.223599999999901e-05, 9.136099999999814e-05, 9.179200000000026e-05, 9.173599999999851e-05, 9.148599999999826e-05, 9.156899999999968e-05, 9.158299999999925e-05, 9.162500000000143e-05, 9.137500000000118e-05, 9.223599999999901e-05, 9.216700000000064e-05, 9.180599999999983e-05, 9.227799999999772e-05, 9.145799999999912e-05, 9.224999999999858e-05, 9.222200000000291e-05, 9.21390000000015e-05, 9.188900000000125e-05]</msg>
<status status="PASS" starttime="20201030 11:52:36.727" endtime="20201030 11:52:36.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.722" endtime="20201030 11:52:36.730"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:36.733" endtime="20201030 11:52:36.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.732" endtime="20201030 11:52:36.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.731" endtime="20201030 11:52:36.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.372" endtime="20201030 11:52:36.754"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.372" endtime="20201030 11:52:36.754"></status>
</kw>
<kw name="${duration} = 80" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.763" endtime="20201030 11:52:36.781"></status>
</kw>
<msg timestamp="20201030 11:52:36.781" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.761" endtime="20201030 11:52:36.782"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:36.784" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(80)', 'msg': ['sleep_accuracy_timer_sleep 80\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:36.782" endtime="20201030 11:52:36.784"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.785" endtime="20201030 11:52:36.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.759" endtime="20201030 11:52:36.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.756" endtime="20201030 11:52:36.787"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:36.794" endtime="20201030 11:52:37.080"></status>
</kw>
<msg timestamp="20201030 11:52:37.083" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:36.792" endtime="20201030 11:52:37.083"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.091" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019699111, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019792042, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.084" endtime="20201030 11:52:37.091"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.092" endtime="20201030 11:52:37.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.790" endtime="20201030 11:52:37.094"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.788" endtime="20201030 11:52:37.095"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.099" level="INFO">${RESULT} = [{'diff': 9.293100000000096e-05}, {'diff': 9.243100000000046e-05}, {'diff': 9.26659999999982e-05}, {'diff': 9.265300000000157e-05}, {'diff': 9.30139999999989e-05}, {'diff': 9.244400000000055e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:37.095" endtime="20201030 11:52:37.099"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.103" level="INFO">${ACCURACY} = {'diff': [9.293100000000096e-05, 9.243100000000046e-05, 9.26659999999982e-05, 9.265300000000157e-05, 9.30139999999989e-05, 9.244400000000055e-05, 9.32079999999974e-05, 9.28200000000004e-05, 9.29170000...</msg>
<status status="PASS" starttime="20201030 11:52:37.100" endtime="20201030 11:52:37.103"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.107" level="INFO">NAME: accuracy-TIMER_SLEEP-80-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.106" endtime="20201030 11:52:37.107"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.110" level="INFO">VALUE: [9.293100000000096e-05, 9.243100000000046e-05, 9.26659999999982e-05, 9.265300000000157e-05, 9.30139999999989e-05, 9.244400000000055e-05, 9.32079999999974e-05, 9.28200000000004e-05, 9.291700000000139e-05, 9.268100000000071e-05, 9.311099999999989e-05, 9.291600000000191e-05, 9.313899999999903e-05, 9.316700000000164e-05, 9.294499999999706e-05, 9.312500000000293e-05, 9.298599999999976e-05, 9.304199999999804e-05, 9.237499999999871e-05, 9.287499999999921e-05, 9.25139999999984e-05, 9.273599999999951e-05, 9.255500000000111e-05, 9.308400000000022e-05, 9.252800000000144e-05, 9.330600000000133e-05, 9.269500000000028e-05, 9.241600000000141e-05, 9.261099999999939e-05, 9.287499999999921e-05, 9.295800000000062e-05, 9.272199999999994e-05, 9.249999999999883e-05, 9.30139999999989e-05, 9.30139999999989e-05, 9.330599999999786e-05, 9.272299999999942e-05, 9.258300000000025e-05, 9.243000000000098e-05, 9.251400000000187e-05, 9.279100000000179e-05, 9.236099999999914e-05, 9.243000000000098e-05, 9.30139999999989e-05, 9.269500000000028e-05, 9.329200000000176e-05, 9.299999999999933e-05, 9.263899999999853e-05, 9.279200000000126e-05, 9.262499999999896e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.108" endtime="20201030 11:52:37.110"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.104" endtime="20201030 11:52:37.111"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.115" endtime="20201030 11:52:37.134"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.113" endtime="20201030 11:52:37.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.112" endtime="20201030 11:52:37.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.755" endtime="20201030 11:52:37.135"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:36.754" endtime="20201030 11:52:37.135"></status>
</kw>
<kw name="${duration} = 81" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.144" endtime="20201030 11:52:37.167"></status>
</kw>
<msg timestamp="20201030 11:52:37.167" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.142" endtime="20201030 11:52:37.167"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.170" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(81)', 'msg': ['sleep_accuracy_timer_sleep 81\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.168" endtime="20201030 11:52:37.170"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.171" endtime="20201030 11:52:37.172"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.140" endtime="20201030 11:52:37.173"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.138" endtime="20201030 11:52:37.173"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.179" endtime="20201030 11:52:37.464"></status>
</kw>
<msg timestamp="20201030 11:52:37.467" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.178" endtime="20201030 11:52:37.468"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.476" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022687542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022781181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.469" endtime="20201030 11:52:37.476"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.477" endtime="20201030 11:52:37.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.175" endtime="20201030 11:52:37.479"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.174" endtime="20201030 11:52:37.479"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.483" level="INFO">${RESULT} = [{'diff': 9.363899999999953e-05}, {'diff': 9.399999999999686e-05}, {'diff': 9.413800000000055e-05}, {'diff': 9.386100000000064e-05}, {'diff': 9.379099999999932e-05}, {'diff': 9.395800000000162e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:37.480" endtime="20201030 11:52:37.484"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.487" level="INFO">${ACCURACY} = {'diff': [9.363899999999953e-05, 9.399999999999686e-05, 9.413800000000055e-05, 9.386100000000064e-05, 9.379099999999932e-05, 9.395800000000162e-05, 9.420800000000187e-05, 9.405600000000208e-05, 9.3875...</msg>
<status status="PASS" starttime="20201030 11:52:37.484" endtime="20201030 11:52:37.488"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.492" level="INFO">NAME: accuracy-TIMER_SLEEP-81-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.491" endtime="20201030 11:52:37.492"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.494" level="INFO">VALUE: [9.363899999999953e-05, 9.399999999999686e-05, 9.413800000000055e-05, 9.386100000000064e-05, 9.379099999999932e-05, 9.395800000000162e-05, 9.420800000000187e-05, 9.405600000000208e-05, 9.387500000000021e-05, 9.408299999999828e-05, 9.34590000000006e-05, 9.40139999999999e-05, 9.337500000000318e-05, 9.358300000000125e-05, 9.391599999999944e-05, 9.36529999999991e-05, 9.358299999999778e-05, 9.409699999999785e-05, 9.387500000000021e-05, 9.380600000000183e-05, 9.35139999999994e-05, 9.379199999999879e-05, 9.411100000000089e-05, 9.429199999999929e-05, 9.341699999999842e-05, 9.387500000000021e-05, 9.42079999999984e-05, 9.373600000000051e-05, 9.426400000000015e-05, 9.37079999999979e-05, 9.388899999999978e-05, 9.35139999999994e-05, 9.354199999999854e-05, 9.422300000000092e-05, 9.373699999999999e-05, 9.337499999999971e-05, 9.386100000000064e-05, 9.36520000000031e-05, 9.379099999999932e-05, 9.400000000000033e-05, 9.359700000000082e-05, 9.426400000000015e-05, 9.394500000000153e-05, 9.384700000000107e-05, 9.344499999999756e-05, 9.379199999999879e-05, 9.386200000000011e-05, 9.409699999999785e-05, 9.365199999999962e-05, 9.423599999999754e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.493" endtime="20201030 11:52:37.496"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.488" endtime="20201030 11:52:37.496"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.500" endtime="20201030 11:52:37.519"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.498" endtime="20201030 11:52:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.497" endtime="20201030 11:52:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.136" endtime="20201030 11:52:37.520"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.136" endtime="20201030 11:52:37.521"></status>
</kw>
<kw name="${duration} = 82" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.529" endtime="20201030 11:52:37.548"></status>
</kw>
<msg timestamp="20201030 11:52:37.549" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.528" endtime="20201030 11:52:37.549"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.551" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(82)', 'msg': ['sleep_accuracy_timer_sleep 82\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.550" endtime="20201030 11:52:37.551"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.552" endtime="20201030 11:52:37.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.525" endtime="20201030 11:52:37.554"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.523" endtime="20201030 11:52:37.555"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.561" endtime="20201030 11:52:37.847"></status>
</kw>
<msg timestamp="20201030 11:52:37.850" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585111, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:37.560" endtime="20201030 11:52:37.850"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.858" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.01949, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585111, 'source': 'DUT_IC', 'event': 'FALLING...</msg>
<status status="PASS" starttime="20201030 11:52:37.851" endtime="20201030 11:52:37.858"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.859" endtime="20201030 11:52:37.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.557" endtime="20201030 11:52:37.861"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.555" endtime="20201030 11:52:37.862"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:37.866" level="INFO">${RESULT} = [{'diff': 9.511099999999842e-05}, {'diff': 9.504100000000057e-05}, {'diff': 9.484700000000207e-05}, {'diff': 9.51530000000006e-05}, {'diff': 9.488899999999731e-05}, {'diff': 9.450000000000083e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:37.863" endtime="20201030 11:52:37.866"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:37.871" level="INFO">${ACCURACY} = {'diff': [9.511099999999842e-05, 9.504100000000057e-05, 9.484700000000207e-05, 9.51530000000006e-05, 9.488899999999731e-05, 9.450000000000083e-05, 9.443100000000246e-05, 9.508299999999928e-05, 9.45419...</msg>
<status status="PASS" starttime="20201030 11:52:37.867" endtime="20201030 11:52:37.871"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.875" level="INFO">NAME: accuracy-TIMER_SLEEP-82-philip</msg>
<status status="PASS" starttime="20201030 11:52:37.874" endtime="20201030 11:52:37.875"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.878" level="INFO">VALUE: [9.511099999999842e-05, 9.504100000000057e-05, 9.484700000000207e-05, 9.51530000000006e-05, 9.488899999999731e-05, 9.450000000000083e-05, 9.443100000000246e-05, 9.508299999999928e-05, 9.454199999999954e-05, 9.509799999999832e-05, 9.495799999999915e-05, 9.449999999999736e-05, 9.43880000000008e-05, 9.502800000000047e-05, 9.526399999999768e-05, 9.445800000000212e-05, 9.465200000000062e-05, 9.491699999999992e-05, 9.437500000000071e-05, 9.444499999999856e-05, 9.486100000000164e-05, 9.5027000000001e-05, 9.520900000000235e-05, 9.515199999999766e-05, 9.45140000000004e-05, 9.50140000000009e-05, 9.445800000000212e-05, 9.530599999999986e-05, 9.443099999999899e-05, 9.494499999999906e-05, 9.467999999999976e-05, 9.455599999999911e-05, 9.48880000000013e-05, 9.472300000000142e-05, 9.506900000000318e-05, 9.522199999999897e-05, 9.504200000000004e-05, 9.488899999999731e-05, 9.46530000000001e-05, 9.513900000000103e-05, 9.522199999999897e-05, 9.499999999999786e-05, 9.484799999999807e-05, 9.479199999999979e-05, 9.480599999999936e-05, 9.458299999999878e-05, 9.449999999999736e-05, 9.487499999999774e-05, 9.51530000000006e-05, 9.45140000000004e-05]</msg>
<status status="PASS" starttime="20201030 11:52:37.876" endtime="20201030 11:52:37.878"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.871" endtime="20201030 11:52:37.879"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:37.883" endtime="20201030 11:52:37.902"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.881" endtime="20201030 11:52:37.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.880" endtime="20201030 11:52:37.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.521" endtime="20201030 11:52:37.903"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.521" endtime="20201030 11:52:37.903"></status>
</kw>
<kw name="${duration} = 83" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.912" endtime="20201030 11:52:37.932"></status>
</kw>
<msg timestamp="20201030 11:52:37.933" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.911" endtime="20201030 11:52:37.933"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:37.935" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(83)', 'msg': ['sleep_accuracy_timer_sleep 83\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:37.934" endtime="20201030 11:52:37.935"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.936" endtime="20201030 11:52:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.908" endtime="20201030 11:52:37.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.906" endtime="20201030 11:52:37.939"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:37.945" endtime="20201030 11:52:38.232"></status>
</kw>
<msg timestamp="20201030 11:52:38.235" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:37.944" endtime="20201030 11:52:38.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.243" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019716125, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019811694, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.236" endtime="20201030 11:52:38.243"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.244" endtime="20201030 11:52:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.941" endtime="20201030 11:52:38.246"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.939" endtime="20201030 11:52:38.247"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:38.251" level="INFO">${RESULT} = [{'diff': 9.556900000000021e-05}, {'diff': 9.583300000000003e-05}, {'diff': 9.579099999999785e-05}, {'diff': 9.627800000000172e-05}, {'diff': 9.593000000000101e-05}, {'diff': 9.593100000000049e-05}, {...</msg>
<status status="PASS" starttime="20201030 11:52:38.247" endtime="20201030 11:52:38.251"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:38.255" level="INFO">${ACCURACY} = {'diff': [9.556900000000021e-05, 9.583300000000003e-05, 9.579099999999785e-05, 9.627800000000172e-05, 9.593000000000101e-05, 9.593100000000049e-05, 9.630600000000086e-05, 9.56669999999972e-05, 9.55979...</msg>
<status status="PASS" starttime="20201030 11:52:38.252" endtime="20201030 11:52:38.255"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.259" level="INFO">NAME: accuracy-TIMER_SLEEP-83-philip</msg>
<status status="PASS" starttime="20201030 11:52:38.258" endtime="20201030 11:52:38.259"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.261" level="INFO">VALUE: [9.556900000000021e-05, 9.583300000000003e-05, 9.579099999999785e-05, 9.627800000000172e-05, 9.593000000000101e-05, 9.593100000000049e-05, 9.630600000000086e-05, 9.56669999999972e-05, 9.559799999999882e-05, 9.60140000000019e-05, 9.572199999999947e-05, 9.588899999999831e-05, 9.559699999999935e-05, 9.573599999999904e-05, 9.587500000000221e-05, 9.580600000000036e-05, 9.60140000000019e-05, 9.580600000000036e-05, 9.616700000000117e-05, 9.55140000000014e-05, 9.600000000000233e-05, 9.544499999999956e-05, 9.630500000000139e-05, 9.580500000000089e-05, 9.56660000000012e-05, 9.613899999999856e-05, 9.558299999999978e-05, 9.544500000000303e-05, 9.573600000000251e-05, 9.594500000000006e-05, 9.579200000000079e-05, 9.554100000000107e-05, 9.559699999999935e-05, 9.622199999999997e-05, 9.552800000000097e-05, 9.611099999999942e-05, 9.606900000000071e-05, 9.637500000000271e-05, 9.572199999999947e-05, 9.543099999999999e-05, 9.56530000000011e-05, 9.573599999999904e-05, 9.572299999999895e-05, 9.565299999999763e-05, 9.556900000000021e-05, 9.552800000000097e-05, 9.555500000000064e-05, 9.588899999999831e-05, 9.542999999999704e-05, 9.563899999999806e-05]</msg>
<status status="PASS" starttime="20201030 11:52:38.260" endtime="20201030 11:52:38.262"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.256" endtime="20201030 11:52:38.263"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:38.267" endtime="20201030 11:52:38.286"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.265" endtime="20201030 11:52:38.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.264" endtime="20201030 11:52:38.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.904" endtime="20201030 11:52:38.287"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:37.904" endtime="20201030 11:52:38.287"></status>
</kw>
<kw name="${duration} = 84" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.296" endtime="20201030 11:52:38.315"></status>
</kw>
<msg timestamp="20201030 11:52:38.316" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.294" endtime="20201030 11:52:38.316"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.318" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(84)', 'msg': ['sleep_accuracy_timer_sleep 84\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.317" endtime="20201030 11:52:38.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.319" endtime="20201030 11:52:38.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.292" endtime="20201030 11:52:38.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.290" endtime="20201030 11:52:38.322"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.328" endtime="20201030 11:52:38.615"></status>
</kw>
<msg timestamp="20201030 11:52:38.618" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.326" endtime="20201030 11:52:38.619"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.627" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020392875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020489736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.620" endtime="20201030 11:52:38.627"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.628" endtime="20201030 11:52:38.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.324" endtime="20201030 11:52:38.630"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.322" endtime="20201030 11:52:38.631"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:38.634" level="INFO">${RESULT} = [{'diff': 9.686100000000017e-05}, {'diff': 9.672299999999995e-05}, {'diff': 9.66669999999982e-05}, {'diff': 9.64019999999989e-05}, {'diff': 9.673600000000004e-05}, {'diff': 9.680499999999842e-05}, {'d...</msg>
<status status="PASS" starttime="20201030 11:52:38.631" endtime="20201030 11:52:38.635"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:38.638" level="INFO">${ACCURACY} = {'diff': [9.686100000000017e-05, 9.672299999999995e-05, 9.66669999999982e-05, 9.64019999999989e-05, 9.673600000000004e-05, 9.680499999999842e-05, 9.651399999999893e-05, 9.665299999999863e-05, 9.676399...</msg>
<status status="PASS" starttime="20201030 11:52:38.635" endtime="20201030 11:52:38.639"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.643" level="INFO">NAME: accuracy-TIMER_SLEEP-84-philip</msg>
<status status="PASS" starttime="20201030 11:52:38.642" endtime="20201030 11:52:38.643"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.645" level="INFO">VALUE: [9.686100000000017e-05, 9.672299999999995e-05, 9.66669999999982e-05, 9.64019999999989e-05, 9.673600000000004e-05, 9.680499999999842e-05, 9.651399999999893e-05, 9.665299999999863e-05, 9.676399999999918e-05, 9.715299999999913e-05, 9.713899999999956e-05, 9.644500000000056e-05, 9.733299999999806e-05, 9.684699999999713e-05, 9.652800000000197e-05, 9.69860000000003e-05, 9.67920000000018e-05, 9.72219999999975e-05, 9.651399999999893e-05, 9.65140000000024e-05, 9.658400000000025e-05, 9.720799999999793e-05, 9.73059999999984e-05, 9.709700000000085e-05, 9.723600000000054e-05, 9.65279999999985e-05, 9.686100000000017e-05, 9.701399999999943e-05, 9.701399999999943e-05, 9.708300000000128e-05, 9.636099999999967e-05, 9.669499999999734e-05, 9.6334e-05, 9.652699999999903e-05, 9.673600000000004e-05, 9.677699999999928e-05, 9.651399999999893e-05, 9.688899999999931e-05, 9.661099999999992e-05, 9.661099999999992e-05, 9.694499999999759e-05, 9.673600000000004e-05, 9.66530000000021e-05, 9.73059999999984e-05, 9.647200000000022e-05, 9.669400000000133e-05, 9.690299999999888e-05, 9.711100000000042e-05, 9.68470000000006e-05, 9.676400000000265e-05]</msg>
<status status="PASS" starttime="20201030 11:52:38.644" endtime="20201030 11:52:38.647"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.639" endtime="20201030 11:52:38.647"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:38.651" endtime="20201030 11:52:38.670"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.649" endtime="20201030 11:52:38.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.648" endtime="20201030 11:52:38.671"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.288" endtime="20201030 11:52:38.672"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.288" endtime="20201030 11:52:38.672"></status>
</kw>
<kw name="${duration} = 85" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.680" endtime="20201030 11:52:38.699"></status>
</kw>
<msg timestamp="20201030 11:52:38.700" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.679" endtime="20201030 11:52:38.700"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:38.702" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(85)', 'msg': ['sleep_accuracy_timer_sleep 85\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:38.701" endtime="20201030 11:52:38.702"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.703" endtime="20201030 11:52:38.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.676" endtime="20201030 11:52:38.705"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.674" endtime="20201030 11:52:38.706"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:38.712" endtime="20201030 11:52:38.998"></status>
</kw>
<msg timestamp="20201030 11:52:39.001" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:38.710" endtime="20201030 11:52:39.001"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.009" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019567181, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019665403, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.002" endtime="20201030 11:52:39.010"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.010" endtime="20201030 11:52:39.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.708" endtime="20201030 11:52:39.013"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.706" endtime="20201030 11:52:39.013"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.017" level="INFO">${RESULT} = [{'diff': 9.822200000000197e-05}, {'diff': 9.809799999999785e-05}, {'diff': 9.773700000000052e-05}, {'diff': 9.74730000000007e-05}, {'diff': 9.816600000000023e-05}, {'diff': 9.744399999999862e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:39.014" endtime="20201030 11:52:39.017"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.022" level="INFO">${ACCURACY} = {'diff': [9.822200000000197e-05, 9.809799999999785e-05, 9.773700000000052e-05, 9.74730000000007e-05, 9.816600000000023e-05, 9.744399999999862e-05, 9.744399999999862e-05, 9.780499999999942e-05, 9.75690...</msg>
<status status="PASS" starttime="20201030 11:52:39.018" endtime="20201030 11:52:39.022"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.027" level="INFO">NAME: accuracy-TIMER_SLEEP-85-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.025" endtime="20201030 11:52:39.027"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.029" level="INFO">VALUE: [9.822200000000197e-05, 9.809799999999785e-05, 9.773700000000052e-05, 9.74730000000007e-05, 9.816600000000023e-05, 9.744399999999862e-05, 9.744399999999862e-05, 9.780499999999942e-05, 9.756900000000221e-05, 9.815300000000013e-05, 9.744399999999862e-05, 9.750000000000036e-05, 9.747199999999775e-05, 9.806899999999924e-05, 9.76530000000031e-05, 9.794400000000258e-05, 9.783299999999856e-05, 9.794399999999912e-05, 9.743000000000251e-05, 9.765299999999963e-05, 9.82219999999985e-05, 9.780600000000236e-05, 9.777799999999975e-05, 9.824999999999764e-05, 9.741699999999895e-05, 9.794500000000206e-05, 9.787499999999727e-05, 9.801400000000043e-05, 9.783300000000203e-05, 9.742999999999905e-05, 9.794399999999912e-05, 9.754199999999907e-05, 9.787499999999727e-05, 9.752800000000297e-05, 9.744499999999809e-05, 9.772300000000095e-05, 9.777799999999975e-05, 9.761100000000092e-05, 9.801400000000043e-05, 9.809699999999838e-05, 9.819500000000231e-05, 9.823599999999807e-05, 9.751399999999993e-05, 9.744500000000156e-05, 9.815300000000013e-05, 9.775000000000061e-05, 9.743099999999852e-05, 9.780499999999942e-05, 9.773600000000104e-05, 9.75279999999995e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.028" endtime="20201030 11:52:39.030"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.023" endtime="20201030 11:52:39.030"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.034" endtime="20201030 11:52:39.053"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.032" endtime="20201030 11:52:39.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.031" endtime="20201030 11:52:39.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.673" endtime="20201030 11:52:39.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:38.672" endtime="20201030 11:52:39.054"></status>
</kw>
<kw name="${duration} = 86" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.063" endtime="20201030 11:52:39.083"></status>
</kw>
<msg timestamp="20201030 11:52:39.084" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.062" endtime="20201030 11:52:39.084"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.086" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(86)', 'msg': ['sleep_accuracy_timer_sleep 86\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.085" endtime="20201030 11:52:39.087"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.087" endtime="20201030 11:52:39.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.059" endtime="20201030 11:52:39.089"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.057" endtime="20201030 11:52:39.090"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.096" endtime="20201030 11:52:39.383"></status>
</kw>
<msg timestamp="20201030 11:52:39.386" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020585764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.095" endtime="20201030 11:52:39.386"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.394" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020585764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020685069, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.387" endtime="20201030 11:52:39.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.396" endtime="20201030 11:52:39.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.092" endtime="20201030 11:52:39.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.090" endtime="20201030 11:52:39.398"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.402" level="INFO">${RESULT} = [{'diff': 9.930500000000092e-05}, {'diff': 9.916600000000123e-05}, {'diff': 9.851399999999746e-05}, {'diff': 9.858299999999931e-05}, {'diff': 9.879200000000032e-05}, {'diff': 9.93470000000031e-05}, {'...</msg>
<status status="PASS" starttime="20201030 11:52:39.399" endtime="20201030 11:52:39.402"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.406" level="INFO">${ACCURACY} = {'diff': [9.930500000000092e-05, 9.916600000000123e-05, 9.851399999999746e-05, 9.858299999999931e-05, 9.879200000000032e-05, 9.93470000000031e-05, 9.870799999999944e-05, 9.920799999999994e-05, 9.91120...</msg>
<status status="PASS" starttime="20201030 11:52:39.403" endtime="20201030 11:52:39.406"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.411" level="INFO">NAME: accuracy-TIMER_SLEEP-86-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.410" endtime="20201030 11:52:39.411"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.413" level="INFO">VALUE: [9.930500000000092e-05, 9.916600000000123e-05, 9.851399999999746e-05, 9.858299999999931e-05, 9.879200000000032e-05, 9.93470000000031e-05, 9.870799999999944e-05, 9.920799999999994e-05, 9.911200000000189e-05, 9.920899999999941e-05, 9.85280000000005e-05, 9.89860000000023e-05, 9.84860000000018e-05, 9.897200000000272e-05, 9.930499999999745e-05, 9.880500000000042e-05, 9.844399999999962e-05, 9.85280000000005e-05, 9.881899999999999e-05, 9.915300000000113e-05, 9.894499999999959e-05, 9.894499999999959e-05, 9.875000000000161e-05, 9.873600000000204e-05, 9.908299999999981e-05, 9.83609999999982e-05, 9.86670000000002e-05, 9.858300000000278e-05, 9.844499999999909e-05, 9.881999999999946e-05, 9.88059999999999e-05, 9.890300000000088e-05, 9.845800000000265e-05, 9.880500000000042e-05, 9.837500000000124e-05, 9.858299999999931e-05, 9.893000000000055e-05, 9.856899999999974e-05, 9.86670000000002e-05, 9.872200000000247e-05, 9.854200000000007e-05, 9.93060000000004e-05, 9.905500000000067e-05, 9.843099999999952e-05, 9.906900000000024e-05, 9.906900000000024e-05, 9.85280000000005e-05, 9.859700000000235e-05, 9.933399999999953e-05, 9.833299999999906e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.412" endtime="20201030 11:52:39.414"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.407" endtime="20201030 11:52:39.414"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.418" endtime="20201030 11:52:39.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.417" endtime="20201030 11:52:39.438"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.415" endtime="20201030 11:52:39.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.055" endtime="20201030 11:52:39.439"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.055" endtime="20201030 11:52:39.439"></status>
</kw>
<kw name="${duration} = 87" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.448" endtime="20201030 11:52:39.468"></status>
</kw>
<msg timestamp="20201030 11:52:39.469" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.446" endtime="20201030 11:52:39.469"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.471" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(87)', 'msg': ['sleep_accuracy_timer_sleep 87\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.470" endtime="20201030 11:52:39.471"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.472" endtime="20201030 11:52:39.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.443" endtime="20201030 11:52:39.474"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.441" endtime="20201030 11:52:39.475"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.481" endtime="20201030 11:52:39.768"></status>
</kw>
<msg timestamp="20201030 11:52:39.771" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021314833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.479" endtime="20201030 11:52:39.771"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.779" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.021215236, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.021314833, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.772" endtime="20201030 11:52:39.780"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.781" endtime="20201030 11:52:39.782"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.477" endtime="20201030 11:52:39.783"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.475" endtime="20201030 11:52:39.783"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:39.787" level="INFO">${RESULT} = [{'diff': 9.959699999999988e-05}, {'diff': 9.986100000000317e-05}, {'diff': 9.979099999999838e-05}, {'diff': 0.00010006899999999777}, {'diff': 9.977800000000175e-05}, {'diff': 9.955600000000064e-05}, ...</msg>
<status status="PASS" starttime="20201030 11:52:39.784" endtime="20201030 11:52:39.787"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:39.791" level="INFO">${ACCURACY} = {'diff': [9.959699999999988e-05, 9.986100000000317e-05, 9.979099999999838e-05, 0.00010006899999999777, 9.977800000000175e-05, 9.955600000000064e-05, 9.958400000000325e-05, 9.948599999999932e-05, 9.930...</msg>
<status status="PASS" starttime="20201030 11:52:39.788" endtime="20201030 11:52:39.791"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.795" level="INFO">NAME: accuracy-TIMER_SLEEP-87-philip</msg>
<status status="PASS" starttime="20201030 11:52:39.794" endtime="20201030 11:52:39.796"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.798" level="INFO">VALUE: [9.959699999999988e-05, 9.986100000000317e-05, 9.979099999999838e-05, 0.00010006899999999777, 9.977800000000175e-05, 9.955600000000064e-05, 9.958400000000325e-05, 9.948599999999932e-05, 9.93060000000004e-05, 9.961099999999945e-05, 9.984700000000013e-05, 0.00010008300000000081, 9.969500000000034e-05, 0.00010002799999999853, 9.98609999999997e-05, 9.944500000000009e-05, 9.9722e-05, 0.00010032000000000096, 9.958399999999978e-05, 9.963899999999859e-05, 9.952700000000203e-05, 9.980499999999795e-05, 9.944400000000062e-05, 0.00010024999999999964, 9.993000000000155e-05, 9.994400000000112e-05, 0.0001002220000000005, 0.00010009700000000038, 9.951399999999846e-05, 0.00010008400000000028, 9.980599999999742e-05, 9.934699999999963e-05, 9.959699999999988e-05, 9.940299999999791e-05, 9.93609999999992e-05, 9.96670000000012e-05, 9.965300000000163e-05, 0.0001003060000000014, 0.00010001399999999896, 9.973699999999905e-05, 9.98609999999997e-05, 9.94999999999989e-05, 0.00010006900000000124, 9.9722e-05, 0.00010001400000000243, 0.00010023600000000008, 0.00010030599999999792, 9.96670000000012e-05, 9.951399999999846e-05, 9.9722e-05]</msg>
<status status="PASS" starttime="20201030 11:52:39.796" endtime="20201030 11:52:39.799"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.792" endtime="20201030 11:52:39.800"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:39.803" endtime="20201030 11:52:39.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.802" endtime="20201030 11:52:39.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.801" endtime="20201030 11:52:39.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.440" endtime="20201030 11:52:39.824"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.439" endtime="20201030 11:52:39.824"></status>
</kw>
<kw name="${duration} = 88" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.833" endtime="20201030 11:52:39.853"></status>
</kw>
<msg timestamp="20201030 11:52:39.853" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.831" endtime="20201030 11:52:39.853"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:39.855" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(88)', 'msg': ['sleep_accuracy_timer_sleep 88\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:39.854" endtime="20201030 11:52:39.856"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.856" endtime="20201030 11:52:39.858"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.829" endtime="20201030 11:52:39.859"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.827" endtime="20201030 11:52:39.859"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:39.865" endtime="20201030 11:52:40.151"></status>
</kw>
<msg timestamp="20201030 11:52:40.154" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:39.864" endtime="20201030 11:52:40.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.162" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019983819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020085014, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.155" endtime="20201030 11:52:40.162"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.163" endtime="20201030 11:52:40.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.861" endtime="20201030 11:52:40.165"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.860" endtime="20201030 11:52:40.166"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.170" level="INFO">${RESULT} = [{'diff': 0.00010119500000000184}, {'diff': 0.00010033300000000106}, {'diff': 0.00010058300000000131}, {'diff': 0.00010129199999999935}, {'diff': 0.00010065299999999916}, {'diff': 0.000100653000000002...</msg>
<status status="PASS" starttime="20201030 11:52:40.167" endtime="20201030 11:52:40.170"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.175" level="INFO">${ACCURACY} = {'diff': [0.00010119500000000184, 0.00010033300000000106, 0.00010058300000000131, 0.00010129199999999935, 0.00010065299999999916, 0.00010065300000000263, 0.00010094399999999865, 0.00010127700000000031...</msg>
<status status="PASS" starttime="20201030 11:52:40.171" endtime="20201030 11:52:40.175"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.179" level="INFO">NAME: accuracy-TIMER_SLEEP-88-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.178" endtime="20201030 11:52:40.179"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.181" level="INFO">VALUE: [0.00010119500000000184, 0.00010033300000000106, 0.00010058300000000131, 0.00010129199999999935, 0.00010065299999999916, 0.00010065300000000263, 0.00010094399999999865, 0.00010127700000000031, 0.00010129099999999988, 0.00010051399999999946, 0.0001005419999999986, 0.00010051399999999946, 0.00010108400000000128, 0.00010095900000000116, 0.0001010000000000004, 0.00010093099999999855, 0.000100722000000001, 0.00010040300000000238, 0.000100722000000001, 0.00010123600000000108, 0.00010101399999999996, 0.00010091699999999898, 0.0001010419999999991, 0.00010065300000000263, 0.00010130599999999892, 0.00010080599999999842, 0.0001008060000000019, 0.00010080499999999895, 0.00010044399999999815, 0.00010084700000000113, 0.00010094400000000212, 0.00010115299999999966, 0.00010037499999999977, 0.00010043000000000205, 0.00010037500000000324, 0.00010094500000000159, 0.00010052699999999956, 0.00010090199999999994, 0.00010065200000000316, 0.00010113900000000009, 0.00010102799999999953, 0.00010106899999999877, 0.000100722000000001, 0.00010058300000000131, 0.0001004999999999999, 0.00010058400000000078, 0.00010127799999999978, 0.00010109700000000138, 0.000100722000000001, 0.00010109700000000138]</msg>
<status status="PASS" starttime="20201030 11:52:40.180" endtime="20201030 11:52:40.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.175" endtime="20201030 11:52:40.183"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.186" endtime="20201030 11:52:40.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.185" endtime="20201030 11:52:40.206"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.184" endtime="20201030 11:52:40.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.825" endtime="20201030 11:52:40.207"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:39.824" endtime="20201030 11:52:40.207"></status>
</kw>
<kw name="${duration} = 89" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.216" endtime="20201030 11:52:40.234"></status>
</kw>
<msg timestamp="20201030 11:52:40.235" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.214" endtime="20201030 11:52:40.235"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.237" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(89)', 'msg': ['sleep_accuracy_timer_sleep 89\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.236" endtime="20201030 11:52:40.237"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.238" endtime="20201030 11:52:40.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.212" endtime="20201030 11:52:40.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.210" endtime="20201030 11:52:40.241"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.247" endtime="20201030 11:52:40.534"></status>
</kw>
<msg timestamp="20201030 11:52:40.537" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.245" endtime="20201030 11:52:40.538"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.546" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019775361, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019877431, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.539" endtime="20201030 11:52:40.546"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.547" endtime="20201030 11:52:40.548"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.243" endtime="20201030 11:52:40.549"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.241" endtime="20201030 11:52:40.549"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.553" level="INFO">${RESULT} = [{'diff': 0.00010206999999999924}, {'diff': 0.00010137500000000077}, {'diff': 0.00010209699999999891}, {'diff': 0.00010176399999999725}, {'diff': 0.00010173600000000158}, {'diff': 0.000102082999999999...</msg>
<status status="PASS" starttime="20201030 11:52:40.550" endtime="20201030 11:52:40.553"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.557" level="INFO">${ACCURACY} = {'diff': [0.00010206999999999924, 0.00010137500000000077, 0.00010209699999999891, 0.00010176399999999725, 0.00010173600000000158, 0.00010208299999999934, 0.00010147300000000123, 0.0001023199999999995,...</msg>
<status status="PASS" starttime="20201030 11:52:40.554" endtime="20201030 11:52:40.557"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.561" level="INFO">NAME: accuracy-TIMER_SLEEP-89-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.560" endtime="20201030 11:52:40.562"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.564" level="INFO">VALUE: [0.00010206999999999924, 0.00010137500000000077, 0.00010209699999999891, 0.00010176399999999725, 0.00010173600000000158, 0.00010208299999999934, 0.00010147300000000123, 0.0001023199999999995, 0.00010152800000000003, 0.00010202800000000053, 0.00010202700000000106, 0.00010174999999999768, 0.00010216599999999729, 0.00010205599999999967, 0.00010202800000000053, 0.00010151400000000046, 0.0001015419999999996, 0.00010198599999999836, 0.00010195899999999869, 0.00010151400000000046, 0.00010137500000000077, 0.00010138900000000034, 0.00010226299999999827, 0.00010186099999999823, 0.00010194399999999965, 0.00010172199999999854, 0.00010179199999999985, 0.00010201400000000097, 0.00010202800000000053, 0.00010179199999999985, 0.00010165300000000016, 0.00010208400000000228, 0.00010195800000000269, 0.00010172199999999854, 0.00010144400000000262, 0.00010137500000000077, 0.0001023199999999995, 0.00010201400000000097, 0.00010172199999999854, 0.00010227800000000078, 0.00010223699999999808, 0.00010137500000000077, 0.00010141699999999948, 0.00010190200000000094, 0.00010206899999999977, 0.00010159700000000188, 0.00010215300000000066, 0.00010215300000000066, 0.00010187500000000127, 0.000101513999999997]</msg>
<status status="PASS" starttime="20201030 11:52:40.562" endtime="20201030 11:52:40.565"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.558" endtime="20201030 11:52:40.565"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.569" endtime="20201030 11:52:40.588"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.567" endtime="20201030 11:52:40.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.566" endtime="20201030 11:52:40.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.208" endtime="20201030 11:52:40.589"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.207" endtime="20201030 11:52:40.590"></status>
</kw>
<kw name="${duration} = 90" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.598" endtime="20201030 11:52:40.620"></status>
</kw>
<msg timestamp="20201030 11:52:40.621" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.597" endtime="20201030 11:52:40.621"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.623" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(90)', 'msg': ['sleep_accuracy_timer_sleep 90\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.622" endtime="20201030 11:52:40.624"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.624" endtime="20201030 11:52:40.626"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.594" endtime="20201030 11:52:40.627"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.592" endtime="20201030 11:52:40.627"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.633" endtime="20201030 11:52:40.919"></status>
</kw>
<msg timestamp="20201030 11:52:40.922" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.632" endtime="20201030 11:52:40.923"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.931" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.022593056, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.022695931, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:40.923" endtime="20201030 11:52:40.931"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.932" endtime="20201030 11:52:40.933"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.629" endtime="20201030 11:52:40.934"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.628" endtime="20201030 11:52:40.934"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:40.938" level="INFO">${RESULT} = [{'diff': 0.0001028749999999988}, {'diff': 0.00010329200000000135}, {'diff': 0.00010284699999999966}, {'diff': 0.00010279200000000085}, {'diff': 0.00010270799999999997}, {'diff': 0.0001027219999999995...</msg>
<status status="PASS" starttime="20201030 11:52:40.935" endtime="20201030 11:52:40.938"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:40.942" level="INFO">${ACCURACY} = {'diff': [0.0001028749999999988, 0.00010329200000000135, 0.00010284699999999966, 0.00010279200000000085, 0.00010270799999999997, 0.00010272199999999954, 0.00010288899999999837, 0.00010251400000000147,...</msg>
<status status="PASS" starttime="20201030 11:52:40.939" endtime="20201030 11:52:40.942"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.946" level="INFO">NAME: accuracy-TIMER_SLEEP-90-philip</msg>
<status status="PASS" starttime="20201030 11:52:40.945" endtime="20201030 11:52:40.947"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:40.949" level="INFO">VALUE: [0.0001028749999999988, 0.00010329200000000135, 0.00010284699999999966, 0.00010279200000000085, 0.00010270799999999997, 0.00010272199999999954, 0.00010288899999999837, 0.00010251400000000147, 0.00010265299999999769, 0.00010243000000000058, 0.00010280600000000042, 0.00010327799999999832, 0.00010297199999999979, 0.00010252800000000103, 0.00010266600000000126, 0.00010330499999999798, 0.00010237500000000177, 0.00010258299999999984, 0.00010313900000000209, 0.00010291700000000098, 0.00010288900000000184, 0.00010330600000000092, 0.00010259800000000235, 0.00010319399999999743, 0.00010266699999999726, 0.00010294500000000012, 0.00010259700000000288, 0.00010322200000000004, 0.00010266699999999726, 0.00010265300000000116, 0.00010243100000000005, 0.00010244499999999962, 0.00010273600000000258, 0.00010251400000000147, 0.00010243100000000005, 0.00010295800000000022, 0.00010301299999999902, 0.00010237500000000177, 0.000102513999999998, 0.00010302800000000154, 0.00010258299999999984, 0.00010252800000000103, 0.00010263899999999812, 0.00010270799999999997, 0.00010293099999999708, 0.00010301400000000197, 0.00010248600000000233, 0.000102513999999998, 0.00010287500000000227, 0.00010283300000000009]</msg>
<status status="PASS" starttime="20201030 11:52:40.948" endtime="20201030 11:52:40.950"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.943" endtime="20201030 11:52:40.951"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:40.954" endtime="20201030 11:52:40.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.953" endtime="20201030 11:52:40.974"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.952" endtime="20201030 11:52:40.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.591" endtime="20201030 11:52:40.975"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.590" endtime="20201030 11:52:40.975"></status>
</kw>
<kw name="${duration} = 91" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:40.984" endtime="20201030 11:52:41.002"></status>
</kw>
<msg timestamp="20201030 11:52:41.003" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:40.982" endtime="20201030 11:52:41.003"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.005" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(91)', 'msg': ['sleep_accuracy_timer_sleep 91\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.004" endtime="20201030 11:52:41.005"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.006" endtime="20201030 11:52:41.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.980" endtime="20201030 11:52:41.008"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.978" endtime="20201030 11:52:41.009"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.015" endtime="20201030 11:52:41.300"></status>
</kw>
<msg timestamp="20201030 11:52:41.303" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.014" endtime="20201030 11:52:41.304"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.311" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481542, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019585083, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.304" endtime="20201030 11:52:41.312"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.313" endtime="20201030 11:52:41.314"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.011" endtime="20201030 11:52:41.315"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.009" endtime="20201030 11:52:41.315"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.319" level="INFO">${RESULT} = [{'diff': 0.00010354099999999866}, {'diff': 0.00010338900000000234}, {'diff': 0.00010415299999999919}, {'diff': 0.00010359700000000041}, {'diff': 0.000103513999999999}, {'diff': 0.00010422199999999757...</msg>
<status status="PASS" starttime="20201030 11:52:41.316" endtime="20201030 11:52:41.319"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.324" level="INFO">${ACCURACY} = {'diff': [0.00010354099999999866, 0.00010338900000000234, 0.00010415299999999919, 0.00010359700000000041, 0.000103513999999999, 0.00010422199999999757, 0.00010407000000000124, 0.00010420900000000094, ...</msg>
<status status="PASS" starttime="20201030 11:52:41.320" endtime="20201030 11:52:41.324"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.329" level="INFO">NAME: accuracy-TIMER_SLEEP-91-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.327" endtime="20201030 11:52:41.329"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.331" level="INFO">VALUE: [0.00010354099999999866, 0.00010338900000000234, 0.00010415299999999919, 0.00010359700000000041, 0.000103513999999999, 0.00010422199999999757, 0.00010407000000000124, 0.00010420900000000094, 0.00010380500000000195, 0.00010361099999999998, 0.00010408299999999787, 0.00010372200000000054, 0.00010365299999999869, 0.00010344400000000115, 0.00010365299999999869, 0.00010344499999999715, 0.00010408400000000081, 0.00010363900000000259, 0.00010409700000000091, 0.0001033749999999993, 0.00010425000000000018, 0.00010381900000000152, 0.00010422199999999757, 0.00010393100000000155, 0.00010406999999999778, 0.00010341699999999801, 0.00010405499999999873, 0.00010401400000000297, 0.00010409700000000091, 0.00010338899999999887, 0.00010358300000000084, 0.00010436099999999726, 0.0001040139999999995, 0.00010402799999999907, 0.0001033749999999993, 0.00010340300000000191, 0.00010398600000000036, 0.00010394500000000112, 0.00010380599999999796, 0.0001037360000000001, 0.0001037360000000001, 0.00010417999999999886, 0.00010409700000000091, 0.00010337500000000277, 0.00010344400000000115, 0.00010372200000000054, 0.00010429200000000236, 0.00010426399999999975, 0.00010430600000000192, 0.0001042360000000006]</msg>
<status status="PASS" starttime="20201030 11:52:41.330" endtime="20201030 11:52:41.332"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.325" endtime="20201030 11:52:41.332"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.336" endtime="20201030 11:52:41.355"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.334" endtime="20201030 11:52:41.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.333" endtime="20201030 11:52:41.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.976" endtime="20201030 11:52:41.356"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:40.976" endtime="20201030 11:52:41.357"></status>
</kw>
<kw name="${duration} = 92" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.365" endtime="20201030 11:52:41.384"></status>
</kw>
<msg timestamp="20201030 11:52:41.385" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.364" endtime="20201030 11:52:41.385"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.387" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(92)', 'msg': ['sleep_accuracy_timer_sleep 92\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.386" endtime="20201030 11:52:41.388"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.388" endtime="20201030 11:52:41.390"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.361" endtime="20201030 11:52:41.391"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.359" endtime="20201030 11:52:41.391"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.398" endtime="20201030 11:52:41.685"></status>
</kw>
<msg timestamp="20201030 11:52:41.688" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.396" endtime="20201030 11:52:41.688"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.696" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019739097, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019844111, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.689" endtime="20201030 11:52:41.696"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.697" endtime="20201030 11:52:41.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.393" endtime="20201030 11:52:41.699"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.392" endtime="20201030 11:52:41.700"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:41.703" level="INFO">${RESULT} = [{'diff': 0.0001050140000000005}, {'diff': 0.000104514}, {'diff': 0.00010525000000000118}, {'diff': 0.0001045689999999988}, {'diff': 0.00010472299999999754}, {'diff': 0.00010480499999999948}, {'diff':...</msg>
<status status="PASS" starttime="20201030 11:52:41.700" endtime="20201030 11:52:41.704"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:41.707" level="INFO">${ACCURACY} = {'diff': [0.0001050140000000005, 0.000104514, 0.00010525000000000118, 0.0001045689999999988, 0.00010472299999999754, 0.00010480499999999948, 0.00010522200000000204, 0.00010508299999999887, 0.000104777...</msg>
<status status="PASS" starttime="20201030 11:52:41.704" endtime="20201030 11:52:41.708"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.712" level="INFO">NAME: accuracy-TIMER_SLEEP-92-philip</msg>
<status status="PASS" starttime="20201030 11:52:41.711" endtime="20201030 11:52:41.712"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.714" level="INFO">VALUE: [0.0001050140000000005, 0.000104514, 0.00010525000000000118, 0.0001045689999999988, 0.00010472299999999754, 0.00010480499999999948, 0.00010522200000000204, 0.00010508299999999887, 0.00010477700000000034, 0.00010449999999999696, 0.00010505499999999973, 0.00010522199999999857, 0.00010484799999999767, 0.00010508399999999835, 0.00010500000000000093, 0.00010526400000000075, 0.00010458399999999785, 0.00010495799999999875, 0.00010452799999999957, 0.00010434699999999769, 0.00010480500000000295, 0.00010509699999999844, 0.00010487499999999733, 0.00010495899999999822, 0.00010466699999999926, 0.00010475000000000068, 0.00010486199999999724, 0.00010492999999999961, 0.00010502800000000007, 0.00010467999999999936, 0.00010480499999999948, 0.00010429199999999889, 0.00010450000000000043, 0.00010530599999999946, 0.0001050140000000005, 0.00010467999999999936, 0.00010468099999999883, 0.00010495799999999875, 0.00010509700000000191, 0.00010441599999999954, 0.00010486099999999776, 0.0001050140000000005, 0.000104820000000002, 0.00010509799999999792, 0.00010445900000000119, 0.00010479200000000286, 0.00010463900000000012, 0.00010465200000000022, 0.00010449999999999696, 0.00010456900000000227]</msg>
<status status="PASS" starttime="20201030 11:52:41.713" endtime="20201030 11:52:41.715"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.708" endtime="20201030 11:52:41.715"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:41.719" endtime="20201030 11:52:41.738"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.718" endtime="20201030 11:52:41.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.716" endtime="20201030 11:52:41.739"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.357" endtime="20201030 11:52:41.740"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.357" endtime="20201030 11:52:41.740"></status>
</kw>
<kw name="${duration} = 93" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.748" endtime="20201030 11:52:41.768"></status>
</kw>
<msg timestamp="20201030 11:52:41.769" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.747" endtime="20201030 11:52:41.769"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:41.772" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(93)', 'msg': ['sleep_accuracy_timer_sleep 93\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:41.770" endtime="20201030 11:52:41.772"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.773" endtime="20201030 11:52:41.774"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.744" endtime="20201030 11:52:41.775"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.742" endtime="20201030 11:52:41.775"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:41.781" endtime="20201030 11:52:42.073"></status>
</kw>
<msg timestamp="20201030 11:52:42.080" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:41.780" endtime="20201030 11:52:42.081"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.098" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020652708, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020758917, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.082" endtime="20201030 11:52:42.099"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.101" endtime="20201030 11:52:42.104"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.777" endtime="20201030 11:52:42.105"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.776" endtime="20201030 11:52:42.106"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.114" level="INFO">${RESULT} = [{'diff': 0.00010620900000000294}, {'diff': 0.0001057360000000021}, {'diff': 0.00010544399999999968}, {'diff': 0.00010609699999999944}, {'diff': 0.0001053750000000013}, {'diff': 0.00010630500000000098...</msg>
<status status="PASS" starttime="20201030 11:52:42.107" endtime="20201030 11:52:42.114"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.123" level="INFO">${ACCURACY} = {'diff': [0.00010620900000000294, 0.0001057360000000021, 0.00010544399999999968, 0.00010609699999999944, 0.0001053750000000013, 0.00010630500000000098, 0.00010618100000000033, 0.00010573599999999864, ...</msg>
<status status="PASS" starttime="20201030 11:52:42.116" endtime="20201030 11:52:42.123"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.132" level="INFO">NAME: accuracy-TIMER_SLEEP-93-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.130" endtime="20201030 11:52:42.132"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.137" level="INFO">VALUE: [0.00010620900000000294, 0.0001057360000000021, 0.00010544399999999968, 0.00010609699999999944, 0.0001053750000000013, 0.00010630500000000098, 0.00010618100000000033, 0.00010573599999999864, 0.00010625000000000218, 0.00010586099999999876, 0.00010545899999999872, 0.000105514000000001, 0.0001058750000000018, 0.00010613899999999815, 0.00010636099999999926, 0.00010545799999999925, 0.00010573599999999864, 0.000105820000000003, 0.00010572200000000254, 0.00010591700000000051, 0.00010545899999999872, 0.00010591600000000104, 0.00010577700000000134, 0.0001053750000000013, 0.00010630499999999751, 0.00010558299999999937, 0.00010601399999999803, 0.0001060560000000002, 0.00010545899999999872, 0.00010536100000000173, 0.00010622299999999904, 0.0001060140000000015, 0.00010615199999999825, 0.00010581900000000005, 0.00010615300000000119, 0.0001058750000000018, 0.00010609699999999944, 0.00010552800000000057, 0.0001058339999999991, 0.00010572199999999907, 0.00010599999999999846, 0.00010558399999999885, 0.00010591700000000051, 0.00010584699999999919, 0.00010565300000000069, 0.0001057360000000021, 0.0001058889999999979, 0.00010540300000000044, 0.00010594499999999965, 0.00010608399999999935]</msg>
<status status="PASS" starttime="20201030 11:52:42.134" endtime="20201030 11:52:42.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.124" endtime="20201030 11:52:42.141"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.148" endtime="20201030 11:52:42.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.145" endtime="20201030 11:52:42.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.143" endtime="20201030 11:52:42.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.741" endtime="20201030 11:52:42.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:41.740" endtime="20201030 11:52:42.169"></status>
</kw>
<kw name="${duration} = 94" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.178" endtime="20201030 11:52:42.197"></status>
</kw>
<msg timestamp="20201030 11:52:42.198" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.176" endtime="20201030 11:52:42.198"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.200" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(94)', 'msg': ['sleep_accuracy_timer_sleep 94\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.199" endtime="20201030 11:52:42.201"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.201" endtime="20201030 11:52:42.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.174" endtime="20201030 11:52:42.203"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.172" endtime="20201030 11:52:42.204"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.210" endtime="20201030 11:52:42.496"></status>
</kw>
<msg timestamp="20201030 11:52:42.499" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.209" endtime="20201030 11:52:42.499"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.507" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019678819, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019785944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.500" endtime="20201030 11:52:42.507"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.508" endtime="20201030 11:52:42.509"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.206" endtime="20201030 11:52:42.510"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.204" endtime="20201030 11:52:42.510"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.514" level="INFO">${RESULT} = [{'diff': 0.00010712499999999958}, {'diff': 0.00010641599999999807}, {'diff': 0.00010699999999999946}, {'diff': 0.00010679099999999844}, {'diff': 0.00010701399999999903}, {'diff': 0.000107152999999998...</msg>
<status status="PASS" starttime="20201030 11:52:42.511" endtime="20201030 11:52:42.514"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.519" level="INFO">${ACCURACY} = {'diff': [0.00010712499999999958, 0.00010641599999999807, 0.00010699999999999946, 0.00010679099999999844, 0.00010701399999999903, 0.00010715299999999872, 0.0001065690000000008, 0.0001067080000000005, ...</msg>
<status status="PASS" starttime="20201030 11:52:42.515" endtime="20201030 11:52:42.519"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.524" level="INFO">NAME: accuracy-TIMER_SLEEP-94-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.522" endtime="20201030 11:52:42.524"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.526" level="INFO">VALUE: [0.00010712499999999958, 0.00010641599999999807, 0.00010699999999999946, 0.00010679099999999844, 0.00010701399999999903, 0.00010715299999999872, 0.0001065690000000008, 0.0001067080000000005, 0.00010673699999999911, 0.00010700000000000293, 0.00010658399999999985, 0.00010637499999999883, 0.00010638900000000187, 0.00010668000000000136, 0.00010651399999999853, 0.0001070140000000025, 0.00010708300000000087, 0.00010713899999999915, 0.00010679199999999792, 0.00010666699999999779, 0.00010658399999999985, 0.00010643000000000111, 0.00010723600000000014, 0.00010663899999999865, 0.00010637499999999883, 0.00010716700000000176, 0.0001063889999999984, 0.00010715300000000219, 0.0001070140000000025, 0.00010643100000000058, 0.00010652699999999862, 0.00010666699999999779, 0.00010672200000000007, 0.00010633300000000012, 0.00010705599999999774, 0.00010651399999999853, 0.00010708300000000087, 0.000106514000000002, 0.00010632000000000003, 0.00010672299999999954, 0.00010684799999999967, 0.00010656899999999733, 0.00010730499999999851, 0.00010711100000000001, 0.00010711100000000001, 0.00010730600000000146, 0.00010680599999999749, 0.00010694500000000065, 0.00010666700000000126, 0.00010644499999999668]</msg>
<status status="PASS" starttime="20201030 11:52:42.525" endtime="20201030 11:52:42.527"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.520" endtime="20201030 11:52:42.527"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.531" endtime="20201030 11:52:42.550"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.529" endtime="20201030 11:52:42.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.528" endtime="20201030 11:52:42.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.170" endtime="20201030 11:52:42.551"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.170" endtime="20201030 11:52:42.551"></status>
</kw>
<kw name="${duration} = 95" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.560" endtime="20201030 11:52:42.579"></status>
</kw>
<msg timestamp="20201030 11:52:42.579" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.558" endtime="20201030 11:52:42.580"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.582" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(95)', 'msg': ['sleep_accuracy_timer_sleep 95\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.580" endtime="20201030 11:52:42.582"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.583" endtime="20201030 11:52:42.584"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.556" endtime="20201030 11:52:42.585"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.554" endtime="20201030 11:52:42.585"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.592" endtime="20201030 11:52:42.885"></status>
</kw>
<msg timestamp="20201030 11:52:42.892" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.590" endtime="20201030 11:52:42.893"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.910" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019481333, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019589653, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:42.894" endtime="20201030 11:52:42.911"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.912" endtime="20201030 11:52:42.916"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.588" endtime="20201030 11:52:42.917"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.586" endtime="20201030 11:52:42.918"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:42.926" level="INFO">${RESULT} = [{'diff': 0.00010831999999999856}, {'diff': 0.00010786200000000024}, {'diff': 0.00010791699999999904}, {'diff': 0.00010736100000000026}, {'diff': 0.00010830499999999951}, {'diff': 0.000107443999999998...</msg>
<status status="PASS" starttime="20201030 11:52:42.919" endtime="20201030 11:52:42.927"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:42.935" level="INFO">${ACCURACY} = {'diff': [0.00010831999999999856, 0.00010786200000000024, 0.00010791699999999904, 0.00010736100000000026, 0.00010830499999999951, 0.00010744399999999821, 0.0001073889999999994, 0.00010780600000000196,...</msg>
<status status="PASS" starttime="20201030 11:52:42.928" endtime="20201030 11:52:42.935"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.943" level="INFO">NAME: accuracy-TIMER_SLEEP-95-philip</msg>
<status status="PASS" starttime="20201030 11:52:42.941" endtime="20201030 11:52:42.944"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:42.949" level="INFO">VALUE: [0.00010831999999999856, 0.00010786200000000024, 0.00010791699999999904, 0.00010736100000000026, 0.00010830499999999951, 0.00010744399999999821, 0.0001073889999999994, 0.00010780600000000196, 0.00010805599999999874, 0.00010779199999999892, 0.00010749999999999996, 0.0001080279999999996, 0.00010777799999999935, 0.00010808300000000187, 0.00010801400000000003, 0.00010829099999999994, 0.00010745800000000125, 0.00010788900000000337, 0.00010780599999999849, 0.00010758400000000085, 0.00010787499999999686, 0.00010787500000000033, 0.00010766599999999932, 0.0001082500000000007, 0.00010759699999999747, 0.00010759699999999747, 0.00010736100000000026, 0.00010777799999999935, 0.00010782000000000153, 0.00010772299999999707, 0.00010780599999999849, 0.00010765299999999922, 0.00010749999999999996, 0.00010786099999999729, 0.00010780499999999901, 0.00010779199999999892, 0.00010801400000000003, 0.00010759699999999747, 0.00010823600000000114, 0.0001077089999999975, 0.00010751399999999953, 0.00010757000000000128, 0.00010736100000000026, 0.00010815200000000025, 0.00010783300000000162, 0.00010790299999999947, 0.0001075279999999991, 0.000107514000000003, 0.00010808399999999788, 0.00010754099999999919]</msg>
<status status="PASS" starttime="20201030 11:52:42.946" endtime="20201030 11:52:42.954"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.936" endtime="20201030 11:52:42.955"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:42.959" endtime="20201030 11:52:42.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.958" endtime="20201030 11:52:42.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.956" endtime="20201030 11:52:42.979"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.552" endtime="20201030 11:52:42.980"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.552" endtime="20201030 11:52:42.980"></status>
</kw>
<kw name="${duration} = 96" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:42.988" endtime="20201030 11:52:43.008"></status>
</kw>
<msg timestamp="20201030 11:52:43.009" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:42.987" endtime="20201030 11:52:43.009"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.011" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(96)', 'msg': ['sleep_accuracy_timer_sleep 96\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.010" endtime="20201030 11:52:43.012"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.012" endtime="20201030 11:52:43.014"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.984" endtime="20201030 11:52:43.015"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.982" endtime="20201030 11:52:43.015"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.021" endtime="20201030 11:52:43.306"></status>
</kw>
<msg timestamp="20201030 11:52:43.309" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.020" endtime="20201030 11:52:43.310"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.317" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020379764, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.020488514, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.310" endtime="20201030 11:52:43.318"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.319" endtime="20201030 11:52:43.320"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.017" endtime="20201030 11:52:43.321"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.016" endtime="20201030 11:52:43.321"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.325" level="INFO">${RESULT} = [{'diff': 0.00010874999999999774}, {'diff': 0.00010859799999999795}, {'diff': 0.00010916700000000029}, {'diff': 0.00010851400000000053}, {'diff': 0.00010873599999999817}, {'diff': 0.000108722000000002...</msg>
<status status="PASS" starttime="20201030 11:52:43.322" endtime="20201030 11:52:43.325"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.329" level="INFO">${ACCURACY} = {'diff': [0.00010874999999999774, 0.00010859799999999795, 0.00010916700000000029, 0.00010851400000000053, 0.00010873599999999817, 0.00010872200000000207, 0.00010850000000000096, 0.00010850000000000096...</msg>
<status status="PASS" starttime="20201030 11:52:43.326" endtime="20201030 11:52:43.329"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.334" level="INFO">NAME: accuracy-TIMER_SLEEP-96-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.333" endtime="20201030 11:52:43.334"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.336" level="INFO">VALUE: [0.00010874999999999774, 0.00010859799999999795, 0.00010916700000000029, 0.00010851400000000053, 0.00010873599999999817, 0.00010872200000000207, 0.00010850000000000096, 0.00010850000000000096, 0.00010845799999999878, 0.00010879199999999992, 0.00010851400000000053, 0.00010858400000000185, 0.00010894499999999918, 0.00010866600000000032, 0.0001088890000000009, 0.00010879100000000044, 0.00010869399999999946, 0.00010894399999999971, 0.00010883300000000262, 0.00010866699999999979, 0.00010851400000000053, 0.00010843099999999911, 0.00010929200000000042, 0.00010876399999999731, 0.00010859699999999847, 0.00010865200000000075, 0.00010851399999999706, 0.00010901400000000103, 0.00010887499999999786, 0.00010909699999999897, 0.00010901400000000103, 0.00010858400000000185, 0.00010886200000000124, 0.00010925000000000171, 0.0001088890000000009, 0.00010890300000000047, 0.00010894399999999971, 0.00010844400000000268, 0.00010920799999999953, 0.00010902799999999713, 0.00010830599999999899, 0.000109208999999999, 0.00010893099999999961, 0.00010909700000000244, 0.00010894399999999971, 0.00010894399999999971, 0.00010880500000000001, 0.00010873600000000164, 0.00010848699999999739, 0.00010884699999999872]</msg>
<status status="PASS" starttime="20201030 11:52:43.335" endtime="20201030 11:52:43.338"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.330" endtime="20201030 11:52:43.338"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.342" endtime="20201030 11:52:43.361"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.340" endtime="20201030 11:52:43.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.339" endtime="20201030 11:52:43.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.981" endtime="20201030 11:52:43.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:42.980" endtime="20201030 11:52:43.362"></status>
</kw>
<kw name="${duration} = 97" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.371" endtime="20201030 11:52:43.392"></status>
</kw>
<msg timestamp="20201030 11:52:43.393" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.369" endtime="20201030 11:52:43.393"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.395" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(97)', 'msg': ['sleep_accuracy_timer_sleep 97\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.394" endtime="20201030 11:52:43.395"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.396" endtime="20201030 11:52:43.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.367" endtime="20201030 11:52:43.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.365" endtime="20201030 11:52:43.399"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.405" endtime="20201030 11:52:43.698"></status>
</kw>
<msg timestamp="20201030 11:52:43.704" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02046025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:43.403" endtime="20201030 11:52:43.705"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.722" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.020350292, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.02046025, 'source': 'DUT_IC', 'event': 'FALL...</msg>
<status status="PASS" starttime="20201030 11:52:43.707" endtime="20201030 11:52:43.723"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.725" endtime="20201030 11:52:43.728"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.401" endtime="20201030 11:52:43.729"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.399" endtime="20201030 11:52:43.730"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:43.738" level="INFO">${RESULT} = [{'diff': 0.00010995800000000028}, {'diff': 0.00010993000000000114}, {'diff': 0.00011016600000000182}, {'diff': 0.00011006900000000083}, {'diff': 0.00011031900000000108}, {'diff': 0.000109527999999997...</msg>
<status status="PASS" starttime="20201030 11:52:43.732" endtime="20201030 11:52:43.739"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:43.749" level="INFO">${ACCURACY} = {'diff': [0.00010995800000000028, 0.00010993000000000114, 0.00011016600000000182, 0.00011006900000000083, 0.00011031900000000108, 0.00010952799999999763, 0.00010982000000000006, 0.00010993100000000061...</msg>
<status status="PASS" starttime="20201030 11:52:43.740" endtime="20201030 11:52:43.749"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.758" level="INFO">NAME: accuracy-TIMER_SLEEP-97-philip</msg>
<status status="PASS" starttime="20201030 11:52:43.756" endtime="20201030 11:52:43.758"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.762" level="INFO">VALUE: [0.00010995800000000028, 0.00010993000000000114, 0.00011016600000000182, 0.00011006900000000083, 0.00011031900000000108, 0.00010952799999999763, 0.00010982000000000006, 0.00010993100000000061, 0.00010984699999999972, 0.00011011099999999954, 0.00010944400000000021, 0.00011001299999999908, 0.00011013899999999868, 0.0001102220000000001, 0.00011018000000000139, 0.00010943100000000011, 0.00010999999999999899, 0.00010959799999999895, 0.00010938899999999793, 0.00010961099999999904, 0.00011030499999999804, 0.00011001400000000203, 0.00010980500000000101, 0.00010959699999999947, 0.0001095829999999999, 0.00010951399999999806, 0.00011006999999999684, 0.00010963899999999818, 0.00010986100000000276, 0.0001095829999999999, 0.00010952700000000162, 0.00010944399999999674, 0.00011016699999999782, 0.0001100280000000016, 0.00011009699999999997, 0.00010965300000000122, 0.00010988899999999843, 0.00010950000000000196, 0.00010937500000000183, 0.00010949999999999849, 0.0001100549999999978, 0.00011031900000000108, 0.00010986099999999929, 0.00010943000000000064, 0.00010986100000000276, 0.00010965300000000122, 0.00011013899999999868, 0.0001099159999999981, 0.00010982000000000006, 0.00010931900000000008]</msg>
<status status="PASS" starttime="20201030 11:52:43.760" endtime="20201030 11:52:43.763"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.750" endtime="20201030 11:52:43.763"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:43.767" endtime="20201030 11:52:43.786"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.765" endtime="20201030 11:52:43.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.764" endtime="20201030 11:52:43.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.363" endtime="20201030 11:52:43.787"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.363" endtime="20201030 11:52:43.788"></status>
</kw>
<kw name="${duration} = 98" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.796" endtime="20201030 11:52:43.815"></status>
</kw>
<msg timestamp="20201030 11:52:43.816" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.794" endtime="20201030 11:52:43.816"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:43.818" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(98)', 'msg': ['sleep_accuracy_timer_sleep 98\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:43.817" endtime="20201030 11:52:43.819"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.819" endtime="20201030 11:52:43.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.792" endtime="20201030 11:52:43.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.790" endtime="20201030 11:52:43.822"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:43.828" endtime="20201030 11:52:44.115"></status>
</kw>
<msg timestamp="20201030 11:52:44.119" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:43.827" endtime="20201030 11:52:44.119"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.127" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019465514, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019575944, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.120" endtime="20201030 11:52:44.127"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.128" endtime="20201030 11:52:44.129"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.824" endtime="20201030 11:52:44.130"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.822" endtime="20201030 11:52:44.130"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.134" level="INFO">${RESULT} = [{'diff': 0.00011043000000000164}, {'diff': 0.00011056900000000133}, {'diff': 0.00011106899999999836}, {'diff': 0.00011044400000000121}, {'diff': 0.00011090300000000247}, {'diff': 0.000111306000000001...</msg>
<status status="PASS" starttime="20201030 11:52:44.131" endtime="20201030 11:52:44.135"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.138" level="INFO">${ACCURACY} = {'diff': [0.00011043000000000164, 0.00011056900000000133, 0.00011106899999999836, 0.00011044400000000121, 0.00011090300000000247, 0.00011130600000000199, 0.00011130599999999852, 0.00011109800000000045...</msg>
<status status="PASS" starttime="20201030 11:52:44.135" endtime="20201030 11:52:44.138"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.143" level="INFO">NAME: accuracy-TIMER_SLEEP-98-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.142" endtime="20201030 11:52:44.143"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.145" level="INFO">VALUE: [0.00011043000000000164, 0.00011056900000000133, 0.00011106899999999836, 0.00011044400000000121, 0.00011090300000000247, 0.00011130600000000199, 0.00011130599999999852, 0.00011109800000000045, 0.00011043100000000111, 0.00011131899999999861, 0.00011058400000000038, 0.00011051299999999958, 0.00011120800000000153, 0.0001107090000000005, 0.00011098600000000042, 0.00011070800000000103, 0.00011044500000000068, 0.00011040300000000197, 0.00011080599999999802, 0.00011109700000000097, 0.00011045800000000078, 0.00011129100000000294, 0.00011070800000000103, 0.00011116699999999882, 0.00011065299999999875, 0.0001110830000000014, 0.0001112220000000011, 0.00011095900000000075, 0.00011080600000000149, 0.00011102799999999913, 0.00011108299999999793, 0.00011129099999999947, 0.00011084700000000072, 0.00011113899999999968, 0.00011125000000000024, 0.00011051399999999906, 0.0001107090000000005, 0.00011059799999999995, 0.00011129200000000242, 0.00011034700000000022, 0.0001110830000000014, 0.00011123600000000067, 0.00011118099999999839, 0.0001110830000000014, 0.00011051399999999906, 0.0001107090000000005, 0.00011066700000000179, 0.00011048599999999992, 0.00011122300000000057, 0.00011038899999999893]</msg>
<status status="PASS" starttime="20201030 11:52:44.144" endtime="20201030 11:52:44.146"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.139" endtime="20201030 11:52:44.146"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.150" endtime="20201030 11:52:44.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.148" endtime="20201030 11:52:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.147" endtime="20201030 11:52:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.788" endtime="20201030 11:52:44.170"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:43.788" endtime="20201030 11:52:44.171"></status>
</kw>
<kw name="${duration} = 99" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.179" endtime="20201030 11:52:44.203"></status>
</kw>
<msg timestamp="20201030 11:52:44.203" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.178" endtime="20201030 11:52:44.204"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.206" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(99)', 'msg': ['sleep_accuracy_timer_sleep 99\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.204" endtime="20201030 11:52:44.206"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.207" endtime="20201030 11:52:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.175" endtime="20201030 11:52:44.209"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.173" endtime="20201030 11:52:44.210"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.216" endtime="20201030 11:52:44.502"></status>
</kw>
<msg timestamp="20201030 11:52:44.505" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.214" endtime="20201030 11:52:44.505"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.513" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.023418583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.023529972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.506" endtime="20201030 11:52:44.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.514" endtime="20201030 11:52:44.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.212" endtime="20201030 11:52:44.516"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.210" endtime="20201030 11:52:44.517"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.521" level="INFO">${RESULT} = [{'diff': 0.00011138899999999993}, {'diff': 0.00011137500000000036}, {'diff': 0.00011223600000000167}, {'diff': 0.00011161100000000104}, {'diff': 0.00011201400000000056}, {'diff': 0.000111569000000002...</msg>
<status status="PASS" starttime="20201030 11:52:44.518" endtime="20201030 11:52:44.521"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.525" level="INFO">${ACCURACY} = {'diff': [0.00011138899999999993, 0.00011137500000000036, 0.00011223600000000167, 0.00011161100000000104, 0.00011201400000000056, 0.00011156900000000233, 0.00011150000000000049, 0.00011144500000000168...</msg>
<status status="PASS" starttime="20201030 11:52:44.522" endtime="20201030 11:52:44.525"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.529" level="INFO">NAME: accuracy-TIMER_SLEEP-99-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.528" endtime="20201030 11:52:44.529"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.531" level="INFO">VALUE: [0.00011138899999999993, 0.00011137500000000036, 0.00011223600000000167, 0.00011161100000000104, 0.00011201400000000056, 0.00011156900000000233, 0.00011150000000000049, 0.00011144500000000168, 0.00011222199999999863, 0.00011222199999999863, 0.0001118480000000012, 0.00011166699999999932, 0.00011176300000000083, 0.00011152799999999963, 0.00011213900000000068, 0.00011165299999999975, 0.00011179199999999945, 0.00011134699999999775, 0.0001117090000000015, 0.00011165299999999975, 0.00011200000000000099, 0.00011145800000000178, 0.00011223600000000167, 0.00011201400000000056, 0.00011187500000000086, 0.00011198600000000142, 0.00011159700000000147, 0.0001114029999999995, 0.00011201400000000056, 0.00011172300000000107, 0.00011172199999999813, 0.00011136100000000079, 0.00011142999999999917, 0.00011151400000000006, 0.00011151400000000006, 0.00011136099999999732, 0.00011179199999999945, 0.00011204100000000022, 0.00011201399999999709, 0.00011229199999999995, 0.00011222199999999863, 0.0001115549999999993, 0.00011215300000000025, 0.00011165299999999975, 0.00011201400000000056, 0.00011143099999999864, 0.00011162500000000061, 0.00011188900000000043, 0.00011158399999999791, 0.0001117359999999977]</msg>
<status status="PASS" starttime="20201030 11:52:44.530" endtime="20201030 11:52:44.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.526" endtime="20201030 11:52:44.534"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.537" endtime="20201030 11:52:44.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.536" endtime="20201030 11:52:44.557"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.535" endtime="20201030 11:52:44.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.171" endtime="20201030 11:52:44.558"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.171" endtime="20201030 11:52:44.558"></status>
</kw>
<kw name="${duration} = 100" type="foritem">
<kw name="Measure Sleep Accuracy with TIMER_SLEEP for ${duration}">
<doc>Sleep for specified duration in microseconds (us)</doc>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Accuracy</arg>
<arg>${type}</arg>
<arg>${duration}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Accuracy" library="DutDeviceIf">
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.566" endtime="20201030 11:52:44.585"></status>
</kw>
<msg timestamp="20201030 11:52:44.586" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.565" endtime="20201030 11:52:44.586"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.588" level="INFO">${RESULT} = {'cmd': 'sleep_accuracy: timer_sleep(100)', 'msg': ['sleep_accuracy_timer_sleep 100\r\n'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:44.587" endtime="20201030 11:52:44.589"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.589" endtime="20201030 11:52:44.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.562" endtime="20201030 11:52:44.591"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.560" endtime="20201030 11:52:44.592"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.598" endtime="20201030 11:52:44.884"></status>
</kw>
<msg timestamp="20201030 11:52:44.887" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.597" endtime="20201030 11:52:44.887"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.895" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 0.019589194, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 0.019702486, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:44.888" endtime="20201030 11:52:44.895"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:44.896" endtime="20201030 11:52:44.897"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.594" endtime="20201030 11:52:44.898"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.592" endtime="20201030 11:52:44.898"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:44.902" level="INFO">${RESULT} = [{'diff': 0.00011329200000000095}, {'diff': 0.00011308299999999993}, {'diff': 0.0001125830000000029}, {'diff': 0.00011323600000000267}, {'diff': 0.00011280600000000002}, {'diff': 0.0001123609999999983...</msg>
<status status="PASS" starttime="20201030 11:52:44.899" endtime="20201030 11:52:44.902"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<assign>
<var>${ACCURACY}</var>
</assign>
<msg timestamp="20201030 11:52:44.907" level="INFO">${ACCURACY} = {'diff': [0.00011329200000000095, 0.00011308299999999993, 0.0001125830000000029, 0.00011323600000000267, 0.00011280600000000002, 0.00011236099999999832, 0.00011308399999999941, 0.00011295799999999981,...</msg>
<status status="PASS" starttime="20201030 11:52:44.903" endtime="20201030 11:52:44.907"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>accuracy-${type}-${duration}-philip</arg>
<arg>${ACCURACY['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.911" level="INFO">NAME: accuracy-TIMER_SLEEP-100-philip</msg>
<status status="PASS" starttime="20201030 11:52:44.910" endtime="20201030 11:52:44.912"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.914" level="INFO">VALUE: [0.00011329200000000095, 0.00011308299999999993, 0.0001125830000000029, 0.00011323600000000267, 0.00011280600000000002, 0.00011236099999999832, 0.00011308399999999941, 0.00011295799999999981, 0.0001125830000000029, 0.00011273600000000217, 0.00011245800000000278, 0.000112596999999999, 0.00011251400000000106, 0.00011319499999999996, 0.00011248600000000192, 0.00011334699999999975, 0.00011330499999999757, 0.00011244399999999974, 0.00011244399999999974, 0.00011245799999999931, 0.00011270899999999903, 0.00011277800000000088, 0.00011258299999999943, 0.0001132359999999992, 0.00011279200000000045, 0.00011308299999999993, 0.00011322199999999963, 0.00011325000000000224, 0.00011266700000000032, 0.000112596999999999, 0.00011301400000000156, 0.00011290299999999753, 0.00011268099999999989, 0.00011287500000000186, 0.0001129160000000011, 0.000112596999999999, 0.00011236099999999832, 0.00011280500000000054, 0.00011279200000000045, 0.00011258299999999943, 0.00011301399999999809, 0.00011308400000000288, 0.00011294499999999971, 0.00011251399999999759, 0.00011244399999999974, 0.00011280500000000054, 0.0001127359999999987, 0.0001132359999999992, 0.00011251400000000106, 0.00011315299999999778]</msg>
<status status="PASS" starttime="20201030 11:52:44.913" endtime="20201030 11:52:44.915"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.908" endtime="20201030 11:52:44.915"></status>
</kw>
<kw name="Run Keywords" library="BuiltIn" type="teardown">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:44.919" endtime="20201030 11:52:44.938"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.917" endtime="20201030 11:52:44.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.916" endtime="20201030 11:52:44.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.559" endtime="20201030 11:52:44.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.558" endtime="20201030 11:52:44.939"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:06.524" endtime="20201030 11:52:44.940"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:03.424" endtime="20201030 11:52:44.940" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:51:17.638" endtime="20201030 11:52:44.944"></status>
</suite>
<suite id="s1-s4" name="Sleep Jitter" source="/home/pi/.tmp/RobotFW-tests/tests/xtimer_benchmarks/tests/03__sleep_jitter.robot">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>RIOT Reset</arg>
<arg>PHILIP Reset</arg>
<arg>API Firmware Data Should Match</arg>
</arguments>
<kw name="RIOT Reset" library="riot_base.keywords">
<doc>Reset the test application</doc>
<kw name="Run Process" library="Process">
<doc>Runs a process and waits for it to complete.</doc>
<arguments>
<arg>make reset</arg>
<arg>shell=True</arg>
<arg>cwd=%{APPDIR}</arg>
</arguments>
<msg timestamp="20201030 11:52:44.999" level="INFO">Starting process:
make reset</msg>
<msg timestamp="20201030 11:52:45.008" level="INFO">Waiting for process to complete.</msg>
<msg timestamp="20201030 11:52:46.184" level="INFO">Process completed.</msg>
<status status="PASS" starttime="20201030 11:52:44.998" endtime="20201030 11:52:46.185"></status>
</kw>
<kw name="Sleep" library="BuiltIn">
<doc>Pauses the test executed for the given time.</doc>
<arguments>
<arg>%{HIL_RESET_WAIT}</arg>
</arguments>
<msg timestamp="20201030 11:52:46.187" level="INFO">Slept 0 seconds</msg>
<status status="PASS" starttime="20201030 11:52:46.186" endtime="20201030 11:52:46.188"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.997" endtime="20201030 11:52:46.188"></status>
</kw>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:46.190" endtime="20201030 11:52:46.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.189" endtime="20201030 11:52:46.375"></status>
</kw>
<kw name="API Firmware Data Should Match" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:46.387" endtime="20201030 11:52:49.416"></status>
</kw>
<msg timestamp="20201030 11:52:49.418" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:46.385" endtime="20201030 11:52:49.418"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.423" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.420" endtime="20201030 11:52:49.423"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:49.429" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:49.425" endtime="20201030 11:52:49.430"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:46.383" endtime="20201030 11:52:49.431"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:46.381" endtime="20201030 11:52:49.432"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.380" endtime="20201030 11:52:49.433"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:49.441" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:49.439" endtime="20201030 11:52:49.441"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.435" endtime="20201030 11:52:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.379" endtime="20201030 11:52:49.442"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.378" endtime="20201030 11:52:49.443"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.444" endtime="20201030 11:52:49.447"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.377" endtime="20201030 11:52:49.448"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['data']}</arg>
<arg>${firmware}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.450" endtime="20201030 11:52:49.453"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:46.375" endtime="20201030 11:52:49.454"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:44.995" endtime="20201030 11:52:49.455"></status>
</kw>
<test id="s1-s4-t1" name="0 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:49.467" endtime="20201030 11:52:49.489"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.464" endtime="20201030 11:52:49.490"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:49.517" endtime="20201030 11:52:52.547"></status>
</kw>
<msg timestamp="20201030 11:52:52.548" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:49.513" endtime="20201030 11:52:52.548"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.553" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.550" endtime="20201030 11:52:52.554"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:52:52.561" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:52:52.555" endtime="20201030 11:52:52.561"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:49.508" endtime="20201030 11:52:52.563"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:49.503" endtime="20201030 11:52:52.564"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.501" endtime="20201030 11:52:52.565"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:52:52.572" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:52:52.571" endtime="20201030 11:52:52.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.566" endtime="20201030 11:52:52.573"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.499" endtime="20201030 11:52:52.574"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.498" endtime="20201030 11:52:52.574"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.575" endtime="20201030 11:52:52.578"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.495" endtime="20201030 11:52:52.580"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.492" endtime="20201030 11:52:52.581"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:49.461" endtime="20201030 11:52:52.581"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>0</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:52.596" endtime="20201030 11:52:58.720"></status>
</kw>
<msg timestamp="20201030 11:52:58.721" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:52.595" endtime="20201030 11:52:58.721"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.726" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 0\r\n'], 'data': [{'bg-timer-count': '0'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:58.723" endtime="20201030 11:52:58.727"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.728" endtime="20201030 11:52:58.731"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.591" endtime="20201030 11:52:58.733"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.586" endtime="20201030 11:52:58.734"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:58.738" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 0}</msg>
<status status="PASS" starttime="20201030 11:52:58.735" endtime="20201030 11:52:58.739"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.748" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:58.746" endtime="20201030 11:52:58.749"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.752" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:52:58.750" endtime="20201030 11:52:58.753"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.741" endtime="20201030 11:52:58.754"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.762" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:52:58.760" endtime="20201030 11:52:58.763"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.766" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:52:58.764" endtime="20201030 11:52:58.767"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.755" endtime="20201030 11:52:58.768"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.776" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:52:58.774" endtime="20201030 11:52:58.777"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:58.780" level="INFO">VALUE: 0</msg>
<status status="PASS" starttime="20201030 11:52:58.778" endtime="20201030 11:52:58.781"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.769" endtime="20201030 11:52:58.782"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:58.795" endtime="20201030 11:52:59.109"></status>
</kw>
<msg timestamp="20201030 11:52:59.112" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118027083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.218052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:58.792" endtime="20201030 11:52:59.112"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.120" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.118027083, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.218052736, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:52:59.113" endtime="20201030 11:52:59.120"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.121" endtime="20201030 11:52:59.122"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.786" endtime="20201030 11:52:59.123"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:58.783" endtime="20201030 11:52:59.123"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:52:59.127" level="INFO">${FILTERED} = [{'diff': 0.10002565300000033}, {'diff': 0.10000848599999967}, {'diff': 0.10001194400000024}, {'diff': 0.10001087499999972}, {'diff': 0.10001084799999971}, {'diff': 0.10001084800000015}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:52:59.124" endtime="20201030 11:52:59.128"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:52:59.132" level="INFO">${RESULT} = {'diff': [0.10002565300000033, 0.10000848599999967, 0.10001194400000024, 0.10001087499999972, 0.10001084799999971, 0.10001084800000015, 0.10001099999999985, 5.419999999922709e-07, 4.7199999997360464e-...</msg>
<status status="PASS" starttime="20201030 11:52:59.128" endtime="20201030 11:52:59.132"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.137" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:52:59.136" endtime="20201030 11:52:59.137"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:52:59.139" level="INFO">VALUE: [0.10002565300000033, 0.10000848599999967, 0.10001194400000024, 0.10001087499999972, 0.10001084799999971, 0.10001084800000015, 0.10001099999999985, 5.419999999922709e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 4.73000000056345e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 4.73000000056345e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 0.10001132000000013]</msg>
<status status="PASS" starttime="20201030 11:52:59.138" endtime="20201030 11:52:59.140"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.133" endtime="20201030 11:52:59.141"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:52.583" endtime="20201030 11:52:59.141"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:49.456" endtime="20201030 11:52:59.142" critical="yes"></status>
</test>
<test id="s1-s4-t2" name="5 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:52:59.149" endtime="20201030 11:52:59.169"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.148" endtime="20201030 11:52:59.169"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:52:59.183" endtime="20201030 11:53:02.210"></status>
</kw>
<msg timestamp="20201030 11:53:02.211" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:52:59.181" endtime="20201030 11:53:02.212"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.216" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.213" endtime="20201030 11:53:02.217"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:02.222" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:02.219" endtime="20201030 11:53:02.223"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:59.179" endtime="20201030 11:53:02.224"></status>
</kw>
<status status="FAIL" starttime="20201030 11:52:59.176" endtime="20201030 11:53:02.226"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.174" endtime="20201030 11:53:02.226"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:02.234" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:02.232" endtime="20201030 11:53:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.228" endtime="20201030 11:53:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.173" endtime="20201030 11:53:02.235"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.173" endtime="20201030 11:53:02.236"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.237" endtime="20201030 11:53:02.240"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.172" endtime="20201030 11:53:02.241"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.170" endtime="20201030 11:53:02.242"></status>
</kw>
<status status="PASS" starttime="20201030 11:52:59.146" endtime="20201030 11:53:02.243"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>5</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:02.261" endtime="20201030 11:53:08.386"></status>
</kw>
<msg timestamp="20201030 11:53:08.387" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:02.258" endtime="20201030 11:53:08.387"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.392" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 5\r\n'], 'data': [{'bg-timer-count': '5'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.389" endtime="20201030 11:53:08.392"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.394" endtime="20201030 11:53:08.397"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.252" endtime="20201030 11:53:08.398"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.248" endtime="20201030 11:53:08.399"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.405" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 5}</msg>
<status status="PASS" starttime="20201030 11:53:08.401" endtime="20201030 11:53:08.405"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.414" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:08.411" endtime="20201030 11:53:08.414"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.418" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:08.416" endtime="20201030 11:53:08.418"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.407" endtime="20201030 11:53:08.420"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.430" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:08.426" endtime="20201030 11:53:08.431"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.434" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:08.432" endtime="20201030 11:53:08.435"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.421" endtime="20201030 11:53:08.436"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.444" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:08.442" endtime="20201030 11:53:08.444"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.448" level="INFO">VALUE: 5</msg>
<status status="PASS" starttime="20201030 11:53:08.446" endtime="20201030 11:53:08.449"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.437" endtime="20201030 11:53:08.450"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.463" endtime="20201030 11:53:08.764"></status>
</kw>
<msg timestamp="20201030 11:53:08.767" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103195458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203270611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.460" endtime="20201030 11:53:08.767"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.775" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103195458, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203270611, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:08.768" endtime="20201030 11:53:08.775"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.776" endtime="20201030 11:53:08.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.454" endtime="20201030 11:53:08.778"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.451" endtime="20201030 11:53:08.779"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:08.783" level="INFO">${FILTERED} = [{'diff': 0.10007515300000014}, {'diff': 0.099962514}, {'diff': 0.10001092999999983}, {'diff': 0.10001082000000006}, {'diff': 0.100010916}, {'diff': 0.1000108609999999}, {'diff': 0.10001081899999997},...</msg>
<status status="PASS" starttime="20201030 11:53:08.780" endtime="20201030 11:53:08.783"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:08.786" level="INFO">${RESULT} = {'diff': [0.10007515300000014, 0.099962514, 0.10001092999999983, 0.10001082000000006, 0.100010916, 0.1000108609999999, 0.10001081899999997, 0.10001081899999997, 0.10001091600000045, 0.1000108329999998...</msg>
<status status="PASS" starttime="20201030 11:53:08.784" endtime="20201030 11:53:08.787"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.791" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:08.790" endtime="20201030 11:53:08.792"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:08.794" level="INFO">VALUE: [0.10007515300000014, 0.099962514, 0.10001092999999983, 0.10001082000000006, 0.100010916, 0.1000108609999999, 0.10001081899999997, 0.10001081899999997, 0.10001091600000045, 0.1000108329999998, 0.10001091600000045, 0.10001084700000007, 0.1000108329999998, 0.10001086100000034, 0.1000108329999998, 0.10001084700000007, 0.10001081999999961, 0.10001093099999991, 0.10001084800000015, 0.1000108200000005, 0.10001091699999964, 0.10001091600000045, 0.10001084700000007, 0.1000108329999998, 0.10001092999999983, 0.1000108329999998, 0.10001091699999964, 0.10001091700000053, 0.10001091699999964, 0.10001093099999991, 0.10001083399999988, 0.10001091600000045, 0.10001095800000037, 0.10001081899999953, 0.10001084699999918, 0.10001093099999991, 0.10001084800000015, 0.10001084799999926, 0.10001084700000007, 0.10001092999999983, 0.10001084700000007, 0.10001084700000007, 0.10001093099999991, 0.10001084800000015, 0.10001094399999921, 0.10001086100000034, 0.10001084700000007, 0.1000108329999998, 0.10001094500000018, 0.100010833999999, 0.10001094400000099]</msg>
<status status="PASS" starttime="20201030 11:53:08.792" endtime="20201030 11:53:08.794"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.787" endtime="20201030 11:53:08.795"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:02.244" endtime="20201030 11:53:08.795"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:52:59.144" endtime="20201030 11:53:08.796" critical="yes"></status>
</test>
<test id="s1-s4-t3" name="10 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:08.803" endtime="20201030 11:53:08.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.802" endtime="20201030 11:53:08.824"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:08.836" endtime="20201030 11:53:11.864"></status>
</kw>
<msg timestamp="20201030 11:53:11.865" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:08.835" endtime="20201030 11:53:11.865"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.870" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.867" endtime="20201030 11:53:11.870"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:11.876" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:11.872" endtime="20201030 11:53:11.876"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:08.832" endtime="20201030 11:53:11.878"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:08.830" endtime="20201030 11:53:11.879"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.829" endtime="20201030 11:53:11.880"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:11.887" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:11.886" endtime="20201030 11:53:11.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.882" endtime="20201030 11:53:11.888"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.828" endtime="20201030 11:53:11.889"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.827" endtime="20201030 11:53:11.889"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.891" endtime="20201030 11:53:11.894"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.826" endtime="20201030 11:53:11.895"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.824" endtime="20201030 11:53:11.896"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:08.800" endtime="20201030 11:53:11.896"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>10</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:11.917" endtime="20201030 11:53:18.042"></status>
</kw>
<msg timestamp="20201030 11:53:18.043" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:11.911" endtime="20201030 11:53:18.043"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.048" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 10\r\n'], 'data': [{'bg-timer-count': '10'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.045" endtime="20201030 11:53:18.049"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.050" endtime="20201030 11:53:18.054"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.906" endtime="20201030 11:53:18.055"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.901" endtime="20201030 11:53:18.056"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:18.061" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 10}</msg>
<status status="PASS" starttime="20201030 11:53:18.058" endtime="20201030 11:53:18.062"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.070" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:18.068" endtime="20201030 11:53:18.070"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.074" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:18.072" endtime="20201030 11:53:18.075"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.063" endtime="20201030 11:53:18.076"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.083" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:18.081" endtime="20201030 11:53:18.084"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.088" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:18.086" endtime="20201030 11:53:18.088"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.077" endtime="20201030 11:53:18.090"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.095" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:18.094" endtime="20201030 11:53:18.095"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.097" level="INFO">VALUE: 10</msg>
<status status="PASS" starttime="20201030 11:53:18.096" endtime="20201030 11:53:18.097"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.091" endtime="20201030 11:53:18.098"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.104" endtime="20201030 11:53:18.403"></status>
</kw>
<msg timestamp="20201030 11:53:18.406" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104490875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204611181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.103" endtime="20201030 11:53:18.406"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.414" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.104490875, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.204611181, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:18.407" endtime="20201030 11:53:18.414"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.415" endtime="20201030 11:53:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.100" endtime="20201030 11:53:18.417"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.098" endtime="20201030 11:53:18.418"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:18.421" level="INFO">${FILTERED} = [{'diff': 0.10012030599999999}, {'diff': 0.10003818099999995}, {'diff': 0.09989463899999995}, {'diff': 0.10000990300000012}, {'diff': 0.10001091700000009}, {'diff': 0.10001083399999988}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:53:18.418" endtime="20201030 11:53:18.422"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:18.428" level="INFO">${RESULT} = {'diff': [0.10012030599999999, 0.10003818099999995, 0.09989463899999995, 0.10000990300000012, 0.10001091700000009, 0.10001083399999988, 0.10001093099999991, 0.10001081999999961, 0.10001084800000015, 0...</msg>
<status status="PASS" starttime="20201030 11:53:18.422" endtime="20201030 11:53:18.429"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.432" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:18.431" endtime="20201030 11:53:18.433"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:18.435" level="INFO">VALUE: [0.10012030599999999, 0.10003818099999995, 0.09989463899999995, 0.10000990300000012, 0.10001091700000009, 0.10001083399999988, 0.10001093099999991, 0.10001081999999961, 0.10001084800000015, 0.1000108200000005, 0.10001092999999983, 0.10001084700000007, 0.10001081899999953, 0.10001084700000007, 0.10001083300000069, 0.1000108329999998, 0.10001091600000045, 0.1000108329999998, 0.10001091700000053, 0.10001093099999991, 0.10001081899999953, 0.10001091699999964, 0.10001093099999991, 0.1000108200000005, 0.10001091699999964, 0.10001091700000053, 0.10001091599999956, 0.10001097199999975, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.419999995481817e-07, 4.7200000086178306e-07, 4.73000000056345e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 0.10001133300000031, 0.1000108329999998, 0.1000109310000008, 0.10001091699999964, 0.10001093099999991, 0.10001084799999926, 0.10001094400000099, 0.10001083300000069]</msg>
<status status="PASS" starttime="20201030 11:53:18.433" endtime="20201030 11:53:18.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.429" endtime="20201030 11:53:18.436"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:11.898" endtime="20201030 11:53:18.437"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:08.798" endtime="20201030 11:53:18.437" critical="yes"></status>
</test>
<test id="s1-s4-t4" name="15 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:18.445" endtime="20201030 11:53:18.464"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.443" endtime="20201030 11:53:18.465"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:18.478" endtime="20201030 11:53:21.506"></status>
</kw>
<msg timestamp="20201030 11:53:21.507" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:18.476" endtime="20201030 11:53:21.507"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.512" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.509" endtime="20201030 11:53:21.513"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:21.520" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:21.514" endtime="20201030 11:53:21.520"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:18.473" endtime="20201030 11:53:21.522"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:18.471" endtime="20201030 11:53:21.523"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.470" endtime="20201030 11:53:21.524"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:21.531" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:21.530" endtime="20201030 11:53:21.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.525" endtime="20201030 11:53:21.532"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.469" endtime="20201030 11:53:21.533"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.469" endtime="20201030 11:53:21.533"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.534" endtime="20201030 11:53:21.537"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.467" endtime="20201030 11:53:21.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.465" endtime="20201030 11:53:21.539"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:18.441" endtime="20201030 11:53:21.540"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>15</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:21.553" endtime="20201030 11:53:27.677"></status>
</kw>
<msg timestamp="20201030 11:53:27.678" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:21.552" endtime="20201030 11:53:27.678"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.683" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 15\r\n'], 'data': [{'bg-timer-count': '15'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:27.680" endtime="20201030 11:53:27.684"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.685" endtime="20201030 11:53:27.688"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.549" endtime="20201030 11:53:27.690"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.545" endtime="20201030 11:53:27.691"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:27.696" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 15}</msg>
<status status="PASS" starttime="20201030 11:53:27.693" endtime="20201030 11:53:27.697"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.705" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:27.703" endtime="20201030 11:53:27.705"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.709" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:27.707" endtime="20201030 11:53:27.710"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.698" endtime="20201030 11:53:27.711"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.719" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:27.717" endtime="20201030 11:53:27.719"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.723" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:27.721" endtime="20201030 11:53:27.723"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.712" endtime="20201030 11:53:27.725"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.732" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:27.730" endtime="20201030 11:53:27.733"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:27.737" level="INFO">VALUE: 15</msg>
<status status="PASS" starttime="20201030 11:53:27.735" endtime="20201030 11:53:27.737"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.726" endtime="20201030 11:53:27.738"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:27.752" endtime="20201030 11:53:28.053"></status>
</kw>
<msg timestamp="20201030 11:53:28.056" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198400222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:27.748" endtime="20201030 11:53:28.056"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.064" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098201556, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198400222, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:28.057" endtime="20201030 11:53:28.064"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.065" endtime="20201030 11:53:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.743" endtime="20201030 11:53:28.067"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:27.740" endtime="20201030 11:53:28.068"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:28.071" level="INFO">${FILTERED} = [{'diff': 0.10019866600000027}, {'diff': 0.10004429199999976}, {'diff': 0.09981243000000006}, {'diff': 0.10001083300000024}, {'diff': 0.10001092999999983}, {'diff': 0.10001081899999997}, {'diff': 0.10...</msg>
<status status="PASS" starttime="20201030 11:53:28.068" endtime="20201030 11:53:28.072"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:28.075" level="INFO">${RESULT} = {'diff': [0.10019866600000027, 0.10004429199999976, 0.09981243000000006, 0.10001083300000024, 0.10001092999999983, 0.10001081899999997, 0.10001091700000009, 0.1000108609999999, 0.10001081899999997, 0....</msg>
<status status="PASS" starttime="20201030 11:53:28.072" endtime="20201030 11:53:28.075"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.079" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:28.078" endtime="20201030 11:53:28.080"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:28.082" level="INFO">VALUE: [0.10019866600000027, 0.10004429199999976, 0.09981243000000006, 0.10001083300000024, 0.10001092999999983, 0.10001081899999997, 0.10001091700000009, 0.1000108609999999, 0.10001081899999997, 0.10001084700000051, 0.1000108329999998, 0.10001091700000053, 0.10001084800000015, 0.10001083399999988, 0.10001091699999964, 0.10001083399999988, 0.10001091600000045, 0.10001097199999975, 0.10001079099999988, 0.10001084700000007, 0.10001084700000007, 0.10001084700000007, 0.1000108329999998, 0.10001091699999964, 0.10001091699999964, 0.10001091700000053, 0.10001091599999956, 0.10001091600000045, 0.1000109440000001, 0.1000108329999998, 0.10001084700000007, 0.10001086100000034, 0.10001084800000015, 0.10001083399999988, 0.10001101399999968, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.410000003536197e-07, 4.7199999997360464e-07, 0.10001131900000004, 0.10001084700000007, 0.10001091599999956, 0.10001094500000018, 0.10001088799999991, 0.10001080600000023, 0.10001097199999975, 0.10001081899999953, 0.10001084700000007, 0.10001093099999903, 0.10001086099999945]</msg>
<status status="PASS" starttime="20201030 11:53:28.080" endtime="20201030 11:53:28.082"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.076" endtime="20201030 11:53:28.083"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:21.542" endtime="20201030 11:53:28.083"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:18.439" endtime="20201030 11:53:28.084" critical="yes"></status>
</test>
<test id="s1-s4-t5" name="20 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:28.091" endtime="20201030 11:53:28.111"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.090" endtime="20201030 11:53:28.111"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:28.125" endtime="20201030 11:53:31.152"></status>
</kw>
<msg timestamp="20201030 11:53:31.153" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:28.123" endtime="20201030 11:53:31.154"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.159" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.156" endtime="20201030 11:53:31.159"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:31.165" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:31.161" endtime="20201030 11:53:31.165"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.121" endtime="20201030 11:53:31.167"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:28.118" endtime="20201030 11:53:31.168"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.116" endtime="20201030 11:53:31.169"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:31.176" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:31.175" endtime="20201030 11:53:31.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.170" endtime="20201030 11:53:31.177"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.116" endtime="20201030 11:53:31.178"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.115" endtime="20201030 11:53:31.178"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.180" endtime="20201030 11:53:31.182"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.114" endtime="20201030 11:53:31.184"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.112" endtime="20201030 11:53:31.185"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:28.088" endtime="20201030 11:53:31.185"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>20</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:31.203" endtime="20201030 11:53:37.329"></status>
</kw>
<msg timestamp="20201030 11:53:37.330" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:31.200" endtime="20201030 11:53:37.330"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.335" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 20\r\n'], 'data': [{'bg-timer-count': '20'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:37.332" endtime="20201030 11:53:37.336"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.337" endtime="20201030 11:53:37.340"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.195" endtime="20201030 11:53:37.342"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.190" endtime="20201030 11:53:37.343"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:37.348" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 20}</msg>
<status status="PASS" starttime="20201030 11:53:37.345" endtime="20201030 11:53:37.349"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.357" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:37.355" endtime="20201030 11:53:37.357"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.361" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:37.359" endtime="20201030 11:53:37.362"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.350" endtime="20201030 11:53:37.363"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.371" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:37.369" endtime="20201030 11:53:37.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.375" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:37.373" endtime="20201030 11:53:37.376"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.364" endtime="20201030 11:53:37.377"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.382" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:37.381" endtime="20201030 11:53:37.382"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.385" level="INFO">VALUE: 20</msg>
<status status="PASS" starttime="20201030 11:53:37.383" endtime="20201030 11:53:37.385"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.378" endtime="20201030 11:53:37.386"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.392" endtime="20201030 11:53:37.690"></status>
</kw>
<msg timestamp="20201030 11:53:37.693" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103128681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:37.391" endtime="20201030 11:53:37.693"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.701" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.103128681, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.203418722, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:37.694" endtime="20201030 11:53:37.701"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.702" endtime="20201030 11:53:37.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.388" endtime="20201030 11:53:37.704"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.386" endtime="20201030 11:53:37.705"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:37.709" level="INFO">${FILTERED} = [{'diff': 0.10029004100000005}, {'diff': 0.10004737499999994}, {'diff': 0.0997216110000001}, {'diff': 0.10000990300000012}, {'diff': 0.10001095799999993}, {'diff': 0.10001079199999996}, {'diff': 0.100...</msg>
<status status="PASS" starttime="20201030 11:53:37.706" endtime="20201030 11:53:37.709"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:37.713" level="INFO">${RESULT} = {'diff': [0.10029004100000005, 0.10004737499999994, 0.0997216110000001, 0.10000990300000012, 0.10001095799999993, 0.10001079199999996, 0.10001082000000006, 0.10001091700000009, 0.10001087499999972, 0....</msg>
<status status="PASS" starttime="20201030 11:53:37.710" endtime="20201030 11:53:37.713"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.717" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:37.716" endtime="20201030 11:53:37.717"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:37.719" level="INFO">VALUE: [0.10029004100000005, 0.10004737499999994, 0.0997216110000001, 0.10000990300000012, 0.10001095799999993, 0.10001079199999996, 0.10001082000000006, 0.10001091700000009, 0.10001087499999972, 0.10001079199999996, 0.10001097199999975, 5.410000003536197e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.280000001661733e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 0.1000113469999997, 0.10001081900000042, 0.10001091599999956, 0.1000109310000008, 0.1000108329999998, 0.10001097200000064, 0.1000108200000005, 0.10001083399999988, 0.10001091600000045, 0.10001091599999956, 0.10001091600000045, 0.10001093099999991, 0.10001084700000007, 0.10001093099999991, 0.10001084800000015, 0.10001084700000007, 0.10001092999999983, 0.10001086100000034, 0.1000108329999998, 0.10001098600000002, 0.10001080600000023, 0.10001084700000007]</msg>
<status status="PASS" starttime="20201030 11:53:37.718" endtime="20201030 11:53:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.713" endtime="20201030 11:53:37.720"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:31.187" endtime="20201030 11:53:37.721"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:28.086" endtime="20201030 11:53:37.721" critical="yes"></status>
</test>
<test id="s1-s4-t6" name="25 BG Timers">
<kw name="Run Keywords" library="BuiltIn" type="setup">
<doc>Executes all the given keywords in a sequence.</doc>
<arguments>
<arg>PHILIP Reset</arg>
<arg>API Sync Shell</arg>
</arguments>
<kw name="PHILIP Reset" library="philip.keywords">
<doc>Reset the PHiLIP MCU</doc>
<kw name="Reset Mcu" library="PHILIP">
<doc>Resets the device</doc>
<status status="PASS" starttime="20201030 11:53:37.730" endtime="20201030 11:53:37.749"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.728" endtime="20201030 11:53:37.750"></status>
</kw>
<kw name="API Sync Shell" library="api_shell.keywords">
<doc>Verify that the DUT runs the required API test firmware</doc>
<kw name="API Call Repeat on Timeout" library="api_shell.keywords">
<doc>Repeats the given API ``call`` up to 5 times on timeout.</doc>
<arguments>
<arg>Get Metadata</arg>
</arguments>
<kw name="${i} IN RANGE [ 0 | 16 ]" type="for">
<kw name="${i} = 0" type="foritem">
<kw name="Run Keyword And Ignore Error" library="BuiltIn">
<doc>Runs the given keyword with the given arguments and ignores possible error.</doc>
<arguments>
<arg>API Call Should Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Should Timeout" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not timeout.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Timeout</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Get Metadata" library="DutDeviceIf">
<doc>Get the metadata of the firmware.</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:37.762" endtime="20201030 11:53:40.791"></status>
</kw>
<msg timestamp="20201030 11:53:40.792" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:37.761" endtime="20201030 11:53:40.792"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.797" level="INFO">${RESULT} = {'cmd': 'get_metadata', 'msg': ['get_metadata\r\n'], 'data': ['arduino-due', '2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased', 'tests_xtimer_benchmarks'], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.794" endtime="20201030 11:53:40.798"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<msg timestamp="20201030 11:53:40.803" level="FAIL">'Success' does not contain 'Timeout'</msg>
<status status="FAIL" starttime="20201030 11:53:40.799" endtime="20201030 11:53:40.804"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:37.758" endtime="20201030 11:53:40.805"></status>
</kw>
<status status="FAIL" starttime="20201030 11:53:37.756" endtime="20201030 11:53:40.806"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.755" endtime="20201030 11:53:40.807"></status>
</kw>
<kw name="Run Keyword If" library="BuiltIn">
<doc>Runs the given keyword with the given arguments, if ``condition`` is true.</doc>
<arguments>
<arg>"${RESULT['result']}"!="Timeout"</arg>
<arg>Exit For Loop</arg>
</arguments>
<kw name="Exit For Loop" library="BuiltIn">
<doc>Stops executing the enclosing for loop.</doc>
<msg timestamp="20201030 11:53:40.814" level="INFO">Exiting for loop altogether.</msg>
<status status="PASS" starttime="20201030 11:53:40.813" endtime="20201030 11:53:40.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.808" endtime="20201030 11:53:40.815"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.754" endtime="20201030 11:53:40.816"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.753" endtime="20201030 11:53:40.816"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>Success</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.818" endtime="20201030 11:53:40.821"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.752" endtime="20201030 11:53:40.822"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.750" endtime="20201030 11:53:40.823"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:37.726" endtime="20201030 11:53:40.823"></status>
</kw>
<kw name="Measure Sleep Jitter">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>25</arg>
</arguments>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>Sleep Jitter</arg>
<arg>${bg_timer_count}</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Sleep Jitter" library="DutDeviceIf">
<doc>Run the sleep jitter benchmark</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:40.838" endtime="20201030 11:53:46.962"></status>
</kw>
<msg timestamp="20201030 11:53:46.963" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:40.836" endtime="20201030 11:53:46.964"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.969" level="INFO">${RESULT} = {'cmd': 'sleep_jitter', 'msg': ['sleep_jitter 25\r\n'], 'data': [{'bg-timer-count': '25'}, {'main-timer-interval': '100000'}, {'bg-timer-interval': '20000'}], 'result': 'Success'}</msg>
<status status="PASS" starttime="20201030 11:53:46.966" endtime="20201030 11:53:46.969"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:46.971" endtime="20201030 11:53:46.976"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.832" endtime="20201030 11:53:46.977"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.828" endtime="20201030 11:53:46.978"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${RESULT['data']}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:46.984" level="INFO">${RESULT} = {'main-timer-interval': 100000, 'bg-timer-interval': 20000, 'bg-timer-count': 25}</msg>
<status status="PASS" starttime="20201030 11:53:46.980" endtime="20201030 11:53:46.984"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>main-timer-interval</arg>
<arg>${RESULT['main-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.992" level="INFO">NAME: main-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:46.990" endtime="20201030 11:53:46.993"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:46.997" level="INFO">VALUE: 100000</msg>
<status status="PASS" starttime="20201030 11:53:46.994" endtime="20201030 11:53:46.997"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:46.986" endtime="20201030 11:53:46.999"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-interval</arg>
<arg>${RESULT['bg-timer-interval']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.007" level="INFO">NAME: bg-timer-interval</msg>
<status status="PASS" starttime="20201030 11:53:47.004" endtime="20201030 11:53:47.007"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.011" level="INFO">VALUE: 20000</msg>
<status status="PASS" starttime="20201030 11:53:47.009" endtime="20201030 11:53:47.012"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.000" endtime="20201030 11:53:47.013"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>bg-timer-count</arg>
<arg>${RESULT['bg-timer-count']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.020" level="INFO">NAME: bg-timer-count</msg>
<status status="PASS" starttime="20201030 11:53:47.018" endtime="20201030 11:53:47.021"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.024" level="INFO">VALUE: 25</msg>
<status status="PASS" starttime="20201030 11:53:47.023" endtime="20201030 11:53:47.025"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.014" endtime="20201030 11:53:47.026"></status>
</kw>
<kw name="API Call Should Succeed" library="api_shell.keywords">
<doc>Fails if the given API ``call`` does not succeed.</doc>
<arguments>
<arg>PHILIP.Read Trace</arg>
</arguments>
<kw name="API Call Expect" library="api_shell.keywords">
<doc>Fails if the result of the given ``call`` does not
match the expected outcome.</doc>
<arguments>
<arg>Success</arg>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<kw name="Run Keyword" library="BuiltIn">
<doc>Executes the given keyword with the given arguments.</doc>
<arguments>
<arg>${call}</arg>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<kw name="Read Trace" library="PHILIP">
<doc>Reads event trace from the dut</doc>
<arguments>
<arg>@{args}</arg>
<arg>&amp;{kwargs}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.039" endtime="20201030 11:53:47.344"></status>
</kw>
<msg timestamp="20201030 11:53:47.347" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098097583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.036" endtime="20201030 11:53:47.347"></status>
</kw>
<kw name="Set Suite Variable" library="BuiltIn">
<doc>Makes a variable available everywhere within the scope of the current suite.</doc>
<arguments>
<arg>${RESULT}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.354" level="INFO">${RESULT} = {'cmd': 'read_trace()', 'result': 'Success', 'data': [{'time': 3.098097583, 'source': 'DUT_IC', 'event': 'RISING', 'diff': 0, 'source_diff': 0}, {'time': 3.198510972, 'source': 'DUT_IC', 'event': 'FAL...</msg>
<status status="PASS" starttime="20201030 11:53:47.348" endtime="20201030 11:53:47.355"></status>
</kw>
<kw name="Should Contain" library="BuiltIn">
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<arguments>
<arg>${RESULT['result']}</arg>
<arg>${expect}</arg>
</arguments>
<status status="PASS" starttime="20201030 11:53:47.356" endtime="20201030 11:53:47.357"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.031" endtime="20201030 11:53:47.358"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.028" endtime="20201030 11:53:47.358"></status>
</kw>
<kw name="Filter Trace" library="DutDeviceIf">
<doc>Filter the given data from a trace</doc>
<arguments>
<arg>trace=${RESULT['data']}</arg>
<arg>select_vals=FALLING</arg>
<arg>data_keys=diff</arg>
</arguments>
<assign>
<var>${FILTERED}</var>
</assign>
<msg timestamp="20201030 11:53:47.362" level="INFO">${FILTERED} = [{'diff': 0.10041338899999985}, {'diff': 5.419999999922709e-07}, {'diff': 0.10050791699999984}, {'diff': 0.0995143340000002}, {'diff': 4.73000000056345e-07}, {'diff': 4.73000000056345e-07}, {'diff': 4...</msg>
<status status="PASS" starttime="20201030 11:53:47.359" endtime="20201030 11:53:47.362"></status>
</kw>
<kw name="Compress Result" library="DutDeviceIf">
<doc>Only use with data containing dicts as follows:</doc>
<arguments>
<arg>${FILTERED}</arg>
</arguments>
<assign>
<var>${RESULT}</var>
</assign>
<msg timestamp="20201030 11:53:47.367" level="INFO">${RESULT} = {'diff': [0.10041338899999985, 5.419999999922709e-07, 0.10050791699999984, 0.0995143340000002, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.41999999548181...</msg>
<status status="PASS" starttime="20201030 11:53:47.363" endtime="20201030 11:53:47.367"></status>
</kw>
<kw name="Record Property" library="util.keywords">
<doc>Adds the given property in output</doc>
<arguments>
<arg>trace</arg>
<arg>${RESULT['diff']}</arg>
</arguments>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>NAME: ${name}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.371" level="INFO">NAME: trace</msg>
<status status="PASS" starttime="20201030 11:53:47.370" endtime="20201030 11:53:47.371"></status>
</kw>
<kw name="Log" library="BuiltIn">
<doc>Logs the given message with the given level.</doc>
<arguments>
<arg>VALUE: ${value}</arg>
</arguments>
<msg timestamp="20201030 11:53:47.373" level="INFO">VALUE: [0.10041338899999985, 5.419999999922709e-07, 0.10050791699999984, 0.0995143340000002, 4.73000000056345e-07, 4.73000000056345e-07, 4.73000000056345e-07, 5.419999999922709e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 5.409999994654413e-07, 4.7200000086178306e-07, 4.7199999997360464e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 4.73000000056345e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.410000003536197e-07, 5.419999995481817e-07, 5.419999995481817e-07, 5.419999995481817e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 5.419999995481817e-07, 5.410000003536197e-07, 5.409999994654413e-07, 5.420000004363601e-07, 5.420000004363601e-07, 5.419999995481817e-07, 5.420000004363601e-07, 5.410000003536197e-07, 5.420000004363601e-07, 5.410000003536197e-07, 4.729999991681666e-07, 5.420000004363601e-07, 4.7199999997360464e-07, 4.7199999997360464e-07, 0.1000113340000004, 0.10001092999999983, 0.10001094399999921]</msg>
<status status="PASS" starttime="20201030 11:53:47.372" endtime="20201030 11:53:47.374"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:47.368" endtime="20201030 11:53:47.375"></status>
</kw>
<status status="PASS" starttime="20201030 11:53:40.825" endtime="20201030 11:53:47.375"></status>
</kw>
<tags>
<tag>APP_tests_xtimer_benchmarks</tag>
<tag>BOARD_arduino-due</tag>
</tags>
<status status="PASS" starttime="20201030 11:53:37.723" endtime="20201030 11:53:47.376" critical="yes"></status>
</test>
<status status="PASS" starttime="20201030 11:52:44.954" endtime="20201030 11:53:47.383"></status>
</suite>
<metadata>
<item name="RIOT-Application">tests_xtimer_benchmarks</item>
<item name="RIOT-Board">arduino-due</item>
<item name="RIOT-Version">2020.10-devel-1584-g3cd31-forupstream_xtimer_simplification_rebased</item>
</metadata>
<status status="PASS" starttime="20201030 11:49:55.055" endtime="20201030 11:53:47.417"></status>
</suite>
<statistics>
<total>
<stat pass="18" fail="0">Critical Tests</stat>
<stat pass="18" fail="0">All Tests</stat>
</total>
<tag>
<stat pass="0" fail="0" info="non-critical">skip</stat>
<stat pass="0" fail="0" info="non-critical">warn-if-failed</stat>
<stat pass="18" fail="0">APP_tests_xtimer_benchmarks</stat>
<stat pass="18" fail="0">BOARD_arduino-due</stat>
<stat pass="10" fail="0">dev</stat>
</tag>
<suite>
<stat pass="18" fail="0" id="s1" name="tests_xtimer_benchmarks">tests_xtimer_benchmarks</stat>
<stat pass="1" fail="0" id="s1-s1" name="Timer Version">tests_xtimer_benchmarks.Timer Version</stat>
<stat pass="9" fail="0" id="s1-s2" name="Timer Overhead">tests_xtimer_benchmarks.Timer Overhead</stat>
<stat pass="2" fail="0" id="s1-s3" name="Sleep Accuracy">tests_xtimer_benchmarks.Sleep Accuracy</stat>
<stat pass="6" fail="0" id="s1-s4" name="Sleep Jitter">tests_xtimer_benchmarks.Sleep Jitter</stat>
</suite>
</statistics>
<errors>
</errors>
</robot>
